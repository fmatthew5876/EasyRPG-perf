<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="550" onload="init(evt)" viewBox="0 0 1200 550" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="550.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="533" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="533" > </text>
<g id="frames">
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 1.52%)</title><rect x="868.2" y="277" width="17.9" height="15.0" fill="rgb(254,203,50)" rx="2" ry="2" />
<text  x="871.18" y="287.5" ></text>
</g>
<g >
<title>TypeReader&lt;RPG::Animation, (Category::Index)1&gt;::ReadLcf (28 samples, 42.42%)</title><rect x="242.4" y="309" width="500.6" height="15.0" fill="rgb(239,172,49)" rx="2" ry="2" />
<text  x="245.42" y="319.5" >TypeReader&lt;RPG::Animation, (Category::Index)1&gt;::ReadLcf</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;RPG::AnimationCellData&gt; &gt;::allocate (1 samples, 1.52%)</title><rect x="671.5" y="133" width="17.9" height="15.0" fill="rgb(205,151,52)" rx="2" ry="2" />
<text  x="674.52" y="143.5" ></text>
</g>
<g >
<title>[[heap]] (1 samples, 1.52%)</title><rect x="10.0" y="469" width="17.9" height="15.0" fill="rgb(246,127,10)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>TypeReader&lt;RPG::AnimationTiming, (Category::Index)1&gt;::ReadLcf (2 samples, 3.03%)</title><rect x="707.3" y="229" width="35.7" height="15.0" fill="rgb(216,223,9)" rx="2" ry="2" />
<text  x="710.27" y="239.5" >Typ..</text>
</g>
<g >
<title>TypedField&lt;RPG::Database, std::vector&lt;RPG::Animation, std::allocator&lt;RPG::Animation&gt; &gt; &gt;::ReadLcf (28 samples, 42.42%)</title><rect x="242.4" y="357" width="500.6" height="15.0" fill="rgb(232,60,13)" rx="2" ry="2" />
<text  x="245.42" y="367.5" >TypedField&lt;RPG::Database, std::vector&lt;RPG::Animation, std::allocator..</text>
</g>
<g >
<title>TypeReader&lt;std::vector&lt;RPG::Class, std::allocator&lt;RPG::Class&gt; &gt;, (Category::Index)1&gt;::ReadLcf (1 samples, 1.52%)</title><rect x="743.0" y="341" width="17.9" height="15.0" fill="rgb(224,105,3)" rx="2" ry="2" />
<text  x="746.03" y="351.5" ></text>
</g>
<g >
<title>TypeReader&lt;int, (Category::Index)0&gt;::ReadLcf (5 samples, 7.58%)</title><rect x="546.4" y="133" width="89.4" height="15.0" fill="rgb(234,158,2)" rx="2" ry="2" />
<text  x="549.36" y="143.5" >TypeReader..</text>
</g>
<g >
<title>Struct&lt;RPG::Troop&gt;::ReadLcf (1 samples, 1.52%)</title><rect x="814.5" y="325" width="17.9" height="15.0" fill="rgb(252,229,32)" rx="2" ry="2" />
<text  x="817.55" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Animation, std::allocator&lt;RPG::Animation&gt; &gt;::~vector (1 samples, 1.52%)</title><rect x="206.7" y="341" width="17.8" height="15.0" fill="rgb(224,100,27)" rx="2" ry="2" />
<text  x="209.67" y="351.5" ></text>
</g>
<g >
<title>Struct&lt;RPG::AnimationTiming&gt;::ReadLcf (3 samples, 4.55%)</title><rect x="689.4" y="245" width="53.6" height="15.0" fill="rgb(218,99,4)" rx="2" ry="2" />
<text  x="692.39" y="255.5" >Struc..</text>
</g>
<g >
<title>Struct&lt;RPG::Actor&gt;::ReadLcf (1 samples, 1.52%)</title><rect x="224.5" y="293" width="17.9" height="15.0" fill="rgb(246,32,26)" rx="2" ry="2" />
<text  x="227.55" y="303.5" ></text>
</g>
<g >
<title>LcfReader::Read0 (4 samples, 6.06%)</title><rect x="564.2" y="85" width="71.6" height="15.0" fill="rgb(223,129,11)" rx="2" ry="2" />
<text  x="567.24" y="95.5" >LcfReade..</text>
</g>
<g >
<title>TypedField&lt;RPG::Enemy, std::vector&lt;RPG::EnemyAction, std::allocator&lt;RPG::EnemyAction&gt; &gt; &gt;::ReadLcf (2 samples, 3.03%)</title><rect x="760.9" y="277" width="35.8" height="15.0" fill="rgb(226,173,26)" rx="2" ry="2" />
<text  x="763.91" y="287.5" >Typ..</text>
</g>
<g >
<title>filemap_map_pages (1 samples, 1.52%)</title><rect x="832.4" y="277" width="17.9" height="15.0" fill="rgb(238,186,33)" rx="2" ry="2" />
<text  x="835.42" y="287.5" ></text>
</g>
<g >
<title>TypeReader&lt;std::vector&lt;RPG::TroopPage, std::allocator&lt;RPG::TroopPage&gt; &gt;, (Category::Index)1&gt;::ReadLcf (1 samples, 1.52%)</title><rect x="814.5" y="261" width="17.9" height="15.0" fill="rgb(227,134,5)" rx="2" ry="2" />
<text  x="817.55" y="271.5" ></text>
</g>
<g >
<title>TypedField&lt;RPG::Animation, std::vector&lt;RPG::AnimationFrame, std::allocator&lt;RPG::AnimationFrame&gt; &gt; &gt;::ReadLcf (25 samples, 37.88%)</title><rect x="242.4" y="277" width="447.0" height="15.0" fill="rgb(241,100,23)" rx="2" ry="2" />
<text  x="245.42" y="287.5" >TypedField&lt;RPG::Animation, std::vector&lt;RPG::AnimationFrame, s..</text>
</g>
<g >
<title>_dl_relocate_object (4 samples, 6.06%)</title><rect x="886.1" y="389" width="71.5" height="15.0" fill="rgb(242,41,0)" rx="2" ry="2" />
<text  x="889.06" y="399.5" >_dl_relo..</text>
</g>
<g >
<title>std::istream::sentry::sentry (1 samples, 1.52%)</title><rect x="188.8" y="453" width="17.9" height="15.0" fill="rgb(221,1,30)" rx="2" ry="2" />
<text  x="191.79" y="463.5" ></text>
</g>
<g >
<title>elf_machine_rela_relative (1 samples, 1.52%)</title><rect x="939.7" y="357" width="17.9" height="15.0" fill="rgb(246,210,33)" rx="2" ry="2" />
<text  x="942.70" y="367.5" ></text>
</g>
<g >
<title>Struct&lt;RPG::Animation&gt;::ReadLcf (28 samples, 42.42%)</title><rect x="242.4" y="325" width="500.6" height="15.0" fill="rgb(253,78,42)" rx="2" ry="2" />
<text  x="245.42" y="335.5" >Struct&lt;RPG::Animation&gt;::ReadLcf</text>
</g>
<g >
<title>std::__uninitialized_default_n_a&lt;RPG::Item*, unsigned long, RPG::Item&gt; (1 samples, 1.52%)</title><rect x="796.7" y="277" width="17.8" height="15.0" fill="rgb(222,90,11)" rx="2" ry="2" />
<text  x="799.67" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::AnimationFrame, std::allocator&lt;RPG::AnimationFrame&gt; &gt;::~vector (1 samples, 1.52%)</title><rect x="206.7" y="245" width="17.8" height="15.0" fill="rgb(224,196,14)" rx="2" ry="2" />
<text  x="209.67" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_1&lt;false&gt;::__uninit_default_n&lt;RPG::Item*, unsigned long&gt; (1 samples, 1.52%)</title><rect x="796.7" y="245" width="17.8" height="15.0" fill="rgb(227,223,34)" rx="2" ry="2" />
<text  x="799.67" y="255.5" ></text>
</g>
<g >
<title>RPG::AnimationFrame::~AnimationFrame (1 samples, 1.52%)</title><rect x="206.7" y="165" width="17.8" height="15.0" fill="rgb(208,50,14)" rx="2" ry="2" />
<text  x="209.67" y="175.5" ></text>
</g>
<g >
<title>TypeReader&lt;std::vector&lt;RPG::EnemyAction, std::allocator&lt;RPG::EnemyAction&gt; &gt;, (Category::Index)1&gt;::ReadLcf (2 samples, 3.03%)</title><rect x="760.9" y="261" width="35.8" height="15.0" fill="rgb(249,175,6)" rx="2" ry="2" />
<text  x="763.91" y="271.5" >Typ..</text>
</g>
<g >
<title>TypeReader&lt;RPG::Enemy, (Category::Index)1&gt;::ReadLcf (2 samples, 3.03%)</title><rect x="760.9" y="309" width="35.8" height="15.0" fill="rgb(252,199,50)" rx="2" ry="2" />
<text  x="763.91" y="319.5" >Typ..</text>
</g>
<g >
<title>do_syscall_64 (7 samples, 10.61%)</title><rect x="1064.8" y="453" width="125.2" height="15.0" fill="rgb(246,12,29)" rx="2" ry="2" />
<text  x="1067.85" y="463.5" >do_syscall_64</text>
</g>
<g >
<title>do_lookup_x (1 samples, 1.52%)</title><rect x="921.8" y="325" width="17.9" height="15.0" fill="rgb(206,104,39)" rx="2" ry="2" />
<text  x="924.82" y="335.5" ></text>
</g>
<g >
<title>__run_exit_handlers (1 samples, 1.52%)</title><rect x="206.7" y="421" width="17.8" height="15.0" fill="rgb(207,93,38)" rx="2" ry="2" />
<text  x="209.67" y="431.5" ></text>
</g>
<g >
<title>LcfReader::ReadInt (9 samples, 13.64%)</title><rect x="385.5" y="149" width="160.9" height="15.0" fill="rgb(217,92,52)" rx="2" ry="2" />
<text  x="388.45" y="159.5" >LcfReader::ReadInt</text>
</g>
<g >
<title>TypeReader&lt;std::vector&lt;RPG::Troop, std::allocator&lt;RPG::Troop&gt; &gt;, (Category::Index)1&gt;::ReadLcf (1 samples, 1.52%)</title><rect x="814.5" y="341" width="17.9" height="15.0" fill="rgb(235,80,37)" rx="2" ry="2" />
<text  x="817.55" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;RPG::AnimationCellData, std::allocator&lt;RPG::AnimationCellData&gt; &gt;::_M_allocate (1 samples, 1.52%)</title><rect x="671.5" y="149" width="17.9" height="15.0" fill="rgb(218,175,51)" rx="2" ry="2" />
<text  x="674.52" y="159.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry@plt (1 samples, 1.52%)</title><rect x="760.9" y="133" width="17.9" height="15.0" fill="rgb(214,165,30)" rx="2" ry="2" />
<text  x="763.91" y="143.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;RPG::AnimationFrame*&gt; (1 samples, 1.52%)</title><rect x="206.7" y="213" width="17.8" height="15.0" fill="rgb(205,68,11)" rx="2" ry="2" />
<text  x="209.67" y="223.5" ></text>
</g>
<g >
<title>TypeReader&lt;RPG::Troop, (Category::Index)1&gt;::ReadLcf (1 samples, 1.52%)</title><rect x="814.5" y="309" width="17.9" height="15.0" fill="rgb(206,121,26)" rx="2" ry="2" />
<text  x="817.55" y="319.5" ></text>
</g>
<g >
<title>LcfReader::ReadInt (1 samples, 1.52%)</title><rect x="725.2" y="149" width="17.8" height="15.0" fill="rgb(233,80,25)" rx="2" ry="2" />
<text  x="728.15" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;RPG::AnimationCellData&gt; &gt;::deallocate (1 samples, 1.52%)</title><rect x="206.7" y="101" width="17.8" height="15.0" fill="rgb(236,215,36)" rx="2" ry="2" />
<text  x="209.67" y="111.5" ></text>
</g>
<g >
<title>Struct&lt;RPG::EnemyAction&gt;::ReadLcf (1 samples, 1.52%)</title><rect x="760.9" y="213" width="17.9" height="15.0" fill="rgb(247,137,52)" rx="2" ry="2" />
<text  x="763.91" y="223.5" ></text>
</g>
<g >
<title>LcfReader::Eof (1 samples, 1.52%)</title><rect x="367.6" y="149" width="17.9" height="15.0" fill="rgb(219,220,24)" rx="2" ry="2" />
<text  x="370.58" y="159.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 1.52%)</title><rect x="796.7" y="117" width="17.8" height="15.0" fill="rgb(254,162,41)" rx="2" ry="2" />
<text  x="799.67" y="127.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 1.52%)</title><rect x="832.4" y="325" width="17.9" height="15.0" fill="rgb(247,66,43)" rx="2" ry="2" />
<text  x="835.42" y="335.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (4 samples, 6.06%)</title><rect x="474.8" y="85" width="71.6" height="15.0" fill="rgb(208,63,47)" rx="2" ry="2" />
<text  x="477.85" y="95.5" >std::bas..</text>
</g>
<g >
<title>std::istream::read (1 samples, 1.52%)</title><rect x="725.2" y="101" width="17.8" height="15.0" fill="rgb(238,129,19)" rx="2" ry="2" />
<text  x="728.15" y="111.5" ></text>
</g>
<g >
<title>dl_new_hash (1 samples, 1.52%)</title><rect x="903.9" y="325" width="17.9" height="15.0" fill="rgb(205,67,45)" rx="2" ry="2" />
<text  x="906.94" y="335.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (2 samples, 3.03%)</title><rect x="903.9" y="341" width="35.8" height="15.0" fill="rgb(246,172,47)" rx="2" ry="2" />
<text  x="906.94" y="351.5" >_dl..</text>
</g>
<g >
<title>handle_mm_fault (1 samples, 1.52%)</title><rect x="796.7" y="165" width="17.8" height="15.0" fill="rgb(230,121,53)" rx="2" ry="2" />
<text  x="799.67" y="175.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;RPG::AnimationFrame&gt; (1 samples, 1.52%)</title><rect x="206.7" y="181" width="17.8" height="15.0" fill="rgb(229,145,28)" rx="2" ry="2" />
<text  x="209.67" y="191.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 1.52%)</title><rect x="832.4" y="341" width="17.9" height="15.0" fill="rgb(252,148,29)" rx="2" ry="2" />
<text  x="835.42" y="351.5" ></text>
</g>
<g >
<title>RPG::Database::~Database (1 samples, 1.52%)</title><rect x="206.7" y="357" width="17.8" height="15.0" fill="rgb(247,21,2)" rx="2" ry="2" />
<text  x="209.67" y="367.5" ></text>
</g>
<g >
<title>std::istream::read (5 samples, 7.58%)</title><rect x="457.0" y="101" width="89.4" height="15.0" fill="rgb(229,79,11)" rx="2" ry="2" />
<text  x="459.97" y="111.5" >std::istre..</text>
</g>
<g >
<title>do_exit (1 samples, 1.52%)</title><rect x="975.5" y="405" width="17.8" height="15.0" fill="rgb(237,92,31)" rx="2" ry="2" />
<text  x="978.45" y="415.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 1.52%)</title><rect x="975.5" y="277" width="17.8" height="15.0" fill="rgb(215,97,53)" rx="2" ry="2" />
<text  x="978.45" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 10.61%)</title><rect x="1064.8" y="469" width="125.2" height="15.0" fill="rgb(224,184,18)" rx="2" ry="2" />
<text  x="1067.85" y="479.5" >entry_SYSCALL_6..</text>
</g>
<g >
<title>Struct&lt;RPG::TroopPage&gt;::ReadLcf (1 samples, 1.52%)</title><rect x="814.5" y="213" width="17.9" height="15.0" fill="rgb(250,182,12)" rx="2" ry="2" />
<text  x="817.55" y="223.5" ></text>
</g>
<g >
<title>LcfReader::Read0 (1 samples, 1.52%)</title><rect x="743.0" y="245" width="17.9" height="15.0" fill="rgb(210,186,45)" rx="2" ry="2" />
<text  x="746.03" y="255.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 1.52%)</title><rect x="975.5" y="421" width="17.8" height="15.0" fill="rgb(249,100,1)" rx="2" ry="2" />
<text  x="978.45" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EnemyAction, std::allocator&lt;RPG::EnemyAction&gt; &gt;::resize (1 samples, 1.52%)</title><rect x="778.8" y="229" width="17.9" height="15.0" fill="rgb(232,89,35)" rx="2" ry="2" />
<text  x="781.79" y="239.5" ></text>
</g>
<g >
<title>TypeReader&lt;std::vector&lt;RPG::Item, std::allocator&lt;RPG::Item&gt; &gt;, (Category::Index)1&gt;::ReadLcf (1 samples, 1.52%)</title><rect x="796.7" y="341" width="17.8" height="15.0" fill="rgb(234,170,34)" rx="2" ry="2" />
<text  x="799.67" y="351.5" ></text>
</g>
<g >
<title>Struct&lt;RPG::AnimationCellData&gt;::ReadLcf (21 samples, 31.82%)</title><rect x="313.9" y="197" width="375.5" height="15.0" fill="rgb(252,202,30)" rx="2" ry="2" />
<text  x="316.94" y="207.5" >Struct&lt;RPG::AnimationCellData&gt;::ReadLcf</text>
</g>
<g >
<title>shift_arg_pages (1 samples, 1.52%)</title><rect x="957.6" y="357" width="17.9" height="15.0" fill="rgb(254,211,1)" rx="2" ry="2" />
<text  x="960.58" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::AnimationCellData, std::allocator&lt;RPG::AnimationCellData&gt; &gt;::~vector (1 samples, 1.52%)</title><rect x="206.7" y="149" width="17.8" height="15.0" fill="rgb(208,42,35)" rx="2" ry="2" />
<text  x="209.67" y="159.5" ></text>
</g>
<g >
<title>LcfReader::Read0 (8 samples, 12.12%)</title><rect x="403.3" y="133" width="143.1" height="15.0" fill="rgb(224,138,27)" rx="2" ry="2" />
<text  x="406.33" y="143.5" >LcfReader::Read0</text>
</g>
<g >
<title>Struct&lt;RPG::AnimationFrame&gt;::ReadLcf (25 samples, 37.88%)</title><rect x="242.4" y="245" width="447.0" height="15.0" fill="rgb(231,153,28)" rx="2" ry="2" />
<text  x="245.42" y="255.5" >Struct&lt;RPG::AnimationFrame&gt;::ReadLcf</text>
</g>
<g >
<title>TypedField&lt;RPG::Database, std::vector&lt;RPG::Item, std::allocator&lt;RPG::Item&gt; &gt; &gt;::ReadLcf (1 samples, 1.52%)</title><rect x="796.7" y="357" width="17.8" height="15.0" fill="rgb(237,120,3)" rx="2" ry="2" />
<text  x="799.67" y="367.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 1.52%)</title><rect x="778.8" y="85" width="17.9" height="15.0" fill="rgb(224,134,4)" rx="2" ry="2" />
<text  x="781.79" y="95.5" ></text>
</g>
<g >
<title>TypeReader&lt;RPG::AnimationCellData, (Category::Index)1&gt;::ReadLcf (19 samples, 28.79%)</title><rect x="331.8" y="181" width="339.7" height="15.0" fill="rgb(254,78,19)" rx="2" ry="2" />
<text  x="334.82" y="191.5" >TypeReader&lt;RPG::AnimationCellData, (Category:..</text>
</g>
<g >
<title>TypedField&lt;RPG::Database, std::vector&lt;RPG::Enemy, std::allocator&lt;RPG::Enemy&gt; &gt; &gt;::ReadLcf (2 samples, 3.03%)</title><rect x="760.9" y="357" width="35.8" height="15.0" fill="rgb(224,96,12)" rx="2" ry="2" />
<text  x="763.91" y="367.5" >Typ..</text>
</g>
<g >
<title>search_binary_handler (7 samples, 10.61%)</title><rect x="1064.8" y="405" width="125.2" height="15.0" fill="rgb(241,29,12)" rx="2" ry="2" />
<text  x="1067.85" y="415.5" >search_binary_h..</text>
</g>
<g >
<title>std::istream::sentry::sentry (1 samples, 1.52%)</title><rect x="617.9" y="37" width="17.9" height="15.0" fill="rgb(210,1,20)" rx="2" ry="2" />
<text  x="620.88" y="47.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 1.52%)</title><rect x="796.7" y="197" width="17.8" height="15.0" fill="rgb(209,29,28)" rx="2" ry="2" />
<text  x="799.67" y="207.5" ></text>
</g>
<g >
<title>TypedField&lt;RPG::Database, std::vector&lt;RPG::Class, std::allocator&lt;RPG::Class&gt; &gt; &gt;::ReadLcf (1 samples, 1.52%)</title><rect x="743.0" y="357" width="17.9" height="15.0" fill="rgb(228,188,17)" rx="2" ry="2" />
<text  x="746.03" y="367.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 1.52%)</title><rect x="975.5" y="261" width="17.8" height="15.0" fill="rgb(214,162,50)" rx="2" ry="2" />
<text  x="978.45" y="271.5" ></text>
</g>
<g >
<title>apparmor_file_mprotect (1 samples, 1.52%)</title><rect x="868.2" y="213" width="17.9" height="15.0" fill="rgb(248,152,22)" rx="2" ry="2" />
<text  x="871.18" y="223.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 1.52%)</title><rect x="796.7" y="101" width="17.8" height="15.0" fill="rgb(222,214,35)" rx="2" ry="2" />
<text  x="799.67" y="111.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::eof (1 samples, 1.52%)</title><rect x="367.6" y="133" width="17.9" height="15.0" fill="rgb(254,22,6)" rx="2" ry="2" />
<text  x="370.58" y="143.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 1.52%)</title><rect x="975.5" y="373" width="17.8" height="15.0" fill="rgb(251,115,42)" rx="2" ry="2" />
<text  x="978.45" y="383.5" ></text>
</g>
<g >
<title>RPG::Animation::~Animation (1 samples, 1.52%)</title><rect x="206.7" y="261" width="17.8" height="15.0" fill="rgb(230,94,10)" rx="2" ry="2" />
<text  x="209.67" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 3.03%)</title><rect x="957.6" y="453" width="35.7" height="15.0" fill="rgb(224,180,11)" rx="2" ry="2" />
<text  x="960.58" y="463.5" >do_..</text>
</g>
<g >
<title>LcfReader::ReadInt (1 samples, 1.52%)</title><rect x="689.4" y="213" width="17.9" height="15.0" fill="rgb(236,220,44)" rx="2" ry="2" />
<text  x="692.39" y="223.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (1 samples, 1.52%)</title><rect x="45.8" y="453" width="17.8" height="15.0" fill="rgb(218,20,16)" rx="2" ry="2" />
<text  x="48.76" y="463.5" ></text>
</g>
<g >
<title>_dl_start (6 samples, 9.09%)</title><rect x="850.3" y="453" width="107.3" height="15.0" fill="rgb(221,68,22)" rx="2" ry="2" />
<text  x="853.30" y="463.5" >_dl_start</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;RPG::AnimationCellData&gt;::allocate (1 samples, 1.52%)</title><rect x="671.5" y="117" width="17.9" height="15.0" fill="rgb(250,140,24)" rx="2" ry="2" />
<text  x="674.52" y="127.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;RPG::Animation*, RPG::Animation&gt; (1 samples, 1.52%)</title><rect x="206.7" y="325" width="17.8" height="15.0" fill="rgb(225,84,32)" rx="2" ry="2" />
<text  x="209.67" y="335.5" ></text>
</g>
<g >
<title>Struct&lt;RPG::AnimationCellData&gt;::ReadLcf (19 samples, 28.79%)</title><rect x="331.8" y="165" width="339.7" height="15.0" fill="rgb(218,225,54)" rx="2" ry="2" />
<text  x="334.82" y="175.5" >Struct&lt;RPG::AnimationCellData&gt;::ReadLcf</text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 1.52%)</title><rect x="796.7" y="133" width="17.8" height="15.0" fill="rgb(213,14,53)" rx="2" ry="2" />
<text  x="799.67" y="143.5" ></text>
</g>
<g >
<title>Struct&lt;RPG::EnemyAction&gt;::ReadLcf (2 samples, 3.03%)</title><rect x="760.9" y="245" width="35.8" height="15.0" fill="rgb(248,211,10)" rx="2" ry="2" />
<text  x="763.91" y="255.5" >Str..</text>
</g>
<g >
<title>LcfReader::ReadInt (1 samples, 1.52%)</title><rect x="707.3" y="197" width="17.9" height="15.0" fill="rgb(206,198,36)" rx="2" ry="2" />
<text  x="710.27" y="207.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 1.52%)</title><rect x="975.5" y="325" width="17.8" height="15.0" fill="rgb(231,73,35)" rx="2" ry="2" />
<text  x="978.45" y="335.5" ></text>
</g>
<g >
<title>std::istream::read (1 samples, 1.52%)</title><rect x="993.3" y="469" width="17.9" height="15.0" fill="rgb(254,102,15)" rx="2" ry="2" />
<text  x="996.33" y="479.5" ></text>
</g>
<g >
<title>[anon] (1 samples, 1.52%)</title><rect x="117.3" y="469" width="17.9" height="15.0" fill="rgb(211,202,45)" rx="2" ry="2" />
<text  x="120.27" y="479.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 1.52%)</title><rect x="778.8" y="117" width="17.9" height="15.0" fill="rgb(252,142,48)" rx="2" ry="2" />
<text  x="781.79" y="127.5" ></text>
</g>
<g >
<title>do_wp_page (1 samples, 1.52%)</title><rect x="939.7" y="261" width="17.9" height="15.0" fill="rgb(214,172,41)" rx="2" ry="2" />
<text  x="942.70" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 3.03%)</title><rect x="957.6" y="469" width="35.7" height="15.0" fill="rgb(228,103,25)" rx="2" ry="2" />
<text  x="960.58" y="479.5" >ent..</text>
</g>
<g >
<title>std::istream::sentry::sentry (1 samples, 1.52%)</title><rect x="725.2" y="85" width="17.8" height="15.0" fill="rgb(230,111,7)" rx="2" ry="2" />
<text  x="728.15" y="95.5" ></text>
</g>
<g >
<title>Struct&lt;RPG::TroopPage&gt;::ReadLcf (1 samples, 1.52%)</title><rect x="814.5" y="245" width="17.9" height="15.0" fill="rgb(208,157,4)" rx="2" ry="2" />
<text  x="817.55" y="255.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (7 samples, 10.61%)</title><rect x="1064.8" y="325" width="125.2" height="15.0" fill="rgb(213,6,44)" rx="2" ry="2" />
<text  x="1067.85" y="335.5" >perf_pmu_enable..</text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, Field&lt;RPG::AnimationCellData&gt; const*&gt;, std::_Select1st&lt;std::pair&lt;int const, Field&lt;RPG::AnimationCellData&gt; const*&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, Field&lt;RPG::AnimationCellData&gt; const*&gt; &gt; &gt;::find (2 samples, 3.03%)</title><rect x="635.8" y="133" width="35.7" height="15.0" fill="rgb(216,136,14)" rx="2" ry="2" />
<text  x="638.76" y="143.5" >std..</text>
</g>
<g >
<title>std::_Vector_base&lt;RPG::AnimationCellData, std::allocator&lt;RPG::AnimationCellData&gt; &gt;::~_Vector_base (1 samples, 1.52%)</title><rect x="206.7" y="133" width="17.8" height="15.0" fill="rgb(220,72,45)" rx="2" ry="2" />
<text  x="209.67" y="143.5" ></text>
</g>
<g >
<title>__get_free_pages (1 samples, 1.52%)</title><rect x="975.5" y="293" width="17.8" height="15.0" fill="rgb(219,71,1)" rx="2" ry="2" />
<text  x="978.45" y="303.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (7 samples, 10.61%)</title><rect x="1064.8" y="293" width="125.2" height="15.0" fill="rgb(245,164,33)" rx="2" ry="2" />
<text  x="1067.85" y="303.5" >intel_tfa_pmu_e..</text>
</g>
<g >
<title>_dl_map_object_deps (1 samples, 1.52%)</title><rect x="868.2" y="389" width="17.9" height="15.0" fill="rgb(218,117,40)" rx="2" ry="2" />
<text  x="871.18" y="399.5" ></text>
</g>
<g >
<title>load_elf_binary (7 samples, 10.61%)</title><rect x="1064.8" y="389" width="125.2" height="15.0" fill="rgb(242,229,4)" rx="2" ry="2" />
<text  x="1067.85" y="399.5" >load_elf_binary</text>
</g>
<g >
<title>wp_page_copy (1 samples, 1.52%)</title><rect x="939.7" y="245" width="17.9" height="15.0" fill="rgb(225,96,19)" rx="2" ry="2" />
<text  x="942.70" y="255.5" ></text>
</g>
<g >
<title>TypeReader&lt;RPG::AnimationFrame, (Category::Index)1&gt;::ReadLcf (25 samples, 37.88%)</title><rect x="242.4" y="229" width="447.0" height="15.0" fill="rgb(222,18,3)" rx="2" ry="2" />
<text  x="245.42" y="239.5" >TypeReader&lt;RPG::AnimationFrame, (Category::Index)1&gt;::ReadLcf</text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (1 samples, 1.52%)</title><rect x="528.5" y="69" width="17.9" height="15.0" fill="rgb(229,19,53)" rx="2" ry="2" />
<text  x="531.48" y="79.5" ></text>
</g>
<g >
<title>perf (7 samples, 10.61%)</title><rect x="1064.8" y="485" width="125.2" height="15.0" fill="rgb(226,93,1)" rx="2" ry="2" />
<text  x="1067.85" y="495.5" >perf</text>
</g>
<g >
<title>__do_execve_file.isra.41 (7 samples, 10.61%)</title><rect x="1064.8" y="421" width="125.2" height="15.0" fill="rgb(236,218,49)" rx="2" ry="2" />
<text  x="1067.85" y="431.5" >__do_execve_fil..</text>
</g>
<g >
<title>elf_dynamic_do_Rela (4 samples, 6.06%)</title><rect x="886.1" y="373" width="71.5" height="15.0" fill="rgb(251,139,15)" rx="2" ry="2" />
<text  x="889.06" y="383.5" >elf_dyna..</text>
</g>
<g >
<title>_dl_map_object (1 samples, 1.52%)</title><rect x="868.2" y="341" width="17.9" height="15.0" fill="rgb(217,90,16)" rx="2" ry="2" />
<text  x="871.18" y="351.5" ></text>
</g>
<g >
<title>_dl_start_final (6 samples, 9.09%)</title><rect x="850.3" y="437" width="107.3" height="15.0" fill="rgb(250,228,4)" rx="2" ry="2" />
<text  x="853.30" y="447.5" >_dl_start_final</text>
</g>
<g >
<title>Struct&lt;RPG::Item&gt;::ReadLcf (1 samples, 1.52%)</title><rect x="796.7" y="325" width="17.8" height="15.0" fill="rgb(229,94,1)" rx="2" ry="2" />
<text  x="799.67" y="335.5" ></text>
</g>
<g >
<title>Struct&lt;RPG::Animation&gt;::ReadLcf (28 samples, 42.42%)</title><rect x="242.4" y="293" width="500.6" height="15.0" fill="rgb(240,144,42)" rx="2" ry="2" />
<text  x="245.42" y="303.5" >Struct&lt;RPG::Animation&gt;::ReadLcf</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;RPG::EnemyAction&gt;::allocate (1 samples, 1.52%)</title><rect x="778.8" y="165" width="17.9" height="15.0" fill="rgb(250,94,42)" rx="2" ry="2" />
<text  x="781.79" y="175.5" ></text>
</g>
<g >
<title>LcfReader::ReadInt (3 samples, 4.55%)</title><rect x="260.3" y="197" width="53.6" height="15.0" fill="rgb(208,70,22)" rx="2" ry="2" />
<text  x="263.30" y="207.5" >LcfRe..</text>
</g>
<g >
<title>do_mprotect_pkey (1 samples, 1.52%)</title><rect x="868.2" y="229" width="17.9" height="15.0" fill="rgb(251,45,30)" rx="2" ry="2" />
<text  x="871.18" y="239.5" ></text>
</g>
<g >
<title>Primitive&lt;int&gt;::ReadLcf (1 samples, 1.52%)</title><rect x="725.2" y="165" width="17.8" height="15.0" fill="rgb(251,118,43)" rx="2" ry="2" />
<text  x="728.15" y="175.5" ></text>
</g>
<g >
<title>IDReaderT&lt;RPG::AnimationTiming, true&gt;::ReadID (1 samples, 1.52%)</title><rect x="689.4" y="229" width="17.9" height="15.0" fill="rgb(244,95,19)" rx="2" ry="2" />
<text  x="692.39" y="239.5" ></text>
</g>
<g >
<title>operator new (1 samples, 1.52%)</title><rect x="778.8" y="149" width="17.9" height="15.0" fill="rgb(249,219,4)" rx="2" ry="2" />
<text  x="781.79" y="159.5" ></text>
</g>
<g >
<title>LcfReader::Read0 (1 samples, 1.52%)</title><rect x="689.4" y="197" width="17.9" height="15.0" fill="rgb(234,131,31)" rx="2" ry="2" />
<text  x="692.39" y="207.5" ></text>
</g>
<g >
<title>std::istream::read (3 samples, 4.55%)</title><rect x="63.6" y="453" width="53.7" height="15.0" fill="rgb(233,226,14)" rx="2" ry="2" />
<text  x="66.64" y="463.5" >std::..</text>
</g>
<g >
<title>openaux (1 samples, 1.52%)</title><rect x="868.2" y="357" width="17.9" height="15.0" fill="rgb(208,195,51)" rx="2" ry="2" />
<text  x="871.18" y="367.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 1.52%)</title><rect x="206.7" y="69" width="17.8" height="15.0" fill="rgb(210,9,15)" rx="2" ry="2" />
<text  x="209.67" y="79.5" ></text>
</g>
<g >
<title>_dl_map_segments (1 samples, 1.52%)</title><rect x="868.2" y="309" width="17.9" height="15.0" fill="rgb(216,158,36)" rx="2" ry="2" />
<text  x="871.18" y="319.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 6.06%)</title><rect x="135.2" y="469" width="71.5" height="15.0" fill="rgb(218,164,0)" rx="2" ry="2" />
<text  x="138.15" y="479.5" >[unknown]</text>
</g>
<g >
<title>main (35 samples, 53.03%)</title><rect x="224.5" y="437" width="625.8" height="15.0" fill="rgb(218,204,32)" rx="2" ry="2" />
<text  x="227.55" y="447.5" >main</text>
</g>
<g >
<title>__libc_start_main (36 samples, 54.55%)</title><rect x="206.7" y="453" width="643.6" height="15.0" fill="rgb(228,120,22)" rx="2" ry="2" />
<text  x="209.67" y="463.5" >__libc_start_main</text>
</g>
<g >
<title>unmap_vmas (1 samples, 1.52%)</title><rect x="975.5" y="357" width="17.8" height="15.0" fill="rgb(227,130,14)" rx="2" ry="2" />
<text  x="978.45" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::AnimationCellData, std::allocator&lt;RPG::AnimationCellData&gt; &gt;::_M_default_append (1 samples, 1.52%)</title><rect x="671.5" y="165" width="17.9" height="15.0" fill="rgb(240,41,34)" rx="2" ry="2" />
<text  x="674.52" y="175.5" ></text>
</g>
<g >
<title>LcfReader::Read0 (1 samples, 1.52%)</title><rect x="725.2" y="117" width="17.8" height="15.0" fill="rgb(224,122,15)" rx="2" ry="2" />
<text  x="728.15" y="127.5" ></text>
</g>
<g >
<title>LcfReader::ReadInt@plt (1 samples, 1.52%)</title><rect x="224.5" y="277" width="17.9" height="15.0" fill="rgb(224,147,44)" rx="2" ry="2" />
<text  x="227.55" y="287.5" ></text>
</g>
<g >
<title>_dl_map_object_from_fd (1 samples, 1.52%)</title><rect x="868.2" y="325" width="17.9" height="15.0" fill="rgb(215,198,6)" rx="2" ry="2" />
<text  x="871.18" y="335.5" ></text>
</g>
<g >
<title>LcfReader::Read0 (4 samples, 6.06%)</title><rect x="564.2" y="69" width="71.6" height="15.0" fill="rgb(251,221,8)" rx="2" ry="2" />
<text  x="567.24" y="79.5" >LcfReade..</text>
</g>
<g >
<title>LcfReader::Read0 (1 samples, 1.52%)</title><rect x="689.4" y="181" width="17.9" height="15.0" fill="rgb(232,194,10)" rx="2" ry="2" />
<text  x="692.39" y="191.5" ></text>
</g>
<g >
<title>LcfReader::Read0 (1 samples, 1.52%)</title><rect x="760.9" y="165" width="17.9" height="15.0" fill="rgb(214,115,7)" rx="2" ry="2" />
<text  x="763.91" y="175.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 1.52%)</title><rect x="528.5" y="53" width="17.9" height="15.0" fill="rgb(206,163,35)" rx="2" ry="2" />
<text  x="531.48" y="63.5" ></text>
</g>
<g >
<title>Struct&lt;RPG::Enemy&gt;::ReadLcf (2 samples, 3.03%)</title><rect x="760.9" y="293" width="35.8" height="15.0" fill="rgb(244,139,23)" rx="2" ry="2" />
<text  x="763.91" y="303.5" >Str..</text>
</g>
<g >
<title>unmap_single_vma (1 samples, 1.52%)</title><rect x="975.5" y="341" width="17.8" height="15.0" fill="rgb(226,130,24)" rx="2" ry="2" />
<text  x="978.45" y="351.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 1.52%)</title><rect x="939.7" y="229" width="17.9" height="15.0" fill="rgb(225,123,5)" rx="2" ry="2" />
<text  x="942.70" y="239.5" ></text>
</g>
<g >
<title>ctx_resched (7 samples, 10.61%)</title><rect x="1064.8" y="341" width="125.2" height="15.0" fill="rgb(238,21,0)" rx="2" ry="2" />
<text  x="1067.85" y="351.5" >ctx_resched</text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 1.52%)</title><rect x="832.4" y="293" width="17.9" height="15.0" fill="rgb(221,197,25)" rx="2" ry="2" />
<text  x="835.42" y="303.5" ></text>
</g>
<g >
<title>setup_arg_pages (1 samples, 1.52%)</title><rect x="957.6" y="373" width="17.9" height="15.0" fill="rgb(234,105,29)" rx="2" ry="2" />
<text  x="960.58" y="383.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (7 samples, 10.61%)</title><rect x="1064.8" y="277" width="125.2" height="15.0" fill="rgb(236,208,8)" rx="2" ry="2" />
<text  x="1067.85" y="287.5" >__intel_pmu_ena..</text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 1.52%)</title><rect x="939.7" y="277" width="17.9" height="15.0" fill="rgb(243,143,42)" rx="2" ry="2" />
<text  x="942.70" y="287.5" ></text>
</g>
<g >
<title>_dl_fini (1 samples, 1.52%)</title><rect x="206.7" y="405" width="17.8" height="15.0" fill="rgb(207,71,24)" rx="2" ry="2" />
<text  x="209.67" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;RPG::AnimationCellData, std::allocator&lt;RPG::AnimationCellData&gt; &gt;::_M_deallocate (1 samples, 1.52%)</title><rect x="206.7" y="117" width="17.8" height="15.0" fill="rgb(206,212,29)" rx="2" ry="2" />
<text  x="209.67" y="127.5" ></text>
</g>
<g >
<title>__x64_sys_mprotect (1 samples, 1.52%)</title><rect x="868.2" y="245" width="17.9" height="15.0" fill="rgb(249,92,33)" rx="2" ry="2" />
<text  x="871.18" y="255.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (6 samples, 9.09%)</title><rect x="850.3" y="421" width="107.3" height="15.0" fill="rgb(218,178,0)" rx="2" ry="2" />
<text  x="853.30" y="431.5" >_dl_sysdep_st..</text>
</g>
<g >
<title>TypedField&lt;RPG::Database, std::vector&lt;RPG::Actor, std::allocator&lt;RPG::Actor&gt; &gt; &gt;::ReadLcf (1 samples, 1.52%)</title><rect x="224.5" y="357" width="17.9" height="15.0" fill="rgb(213,160,31)" rx="2" ry="2" />
<text  x="227.55" y="367.5" ></text>
</g>
<g >
<title>search_binary_handler (1 samples, 1.52%)</title><rect x="957.6" y="405" width="17.9" height="15.0" fill="rgb(210,146,37)" rx="2" ry="2" />
<text  x="960.58" y="415.5" ></text>
</g>
<g >
<title>LcfReader::Read0 (8 samples, 12.12%)</title><rect x="403.3" y="117" width="143.1" height="15.0" fill="rgb(232,226,50)" rx="2" ry="2" />
<text  x="406.33" y="127.5" >LcfReader::Read0</text>
</g>
<g >
<title>std::vector&lt;RPG::Item, std::allocator&lt;RPG::Item&gt; &gt;::_M_default_append (1 samples, 1.52%)</title><rect x="796.7" y="293" width="17.8" height="15.0" fill="rgb(227,205,39)" rx="2" ry="2" />
<text  x="799.67" y="303.5" ></text>
</g>
<g >
<title>x86_pmu_enable (7 samples, 10.61%)</title><rect x="1064.8" y="309" width="125.2" height="15.0" fill="rgb(217,124,7)" rx="2" ry="2" />
<text  x="1067.85" y="319.5" >x86_pmu_enable</text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 1.52%)</title><rect x="117.3" y="453" width="17.9" height="15.0" fill="rgb(217,72,13)" rx="2" ry="2" />
<text  x="120.27" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (1 samples, 1.52%)</title><rect x="975.5" y="437" width="17.8" height="15.0" fill="rgb(252,64,26)" rx="2" ry="2" />
<text  x="978.45" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Item, std::allocator&lt;RPG::Item&gt; &gt;::resize (1 samples, 1.52%)</title><rect x="796.7" y="309" width="17.8" height="15.0" fill="rgb(207,160,18)" rx="2" ry="2" />
<text  x="799.67" y="319.5" ></text>
</g>
<g >
<title>LcfReader::Read0 (1 samples, 1.52%)</title><rect x="278.2" y="165" width="17.9" height="15.0" fill="rgb(226,29,52)" rx="2" ry="2" />
<text  x="281.18" y="175.5" ></text>
</g>
<g >
<title>Struct&lt;RPG::Class&gt;::ReadLcf (1 samples, 1.52%)</title><rect x="743.0" y="293" width="17.9" height="15.0" fill="rgb(243,17,41)" rx="2" ry="2" />
<text  x="746.03" y="303.5" ></text>
</g>
<g >
<title>native_write_msr (7 samples, 10.61%)</title><rect x="1064.8" y="261" width="125.2" height="15.0" fill="rgb(236,175,19)" rx="2" ry="2" />
<text  x="1067.85" y="271.5" >native_write_msr</text>
</g>
<g >
<title>Struct&lt;RPG::Database&gt;::ReadLcf (35 samples, 53.03%)</title><rect x="224.5" y="373" width="625.8" height="15.0" fill="rgb(234,213,52)" rx="2" ry="2" />
<text  x="227.55" y="383.5" >Struct&lt;RPG::Database&gt;::ReadLcf</text>
</g>
<g >
<title>LcfReader::Read0 (1 samples, 1.52%)</title><rect x="707.3" y="181" width="17.9" height="15.0" fill="rgb(209,178,20)" rx="2" ry="2" />
<text  x="710.27" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_execve (7 samples, 10.61%)</title><rect x="1064.8" y="437" width="125.2" height="15.0" fill="rgb(218,163,28)" rx="2" ry="2" />
<text  x="1067.85" y="447.5" >__x64_sys_execve</text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (1 samples, 1.52%)</title><rect x="600.0" y="37" width="17.9" height="15.0" fill="rgb(232,201,48)" rx="2" ry="2" />
<text  x="603.00" y="47.5" ></text>
</g>
<g >
<title>all (66 samples, 100%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(211,44,32)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>LDB_Reader::Load (35 samples, 53.03%)</title><rect x="224.5" y="405" width="625.8" height="15.0" fill="rgb(210,8,38)" rx="2" ry="2" />
<text  x="227.55" y="415.5" >LDB_Reader::Load</text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;RPG::Animation*&gt; (1 samples, 1.52%)</title><rect x="206.7" y="293" width="17.8" height="15.0" fill="rgb(214,224,47)" rx="2" ry="2" />
<text  x="209.67" y="303.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 1.52%)</title><rect x="796.7" y="149" width="17.8" height="15.0" fill="rgb(231,83,2)" rx="2" ry="2" />
<text  x="799.67" y="159.5" ></text>
</g>
<g >
<title>LcfReader::Read0 (1 samples, 1.52%)</title><rect x="725.2" y="133" width="17.8" height="15.0" fill="rgb(209,11,10)" rx="2" ry="2" />
<text  x="728.15" y="143.5" ></text>
</g>
<g >
<title>__tlb_remove_page_size (1 samples, 1.52%)</title><rect x="975.5" y="309" width="17.8" height="15.0" fill="rgb(230,208,22)" rx="2" ry="2" />
<text  x="978.45" y="319.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (2 samples, 3.03%)</title><rect x="153.0" y="453" width="35.8" height="15.0" fill="rgb(215,191,36)" rx="2" ry="2" />
<text  x="156.03" y="463.5" >std..</text>
</g>
<g >
<title>TypedField&lt;RPG::Animation, std::vector&lt;RPG::AnimationTiming, std::allocator&lt;RPG::AnimationTiming&gt; &gt; &gt;::ReadLcf (3 samples, 4.55%)</title><rect x="689.4" y="277" width="53.6" height="15.0" fill="rgb(235,54,14)" rx="2" ry="2" />
<text  x="692.39" y="287.5" >Typed..</text>
</g>
<g >
<title>TypeReader&lt;RPG::Database, (Category::Index)1&gt;::ReadLcf (35 samples, 53.03%)</title><rect x="224.5" y="389" width="625.8" height="15.0" fill="rgb(217,166,4)" rx="2" ry="2" />
<text  x="227.55" y="399.5" >TypeReader&lt;RPG::Database, (Category::Index)1&gt;::ReadLcf</text>
</g>
<g >
<title>TypedField&lt;RPG::Troop, std::vector&lt;RPG::TroopPage, std::allocator&lt;RPG::TroopPage&gt; &gt; &gt;::ReadLcf (1 samples, 1.52%)</title><rect x="814.5" y="277" width="17.9" height="15.0" fill="rgb(239,143,49)" rx="2" ry="2" />
<text  x="817.55" y="287.5" ></text>
</g>
<g >
<title>Struct&lt;RPG::AnimationTiming&gt;::ReadLcf (2 samples, 3.03%)</title><rect x="707.3" y="213" width="35.7" height="15.0" fill="rgb(209,161,3)" rx="2" ry="2" />
<text  x="710.27" y="223.5" >Str..</text>
</g>
<g >
<title>__vma_adjust (1 samples, 1.52%)</title><rect x="957.6" y="341" width="17.9" height="15.0" fill="rgb(219,201,18)" rx="2" ry="2" />
<text  x="960.58" y="351.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (1 samples, 1.52%)</title><rect x="27.9" y="453" width="17.9" height="15.0" fill="rgb(223,145,22)" rx="2" ry="2" />
<text  x="30.88" y="463.5" ></text>
</g>
<g >
<title>__GI_exit (1 samples, 1.52%)</title><rect x="206.7" y="437" width="17.8" height="15.0" fill="rgb(240,63,41)" rx="2" ry="2" />
<text  x="209.67" y="447.5" ></text>
</g>
<g >
<title>TypeReader&lt;int, (Category::Index)0&gt;::ReadLcf (1 samples, 1.52%)</title><rect x="725.2" y="181" width="17.8" height="15.0" fill="rgb(223,108,0)" rx="2" ry="2" />
<text  x="728.15" y="191.5" ></text>
</g>
<g >
<title>TypedField&lt;RPG::AnimationCellData, int&gt;::ReadLcf (5 samples, 7.58%)</title><rect x="546.4" y="149" width="89.4" height="15.0" fill="rgb(249,47,18)" rx="2" ry="2" />
<text  x="549.36" y="159.5" >TypedField..</text>
</g>
<g >
<title>LcfReader::Read0 (1 samples, 1.52%)</title><rect x="743.0" y="229" width="17.9" height="15.0" fill="rgb(250,140,10)" rx="2" ry="2" />
<text  x="746.03" y="239.5" ></text>
</g>
<g >
<title>setup_new_exec (7 samples, 10.61%)</title><rect x="1064.8" y="373" width="125.2" height="15.0" fill="rgb(232,4,14)" rx="2" ry="2" />
<text  x="1067.85" y="383.5" >setup_new_exec</text>
</g>
<g >
<title>TypeReader&lt;RPG::EnemyAction, (Category::Index)1&gt;::ReadLcf (1 samples, 1.52%)</title><rect x="760.9" y="229" width="17.9" height="15.0" fill="rgb(242,139,19)" rx="2" ry="2" />
<text  x="763.91" y="239.5" ></text>
</g>
<g >
<title>__GI___tunables_init (1 samples, 1.52%)</title><rect x="850.3" y="405" width="17.9" height="15.0" fill="rgb(235,23,49)" rx="2" ry="2" />
<text  x="853.30" y="415.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 1.52%)</title><rect x="796.7" y="213" width="17.8" height="15.0" fill="rgb(233,110,44)" rx="2" ry="2" />
<text  x="799.67" y="223.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 1.52%)</title><rect x="939.7" y="341" width="17.9" height="15.0" fill="rgb(210,56,4)" rx="2" ry="2" />
<text  x="942.70" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::AnimationCellData, std::allocator&lt;RPG::AnimationCellData&gt; &gt;::resize (1 samples, 1.52%)</title><rect x="671.5" y="181" width="17.9" height="15.0" fill="rgb(224,108,32)" rx="2" ry="2" />
<text  x="674.52" y="191.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 1.52%)</title><rect x="832.4" y="357" width="17.9" height="15.0" fill="rgb(238,49,1)" rx="2" ry="2" />
<text  x="835.42" y="367.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 1.52%)</title><rect x="939.7" y="309" width="17.9" height="15.0" fill="rgb(254,76,52)" rx="2" ry="2" />
<text  x="942.70" y="319.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (3 samples, 4.55%)</title><rect x="1011.2" y="469" width="53.6" height="15.0" fill="rgb(206,186,49)" rx="2" ry="2" />
<text  x="1014.21" y="479.5" >std::..</text>
</g>
<g >
<title>dl_main (5 samples, 7.58%)</title><rect x="868.2" y="405" width="89.4" height="15.0" fill="rgb(228,156,43)" rx="2" ry="2" />
<text  x="871.18" y="415.5" >dl_main</text>
</g>
<g >
<title>Struct&lt;RPG::Enemy&gt;::ReadLcf (2 samples, 3.03%)</title><rect x="760.9" y="325" width="35.8" height="15.0" fill="rgb(209,20,2)" rx="2" ry="2" />
<text  x="763.91" y="335.5" >Str..</text>
</g>
<g >
<title>RawStruct&lt;RPG::Parameters&gt;::ReadLcf (1 samples, 1.52%)</title><rect x="743.0" y="277" width="17.9" height="15.0" fill="rgb(240,45,13)" rx="2" ry="2" />
<text  x="746.03" y="287.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 1.52%)</title><rect x="939.7" y="293" width="17.9" height="15.0" fill="rgb(241,77,21)" rx="2" ry="2" />
<text  x="942.70" y="303.5" ></text>
</g>
<g >
<title>perf_event_exec (7 samples, 10.61%)</title><rect x="1064.8" y="357" width="125.2" height="15.0" fill="rgb(233,196,11)" rx="2" ry="2" />
<text  x="1067.85" y="367.5" >perf_event_exec</text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 1.52%)</title><rect x="957.6" y="437" width="17.9" height="15.0" fill="rgb(232,17,40)" rx="2" ry="2" />
<text  x="960.58" y="447.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 1.52%)</title><rect x="939.7" y="213" width="17.9" height="15.0" fill="rgb(243,142,1)" rx="2" ry="2" />
<text  x="942.70" y="223.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 1.52%)</title><rect x="939.7" y="325" width="17.9" height="15.0" fill="rgb(252,160,43)" rx="2" ry="2" />
<text  x="942.70" y="335.5" ></text>
</g>
<g >
<title>std::istream::read (2 samples, 3.03%)</title><rect x="600.0" y="53" width="35.8" height="15.0" fill="rgb(209,159,25)" rx="2" ry="2" />
<text  x="603.00" y="63.5" >std..</text>
</g>
<g >
<title>std::_Construct&lt;RPG::Item&gt; (1 samples, 1.52%)</title><rect x="796.7" y="229" width="17.8" height="15.0" fill="rgb(249,193,50)" rx="2" ry="2" />
<text  x="799.67" y="239.5" ></text>
</g>
<g >
<title>bench_readldb (59 samples, 89.39%)</title><rect x="10.0" y="485" width="1054.8" height="15.0" fill="rgb(242,79,50)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >bench_readldb</text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;RPG::AnimationFrame*&gt; (1 samples, 1.52%)</title><rect x="206.7" y="197" width="17.8" height="15.0" fill="rgb(218,98,36)" rx="2" ry="2" />
<text  x="209.67" y="207.5" ></text>
</g>
<g >
<title>TypedField&lt;RPG::AnimationTiming, int&gt;::ReadLcf (1 samples, 1.52%)</title><rect x="725.2" y="197" width="17.8" height="15.0" fill="rgb(248,177,35)" rx="2" ry="2" />
<text  x="728.15" y="207.5" ></text>
</g>
<g >
<title>mmput (1 samples, 1.52%)</title><rect x="975.5" y="389" width="17.8" height="15.0" fill="rgb(221,143,32)" rx="2" ry="2" />
<text  x="978.45" y="399.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;RPG::Animation&gt; (1 samples, 1.52%)</title><rect x="206.7" y="277" width="17.8" height="15.0" fill="rgb(242,220,15)" rx="2" ry="2" />
<text  x="209.67" y="287.5" ></text>
</g>
<g >
<title>LcfReader::Read0 (1 samples, 1.52%)</title><rect x="278.2" y="181" width="17.9" height="15.0" fill="rgb(214,218,37)" rx="2" ry="2" />
<text  x="281.18" y="191.5" ></text>
</g>
<g >
<title>TypeReader&lt;std::vector&lt;RPG::AnimationTiming, std::allocator&lt;RPG::AnimationTiming&gt; &gt;, (Category::Index)1&gt;::ReadLcf (3 samples, 4.55%)</title><rect x="689.4" y="261" width="53.6" height="15.0" fill="rgb(208,33,11)" rx="2" ry="2" />
<text  x="692.39" y="271.5" >TypeR..</text>
</g>
<g >
<title>TypeReader&lt;std::vector&lt;RPG::Enemy, std::allocator&lt;RPG::Enemy&gt; &gt;, (Category::Index)1&gt;::ReadLcf (2 samples, 3.03%)</title><rect x="760.9" y="341" width="35.8" height="15.0" fill="rgb(247,0,46)" rx="2" ry="2" />
<text  x="763.91" y="351.5" >Typ..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 1.52%)</title><rect x="868.2" y="261" width="17.9" height="15.0" fill="rgb(205,85,40)" rx="2" ry="2" />
<text  x="871.18" y="271.5" ></text>
</g>
<g >
<title>TypeReader&lt;std::vector&lt;RPG::AnimationFrame, std::allocator&lt;RPG::AnimationFrame&gt; &gt;, (Category::Index)1&gt;::ReadLcf (25 samples, 37.88%)</title><rect x="242.4" y="261" width="447.0" height="15.0" fill="rgb(220,88,14)" rx="2" ry="2" />
<text  x="245.42" y="271.5" >TypeReader&lt;std::vector&lt;RPG::AnimationFrame, std::allocator&lt;RP..</text>
</g>
<g >
<title>Struct&lt;RPG::Troop&gt;::ReadLcf (1 samples, 1.52%)</title><rect x="814.5" y="293" width="17.9" height="15.0" fill="rgb(231,168,17)" rx="2" ry="2" />
<text  x="817.55" y="303.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (1 samples, 1.52%)</title><rect x="10.0" y="453" width="17.9" height="15.0" fill="rgb(248,15,44)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>elf_machine_rela (3 samples, 4.55%)</title><rect x="886.1" y="357" width="53.6" height="15.0" fill="rgb(232,134,10)" rx="2" ry="2" />
<text  x="889.06" y="367.5" >elf_m..</text>
</g>
<g >
<title>Struct&lt;RPG::Class&gt;::ReadLcf (1 samples, 1.52%)</title><rect x="743.0" y="325" width="17.9" height="15.0" fill="rgb(254,134,9)" rx="2" ry="2" />
<text  x="746.03" y="335.5" ></text>
</g>
<g >
<title>TypeReader&lt;RPG::Class, (Category::Index)1&gt;::ReadLcf (1 samples, 1.52%)</title><rect x="743.0" y="309" width="17.9" height="15.0" fill="rgb(247,146,24)" rx="2" ry="2" />
<text  x="746.03" y="319.5" ></text>
</g>
<g >
<title>LcfReader::Read0 (1 samples, 1.52%)</title><rect x="760.9" y="181" width="17.9" height="15.0" fill="rgb(252,190,22)" rx="2" ry="2" />
<text  x="763.91" y="191.5" ></text>
</g>
<g >
<title>LcfReader::ReadInt (5 samples, 7.58%)</title><rect x="546.4" y="101" width="89.4" height="15.0" fill="rgb(225,30,53)" rx="2" ry="2" />
<text  x="549.36" y="111.5" >LcfReader:..</text>
</g>
<g >
<title>std::vector&lt;RPG::EnemyAction, std::allocator&lt;RPG::EnemyAction&gt; &gt;::_M_default_append (1 samples, 1.52%)</title><rect x="778.8" y="213" width="17.9" height="15.0" fill="rgb(209,55,25)" rx="2" ry="2" />
<text  x="781.79" y="223.5" ></text>
</g>
<g >
<title>Struct&lt;RPG::AnimationFrame&gt;::ReadLcf (25 samples, 37.88%)</title><rect x="242.4" y="213" width="447.0" height="15.0" fill="rgb(246,13,27)" rx="2" ry="2" />
<text  x="245.42" y="223.5" >Struct&lt;RPG::AnimationFrame&gt;::ReadLcf</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;RPG::EnemyAction&gt; &gt;::allocate (1 samples, 1.52%)</title><rect x="778.8" y="181" width="17.9" height="15.0" fill="rgb(239,219,4)" rx="2" ry="2" />
<text  x="781.79" y="191.5" ></text>
</g>
<g >
<title>load_elf_binary (1 samples, 1.52%)</title><rect x="957.6" y="389" width="17.9" height="15.0" fill="rgb(220,50,17)" rx="2" ry="2" />
<text  x="960.58" y="399.5" ></text>
</g>
<g >
<title>std::istream::read (1 samples, 1.52%)</title><rect x="760.9" y="149" width="17.9" height="15.0" fill="rgb(228,33,53)" rx="2" ry="2" />
<text  x="763.91" y="159.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 1.52%)</title><rect x="832.4" y="309" width="17.9" height="15.0" fill="rgb(250,206,22)" rx="2" ry="2" />
<text  x="835.42" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 1.52%)</title><rect x="135.2" y="453" width="17.8" height="15.0" fill="rgb(231,35,21)" rx="2" ry="2" />
<text  x="138.15" y="463.5" ></text>
</g>
<g >
<title>TypeReader&lt;std::vector&lt;RPG::Actor, std::allocator&lt;RPG::Actor&gt; &gt;, (Category::Index)1&gt;::ReadLcf (1 samples, 1.52%)</title><rect x="224.5" y="341" width="17.9" height="15.0" fill="rgb(223,149,15)" rx="2" ry="2" />
<text  x="227.55" y="351.5" ></text>
</g>
<g >
<title>TypeReader&lt;RPG::TroopPage, (Category::Index)1&gt;::ReadLcf (1 samples, 1.52%)</title><rect x="814.5" y="229" width="17.9" height="15.0" fill="rgb(238,100,47)" rx="2" ry="2" />
<text  x="817.55" y="239.5" ></text>
</g>
<g >
<title>TypeReader&lt;std::vector&lt;RPG::Animation, std::allocator&lt;RPG::Animation&gt; &gt;, (Category::Index)1&gt;::ReadLcf (28 samples, 42.42%)</title><rect x="242.4" y="341" width="500.6" height="15.0" fill="rgb(230,86,21)" rx="2" ry="2" />
<text  x="245.42" y="351.5" >TypeReader&lt;std::vector&lt;RPG::Animation, std::allocator&lt;RPG::Animation..</text>
</g>
<g >
<title>__do_global_dtors_aux (1 samples, 1.52%)</title><rect x="206.7" y="389" width="17.8" height="15.0" fill="rgb(215,162,10)" rx="2" ry="2" />
<text  x="209.67" y="399.5" ></text>
</g>
<g >
<title>TypedField&lt;RPG::Database, std::vector&lt;RPG::Troop, std::allocator&lt;RPG::Troop&gt; &gt; &gt;::ReadLcf (1 samples, 1.52%)</title><rect x="814.5" y="357" width="17.9" height="15.0" fill="rgb(225,175,11)" rx="2" ry="2" />
<text  x="817.55" y="367.5" ></text>
</g>
<g >
<title>_dl_catch_exception (1 samples, 1.52%)</title><rect x="868.2" y="373" width="17.9" height="15.0" fill="rgb(228,126,51)" rx="2" ry="2" />
<text  x="871.18" y="383.5" ></text>
</g>
<g >
<title>LcfReader::ReadInt (1 samples, 1.52%)</title><rect x="313.9" y="165" width="17.9" height="15.0" fill="rgb(248,95,54)" rx="2" ry="2" />
<text  x="316.94" y="175.5" ></text>
</g>
<g >
<title>std::map&lt;int, Field&lt;RPG::AnimationCellData&gt; const*, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, Field&lt;RPG::AnimationCellData&gt; const*&gt; &gt; &gt;::find (2 samples, 3.03%)</title><rect x="635.8" y="149" width="35.7" height="15.0" fill="rgb(208,80,0)" rx="2" ry="2" />
<text  x="638.76" y="159.5" >std..</text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, Field&lt;RPG::AnimationCellData&gt; const*&gt;, std::_Select1st&lt;std::pair&lt;int const, Field&lt;RPG::AnimationCellData&gt; const*&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, Field&lt;RPG::AnimationCellData&gt; const*&gt; &gt; &gt;::_M_lower_bound (2 samples, 3.03%)</title><rect x="635.8" y="117" width="35.7" height="15.0" fill="rgb(233,50,20)" rx="2" ry="2" />
<text  x="638.76" y="127.5" >std..</text>
</g>
<g >
<title>LcfReader::ReadInt (1 samples, 1.52%)</title><rect x="760.9" y="197" width="17.9" height="15.0" fill="rgb(240,196,36)" rx="2" ry="2" />
<text  x="763.91" y="207.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.41 (1 samples, 1.52%)</title><rect x="957.6" y="421" width="17.9" height="15.0" fill="rgb(249,150,3)" rx="2" ry="2" />
<text  x="960.58" y="431.5" ></text>
</g>
<g >
<title>LcfReader::Read0@plt (1 samples, 1.52%)</title><rect x="296.1" y="181" width="17.8" height="15.0" fill="rgb(238,151,44)" rx="2" ry="2" />
<text  x="299.06" y="191.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n&lt;RPG::Item*, unsigned long&gt; (1 samples, 1.52%)</title><rect x="796.7" y="261" width="17.8" height="15.0" fill="rgb(247,52,26)" rx="2" ry="2" />
<text  x="799.67" y="271.5" ></text>
</g>
<g >
<title>IDReaderT&lt;RPG::AnimationCellData, true&gt;::ReadID (1 samples, 1.52%)</title><rect x="313.9" y="181" width="17.9" height="15.0" fill="rgb(208,221,54)" rx="2" ry="2" />
<text  x="316.94" y="191.5" ></text>
</g>
<g >
<title>TypeReader&lt;RPG::Actor, (Category::Index)1&gt;::ReadLcf (1 samples, 1.52%)</title><rect x="224.5" y="309" width="17.9" height="15.0" fill="rgb(212,80,27)" rx="2" ry="2" />
<text  x="227.55" y="319.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;RPG::Animation*&gt; (1 samples, 1.52%)</title><rect x="206.7" y="309" width="17.8" height="15.0" fill="rgb(254,155,13)" rx="2" ry="2" />
<text  x="209.67" y="319.5" ></text>
</g>
<g >
<title>Primitive&lt;int&gt;::ReadLcf (5 samples, 7.58%)</title><rect x="546.4" y="117" width="89.4" height="15.0" fill="rgb(252,137,9)" rx="2" ry="2" />
<text  x="549.36" y="127.5" >Primitive&lt;..</text>
</g>
<g >
<title>LcfReader::Read&lt;short&gt; (1 samples, 1.52%)</title><rect x="743.0" y="261" width="17.9" height="15.0" fill="rgb(253,29,30)" rx="2" ry="2" />
<text  x="746.03" y="271.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 1.52%)</title><rect x="796.7" y="181" width="17.8" height="15.0" fill="rgb(219,95,18)" rx="2" ry="2" />
<text  x="799.67" y="191.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 1.52%)</title><rect x="939.7" y="197" width="17.9" height="15.0" fill="rgb(221,89,34)" rx="2" ry="2" />
<text  x="942.70" y="207.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 1.52%)</title><rect x="778.8" y="133" width="17.9" height="15.0" fill="rgb(221,174,46)" rx="2" ry="2" />
<text  x="781.79" y="143.5" ></text>
</g>
<g >
<title>LcfReader::Read0 (1 samples, 1.52%)</title><rect x="707.3" y="165" width="17.9" height="15.0" fill="rgb(231,150,15)" rx="2" ry="2" />
<text  x="710.27" y="175.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 1.52%)</title><rect x="778.8" y="101" width="17.9" height="15.0" fill="rgb(209,37,24)" rx="2" ry="2" />
<text  x="781.79" y="111.5" ></text>
</g>
<g >
<title>LDB_Reader::Load (35 samples, 53.03%)</title><rect x="224.5" y="421" width="625.8" height="15.0" fill="rgb(205,185,18)" rx="2" ry="2" />
<text  x="227.55" y="431.5" >LDB_Reader::Load</text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 1.52%)</title><rect x="975.5" y="245" width="17.8" height="15.0" fill="rgb(228,16,13)" rx="2" ry="2" />
<text  x="978.45" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;RPG::AnimationFrame*, RPG::AnimationFrame&gt; (1 samples, 1.52%)</title><rect x="206.7" y="229" width="17.8" height="15.0" fill="rgb(236,94,41)" rx="2" ry="2" />
<text  x="209.67" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;RPG::AnimationCellData&gt;::deallocate (1 samples, 1.52%)</title><rect x="206.7" y="85" width="17.8" height="15.0" fill="rgb(225,125,1)" rx="2" ry="2" />
<text  x="209.67" y="95.5" ></text>
</g>
<g >
<title>Struct&lt;RPG::Actor&gt;::ReadLcf (1 samples, 1.52%)</title><rect x="224.5" y="325" width="17.9" height="15.0" fill="rgb(230,58,26)" rx="2" ry="2" />
<text  x="227.55" y="335.5" ></text>
</g>
<g >
<title>__cxa_finalize (1 samples, 1.52%)</title><rect x="206.7" y="373" width="17.8" height="15.0" fill="rgb(254,55,49)" rx="2" ry="2" />
<text  x="209.67" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;RPG::EnemyAction, std::allocator&lt;RPG::EnemyAction&gt; &gt;::_M_allocate (1 samples, 1.52%)</title><rect x="778.8" y="197" width="17.9" height="15.0" fill="rgb(213,154,47)" rx="2" ry="2" />
<text  x="781.79" y="207.5" ></text>
</g>
<g >
<title>__mprotect (1 samples, 1.52%)</title><rect x="868.2" y="293" width="17.9" height="15.0" fill="rgb(214,127,18)" rx="2" ry="2" />
<text  x="871.18" y="303.5" ></text>
</g>
<g >
<title>_start (42 samples, 63.64%)</title><rect x="206.7" y="469" width="750.9" height="15.0" fill="rgb(223,93,39)" rx="2" ry="2" />
<text  x="209.67" y="479.5" >_start</text>
</g>
<g >
<title>[[stack]] (5 samples, 7.58%)</title><rect x="27.9" y="469" width="89.4" height="15.0" fill="rgb(213,132,37)" rx="2" ry="2" />
<text  x="30.88" y="479.5" >[[stack]]</text>
</g>
<g >
<title>operator new (1 samples, 1.52%)</title><rect x="671.5" y="101" width="17.9" height="15.0" fill="rgb(223,229,47)" rx="2" ry="2" />
<text  x="674.52" y="111.5" ></text>
</g>
</g>
</svg>
