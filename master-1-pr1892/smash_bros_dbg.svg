<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="934.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="917" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="917" > </text>
<g id="frames">
<g >
<title>__x64_sys_mmap (17 samples, 0.08%)</title><rect x="114.0" y="421" width="1.0" height="15.0" fill="rgb(235,82,52)" rx="2" ry="2" />
<text  x="117.05" y="431.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*, int&gt; (12 samples, 0.05%)</title><rect x="56.4" y="837" width="0.6" height="15.0" fill="rgb(232,178,0)" rx="2" ry="2" />
<text  x="59.41" y="847.5" ></text>
</g>
<g >
<title>free_unref_page_list (41 samples, 0.18%)</title><rect x="1087.6" y="165" width="2.1" height="15.0" fill="rgb(244,89,9)" rx="2" ry="2" />
<text  x="1090.55" y="175.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (2 samples, 0.01%)</title><rect x="537.3" y="245" width="0.1" height="15.0" fill="rgb(231,61,42)" rx="2" ry="2" />
<text  x="540.31" y="255.5" ></text>
</g>
<g >
<title>clear_page_erms (114 samples, 0.51%)</title><rect x="184.1" y="405" width="6.1" height="15.0" fill="rgb(223,1,48)" rx="2" ry="2" />
<text  x="187.14" y="415.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (8 samples, 0.04%)</title><rect x="92.8" y="485" width="0.4" height="15.0" fill="rgb(254,13,17)" rx="2" ry="2" />
<text  x="95.76" y="495.5" ></text>
</g>
<g >
<title>XFlush (10 samples, 0.05%)</title><rect x="1175.9" y="677" width="0.6" height="15.0" fill="rgb(254,10,2)" rx="2" ry="2" />
<text  x="1178.95" y="687.5" ></text>
</g>
<g >
<title>Sprite::Sprite (2 samples, 0.01%)</title><rect x="1144.6" y="357" width="0.1" height="15.0" fill="rgb(230,121,0)" rx="2" ry="2" />
<text  x="1147.60" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::EventCommand const*, std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt; &gt;::base (26 samples, 0.12%)</title><rect x="143.9" y="533" width="1.4" height="15.0" fill="rgb(212,96,54)" rx="2" ry="2" />
<text  x="146.90" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_ppoll (107 samples, 0.48%)</title><rect x="28.3" y="821" width="5.7" height="15.0" fill="rgb(234,52,32)" rx="2" ry="2" />
<text  x="31.31" y="831.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;RPG::SaveEventExecFrame*&gt;, RPG::SaveEventExecFrame*, RPG::SaveEventExecFrame&gt; (5 samples, 0.02%)</title><rect x="786.2" y="565" width="0.3" height="15.0" fill="rgb(248,80,26)" rx="2" ry="2" />
<text  x="789.22" y="575.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (19 samples, 0.09%)</title><rect x="68.2" y="837" width="1.0" height="15.0" fill="rgb(209,99,34)" rx="2" ry="2" />
<text  x="71.22" y="847.5" ></text>
</g>
<g >
<title>x86_pmu_enable (73 samples, 0.33%)</title><rect x="29.8" y="661" width="3.9" height="15.0" fill="rgb(224,39,0)" rx="2" ry="2" />
<text  x="32.80" y="671.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (2 samples, 0.01%)</title><rect x="1171.7" y="661" width="0.1" height="15.0" fill="rgb(235,29,26)" rx="2" ry="2" />
<text  x="1174.69" y="671.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::_Vector_base (2 samples, 0.01%)</title><rect x="113.0" y="581" width="0.1" height="15.0" fill="rgb(208,144,43)" rx="2" ry="2" />
<text  x="116.03" y="591.5" ></text>
</g>
<g >
<title>vfs_read (6 samples, 0.03%)</title><rect x="34.2" y="789" width="0.3" height="15.0" fill="rgb(211,201,28)" rx="2" ry="2" />
<text  x="37.16" y="799.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (27 samples, 0.12%)</title><rect x="1143.6" y="549" width="1.5" height="15.0" fill="rgb(206,178,34)" rx="2" ry="2" />
<text  x="1146.65" y="559.5" ></text>
</g>
<g >
<title>Graphics::UpdateTitle (2 samples, 0.01%)</title><rect x="111.4" y="725" width="0.1" height="15.0" fill="rgb(230,184,46)" rx="2" ry="2" />
<text  x="114.38" y="735.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="94.6" y="357" width="0.2" height="15.0" fill="rgb(220,161,36)" rx="2" ry="2" />
<text  x="97.57" y="367.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (7 samples, 0.03%)</title><rect x="528.0" y="309" width="0.4" height="15.0" fill="rgb(237,205,43)" rx="2" ry="2" />
<text  x="531.05" y="319.5" ></text>
</g>
<g >
<title>try_to_wake_up (4 samples, 0.02%)</title><rect x="34.5" y="677" width="0.2" height="15.0" fill="rgb(214,130,34)" rx="2" ry="2" />
<text  x="37.53" y="687.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (3 samples, 0.01%)</title><rect x="94.4" y="629" width="0.1" height="15.0" fill="rgb(215,203,19)" rx="2" ry="2" />
<text  x="97.35" y="639.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (42 samples, 0.19%)</title><rect x="725.8" y="501" width="2.2" height="15.0" fill="rgb(238,9,22)" rx="2" ry="2" />
<text  x="728.81" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::EventCommand const*, std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt; &gt;::__normal_iterator (2 samples, 0.01%)</title><rect x="1164.4" y="629" width="0.1" height="15.0" fill="rgb(243,205,33)" rx="2" ry="2" />
<text  x="1167.40" y="639.5" ></text>
</g>
<g >
<title>error_entry (10 samples, 0.05%)</title><rect x="115.5" y="453" width="0.6" height="15.0" fill="rgb(230,225,2)" rx="2" ry="2" />
<text  x="118.54" y="463.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (13 samples, 0.06%)</title><rect x="1175.9" y="725" width="0.7" height="15.0" fill="rgb(239,124,30)" rx="2" ry="2" />
<text  x="1178.95" y="735.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (15 samples, 0.07%)</title><rect x="1044.9" y="325" width="0.8" height="15.0" fill="rgb(209,67,13)" rx="2" ry="2" />
<text  x="1047.87" y="335.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (8 samples, 0.04%)</title><rect x="196.1" y="405" width="0.4" height="15.0" fill="rgb(243,8,7)" rx="2" ry="2" />
<text  x="199.06" y="415.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (8 samples, 0.04%)</title><rect x="92.8" y="725" width="0.4" height="15.0" fill="rgb(247,73,3)" rx="2" ry="2" />
<text  x="95.76" y="735.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (98 samples, 0.44%)</title><rect x="113.8" y="485" width="5.2" height="15.0" fill="rgb(227,21,4)" rx="2" ry="2" />
<text  x="116.83" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (10 samples, 0.05%)</title><rect x="87.8" y="837" width="0.5" height="15.0" fill="rgb(230,36,2)" rx="2" ry="2" />
<text  x="90.75" y="847.5" ></text>
</g>
<g >
<title>do_syscall_64 (133 samples, 0.60%)</title><rect x="27.9" y="837" width="7.1" height="15.0" fill="rgb(236,29,11)" rx="2" ry="2" />
<text  x="30.94" y="847.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (7 samples, 0.03%)</title><rect x="1175.9" y="613" width="0.4" height="15.0" fill="rgb(212,64,45)" rx="2" ry="2" />
<text  x="1178.95" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="1144.9" y="293" width="0.1" height="15.0" fill="rgb(249,123,46)" rx="2" ry="2" />
<text  x="1147.92" y="303.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (66 samples, 0.30%)</title><rect x="1086.6" y="197" width="3.6" height="15.0" fill="rgb(223,43,17)" rx="2" ry="2" />
<text  x="1089.65" y="207.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2,305 samples, 10.40%)</title><rect x="415.2" y="389" width="122.7" height="15.0" fill="rgb(226,161,43)" rx="2" ry="2" />
<text  x="418.22" y="399.5" >[libasan.so.5.0..</text>
</g>
<g >
<title>[libX11.so.6.3.0] (10 samples, 0.05%)</title><rect x="1175.9" y="645" width="0.6" height="15.0" fill="rgb(235,76,21)" rx="2" ry="2" />
<text  x="1178.95" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (4,317 samples, 19.47%)</title><rect x="830.8" y="453" width="229.7" height="15.0" fill="rgb(206,83,48)" rx="2" ry="2" />
<text  x="833.76" y="463.5" >std::vector&lt;int, std::allocato..</text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (109 samples, 0.49%)</title><rect x="790.6" y="629" width="5.8" height="15.0" fill="rgb(231,59,7)" rx="2" ry="2" />
<text  x="793.64" y="639.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (2,692 samples, 12.14%)</title><rect x="582.3" y="469" width="143.2" height="15.0" fill="rgb(240,225,39)" rx="2" ry="2" />
<text  x="585.28" y="479.5" >std::__uninitializ..</text>
</g>
<g >
<title>Game_Interpreter::CommandPlaySound (3 samples, 0.01%)</title><rect x="94.4" y="709" width="0.1" height="15.0" fill="rgb(246,0,27)" rx="2" ry="2" />
<text  x="97.35" y="719.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (19,868 samples, 89.61%)</title><rect x="112.4" y="677" width="1057.4" height="15.0" fill="rgb(229,9,33)" rx="2" ry="2" />
<text  x="115.45" y="687.5" >Game_CommonEvent::Update</text>
</g>
<g >
<title>unmap_page_range (7 samples, 0.03%)</title><rect x="1041.9" y="133" width="0.4" height="15.0" fill="rgb(246,135,10)" rx="2" ry="2" />
<text  x="1044.89" y="143.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_manager (2 samples, 0.01%)</title><rect x="1143.4" y="533" width="0.1" height="15.0" fill="rgb(224,9,48)" rx="2" ry="2" />
<text  x="1146.38" y="543.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (8 samples, 0.04%)</title><rect x="92.8" y="613" width="0.4" height="15.0" fill="rgb(218,172,16)" rx="2" ry="2" />
<text  x="95.76" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (1,468 samples, 6.62%)</title><rect x="967.9" y="341" width="78.1" height="15.0" fill="rgb(240,214,35)" rx="2" ry="2" />
<text  x="970.86" y="351.5" >[libasan...</text>
</g>
<g >
<title>ImageBMP::ReadBMP (4 samples, 0.02%)</title><rect x="93.8" y="325" width="0.2" height="15.0" fill="rgb(208,12,19)" rx="2" ry="2" />
<text  x="96.77" y="335.5" ></text>
</g>
<g >
<title>handle_mm_fault (331 samples, 1.49%)</title><rect x="180.7" y="469" width="17.6" height="15.0" fill="rgb(231,206,44)" rx="2" ry="2" />
<text  x="183.73" y="479.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (5 samples, 0.02%)</title><rect x="94.5" y="805" width="0.3" height="15.0" fill="rgb(245,142,30)" rx="2" ry="2" />
<text  x="97.51" y="815.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (11 samples, 0.05%)</title><rect x="93.4" y="453" width="0.6" height="15.0" fill="rgb(253,43,0)" rx="2" ry="2" />
<text  x="96.40" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::end (3 samples, 0.01%)</title><rect x="112.6" y="597" width="0.1" height="15.0" fill="rgb(231,106,37)" rx="2" ry="2" />
<text  x="115.56" y="607.5" ></text>
</g>
<g >
<title>Sdl2Ui::ProcessEvent (53 samples, 0.24%)</title><rect x="1173.1" y="725" width="2.8" height="15.0" fill="rgb(207,110,11)" rx="2" ry="2" />
<text  x="1176.13" y="735.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (3 samples, 0.01%)</title><rect x="1176.3" y="613" width="0.2" height="15.0" fill="rgb(226,167,52)" rx="2" ry="2" />
<text  x="1179.32" y="623.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (18 samples, 0.08%)</title><rect x="93.3" y="581" width="0.9" height="15.0" fill="rgb(205,17,0)" rx="2" ry="2" />
<text  x="96.29" y="591.5" ></text>
</g>
<g >
<title>vfs_write (9 samples, 0.04%)</title><rect x="34.5" y="789" width="0.5" height="15.0" fill="rgb(217,84,1)" rx="2" ry="2" />
<text  x="37.48" y="799.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (5 samples, 0.02%)</title><rect x="94.5" y="581" width="0.3" height="15.0" fill="rgb(235,93,33)" rx="2" ry="2" />
<text  x="97.51" y="591.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (5 samples, 0.02%)</title><rect x="555.7" y="501" width="0.2" height="15.0" fill="rgb(217,31,24)" rx="2" ry="2" />
<text  x="558.67" y="511.5" ></text>
</g>
<g >
<title>psi_task_change (5 samples, 0.02%)</title><rect x="29.4" y="693" width="0.2" height="15.0" fill="rgb(251,210,54)" rx="2" ry="2" />
<text  x="32.37" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (12 samples, 0.05%)</title><rect x="85.6" y="837" width="0.6" height="15.0" fill="rgb(210,37,20)" rx="2" ry="2" />
<text  x="88.57" y="847.5" ></text>
</g>
<g >
<title>std::swap&lt;unsigned char*&gt; (2 samples, 0.01%)</title><rect x="786.6" y="485" width="0.1" height="15.0" fill="rgb(242,37,19)" rx="2" ry="2" />
<text  x="789.59" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (44 samples, 0.20%)</title><rect x="1146.1" y="597" width="2.3" height="15.0" fill="rgb(237,8,53)" rx="2" ry="2" />
<text  x="1149.09" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (2 samples, 0.01%)</title><rect x="1142.4" y="501" width="0.1" height="15.0" fill="rgb(224,157,14)" rx="2" ry="2" />
<text  x="1145.42" y="511.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (18 samples, 0.08%)</title><rect x="1124.4" y="597" width="1.0" height="15.0" fill="rgb(211,27,26)" rx="2" ry="2" />
<text  x="1127.43" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (3 samples, 0.01%)</title><rect x="1144.2" y="325" width="0.2" height="15.0" fill="rgb(235,5,31)" rx="2" ry="2" />
<text  x="1147.23" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;RPG::Map, std::default_delete&lt;RPG::Map&gt; &gt;::operator (2 samples, 0.01%)</title><rect x="110.9" y="645" width="0.1" height="15.0" fill="rgb(222,46,16)" rx="2" ry="2" />
<text  x="113.85" y="655.5" ></text>
</g>
<g >
<title>__free_pages (2 samples, 0.01%)</title><rect x="1086.5" y="197" width="0.1" height="15.0" fill="rgb(238,227,11)" rx="2" ry="2" />
<text  x="1089.49" y="207.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (24 samples, 0.11%)</title><rect x="1143.8" y="405" width="1.2" height="15.0" fill="rgb(229,151,41)" rx="2" ry="2" />
<text  x="1146.75" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (41 samples, 0.18%)</title><rect x="799.2" y="613" width="2.1" height="15.0" fill="rgb(227,147,27)" rx="2" ry="2" />
<text  x="802.15" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (2 samples, 0.01%)</title><rect x="93.3" y="453" width="0.1" height="15.0" fill="rgb(233,86,54)" rx="2" ry="2" />
<text  x="96.29" y="463.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_manager (2 samples, 0.01%)</title><rect x="1143.5" y="517" width="0.1" height="15.0" fill="rgb(241,109,0)" rx="2" ry="2" />
<text  x="1146.54" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (11 samples, 0.05%)</title><rect x="1151.0" y="565" width="0.6" height="15.0" fill="rgb(218,73,22)" rx="2" ry="2" />
<text  x="1153.99" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.01%)</title><rect x="1176.3" y="533" width="0.2" height="15.0" fill="rgb(208,115,35)" rx="2" ry="2" />
<text  x="1179.32" y="543.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (18 samples, 0.08%)</title><rect x="93.3" y="837" width="0.9" height="15.0" fill="rgb(214,109,16)" rx="2" ry="2" />
<text  x="96.29" y="847.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (8 samples, 0.04%)</title><rect x="92.8" y="837" width="0.4" height="15.0" fill="rgb(209,149,16)" rx="2" ry="2" />
<text  x="95.76" y="847.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="94.4" y="485" width="0.1" height="15.0" fill="rgb(217,180,4)" rx="2" ry="2" />
<text  x="97.35" y="495.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandErasePicture (6 samples, 0.03%)</title><rect x="1140.6" y="613" width="0.3" height="15.0" fill="rgb(222,79,46)" rx="2" ry="2" />
<text  x="1143.61" y="623.5" ></text>
</g>
<g >
<title>Sprite::~Sprite (2 samples, 0.01%)</title><rect x="94.1" y="453" width="0.1" height="15.0" fill="rgb(247,63,29)" rx="2" ry="2" />
<text  x="97.14" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (14 samples, 0.06%)</title><rect x="109.8" y="837" width="0.8" height="15.0" fill="rgb(212,26,23)" rx="2" ry="2" />
<text  x="112.84" y="847.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (4 samples, 0.02%)</title><rect x="84.0" y="821" width="0.2" height="15.0" fill="rgb(217,165,46)" rx="2" ry="2" />
<text  x="87.03" y="831.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="94.2" y="821" width="0.2" height="15.0" fill="rgb(218,179,54)" rx="2" ry="2" />
<text  x="97.25" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (4,034 samples, 18.19%)</title><rect x="329.1" y="437" width="214.7" height="15.0" fill="rgb(218,205,38)" rx="2" ry="2" />
<text  x="332.11" y="447.5" >__gnu_cxx::new_allocator&lt;int..</text>
</g>
<g >
<title>Game_Map::GetTerrainTag (3 samples, 0.01%)</title><rect x="1145.5" y="597" width="0.2" height="15.0" fill="rgb(247,160,17)" rx="2" ry="2" />
<text  x="1148.51" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt;::erase (2 samples, 0.01%)</title><rect x="94.1" y="421" width="0.1" height="15.0" fill="rgb(244,97,39)" rx="2" ry="2" />
<text  x="97.14" y="431.5" ></text>
</g>
<g >
<title>Game_Character::UpdateMovement (3 samples, 0.01%)</title><rect x="1170.3" y="677" width="0.1" height="15.0" fill="rgb(240,112,25)" rx="2" ry="2" />
<text  x="1173.26" y="687.5" ></text>
</g>
<g >
<title>__handle_mm_fault (9 samples, 0.04%)</title><rect x="120.4" y="437" width="0.5" height="15.0" fill="rgb(208,33,51)" rx="2" ry="2" />
<text  x="123.43" y="447.5" ></text>
</g>
<g >
<title>down_read_trylock (4 samples, 0.02%)</title><rect x="180.5" y="469" width="0.2" height="15.0" fill="rgb(237,126,8)" rx="2" ry="2" />
<text  x="183.52" y="479.5" ></text>
</g>
<g >
<title>try_charge (2 samples, 0.01%)</title><rect x="117.9" y="341" width="0.1" height="15.0" fill="rgb(240,147,5)" rx="2" ry="2" />
<text  x="120.88" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::~_Vector_impl (8 samples, 0.04%)</title><rect x="60.4" y="837" width="0.4" height="15.0" fill="rgb(237,228,29)" rx="2" ry="2" />
<text  x="63.40" y="847.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::select_on_container_copy_construction (16 samples, 0.07%)</title><rect x="88.3" y="837" width="0.8" height="15.0" fill="rgb(237,222,36)" rx="2" ry="2" />
<text  x="91.29" y="847.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void (*(std::_Placeholder&lt;1&gt;, int, int, bool))(FileRequestResult*, int, int, bool)&gt;::operator()&lt;FileRequestResult*, void&gt; (3 samples, 0.01%)</title><rect x="1142.0" y="501" width="0.2" height="15.0" fill="rgb(251,186,39)" rx="2" ry="2" />
<text  x="1145.00" y="511.5" ></text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.01%)</title><rect x="35.1" y="821" width="0.1" height="15.0" fill="rgb(221,21,49)" rx="2" ry="2" />
<text  x="38.07" y="831.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (5 samples, 0.02%)</title><rect x="94.5" y="597" width="0.3" height="15.0" fill="rgb(241,115,13)" rx="2" ry="2" />
<text  x="97.51" y="607.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="93.3" y="405" width="0.1" height="15.0" fill="rgb(211,116,17)" rx="2" ry="2" />
<text  x="96.29" y="415.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (69 samples, 0.31%)</title><rect x="1086.5" y="245" width="3.7" height="15.0" fill="rgb(243,213,29)" rx="2" ry="2" />
<text  x="1089.49" y="255.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (3 samples, 0.01%)</title><rect x="120.8" y="373" width="0.1" height="15.0" fill="rgb(213,122,18)" rx="2" ry="2" />
<text  x="123.75" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char&gt; (32 samples, 0.14%)</title><rect x="217.7" y="501" width="1.7" height="15.0" fill="rgb(246,132,20)" rx="2" ry="2" />
<text  x="220.67" y="511.5" ></text>
</g>
<g >
<title>__sys_recvmsg (3 samples, 0.01%)</title><rect x="1176.3" y="501" width="0.2" height="15.0" fill="rgb(207,11,26)" rx="2" ry="2" />
<text  x="1179.32" y="511.5" ></text>
</g>
<g >
<title>std::default_delete&lt;Sprite&gt;::operator() (2 samples, 0.01%)</title><rect x="94.1" y="485" width="0.1" height="15.0" fill="rgb(240,67,47)" rx="2" ry="2" />
<text  x="97.14" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (3,949 samples, 17.81%)</title><rect x="850.3" y="437" width="210.2" height="15.0" fill="rgb(228,202,35)" rx="2" ry="2" />
<text  x="853.35" y="447.5" >std::_Vector_base&lt;int, std:..</text>
</g>
<g >
<title>Game_Interpreter::GetFrame (111 samples, 0.50%)</title><rect x="1145.7" y="613" width="5.9" height="15.0" fill="rgb(208,198,51)" rx="2" ry="2" />
<text  x="1148.72" y="623.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;Drawable* const&gt; &gt; (2 samples, 0.01%)</title><rect x="1144.8" y="261" width="0.1" height="15.0" fill="rgb(241,148,0)" rx="2" ry="2" />
<text  x="1147.76" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (11 samples, 0.05%)</title><rect x="1151.9" y="613" width="0.6" height="15.0" fill="rgb(235,132,21)" rx="2" ry="2" />
<text  x="1154.95" y="623.5" ></text>
</g>
<g >
<title>pick_next_task_fair (2 samples, 0.01%)</title><rect x="1175.7" y="533" width="0.1" height="15.0" fill="rgb(234,131,53)" rx="2" ry="2" />
<text  x="1178.74" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (2 samples, 0.01%)</title><rect x="71.5" y="837" width="0.1" height="15.0" fill="rgb(205,57,5)" rx="2" ry="2" />
<text  x="74.52" y="847.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.01%)</title><rect x="55.7" y="837" width="0.1" height="15.0" fill="rgb(253,38,38)" rx="2" ry="2" />
<text  x="58.66" y="847.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingExecution (4 samples, 0.02%)</title><rect x="1169.9" y="661" width="0.2" height="15.0" fill="rgb(244,133,9)" rx="2" ry="2" />
<text  x="1172.88" y="671.5" ></text>
</g>
<g >
<title>unmap_single_vma (7 samples, 0.03%)</title><rect x="1041.9" y="149" width="0.4" height="15.0" fill="rgb(207,65,17)" rx="2" ry="2" />
<text  x="1044.89" y="159.5" ></text>
</g>
<g >
<title>Game_Map::LoopVertical (2 samples, 0.01%)</title><rect x="110.9" y="661" width="0.1" height="15.0" fill="rgb(230,110,30)" rx="2" ry="2" />
<text  x="113.85" y="671.5" ></text>
</g>
<g >
<title>operator new (24 samples, 0.11%)</title><rect x="781.3" y="533" width="1.3" height="15.0" fill="rgb(233,156,2)" rx="2" ry="2" />
<text  x="784.32" y="543.5" ></text>
</g>
<g >
<title>find_vma (3 samples, 0.01%)</title><rect x="1086.3" y="277" width="0.1" height="15.0" fill="rgb(240,191,11)" rx="2" ry="2" />
<text  x="1089.27" y="287.5" ></text>
</g>
<g >
<title>try_charge (12 samples, 0.05%)</title><rect x="196.5" y="405" width="0.6" height="15.0" fill="rgb(249,107,52)" rx="2" ry="2" />
<text  x="199.48" y="415.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.01%)</title><rect x="709.7" y="405" width="0.1" height="15.0" fill="rgb(246,197,28)" rx="2" ry="2" />
<text  x="712.69" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (6 samples, 0.03%)</title><rect x="1142.6" y="533" width="0.4" height="15.0" fill="rgb(248,82,36)" rx="2" ry="2" />
<text  x="1145.63" y="543.5" ></text>
</g>
<g >
<title>SdlMixerAudio::SE_Play (3 samples, 0.01%)</title><rect x="1142.0" y="421" width="0.2" height="15.0" fill="rgb(215,127,40)" rx="2" ry="2" />
<text  x="1145.00" y="431.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (8 samples, 0.04%)</title><rect x="92.8" y="629" width="0.4" height="15.0" fill="rgb(227,169,47)" rx="2" ry="2" />
<text  x="95.76" y="639.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (8 samples, 0.04%)</title><rect x="92.8" y="693" width="0.4" height="15.0" fill="rgb(219,223,24)" rx="2" ry="2" />
<text  x="95.76" y="703.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;char*&gt; (2 samples, 0.01%)</title><rect x="87.2" y="837" width="0.1" height="15.0" fill="rgb(219,173,11)" rx="2" ry="2" />
<text  x="90.17" y="847.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (30 samples, 0.14%)</title><rect x="1113.8" y="581" width="1.6" height="15.0" fill="rgb(229,205,12)" rx="2" ry="2" />
<text  x="1116.84" y="591.5" ></text>
</g>
<g >
<title>zap_page_range (2 samples, 0.01%)</title><rect x="1042.3" y="213" width="0.1" height="15.0" fill="rgb(243,129,4)" rx="2" ry="2" />
<text  x="1045.31" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (2 samples, 0.01%)</title><rect x="71.8" y="837" width="0.1" height="15.0" fill="rgb(234,130,26)" rx="2" ry="2" />
<text  x="74.84" y="847.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="1143.5" y="485" width="0.1" height="15.0" fill="rgb(244,153,6)" rx="2" ry="2" />
<text  x="1146.54" y="495.5" ></text>
</g>
<g >
<title>Sdl2Ui::GetTicks (5 samples, 0.02%)</title><rect x="94.5" y="453" width="0.3" height="15.0" fill="rgb(220,203,48)" rx="2" ry="2" />
<text  x="97.51" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (50 samples, 0.23%)</title><rect x="297.1" y="501" width="2.6" height="15.0" fill="rgb(242,64,18)" rx="2" ry="2" />
<text  x="300.07" y="511.5" ></text>
</g>
<g >
<title>Game_Picture::SetNonEffectParams (2 samples, 0.01%)</title><rect x="1141.7" y="581" width="0.1" height="15.0" fill="rgb(229,84,25)" rx="2" ry="2" />
<text  x="1144.68" y="591.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (2 samples, 0.01%)</title><rect x="1086.5" y="149" width="0.1" height="15.0" fill="rgb(238,81,48)" rx="2" ry="2" />
<text  x="1089.49" y="159.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (5 samples, 0.02%)</title><rect x="94.5" y="741" width="0.3" height="15.0" fill="rgb(233,52,40)" rx="2" ry="2" />
<text  x="97.51" y="751.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (5 samples, 0.02%)</title><rect x="94.5" y="485" width="0.3" height="15.0" fill="rgb(227,208,45)" rx="2" ry="2" />
<text  x="97.51" y="495.5" ></text>
</g>
<g >
<title>pthread_getspecific@plt (7 samples, 0.03%)</title><rect x="1051.6" y="341" width="0.3" height="15.0" fill="rgb(239,206,50)" rx="2" ry="2" />
<text  x="1054.57" y="351.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*, int&gt; (80 samples, 0.36%)</title><rect x="840.3" y="437" width="4.3" height="15.0" fill="rgb(217,111,20)" rx="2" ry="2" />
<text  x="843.34" y="447.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.01%)</title><rect x="1051.5" y="325" width="0.1" height="15.0" fill="rgb(224,130,34)" rx="2" ry="2" />
<text  x="1054.47" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (4 samples, 0.02%)</title><rect x="108.5" y="837" width="0.2" height="15.0" fill="rgb(223,5,16)" rx="2" ry="2" />
<text  x="111.46" y="847.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (154 samples, 0.69%)</title><rect x="772.9" y="517" width="8.2" height="15.0" fill="rgb(221,151,46)" rx="2" ry="2" />
<text  x="775.91" y="527.5" ></text>
</g>
<g >
<title>vma_merge (2 samples, 0.01%)</title><rect x="114.8" y="341" width="0.1" height="15.0" fill="rgb(238,176,5)" rx="2" ry="2" />
<text  x="117.79" y="351.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (11 samples, 0.05%)</title><rect x="93.4" y="437" width="0.6" height="15.0" fill="rgb(219,145,28)" rx="2" ry="2" />
<text  x="96.40" y="447.5" ></text>
</g>
<g >
<title>__handle_mm_fault (311 samples, 1.40%)</title><rect x="181.5" y="453" width="16.6" height="15.0" fill="rgb(217,204,32)" rx="2" ry="2" />
<text  x="184.53" y="463.5" ></text>
</g>
<g >
<title>__wake_up_locked_key (7 samples, 0.03%)</title><rect x="34.5" y="741" width="0.4" height="15.0" fill="rgb(252,24,50)" rx="2" ry="2" />
<text  x="37.48" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;@plt (12 samples, 0.05%)</title><rect x="240.7" y="517" width="0.6" height="15.0" fill="rgb(231,176,10)" rx="2" ry="2" />
<text  x="243.71" y="527.5" ></text>
</g>
<g >
<title>handle_edge_irq (2 samples, 0.01%)</title><rect x="326.4" y="405" width="0.1" height="15.0" fill="rgb(234,68,38)" rx="2" ry="2" />
<text  x="329.39" y="415.5" ></text>
</g>
<g >
<title>memcpy@plt (4 samples, 0.02%)</title><rect x="219.6" y="501" width="0.2" height="15.0" fill="rgb(236,110,51)" rx="2" ry="2" />
<text  x="222.58" y="511.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (36 samples, 0.16%)</title><rect x="1100.7" y="597" width="1.9" height="15.0" fill="rgb(210,63,24)" rx="2" ry="2" />
<text  x="1103.70" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_M_lower_bound (6 samples, 0.03%)</title><rect x="1142.6" y="517" width="0.4" height="15.0" fill="rgb(233,93,5)" rx="2" ry="2" />
<text  x="1145.63" y="527.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="220.4" y="421" width="0.1" height="15.0" fill="rgb(247,182,29)" rx="2" ry="2" />
<text  x="223.38" y="431.5" ></text>
</g>
<g >
<title>pthread_getspecific@plt (11 samples, 0.05%)</title><rect x="532.4" y="357" width="0.5" height="15.0" fill="rgb(250,158,31)" rx="2" ry="2" />
<text  x="535.36" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (9,899 samples, 44.65%)</title><rect x="246.1" y="517" width="526.8" height="15.0" fill="rgb(222,41,28)" rx="2" ry="2" />
<text  x="249.09" y="527.5" >std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector</text>
</g>
<g >
<title>do_page_fault (3 samples, 0.01%)</title><rect x="536.3" y="341" width="0.2" height="15.0" fill="rgb(206,152,26)" rx="2" ry="2" />
<text  x="539.35" y="351.5" ></text>
</g>
<g >
<title>page_fault (346 samples, 1.56%)</title><rect x="180.0" y="517" width="18.5" height="15.0" fill="rgb(239,72,34)" rx="2" ry="2" />
<text  x="183.04" y="527.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (63 samples, 0.28%)</title><rect x="1142.2" y="613" width="3.3" height="15.0" fill="rgb(249,48,53)" rx="2" ry="2" />
<text  x="1145.15" y="623.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (25 samples, 0.11%)</title><rect x="1143.7" y="469" width="1.3" height="15.0" fill="rgb(210,91,47)" rx="2" ry="2" />
<text  x="1146.70" y="479.5" ></text>
</g>
<g >
<title>xhci_irq (2 samples, 0.01%)</title><rect x="685.0" y="229" width="0.2" height="15.0" fill="rgb(239,79,27)" rx="2" ry="2" />
<text  x="688.05" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (3 samples, 0.01%)</title><rect x="108.8" y="837" width="0.2" height="15.0" fill="rgb(233,161,13)" rx="2" ry="2" />
<text  x="111.83" y="847.5" ></text>
</g>
<g >
<title>do_sys_poll (106 samples, 0.48%)</title><rect x="28.3" y="805" width="5.6" height="15.0" fill="rgb(241,93,52)" rx="2" ry="2" />
<text  x="31.31" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (8 samples, 0.04%)</title><rect x="92.8" y="437" width="0.4" height="15.0" fill="rgb(247,114,29)" rx="2" ry="2" />
<text  x="95.76" y="447.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (3 samples, 0.01%)</title><rect x="1142.0" y="565" width="0.2" height="15.0" fill="rgb(234,27,20)" rx="2" ry="2" />
<text  x="1145.00" y="575.5" ></text>
</g>
<g >
<title>RPG::SaveEventExecFrame::~SaveEventExecFrame (5,454 samples, 24.60%)</title><rect x="806.3" y="565" width="290.2" height="15.0" fill="rgb(221,0,54)" rx="2" ry="2" />
<text  x="809.28" y="575.5" >RPG::SaveEventExecFrame::~SaveEventExe..</text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (3 samples, 0.01%)</title><rect x="1189.6" y="853" width="0.1" height="15.0" fill="rgb(254,99,21)" rx="2" ry="2" />
<text  x="1192.57" y="863.5" ></text>
</g>
<g >
<title>handle_edge_irq (2 samples, 0.01%)</title><rect x="530.4" y="293" width="0.1" height="15.0" fill="rgb(214,48,10)" rx="2" ry="2" />
<text  x="533.44" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (2 samples, 0.01%)</title><rect x="1042.3" y="229" width="0.1" height="15.0" fill="rgb(225,98,19)" rx="2" ry="2" />
<text  x="1045.31" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (2 samples, 0.01%)</title><rect x="1144.1" y="309" width="0.1" height="15.0" fill="rgb(207,72,32)" rx="2" ry="2" />
<text  x="1147.07" y="319.5" ></text>
</g>
<g >
<title>Game_System::SePlay (3 samples, 0.01%)</title><rect x="94.4" y="693" width="0.1" height="15.0" fill="rgb(205,115,0)" rx="2" ry="2" />
<text  x="97.35" y="703.5" ></text>
</g>
<g >
<title>Sdl2Ui::GetTicks (2 samples, 0.01%)</title><rect x="1172.8" y="613" width="0.1" height="15.0" fill="rgb(238,114,46)" rx="2" ry="2" />
<text  x="1175.76" y="623.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (49 samples, 0.22%)</title><rect x="553.0" y="469" width="2.6" height="15.0" fill="rgb(253,168,18)" rx="2" ry="2" />
<text  x="556.01" y="479.5" ></text>
</g>
<g >
<title>std::default_delete&lt;Sprite&gt;::operator() (5 samples, 0.02%)</title><rect x="1144.8" y="341" width="0.2" height="15.0" fill="rgb(249,207,9)" rx="2" ry="2" />
<text  x="1147.76" y="351.5" ></text>
</g>
<g >
<title>std::make_shared&lt;int, int&gt; (3 samples, 0.01%)</title><rect x="1143.0" y="533" width="0.2" height="15.0" fill="rgb(246,133,46)" rx="2" ry="2" />
<text  x="1146.01" y="543.5" ></text>
</g>
<g >
<title>Player::Update (20,031 samples, 90.34%)</title><rect x="110.6" y="757" width="1066.0" height="15.0" fill="rgb(213,163,5)" rx="2" ry="2" />
<text  x="113.59" y="767.5" >Player::Update</text>
</g>
<g >
<title>handle_mm_fault (36 samples, 0.16%)</title><rect x="116.2" y="405" width="1.9" height="15.0" fill="rgb(213,82,7)" rx="2" ry="2" />
<text  x="119.23" y="415.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (19,930 samples, 89.89%)</title><rect x="112.4" y="725" width="1060.7" height="15.0" fill="rgb(214,146,11)" rx="2" ry="2" />
<text  x="115.45" y="735.5" >Scene_Map::UpdateStage1</text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.01%)</title><rect x="1051.5" y="309" width="0.1" height="15.0" fill="rgb(228,177,15)" rx="2" ry="2" />
<text  x="1054.47" y="319.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (6 samples, 0.03%)</title><rect x="85.3" y="837" width="0.3" height="15.0" fill="rgb(237,69,5)" rx="2" ry="2" />
<text  x="88.25" y="847.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (2 samples, 0.01%)</title><rect x="120.6" y="389" width="0.2" height="15.0" fill="rgb(213,117,24)" rx="2" ry="2" />
<text  x="123.64" y="399.5" ></text>
</g>
<g >
<title>__sched_text_start (7 samples, 0.03%)</title><rect x="528.0" y="261" width="0.4" height="15.0" fill="rgb(215,95,0)" rx="2" ry="2" />
<text  x="531.05" y="271.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.03%)</title><rect x="55.9" y="837" width="0.3" height="15.0" fill="rgb(222,3,43)" rx="2" ry="2" />
<text  x="58.88" y="847.5" ></text>
</g>
<g >
<title>Bitmap::CheckPixels (8 samples, 0.04%)</title><rect x="92.8" y="405" width="0.4" height="15.0" fill="rgb(247,169,22)" rx="2" ry="2" />
<text  x="95.76" y="415.5" ></text>
</g>
<g >
<title>std::__distance&lt;char*&gt; (2 samples, 0.01%)</title><rect x="225.6" y="501" width="0.2" height="15.0" fill="rgb(222,160,12)" rx="2" ry="2" />
<text  x="228.65" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (4 samples, 0.02%)</title><rect x="1154.0" y="597" width="0.2" height="15.0" fill="rgb(207,106,24)" rx="2" ry="2" />
<text  x="1156.97" y="607.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (37 samples, 0.17%)</title><rect x="90.7" y="853" width="2.0" height="15.0" fill="rgb(206,125,24)" rx="2" ry="2" />
<text  x="93.68" y="863.5" ></text>
</g>
<g >
<title>unmap_page_range (36 samples, 0.16%)</title><rect x="1090.3" y="229" width="1.9" height="15.0" fill="rgb(232,32,9)" rx="2" ry="2" />
<text  x="1093.32" y="239.5" ></text>
</g>
<g >
<title>sock_recvmsg (2 samples, 0.01%)</title><rect x="1176.0" y="453" width="0.1" height="15.0" fill="rgb(206,50,3)" rx="2" ry="2" />
<text  x="1179.00" y="463.5" ></text>
</g>
<g >
<title>free_pages.part.99 (2 samples, 0.01%)</title><rect x="1086.5" y="213" width="0.1" height="15.0" fill="rgb(214,24,52)" rx="2" ry="2" />
<text  x="1089.49" y="223.5" ></text>
</g>
<g >
<title>handle_mm_fault (9 samples, 0.04%)</title><rect x="120.4" y="453" width="0.5" height="15.0" fill="rgb(243,42,5)" rx="2" ry="2" />
<text  x="123.43" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::new_allocator (17 samples, 0.08%)</title><rect x="293.8" y="453" width="0.9" height="15.0" fill="rgb(221,191,14)" rx="2" ry="2" />
<text  x="296.82" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::base (2 samples, 0.01%)</title><rect x="49.8" y="837" width="0.1" height="15.0" fill="rgb(235,47,15)" rx="2" ry="2" />
<text  x="52.76" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (11 samples, 0.05%)</title><rect x="93.4" y="357" width="0.6" height="15.0" fill="rgb(235,16,12)" rx="2" ry="2" />
<text  x="96.40" y="367.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.01%)</title><rect x="119.3" y="373" width="0.1" height="15.0" fill="rgb(246,141,19)" rx="2" ry="2" />
<text  x="122.31" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::vector (2 samples, 0.01%)</title><rect x="113.0" y="597" width="0.1" height="15.0" fill="rgb(232,176,22)" rx="2" ry="2" />
<text  x="116.03" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (93 samples, 0.42%)</title><rect x="740.6" y="485" width="4.9" height="15.0" fill="rgb(226,6,21)" rx="2" ry="2" />
<text  x="743.55" y="495.5" ></text>
</g>
<g >
<title>flush_tlb_func_common.constprop.9 (2 samples, 0.01%)</title><rect x="120.8" y="357" width="0.1" height="15.0" fill="rgb(228,93,2)" rx="2" ry="2" />
<text  x="123.75" y="367.5" ></text>
</g>
<g >
<title>free_unref_page_commit (6 samples, 0.03%)</title><rect x="1093.4" y="181" width="0.3" height="15.0" fill="rgb(247,224,16)" rx="2" ry="2" />
<text  x="1096.35" y="191.5" ></text>
</g>
<g >
<title>Sprite::~Sprite (2 samples, 0.01%)</title><rect x="94.1" y="469" width="0.1" height="15.0" fill="rgb(241,111,17)" rx="2" ry="2" />
<text  x="97.14" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (100 samples, 0.45%)</title><rect x="1115.6" y="581" width="5.3" height="15.0" fill="rgb(241,179,30)" rx="2" ry="2" />
<text  x="1118.60" y="591.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (18 samples, 0.08%)</title><rect x="93.3" y="677" width="0.9" height="15.0" fill="rgb(229,104,39)" rx="2" ry="2" />
<text  x="96.29" y="687.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::end (2 samples, 0.01%)</title><rect x="1144.0" y="325" width="0.1" height="15.0" fill="rgb(219,145,27)" rx="2" ry="2" />
<text  x="1146.96" y="335.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (9 samples, 0.04%)</title><rect x="62.0" y="837" width="0.5" height="15.0" fill="rgb(209,145,3)" rx="2" ry="2" />
<text  x="65.05" y="847.5" ></text>
</g>
<g >
<title>__update_load_avg_se (2 samples, 0.01%)</title><rect x="29.3" y="645" width="0.1" height="15.0" fill="rgb(208,103,7)" rx="2" ry="2" />
<text  x="32.27" y="655.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (7,190 samples, 32.43%)</title><rect x="786.7" y="661" width="382.7" height="15.0" fill="rgb(233,53,41)" rx="2" ry="2" />
<text  x="789.75" y="671.5" >Game_Interpreter::Update</text>
</g>
<g >
<title>[libasan.so.5.0.0] (3,754 samples, 16.93%)</title><rect x="343.4" y="405" width="199.8" height="15.0" fill="rgb(237,168,53)" rx="2" ry="2" />
<text  x="346.43" y="415.5" >[libasan.so.5.0.0]</text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (5 samples, 0.02%)</title><rect x="1142.7" y="485" width="0.3" height="15.0" fill="rgb(241,196,12)" rx="2" ry="2" />
<text  x="1145.69" y="495.5" ></text>
</g>
<g >
<title>pipe_poll (3 samples, 0.01%)</title><rect x="28.7" y="789" width="0.2" height="15.0" fill="rgb(238,77,36)" rx="2" ry="2" />
<text  x="31.73" y="799.5" ></text>
</g>
<g >
<title>wp_page_copy (7 samples, 0.03%)</title><rect x="537.0" y="277" width="0.4" height="15.0" fill="rgb(219,191,32)" rx="2" ry="2" />
<text  x="540.04" y="287.5" ></text>
</g>
<g >
<title>pthread_getspecific@plt (12 samples, 0.05%)</title><rect x="542.6" y="389" width="0.6" height="15.0" fill="rgb(213,100,15)" rx="2" ry="2" />
<text  x="545.58" y="399.5" ></text>
</g>
<g >
<title>memmove@plt (5 samples, 0.02%)</title><rect x="685.3" y="389" width="0.2" height="15.0" fill="rgb(237,127,39)" rx="2" ry="2" />
<text  x="688.26" y="399.5" ></text>
</g>
<g >
<title>sync_regs (32 samples, 0.14%)</title><rect x="178.3" y="501" width="1.7" height="15.0" fill="rgb(212,35,14)" rx="2" ry="2" />
<text  x="181.28" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.01%)</title><rect x="1176.3" y="549" width="0.2" height="15.0" fill="rgb(244,31,1)" rx="2" ry="2" />
<text  x="1179.32" y="559.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (5 samples, 0.02%)</title><rect x="94.5" y="533" width="0.3" height="15.0" fill="rgb(211,211,44)" rx="2" ry="2" />
<text  x="97.51" y="543.5" ></text>
</g>
<g >
<title>_start (20,033 samples, 90.35%)</title><rect x="110.6" y="853" width="1066.1" height="15.0" fill="rgb(213,164,8)" rx="2" ry="2" />
<text  x="113.59" y="863.5" >_start</text>
</g>
<g >
<title>perf_pmu_enable.part.105 (25 samples, 0.11%)</title><rect x="1174.4" y="501" width="1.3" height="15.0" fill="rgb(221,43,30)" rx="2" ry="2" />
<text  x="1177.41" y="511.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (3 samples, 0.01%)</title><rect x="1041.7" y="117" width="0.2" height="15.0" fill="rgb(226,158,47)" rx="2" ry="2" />
<text  x="1044.73" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (5 samples, 0.02%)</title><rect x="1142.7" y="469" width="0.3" height="15.0" fill="rgb(251,34,0)" rx="2" ry="2" />
<text  x="1145.69" y="479.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (18 samples, 0.08%)</title><rect x="93.3" y="549" width="0.9" height="15.0" fill="rgb(227,222,11)" rx="2" ry="2" />
<text  x="96.29" y="559.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (3 samples, 0.01%)</title><rect x="117.8" y="357" width="0.2" height="15.0" fill="rgb(228,200,19)" rx="2" ry="2" />
<text  x="120.82" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (7 samples, 0.03%)</title><rect x="1133.9" y="581" width="0.4" height="15.0" fill="rgb(226,122,13)" rx="2" ry="2" />
<text  x="1136.91" y="591.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (5 samples, 0.02%)</title><rect x="296.8" y="501" width="0.3" height="15.0" fill="rgb(243,51,38)" rx="2" ry="2" />
<text  x="299.80" y="511.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (7 samples, 0.03%)</title><rect x="528.0" y="293" width="0.4" height="15.0" fill="rgb(246,143,16)" rx="2" ry="2" />
<text  x="531.05" y="303.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (8 samples, 0.04%)</title><rect x="92.8" y="741" width="0.4" height="15.0" fill="rgb(252,217,17)" rx="2" ry="2" />
<text  x="95.76" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (11 samples, 0.05%)</title><rect x="245.5" y="517" width="0.6" height="15.0" fill="rgb(247,1,27)" rx="2" ry="2" />
<text  x="248.50" y="527.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandStoreTerrainID (4 samples, 0.02%)</title><rect x="1145.5" y="613" width="0.2" height="15.0" fill="rgb(208,62,25)" rx="2" ry="2" />
<text  x="1148.51" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (2 samples, 0.01%)</title><rect x="1153.9" y="597" width="0.1" height="15.0" fill="rgb(246,106,28)" rx="2" ry="2" />
<text  x="1156.86" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (4 samples, 0.02%)</title><rect x="1114.4" y="549" width="0.2" height="15.0" fill="rgb(223,154,38)" rx="2" ry="2" />
<text  x="1117.43" y="559.5" ></text>
</g>
<g >
<title>schedule (32 samples, 0.14%)</title><rect x="1174.2" y="565" width="1.7" height="15.0" fill="rgb(238,201,46)" rx="2" ry="2" />
<text  x="1177.19" y="575.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (2 samples, 0.01%)</title><rect x="104.5" y="837" width="0.1" height="15.0" fill="rgb(222,9,18)" rx="2" ry="2" />
<text  x="107.52" y="847.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;char*&gt; (9 samples, 0.04%)</title><rect x="240.2" y="485" width="0.5" height="15.0" fill="rgb(208,119,43)" rx="2" ry="2" />
<text  x="243.18" y="495.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (18 samples, 0.08%)</title><rect x="93.3" y="709" width="0.9" height="15.0" fill="rgb(223,163,2)" rx="2" ry="2" />
<text  x="96.29" y="719.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (2 samples, 0.01%)</title><rect x="326.4" y="373" width="0.1" height="15.0" fill="rgb(218,202,12)" rx="2" ry="2" />
<text  x="329.39" y="383.5" ></text>
</g>
<g >
<title>__libc_recvmsg (3 samples, 0.01%)</title><rect x="1176.3" y="581" width="0.2" height="15.0" fill="rgb(208,121,9)" rx="2" ry="2" />
<text  x="1179.32" y="591.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (11 samples, 0.05%)</title><rect x="93.4" y="341" width="0.6" height="15.0" fill="rgb(254,76,40)" rx="2" ry="2" />
<text  x="96.40" y="351.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (3 samples, 0.01%)</title><rect x="62.5" y="837" width="0.2" height="15.0" fill="rgb(214,2,17)" rx="2" ry="2" />
<text  x="65.53" y="847.5" ></text>
</g>
<g >
<title>poll_schedule_timeout.constprop.14 (93 samples, 0.42%)</title><rect x="28.9" y="789" width="4.9" height="15.0" fill="rgb(214,143,6)" rx="2" ry="2" />
<text  x="31.89" y="799.5" ></text>
</g>
<g >
<title>Cache::Picture (12 samples, 0.05%)</title><rect x="1143.8" y="357" width="0.6" height="15.0" fill="rgb(221,56,52)" rx="2" ry="2" />
<text  x="1146.80" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (2 samples, 0.01%)</title><rect x="94.0" y="373" width="0.1" height="15.0" fill="rgb(213,32,5)" rx="2" ry="2" />
<text  x="96.98" y="383.5" ></text>
</g>
<g >
<title>alloc_pages_vma (20 samples, 0.09%)</title><rect x="116.4" y="373" width="1.1" height="15.0" fill="rgb(217,31,5)" rx="2" ry="2" />
<text  x="119.39" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (17 samples, 0.08%)</title><rect x="1149.4" y="581" width="1.0" height="15.0" fill="rgb(217,122,42)" rx="2" ry="2" />
<text  x="1152.45" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::EventCommand const*, std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt; &gt;::__normal_iterator (13 samples, 0.06%)</title><rect x="1167.3" y="613" width="0.7" height="15.0" fill="rgb(236,99,22)" rx="2" ry="2" />
<text  x="1170.33" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (3 samples, 0.01%)</title><rect x="87.0" y="837" width="0.2" height="15.0" fill="rgb(223,54,34)" rx="2" ry="2" />
<text  x="90.01" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (42 samples, 0.19%)</title><rect x="1060.5" y="469" width="2.3" height="15.0" fill="rgb(242,80,11)" rx="2" ry="2" />
<text  x="1063.52" y="479.5" ></text>
</g>
<g >
<title>dequeue_task_fair (2 samples, 0.01%)</title><rect x="1174.3" y="517" width="0.1" height="15.0" fill="rgb(251,114,0)" rx="2" ry="2" />
<text  x="1177.30" y="527.5" ></text>
</g>
<g >
<title>___sys_recvmsg (4 samples, 0.02%)</title><rect x="1173.3" y="437" width="0.3" height="15.0" fill="rgb(231,60,1)" rx="2" ry="2" />
<text  x="1176.34" y="447.5" ></text>
</g>
<g >
<title>operator delete@plt (2 samples, 0.01%)</title><rect x="825.2" y="453" width="0.1" height="15.0" fill="rgb(214,76,11)" rx="2" ry="2" />
<text  x="828.17" y="463.5" ></text>
</g>
<g >
<title>zap_page_range (3 samples, 0.01%)</title><rect x="1086.0" y="293" width="0.1" height="15.0" fill="rgb(209,57,7)" rx="2" ry="2" />
<text  x="1088.95" y="303.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (14 samples, 0.06%)</title><rect x="1041.6" y="277" width="0.7" height="15.0" fill="rgb(222,62,31)" rx="2" ry="2" />
<text  x="1044.57" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::select_on_container_copy_construction (6 samples, 0.03%)</title><rect x="728.0" y="501" width="0.4" height="15.0" fill="rgb(241,18,25)" rx="2" ry="2" />
<text  x="731.05" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::~vector (5,454 samples, 24.60%)</title><rect x="806.3" y="549" width="290.2" height="15.0" fill="rgb(252,150,9)" rx="2" ry="2" />
<text  x="809.28" y="559.5" >std::vector&lt;RPG::EventCommand, std::al..</text>
</g>
<g >
<title>free_unref_page_list (2 samples, 0.01%)</title><rect x="1041.8" y="69" width="0.1" height="15.0" fill="rgb(241,173,12)" rx="2" ry="2" />
<text  x="1044.78" y="79.5" ></text>
</g>
<g >
<title>Game_Interpreter::ValueOrVariable (2 samples, 0.01%)</title><rect x="1141.4" y="597" width="0.1" height="15.0" fill="rgb(216,157,20)" rx="2" ry="2" />
<text  x="1144.41" y="607.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (4,236 samples, 19.11%)</title><rect x="318.4" y="469" width="225.4" height="15.0" fill="rgb(253,31,1)" rx="2" ry="2" />
<text  x="321.36" y="479.5" >std::_Vector_base&lt;int, std::a..</text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (23 samples, 0.10%)</title><rect x="1143.8" y="373" width="1.2" height="15.0" fill="rgb(218,56,28)" rx="2" ry="2" />
<text  x="1146.80" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::EventCommand const*, std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt; &gt;::__normal_iterator (9 samples, 0.04%)</title><rect x="1166.1" y="613" width="0.4" height="15.0" fill="rgb(252,228,53)" rx="2" ry="2" />
<text  x="1169.05" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;RPG::EventCommand&gt;::allocate (136 samples, 0.61%)</title><rect x="113.8" y="565" width="7.2" height="15.0" fill="rgb(250,8,24)" rx="2" ry="2" />
<text  x="116.78" y="575.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (92 samples, 0.41%)</title><rect x="28.9" y="757" width="4.9" height="15.0" fill="rgb(240,174,25)" rx="2" ry="2" />
<text  x="31.95" y="767.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (23 samples, 0.10%)</title><rect x="193.9" y="389" width="1.2" height="15.0" fill="rgb(215,4,16)" rx="2" ry="2" />
<text  x="196.88" y="399.5" ></text>
</g>
<g >
<title>pthread_getspecific@plt (4 samples, 0.02%)</title><rect x="1045.7" y="325" width="0.2" height="15.0" fill="rgb(210,177,46)" rx="2" ry="2" />
<text  x="1048.72" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (3 samples, 0.01%)</title><rect x="1125.1" y="581" width="0.2" height="15.0" fill="rgb(222,83,20)" rx="2" ry="2" />
<text  x="1128.12" y="591.5" ></text>
</g>
<g >
<title>finish_task_switch (76 samples, 0.34%)</title><rect x="29.7" y="709" width="4.0" height="15.0" fill="rgb(214,134,44)" rx="2" ry="2" />
<text  x="32.69" y="719.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (53 samples, 0.24%)</title><rect x="1142.3" y="581" width="2.8" height="15.0" fill="rgb(225,197,17)" rx="2" ry="2" />
<text  x="1145.31" y="591.5" ></text>
</g>
<g >
<title>handle_irq_event (2 samples, 0.01%)</title><rect x="530.4" y="277" width="0.1" height="15.0" fill="rgb(213,80,49)" rx="2" ry="2" />
<text  x="533.44" y="287.5" ></text>
</g>
<g >
<title>Sprite_Character::Update (5 samples, 0.02%)</title><rect x="1172.0" y="693" width="0.3" height="15.0" fill="rgb(215,204,53)" rx="2" ry="2" />
<text  x="1175.01" y="703.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (6 samples, 0.03%)</title><rect x="1142.6" y="501" width="0.4" height="15.0" fill="rgb(229,98,37)" rx="2" ry="2" />
<text  x="1145.63" y="511.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (13 samples, 0.06%)</title><rect x="65.0" y="837" width="0.7" height="15.0" fill="rgb(248,138,41)" rx="2" ry="2" />
<text  x="67.98" y="847.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="94.0" y="357" width="0.1" height="15.0" fill="rgb(234,196,14)" rx="2" ry="2" />
<text  x="96.98" y="367.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (23 samples, 0.10%)</title><rect x="1177.0" y="837" width="1.2" height="15.0" fill="rgb(229,87,11)" rx="2" ry="2" />
<text  x="1179.96" y="847.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.01%)</title><rect x="119.2" y="405" width="0.1" height="15.0" fill="rgb(223,117,38)" rx="2" ry="2" />
<text  x="122.15" y="415.5" ></text>
</g>
<g >
<title>ksys_read (9 samples, 0.04%)</title><rect x="34.0" y="805" width="0.5" height="15.0" fill="rgb(230,183,49)" rx="2" ry="2" />
<text  x="37.00" y="815.5" ></text>
</g>
<g >
<title>Game_Picture::Show (8 samples, 0.04%)</title><rect x="92.8" y="821" width="0.4" height="15.0" fill="rgb(214,83,24)" rx="2" ry="2" />
<text  x="95.76" y="831.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (35 samples, 0.16%)</title><rect x="303.1" y="485" width="1.9" height="15.0" fill="rgb(234,8,31)" rx="2" ry="2" />
<text  x="306.14" y="495.5" ></text>
</g>
<g >
<title>__vm_munmap (10 samples, 0.05%)</title><rect x="1041.7" y="213" width="0.6" height="15.0" fill="rgb(219,65,41)" rx="2" ry="2" />
<text  x="1044.73" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (2 samples, 0.01%)</title><rect x="1171.4" y="645" width="0.1" height="15.0" fill="rgb(231,18,34)" rx="2" ry="2" />
<text  x="1174.37" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (34 samples, 0.15%)</title><rect x="1174.1" y="613" width="1.8" height="15.0" fill="rgb(209,202,20)" rx="2" ry="2" />
<text  x="1177.09" y="623.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;RPG::SaveEventExecFrame*&gt;, RPG::SaveEventExecFrame*&gt; (3 samples, 0.01%)</title><rect x="786.3" y="533" width="0.2" height="15.0" fill="rgb(210,190,35)" rx="2" ry="2" />
<text  x="789.32" y="543.5" ></text>
</g>
<g >
<title>perf_iterate_sb (6 samples, 0.03%)</title><rect x="114.5" y="325" width="0.3" height="15.0" fill="rgb(245,160,54)" rx="2" ry="2" />
<text  x="117.47" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="1143.2" y="501" width="0.1" height="15.0" fill="rgb(216,137,21)" rx="2" ry="2" />
<text  x="1146.22" y="511.5" ></text>
</g>
<g >
<title>unmapped_area_topdown (7 samples, 0.03%)</title><rect x="114.0" y="325" width="0.4" height="15.0" fill="rgb(232,160,21)" rx="2" ry="2" />
<text  x="117.05" y="335.5" ></text>
</g>
<g >
<title>handle_irq (2 samples, 0.01%)</title><rect x="326.4" y="421" width="0.1" height="15.0" fill="rgb(221,227,18)" rx="2" ry="2" />
<text  x="329.39" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (42 samples, 0.19%)</title><rect x="845.6" y="437" width="2.2" height="15.0" fill="rgb(229,195,12)" rx="2" ry="2" />
<text  x="848.56" y="447.5" ></text>
</g>
<g >
<title>Game_Picture::Show (5 samples, 0.02%)</title><rect x="94.5" y="709" width="0.3" height="15.0" fill="rgb(213,177,50)" rx="2" ry="2" />
<text  x="97.51" y="719.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="1142.4" y="533" width="0.1" height="15.0" fill="rgb(249,212,5)" rx="2" ry="2" />
<text  x="1145.42" y="543.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (15 samples, 0.07%)</title><rect x="70.2" y="837" width="0.8" height="15.0" fill="rgb(238,177,6)" rx="2" ry="2" />
<text  x="73.25" y="847.5" ></text>
</g>
<g >
<title>free_unref_page_commit (2 samples, 0.01%)</title><rect x="1086.0" y="165" width="0.1" height="15.0" fill="rgb(240,193,12)" rx="2" ry="2" />
<text  x="1088.95" y="175.5" ></text>
</g>
<g >
<title>Bitmap::MultiplyAlpha (5 samples, 0.02%)</title><rect x="93.5" y="309" width="0.3" height="15.0" fill="rgb(211,164,19)" rx="2" ry="2" />
<text  x="96.50" y="319.5" ></text>
</g>
<g >
<title>Scene_Map::Update (19,930 samples, 89.89%)</title><rect x="112.4" y="741" width="1060.7" height="15.0" fill="rgb(223,65,36)" rx="2" ry="2" />
<text  x="115.45" y="751.5" >Scene_Map::Update</text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt;, 36ul&gt; (5 samples, 0.02%)</title><rect x="112.1" y="725" width="0.2" height="15.0" fill="rgb(234,170,23)" rx="2" ry="2" />
<text  x="115.08" y="735.5" ></text>
</g>
<g >
<title>std::__distance&lt;char*&gt; (2 samples, 0.01%)</title><rect x="64.6" y="837" width="0.1" height="15.0" fill="rgb(215,51,38)" rx="2" ry="2" />
<text  x="67.60" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (7 samples, 0.03%)</title><rect x="1160.5" y="629" width="0.4" height="15.0" fill="rgb(215,177,48)" rx="2" ry="2" />
<text  x="1163.52" y="639.5" ></text>
</g>
<g >
<title>[easyrpg-player] (16 samples, 0.07%)</title><rect x="823.7" y="453" width="0.8" height="15.0" fill="rgb(222,220,42)" rx="2" ry="2" />
<text  x="826.68" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (7 samples, 0.03%)</title><rect x="1148.1" y="565" width="0.3" height="15.0" fill="rgb(248,152,31)" rx="2" ry="2" />
<text  x="1151.06" y="575.5" ></text>
</g>
<g >
<title>__vm_munmap (114 samples, 0.51%)</title><rect x="1086.2" y="309" width="6.0" height="15.0" fill="rgb(240,63,12)" rx="2" ry="2" />
<text  x="1089.17" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (17 samples, 0.08%)</title><rect x="52.0" y="837" width="0.9" height="15.0" fill="rgb(220,125,14)" rx="2" ry="2" />
<text  x="55.04" y="847.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (2 samples, 0.01%)</title><rect x="57.6" y="837" width="0.1" height="15.0" fill="rgb(216,73,44)" rx="2" ry="2" />
<text  x="60.58" y="847.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (2 samples, 0.01%)</title><rect x="111.4" y="693" width="0.1" height="15.0" fill="rgb(221,31,21)" rx="2" ry="2" />
<text  x="114.38" y="703.5" ></text>
</g>
<g >
<title>handle_mm_fault (10 samples, 0.05%)</title><rect x="536.9" y="325" width="0.5" height="15.0" fill="rgb(242,61,21)" rx="2" ry="2" />
<text  x="539.88" y="335.5" ></text>
</g>
<g >
<title>__sys_recvmsg (4 samples, 0.02%)</title><rect x="1173.3" y="453" width="0.3" height="15.0" fill="rgb(250,55,1)" rx="2" ry="2" />
<text  x="1176.34" y="463.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (5 samples, 0.02%)</title><rect x="94.5" y="405" width="0.3" height="15.0" fill="rgb(214,58,24)" rx="2" ry="2" />
<text  x="97.51" y="415.5" ></text>
</g>
<g >
<title>error_entry (3 samples, 0.01%)</title><rect x="120.2" y="501" width="0.2" height="15.0" fill="rgb(228,140,13)" rx="2" ry="2" />
<text  x="123.22" y="511.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (2 samples, 0.01%)</title><rect x="119.3" y="357" width="0.1" height="15.0" fill="rgb(232,21,13)" rx="2" ry="2" />
<text  x="122.31" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (17 samples, 0.08%)</title><rect x="71.9" y="837" width="1.0" height="15.0" fill="rgb(251,113,50)" rx="2" ry="2" />
<text  x="74.95" y="847.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (34 samples, 0.15%)</title><rect x="1174.1" y="645" width="1.8" height="15.0" fill="rgb(237,84,51)" rx="2" ry="2" />
<text  x="1177.09" y="655.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (92 samples, 0.41%)</title><rect x="28.9" y="773" width="4.9" height="15.0" fill="rgb(222,14,14)" rx="2" ry="2" />
<text  x="31.95" y="783.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.04%)</title><rect x="83.2" y="837" width="0.4" height="15.0" fill="rgb(207,148,46)" rx="2" ry="2" />
<text  x="86.18" y="847.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (3 samples, 0.01%)</title><rect x="542.4" y="389" width="0.2" height="15.0" fill="rgb(210,217,15)" rx="2" ry="2" />
<text  x="545.42" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::reset (2 samples, 0.01%)</title><rect x="94.1" y="501" width="0.1" height="15.0" fill="rgb(205,57,37)" rx="2" ry="2" />
<text  x="97.14" y="511.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (287 samples, 1.29%)</title><rect x="1079.2" y="389" width="15.3" height="15.0" fill="rgb(231,226,18)" rx="2" ry="2" />
<text  x="1082.20" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_M_lower_bound (2 samples, 0.01%)</title><rect x="94.0" y="453" width="0.1" height="15.0" fill="rgb(225,113,51)" rx="2" ry="2" />
<text  x="96.98" y="463.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_statistics (4 samples, 0.02%)</title><rect x="195.3" y="421" width="0.2" height="15.0" fill="rgb(208,176,48)" rx="2" ry="2" />
<text  x="198.31" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (20 samples, 0.09%)</title><rect x="59.3" y="837" width="1.1" height="15.0" fill="rgb(207,59,29)" rx="2" ry="2" />
<text  x="62.34" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (14 samples, 0.06%)</title><rect x="800.6" y="597" width="0.7" height="15.0" fill="rgb(236,126,29)" rx="2" ry="2" />
<text  x="803.59" y="607.5" ></text>
</g>
<g >
<title>Window_Selectable::Update (8 samples, 0.04%)</title><rect x="1172.7" y="693" width="0.4" height="15.0" fill="rgb(208,164,26)" rx="2" ry="2" />
<text  x="1175.65" y="703.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (7 samples, 0.03%)</title><rect x="1175.9" y="629" width="0.4" height="15.0" fill="rgb(237,163,39)" rx="2" ry="2" />
<text  x="1178.95" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (3 samples, 0.01%)</title><rect x="1157.5" y="581" width="0.1" height="15.0" fill="rgb(246,48,14)" rx="2" ry="2" />
<text  x="1160.48" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (29 samples, 0.13%)</title><rect x="216.1" y="501" width="1.6" height="15.0" fill="rgb(247,210,35)" rx="2" ry="2" />
<text  x="219.12" y="511.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (6 samples, 0.03%)</title><rect x="1093.4" y="165" width="0.3" height="15.0" fill="rgb(224,127,26)" rx="2" ry="2" />
<text  x="1096.35" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (25 samples, 0.11%)</title><rect x="223.5" y="501" width="1.4" height="15.0" fill="rgb(240,25,41)" rx="2" ry="2" />
<text  x="226.52" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (3,594 samples, 16.21%)</title><rect x="861.0" y="421" width="191.3" height="15.0" fill="rgb(242,134,54)" rx="2" ry="2" />
<text  x="863.99" y="431.5" >std::_Vector_base&lt;int, st..</text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (3 samples, 0.01%)</title><rect x="69.7" y="837" width="0.1" height="15.0" fill="rgb(243,122,53)" rx="2" ry="2" />
<text  x="72.66" y="847.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (8 samples, 0.04%)</title><rect x="92.8" y="677" width="0.4" height="15.0" fill="rgb(244,70,14)" rx="2" ry="2" />
<text  x="95.76" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (11 samples, 0.05%)</title><rect x="795.9" y="597" width="0.5" height="15.0" fill="rgb(218,59,11)" rx="2" ry="2" />
<text  x="798.85" y="607.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (8 samples, 0.04%)</title><rect x="1163.1" y="645" width="0.4" height="15.0" fill="rgb(213,82,23)" rx="2" ry="2" />
<text  x="1166.12" y="655.5" ></text>
</g>
<g >
<title>ptep_clear_flush (3 samples, 0.01%)</title><rect x="120.8" y="389" width="0.1" height="15.0" fill="rgb(252,138,1)" rx="2" ry="2" />
<text  x="123.75" y="399.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.01%)</title><rect x="326.4" y="453" width="0.1" height="15.0" fill="rgb(230,130,47)" rx="2" ry="2" />
<text  x="329.39" y="463.5" ></text>
</g>
<g >
<title>__lru_cache_add (2 samples, 0.01%)</title><rect x="119.3" y="389" width="0.1" height="15.0" fill="rgb(230,211,52)" rx="2" ry="2" />
<text  x="122.31" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (30 samples, 0.14%)</title><rect x="57.7" y="837" width="1.6" height="15.0" fill="rgb(246,208,26)" rx="2" ry="2" />
<text  x="60.69" y="847.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="1143.4" y="501" width="0.1" height="15.0" fill="rgb(254,148,52)" rx="2" ry="2" />
<text  x="1146.38" y="511.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (3,192 samples, 14.40%)</title><rect x="555.9" y="501" width="169.9" height="15.0" fill="rgb(208,115,46)" rx="2" ry="2" />
<text  x="558.93" y="511.5" >std::__uninitialized_..</text>
</g>
<g >
<title>Game_Picture::Update (23 samples, 0.10%)</title><rect x="1170.5" y="677" width="1.2" height="15.0" fill="rgb(240,201,20)" rx="2" ry="2" />
<text  x="1173.47" y="687.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (4 samples, 0.02%)</title><rect x="107.2" y="821" width="0.2" height="15.0" fill="rgb(221,28,23)" rx="2" ry="2" />
<text  x="110.23" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars@plt (15 samples, 0.07%)</title><rect x="224.9" y="501" width="0.7" height="15.0" fill="rgb(249,136,32)" rx="2" ry="2" />
<text  x="227.85" y="511.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipTo (2 samples, 0.01%)</title><rect x="1098.9" y="597" width="0.1" height="15.0" fill="rgb(254,99,9)" rx="2" ry="2" />
<text  x="1101.94" y="607.5" ></text>
</g>
<g >
<title>wp_page_copy (7 samples, 0.03%)</title><rect x="120.5" y="405" width="0.4" height="15.0" fill="rgb(210,107,48)" rx="2" ry="2" />
<text  x="123.54" y="415.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (1,561 samples, 7.04%)</title><rect x="449.9" y="373" width="83.0" height="15.0" fill="rgb(215,54,54)" rx="2" ry="2" />
<text  x="452.87" y="383.5" >[libasan...</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (3,526 samples, 15.90%)</title><rect x="864.6" y="405" width="187.7" height="15.0" fill="rgb(238,64,20)" rx="2" ry="2" />
<text  x="867.61" y="415.5" >std::allocator_traits&lt;st..</text>
</g>
<g >
<title>Game_Player::Update (4 samples, 0.02%)</title><rect x="1170.2" y="693" width="0.2" height="15.0" fill="rgb(240,106,3)" rx="2" ry="2" />
<text  x="1173.20" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (4 samples, 0.02%)</title><rect x="244.7" y="517" width="0.2" height="15.0" fill="rgb(234,14,12)" rx="2" ry="2" />
<text  x="247.70" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (2 samples, 0.01%)</title><rect x="71.1" y="837" width="0.1" height="15.0" fill="rgb(239,33,15)" rx="2" ry="2" />
<text  x="74.10" y="847.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.01%)</title><rect x="35.1" y="789" width="0.1" height="15.0" fill="rgb(226,189,6)" rx="2" ry="2" />
<text  x="38.07" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (58 samples, 0.26%)</title><rect x="1148.5" y="597" width="3.1" height="15.0" fill="rgb(237,123,18)" rx="2" ry="2" />
<text  x="1151.49" y="607.5" ></text>
</g>
<g >
<title>pmd_pfn (2 samples, 0.01%)</title><rect x="198.0" y="437" width="0.1" height="15.0" fill="rgb(239,213,38)" rx="2" ry="2" />
<text  x="200.97" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length@plt (11 samples, 0.05%)</title><rect x="222.9" y="501" width="0.6" height="15.0" fill="rgb(254,78,1)" rx="2" ry="2" />
<text  x="225.93" y="511.5" ></text>
</g>
<g >
<title>memmove (2 samples, 0.01%)</title><rect x="94.1" y="325" width="0.1" height="15.0" fill="rgb(231,226,6)" rx="2" ry="2" />
<text  x="97.14" y="335.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.07%)</title><rect x="219.8" y="501" width="0.8" height="15.0" fill="rgb(252,94,7)" rx="2" ry="2" />
<text  x="222.79" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::EventCommand const*, std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt; &gt;::operator* (10 samples, 0.05%)</title><rect x="121.1" y="565" width="0.5" height="15.0" fill="rgb(221,193,38)" rx="2" ry="2" />
<text  x="124.07" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;RPG::SaveEventExecFrame&gt;::construct&lt;RPG::SaveEventExecFrame, RPG::SaveEventExecFrame&gt; (4 samples, 0.02%)</title><rect x="786.5" y="565" width="0.2" height="15.0" fill="rgb(236,189,46)" rx="2" ry="2" />
<text  x="789.48" y="575.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (261 samples, 1.18%)</title><rect x="790.0" y="645" width="13.9" height="15.0" fill="rgb(240,125,30)" rx="2" ry="2" />
<text  x="793.05" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (2 samples, 0.01%)</title><rect x="1156.8" y="597" width="0.1" height="15.0" fill="rgb(226,187,5)" rx="2" ry="2" />
<text  x="1159.79" y="607.5" ></text>
</g>
<g >
<title>native_write_msr (6 samples, 0.03%)</title><rect x="528.0" y="149" width="0.4" height="15.0" fill="rgb(209,160,52)" rx="2" ry="2" />
<text  x="531.05" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::_M_move_assign (8 samples, 0.04%)</title><rect x="112.9" y="613" width="0.5" height="15.0" fill="rgb(252,12,2)" rx="2" ry="2" />
<text  x="115.93" y="623.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (2 samples, 0.01%)</title><rect x="1172.8" y="565" width="0.1" height="15.0" fill="rgb(209,61,6)" rx="2" ry="2" />
<text  x="1175.76" y="575.5" ></text>
</g>
<g >
<title>Bitmap::width (2 samples, 0.01%)</title><rect x="1170.8" y="629" width="0.1" height="15.0" fill="rgb(232,148,30)" rx="2" ry="2" />
<text  x="1173.84" y="639.5" ></text>
</g>
<g >
<title>std::operator!=&lt;RPG::SaveEventExecFrame*&gt; (2 samples, 0.01%)</title><rect x="786.4" y="517" width="0.1" height="15.0" fill="rgb(233,194,11)" rx="2" ry="2" />
<text  x="789.38" y="527.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (27 samples, 0.12%)</title><rect x="1143.6" y="533" width="1.5" height="15.0" fill="rgb(238,183,21)" rx="2" ry="2" />
<text  x="1146.65" y="543.5" ></text>
</g>
<g >
<title>x86_pmu_enable (7 samples, 0.03%)</title><rect x="528.0" y="197" width="0.4" height="15.0" fill="rgb(224,37,5)" rx="2" ry="2" />
<text  x="531.05" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::operator= (9 samples, 0.04%)</title><rect x="112.9" y="629" width="0.5" height="15.0" fill="rgb(215,105,33)" rx="2" ry="2" />
<text  x="115.93" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::~new_allocator (10 samples, 0.05%)</title><rect x="727.5" y="485" width="0.5" height="15.0" fill="rgb(248,83,2)" rx="2" ry="2" />
<text  x="730.52" y="495.5" ></text>
</g>
<g >
<title>__sched_text_start (92 samples, 0.41%)</title><rect x="28.9" y="725" width="4.9" height="15.0" fill="rgb(243,69,19)" rx="2" ry="2" />
<text  x="31.95" y="735.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (136 samples, 0.61%)</title><rect x="113.8" y="533" width="7.2" height="15.0" fill="rgb(218,221,16)" rx="2" ry="2" />
<text  x="116.78" y="543.5" ></text>
</g>
<g >
<title>handle_irq_event (2 samples, 0.01%)</title><rect x="326.4" y="389" width="0.1" height="15.0" fill="rgb(218,143,32)" rx="2" ry="2" />
<text  x="329.39" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.01%)</title><rect x="1086.0" y="341" width="0.1" height="15.0" fill="rgb(238,139,16)" rx="2" ry="2" />
<text  x="1088.95" y="351.5" ></text>
</g>
<g >
<title>__do_page_fault (10 samples, 0.05%)</title><rect x="536.9" y="341" width="0.5" height="15.0" fill="rgb(253,68,7)" rx="2" ry="2" />
<text  x="539.88" y="351.5" ></text>
</g>
<g >
<title>Input::UiSource::Update (5 samples, 0.02%)</title><rect x="111.7" y="725" width="0.2" height="15.0" fill="rgb(243,130,47)" rx="2" ry="2" />
<text  x="114.65" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (11 samples, 0.05%)</title><rect x="1114.6" y="549" width="0.6" height="15.0" fill="rgb(209,17,23)" rx="2" ry="2" />
<text  x="1117.64" y="559.5" ></text>
</g>
<g >
<title>operator new (79 samples, 0.36%)</title><rect x="1178.2" y="853" width="4.2" height="15.0" fill="rgb(211,7,5)" rx="2" ry="2" />
<text  x="1181.19" y="863.5" ></text>
</g>
<g >
<title>__do_page_fault (39 samples, 0.18%)</title><rect x="116.1" y="421" width="2.1" height="15.0" fill="rgb(231,171,8)" rx="2" ry="2" />
<text  x="119.12" y="431.5" ></text>
</g>
<g >
<title>Game_System::OnSeReady (3 samples, 0.01%)</title><rect x="94.4" y="533" width="0.1" height="15.0" fill="rgb(246,91,14)" rx="2" ry="2" />
<text  x="97.35" y="543.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;RPG::EventCommand&gt; (11 samples, 0.05%)</title><rect x="806.3" y="501" width="0.6" height="15.0" fill="rgb(246,161,31)" rx="2" ry="2" />
<text  x="809.28" y="511.5" ></text>
</g>
<g >
<title>__GI_madvise (3 samples, 0.01%)</title><rect x="1086.0" y="357" width="0.1" height="15.0" fill="rgb(251,88,13)" rx="2" ry="2" />
<text  x="1088.95" y="367.5" ></text>
</g>
<g >
<title>rw_verify_area (3 samples, 0.01%)</title><rect x="34.3" y="773" width="0.2" height="15.0" fill="rgb(216,56,30)" rx="2" ry="2" />
<text  x="37.32" y="783.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, int const*, int*&gt; (29 samples, 0.13%)</title><rect x="62.7" y="837" width="1.5" height="15.0" fill="rgb(241,100,50)" rx="2" ry="2" />
<text  x="65.69" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (17 samples, 0.08%)</title><rect x="793.9" y="597" width="0.9" height="15.0" fill="rgb(231,175,10)" rx="2" ry="2" />
<text  x="796.93" y="607.5" ></text>
</g>
<g >
<title>__vma_adjust (2 samples, 0.01%)</title><rect x="114.8" y="325" width="0.1" height="15.0" fill="rgb(245,65,43)" rx="2" ry="2" />
<text  x="117.79" y="335.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::~function (3 samples, 0.01%)</title><rect x="1143.5" y="549" width="0.1" height="15.0" fill="rgb(239,147,6)" rx="2" ry="2" />
<text  x="1146.49" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (2 samples, 0.01%)</title><rect x="1131.0" y="581" width="0.1" height="15.0" fill="rgb(210,229,52)" rx="2" ry="2" />
<text  x="1133.98" y="591.5" ></text>
</g>
<g >
<title>Cache::SystemOrBlack (2 samples, 0.01%)</title><rect x="1172.4" y="677" width="0.1" height="15.0" fill="rgb(230,63,45)" rx="2" ry="2" />
<text  x="1175.44" y="687.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::_M_allocate (2 samples, 0.01%)</title><rect x="57.4" y="837" width="0.1" height="15.0" fill="rgb(228,11,48)" rx="2" ry="2" />
<text  x="60.42" y="847.5" ></text>
</g>
<g >
<title>sock_poll (2 samples, 0.01%)</title><rect x="33.8" y="789" width="0.1" height="15.0" fill="rgb(215,36,41)" rx="2" ry="2" />
<text  x="36.84" y="799.5" ></text>
</g>
<g >
<title>Game_Switches_Class::Get (4 samples, 0.02%)</title><rect x="112.5" y="629" width="0.2" height="15.0" fill="rgb(222,211,54)" rx="2" ry="2" />
<text  x="115.50" y="639.5" ></text>
</g>
<g >
<title>__lru_cache_add (39 samples, 0.18%)</title><rect x="193.2" y="421" width="2.1" height="15.0" fill="rgb(220,192,32)" rx="2" ry="2" />
<text  x="196.18" y="431.5" ></text>
</g>
<g >
<title>perf_event_mmap (7 samples, 0.03%)</title><rect x="114.4" y="341" width="0.4" height="15.0" fill="rgb(219,28,49)" rx="2" ry="2" />
<text  x="117.42" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="1172.8" y="533" width="0.1" height="15.0" fill="rgb(246,96,16)" rx="2" ry="2" />
<text  x="1175.76" y="543.5" ></text>
</g>
<g >
<title>__fget_light (3 samples, 0.01%)</title><rect x="28.5" y="773" width="0.1" height="15.0" fill="rgb(243,48,7)" rx="2" ry="2" />
<text  x="31.47" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (3 samples, 0.01%)</title><rect x="1136.7" y="597" width="0.1" height="15.0" fill="rgb(254,146,6)" rx="2" ry="2" />
<text  x="1139.67" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::vector (2 samples, 0.01%)</title><rect x="71.3" y="837" width="0.1" height="15.0" fill="rgb(227,28,34)" rx="2" ry="2" />
<text  x="74.26" y="847.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (11 samples, 0.05%)</title><rect x="220.0" y="469" width="0.6" height="15.0" fill="rgb(232,28,35)" rx="2" ry="2" />
<text  x="223.01" y="479.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;RPG::EventCommand const*, std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt; &gt;, RPG::EventCommand*&gt; (12,473 samples, 56.26%)</title><rect x="122.0" y="565" width="663.8" height="15.0" fill="rgb(245,47,50)" rx="2" ry="2" />
<text  x="125.03" y="575.5" >std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;RPG::EventComm..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (15 samples, 0.07%)</title><rect x="219.8" y="485" width="0.8" height="15.0" fill="rgb(210,112,7)" rx="2" ry="2" />
<text  x="222.85" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;RPG::SaveEventExecFrame&gt;::allocate (3 samples, 0.01%)</title><rect x="786.0" y="549" width="0.2" height="15.0" fill="rgb(205,119,20)" rx="2" ry="2" />
<text  x="789.00" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (23 samples, 0.10%)</title><rect x="1139.4" y="597" width="1.2" height="15.0" fill="rgb(232,97,27)" rx="2" ry="2" />
<text  x="1142.39" y="607.5" ></text>
</g>
<g >
<title>native_write_msr (24 samples, 0.11%)</title><rect x="1174.4" y="437" width="1.3" height="15.0" fill="rgb(246,13,46)" rx="2" ry="2" />
<text  x="1177.41" y="447.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (22 samples, 0.10%)</title><rect x="1092.6" y="277" width="1.2" height="15.0" fill="rgb(230,177,41)" rx="2" ry="2" />
<text  x="1095.61" y="287.5" ></text>
</g>
<g >
<title>ptep_clear_flush (2 samples, 0.01%)</title><rect x="537.3" y="261" width="0.1" height="15.0" fill="rgb(252,192,14)" rx="2" ry="2" />
<text  x="540.31" y="271.5" ></text>
</g>
<g >
<title>Cache::System (6 samples, 0.03%)</title><rect x="1172.7" y="645" width="0.3" height="15.0" fill="rgb(225,179,43)" rx="2" ry="2" />
<text  x="1175.70" y="655.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (8 samples, 0.04%)</title><rect x="92.8" y="773" width="0.4" height="15.0" fill="rgb(254,93,49)" rx="2" ry="2" />
<text  x="95.76" y="783.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (6 samples, 0.03%)</title><rect x="1163.2" y="629" width="0.3" height="15.0" fill="rgb(221,4,10)" rx="2" ry="2" />
<text  x="1166.23" y="639.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.01%)</title><rect x="35.1" y="773" width="0.1" height="15.0" fill="rgb(216,200,53)" rx="2" ry="2" />
<text  x="38.07" y="783.5" ></text>
</g>
<g >
<title>std::none_of&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, Input::UiSource::Update()::{lambda(int)#1}&gt; (4 samples, 0.02%)</title><rect x="111.7" y="693" width="0.2" height="15.0" fill="rgb(242,157,25)" rx="2" ry="2" />
<text  x="114.65" y="703.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (2 samples, 0.01%)</title><rect x="1173.7" y="629" width="0.1" height="15.0" fill="rgb(222,72,53)" rx="2" ry="2" />
<text  x="1176.71" y="639.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (8 samples, 0.04%)</title><rect x="92.8" y="533" width="0.4" height="15.0" fill="rgb(240,4,27)" rx="2" ry="2" />
<text  x="95.76" y="543.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (456 samples, 2.06%)</title><rect x="685.5" y="421" width="24.3" height="15.0" fill="rgb(230,93,35)" rx="2" ry="2" />
<text  x="688.52" y="431.5" >s..</text>
</g>
<g >
<title>free_pcppages_bulk (2 samples, 0.01%)</title><rect x="1086.0" y="149" width="0.1" height="15.0" fill="rgb(211,212,16)" rx="2" ry="2" />
<text  x="1088.95" y="159.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;true&gt;::__destroy&lt;int*&gt; (6 samples, 0.03%)</title><rect x="83.7" y="837" width="0.3" height="15.0" fill="rgb(211,147,13)" rx="2" ry="2" />
<text  x="86.71" y="847.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (2 samples, 0.01%)</title><rect x="1172.2" y="661" width="0.1" height="15.0" fill="rgb(252,130,36)" rx="2" ry="2" />
<text  x="1175.17" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (19 samples, 0.09%)</title><rect x="798.1" y="613" width="1.1" height="15.0" fill="rgb(248,159,29)" rx="2" ry="2" />
<text  x="801.14" y="623.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (70 samples, 0.32%)</title><rect x="1086.4" y="261" width="3.8" height="15.0" fill="rgb(239,0,19)" rx="2" ry="2" />
<text  x="1089.43" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (11 samples, 0.05%)</title><rect x="1130.4" y="581" width="0.6" height="15.0" fill="rgb(233,172,25)" rx="2" ry="2" />
<text  x="1133.39" y="591.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (52 samples, 0.23%)</title><rect x="1173.2" y="677" width="2.7" height="15.0" fill="rgb(207,62,24)" rx="2" ry="2" />
<text  x="1176.18" y="687.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (3 samples, 0.01%)</title><rect x="1142.0" y="549" width="0.2" height="15.0" fill="rgb(211,52,28)" rx="2" ry="2" />
<text  x="1145.00" y="559.5" ></text>
</g>
<g >
<title>Sdl2Ui::UpdateDisplay (7 samples, 0.03%)</title><rect x="111.0" y="709" width="0.4" height="15.0" fill="rgb(218,91,0)" rx="2" ry="2" />
<text  x="114.01" y="719.5" ></text>
</g>
<g >
<title>__fget (3 samples, 0.01%)</title><rect x="28.5" y="757" width="0.1" height="15.0" fill="rgb(223,71,14)" rx="2" ry="2" />
<text  x="31.47" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::new_allocator (9 samples, 0.04%)</title><rect x="54.1" y="837" width="0.5" height="15.0" fill="rgb(245,159,27)" rx="2" ry="2" />
<text  x="57.12" y="847.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (17 samples, 0.08%)</title><rect x="67.3" y="837" width="0.9" height="15.0" fill="rgb(212,58,43)" rx="2" ry="2" />
<text  x="70.32" y="847.5" ></text>
</g>
<g >
<title>_XEventsQueued (8 samples, 0.04%)</title><rect x="1173.3" y="629" width="0.4" height="15.0" fill="rgb(217,84,39)" rx="2" ry="2" />
<text  x="1176.29" y="639.5" ></text>
</g>
<g >
<title>RPG::EventCommand::EventCommand (8 samples, 0.04%)</title><rect x="126.2" y="549" width="0.4" height="15.0" fill="rgb(216,171,20)" rx="2" ry="2" />
<text  x="129.18" y="559.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (25 samples, 0.11%)</title><rect x="1143.7" y="501" width="1.3" height="15.0" fill="rgb(224,223,19)" rx="2" ry="2" />
<text  x="1146.70" y="511.5" ></text>
</g>
<g >
<title>_XEventsQueued (10 samples, 0.05%)</title><rect x="1175.9" y="661" width="0.6" height="15.0" fill="rgb(233,132,54)" rx="2" ry="2" />
<text  x="1178.95" y="671.5" ></text>
</g>
<g >
<title>__GI___nanosleep (36 samples, 0.16%)</title><rect x="1174.0" y="661" width="1.9" height="15.0" fill="rgb(211,27,22)" rx="2" ry="2" />
<text  x="1177.03" y="671.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (7 samples, 0.03%)</title><rect x="111.0" y="645" width="0.4" height="15.0" fill="rgb(242,25,50)" rx="2" ry="2" />
<text  x="114.01" y="655.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (207 samples, 0.93%)</title><rect x="544.7" y="485" width="11.0" height="15.0" fill="rgb(252,100,23)" rx="2" ry="2" />
<text  x="547.65" y="495.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (8 samples, 0.04%)</title><rect x="92.8" y="501" width="0.4" height="15.0" fill="rgb(251,112,47)" rx="2" ry="2" />
<text  x="95.76" y="511.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.01%)</title><rect x="1086.0" y="229" width="0.1" height="15.0" fill="rgb(240,166,50)" rx="2" ry="2" />
<text  x="1088.95" y="239.5" ></text>
</g>
<g >
<title>Graphics::RemoveDrawable (3 samples, 0.01%)</title><rect x="1144.8" y="293" width="0.1" height="15.0" fill="rgb(250,84,7)" rx="2" ry="2" />
<text  x="1147.76" y="303.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (6 samples, 0.03%)</title><rect x="114.5" y="309" width="0.3" height="15.0" fill="rgb(243,3,51)" rx="2" ry="2" />
<text  x="117.47" y="319.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (11 samples, 0.05%)</title><rect x="118.5" y="437" width="0.5" height="15.0" fill="rgb(244,173,46)" rx="2" ry="2" />
<text  x="121.46" y="447.5" ></text>
</g>
<g >
<title>__mod_node_page_state (2 samples, 0.01%)</title><rect x="194.7" y="373" width="0.1" height="15.0" fill="rgb(231,117,54)" rx="2" ry="2" />
<text  x="197.67" y="383.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="536.3" y="261" width="0.2" height="15.0" fill="rgb(240,144,0)" rx="2" ry="2" />
<text  x="539.35" y="271.5" ></text>
</g>
<g >
<title>Game_Interpreter::Push (12,650 samples, 57.05%)</title><rect x="113.5" y="661" width="673.2" height="15.0" fill="rgb(254,143,2)" rx="2" ry="2" />
<text  x="116.51" y="671.5" >Game_Interpreter::Push</text>
</g>
<g >
<title>entry_SYSCALL_64 (5 samples, 0.02%)</title><rect x="27.6" y="853" width="0.2" height="15.0" fill="rgb(213,166,28)" rx="2" ry="2" />
<text  x="30.56" y="863.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (5 samples, 0.02%)</title><rect x="94.5" y="693" width="0.3" height="15.0" fill="rgb(207,36,33)" rx="2" ry="2" />
<text  x="97.51" y="703.5" ></text>
</g>
<g >
<title>pthread_getspecific@plt (3 samples, 0.01%)</title><rect x="1092.2" y="357" width="0.2" height="15.0" fill="rgb(231,195,42)" rx="2" ry="2" />
<text  x="1095.23" y="367.5" ></text>
</g>
<g >
<title>__do_page_fault (8 samples, 0.04%)</title><rect x="119.0" y="453" width="0.5" height="15.0" fill="rgb(253,8,32)" rx="2" ry="2" />
<text  x="122.05" y="463.5" ></text>
</g>
<g >
<title>TilemapSubLayer::Draw (4 samples, 0.02%)</title><rect x="110.8" y="693" width="0.2" height="15.0" fill="rgb(209,17,27)" rx="2" ry="2" />
<text  x="113.80" y="703.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (5 samples, 0.02%)</title><rect x="94.5" y="677" width="0.3" height="15.0" fill="rgb(240,63,20)" rx="2" ry="2" />
<text  x="97.51" y="687.5" ></text>
</g>
<g >
<title>Bitmap::GetWidth (2 samples, 0.01%)</title><rect x="1170.8" y="645" width="0.1" height="15.0" fill="rgb(232,49,16)" rx="2" ry="2" />
<text  x="1173.84" y="655.5" ></text>
</g>
<g >
<title>[unknown] (/tmp/.glXJXl0q (2 samples, 0.01%)</title><rect x="92.7" y="853" width="0.1" height="15.0" fill="rgb(206,147,34)" rx="2" ry="2" />
<text  x="95.65" y="863.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (2 samples, 0.01%)</title><rect x="1176.2" y="597" width="0.1" height="15.0" fill="rgb(245,207,54)" rx="2" ry="2" />
<text  x="1179.22" y="607.5" ></text>
</g>
<g >
<title>__inc_numa_state (4 samples, 0.02%)</title><rect x="183.9" y="405" width="0.2" height="15.0" fill="rgb(216,23,10)" rx="2" ry="2" />
<text  x="186.92" y="415.5" ></text>
</g>
<g >
<title>__sched_text_start (32 samples, 0.14%)</title><rect x="1174.2" y="549" width="1.7" height="15.0" fill="rgb(224,129,38)" rx="2" ry="2" />
<text  x="1177.19" y="559.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (67 samples, 0.30%)</title><rect x="1086.6" y="229" width="3.6" height="15.0" fill="rgb(233,87,36)" rx="2" ry="2" />
<text  x="1089.59" y="239.5" ></text>
</g>
<g >
<title>std::any_of&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, Input::UiSource::Update()::{lambda(int)#1}&gt; (4 samples, 0.02%)</title><rect x="111.7" y="709" width="0.2" height="15.0" fill="rgb(241,31,0)" rx="2" ry="2" />
<text  x="114.65" y="719.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.02%)</title><rect x="824.9" y="405" width="0.3" height="15.0" fill="rgb(230,71,4)" rx="2" ry="2" />
<text  x="827.91" y="415.5" ></text>
</g>
<g >
<title>__libc_recvmsg (4 samples, 0.02%)</title><rect x="1175.9" y="549" width="0.3" height="15.0" fill="rgb(244,61,38)" rx="2" ry="2" />
<text  x="1178.95" y="559.5" ></text>
</g>
<g >
<title>poll (3 samples, 0.01%)</title><rect x="1176.5" y="629" width="0.1" height="15.0" fill="rgb(215,194,24)" rx="2" ry="2" />
<text  x="1179.48" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;Drawable* const&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="1144.8" y="229" width="0.1" height="15.0" fill="rgb(230,15,17)" rx="2" ry="2" />
<text  x="1147.76" y="239.5" ></text>
</g>
<g >
<title>get_task_policy.part.35 (2 samples, 0.01%)</title><rect x="192.6" y="405" width="0.1" height="15.0" fill="rgb(212,138,28)" rx="2" ry="2" />
<text  x="195.60" y="415.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (3 samples, 0.01%)</title><rect x="94.4" y="661" width="0.1" height="15.0" fill="rgb(251,110,18)" rx="2" ry="2" />
<text  x="97.35" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (10 samples, 0.05%)</title><rect x="52.9" y="837" width="0.6" height="15.0" fill="rgb(223,103,38)" rx="2" ry="2" />
<text  x="55.95" y="847.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.01%)</title><rect x="1189.8" y="853" width="0.2" height="15.0" fill="rgb(237,13,51)" rx="2" ry="2" />
<text  x="1192.84" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt;::begin (8 samples, 0.04%)</title><rect x="1161.7" y="629" width="0.4" height="15.0" fill="rgb(215,127,7)" rx="2" ry="2" />
<text  x="1164.69" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char&gt; (4 samples, 0.02%)</title><rect x="49.5" y="837" width="0.3" height="15.0" fill="rgb(236,223,12)" rx="2" ry="2" />
<text  x="52.54" y="847.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;RPG::EventCommand&gt; &gt;::deallocate (570 samples, 2.57%)</title><rect x="1066.2" y="501" width="30.3" height="15.0" fill="rgb(229,45,31)" rx="2" ry="2" />
<text  x="1069.21" y="511.5" >st..</text>
</g>
<g >
<title>std::map&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, (anonymous namespace)::CacheItem, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (3 samples, 0.01%)</title><rect x="1144.2" y="341" width="0.2" height="15.0" fill="rgb(223,117,53)" rx="2" ry="2" />
<text  x="1147.23" y="351.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::swap (2 samples, 0.01%)</title><rect x="1140.8" y="565" width="0.1" height="15.0" fill="rgb(216,140,2)" rx="2" ry="2" />
<text  x="1143.82" y="575.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, int const*, int*&gt; (974 samples, 4.39%)</title><rect x="633.7" y="421" width="51.8" height="15.0" fill="rgb(207,129,39)" rx="2" ry="2" />
<text  x="636.69" y="431.5" >std::..</text>
</g>
<g >
<title>__GI___pthread_getspecific (31 samples, 0.14%)</title><rect x="1042.6" y="309" width="1.7" height="15.0" fill="rgb(223,180,36)" rx="2" ry="2" />
<text  x="1045.63" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;RPG::SaveEventExecFrame&gt;::destroy&lt;RPG::SaveEventExecFrame&gt; (5,454 samples, 24.60%)</title><rect x="806.3" y="581" width="290.2" height="15.0" fill="rgb(244,228,23)" rx="2" ry="2" />
<text  x="809.28" y="591.5" >__gnu_cxx::new_allocator&lt;RPG::SaveEven..</text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::reset (3 samples, 0.01%)</title><rect x="1140.8" y="581" width="0.1" height="15.0" fill="rgb(236,21,43)" rx="2" ry="2" />
<text  x="1143.77" y="591.5" ></text>
</g>
<g >
<title>handle_irq_event (2 samples, 0.01%)</title><rect x="685.0" y="293" width="0.2" height="15.0" fill="rgb(211,76,54)" rx="2" ry="2" />
<text  x="688.05" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (4 samples, 0.02%)</title><rect x="1146.7" y="581" width="0.2" height="15.0" fill="rgb(235,139,13)" rx="2" ry="2" />
<text  x="1149.73" y="591.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (6 samples, 0.03%)</title><rect x="195.3" y="437" width="0.3" height="15.0" fill="rgb(236,208,7)" rx="2" ry="2" />
<text  x="198.26" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (4 samples, 0.02%)</title><rect x="90.0" y="837" width="0.2" height="15.0" fill="rgb(253,63,37)" rx="2" ry="2" />
<text  x="92.99" y="847.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (22 samples, 0.10%)</title><rect x="1092.6" y="261" width="1.2" height="15.0" fill="rgb(247,121,52)" rx="2" ry="2" />
<text  x="1095.61" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string@plt (12 samples, 0.05%)</title><rect x="243.0" y="517" width="0.6" height="15.0" fill="rgb(210,131,12)" rx="2" ry="2" />
<text  x="246.00" y="527.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (8 samples, 0.04%)</title><rect x="92.8" y="517" width="0.4" height="15.0" fill="rgb(242,43,14)" rx="2" ry="2" />
<text  x="95.76" y="527.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="112.1" y="709" width="0.1" height="15.0" fill="rgb(217,9,28)" rx="2" ry="2" />
<text  x="115.08" y="719.5" ></text>
</g>
<g >
<title>memmove (774 samples, 3.49%)</title><rect x="644.1" y="389" width="41.2" height="15.0" fill="rgb(214,93,30)" rx="2" ry="2" />
<text  x="647.07" y="399.5" >mem..</text>
</g>
<g >
<title>__GI___pthread_getspecific (6 samples, 0.03%)</title><rect x="104.7" y="837" width="0.4" height="15.0" fill="rgb(242,188,18)" rx="2" ry="2" />
<text  x="107.73" y="847.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.01%)</title><rect x="1086.0" y="325" width="0.1" height="15.0" fill="rgb(221,4,15)" rx="2" ry="2" />
<text  x="1088.95" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (2 samples, 0.01%)</title><rect x="1143.9" y="293" width="0.1" height="15.0" fill="rgb(217,102,32)" rx="2" ry="2" />
<text  x="1146.86" y="303.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (12 samples, 0.05%)</title><rect x="1142.3" y="565" width="0.7" height="15.0" fill="rgb(240,23,38)" rx="2" ry="2" />
<text  x="1145.31" y="575.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (7 samples, 0.03%)</title><rect x="528.0" y="213" width="0.4" height="15.0" fill="rgb(212,212,49)" rx="2" ry="2" />
<text  x="531.05" y="223.5" ></text>
</g>
<g >
<title>do_nanosleep (34 samples, 0.15%)</title><rect x="1174.1" y="581" width="1.8" height="15.0" fill="rgb(217,46,10)" rx="2" ry="2" />
<text  x="1177.09" y="591.5" ></text>
</g>
<g >
<title>Sprite::BlitScreenIntern (3 samples, 0.01%)</title><rect x="110.6" y="661" width="0.1" height="15.0" fill="rgb(209,180,41)" rx="2" ry="2" />
<text  x="113.59" y="671.5" ></text>
</g>
<g >
<title>free_unref_page_list (7 samples, 0.03%)</title><rect x="1093.3" y="197" width="0.4" height="15.0" fill="rgb(252,127,39)" rx="2" ry="2" />
<text  x="1096.30" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="1042.3" y="245" width="0.1" height="15.0" fill="rgb(247,112,44)" rx="2" ry="2" />
<text  x="1045.31" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (5 samples, 0.02%)</title><rect x="1159.8" y="581" width="0.2" height="15.0" fill="rgb(211,37,54)" rx="2" ry="2" />
<text  x="1162.77" y="591.5" ></text>
</g>
<g >
<title>Game_Map::UpdateForegroundEvents (5 samples, 0.02%)</title><rect x="1169.9" y="693" width="0.2" height="15.0" fill="rgb(251,13,7)" rx="2" ry="2" />
<text  x="1172.88" y="703.5" ></text>
</g>
<g >
<title>__interceptor_recvmsg (4 samples, 0.02%)</title><rect x="1175.9" y="581" width="0.3" height="15.0" fill="rgb(248,25,7)" rx="2" ry="2" />
<text  x="1178.95" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="112.1" y="693" width="0.1" height="15.0" fill="rgb(219,125,30)" rx="2" ry="2" />
<text  x="115.08" y="703.5" ></text>
</g>
<g >
<title>unmap_single_vma (38 samples, 0.17%)</title><rect x="1090.2" y="245" width="2.0" height="15.0" fill="rgb(213,123,47)" rx="2" ry="2" />
<text  x="1093.21" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (10 samples, 0.05%)</title><rect x="1041.7" y="245" width="0.6" height="15.0" fill="rgb(220,193,23)" rx="2" ry="2" />
<text  x="1044.73" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::EventCommand const*, std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt; &gt; (15 samples, 0.07%)</title><rect x="1164.5" y="629" width="0.8" height="15.0" fill="rgb(217,180,23)" rx="2" ry="2" />
<text  x="1167.51" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;RPG::EventCommand&gt;::deallocate (570 samples, 2.57%)</title><rect x="1066.2" y="485" width="30.3" height="15.0" fill="rgb(220,95,43)" rx="2" ry="2" />
<text  x="1069.21" y="495.5" >__..</text>
</g>
<g >
<title>sync_regs (3 samples, 0.01%)</title><rect x="120.2" y="485" width="0.2" height="15.0" fill="rgb(220,135,3)" rx="2" ry="2" />
<text  x="123.22" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="112.2" y="629" width="0.1" height="15.0" fill="rgb(211,203,32)" rx="2" ry="2" />
<text  x="115.24" y="639.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.01%)</title><rect x="536.3" y="357" width="0.2" height="15.0" fill="rgb(235,113,39)" rx="2" ry="2" />
<text  x="539.35" y="367.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (18 samples, 0.08%)</title><rect x="93.3" y="773" width="0.9" height="15.0" fill="rgb(223,209,17)" rx="2" ry="2" />
<text  x="96.29" y="783.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (19 samples, 0.09%)</title><rect x="105.3" y="821" width="1.0" height="15.0" fill="rgb(219,213,44)" rx="2" ry="2" />
<text  x="108.32" y="831.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (3 samples, 0.01%)</title><rect x="1142.0" y="533" width="0.2" height="15.0" fill="rgb(234,9,33)" rx="2" ry="2" />
<text  x="1145.00" y="543.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (507 samples, 2.29%)</title><rect x="1015.7" y="309" width="26.9" height="15.0" fill="rgb(253,113,29)" rx="2" ry="2" />
<text  x="1018.65" y="319.5" >[..</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;Drawable* const&gt; &gt; (2 samples, 0.01%)</title><rect x="1144.8" y="245" width="0.1" height="15.0" fill="rgb(230,144,12)" rx="2" ry="2" />
<text  x="1147.76" y="255.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (3 samples, 0.01%)</title><rect x="119.3" y="405" width="0.1" height="15.0" fill="rgb(206,42,20)" rx="2" ry="2" />
<text  x="122.26" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::empty (2 samples, 0.01%)</title><rect x="1169.7" y="661" width="0.1" height="15.0" fill="rgb(254,182,37)" rx="2" ry="2" />
<text  x="1172.72" y="671.5" ></text>
</g>
<g >
<title>free_unref_page_prepare.part.74 (2 samples, 0.01%)</title><rect x="1089.7" y="165" width="0.1" height="15.0" fill="rgb(205,213,21)" rx="2" ry="2" />
<text  x="1092.73" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (6 samples, 0.03%)</title><rect x="86.2" y="837" width="0.3" height="15.0" fill="rgb(234,95,44)" rx="2" ry="2" />
<text  x="89.21" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (6 samples, 0.03%)</title><rect x="1101.4" y="565" width="0.3" height="15.0" fill="rgb(230,199,9)" rx="2" ry="2" />
<text  x="1104.39" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::operator[] (2 samples, 0.01%)</title><rect x="71.7" y="837" width="0.1" height="15.0" fill="rgb(218,201,42)" rx="2" ry="2" />
<text  x="74.68" y="847.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (2 samples, 0.01%)</title><rect x="94.1" y="309" width="0.1" height="15.0" fill="rgb(236,40,36)" rx="2" ry="2" />
<text  x="97.14" y="319.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (18 samples, 0.08%)</title><rect x="93.3" y="517" width="0.9" height="15.0" fill="rgb(245,75,4)" rx="2" ry="2" />
<text  x="96.29" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::operator (6 samples, 0.03%)</title><rect x="1169.4" y="661" width="0.3" height="15.0" fill="rgb(254,161,51)" rx="2" ry="2" />
<text  x="1172.40" y="671.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (5 samples, 0.02%)</title><rect x="94.5" y="661" width="0.3" height="15.0" fill="rgb(230,30,37)" rx="2" ry="2" />
<text  x="97.51" y="671.5" ></text>
</g>
<g >
<title>std::bitset&lt;36ul&gt;::_M_copy_to_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.01%)</title><rect x="112.2" y="709" width="0.1" height="15.0" fill="rgb(242,109,20)" rx="2" ry="2" />
<text  x="115.18" y="719.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;char*&gt; (3 samples, 0.01%)</title><rect x="64.8" y="837" width="0.2" height="15.0" fill="rgb(251,60,23)" rx="2" ry="2" />
<text  x="67.82" y="847.5" ></text>
</g>
<g >
<title>xhci_irq (2 samples, 0.01%)</title><rect x="326.4" y="325" width="0.1" height="15.0" fill="rgb(228,163,10)" rx="2" ry="2" />
<text  x="329.39" y="335.5" ></text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.01%)</title><rect x="536.3" y="325" width="0.2" height="15.0" fill="rgb(220,146,47)" rx="2" ry="2" />
<text  x="539.35" y="335.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (3 samples, 0.01%)</title><rect x="89.2" y="837" width="0.2" height="15.0" fill="rgb(206,41,15)" rx="2" ry="2" />
<text  x="92.24" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::~new_allocator (14 samples, 0.06%)</title><rect x="54.6" y="837" width="0.7" height="15.0" fill="rgb(226,54,39)" rx="2" ry="2" />
<text  x="57.60" y="847.5" ></text>
</g>
<g >
<title>Game_System::SePlay (3 samples, 0.01%)</title><rect x="1142.0" y="597" width="0.2" height="15.0" fill="rgb(245,86,7)" rx="2" ry="2" />
<text  x="1145.00" y="607.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (3 samples, 0.01%)</title><rect x="94.4" y="757" width="0.1" height="15.0" fill="rgb(250,190,39)" rx="2" ry="2" />
<text  x="97.35" y="767.5" ></text>
</g>
<g >
<title>do_page_fault (10 samples, 0.05%)</title><rect x="120.4" y="485" width="0.5" height="15.0" fill="rgb(225,141,0)" rx="2" ry="2" />
<text  x="123.38" y="495.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (3 samples, 0.01%)</title><rect x="94.4" y="789" width="0.1" height="15.0" fill="rgb(206,60,42)" rx="2" ry="2" />
<text  x="97.35" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::pop_back (5,454 samples, 24.60%)</title><rect x="806.3" y="613" width="290.2" height="15.0" fill="rgb(222,145,4)" rx="2" ry="2" />
<text  x="809.28" y="623.5" >std::vector&lt;RPG::SaveEventExecFrame, s..</text>
</g>
<g >
<title>__fget (2 samples, 0.01%)</title><rect x="34.0" y="757" width="0.1" height="15.0" fill="rgb(249,182,18)" rx="2" ry="2" />
<text  x="37.00" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="1176.5" y="581" width="0.1" height="15.0" fill="rgb(210,30,18)" rx="2" ry="2" />
<text  x="1179.54" y="591.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="786.0" y="533" width="0.1" height="15.0" fill="rgb(222,63,5)" rx="2" ry="2" />
<text  x="789.00" y="543.5" ></text>
</g>
<g >
<title>easyrpg-player (21,693 samples, 97.84%)</title><rect x="35.5" y="869" width="1154.5" height="15.0" fill="rgb(205,139,21)" rx="2" ry="2" />
<text  x="38.49" y="879.5" >easyrpg-player</text>
</g>
<g >
<title>get_page_from_freelist (8 samples, 0.04%)</title><rect x="117.0" y="341" width="0.4" height="15.0" fill="rgb(250,168,34)" rx="2" ry="2" />
<text  x="119.97" y="351.5" ></text>
</g>
<g >
<title>std::max&lt;int&gt; (2 samples, 0.01%)</title><rect x="70.0" y="837" width="0.1" height="15.0" fill="rgb(218,189,52)" rx="2" ry="2" />
<text  x="72.98" y="847.5" ></text>
</g>
<g >
<title>finish_task_switch (25 samples, 0.11%)</title><rect x="1174.4" y="533" width="1.3" height="15.0" fill="rgb(254,200,37)" rx="2" ry="2" />
<text  x="1177.41" y="543.5" ></text>
</g>
<g >
<title>Cache::System (2 samples, 0.01%)</title><rect x="1172.4" y="661" width="0.1" height="15.0" fill="rgb(244,30,18)" rx="2" ry="2" />
<text  x="1175.44" y="671.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (5 samples, 0.02%)</title><rect x="94.5" y="757" width="0.3" height="15.0" fill="rgb(247,228,11)" rx="2" ry="2" />
<text  x="97.51" y="767.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::function (2 samples, 0.01%)</title><rect x="1143.4" y="549" width="0.1" height="15.0" fill="rgb(220,30,18)" rx="2" ry="2" />
<text  x="1146.38" y="559.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (3 samples, 0.01%)</title><rect x="94.4" y="645" width="0.1" height="15.0" fill="rgb(250,217,16)" rx="2" ry="2" />
<text  x="97.35" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (5 samples, 0.02%)</title><rect x="1126.8" y="597" width="0.3" height="15.0" fill="rgb(221,113,2)" rx="2" ry="2" />
<text  x="1129.83" y="607.5" ></text>
</g>
<g >
<title>std::find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, Input::UiSource::Update()::{lambda(int)#1}&gt; (3 samples, 0.01%)</title><rect x="111.7" y="677" width="0.2" height="15.0" fill="rgb(234,37,25)" rx="2" ry="2" />
<text  x="114.70" y="687.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (4,083 samples, 18.42%)</title><rect x="326.5" y="453" width="217.3" height="15.0" fill="rgb(247,23,17)" rx="2" ry="2" />
<text  x="329.50" y="463.5" >std::allocator_traits&lt;std::a..</text>
</g>
<g >
<title>__mod_node_page_state (3 samples, 0.01%)</title><rect x="197.6" y="421" width="0.2" height="15.0" fill="rgb(207,29,21)" rx="2" ry="2" />
<text  x="200.60" y="431.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (79 samples, 0.36%)</title><rect x="1178.2" y="837" width="4.2" height="15.0" fill="rgb(217,122,51)" rx="2" ry="2" />
<text  x="1181.19" y="847.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (3 samples, 0.01%)</title><rect x="537.0" y="245" width="0.2" height="15.0" fill="rgb(229,110,53)" rx="2" ry="2" />
<text  x="540.04" y="255.5" ></text>
</g>
<g >
<title>std::forward&lt;RPG::EventCommand const&amp;&gt; (3 samples, 0.01%)</title><rect x="785.7" y="549" width="0.1" height="15.0" fill="rgb(245,157,53)" rx="2" ry="2" />
<text  x="788.69" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.02%)</title><rect x="94.5" y="421" width="0.3" height="15.0" fill="rgb(239,2,4)" rx="2" ry="2" />
<text  x="97.51" y="431.5" ></text>
</g>
<g >
<title>page_fault (10 samples, 0.05%)</title><rect x="536.9" y="373" width="0.5" height="15.0" fill="rgb(235,129,22)" rx="2" ry="2" />
<text  x="539.88" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (27 samples, 0.12%)</title><rect x="294.8" y="501" width="1.4" height="15.0" fill="rgb(218,220,20)" rx="2" ry="2" />
<text  x="297.78" y="511.5" ></text>
</g>
<g >
<title>std::_Construct&lt;RPG::EventCommand, RPG::EventCommand const&amp;&gt; (12,015 samples, 54.19%)</title><rect x="145.5" y="549" width="639.4" height="15.0" fill="rgb(227,180,25)" rx="2" ry="2" />
<text  x="148.50" y="559.5" >std::_Construct&lt;RPG::EventCommand, RPG::EventCommand const&amp;&gt;</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (11 samples, 0.05%)</title><rect x="93.4" y="373" width="0.6" height="15.0" fill="rgb(251,87,43)" rx="2" ry="2" />
<text  x="96.40" y="383.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="94.1" y="373" width="0.1" height="15.0" fill="rgb(235,211,33)" rx="2" ry="2" />
<text  x="97.14" y="383.5" ></text>
</g>
<g >
<title>Game_Screen::GetPicture (2 samples, 0.01%)</title><rect x="1141.8" y="597" width="0.1" height="15.0" fill="rgb(241,29,31)" rx="2" ry="2" />
<text  x="1144.78" y="607.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (2 samples, 0.01%)</title><rect x="194.8" y="373" width="0.1" height="15.0" fill="rgb(229,21,38)" rx="2" ry="2" />
<text  x="197.83" y="383.5" ></text>
</g>
<g >
<title>operator new (136 samples, 0.61%)</title><rect x="113.8" y="549" width="7.2" height="15.0" fill="rgb(248,143,29)" rx="2" ry="2" />
<text  x="116.78" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::new_allocator (17 samples, 0.08%)</title><rect x="554.7" y="453" width="0.9" height="15.0" fill="rgb(222,224,0)" rx="2" ry="2" />
<text  x="557.71" y="463.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (13 samples, 0.06%)</title><rect x="596.6" y="453" width="0.7" height="15.0" fill="rgb(215,52,51)" rx="2" ry="2" />
<text  x="599.59" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (7 samples, 0.03%)</title><rect x="1160.1" y="629" width="0.4" height="15.0" fill="rgb(241,67,8)" rx="2" ry="2" />
<text  x="1163.14" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (11 samples, 0.05%)</title><rect x="1134.9" y="581" width="0.5" height="15.0" fill="rgb(229,171,42)" rx="2" ry="2" />
<text  x="1137.86" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (1,245 samples, 5.62%)</title><rect x="464.3" y="357" width="66.2" height="15.0" fill="rgb(219,99,50)" rx="2" ry="2" />
<text  x="467.29" y="367.5" >[libasa..</text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.01%)</title><rect x="1086.0" y="213" width="0.1" height="15.0" fill="rgb(249,3,28)" rx="2" ry="2" />
<text  x="1088.95" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_M_lower_bound (2 samples, 0.01%)</title><rect x="1144.1" y="293" width="0.1" height="15.0" fill="rgb(211,202,13)" rx="2" ry="2" />
<text  x="1147.07" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;RPG::EventCommand*, RPG::EventCommand&gt; (4,882 samples, 22.02%)</title><rect x="806.3" y="533" width="259.8" height="15.0" fill="rgb(237,9,43)" rx="2" ry="2" />
<text  x="809.28" y="543.5" >std::_Destroy&lt;RPG::EventCommand*, ..</text>
</g>
<g >
<title>FileFinder::MakePath (2 samples, 0.01%)</title><rect x="1143.9" y="325" width="0.1" height="15.0" fill="rgb(217,98,5)" rx="2" ry="2" />
<text  x="1146.86" y="335.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (6,709 samples, 30.26%)</title><rect x="803.9" y="645" width="357.1" height="15.0" fill="rgb(223,179,0)" rx="2" ry="2" />
<text  x="806.94" y="655.5" >Game_Interpreter_Map::ExecuteCommand</text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (*&amp;)(FileRequestResult*, int, int, bool), FileRequestResult*, int&amp;, int&amp;, bool&amp;&gt; (3 samples, 0.01%)</title><rect x="1142.0" y="453" width="0.2" height="15.0" fill="rgb(220,199,36)" rx="2" ry="2" />
<text  x="1145.00" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (4 samples, 0.02%)</title><rect x="1173.3" y="469" width="0.3" height="15.0" fill="rgb(240,138,42)" rx="2" ry="2" />
<text  x="1176.34" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (135 samples, 0.61%)</title><rect x="27.8" y="853" width="7.2" height="15.0" fill="rgb(225,121,45)" rx="2" ry="2" />
<text  x="30.83" y="863.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::reset (5 samples, 0.02%)</title><rect x="1144.8" y="357" width="0.2" height="15.0" fill="rgb(233,91,39)" rx="2" ry="2" />
<text  x="1147.76" y="367.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="94.0" y="389" width="0.1" height="15.0" fill="rgb(211,197,30)" rx="2" ry="2" />
<text  x="96.98" y="399.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (8 samples, 0.04%)</title><rect x="1084.8" y="357" width="0.4" height="15.0" fill="rgb(215,153,29)" rx="2" ry="2" />
<text  x="1087.78" y="367.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (72 samples, 0.32%)</title><rect x="29.9" y="629" width="3.8" height="15.0" fill="rgb(230,224,16)" rx="2" ry="2" />
<text  x="32.85" y="639.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (2 samples, 0.01%)</title><rect x="1172.8" y="597" width="0.1" height="15.0" fill="rgb(246,118,37)" rx="2" ry="2" />
<text  x="1175.76" y="607.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingBackgroundExecution (5 samples, 0.02%)</title><rect x="112.4" y="661" width="0.3" height="15.0" fill="rgb(242,134,45)" rx="2" ry="2" />
<text  x="115.45" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (24 samples, 0.11%)</title><rect x="1158.8" y="597" width="1.2" height="15.0" fill="rgb(208,81,2)" rx="2" ry="2" />
<text  x="1161.76" y="607.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (8 samples, 0.04%)</title><rect x="92.8" y="549" width="0.4" height="15.0" fill="rgb(218,217,17)" rx="2" ry="2" />
<text  x="95.76" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="113.2" y="501" width="0.2" height="15.0" fill="rgb(246,26,47)" rx="2" ry="2" />
<text  x="116.19" y="511.5" ></text>
</g>
<g >
<title>std::forward&lt;RPG::EventCommand const&amp;&gt; (37 samples, 0.17%)</title><rect x="782.6" y="533" width="2.0" height="15.0" fill="rgb(249,134,9)" rx="2" ry="2" />
<text  x="785.60" y="543.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (7 samples, 0.03%)</title><rect x="537.5" y="357" width="0.4" height="15.0" fill="rgb(254,10,12)" rx="2" ry="2" />
<text  x="540.52" y="367.5" ></text>
</g>
<g >
<title>Game_Map::Update (19,903 samples, 89.77%)</title><rect x="112.4" y="709" width="1059.3" height="15.0" fill="rgb(238,75,18)" rx="2" ry="2" />
<text  x="115.45" y="719.5" >Game_Map::Update</text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="112.1" y="677" width="0.1" height="15.0" fill="rgb(210,66,12)" rx="2" ry="2" />
<text  x="115.08" y="687.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;void (*(std::_Placeholder&lt;1&gt;, int, int, bool))(FileRequestResult*, int, int, bool)&gt; &gt;::_M_invoke (3 samples, 0.01%)</title><rect x="94.4" y="613" width="0.1" height="15.0" fill="rgb(250,136,13)" rx="2" ry="2" />
<text  x="97.35" y="623.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.01%)</title><rect x="145.3" y="549" width="0.2" height="15.0" fill="rgb(228,202,22)" rx="2" ry="2" />
<text  x="148.34" y="559.5" ></text>
</g>
<g >
<title>__libc_recvmsg (3 samples, 0.01%)</title><rect x="1176.3" y="565" width="0.2" height="15.0" fill="rgb(219,131,12)" rx="2" ry="2" />
<text  x="1179.32" y="575.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (69 samples, 0.31%)</title><rect x="532.9" y="373" width="3.7" height="15.0" fill="rgb(220,166,33)" rx="2" ry="2" />
<text  x="535.94" y="383.5" ></text>
</g>
<g >
<title>release_pages (10 samples, 0.05%)</title><rect x="1093.2" y="213" width="0.6" height="15.0" fill="rgb(212,225,31)" rx="2" ry="2" />
<text  x="1096.25" y="223.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (124 samples, 0.56%)</title><rect x="74.7" y="837" width="6.6" height="15.0" fill="rgb(249,224,40)" rx="2" ry="2" />
<text  x="77.72" y="847.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (16 samples, 0.07%)</title><rect x="118.2" y="453" width="0.8" height="15.0" fill="rgb(243,218,36)" rx="2" ry="2" />
<text  x="121.20" y="463.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (36 samples, 0.16%)</title><rect x="90.7" y="837" width="1.9" height="15.0" fill="rgb(237,129,17)" rx="2" ry="2" />
<text  x="93.68" y="847.5" ></text>
</g>
<g >
<title>Game_Screen::Update (24 samples, 0.11%)</title><rect x="1170.4" y="693" width="1.3" height="15.0" fill="rgb(229,17,50)" rx="2" ry="2" />
<text  x="1173.41" y="703.5" ></text>
</g>
<g >
<title>pixman_image_get_height (2 samples, 0.01%)</title><rect x="1144.5" y="309" width="0.1" height="15.0" fill="rgb(222,37,19)" rx="2" ry="2" />
<text  x="1147.50" y="319.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_init_functor (4 samples, 0.02%)</title><rect x="84.0" y="837" width="0.2" height="15.0" fill="rgb(222,23,36)" rx="2" ry="2" />
<text  x="87.03" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::empty (84 samples, 0.38%)</title><rect x="1163.5" y="645" width="4.5" height="15.0" fill="rgb(211,89,32)" rx="2" ry="2" />
<text  x="1166.55" y="655.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Scene, (__gnu_cxx::_Lock_policy)2&gt;::get (6 samples, 0.03%)</title><rect x="1163.2" y="613" width="0.3" height="15.0" fill="rgb(220,83,50)" rx="2" ry="2" />
<text  x="1166.23" y="623.5" ></text>
</g>
<g >
<title>Graphics::Draw (15 samples, 0.07%)</title><rect x="110.6" y="725" width="0.8" height="15.0" fill="rgb(246,176,41)" rx="2" ry="2" />
<text  x="113.59" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::max_size (5 samples, 0.02%)</title><rect x="53.9" y="837" width="0.2" height="15.0" fill="rgb(213,102,37)" rx="2" ry="2" />
<text  x="56.85" y="847.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="1142.7" y="453" width="0.3" height="15.0" fill="rgb(215,159,53)" rx="2" ry="2" />
<text  x="1145.74" y="463.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;AudioSeData, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (2 samples, 0.01%)</title><rect x="1142.0" y="389" width="0.1" height="15.0" fill="rgb(236,25,51)" rx="2" ry="2" />
<text  x="1145.00" y="399.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (22 samples, 0.10%)</title><rect x="1095.1" y="389" width="1.2" height="15.0" fill="rgb(236,124,25)" rx="2" ry="2" />
<text  x="1098.11" y="399.5" ></text>
</g>
<g >
<title>RPG::EventCommand::EventCommand (11,839 samples, 53.40%)</title><rect x="151.2" y="533" width="630.1" height="15.0" fill="rgb(232,147,8)" rx="2" ry="2" />
<text  x="154.19" y="543.5" >RPG::EventCommand::EventCommand</text>
</g>
<g >
<title>do_page_fault (3 samples, 0.01%)</title><rect x="35.1" y="837" width="0.1" height="15.0" fill="rgb(238,55,21)" rx="2" ry="2" />
<text  x="38.07" y="847.5" ></text>
</g>
<g >
<title>RPG::EventCommand::~EventCommand (4,540 samples, 20.48%)</title><rect x="818.9" y="469" width="241.6" height="15.0" fill="rgb(216,74,5)" rx="2" ry="2" />
<text  x="821.90" y="479.5" >RPG::EventCommand::~EventCommand</text>
</g>
<g >
<title>Sdl2Ui::ProcessEvents (66 samples, 0.30%)</title><rect x="1173.1" y="741" width="3.5" height="15.0" fill="rgb(244,15,46)" rx="2" ry="2" />
<text  x="1176.13" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (9 samples, 0.04%)</title><rect x="86.5" y="837" width="0.5" height="15.0" fill="rgb(247,215,54)" rx="2" ry="2" />
<text  x="89.53" y="847.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.01%)</title><rect x="326.4" y="437" width="0.1" height="15.0" fill="rgb(222,15,3)" rx="2" ry="2" />
<text  x="329.39" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (11 samples, 0.05%)</title><rect x="198.9" y="517" width="0.6" height="15.0" fill="rgb(208,96,36)" rx="2" ry="2" />
<text  x="201.93" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (11 samples, 0.05%)</title><rect x="244.9" y="517" width="0.6" height="15.0" fill="rgb(250,34,7)" rx="2" ry="2" />
<text  x="247.91" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::~_Vector_impl (3 samples, 0.01%)</title><rect x="108.7" y="837" width="0.1" height="15.0" fill="rgb(206,174,5)" rx="2" ry="2" />
<text  x="111.67" y="847.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (25 samples, 0.11%)</title><rect x="1143.7" y="485" width="1.3" height="15.0" fill="rgb(216,218,15)" rx="2" ry="2" />
<text  x="1146.70" y="495.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, Drawable**, Drawable**&gt; (2 samples, 0.01%)</title><rect x="94.1" y="357" width="0.1" height="15.0" fill="rgb(208,115,42)" rx="2" ry="2" />
<text  x="97.14" y="367.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.01%)</title><rect x="530.4" y="325" width="0.1" height="15.0" fill="rgb(205,124,5)" rx="2" ry="2" />
<text  x="533.44" y="335.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (18 samples, 0.08%)</title><rect x="93.3" y="629" width="0.9" height="15.0" fill="rgb(206,38,7)" rx="2" ry="2" />
<text  x="96.29" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char&gt; (6 samples, 0.03%)</title><rect x="81.3" y="837" width="0.3" height="15.0" fill="rgb(214,58,1)" rx="2" ry="2" />
<text  x="84.32" y="847.5" ></text>
</g>
<g >
<title>Bitmap::ConvertImage (6 samples, 0.03%)</title><rect x="93.4" y="325" width="0.4" height="15.0" fill="rgb(221,205,11)" rx="2" ry="2" />
<text  x="96.45" y="335.5" ></text>
</g>
<g >
<title>__get_vma_policy (2 samples, 0.01%)</title><rect x="192.5" y="421" width="0.1" height="15.0" fill="rgb(217,201,34)" rx="2" ry="2" />
<text  x="195.49" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::~_Vector_base (572 samples, 2.58%)</title><rect x="1066.1" y="533" width="30.4" height="15.0" fill="rgb(251,76,8)" rx="2" ry="2" />
<text  x="1069.10" y="543.5" >st..</text>
</g>
<g >
<title>__libc_recvmsg (4 samples, 0.02%)</title><rect x="1175.9" y="565" width="0.3" height="15.0" fill="rgb(211,135,54)" rx="2" ry="2" />
<text  x="1178.95" y="575.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3,312 samples, 14.94%)</title><rect x="875.8" y="357" width="176.3" height="15.0" fill="rgb(219,159,11)" rx="2" ry="2" />
<text  x="878.79" y="367.5" >[libasan.so.5.0.0]</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::push_back (3 samples, 0.01%)</title><rect x="1143.2" y="533" width="0.1" height="15.0" fill="rgb(253,14,19)" rx="2" ry="2" />
<text  x="1146.17" y="543.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (5 samples, 0.02%)</title><rect x="1173.3" y="597" width="0.3" height="15.0" fill="rgb(211,216,43)" rx="2" ry="2" />
<text  x="1176.29" y="607.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (2 samples, 0.01%)</title><rect x="104.5" y="805" width="0.1" height="15.0" fill="rgb(250,13,50)" rx="2" ry="2" />
<text  x="107.52" y="815.5" ></text>
</g>
<g >
<title>unmap_region (109 samples, 0.49%)</title><rect x="1086.4" y="277" width="5.8" height="15.0" fill="rgb(222,160,49)" rx="2" ry="2" />
<text  x="1089.43" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (31 samples, 0.14%)</title><rect x="241.3" y="517" width="1.7" height="15.0" fill="rgb(242,82,4)" rx="2" ry="2" />
<text  x="244.35" y="527.5" ></text>
</g>
<g >
<title>new_sync_read (3 samples, 0.01%)</title><rect x="34.2" y="757" width="0.1" height="15.0" fill="rgb(235,179,16)" rx="2" ry="2" />
<text  x="37.16" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;int&gt;, int&gt;::_S_select_on_copy (20 samples, 0.09%)</title><rect x="48.5" y="837" width="1.0" height="15.0" fill="rgb(217,44,28)" rx="2" ry="2" />
<text  x="51.48" y="847.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (25 samples, 0.11%)</title><rect x="1143.7" y="517" width="1.3" height="15.0" fill="rgb(244,138,8)" rx="2" ry="2" />
<text  x="1146.70" y="527.5" ></text>
</g>
<g >
<title>deactivate_task (3 samples, 0.01%)</title><rect x="1174.2" y="533" width="0.2" height="15.0" fill="rgb(254,168,37)" rx="2" ry="2" />
<text  x="1177.25" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (34 samples, 0.15%)</title><rect x="825.9" y="453" width="1.8" height="15.0" fill="rgb(219,26,25)" rx="2" ry="2" />
<text  x="828.87" y="463.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (5 samples, 0.02%)</title><rect x="94.5" y="565" width="0.3" height="15.0" fill="rgb(205,187,10)" rx="2" ry="2" />
<text  x="97.51" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (4 samples, 0.02%)</title><rect x="1115.2" y="549" width="0.2" height="15.0" fill="rgb(249,210,36)" rx="2" ry="2" />
<text  x="1118.23" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;RPG::EventCommand const*, std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="55.4" y="837" width="0.1" height="15.0" fill="rgb(229,55,17)" rx="2" ry="2" />
<text  x="58.40" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::EventCommand const*, std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt; &gt;::base (17 samples, 0.08%)</title><rect x="49.9" y="837" width="0.9" height="15.0" fill="rgb(224,134,37)" rx="2" ry="2" />
<text  x="52.92" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (3 samples, 0.01%)</title><rect x="112.2" y="677" width="0.1" height="15.0" fill="rgb(252,47,35)" rx="2" ry="2" />
<text  x="115.18" y="687.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (18 samples, 0.08%)</title><rect x="93.3" y="789" width="0.9" height="15.0" fill="rgb(245,4,4)" rx="2" ry="2" />
<text  x="96.29" y="799.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="1173.3" y="485" width="0.3" height="15.0" fill="rgb(209,113,13)" rx="2" ry="2" />
<text  x="1176.34" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.01%)</title><rect x="1175.9" y="533" width="0.2" height="15.0" fill="rgb(246,14,53)" rx="2" ry="2" />
<text  x="1178.95" y="543.5" ></text>
</g>
<g >
<title>free_unref_page_commit (2 samples, 0.01%)</title><rect x="1041.8" y="53" width="0.1" height="15.0" fill="rgb(246,105,30)" rx="2" ry="2" />
<text  x="1044.78" y="63.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (2 samples, 0.01%)</title><rect x="1145.1" y="581" width="0.1" height="15.0" fill="rgb(249,183,35)" rx="2" ry="2" />
<text  x="1148.14" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="1143.5" y="469" width="0.1" height="15.0" fill="rgb(246,191,25)" rx="2" ry="2" />
<text  x="1146.54" y="479.5" ></text>
</g>
<g >
<title>Bitmap::Create (11 samples, 0.05%)</title><rect x="93.4" y="485" width="0.6" height="15.0" fill="rgb(234,24,40)" rx="2" ry="2" />
<text  x="96.40" y="495.5" ></text>
</g>
<g >
<title>Bitmap::height (2 samples, 0.01%)</title><rect x="1144.5" y="325" width="0.1" height="15.0" fill="rgb(224,185,52)" rx="2" ry="2" />
<text  x="1147.50" y="335.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*, int&gt; (11 samples, 0.05%)</title><rect x="825.3" y="453" width="0.6" height="15.0" fill="rgb(220,70,27)" rx="2" ry="2" />
<text  x="828.28" y="463.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (2 samples, 0.01%)</title><rect x="93.3" y="485" width="0.1" height="15.0" fill="rgb(230,158,49)" rx="2" ry="2" />
<text  x="96.29" y="495.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="120.5" y="373" width="0.1" height="15.0" fill="rgb(230,183,14)" rx="2" ry="2" />
<text  x="123.54" y="383.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;RPG::SaveEventExecFrame*&gt;, RPG::SaveEventExecFrame*&gt; (5 samples, 0.02%)</title><rect x="786.2" y="549" width="0.3" height="15.0" fill="rgb(242,167,41)" rx="2" ry="2" />
<text  x="789.22" y="559.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (7 samples, 0.03%)</title><rect x="1094.0" y="373" width="0.4" height="15.0" fill="rgb(239,216,23)" rx="2" ry="2" />
<text  x="1097.04" y="383.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (19,869 samples, 89.61%)</title><rect x="112.4" y="693" width="1057.5" height="15.0" fill="rgb(205,58,35)" rx="2" ry="2" />
<text  x="115.45" y="703.5" >Game_Map::UpdateCommonEvents</text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;int, std::allocator&lt;int&gt;, int&gt; (2 samples, 0.01%)</title><rect x="1143.1" y="469" width="0.1" height="15.0" fill="rgb(213,143,29)" rx="2" ry="2" />
<text  x="1146.06" y="479.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (2 samples, 0.01%)</title><rect x="326.4" y="357" width="0.1" height="15.0" fill="rgb(254,81,39)" rx="2" ry="2" />
<text  x="329.39" y="367.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.01%)</title><rect x="35.1" y="805" width="0.1" height="15.0" fill="rgb(212,188,10)" rx="2" ry="2" />
<text  x="38.07" y="815.5" ></text>
</g>
<g >
<title>std::max&lt;int&gt; (8 samples, 0.04%)</title><rect x="1133.1" y="581" width="0.4" height="15.0" fill="rgb(216,32,38)" rx="2" ry="2" />
<text  x="1136.11" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::size (20 samples, 0.09%)</title><rect x="1168.3" y="645" width="1.1" height="15.0" fill="rgb(244,46,17)" rx="2" ry="2" />
<text  x="1171.34" y="655.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="112.1" y="661" width="0.1" height="15.0" fill="rgb(251,107,23)" rx="2" ry="2" />
<text  x="115.08" y="671.5" ></text>
</g>
<g >
<title>memcpy (4 samples, 0.02%)</title><rect x="219.4" y="501" width="0.2" height="15.0" fill="rgb(233,30,40)" rx="2" ry="2" />
<text  x="222.37" y="511.5" ></text>
</g>
<g >
<title>default_wake_function (4 samples, 0.02%)</title><rect x="34.5" y="693" width="0.2" height="15.0" fill="rgb(216,183,10)" rx="2" ry="2" />
<text  x="37.53" y="703.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.01%)</title><rect x="542.4" y="341" width="0.1" height="15.0" fill="rgb(239,55,5)" rx="2" ry="2" />
<text  x="545.42" y="351.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;int, std::allocator&lt;int&gt;, int&gt; (3 samples, 0.01%)</title><rect x="1143.0" y="517" width="0.2" height="15.0" fill="rgb(223,72,13)" rx="2" ry="2" />
<text  x="1146.01" y="527.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="1086.0" y="277" width="0.1" height="15.0" fill="rgb(248,0,14)" rx="2" ry="2" />
<text  x="1088.95" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (5 samples, 0.02%)</title><rect x="105.1" y="837" width="0.2" height="15.0" fill="rgb(253,22,49)" rx="2" ry="2" />
<text  x="108.05" y="847.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (67 samples, 0.30%)</title><rect x="1086.6" y="213" width="3.6" height="15.0" fill="rgb(205,218,39)" rx="2" ry="2" />
<text  x="1089.59" y="223.5" ></text>
</g>
<g >
<title>__libc_start_main (20,033 samples, 90.35%)</title><rect x="110.6" y="837" width="1066.1" height="15.0" fill="rgb(205,86,50)" rx="2" ry="2" />
<text  x="113.59" y="847.5" >__libc_start_main</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::deallocate (4 samples, 0.02%)</title><rect x="113.1" y="549" width="0.3" height="15.0" fill="rgb(211,213,4)" rx="2" ry="2" />
<text  x="116.14" y="559.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.01%)</title><rect x="536.3" y="293" width="0.2" height="15.0" fill="rgb(243,37,9)" rx="2" ry="2" />
<text  x="539.35" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (11 samples, 0.05%)</title><rect x="60.8" y="837" width="0.6" height="15.0" fill="rgb(240,29,5)" rx="2" ry="2" />
<text  x="63.83" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;int&gt;, int&gt;::_S_select_on_copy (358 samples, 1.61%)</title><rect x="275.7" y="501" width="19.1" height="15.0" fill="rgb(217,194,43)" rx="2" ry="2" />
<text  x="278.73" y="511.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="35.1" y="757" width="0.1" height="15.0" fill="rgb(227,221,18)" rx="2" ry="2" />
<text  x="38.07" y="767.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (18 samples, 0.08%)</title><rect x="73.7" y="821" width="0.9" height="15.0" fill="rgb(210,87,15)" rx="2" ry="2" />
<text  x="76.65" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (2 samples, 0.01%)</title><rect x="1172.2" y="645" width="0.1" height="15.0" fill="rgb(252,127,48)" rx="2" ry="2" />
<text  x="1175.17" y="655.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (8 samples, 0.04%)</title><rect x="92.8" y="453" width="0.4" height="15.0" fill="rgb(251,118,1)" rx="2" ry="2" />
<text  x="95.76" y="463.5" ></text>
</g>
<g >
<title>Scene::MainFunction (20,033 samples, 90.35%)</title><rect x="110.6" y="773" width="1066.1" height="15.0" fill="rgb(252,166,25)" rx="2" ry="2" />
<text  x="113.59" y="783.5" >Scene::MainFunction</text>
</g>
<g >
<title>__x64_sys_madvise (30 samples, 0.14%)</title><rect x="1092.4" y="325" width="1.6" height="15.0" fill="rgb(232,197,13)" rx="2" ry="2" />
<text  x="1095.45" y="335.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (7 samples, 0.03%)</title><rect x="111.0" y="693" width="0.4" height="15.0" fill="rgb(218,173,24)" rx="2" ry="2" />
<text  x="114.01" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt;::__normal_iterator (4 samples, 0.02%)</title><rect x="1161.9" y="613" width="0.2" height="15.0" fill="rgb(221,167,23)" rx="2" ry="2" />
<text  x="1164.90" y="623.5" ></text>
</g>
<g >
<title>pmd_page_vaddr (2 samples, 0.01%)</title><rect x="197.9" y="437" width="0.1" height="15.0" fill="rgb(250,149,38)" rx="2" ry="2" />
<text  x="200.87" y="447.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="1143.9" y="309" width="0.1" height="15.0" fill="rgb(247,177,26)" rx="2" ry="2" />
<text  x="1146.86" y="319.5" ></text>
</g>
<g >
<title>__lru_cache_add (6 samples, 0.03%)</title><rect x="117.5" y="357" width="0.3" height="15.0" fill="rgb(248,175,53)" rx="2" ry="2" />
<text  x="120.45" y="367.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (7 samples, 0.03%)</title><rect x="528.0" y="325" width="0.4" height="15.0" fill="rgb(211,141,11)" rx="2" ry="2" />
<text  x="531.05" y="335.5" ></text>
</g>
<g >
<title>free_unref_page (2 samples, 0.01%)</title><rect x="1086.5" y="181" width="0.1" height="15.0" fill="rgb(247,136,0)" rx="2" ry="2" />
<text  x="1089.49" y="191.5" ></text>
</g>
<g >
<title>update_load_avg (2 samples, 0.01%)</title><rect x="29.3" y="661" width="0.1" height="15.0" fill="rgb(214,196,10)" rx="2" ry="2" />
<text  x="32.27" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (2 samples, 0.01%)</title><rect x="1140.7" y="581" width="0.1" height="15.0" fill="rgb(252,85,25)" rx="2" ry="2" />
<text  x="1143.66" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="1189.6" y="837" width="0.1" height="15.0" fill="rgb(240,127,47)" rx="2" ry="2" />
<text  x="1192.57" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (2 samples, 0.01%)</title><rect x="1171.6" y="661" width="0.1" height="15.0" fill="rgb(240,201,24)" rx="2" ry="2" />
<text  x="1174.59" y="671.5" ></text>
</g>
<g >
<title>do_wp_page (7 samples, 0.03%)</title><rect x="537.0" y="293" width="0.4" height="15.0" fill="rgb(236,175,35)" rx="2" ry="2" />
<text  x="540.04" y="303.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (73 samples, 0.33%)</title><rect x="29.8" y="677" width="3.9" height="15.0" fill="rgb(221,48,9)" rx="2" ry="2" />
<text  x="32.80" y="687.5" ></text>
</g>
<g >
<title>Sprite::~Sprite (3 samples, 0.01%)</title><rect x="1144.8" y="309" width="0.1" height="15.0" fill="rgb(229,196,30)" rx="2" ry="2" />
<text  x="1147.76" y="319.5" ></text>
</g>
<g >
<title>__vfs_write (8 samples, 0.04%)</title><rect x="34.5" y="773" width="0.4" height="15.0" fill="rgb(225,210,38)" rx="2" ry="2" />
<text  x="37.48" y="783.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;int&gt;::shared_ptr&lt;std::allocator&lt;int&gt;, int&gt; (3 samples, 0.01%)</title><rect x="1143.0" y="501" width="0.2" height="15.0" fill="rgb(223,50,25)" rx="2" ry="2" />
<text  x="1146.01" y="511.5" ></text>
</g>
<g >
<title>page_fault (40 samples, 0.18%)</title><rect x="116.1" y="453" width="2.1" height="15.0" fill="rgb(233,200,4)" rx="2" ry="2" />
<text  x="119.07" y="463.5" ></text>
</g>
<g >
<title>do_mmap (16 samples, 0.07%)</title><rect x="114.0" y="373" width="0.9" height="15.0" fill="rgb(219,18,13)" rx="2" ry="2" />
<text  x="117.05" y="383.5" ></text>
</g>
<g >
<title>alloc_pages_vma (180 samples, 0.81%)</title><rect x="183.3" y="437" width="9.6" height="15.0" fill="rgb(221,12,51)" rx="2" ry="2" />
<text  x="186.29" y="447.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (11 samples, 0.05%)</title><rect x="93.4" y="405" width="0.6" height="15.0" fill="rgb(218,54,16)" rx="2" ry="2" />
<text  x="96.40" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (29 samples, 0.13%)</title><rect x="794.9" y="613" width="1.5" height="15.0" fill="rgb(229,121,34)" rx="2" ry="2" />
<text  x="797.89" y="623.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingForegroundExecution (4 samples, 0.02%)</title><rect x="1169.9" y="677" width="0.2" height="15.0" fill="rgb(216,172,36)" rx="2" ry="2" />
<text  x="1172.88" y="687.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::destroy&lt;RPG::SaveEventExecFrame&gt; (5,454 samples, 24.60%)</title><rect x="806.3" y="597" width="290.2" height="15.0" fill="rgb(239,157,4)" rx="2" ry="2" />
<text  x="809.28" y="607.5" >std::allocator_traits&lt;std::allocator&lt;R..</text>
</g>
<g >
<title>[easyrpg-player] (3 samples, 0.01%)</title><rect x="90.5" y="853" width="0.2" height="15.0" fill="rgb(232,26,0)" rx="2" ry="2" />
<text  x="93.52" y="863.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::EventCommand const*, std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt; &gt;::base (2 samples, 0.01%)</title><rect x="1165.2" y="613" width="0.1" height="15.0" fill="rgb(234,113,20)" rx="2" ry="2" />
<text  x="1168.20" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::EventCommand const*, std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt; &gt;::base (5 samples, 0.02%)</title><rect x="126.6" y="549" width="0.3" height="15.0" fill="rgb(235,58,53)" rx="2" ry="2" />
<text  x="129.61" y="559.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable*&gt; (2 samples, 0.01%)</title><rect x="1144.8" y="277" width="0.1" height="15.0" fill="rgb(249,179,48)" rx="2" ry="2" />
<text  x="1147.76" y="287.5" ></text>
</g>
<g >
<title>std::map&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, (anonymous namespace)::CacheItem, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (3 samples, 0.01%)</title><rect x="94.0" y="485" width="0.1" height="15.0" fill="rgb(213,178,41)" rx="2" ry="2" />
<text  x="96.98" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (8 samples, 0.04%)</title><rect x="87.3" y="837" width="0.5" height="15.0" fill="rgb(215,130,38)" rx="2" ry="2" />
<text  x="90.33" y="847.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (17 samples, 0.08%)</title><rect x="1046.0" y="341" width="0.9" height="15.0" fill="rgb(233,212,40)" rx="2" ry="2" />
<text  x="1048.99" y="351.5" ></text>
</g>
<g >
<title>dequeue_entity (4 samples, 0.02%)</title><rect x="29.2" y="677" width="0.2" height="15.0" fill="rgb(250,70,8)" rx="2" ry="2" />
<text  x="32.16" y="687.5" ></text>
</g>
<g >
<title>Window_Base::Update (3 samples, 0.01%)</title><rect x="1172.4" y="693" width="0.2" height="15.0" fill="rgb(207,47,3)" rx="2" ry="2" />
<text  x="1175.44" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (2 samples, 0.01%)</title><rect x="1143.9" y="277" width="0.1" height="15.0" fill="rgb(251,57,9)" rx="2" ry="2" />
<text  x="1146.86" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (16 samples, 0.07%)</title><rect x="543.8" y="469" width="0.9" height="15.0" fill="rgb(209,217,27)" rx="2" ry="2" />
<text  x="546.80" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (4,809 samples, 21.69%)</title><rect x="299.7" y="501" width="256.0" height="15.0" fill="rgb(210,48,32)" rx="2" ry="2" />
<text  x="302.73" y="511.5" >std::_Vector_base&lt;int, std::alloca..</text>
</g>
<g >
<title>std::_Vector_base&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::~_Vector_base (4 samples, 0.02%)</title><rect x="113.1" y="581" width="0.3" height="15.0" fill="rgb(211,163,29)" rx="2" ry="2" />
<text  x="116.14" y="591.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (1,059 samples, 4.78%)</title><rect x="1096.5" y="629" width="56.4" height="15.0" fill="rgb(242,112,28)" rx="2" ry="2" />
<text  x="1099.55" y="639.5" >Game_..</text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.01%)</title><rect x="536.3" y="277" width="0.2" height="15.0" fill="rgb(245,220,3)" rx="2" ry="2" />
<text  x="539.35" y="287.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (10 samples, 0.05%)</title><rect x="66.5" y="837" width="0.5" height="15.0" fill="rgb(223,125,9)" rx="2" ry="2" />
<text  x="69.47" y="847.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (5 samples, 0.02%)</title><rect x="94.5" y="837" width="0.3" height="15.0" fill="rgb(246,10,54)" rx="2" ry="2" />
<text  x="97.51" y="847.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (14 samples, 0.06%)</title><rect x="1059.0" y="421" width="0.8" height="15.0" fill="rgb(235,37,35)" rx="2" ry="2" />
<text  x="1062.02" y="431.5" ></text>
</g>
<g >
<title>get_page_from_freelist (43 samples, 0.19%)</title><rect x="190.2" y="405" width="2.3" height="15.0" fill="rgb(220,86,41)" rx="2" ry="2" />
<text  x="193.20" y="415.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (6 samples, 0.03%)</title><rect x="1173.7" y="645" width="0.3" height="15.0" fill="rgb(241,141,17)" rx="2" ry="2" />
<text  x="1176.71" y="655.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="93.3" y="373" width="0.1" height="15.0" fill="rgb(208,225,13)" rx="2" ry="2" />
<text  x="96.29" y="383.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (84 samples, 0.38%)</title><rect x="537.9" y="389" width="4.5" height="15.0" fill="rgb(242,83,30)" rx="2" ry="2" />
<text  x="540.89" y="399.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (18 samples, 0.08%)</title><rect x="93.3" y="645" width="0.9" height="15.0" fill="rgb(254,16,9)" rx="2" ry="2" />
<text  x="96.29" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (2 samples, 0.01%)</title><rect x="1171.3" y="613" width="0.1" height="15.0" fill="rgb(240,159,47)" rx="2" ry="2" />
<text  x="1174.27" y="623.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.01%)</title><rect x="112.2" y="661" width="0.1" height="15.0" fill="rgb(248,146,14)" rx="2" ry="2" />
<text  x="115.18" y="671.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (6 samples, 0.03%)</title><rect x="1143.9" y="341" width="0.3" height="15.0" fill="rgb(245,95,7)" rx="2" ry="2" />
<text  x="1146.86" y="351.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (24 samples, 0.11%)</title><rect x="1143.8" y="437" width="1.2" height="15.0" fill="rgb(229,48,15)" rx="2" ry="2" />
<text  x="1146.75" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (17 samples, 0.08%)</title><rect x="1146.9" y="581" width="0.9" height="15.0" fill="rgb(243,127,54)" rx="2" ry="2" />
<text  x="1149.94" y="591.5" ></text>
</g>
<g >
<title>Cache::Picture (8 samples, 0.04%)</title><rect x="92.8" y="581" width="0.4" height="15.0" fill="rgb(225,69,42)" rx="2" ry="2" />
<text  x="95.76" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (3 samples, 0.01%)</title><rect x="1175.9" y="501" width="0.2" height="15.0" fill="rgb(250,207,50)" rx="2" ry="2" />
<text  x="1178.95" y="511.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (17 samples, 0.08%)</title><rect x="114.0" y="389" width="1.0" height="15.0" fill="rgb(224,55,45)" rx="2" ry="2" />
<text  x="117.05" y="399.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (2 samples, 0.01%)</title><rect x="633.6" y="421" width="0.1" height="15.0" fill="rgb(225,204,50)" rx="2" ry="2" />
<text  x="636.58" y="431.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (1,315 samples, 5.93%)</title><rect x="974.9" y="325" width="70.0" height="15.0" fill="rgb(234,190,32)" rx="2" ry="2" />
<text  x="977.88" y="335.5" >[libasa..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (3 samples, 0.01%)</title><rect x="51.6" y="837" width="0.1" height="15.0" fill="rgb(214,60,2)" rx="2" ry="2" />
<text  x="54.57" y="847.5" ></text>
</g>
<g >
<title>Bitmap::Create (8 samples, 0.04%)</title><rect x="92.8" y="565" width="0.4" height="15.0" fill="rgb(227,162,43)" rx="2" ry="2" />
<text  x="95.76" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::_M_allocate_and_copy&lt;__gnu_cxx::__normal_iterator&lt;RPG::EventCommand const*, std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt; &gt; &gt; (12,630 samples, 56.96%)</title><rect x="113.7" y="613" width="672.1" height="15.0" fill="rgb(249,148,31)" rx="2" ry="2" />
<text  x="116.67" y="623.5" >std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::_M_allocate_and_copy&lt;__g..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (14 samples, 0.06%)</title><rect x="72.9" y="837" width="0.7" height="15.0" fill="rgb(216,9,23)" rx="2" ry="2" />
<text  x="75.85" y="847.5" ></text>
</g>
<g >
<title>unmap_page_range (5 samples, 0.02%)</title><rect x="1093.8" y="277" width="0.2" height="15.0" fill="rgb(224,122,40)" rx="2" ry="2" />
<text  x="1096.78" y="287.5" ></text>
</g>
<g >
<title>__interceptor_recvmsg (5 samples, 0.02%)</title><rect x="1173.3" y="549" width="0.3" height="15.0" fill="rgb(251,79,14)" rx="2" ry="2" />
<text  x="1176.29" y="559.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (2 samples, 0.01%)</title><rect x="104.5" y="821" width="0.1" height="15.0" fill="rgb(234,6,41)" rx="2" ry="2" />
<text  x="107.52" y="831.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (212 samples, 0.96%)</title><rect x="761.6" y="501" width="11.3" height="15.0" fill="rgb(239,182,37)" rx="2" ry="2" />
<text  x="764.58" y="511.5" ></text>
</g>
<g >
<title>TilemapLayer::Draw (4 samples, 0.02%)</title><rect x="110.8" y="677" width="0.2" height="15.0" fill="rgb(231,143,38)" rx="2" ry="2" />
<text  x="113.80" y="687.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (10 samples, 0.05%)</title><rect x="244.2" y="517" width="0.5" height="15.0" fill="rgb(249,160,46)" rx="2" ry="2" />
<text  x="247.17" y="527.5" ></text>
</g>
<g >
<title>free_unref_page_commit (38 samples, 0.17%)</title><rect x="1087.7" y="149" width="2.0" height="15.0" fill="rgb(223,56,25)" rx="2" ry="2" />
<text  x="1090.66" y="159.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (2 samples, 0.01%)</title><rect x="69.9" y="837" width="0.1" height="15.0" fill="rgb(246,120,38)" rx="2" ry="2" />
<text  x="72.87" y="847.5" ></text>
</g>
<g >
<title>eventfd_poll (2 samples, 0.01%)</title><rect x="28.6" y="789" width="0.1" height="15.0" fill="rgb(244,118,50)" rx="2" ry="2" />
<text  x="31.63" y="799.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (4 samples, 0.02%)</title><rect x="217.4" y="485" width="0.2" height="15.0" fill="rgb(214,68,34)" rx="2" ry="2" />
<text  x="220.40" y="495.5" ></text>
</g>
<g >
<title>Spriteset_Map::Update (10 samples, 0.05%)</title><rect x="1171.9" y="709" width="0.5" height="15.0" fill="rgb(245,7,26)" rx="2" ry="2" />
<text  x="1174.85" y="719.5" ></text>
</g>
<g >
<title>Scene::HasRequestedScene (11 samples, 0.05%)</title><rect x="1162.5" y="645" width="0.6" height="15.0" fill="rgb(231,40,43)" rx="2" ry="2" />
<text  x="1165.49" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (3 samples, 0.01%)</title><rect x="1086.0" y="309" width="0.1" height="15.0" fill="rgb(233,77,16)" rx="2" ry="2" />
<text  x="1088.95" y="319.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (5 samples, 0.02%)</title><rect x="94.5" y="789" width="0.3" height="15.0" fill="rgb(246,23,30)" rx="2" ry="2" />
<text  x="97.51" y="799.5" ></text>
</g>
<g >
<title>Bitmap::CheckOpacity (8 samples, 0.04%)</title><rect x="92.8" y="389" width="0.4" height="15.0" fill="rgb(209,0,14)" rx="2" ry="2" />
<text  x="95.76" y="399.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (6 samples, 0.03%)</title><rect x="117.5" y="373" width="0.3" height="15.0" fill="rgb(244,76,52)" rx="2" ry="2" />
<text  x="120.45" y="383.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void (*(std::_Placeholder&lt;1&gt;, int, int, bool))(FileRequestResult*, int, int, bool)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul, 2ul, 3ul&gt; (3 samples, 0.01%)</title><rect x="1142.0" y="485" width="0.2" height="15.0" fill="rgb(225,57,29)" rx="2" ry="2" />
<text  x="1145.00" y="495.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (15 samples, 0.07%)</title><rect x="1170.7" y="661" width="0.8" height="15.0" fill="rgb(229,84,22)" rx="2" ry="2" />
<text  x="1173.68" y="671.5" ></text>
</g>
<g >
<title>unmap_vmas (38 samples, 0.17%)</title><rect x="1090.2" y="261" width="2.0" height="15.0" fill="rgb(216,159,11)" rx="2" ry="2" />
<text  x="1093.21" y="271.5" ></text>
</g>
<g >
<title>[[stack]] (716 samples, 3.23%)</title><rect x="35.5" y="853" width="38.1" height="15.0" fill="rgb(224,11,36)" rx="2" ry="2" />
<text  x="38.49" y="863.5" >[[s..</text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::~_Vector_impl (127 samples, 0.57%)</title><rect x="1052.3" y="421" width="6.7" height="15.0" fill="rgb(242,225,18)" rx="2" ry="2" />
<text  x="1055.27" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (7 samples, 0.03%)</title><rect x="1131.1" y="581" width="0.4" height="15.0" fill="rgb(233,89,11)" rx="2" ry="2" />
<text  x="1134.09" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (2 samples, 0.01%)</title><rect x="790.5" y="629" width="0.1" height="15.0" fill="rgb(222,189,37)" rx="2" ry="2" />
<text  x="793.48" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt;::_M_erase (2 samples, 0.01%)</title><rect x="94.1" y="405" width="0.1" height="15.0" fill="rgb(237,109,40)" rx="2" ry="2" />
<text  x="97.14" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::begin (23 samples, 0.10%)</title><rect x="1165.3" y="629" width="1.2" height="15.0" fill="rgb(252,13,23)" rx="2" ry="2" />
<text  x="1168.31" y="639.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.02%)</title><rect x="527.8" y="325" width="0.2" height="15.0" fill="rgb(218,215,52)" rx="2" ry="2" />
<text  x="530.78" y="335.5" ></text>
</g>
<g >
<title>Game_Picture::Move (5 samples, 0.02%)</title><rect x="1141.5" y="597" width="0.3" height="15.0" fill="rgb(221,204,41)" rx="2" ry="2" />
<text  x="1144.52" y="607.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (12 samples, 0.05%)</title><rect x="1094.5" y="389" width="0.6" height="15.0" fill="rgb(251,41,14)" rx="2" ry="2" />
<text  x="1097.47" y="399.5" ></text>
</g>
<g >
<title>Sprite::BlitScreen (4 samples, 0.02%)</title><rect x="110.6" y="677" width="0.2" height="15.0" fill="rgb(244,225,23)" rx="2" ry="2" />
<text  x="113.59" y="687.5" ></text>
</g>
<g >
<title>native_write_msr (72 samples, 0.32%)</title><rect x="29.9" y="613" width="3.8" height="15.0" fill="rgb(241,181,18)" rx="2" ry="2" />
<text  x="32.85" y="623.5" ></text>
</g>
<g >
<title>__libc_recvmsg (5 samples, 0.02%)</title><rect x="1173.3" y="517" width="0.3" height="15.0" fill="rgb(214,140,37)" rx="2" ry="2" />
<text  x="1176.29" y="527.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (2 samples, 0.01%)</title><rect x="685.0" y="277" width="0.2" height="15.0" fill="rgb(218,14,13)" rx="2" ry="2" />
<text  x="688.05" y="287.5" ></text>
</g>
<g >
<title>release_pages (62 samples, 0.28%)</title><rect x="1086.9" y="181" width="3.3" height="15.0" fill="rgb(254,179,27)" rx="2" ry="2" />
<text  x="1089.86" y="191.5" ></text>
</g>
<g >
<title>Sdl2Ui::ProcessActiveEvent (53 samples, 0.24%)</title><rect x="1173.1" y="709" width="2.8" height="15.0" fill="rgb(233,107,20)" rx="2" ry="2" />
<text  x="1176.13" y="719.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_clone (2 samples, 0.01%)</title><rect x="1143.4" y="517" width="0.1" height="15.0" fill="rgb(246,156,41)" rx="2" ry="2" />
<text  x="1146.38" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (18 samples, 0.08%)</title><rect x="114.0" y="437" width="1.0" height="15.0" fill="rgb(241,93,32)" rx="2" ry="2" />
<text  x="116.99" y="447.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void (*(std::_Placeholder&lt;1&gt;, int, int, bool))(FileRequestResult*, int, int, bool)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul, 2ul, 3ul&gt; (3 samples, 0.01%)</title><rect x="94.4" y="581" width="0.1" height="15.0" fill="rgb(221,31,43)" rx="2" ry="2" />
<text  x="97.35" y="591.5" ></text>
</g>
<g >
<title>Cache::Picture (16 samples, 0.07%)</title><rect x="93.3" y="501" width="0.8" height="15.0" fill="rgb(240,91,10)" rx="2" ry="2" />
<text  x="96.29" y="511.5" ></text>
</g>
<g >
<title>FileRequestAsync::Bind&lt;Game_Picture&gt; (13 samples, 0.06%)</title><rect x="1143.0" y="565" width="0.6" height="15.0" fill="rgb(254,196,44)" rx="2" ry="2" />
<text  x="1145.95" y="575.5" ></text>
</g>
<g >
<title>AudioSeCache::Decode (3 samples, 0.01%)</title><rect x="1142.0" y="405" width="0.2" height="15.0" fill="rgb(228,58,47)" rx="2" ry="2" />
<text  x="1145.00" y="415.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*&gt; (13 samples, 0.06%)</title><rect x="709.8" y="421" width="0.7" height="15.0" fill="rgb(246,105,15)" rx="2" ry="2" />
<text  x="712.79" y="431.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.01%)</title><rect x="530.4" y="341" width="0.1" height="15.0" fill="rgb(217,203,47)" rx="2" ry="2" />
<text  x="533.44" y="351.5" ></text>
</g>
<g >
<title>error_entry (64 samples, 0.29%)</title><rect x="176.6" y="517" width="3.4" height="15.0" fill="rgb(246,110,32)" rx="2" ry="2" />
<text  x="179.58" y="527.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*&gt; (18 samples, 0.08%)</title><rect x="844.6" y="437" width="1.0" height="15.0" fill="rgb(245,98,27)" rx="2" ry="2" />
<text  x="847.60" y="447.5" ></text>
</g>
<g >
<title>__libc_recvmsg (5 samples, 0.02%)</title><rect x="1173.3" y="533" width="0.3" height="15.0" fill="rgb(209,98,35)" rx="2" ry="2" />
<text  x="1176.29" y="543.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.01%)</title><rect x="1042.5" y="293" width="0.1" height="15.0" fill="rgb(252,183,44)" rx="2" ry="2" />
<text  x="1045.47" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (3 samples, 0.01%)</title><rect x="1168.0" y="645" width="0.2" height="15.0" fill="rgb(228,60,31)" rx="2" ry="2" />
<text  x="1171.02" y="655.5" ></text>
</g>
<g >
<title>std::operator!=&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="1172.2" y="677" width="0.1" height="15.0" fill="rgb(239,44,5)" rx="2" ry="2" />
<text  x="1175.17" y="687.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="1086.0" y="261" width="0.1" height="15.0" fill="rgb(215,12,9)" rx="2" ry="2" />
<text  x="1088.95" y="271.5" ></text>
</g>
<g >
<title>__GI___poll (3 samples, 0.01%)</title><rect x="1176.5" y="613" width="0.1" height="15.0" fill="rgb(246,165,32)" rx="2" ry="2" />
<text  x="1179.48" y="623.5" ></text>
</g>
<g >
<title>__interceptor_recvmsg (3 samples, 0.01%)</title><rect x="1176.3" y="597" width="0.2" height="15.0" fill="rgb(215,94,18)" rx="2" ry="2" />
<text  x="1179.32" y="607.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandBreakLoop (3 samples, 0.01%)</title><rect x="1098.9" y="613" width="0.1" height="15.0" fill="rgb(236,106,43)" rx="2" ry="2" />
<text  x="1101.89" y="623.5" ></text>
</g>
<g >
<title>schedule (7 samples, 0.03%)</title><rect x="528.0" y="277" width="0.4" height="15.0" fill="rgb(209,206,31)" rx="2" ry="2" />
<text  x="531.05" y="287.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (183 samples, 0.83%)</title><rect x="94.8" y="837" width="9.7" height="15.0" fill="rgb(232,208,53)" rx="2" ry="2" />
<text  x="97.78" y="847.5" ></text>
</g>
<g >
<title>MapUpdateAsyncContext::GetParallelCommonEvent (2 samples, 0.01%)</title><rect x="36.0" y="837" width="0.1" height="15.0" fill="rgb(219,95,44)" rx="2" ry="2" />
<text  x="39.02" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (4 samples, 0.02%)</title><rect x="90.3" y="837" width="0.2" height="15.0" fill="rgb(226,105,14)" rx="2" ry="2" />
<text  x="93.26" y="847.5" ></text>
</g>
<g >
<title>finish_task_switch (7 samples, 0.03%)</title><rect x="528.0" y="245" width="0.4" height="15.0" fill="rgb(207,181,10)" rx="2" ry="2" />
<text  x="531.05" y="255.5" ></text>
</g>
<g >
<title>pthread_getspecific@plt (10 samples, 0.05%)</title><rect x="1044.3" y="309" width="0.5" height="15.0" fill="rgb(242,29,53)" rx="2" ry="2" />
<text  x="1047.28" y="319.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (10 samples, 0.05%)</title><rect x="1093.2" y="229" width="0.6" height="15.0" fill="rgb(235,195,31)" rx="2" ry="2" />
<text  x="1096.25" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (2 samples, 0.01%)</title><rect x="803.8" y="629" width="0.1" height="15.0" fill="rgb(247,126,34)" rx="2" ry="2" />
<text  x="806.83" y="639.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (34 samples, 0.15%)</title><rect x="530.5" y="357" width="1.9" height="15.0" fill="rgb(234,206,25)" rx="2" ry="2" />
<text  x="533.55" y="367.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (8 samples, 0.04%)</title><rect x="537.5" y="373" width="0.4" height="15.0" fill="rgb(214,125,35)" rx="2" ry="2" />
<text  x="540.47" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (323 samples, 1.46%)</title><rect x="728.4" y="501" width="17.2" height="15.0" fill="rgb(227,183,32)" rx="2" ry="2" />
<text  x="731.37" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::operator[] (3 samples, 0.01%)</title><rect x="1168.2" y="645" width="0.1" height="15.0" fill="rgb(224,129,18)" rx="2" ry="2" />
<text  x="1171.18" y="655.5" ></text>
</g>
<g >
<title>Bitmap::EffectsBlit (3 samples, 0.01%)</title><rect x="110.6" y="645" width="0.1" height="15.0" fill="rgb(209,15,4)" rx="2" ry="2" />
<text  x="113.59" y="655.5" ></text>
</g>
<g >
<title>eventfd_write (7 samples, 0.03%)</title><rect x="34.5" y="757" width="0.4" height="15.0" fill="rgb(220,101,13)" rx="2" ry="2" />
<text  x="37.48" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="1173.8" y="565" width="0.1" height="15.0" fill="rgb(206,63,46)" rx="2" ry="2" />
<text  x="1176.82" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data@plt (11 samples, 0.05%)</title><rect x="220.7" y="501" width="0.6" height="15.0" fill="rgb(244,146,37)" rx="2" ry="2" />
<text  x="223.70" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (6 samples, 0.03%)</title><rect x="1101.1" y="565" width="0.3" height="15.0" fill="rgb(219,127,31)" rx="2" ry="2" />
<text  x="1104.07" y="575.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned (2 samples, 0.01%)</title><rect x="217.3" y="485" width="0.1" height="15.0" fill="rgb(217,158,35)" rx="2" ry="2" />
<text  x="220.29" y="495.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (6 samples, 0.03%)</title><rect x="1142.6" y="549" width="0.4" height="15.0" fill="rgb(208,120,21)" rx="2" ry="2" />
<text  x="1145.63" y="559.5" ></text>
</g>
<g >
<title>std::_Bit_const_iterator::_Bit_const_iterator (2 samples, 0.01%)</title><rect x="112.6" y="581" width="0.1" height="15.0" fill="rgb(242,198,26)" rx="2" ry="2" />
<text  x="115.61" y="591.5" ></text>
</g>
<g >
<title>operator delete (23 samples, 0.10%)</title><rect x="1177.0" y="853" width="1.2" height="15.0" fill="rgb(225,53,30)" rx="2" ry="2" />
<text  x="1179.96" y="863.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (7 samples, 0.03%)</title><rect x="1173.3" y="613" width="0.4" height="15.0" fill="rgb(253,37,13)" rx="2" ry="2" />
<text  x="1176.29" y="623.5" ></text>
</g>
<g >
<title>Sprite::~Sprite (5 samples, 0.02%)</title><rect x="1144.8" y="325" width="0.2" height="15.0" fill="rgb(238,127,9)" rx="2" ry="2" />
<text  x="1147.76" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (114 samples, 0.51%)</title><rect x="1086.2" y="341" width="6.0" height="15.0" fill="rgb(220,134,36)" rx="2" ry="2" />
<text  x="1089.17" y="351.5" ></text>
</g>
<g >
<title>__vfs_read (3 samples, 0.01%)</title><rect x="34.2" y="773" width="0.1" height="15.0" fill="rgb(230,135,43)" rx="2" ry="2" />
<text  x="37.16" y="783.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_init_functor (4 samples, 0.02%)</title><rect x="107.2" y="837" width="0.2" height="15.0" fill="rgb(228,172,30)" rx="2" ry="2" />
<text  x="110.23" y="847.5" ></text>
</g>
<g >
<title>dequeue_task_fair (4 samples, 0.02%)</title><rect x="29.2" y="693" width="0.2" height="15.0" fill="rgb(210,141,35)" rx="2" ry="2" />
<text  x="32.16" y="703.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandEnd (5,456 samples, 24.61%)</title><rect x="806.2" y="629" width="290.3" height="15.0" fill="rgb(252,218,53)" rx="2" ry="2" />
<text  x="809.18" y="639.5" >Game_Interpreter::CommandEnd</text>
</g>
<g >
<title>syscall_return_via_sysret (3 samples, 0.01%)</title><rect x="35.3" y="853" width="0.2" height="15.0" fill="rgb(233,121,40)" rx="2" ry="2" />
<text  x="38.33" y="863.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (11 samples, 0.05%)</title><rect x="93.4" y="469" width="0.6" height="15.0" fill="rgb(212,73,9)" rx="2" ry="2" />
<text  x="96.40" y="479.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (2,410 samples, 10.87%)</title><rect x="597.3" y="453" width="128.2" height="15.0" fill="rgb(234,40,54)" rx="2" ry="2" />
<text  x="600.29" y="463.5" >std::copy&lt;__gnu_..</text>
</g>
<g >
<title>std::_Vector_base&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::_M_deallocate (570 samples, 2.57%)</title><rect x="1066.2" y="517" width="30.3" height="15.0" fill="rgb(216,144,9)" rx="2" ry="2" />
<text  x="1069.21" y="527.5" >st..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (486 samples, 2.19%)</title><rect x="659.4" y="373" width="25.9" height="15.0" fill="rgb(227,181,30)" rx="2" ry="2" />
<text  x="662.39" y="383.5" >[..</text>
</g>
<g >
<title>std::_Destroy&lt;RPG::EventCommand&gt; (4,648 samples, 20.96%)</title><rect x="815.4" y="485" width="247.4" height="15.0" fill="rgb(234,227,26)" rx="2" ry="2" />
<text  x="818.38" y="495.5" >std::_Destroy&lt;RPG::EventCommand&gt;</text>
</g>
<g >
<title>release_pages (3 samples, 0.01%)</title><rect x="1041.7" y="85" width="0.2" height="15.0" fill="rgb(205,197,16)" rx="2" ry="2" />
<text  x="1044.73" y="95.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (3 samples, 0.01%)</title><rect x="1041.7" y="165" width="0.2" height="15.0" fill="rgb(207,143,12)" rx="2" ry="2" />
<text  x="1044.73" y="175.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.04%)</title><rect x="106.3" y="821" width="0.5" height="15.0" fill="rgb(227,130,32)" rx="2" ry="2" />
<text  x="109.33" y="831.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (3 samples, 0.01%)</title><rect x="1142.0" y="581" width="0.2" height="15.0" fill="rgb(220,171,3)" rx="2" ry="2" />
<text  x="1145.00" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="112.2" y="645" width="0.1" height="15.0" fill="rgb(243,28,2)" rx="2" ry="2" />
<text  x="115.24" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="1042.3" y="261" width="0.1" height="15.0" fill="rgb(222,194,20)" rx="2" ry="2" />
<text  x="1045.31" y="271.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.03%)</title><rect x="220.3" y="453" width="0.3" height="15.0" fill="rgb(248,82,16)" rx="2" ry="2" />
<text  x="223.27" y="463.5" ></text>
</g>
<g >
<title>RPG::EventCommand::~EventCommand (11 samples, 0.05%)</title><rect x="814.8" y="485" width="0.6" height="15.0" fill="rgb(237,13,38)" rx="2" ry="2" />
<text  x="817.80" y="495.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (11 samples, 0.05%)</title><rect x="197.2" y="437" width="0.6" height="15.0" fill="rgb(216,2,29)" rx="2" ry="2" />
<text  x="200.23" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (6 samples, 0.03%)</title><rect x="53.5" y="837" width="0.4" height="15.0" fill="rgb(252,7,35)" rx="2" ry="2" />
<text  x="56.53" y="847.5" ></text>
</g>
<g >
<title>handle_irq (3 samples, 0.01%)</title><rect x="685.0" y="325" width="0.2" height="15.0" fill="rgb(244,89,12)" rx="2" ry="2" />
<text  x="688.05" y="335.5" ></text>
</g>
<g >
<title>unix_stream_read_generic (2 samples, 0.01%)</title><rect x="1173.4" y="389" width="0.2" height="15.0" fill="rgb(221,66,38)" rx="2" ry="2" />
<text  x="1176.45" y="399.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (5 samples, 0.02%)</title><rect x="117.5" y="341" width="0.3" height="15.0" fill="rgb(230,136,16)" rx="2" ry="2" />
<text  x="120.50" y="351.5" ></text>
</g>
<g >
<title>do_page_fault (10 samples, 0.05%)</title><rect x="536.9" y="357" width="0.5" height="15.0" fill="rgb(211,86,29)" rx="2" ry="2" />
<text  x="539.88" y="367.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (4 samples, 0.02%)</title><rect x="1096.3" y="437" width="0.2" height="15.0" fill="rgb(212,99,42)" rx="2" ry="2" />
<text  x="1099.33" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (3 samples, 0.01%)</title><rect x="94.0" y="469" width="0.1" height="15.0" fill="rgb(218,195,27)" rx="2" ry="2" />
<text  x="96.98" y="479.5" ></text>
</g>
<g >
<title>main (20,033 samples, 90.35%)</title><rect x="110.6" y="821" width="1066.1" height="15.0" fill="rgb(250,94,9)" rx="2" ry="2" />
<text  x="113.59" y="831.5" >main</text>
</g>
<g >
<title>RPG::SavePicture::SavePicture (2 samples, 0.01%)</title><rect x="1171.5" y="661" width="0.1" height="15.0" fill="rgb(233,128,51)" rx="2" ry="2" />
<text  x="1174.48" y="671.5" ></text>
</g>
<g >
<title>__handle_mm_fault (32 samples, 0.14%)</title><rect x="116.3" y="389" width="1.7" height="15.0" fill="rgb(210,215,52)" rx="2" ry="2" />
<text  x="119.28" y="399.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (2 samples, 0.01%)</title><rect x="94.0" y="421" width="0.1" height="15.0" fill="rgb(241,14,48)" rx="2" ry="2" />
<text  x="96.98" y="431.5" ></text>
</g>
<g >
<title>policy_nodemask (3 samples, 0.01%)</title><rect x="192.7" y="421" width="0.2" height="15.0" fill="rgb(222,47,24)" rx="2" ry="2" />
<text  x="195.71" y="431.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (2 samples, 0.01%)</title><rect x="94.2" y="837" width="0.2" height="15.0" fill="rgb(235,36,2)" rx="2" ry="2" />
<text  x="97.25" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (72 samples, 0.32%)</title><rect x="757.7" y="485" width="3.9" height="15.0" fill="rgb(239,87,5)" rx="2" ry="2" />
<text  x="760.74" y="495.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (18 samples, 0.08%)</title><rect x="73.7" y="837" width="0.9" height="15.0" fill="rgb(227,30,14)" rx="2" ry="2" />
<text  x="76.65" y="847.5" ></text>
</g>
<g >
<title>[unknown] (335 samples, 1.51%)</title><rect x="92.8" y="853" width="17.8" height="15.0" fill="rgb(215,20,16)" rx="2" ry="2" />
<text  x="95.76" y="863.5" ></text>
</g>
<g >
<title>uncharge_page (3 samples, 0.01%)</title><rect x="1090.0" y="149" width="0.2" height="15.0" fill="rgb(238,112,9)" rx="2" ry="2" />
<text  x="1093.00" y="159.5" ></text>
</g>
<g >
<title>xhci_msi_irq (2 samples, 0.01%)</title><rect x="326.4" y="341" width="0.1" height="15.0" fill="rgb(234,19,45)" rx="2" ry="2" />
<text  x="329.39" y="351.5" ></text>
</g>
<g >
<title>__do_page_fault (342 samples, 1.54%)</title><rect x="180.3" y="485" width="18.2" height="15.0" fill="rgb(225,168,27)" rx="2" ry="2" />
<text  x="183.25" y="495.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (85 samples, 0.38%)</title><rect x="1046.9" y="341" width="4.5" height="15.0" fill="rgb(231,4,12)" rx="2" ry="2" />
<text  x="1049.89" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (114 samples, 0.51%)</title><rect x="1086.2" y="357" width="6.0" height="15.0" fill="rgb(210,27,18)" rx="2" ry="2" />
<text  x="1089.17" y="367.5" ></text>
</g>
<g >
<title>Window_Base::Update (8 samples, 0.04%)</title><rect x="1172.7" y="677" width="0.4" height="15.0" fill="rgb(224,106,11)" rx="2" ry="2" />
<text  x="1175.65" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (4 samples, 0.02%)</title><rect x="798.9" y="597" width="0.3" height="15.0" fill="rgb(238,37,50)" rx="2" ry="2" />
<text  x="801.94" y="607.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;RPG::EventCommand*&gt; (4,882 samples, 22.02%)</title><rect x="806.3" y="517" width="259.8" height="15.0" fill="rgb(207,200,40)" rx="2" ry="2" />
<text  x="809.28" y="527.5" >std::_Destroy&lt;RPG::EventCommand*&gt;</text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (2 samples, 0.01%)</title><rect x="1170.9" y="645" width="0.2" height="15.0" fill="rgb(209,93,54)" rx="2" ry="2" />
<text  x="1173.95" y="655.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (5 samples, 0.02%)</title><rect x="725.5" y="469" width="0.3" height="15.0" fill="rgb(218,204,2)" rx="2" ry="2" />
<text  x="728.55" y="479.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (8 samples, 0.04%)</title><rect x="92.8" y="645" width="0.4" height="15.0" fill="rgb(218,86,20)" rx="2" ry="2" />
<text  x="95.76" y="655.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::_M_allocate (137 samples, 0.62%)</title><rect x="113.7" y="597" width="7.3" height="15.0" fill="rgb(232,65,28)" rx="2" ry="2" />
<text  x="116.73" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (31 samples, 0.14%)</title><rect x="1092.4" y="341" width="1.6" height="15.0" fill="rgb(251,147,50)" rx="2" ry="2" />
<text  x="1095.39" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (114 samples, 0.51%)</title><rect x="1086.2" y="325" width="6.0" height="15.0" fill="rgb(254,93,29)" rx="2" ry="2" />
<text  x="1089.17" y="335.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingExecution (5 samples, 0.02%)</title><rect x="112.4" y="645" width="0.3" height="15.0" fill="rgb(211,16,45)" rx="2" ry="2" />
<text  x="115.45" y="655.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;char*&gt; (8 samples, 0.04%)</title><rect x="225.8" y="501" width="0.4" height="15.0" fill="rgb(205,40,20)" rx="2" ry="2" />
<text  x="228.76" y="511.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (3 samples, 0.01%)</title><rect x="94.4" y="741" width="0.1" height="15.0" fill="rgb(220,153,20)" rx="2" ry="2" />
<text  x="97.35" y="751.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipTo (5 samples, 0.02%)</title><rect x="1151.6" y="613" width="0.3" height="15.0" fill="rgb(231,163,52)" rx="2" ry="2" />
<text  x="1154.63" y="623.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (5 samples, 0.02%)</title><rect x="94.5" y="645" width="0.3" height="15.0" fill="rgb(249,164,36)" rx="2" ry="2" />
<text  x="97.51" y="655.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;Input::UiSource::Update()::{lambda(int)#1}&gt; &gt; (3 samples, 0.01%)</title><rect x="111.7" y="645" width="0.2" height="15.0" fill="rgb(235,172,33)" rx="2" ry="2" />
<text  x="114.70" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (31 samples, 0.14%)</title><rect x="221.3" y="501" width="1.6" height="15.0" fill="rgb(244,61,47)" rx="2" ry="2" />
<text  x="224.28" y="511.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (8 samples, 0.04%)</title><rect x="89.5" y="837" width="0.4" height="15.0" fill="rgb(239,225,11)" rx="2" ry="2" />
<text  x="92.51" y="847.5" ></text>
</g>
<g >
<title>operator delete (12 samples, 0.05%)</title><rect x="824.5" y="453" width="0.7" height="15.0" fill="rgb(223,10,16)" rx="2" ry="2" />
<text  x="827.54" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::EventCommand const*, std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt; &gt;::operator* (47 samples, 0.21%)</title><rect x="126.9" y="549" width="2.5" height="15.0" fill="rgb(250,205,17)" rx="2" ry="2" />
<text  x="129.87" y="559.5" ></text>
</g>
<g >
<title>perf_event_mmap_output (2 samples, 0.01%)</title><rect x="114.7" y="293" width="0.1" height="15.0" fill="rgb(239,23,54)" rx="2" ry="2" />
<text  x="117.68" y="303.5" ></text>
</g>
<g >
<title>std::__distance&lt;char*&gt; (39 samples, 0.18%)</title><rect x="238.1" y="485" width="2.1" height="15.0" fill="rgb(219,2,35)" rx="2" ry="2" />
<text  x="241.10" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (25 samples, 0.11%)</title><rect x="1041.1" y="293" width="1.3" height="15.0" fill="rgb(218,136,26)" rx="2" ry="2" />
<text  x="1044.09" y="303.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandMovePicture (13 samples, 0.06%)</title><rect x="1141.3" y="613" width="0.7" height="15.0" fill="rgb(225,27,48)" rx="2" ry="2" />
<text  x="1144.30" y="623.5" ></text>
</g>
<g >
<title>__sys_recvmsg (3 samples, 0.01%)</title><rect x="1175.9" y="485" width="0.2" height="15.0" fill="rgb(239,99,41)" rx="2" ry="2" />
<text  x="1178.95" y="495.5" ></text>
</g>
<g >
<title>do_page_fault (39 samples, 0.18%)</title><rect x="116.1" y="437" width="2.1" height="15.0" fill="rgb(253,106,50)" rx="2" ry="2" />
<text  x="119.12" y="447.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (164 samples, 0.74%)</title><rect x="1083.7" y="373" width="8.7" height="15.0" fill="rgb(212,95,21)" rx="2" ry="2" />
<text  x="1086.67" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_M_lower_bound (3 samples, 0.01%)</title><rect x="1144.2" y="309" width="0.2" height="15.0" fill="rgb(216,2,33)" rx="2" ry="2" />
<text  x="1147.23" y="319.5" ></text>
</g>
<g >
<title>Game_Picture::Show (57 samples, 0.26%)</title><rect x="1142.3" y="597" width="3.0" height="15.0" fill="rgb(237,125,34)" rx="2" ry="2" />
<text  x="1145.26" y="607.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (9 samples, 0.04%)</title><rect x="198.5" y="517" width="0.4" height="15.0" fill="rgb(209,105,12)" rx="2" ry="2" />
<text  x="201.45" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (7 samples, 0.03%)</title><rect x="1152.5" y="613" width="0.4" height="15.0" fill="rgb(221,55,33)" rx="2" ry="2" />
<text  x="1155.53" y="623.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (29 samples, 0.13%)</title><rect x="195.6" y="437" width="1.6" height="15.0" fill="rgb(237,80,27)" rx="2" ry="2" />
<text  x="198.63" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::~_Vector_impl (10 samples, 0.05%)</title><rect x="84.6" y="837" width="0.5" height="15.0" fill="rgb(223,27,24)" rx="2" ry="2" />
<text  x="87.61" y="847.5" ></text>
</g>
<g >
<title>_raw_spin_lock (11 samples, 0.05%)</title><rect x="182.7" y="437" width="0.6" height="15.0" fill="rgb(225,21,12)" rx="2" ry="2" />
<text  x="185.70" y="447.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="825.1" y="389" width="0.1" height="15.0" fill="rgb(228,67,41)" rx="2" ry="2" />
<text  x="828.07" y="399.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (13 samples, 0.06%)</title><rect x="1175.9" y="693" width="0.7" height="15.0" fill="rgb(221,135,12)" rx="2" ry="2" />
<text  x="1178.95" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (43 samples, 0.19%)</title><rect x="792.6" y="613" width="2.3" height="15.0" fill="rgb(208,95,16)" rx="2" ry="2" />
<text  x="795.60" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt;::__normal_iterator (3 samples, 0.01%)</title><rect x="1162.3" y="613" width="0.1" height="15.0" fill="rgb(224,135,31)" rx="2" ry="2" />
<text  x="1165.27" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (6 samples, 0.03%)</title><rect x="1102.3" y="565" width="0.3" height="15.0" fill="rgb(228,70,25)" rx="2" ry="2" />
<text  x="1105.29" y="575.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (570 samples, 2.57%)</title><rect x="1066.2" y="453" width="30.3" height="15.0" fill="rgb(237,89,11)" rx="2" ry="2" />
<text  x="1069.21" y="463.5" >[l..</text>
</g>
<g >
<title>free_pcppages_bulk (2 samples, 0.01%)</title><rect x="1041.8" y="37" width="0.1" height="15.0" fill="rgb(250,228,15)" rx="2" ry="2" />
<text  x="1044.78" y="47.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;RPG::SaveEventExecFrame&gt;::deallocate (4 samples, 0.02%)</title><rect x="113.1" y="533" width="0.3" height="15.0" fill="rgb(235,225,12)" rx="2" ry="2" />
<text  x="116.14" y="543.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (202 samples, 0.91%)</title><rect x="37.7" y="837" width="10.8" height="15.0" fill="rgb(218,17,36)" rx="2" ry="2" />
<text  x="40.73" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::size (3 samples, 0.01%)</title><rect x="112.6" y="613" width="0.1" height="15.0" fill="rgb(218,43,25)" rx="2" ry="2" />
<text  x="115.56" y="623.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (5 samples, 0.02%)</title><rect x="94.5" y="725" width="0.3" height="15.0" fill="rgb(243,223,47)" rx="2" ry="2" />
<text  x="97.51" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;RPG::Map, std::default_delete&lt;RPG::Map&gt; &gt;::get (2 samples, 0.01%)</title><rect x="110.9" y="629" width="0.1" height="15.0" fill="rgb(206,224,4)" rx="2" ry="2" />
<text  x="113.85" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::EventCommand const*, std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt; &gt;::operator++ (6 samples, 0.03%)</title><rect x="121.6" y="565" width="0.3" height="15.0" fill="rgb(227,191,41)" rx="2" ry="2" />
<text  x="124.60" y="575.5" ></text>
</g>
<g >
<title>unmap_vmas (7 samples, 0.03%)</title><rect x="1041.9" y="165" width="0.4" height="15.0" fill="rgb(219,80,49)" rx="2" ry="2" />
<text  x="1044.89" y="175.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (5 samples, 0.02%)</title><rect x="94.5" y="549" width="0.3" height="15.0" fill="rgb(220,171,28)" rx="2" ry="2" />
<text  x="97.51" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (14 samples, 0.06%)</title><rect x="1059.8" y="421" width="0.7" height="15.0" fill="rgb(243,213,15)" rx="2" ry="2" />
<text  x="1062.77" y="431.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.01%)</title><rect x="1173.8" y="597" width="0.1" height="15.0" fill="rgb(254,229,17)" rx="2" ry="2" />
<text  x="1176.82" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator bool (2 samples, 0.01%)</title><rect x="1171.3" y="645" width="0.1" height="15.0" fill="rgb(243,194,51)" rx="2" ry="2" />
<text  x="1174.27" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (19 samples, 0.09%)</title><rect x="1135.7" y="597" width="1.0" height="15.0" fill="rgb(223,131,15)" rx="2" ry="2" />
<text  x="1138.66" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (9 samples, 0.04%)</title><rect x="1113.8" y="565" width="0.5" height="15.0" fill="rgb(246,24,17)" rx="2" ry="2" />
<text  x="1116.84" y="575.5" ></text>
</g>
<g >
<title>page_fault (8 samples, 0.04%)</title><rect x="119.0" y="485" width="0.5" height="15.0" fill="rgb(248,53,23)" rx="2" ry="2" />
<text  x="122.05" y="495.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="542.4" y="373" width="0.2" height="15.0" fill="rgb(223,27,20)" rx="2" ry="2" />
<text  x="545.42" y="383.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;Drawable*&gt; (2 samples, 0.01%)</title><rect x="94.1" y="341" width="0.1" height="15.0" fill="rgb(212,210,10)" rx="2" ry="2" />
<text  x="97.14" y="351.5" ></text>
</g>
<g >
<title>std::bitset&lt;36ul&gt;::reference::operator= (2 samples, 0.01%)</title><rect x="112.0" y="725" width="0.1" height="15.0" fill="rgb(208,173,1)" rx="2" ry="2" />
<text  x="114.97" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (67 samples, 0.30%)</title><rect x="1156.5" y="613" width="3.5" height="15.0" fill="rgb(247,1,43)" rx="2" ry="2" />
<text  x="1159.47" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::get (6 samples, 0.03%)</title><rect x="1169.4" y="645" width="0.3" height="15.0" fill="rgb(243,130,51)" rx="2" ry="2" />
<text  x="1172.40" y="655.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="709.7" y="389" width="0.1" height="15.0" fill="rgb(213,84,42)" rx="2" ry="2" />
<text  x="712.69" y="399.5" ></text>
</g>
<g >
<title>do_page_fault (343 samples, 1.55%)</title><rect x="180.2" y="501" width="18.3" height="15.0" fill="rgb(242,116,46)" rx="2" ry="2" />
<text  x="183.20" y="511.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (18 samples, 0.08%)</title><rect x="93.3" y="661" width="0.9" height="15.0" fill="rgb(216,195,42)" rx="2" ry="2" />
<text  x="96.29" y="671.5" ></text>
</g>
<g >
<title>uncharge_batch (2 samples, 0.01%)</title><rect x="1089.9" y="149" width="0.1" height="15.0" fill="rgb(226,217,10)" rx="2" ry="2" />
<text  x="1092.89" y="159.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandEndLoop (71 samples, 0.32%)</title><rect x="1136.8" y="613" width="3.8" height="15.0" fill="rgb(238,118,9)" rx="2" ry="2" />
<text  x="1139.83" y="623.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.01%)</title><rect x="1175.9" y="517" width="0.2" height="15.0" fill="rgb(212,40,9)" rx="2" ry="2" />
<text  x="1178.95" y="527.5" ></text>
</g>
<g >
<title>Graphics::Update (19 samples, 0.09%)</title><rect x="110.6" y="741" width="1.0" height="15.0" fill="rgb(223,158,14)" rx="2" ry="2" />
<text  x="113.59" y="751.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (272 samples, 1.23%)</title><rect x="226.2" y="501" width="14.5" height="15.0" fill="rgb(232,73,19)" rx="2" ry="2" />
<text  x="229.18" y="511.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (8 samples, 0.04%)</title><rect x="92.8" y="805" width="0.4" height="15.0" fill="rgb(245,158,29)" rx="2" ry="2" />
<text  x="95.76" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (19 samples, 0.09%)</title><rect x="1155.4" y="581" width="1.0" height="15.0" fill="rgb(212,141,6)" rx="2" ry="2" />
<text  x="1158.41" y="591.5" ></text>
</g>
<g >
<title>Player::Run (20,033 samples, 90.35%)</title><rect x="110.6" y="805" width="1066.1" height="15.0" fill="rgb(235,31,40)" rx="2" ry="2" />
<text  x="113.59" y="815.5" >Player::Run</text>
</g>
<g >
<title>std::__invoke&lt;void (*&amp;)(FileRequestResult*, int, int, bool), FileRequestResult*, int&amp;, int&amp;, bool&amp;&gt; (3 samples, 0.01%)</title><rect x="94.4" y="565" width="0.1" height="15.0" fill="rgb(218,208,24)" rx="2" ry="2" />
<text  x="97.35" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::end (28 samples, 0.13%)</title><rect x="1166.5" y="629" width="1.5" height="15.0" fill="rgb(209,87,41)" rx="2" ry="2" />
<text  x="1169.53" y="639.5" ></text>
</g>
<g >
<title>Game_Interpreter::Push (12,650 samples, 57.05%)</title><rect x="113.5" y="645" width="673.2" height="15.0" fill="rgb(248,70,29)" rx="2" ry="2" />
<text  x="116.51" y="655.5" >Game_Interpreter::Push</text>
</g>
<g >
<title>mem_cgroup_try_charge (23 samples, 0.10%)</title><rect x="195.9" y="421" width="1.2" height="15.0" fill="rgb(228,87,28)" rx="2" ry="2" />
<text  x="198.90" y="431.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (3 samples, 0.01%)</title><rect x="1041.7" y="101" width="0.2" height="15.0" fill="rgb(235,146,24)" rx="2" ry="2" />
<text  x="1044.73" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (4 samples, 0.02%)</title><rect x="51.8" y="837" width="0.2" height="15.0" fill="rgb(207,88,29)" rx="2" ry="2" />
<text  x="54.83" y="847.5" ></text>
</g>
<g >
<title>xcb_poll_for_reply64 (3 samples, 0.01%)</title><rect x="1176.3" y="629" width="0.2" height="15.0" fill="rgb(217,2,52)" rx="2" ry="2" />
<text  x="1179.32" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::emplace_back&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (3 samples, 0.01%)</title><rect x="1143.2" y="517" width="0.1" height="15.0" fill="rgb(215,81,6)" rx="2" ry="2" />
<text  x="1146.17" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (19 samples, 0.09%)</title><rect x="107.4" y="837" width="1.1" height="15.0" fill="rgb(244,166,34)" rx="2" ry="2" />
<text  x="110.45" y="847.5" ></text>
</g>
<g >
<title>handle_edge_irq (2 samples, 0.01%)</title><rect x="685.0" y="309" width="0.2" height="15.0" fill="rgb(230,13,40)" rx="2" ry="2" />
<text  x="688.05" y="319.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (495 samples, 2.23%)</title><rect x="502.1" y="341" width="26.3" height="15.0" fill="rgb(227,216,32)" rx="2" ry="2" />
<text  x="505.07" y="351.5" >[..</text>
</g>
<g >
<title>FileFinder::MakePath (4 samples, 0.02%)</title><rect x="1142.4" y="549" width="0.2" height="15.0" fill="rgb(214,101,17)" rx="2" ry="2" />
<text  x="1145.42" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="112.2" y="613" width="0.1" height="15.0" fill="rgb(211,51,46)" rx="2" ry="2" />
<text  x="115.24" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (566 samples, 2.55%)</title><rect x="1066.2" y="437" width="30.1" height="15.0" fill="rgb(221,14,1)" rx="2" ry="2" />
<text  x="1069.21" y="447.5" >[l..</text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (47 samples, 0.21%)</title><rect x="801.3" y="613" width="2.5" height="15.0" fill="rgb(254,34,46)" rx="2" ry="2" />
<text  x="804.33" y="623.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (3 samples, 0.01%)</title><rect x="195.7" y="421" width="0.2" height="15.0" fill="rgb(205,144,47)" rx="2" ry="2" />
<text  x="198.74" y="431.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (3 samples, 0.01%)</title><rect x="1176.5" y="661" width="0.1" height="15.0" fill="rgb(231,2,34)" rx="2" ry="2" />
<text  x="1179.48" y="671.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (2 samples, 0.01%)</title><rect x="89.1" y="837" width="0.1" height="15.0" fill="rgb(207,148,40)" rx="2" ry="2" />
<text  x="92.14" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (2 samples, 0.01%)</title><rect x="1114.2" y="549" width="0.1" height="15.0" fill="rgb(243,97,9)" rx="2" ry="2" />
<text  x="1117.21" y="559.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (7 samples, 0.03%)</title><rect x="111.0" y="661" width="0.4" height="15.0" fill="rgb(212,147,36)" rx="2" ry="2" />
<text  x="114.01" y="671.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="1086.0" y="245" width="0.1" height="15.0" fill="rgb(230,15,15)" rx="2" ry="2" />
<text  x="1088.95" y="255.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="1144.9" y="309" width="0.1" height="15.0" fill="rgb(211,49,26)" rx="2" ry="2" />
<text  x="1147.92" y="319.5" ></text>
</g>
<g >
<title>page_fault (10 samples, 0.05%)</title><rect x="120.4" y="501" width="0.5" height="15.0" fill="rgb(211,130,25)" rx="2" ry="2" />
<text  x="123.38" y="511.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (31 samples, 0.14%)</title><rect x="528.4" y="341" width="1.7" height="15.0" fill="rgb(233,113,3)" rx="2" ry="2" />
<text  x="531.42" y="351.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (25 samples, 0.11%)</title><rect x="1174.4" y="517" width="1.3" height="15.0" fill="rgb(223,179,13)" rx="2" ry="2" />
<text  x="1177.41" y="527.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (5 samples, 0.02%)</title><rect x="94.5" y="613" width="0.3" height="15.0" fill="rgb(224,168,28)" rx="2" ry="2" />
<text  x="97.51" y="623.5" ></text>
</g>
<g >
<title>zap_page_range (28 samples, 0.13%)</title><rect x="1092.6" y="309" width="1.4" height="15.0" fill="rgb(252,175,37)" rx="2" ry="2" />
<text  x="1095.55" y="319.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (911 samples, 4.11%)</title><rect x="637.0" y="405" width="48.5" height="15.0" fill="rgb(239,199,41)" rx="2" ry="2" />
<text  x="640.04" y="415.5" >std:..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.02%)</title><rect x="824.9" y="421" width="0.3" height="15.0" fill="rgb(239,61,21)" rx="2" ry="2" />
<text  x="827.91" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::~_Vector_impl (26 samples, 0.12%)</title><rect x="849.0" y="437" width="1.3" height="15.0" fill="rgb(210,170,12)" rx="2" ry="2" />
<text  x="851.96" y="447.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (3 samples, 0.01%)</title><rect x="1141.5" y="581" width="0.2" height="15.0" fill="rgb(208,185,33)" rx="2" ry="2" />
<text  x="1144.52" y="591.5" ></text>
</g>
<g >
<title>Scene::IsAsyncPending (3 samples, 0.01%)</title><rect x="1171.7" y="693" width="0.2" height="15.0" fill="rgb(211,101,13)" rx="2" ry="2" />
<text  x="1174.69" y="703.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (2 samples, 0.01%)</title><rect x="93.3" y="469" width="0.1" height="15.0" fill="rgb(241,193,51)" rx="2" ry="2" />
<text  x="96.29" y="479.5" ></text>
</g>
<g >
<title>__fdget (3 samples, 0.01%)</title><rect x="28.5" y="789" width="0.1" height="15.0" fill="rgb(251,63,39)" rx="2" ry="2" />
<text  x="31.47" y="799.5" ></text>
</g>
<g >
<title>pick_next_task_fair (2 samples, 0.01%)</title><rect x="33.7" y="709" width="0.1" height="15.0" fill="rgb(242,223,10)" rx="2" ry="2" />
<text  x="36.74" y="719.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (34 samples, 0.15%)</title><rect x="1129.6" y="597" width="1.9" height="15.0" fill="rgb(225,157,10)" rx="2" ry="2" />
<text  x="1132.65" y="607.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (108 samples, 0.49%)</title><rect x="113.8" y="501" width="5.7" height="15.0" fill="rgb(242,210,19)" rx="2" ry="2" />
<text  x="116.78" y="511.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (11 samples, 0.05%)</title><rect x="1092.7" y="213" width="0.5" height="15.0" fill="rgb(248,117,7)" rx="2" ry="2" />
<text  x="1095.66" y="223.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.01%)</title><rect x="1086.0" y="197" width="0.1" height="15.0" fill="rgb(238,175,19)" rx="2" ry="2" />
<text  x="1088.95" y="207.5" ></text>
</g>
<g >
<title>pollwake (5 samples, 0.02%)</title><rect x="34.5" y="709" width="0.3" height="15.0" fill="rgb(211,151,13)" rx="2" ry="2" />
<text  x="37.53" y="719.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;RPG::EventCommand&gt; &gt;::allocate (136 samples, 0.61%)</title><rect x="113.8" y="581" width="7.2" height="15.0" fill="rgb(240,157,47)" rx="2" ry="2" />
<text  x="116.78" y="591.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.01%)</title><rect x="1172.8" y="549" width="0.1" height="15.0" fill="rgb(250,182,47)" rx="2" ry="2" />
<text  x="1175.76" y="559.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (5 samples, 0.02%)</title><rect x="94.5" y="389" width="0.3" height="15.0" fill="rgb(248,16,33)" rx="2" ry="2" />
<text  x="97.51" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (8 samples, 0.04%)</title><rect x="287.4" y="485" width="0.4" height="15.0" fill="rgb(222,1,45)" rx="2" ry="2" />
<text  x="290.38" y="495.5" ></text>
</g>
<g >
<title>Scene_Map::Update (3 samples, 0.01%)</title><rect x="94.4" y="837" width="0.1" height="15.0" fill="rgb(236,76,18)" rx="2" ry="2" />
<text  x="97.35" y="847.5" ></text>
</g>
<g >
<title>__do_munmap (114 samples, 0.51%)</title><rect x="1086.2" y="293" width="6.0" height="15.0" fill="rgb(247,200,25)" rx="2" ry="2" />
<text  x="1089.17" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (14 samples, 0.06%)</title><rect x="1156.9" y="597" width="0.7" height="15.0" fill="rgb(228,36,50)" rx="2" ry="2" />
<text  x="1159.90" y="607.5" ></text>
</g>
<g >
<title>free_unref_page_list (2 samples, 0.01%)</title><rect x="1086.0" y="181" width="0.1" height="15.0" fill="rgb(206,19,52)" rx="2" ry="2" />
<text  x="1088.95" y="191.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (5 samples, 0.02%)</title><rect x="94.5" y="437" width="0.3" height="15.0" fill="rgb(238,85,10)" rx="2" ry="2" />
<text  x="97.51" y="447.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (19 samples, 0.09%)</title><rect x="116.4" y="357" width="1.0" height="15.0" fill="rgb(224,211,14)" rx="2" ry="2" />
<text  x="119.39" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::construct&lt;RPG::SaveEventExecFrame, RPG::SaveEventExecFrame&gt; (4 samples, 0.02%)</title><rect x="786.5" y="581" width="0.2" height="15.0" fill="rgb(230,80,20)" rx="2" ry="2" />
<text  x="789.48" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::~vector (4 samples, 0.02%)</title><rect x="113.1" y="597" width="0.3" height="15.0" fill="rgb(228,0,26)" rx="2" ry="2" />
<text  x="116.14" y="607.5" ></text>
</g>
<g >
<title>Scene_Map::AsyncNext&lt;Scene_Map::UpdateStage1(MapUpdateAsyncContext)::{lambda()#2}&gt; (3 samples, 0.01%)</title><rect x="1171.7" y="709" width="0.2" height="15.0" fill="rgb(238,59,46)" rx="2" ry="2" />
<text  x="1174.69" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="1173.8" y="581" width="0.1" height="15.0" fill="rgb(207,42,5)" rx="2" ry="2" />
<text  x="1176.82" y="591.5" ></text>
</g>
<g >
<title>Cache::System (5 samples, 0.02%)</title><rect x="1172.7" y="629" width="0.3" height="15.0" fill="rgb(247,214,14)" rx="2" ry="2" />
<text  x="1175.70" y="639.5" ></text>
</g>
<g >
<title>xhci_msi_irq (2 samples, 0.01%)</title><rect x="685.0" y="245" width="0.2" height="15.0" fill="rgb(207,205,42)" rx="2" ry="2" />
<text  x="688.05" y="255.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (5 samples, 0.02%)</title><rect x="94.5" y="517" width="0.3" height="15.0" fill="rgb(224,32,9)" rx="2" ry="2" />
<text  x="97.51" y="527.5" ></text>
</g>
<g >
<title>_nv029793rm (2 samples, 0.01%)</title><rect x="113.9" y="453" width="0.1" height="15.0" fill="rgb(253,199,54)" rx="2" ry="2" />
<text  x="116.89" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (10 samples, 0.05%)</title><rect x="1041.7" y="229" width="0.6" height="15.0" fill="rgb(227,114,15)" rx="2" ry="2" />
<text  x="1044.73" y="239.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (171 samples, 0.77%)</title><rect x="183.4" y="421" width="9.1" height="15.0" fill="rgb(251,90,13)" rx="2" ry="2" />
<text  x="186.39" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::push_back (15 samples, 0.07%)</title><rect x="786.0" y="629" width="0.7" height="15.0" fill="rgb(243,178,28)" rx="2" ry="2" />
<text  x="788.95" y="639.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (34 samples, 0.15%)</title><rect x="193.5" y="405" width="1.8" height="15.0" fill="rgb(206,172,54)" rx="2" ry="2" />
<text  x="196.45" y="415.5" ></text>
</g>
<g >
<title>RPG::SaveEventExecState::operator= (12 samples, 0.05%)</title><rect x="112.8" y="645" width="0.6" height="15.0" fill="rgb(220,22,45)" rx="2" ry="2" />
<text  x="115.77" y="655.5" ></text>
</g>
<g >
<title>Game_Player::UpdateSelfMovement (3 samples, 0.01%)</title><rect x="1170.3" y="661" width="0.1" height="15.0" fill="rgb(242,221,44)" rx="2" ry="2" />
<text  x="1173.26" y="671.5" ></text>
</g>
<g >
<title>__GI_madvise (31 samples, 0.14%)</title><rect x="1092.4" y="373" width="1.6" height="15.0" fill="rgb(232,128,25)" rx="2" ry="2" />
<text  x="1095.39" y="383.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (544 samples, 2.45%)</title><rect x="1067.4" y="405" width="28.9" height="15.0" fill="rgb(208,208,18)" rx="2" ry="2" />
<text  x="1070.38" y="415.5" >[l..</text>
</g>
<g >
<title>__handle_mm_fault (7 samples, 0.03%)</title><rect x="119.1" y="421" width="0.4" height="15.0" fill="rgb(223,22,27)" rx="2" ry="2" />
<text  x="122.10" y="431.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (17 samples, 0.08%)</title><rect x="114.0" y="405" width="1.0" height="15.0" fill="rgb(211,143,21)" rx="2" ry="2" />
<text  x="117.05" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (21 samples, 0.09%)</title><rect x="1114.3" y="565" width="1.1" height="15.0" fill="rgb(250,40,21)" rx="2" ry="2" />
<text  x="1117.32" y="575.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (74 samples, 0.33%)</title><rect x="29.7" y="693" width="4.0" height="15.0" fill="rgb(216,100,1)" rx="2" ry="2" />
<text  x="32.74" y="703.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.01%)</title><rect x="35.1" y="853" width="0.1" height="15.0" fill="rgb(246,85,28)" rx="2" ry="2" />
<text  x="38.07" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (139 samples, 0.63%)</title><rect x="796.4" y="629" width="7.4" height="15.0" fill="rgb(232,74,11)" rx="2" ry="2" />
<text  x="799.44" y="639.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (12 samples, 0.05%)</title><rect x="1092.6" y="245" width="0.6" height="15.0" fill="rgb(207,89,52)" rx="2" ry="2" />
<text  x="1095.61" y="255.5" ></text>
</g>
<g >
<title>security_file_permission (3 samples, 0.01%)</title><rect x="34.3" y="757" width="0.2" height="15.0" fill="rgb(254,107,21)" rx="2" ry="2" />
<text  x="37.32" y="767.5" ></text>
</g>
<g >
<title>Graphics::LocalDraw (8 samples, 0.04%)</title><rect x="110.6" y="709" width="0.4" height="15.0" fill="rgb(219,169,23)" rx="2" ry="2" />
<text  x="113.59" y="719.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (*&amp;)(FileRequestResult*, int, int, bool), FileRequestResult*, int&amp;, int&amp;, bool&amp;&gt; (3 samples, 0.01%)</title><rect x="1142.0" y="469" width="0.2" height="15.0" fill="rgb(236,215,23)" rx="2" ry="2" />
<text  x="1145.00" y="479.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (3 samples, 0.01%)</title><rect x="1173.4" y="405" width="0.2" height="15.0" fill="rgb(226,94,37)" rx="2" ry="2" />
<text  x="1176.40" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.05%)</title><rect x="1041.7" y="261" width="0.6" height="15.0" fill="rgb(223,139,41)" rx="2" ry="2" />
<text  x="1044.73" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;RPG::EventCommand*&gt; (4,871 samples, 21.97%)</title><rect x="806.9" y="501" width="259.2" height="15.0" fill="rgb(230,64,39)" rx="2" ry="2" />
<text  x="809.87" y="511.5" >std::_Destroy_aux&lt;false&gt;::__destro..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (6 samples, 0.03%)</title><rect x="1147.5" y="565" width="0.3" height="15.0" fill="rgb(234,83,47)" rx="2" ry="2" />
<text  x="1150.53" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (774 samples, 3.49%)</title><rect x="199.5" y="517" width="41.2" height="15.0" fill="rgb(212,177,26)" rx="2" ry="2" />
<text  x="202.52" y="527.5" >std..</text>
</g>
<g >
<title>prepare_exit_to_usermode (112 samples, 0.51%)</title><rect x="775.1" y="501" width="6.0" height="15.0" fill="rgb(224,213,11)" rx="2" ry="2" />
<text  x="778.15" y="511.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void (*(std::_Placeholder&lt;1&gt;, int, int, bool))(FileRequestResult*, int, int, bool)&gt;::operator()&lt;FileRequestResult*, void&gt; (3 samples, 0.01%)</title><rect x="94.4" y="597" width="0.1" height="15.0" fill="rgb(234,111,27)" rx="2" ry="2" />
<text  x="97.35" y="607.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandPlaySound (3 samples, 0.01%)</title><rect x="1142.0" y="613" width="0.2" height="15.0" fill="rgb(248,18,18)" rx="2" ry="2" />
<text  x="1145.00" y="623.5" ></text>
</g>
<g >
<title>Window_Message::Update (13 samples, 0.06%)</title><rect x="1172.4" y="709" width="0.7" height="15.0" fill="rgb(232,77,9)" rx="2" ry="2" />
<text  x="1175.38" y="719.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::_M_ptr (6 samples, 0.03%)</title><rect x="1169.4" y="629" width="0.3" height="15.0" fill="rgb(222,203,16)" rx="2" ry="2" />
<text  x="1172.40" y="639.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (3 samples, 0.01%)</title><rect x="94.4" y="725" width="0.1" height="15.0" fill="rgb(233,213,31)" rx="2" ry="2" />
<text  x="97.35" y="735.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (2 samples, 0.01%)</title><rect x="120.8" y="341" width="0.1" height="15.0" fill="rgb(234,137,49)" rx="2" ry="2" />
<text  x="123.75" y="351.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;void (*(std::_Placeholder&lt;1&gt;, int, int, bool))(FileRequestResult*, int, int, bool)&gt; &gt;::_M_invoke (3 samples, 0.01%)</title><rect x="1142.0" y="517" width="0.2" height="15.0" fill="rgb(251,134,7)" rx="2" ry="2" />
<text  x="1145.00" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (6 samples, 0.03%)</title><rect x="84.2" y="837" width="0.4" height="15.0" fill="rgb(217,131,38)" rx="2" ry="2" />
<text  x="87.24" y="847.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (136 samples, 0.61%)</title><rect x="113.8" y="517" width="7.2" height="15.0" fill="rgb(222,213,12)" rx="2" ry="2" />
<text  x="116.78" y="527.5" ></text>
</g>
<g >
<title>std::bitset&lt;32ul&gt;::reference::operator= (2 samples, 0.01%)</title><rect x="1141.1" y="597" width="0.2" height="15.0" fill="rgb(218,78,48)" rx="2" ry="2" />
<text  x="1144.14" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::~new_allocator (10 samples, 0.05%)</title><rect x="296.2" y="501" width="0.6" height="15.0" fill="rgb(237,135,28)" rx="2" ry="2" />
<text  x="299.22" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (4 samples, 0.02%)</title><rect x="1114.0" y="549" width="0.2" height="15.0" fill="rgb(235,110,35)" rx="2" ry="2" />
<text  x="1117.00" y="559.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (264 samples, 1.19%)</title><rect x="711.5" y="437" width="14.0" height="15.0" fill="rgb(210,173,1)" rx="2" ry="2" />
<text  x="714.50" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (301 samples, 1.36%)</title><rect x="745.6" y="501" width="16.0" height="15.0" fill="rgb(227,205,22)" rx="2" ry="2" />
<text  x="748.56" y="511.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (2 samples, 0.01%)</title><rect x="94.0" y="437" width="0.1" height="15.0" fill="rgb(246,181,9)" rx="2" ry="2" />
<text  x="96.98" y="447.5" ></text>
</g>
<g >
<title>std::__addressof&lt;RPG::EventCommand&gt; (14 samples, 0.06%)</title><rect x="784.9" y="549" width="0.8" height="15.0" fill="rgb(218,141,23)" rx="2" ry="2" />
<text  x="787.94" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.08%)</title><rect x="114.0" y="453" width="1.0" height="15.0" fill="rgb(226,52,13)" rx="2" ry="2" />
<text  x="116.99" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (17 samples, 0.08%)</title><rect x="81.9" y="837" width="0.9" height="15.0" fill="rgb(236,189,24)" rx="2" ry="2" />
<text  x="84.90" y="847.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;RPG::EventCommand const*, std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt; &gt;, RPG::EventCommand*&gt; (12,492 samples, 56.34%)</title><rect x="121.0" y="581" width="664.8" height="15.0" fill="rgb(242,162,8)" rx="2" ry="2" />
<text  x="124.02" y="591.5" >std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;RPG::EventCommand const*, std::vector&lt;..</text>
</g>
<g >
<title>__handle_mm_fault (9 samples, 0.04%)</title><rect x="536.9" y="309" width="0.5" height="15.0" fill="rgb(238,139,45)" rx="2" ry="2" />
<text  x="539.93" y="319.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandKeyInputProc (7 samples, 0.03%)</title><rect x="1140.9" y="613" width="0.4" height="15.0" fill="rgb(213,141,18)" rx="2" ry="2" />
<text  x="1143.93" y="623.5" ></text>
</g>
<g >
<title>Scene::GetRequestedScene (6 samples, 0.03%)</title><rect x="1162.8" y="629" width="0.3" height="15.0" fill="rgb(250,129,41)" rx="2" ry="2" />
<text  x="1165.75" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (66 samples, 0.30%)</title><rect x="1120.9" y="581" width="3.5" height="15.0" fill="rgb(241,177,49)" rx="2" ry="2" />
<text  x="1123.92" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_key (2 samples, 0.01%)</title><rect x="1144.1" y="277" width="0.1" height="15.0" fill="rgb(220,137,22)" rx="2" ry="2" />
<text  x="1147.07" y="287.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (25 samples, 0.11%)</title><rect x="1143.7" y="453" width="1.3" height="15.0" fill="rgb(243,169,33)" rx="2" ry="2" />
<text  x="1146.70" y="463.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (12 samples, 0.05%)</title><rect x="824.5" y="437" width="0.7" height="15.0" fill="rgb(234,41,44)" rx="2" ry="2" />
<text  x="827.54" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (4,503 samples, 20.31%)</title><rect x="305.0" y="485" width="239.7" height="15.0" fill="rgb(205,213,41)" rx="2" ry="2" />
<text  x="308.00" y="495.5" >std::_Vector_base&lt;int, std::all..</text>
</g>
<g >
<title>handle_mm_fault (7 samples, 0.03%)</title><rect x="119.1" y="437" width="0.4" height="15.0" fill="rgb(254,180,37)" rx="2" ry="2" />
<text  x="122.10" y="447.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (2 samples, 0.01%)</title><rect x="1171.3" y="581" width="0.1" height="15.0" fill="rgb(215,121,33)" rx="2" ry="2" />
<text  x="1174.27" y="591.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::_M_deallocate (4 samples, 0.02%)</title><rect x="113.1" y="565" width="0.3" height="15.0" fill="rgb(205,65,7)" rx="2" ry="2" />
<text  x="116.14" y="575.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (11 samples, 0.05%)</title><rect x="93.4" y="389" width="0.6" height="15.0" fill="rgb(240,215,30)" rx="2" ry="2" />
<text  x="96.40" y="399.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (18 samples, 0.08%)</title><rect x="93.3" y="757" width="0.9" height="15.0" fill="rgb(220,172,40)" rx="2" ry="2" />
<text  x="96.29" y="767.5" ></text>
</g>
<g >
<title>do_page_fault (8 samples, 0.04%)</title><rect x="119.0" y="469" width="0.5" height="15.0" fill="rgb(226,132,24)" rx="2" ry="2" />
<text  x="122.05" y="479.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*&gt; (12 samples, 0.05%)</title><rect x="65.7" y="837" width="0.7" height="15.0" fill="rgb(205,177,20)" rx="2" ry="2" />
<text  x="68.72" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (3,488 samples, 15.73%)</title><rect x="866.6" y="389" width="185.6" height="15.0" fill="rgb(226,8,9)" rx="2" ry="2" />
<text  x="869.58" y="399.5" >__gnu_cxx::new_allocator..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (3 samples, 0.01%)</title><rect x="51.4" y="837" width="0.2" height="15.0" fill="rgb(234,97,0)" rx="2" ry="2" />
<text  x="54.41" y="847.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (5 samples, 0.02%)</title><rect x="1173.3" y="565" width="0.3" height="15.0" fill="rgb(219,18,3)" rx="2" ry="2" />
<text  x="1176.29" y="575.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandConditionalBranch (527 samples, 2.38%)</title><rect x="1099.0" y="613" width="28.1" height="15.0" fill="rgb(250,163,9)" rx="2" ry="2" />
<text  x="1102.05" y="623.5" >G..</text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (18 samples, 0.08%)</title><rect x="93.3" y="565" width="0.9" height="15.0" fill="rgb(217,44,25)" rx="2" ry="2" />
<text  x="96.29" y="575.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.01%)</title><rect x="536.3" y="309" width="0.2" height="15.0" fill="rgb(251,48,40)" rx="2" ry="2" />
<text  x="539.35" y="319.5" ></text>
</g>
<g >
<title>FileRequestAsync::Bind (7 samples, 0.03%)</title><rect x="1143.0" y="549" width="0.4" height="15.0" fill="rgb(231,136,50)" rx="2" ry="2" />
<text  x="1146.01" y="559.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.01%)</title><rect x="34.0" y="773" width="0.1" height="15.0" fill="rgb(211,205,47)" rx="2" ry="2" />
<text  x="37.00" y="783.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, int const*, int*&gt; (19 samples, 0.09%)</title><rect x="710.5" y="437" width="1.0" height="15.0" fill="rgb(209,135,11)" rx="2" ry="2" />
<text  x="713.49" y="447.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (3 samples, 0.01%)</title><rect x="1143.5" y="533" width="0.1" height="15.0" fill="rgb(211,92,41)" rx="2" ry="2" />
<text  x="1146.49" y="543.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (3 samples, 0.01%)</title><rect x="94.4" y="773" width="0.1" height="15.0" fill="rgb(205,6,16)" rx="2" ry="2" />
<text  x="97.35" y="783.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (68 samples, 0.31%)</title><rect x="291.2" y="469" width="3.6" height="15.0" fill="rgb(215,150,44)" rx="2" ry="2" />
<text  x="294.16" y="479.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (11 samples, 0.05%)</title><rect x="93.4" y="421" width="0.6" height="15.0" fill="rgb(205,76,32)" rx="2" ry="2" />
<text  x="96.40" y="431.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (14 samples, 0.06%)</title><rect x="1085.2" y="357" width="0.8" height="15.0" fill="rgb(248,89,6)" rx="2" ry="2" />
<text  x="1088.21" y="367.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (10 samples, 0.05%)</title><rect x="1093.2" y="245" width="0.6" height="15.0" fill="rgb(241,83,5)" rx="2" ry="2" />
<text  x="1096.25" y="255.5" ></text>
</g>
<g >
<title>mmap_region (9 samples, 0.04%)</title><rect x="114.4" y="357" width="0.5" height="15.0" fill="rgb(207,211,36)" rx="2" ry="2" />
<text  x="117.42" y="367.5" ></text>
</g>
<g >
<title>Player::IsRPG2k3 (3 samples, 0.01%)</title><rect x="1132.9" y="581" width="0.2" height="15.0" fill="rgb(248,38,32)" rx="2" ry="2" />
<text  x="1135.95" y="591.5" ></text>
</g>
<g >
<title>Input::Update (15 samples, 0.07%)</title><rect x="111.6" y="741" width="0.8" height="15.0" fill="rgb(220,188,3)" rx="2" ry="2" />
<text  x="114.60" y="751.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (34 samples, 0.15%)</title><rect x="1174.1" y="597" width="1.8" height="15.0" fill="rgb(252,39,33)" rx="2" ry="2" />
<text  x="1177.09" y="607.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (2 samples, 0.01%)</title><rect x="1176.0" y="437" width="0.1" height="15.0" fill="rgb(222,22,45)" rx="2" ry="2" />
<text  x="1179.00" y="447.5" ></text>
</g>
<g >
<title>unmap_single_vma (5 samples, 0.02%)</title><rect x="1093.8" y="293" width="0.2" height="15.0" fill="rgb(210,0,49)" rx="2" ry="2" />
<text  x="1096.78" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::end (4 samples, 0.02%)</title><rect x="92.9" y="373" width="0.2" height="15.0" fill="rgb(218,189,24)" rx="2" ry="2" />
<text  x="95.92" y="383.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (18 samples, 0.08%)</title><rect x="93.3" y="821" width="0.9" height="15.0" fill="rgb(217,184,8)" rx="2" ry="2" />
<text  x="96.29" y="831.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.04%)</title><rect x="106.3" y="837" width="0.5" height="15.0" fill="rgb(225,74,42)" rx="2" ry="2" />
<text  x="109.33" y="847.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;RPG::SaveEventExecFrame*, RPG::SaveEventExecFrame*, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; (6 samples, 0.03%)</title><rect x="786.2" y="581" width="0.3" height="15.0" fill="rgb(232,38,21)" rx="2" ry="2" />
<text  x="789.16" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (21 samples, 0.09%)</title><rect x="1157.6" y="597" width="1.2" height="15.0" fill="rgb(227,85,27)" rx="2" ry="2" />
<text  x="1160.64" y="607.5" ></text>
</g>
<g >
<title>RPG::EventCommand::EventCommand (5 samples, 0.02%)</title><rect x="36.2" y="837" width="0.3" height="15.0" fill="rgb(251,179,50)" rx="2" ry="2" />
<text  x="39.24" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::_M_realloc_insert&lt;RPG::SaveEventExecFrame&gt; (15 samples, 0.07%)</title><rect x="786.0" y="597" width="0.7" height="15.0" fill="rgb(219,139,46)" rx="2" ry="2" />
<text  x="788.95" y="607.5" ></text>
</g>
<g >
<title>Bitmap::GetRect (2 samples, 0.01%)</title><rect x="1144.5" y="341" width="0.1" height="15.0" fill="rgb(240,86,49)" rx="2" ry="2" />
<text  x="1147.50" y="351.5" ></text>
</g>
<g >
<title>x86_pmu_enable (25 samples, 0.11%)</title><rect x="1174.4" y="485" width="1.3" height="15.0" fill="rgb(254,59,11)" rx="2" ry="2" />
<text  x="1177.41" y="495.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (2 samples, 0.01%)</title><rect x="93.3" y="421" width="0.1" height="15.0" fill="rgb(228,203,30)" rx="2" ry="2" />
<text  x="96.29" y="431.5" ></text>
</g>
<g >
<title>get_unmapped_area (7 samples, 0.03%)</title><rect x="114.0" y="357" width="0.4" height="15.0" fill="rgb(235,48,25)" rx="2" ry="2" />
<text  x="117.05" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator= (12,630 samples, 56.96%)</title><rect x="113.7" y="629" width="672.1" height="15.0" fill="rgb(244,85,47)" rx="2" ry="2" />
<text  x="116.67" y="639.5" >std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator=</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (3 samples, 0.01%)</title><rect x="1100.9" y="565" width="0.2" height="15.0" fill="rgb(209,56,2)" rx="2" ry="2" />
<text  x="1103.91" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (11 samples, 0.05%)</title><rect x="1134.3" y="581" width="0.6" height="15.0" fill="rgb(216,199,15)" rx="2" ry="2" />
<text  x="1137.28" y="591.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (18 samples, 0.08%)</title><rect x="93.3" y="725" width="0.9" height="15.0" fill="rgb(246,177,27)" rx="2" ry="2" />
<text  x="96.29" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (12 samples, 0.05%)</title><rect x="803.2" y="597" width="0.6" height="15.0" fill="rgb(231,150,11)" rx="2" ry="2" />
<text  x="806.20" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (2 samples, 0.01%)</title><rect x="93.3" y="389" width="0.1" height="15.0" fill="rgb(249,179,33)" rx="2" ry="2" />
<text  x="96.29" y="399.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipTo (410 samples, 1.85%)</title><rect x="1102.6" y="597" width="21.8" height="15.0" fill="rgb(215,98,25)" rx="2" ry="2" />
<text  x="1105.61" y="607.5" >G..</text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (63 samples, 0.28%)</title><rect x="1153.1" y="613" width="3.3" height="15.0" fill="rgb(206,119,1)" rx="2" ry="2" />
<text  x="1156.07" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::EventCommand const*, std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt; &gt;::operator* (3 samples, 0.01%)</title><rect x="81.6" y="837" width="0.2" height="15.0" fill="rgb(253,130,30)" rx="2" ry="2" />
<text  x="84.63" y="847.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (18 samples, 0.08%)</title><rect x="93.3" y="533" width="0.9" height="15.0" fill="rgb(243,125,25)" rx="2" ry="2" />
<text  x="96.29" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (58 samples, 0.26%)</title><rect x="827.7" y="453" width="3.1" height="15.0" fill="rgb(210,184,44)" rx="2" ry="2" />
<text  x="830.68" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::emplace_back&lt;RPG::SaveEventExecFrame&gt; (15 samples, 0.07%)</title><rect x="786.0" y="613" width="0.7" height="15.0" fill="rgb(213,180,31)" rx="2" ry="2" />
<text  x="788.95" y="623.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (2 samples, 0.01%)</title><rect x="1144.1" y="325" width="0.1" height="15.0" fill="rgb(248,218,10)" rx="2" ry="2" />
<text  x="1147.07" y="335.5" ></text>
</g>
<g >
<title>RPG::EventCommand::~EventCommand (18 samples, 0.08%)</title><rect x="36.5" y="837" width="1.0" height="15.0" fill="rgb(235,5,40)" rx="2" ry="2" />
<text  x="39.50" y="847.5" ></text>
</g>
<g >
<title>page_evictable (3 samples, 0.01%)</title><rect x="194.9" y="373" width="0.2" height="15.0" fill="rgb(239,145,53)" rx="2" ry="2" />
<text  x="197.94" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::vector (2 samples, 0.01%)</title><rect x="786.6" y="533" width="0.1" height="15.0" fill="rgb(216,19,53)" rx="2" ry="2" />
<text  x="789.59" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (12 samples, 0.05%)</title><rect x="1154.2" y="597" width="0.6" height="15.0" fill="rgb(247,44,12)" rx="2" ry="2" />
<text  x="1157.18" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (6 samples, 0.03%)</title><rect x="1126.5" y="597" width="0.3" height="15.0" fill="rgb(247,176,14)" rx="2" ry="2" />
<text  x="1129.51" y="607.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (8 samples, 0.04%)</title><rect x="92.8" y="757" width="0.4" height="15.0" fill="rgb(241,62,31)" rx="2" ry="2" />
<text  x="95.76" y="767.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (72 samples, 0.32%)</title><rect x="29.9" y="645" width="3.8" height="15.0" fill="rgb(229,216,5)" rx="2" ry="2" />
<text  x="32.85" y="655.5" ></text>
</g>
<g >
<title>operator new@plt (8 samples, 0.04%)</title><rect x="543.4" y="421" width="0.4" height="15.0" fill="rgb(253,125,38)" rx="2" ry="2" />
<text  x="546.37" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;RPG::EventCommand const*, std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt; &gt; (4 samples, 0.02%)</title><rect x="82.9" y="837" width="0.2" height="15.0" fill="rgb(250,116,34)" rx="2" ry="2" />
<text  x="85.91" y="847.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (13 samples, 0.06%)</title><rect x="1175.9" y="709" width="0.7" height="15.0" fill="rgb(206,46,21)" rx="2" ry="2" />
<text  x="1178.95" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (21 samples, 0.09%)</title><rect x="1125.4" y="597" width="1.1" height="15.0" fill="rgb(219,213,52)" rx="2" ry="2" />
<text  x="1128.39" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt;::end (6 samples, 0.03%)</title><rect x="1162.1" y="629" width="0.3" height="15.0" fill="rgb(230,118,50)" rx="2" ry="2" />
<text  x="1165.11" y="639.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (6 samples, 0.03%)</title><rect x="528.0" y="165" width="0.4" height="15.0" fill="rgb(218,179,47)" rx="2" ry="2" />
<text  x="531.05" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (31 samples, 0.14%)</title><rect x="1092.4" y="357" width="1.6" height="15.0" fill="rgb(242,103,28)" rx="2" ry="2" />
<text  x="1095.39" y="367.5" ></text>
</g>
<g >
<title>schedule (92 samples, 0.41%)</title><rect x="28.9" y="741" width="4.9" height="15.0" fill="rgb(215,172,53)" rx="2" ry="2" />
<text  x="31.95" y="751.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_destroy (2 samples, 0.01%)</title><rect x="1143.5" y="501" width="0.1" height="15.0" fill="rgb(217,211,47)" rx="2" ry="2" />
<text  x="1146.54" y="511.5" ></text>
</g>
<g >
<title>__GI_madvise (2 samples, 0.01%)</title><rect x="1042.3" y="277" width="0.1" height="15.0" fill="rgb(210,100,47)" rx="2" ry="2" />
<text  x="1045.31" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;RPG::EventCommand const*, std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt; &gt; (187 samples, 0.84%)</title><rect x="135.4" y="549" width="9.9" height="15.0" fill="rgb(205,53,44)" rx="2" ry="2" />
<text  x="138.39" y="559.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.01%)</title><rect x="536.3" y="245" width="0.2" height="15.0" fill="rgb(248,84,8)" rx="2" ry="2" />
<text  x="539.35" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="1172.8" y="517" width="0.1" height="15.0" fill="rgb(245,119,5)" rx="2" ry="2" />
<text  x="1175.76" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::allocate (3 samples, 0.01%)</title><rect x="786.0" y="565" width="0.2" height="15.0" fill="rgb(217,62,1)" rx="2" ry="2" />
<text  x="789.00" y="575.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (2 samples, 0.01%)</title><rect x="1144.5" y="357" width="0.1" height="15.0" fill="rgb(211,136,38)" rx="2" ry="2" />
<text  x="1147.50" y="367.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (2 samples, 0.01%)</title><rect x="1173.8" y="613" width="0.1" height="15.0" fill="rgb(225,78,45)" rx="2" ry="2" />
<text  x="1176.82" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;Input::UiSource::Update()::{lambda(int)#1}&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (3 samples, 0.01%)</title><rect x="111.7" y="629" width="0.2" height="15.0" fill="rgb(210,151,4)" rx="2" ry="2" />
<text  x="114.70" y="639.5" ></text>
</g>
<g >
<title>free_unref_page_commit (2 samples, 0.01%)</title><rect x="1086.5" y="165" width="0.1" height="15.0" fill="rgb(247,30,43)" rx="2" ry="2" />
<text  x="1089.49" y="175.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (71 samples, 0.32%)</title><rect x="1055.2" y="405" width="3.8" height="15.0" fill="rgb(226,208,45)" rx="2" ry="2" />
<text  x="1058.25" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::max_size (9 samples, 0.04%)</title><rect x="331.9" y="421" width="0.5" height="15.0" fill="rgb(219,64,51)" rx="2" ry="2" />
<text  x="334.88" y="431.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (18 samples, 0.08%)</title><rect x="93.3" y="805" width="0.9" height="15.0" fill="rgb(231,105,30)" rx="2" ry="2" />
<text  x="96.29" y="815.5" ></text>
</g>
<g >
<title>pthread_getspecific@plt (6 samples, 0.03%)</title><rect x="530.1" y="341" width="0.3" height="15.0" fill="rgb(246,118,31)" rx="2" ry="2" />
<text  x="533.12" y="351.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="1173.8" y="629" width="0.1" height="15.0" fill="rgb(253,169,31)" rx="2" ry="2" />
<text  x="1176.82" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (23 samples, 0.10%)</title><rect x="1150.4" y="581" width="1.2" height="15.0" fill="rgb(229,75,12)" rx="2" ry="2" />
<text  x="1153.35" y="591.5" ></text>
</g>
<g >
<title>__wake_up_common (6 samples, 0.03%)</title><rect x="34.5" y="725" width="0.3" height="15.0" fill="rgb(211,218,24)" rx="2" ry="2" />
<text  x="37.48" y="735.5" ></text>
</g>
<g >
<title>Player::MainLoop (20,033 samples, 90.35%)</title><rect x="110.6" y="789" width="1066.1" height="15.0" fill="rgb(246,98,27)" rx="2" ry="2" />
<text  x="113.59" y="799.5" >Player::MainLoop</text>
</g>
<g >
<title>Game_Map::Update (3 samples, 0.01%)</title><rect x="94.4" y="805" width="0.1" height="15.0" fill="rgb(205,34,43)" rx="2" ry="2" />
<text  x="97.35" y="815.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Tilemap*, std::default_delete&lt;Tilemap&gt; &gt;::_M_head (2 samples, 0.01%)</title><rect x="57.3" y="837" width="0.1" height="15.0" fill="rgb(251,120,17)" rx="2" ry="2" />
<text  x="60.26" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (7 samples, 0.03%)</title><rect x="792.2" y="613" width="0.4" height="15.0" fill="rgb(241,207,14)" rx="2" ry="2" />
<text  x="795.23" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;short, std::allocator&lt;short&gt; &gt;::size (2 samples, 0.01%)</title><rect x="1145.6" y="581" width="0.1" height="15.0" fill="rgb(219,156,50)" rx="2" ry="2" />
<text  x="1148.56" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (9 samples, 0.04%)</title><rect x="1158.3" y="581" width="0.5" height="15.0" fill="rgb(242,34,26)" rx="2" ry="2" />
<text  x="1161.28" y="591.5" ></text>
</g>
<g >
<title>operator delete@plt (3 samples, 0.01%)</title><rect x="1052.1" y="373" width="0.1" height="15.0" fill="rgb(242,146,39)" rx="2" ry="2" />
<text  x="1055.05" y="383.5" ></text>
</g>
<g >
<title>Game_Picture::Show (18 samples, 0.08%)</title><rect x="93.3" y="741" width="0.9" height="15.0" fill="rgb(226,65,7)" rx="2" ry="2" />
<text  x="96.29" y="751.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.01%)</title><rect x="195.2" y="389" width="0.1" height="15.0" fill="rgb(220,92,14)" rx="2" ry="2" />
<text  x="198.15" y="399.5" ></text>
</g>
<g >
<title>alloc_pages_vma (3 samples, 0.01%)</title><rect x="537.0" y="261" width="0.2" height="15.0" fill="rgb(235,195,12)" rx="2" ry="2" />
<text  x="540.04" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (2 samples, 0.01%)</title><rect x="1171.4" y="629" width="0.1" height="15.0" fill="rgb(228,155,29)" rx="2" ry="2" />
<text  x="1174.37" y="639.5" ></text>
</g>
<g >
<title>sync_regs (3 samples, 0.01%)</title><rect x="781.1" y="517" width="0.2" height="15.0" fill="rgb(250,15,16)" rx="2" ry="2" />
<text  x="784.11" y="527.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (3 samples, 0.01%)</title><rect x="94.4" y="821" width="0.1" height="15.0" fill="rgb(210,188,45)" rx="2" ry="2" />
<text  x="97.35" y="831.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (5 samples, 0.02%)</title><rect x="1173.3" y="581" width="0.3" height="15.0" fill="rgb(219,98,43)" rx="2" ry="2" />
<text  x="1176.29" y="591.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (8 samples, 0.04%)</title><rect x="92.8" y="709" width="0.4" height="15.0" fill="rgb(254,176,30)" rx="2" ry="2" />
<text  x="95.76" y="719.5" ></text>
</g>
<g >
<title>SdlMixerAudio::SE_Play (3 samples, 0.01%)</title><rect x="94.4" y="517" width="0.1" height="15.0" fill="rgb(232,162,13)" rx="2" ry="2" />
<text  x="97.35" y="527.5" ></text>
</g>
<g >
<title>handle_irq (2 samples, 0.01%)</title><rect x="530.4" y="309" width="0.1" height="15.0" fill="rgb(211,131,48)" rx="2" ry="2" />
<text  x="533.44" y="319.5" ></text>
</g>
<g >
<title>page_fault (134 samples, 0.60%)</title><rect x="1182.4" y="853" width="7.1" height="15.0" fill="rgb(238,1,6)" rx="2" ry="2" />
<text  x="1185.39" y="863.5" ></text>
</g>
<g >
<title>__x64_sys_write (9 samples, 0.04%)</title><rect x="34.5" y="821" width="0.5" height="15.0" fill="rgb(228,75,46)" rx="2" ry="2" />
<text  x="37.48" y="831.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (3 samples, 0.01%)</title><rect x="1041.7" y="133" width="0.2" height="15.0" fill="rgb(206,68,42)" rx="2" ry="2" />
<text  x="1044.73" y="143.5" ></text>
</g>
<g >
<title>XFlush (9 samples, 0.04%)</title><rect x="1173.2" y="645" width="0.5" height="15.0" fill="rgb(227,210,48)" rx="2" ry="2" />
<text  x="1176.24" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="1161.6" y="629" width="0.1" height="15.0" fill="rgb(216,197,0)" rx="2" ry="2" />
<text  x="1164.58" y="639.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (2 samples, 0.01%)</title><rect x="94.0" y="405" width="0.1" height="15.0" fill="rgb(227,169,17)" rx="2" ry="2" />
<text  x="96.98" y="415.5" ></text>
</g>
<g >
<title>arch_get_unmapped_area_topdown (7 samples, 0.03%)</title><rect x="114.0" y="341" width="0.4" height="15.0" fill="rgb(228,25,29)" rx="2" ry="2" />
<text  x="117.05" y="351.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (2 samples, 0.01%)</title><rect x="685.0" y="261" width="0.2" height="15.0" fill="rgb(246,206,24)" rx="2" ry="2" />
<text  x="688.05" y="271.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.01%)</title><rect x="120.5" y="389" width="0.1" height="15.0" fill="rgb(230,117,52)" rx="2" ry="2" />
<text  x="123.54" y="399.5" ></text>
</g>
<g >
<title>all (22,172 samples, 100%)</title><rect x="10.0" y="885" width="1180.0" height="15.0" fill="rgb(218,174,40)" rx="2" ry="2" />
<text  x="13.00" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (11 samples, 0.05%)</title><rect x="1147.8" y="581" width="0.6" height="15.0" fill="rgb(253,144,27)" rx="2" ry="2" />
<text  x="1150.85" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="94.6" y="373" width="0.2" height="15.0" fill="rgb(222,57,2)" rx="2" ry="2" />
<text  x="97.57" y="383.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (2 samples, 0.01%)</title><rect x="530.4" y="245" width="0.1" height="15.0" fill="rgb(239,79,19)" rx="2" ry="2" />
<text  x="533.44" y="255.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (24 samples, 0.11%)</title><rect x="1174.4" y="453" width="1.3" height="15.0" fill="rgb(238,72,47)" rx="2" ry="2" />
<text  x="1177.41" y="463.5" ></text>
</g>
<g >
<title>operator delete (3,464 samples, 15.62%)</title><rect x="867.7" y="373" width="184.4" height="15.0" fill="rgb(209,220,47)" rx="2" ry="2" />
<text  x="870.70" y="383.5" >operator delete</text>
</g>
<g >
<title>[anon] (318 samples, 1.43%)</title><rect x="73.6" y="853" width="16.9" height="15.0" fill="rgb(216,138,19)" rx="2" ry="2" />
<text  x="76.60" y="863.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (18 samples, 0.08%)</title><rect x="93.3" y="597" width="0.9" height="15.0" fill="rgb(224,122,14)" rx="2" ry="2" />
<text  x="96.29" y="607.5" ></text>
</g>
<g >
<title>Game_Map::Refresh (27 samples, 0.12%)</title><rect x="1161.0" y="645" width="1.4" height="15.0" fill="rgb(228,112,6)" rx="2" ry="2" />
<text  x="1163.99" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (28 samples, 0.13%)</title><rect x="708.1" y="405" width="1.5" height="15.0" fill="rgb(216,175,53)" rx="2" ry="2" />
<text  x="711.14" y="415.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;RPG::EventCommand const*, std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt; &gt;, RPG::EventCommand*, RPG::EventCommand&gt; (12,492 samples, 56.34%)</title><rect x="121.0" y="597" width="664.8" height="15.0" fill="rgb(238,126,54)" rx="2" ry="2" />
<text  x="124.02" y="607.5" >std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;RPG::EventCommand const*, std::vec..</text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (4 samples, 0.02%)</title><rect x="117.8" y="373" width="0.2" height="15.0" fill="rgb(247,198,18)" rx="2" ry="2" />
<text  x="120.77" y="383.5" ></text>
</g>
<g >
<title>flush_tlb_func_common.constprop.9 (11 samples, 0.05%)</title><rect x="1092.7" y="229" width="0.5" height="15.0" fill="rgb(209,90,6)" rx="2" ry="2" />
<text  x="1095.66" y="239.5" ></text>
</g>
<g >
<title>page_remove_rmap (10 samples, 0.05%)</title><rect x="1091.7" y="213" width="0.5" height="15.0" fill="rgb(223,44,26)" rx="2" ry="2" />
<text  x="1094.70" y="223.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (5 samples, 0.02%)</title><rect x="94.5" y="629" width="0.3" height="15.0" fill="rgb(244,184,48)" rx="2" ry="2" />
<text  x="97.51" y="639.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;true&gt;::__destroy&lt;int*&gt; (8 samples, 0.04%)</title><rect x="106.8" y="837" width="0.4" height="15.0" fill="rgb(219,104,9)" rx="2" ry="2" />
<text  x="109.81" y="847.5" ></text>
</g>
<g >
<title>Graphics::RemoveDrawable (2 samples, 0.01%)</title><rect x="94.1" y="437" width="0.1" height="15.0" fill="rgb(222,217,34)" rx="2" ry="2" />
<text  x="97.14" y="447.5" ></text>
</g>
<g >
<title>do_wp_page (9 samples, 0.04%)</title><rect x="120.4" y="421" width="0.5" height="15.0" fill="rgb(238,217,29)" rx="2" ry="2" />
<text  x="123.43" y="431.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.01%)</title><rect x="685.0" y="357" width="0.2" height="15.0" fill="rgb(223,26,45)" rx="2" ry="2" />
<text  x="688.05" y="367.5" ></text>
</g>
<g >
<title>std::replace&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (2 samples, 0.01%)</title><rect x="1142.5" y="533" width="0.1" height="15.0" fill="rgb(218,165,7)" rx="2" ry="2" />
<text  x="1145.53" y="543.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (24 samples, 0.11%)</title><rect x="1143.8" y="421" width="1.2" height="15.0" fill="rgb(206,37,15)" rx="2" ry="2" />
<text  x="1146.75" y="431.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (3 samples, 0.01%)</title><rect x="1176.5" y="677" width="0.1" height="15.0" fill="rgb(216,31,20)" rx="2" ry="2" />
<text  x="1179.48" y="687.5" ></text>
</g>
<g >
<title>__do_page_fault (9 samples, 0.04%)</title><rect x="120.4" y="469" width="0.5" height="15.0" fill="rgb(243,191,28)" rx="2" ry="2" />
<text  x="123.43" y="479.5" ></text>
</g>
<g >
<title>sock_recvmsg (3 samples, 0.01%)</title><rect x="1173.4" y="421" width="0.2" height="15.0" fill="rgb(206,128,20)" rx="2" ry="2" />
<text  x="1176.40" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (17 samples, 0.08%)</title><rect x="1101.7" y="581" width="0.9" height="15.0" fill="rgb(236,199,6)" rx="2" ry="2" />
<text  x="1104.71" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="220.3" y="437" width="0.2" height="15.0" fill="rgb(233,184,15)" rx="2" ry="2" />
<text  x="223.33" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (4 samples, 0.02%)</title><rect x="109.1" y="837" width="0.3" height="15.0" fill="rgb(239,89,32)" rx="2" ry="2" />
<text  x="112.15" y="847.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;true&gt;::__destroy&lt;int*&gt; (17 samples, 0.08%)</title><rect x="843.7" y="405" width="0.9" height="15.0" fill="rgb(232,21,52)" rx="2" ry="2" />
<text  x="846.70" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::~new_allocator (22 samples, 0.10%)</title><rect x="1057.9" y="389" width="1.1" height="15.0" fill="rgb(215,105,4)" rx="2" ry="2" />
<text  x="1060.85" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (2 samples, 0.01%)</title><rect x="1142.4" y="517" width="0.1" height="15.0" fill="rgb(228,151,10)" rx="2" ry="2" />
<text  x="1145.42" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (11 samples, 0.05%)</title><rect x="864.0" y="405" width="0.6" height="15.0" fill="rgb(245,178,17)" rx="2" ry="2" />
<text  x="867.03" y="415.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (2,920 samples, 13.17%)</title><rect x="570.4" y="485" width="155.4" height="15.0" fill="rgb(254,224,31)" rx="2" ry="2" />
<text  x="573.41" y="495.5" >std::uninitialized_..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.02%)</title><rect x="1173.3" y="501" width="0.3" height="15.0" fill="rgb(224,23,18)" rx="2" ry="2" />
<text  x="1176.29" y="511.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (8 samples, 0.04%)</title><rect x="92.8" y="789" width="0.4" height="15.0" fill="rgb(206,145,18)" rx="2" ry="2" />
<text  x="95.76" y="799.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (3 samples, 0.01%)</title><rect x="798.0" y="613" width="0.1" height="15.0" fill="rgb(227,224,43)" rx="2" ry="2" />
<text  x="800.98" y="623.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (45 samples, 0.20%)</title><rect x="192.9" y="437" width="2.4" height="15.0" fill="rgb(230,128,53)" rx="2" ry="2" />
<text  x="195.86" y="447.5" ></text>
</g>
<g >
<title>___sys_recvmsg (2 samples, 0.01%)</title><rect x="1176.0" y="469" width="0.1" height="15.0" fill="rgb(238,175,46)" rx="2" ry="2" />
<text  x="1179.00" y="479.5" ></text>
</g>
<g >
<title>Cache::Picture (5 samples, 0.02%)</title><rect x="94.5" y="469" width="0.3" height="15.0" fill="rgb(246,89,6)" rx="2" ry="2" />
<text  x="97.51" y="479.5" ></text>
</g>
<g >
<title>unmap_region (10 samples, 0.05%)</title><rect x="1041.7" y="181" width="0.6" height="15.0" fill="rgb(249,162,41)" rx="2" ry="2" />
<text  x="1044.73" y="191.5" ></text>
</g>
<g >
<title>__fdget_pos (2 samples, 0.01%)</title><rect x="34.0" y="789" width="0.1" height="15.0" fill="rgb(211,125,7)" rx="2" ry="2" />
<text  x="37.00" y="799.5" ></text>
</g>
<g >
<title>std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;::pair (2 samples, 0.01%)</title><rect x="1143.2" y="469" width="0.1" height="15.0" fill="rgb(254,54,37)" rx="2" ry="2" />
<text  x="1146.22" y="479.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.01%)</title><rect x="120.9" y="501" width="0.1" height="15.0" fill="rgb(214,80,41)" rx="2" ry="2" />
<text  x="123.91" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt;::construct&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="1143.2" y="485" width="0.1" height="15.0" fill="rgb(233,96,14)" rx="2" ry="2" />
<text  x="1146.22" y="495.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (18 samples, 0.08%)</title><rect x="93.3" y="693" width="0.9" height="15.0" fill="rgb(226,228,45)" rx="2" ry="2" />
<text  x="96.29" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (34 samples, 0.15%)</title><rect x="1174.1" y="629" width="1.8" height="15.0" fill="rgb(222,150,11)" rx="2" ry="2" />
<text  x="1177.09" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::EventCommand const*, std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt; &gt;::operator++ (113 samples, 0.51%)</title><rect x="129.4" y="549" width="6.0" height="15.0" fill="rgb(248,22,0)" rx="2" ry="2" />
<text  x="132.37" y="559.5" ></text>
</g>
<g >
<title>__split_vma (2 samples, 0.01%)</title><rect x="1086.2" y="277" width="0.1" height="15.0" fill="rgb(213,168,23)" rx="2" ry="2" />
<text  x="1089.17" y="287.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (8 samples, 0.04%)</title><rect x="92.8" y="661" width="0.4" height="15.0" fill="rgb(243,55,39)" rx="2" ry="2" />
<text  x="95.76" y="671.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (3 samples, 0.01%)</title><rect x="94.4" y="677" width="0.1" height="15.0" fill="rgb(226,41,40)" rx="2" ry="2" />
<text  x="97.35" y="687.5" ></text>
</g>
<g >
<title>operator new (3,965 samples, 17.88%)</title><rect x="332.4" y="421" width="211.0" height="15.0" fill="rgb(238,199,35)" rx="2" ry="2" />
<text  x="335.36" y="431.5" >operator new</text>
</g>
<g >
<title>Game_Variables_Class::Set (76 samples, 0.34%)</title><rect x="1131.5" y="597" width="4.0" height="15.0" fill="rgb(209,109,50)" rx="2" ry="2" />
<text  x="1134.46" y="607.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (2 samples, 0.01%)</title><rect x="1170.5" y="661" width="0.1" height="15.0" fill="rgb(241,69,3)" rx="2" ry="2" />
<text  x="1173.52" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (2 samples, 0.01%)</title><rect x="1115.1" y="533" width="0.1" height="15.0" fill="rgb(216,228,32)" rx="2" ry="2" />
<text  x="1118.12" y="543.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (4 samples, 0.02%)</title><rect x="1175.9" y="597" width="0.3" height="15.0" fill="rgb(253,49,27)" rx="2" ry="2" />
<text  x="1178.95" y="607.5" ></text>
</g>
<g >
<title>AsyncHandler::IsImportantFilePending (2 samples, 0.01%)</title><rect x="1171.7" y="677" width="0.1" height="15.0" fill="rgb(223,176,33)" rx="2" ry="2" />
<text  x="1174.69" y="687.5" ></text>
</g>
<g >
<title>ksys_write (9 samples, 0.04%)</title><rect x="34.5" y="805" width="0.5" height="15.0" fill="rgb(236,119,41)" rx="2" ry="2" />
<text  x="37.48" y="815.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (2 samples, 0.01%)</title><rect x="1171.7" y="645" width="0.1" height="15.0" fill="rgb(231,170,17)" rx="2" ry="2" />
<text  x="1174.69" y="655.5" ></text>
</g>
<g >
<title>free_pages (2 samples, 0.01%)</title><rect x="1086.5" y="229" width="0.1" height="15.0" fill="rgb(215,150,13)" rx="2" ry="2" />
<text  x="1089.49" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::end (2 samples, 0.01%)</title><rect x="1144.0" y="309" width="0.1" height="15.0" fill="rgb(232,198,34)" rx="2" ry="2" />
<text  x="1146.96" y="319.5" ></text>
</g>
<g >
<title>std::__addressof&lt;RPG::EventCommand&gt; (11 samples, 0.05%)</title><rect x="61.4" y="837" width="0.6" height="15.0" fill="rgb(244,170,19)" rx="2" ry="2" />
<text  x="64.41" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (13 samples, 0.06%)</title><rect x="325.7" y="453" width="0.7" height="15.0" fill="rgb(221,179,9)" rx="2" ry="2" />
<text  x="328.70" y="463.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (1,773 samples, 8.00%)</title><rect x="616.1" y="437" width="94.4" height="15.0" fill="rgb(221,9,18)" rx="2" ry="2" />
<text  x="619.13" y="447.5" >std::__copy..</text>
</g>
<g >
<title>AudioSeCache::Decode (3 samples, 0.01%)</title><rect x="94.4" y="501" width="0.1" height="15.0" fill="rgb(222,113,29)" rx="2" ry="2" />
<text  x="97.35" y="511.5" ></text>
</g>
<g >
<title>Graphics::RegisterDrawable (2 samples, 0.01%)</title><rect x="1144.6" y="341" width="0.1" height="15.0" fill="rgb(229,182,2)" rx="2" ry="2" />
<text  x="1147.60" y="351.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (3 samples, 0.01%)</title><rect x="1041.7" y="149" width="0.2" height="15.0" fill="rgb(233,145,29)" rx="2" ry="2" />
<text  x="1044.73" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (3 samples, 0.01%)</title><rect x="1154.7" y="581" width="0.1" height="15.0" fill="rgb(251,225,16)" rx="2" ry="2" />
<text  x="1157.66" y="591.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (135 samples, 0.61%)</title><rect x="1152.9" y="629" width="7.2" height="15.0" fill="rgb(242,197,34)" rx="2" ry="2" />
<text  x="1155.91" y="639.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (2 samples, 0.01%)</title><rect x="530.4" y="261" width="0.1" height="15.0" fill="rgb(237,64,35)" rx="2" ry="2" />
<text  x="533.44" y="271.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (7 samples, 0.03%)</title><rect x="528.0" y="229" width="0.4" height="15.0" fill="rgb(219,169,0)" rx="2" ry="2" />
<text  x="531.05" y="239.5" ></text>
</g>
<g >
<title>SDLAudioP2 (479 samples, 2.16%)</title><rect x="10.0" y="869" width="25.5" height="15.0" fill="rgb(238,24,18)" rx="2" ry="2" />
<text  x="13.00" y="879.5" >S..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::EventCommand const*, std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt; &gt;::operator++ (10 samples, 0.05%)</title><rect x="50.9" y="837" width="0.5" height="15.0" fill="rgb(250,191,23)" rx="2" ry="2" />
<text  x="53.87" y="847.5" ></text>
</g>
<g >
<title>Game_Map::Update (5 samples, 0.02%)</title><rect x="94.5" y="821" width="0.3" height="15.0" fill="rgb(216,107,18)" rx="2" ry="2" />
<text  x="97.51" y="831.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (30 samples, 0.14%)</title><rect x="1154.8" y="597" width="1.6" height="15.0" fill="rgb(210,121,35)" rx="2" ry="2" />
<text  x="1157.82" y="607.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (5 samples, 0.02%)</title><rect x="1089.9" y="165" width="0.3" height="15.0" fill="rgb(252,108,41)" rx="2" ry="2" />
<text  x="1092.89" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (19 samples, 0.09%)</title><rect x="1100.7" y="581" width="1.0" height="15.0" fill="rgb(228,64,10)" rx="2" ry="2" />
<text  x="1103.70" y="591.5" ></text>
</g>
<g >
<title>Game_System::OnSeReady (3 samples, 0.01%)</title><rect x="1142.0" y="437" width="0.2" height="15.0" fill="rgb(250,144,17)" rx="2" ry="2" />
<text  x="1145.00" y="447.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandControlVariables (183 samples, 0.83%)</title><rect x="1127.1" y="613" width="9.7" height="15.0" fill="rgb(243,140,24)" rx="2" ry="2" />
<text  x="1130.09" y="623.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (7 samples, 0.03%)</title><rect x="111.0" y="677" width="0.4" height="15.0" fill="rgb(205,224,9)" rx="2" ry="2" />
<text  x="114.01" y="687.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (10 samples, 0.05%)</title><rect x="243.6" y="517" width="0.6" height="15.0" fill="rgb(227,148,6)" rx="2" ry="2" />
<text  x="246.64" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (5 samples, 0.02%)</title><rect x="69.3" y="837" width="0.3" height="15.0" fill="rgb(231,151,29)" rx="2" ry="2" />
<text  x="72.29" y="847.5" ></text>
</g>
<g >
<title>ImageBMP::ReadBMP (4 samples, 0.02%)</title><rect x="93.8" y="309" width="0.2" height="15.0" fill="rgb(210,153,42)" rx="2" ry="2" />
<text  x="96.77" y="319.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="1172.8" y="581" width="0.1" height="15.0" fill="rgb(206,114,0)" rx="2" ry="2" />
<text  x="1175.76" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (2 samples, 0.01%)</title><rect x="1153.0" y="613" width="0.1" height="15.0" fill="rgb(205,165,41)" rx="2" ry="2" />
<text  x="1155.96" y="623.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (13 samples, 0.06%)</title><rect x="119.5" y="501" width="0.7" height="15.0" fill="rgb(241,167,37)" rx="2" ry="2" />
<text  x="122.53" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::select_on_container_copy_construction (131 samples, 0.59%)</title><rect x="287.8" y="485" width="7.0" height="15.0" fill="rgb(226,173,21)" rx="2" ry="2" />
<text  x="290.81" y="495.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (22 samples, 0.10%)</title><rect x="1092.6" y="293" width="1.2" height="15.0" fill="rgb(250,208,31)" rx="2" ry="2" />
<text  x="1095.61" y="303.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (36 samples, 0.16%)</title><rect x="1087.8" y="133" width="1.9" height="15.0" fill="rgb(241,39,16)" rx="2" ry="2" />
<text  x="1090.76" y="143.5" ></text>
</g>
<g >
<title>clear_page_erms (11 samples, 0.05%)</title><rect x="116.4" y="341" width="0.6" height="15.0" fill="rgb(214,121,37)" rx="2" ry="2" />
<text  x="119.39" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_impl::_M_swap_data (2 samples, 0.01%)</title><rect x="786.6" y="501" width="0.1" height="15.0" fill="rgb(251,47,20)" rx="2" ry="2" />
<text  x="789.59" y="511.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (18 samples, 0.08%)</title><rect x="93.3" y="613" width="0.9" height="15.0" fill="rgb(219,89,32)" rx="2" ry="2" />
<text  x="96.29" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="55.6" y="837" width="0.1" height="15.0" fill="rgb(214,220,30)" rx="2" ry="2" />
<text  x="58.56" y="847.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (2 samples, 0.01%)</title><rect x="1171.3" y="629" width="0.1" height="15.0" fill="rgb(238,111,47)" rx="2" ry="2" />
<text  x="1174.27" y="639.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (8 samples, 0.04%)</title><rect x="92.8" y="597" width="0.4" height="15.0" fill="rgb(246,7,10)" rx="2" ry="2" />
<text  x="95.76" y="607.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (53 samples, 0.24%)</title><rect x="1173.1" y="693" width="2.8" height="15.0" fill="rgb(239,171,51)" rx="2" ry="2" />
<text  x="1176.13" y="703.5" ></text>
</g>
<g >
<title>Game_Interpreter::Clear (14 samples, 0.06%)</title><rect x="112.7" y="661" width="0.8" height="15.0" fill="rgb(221,24,51)" rx="2" ry="2" />
<text  x="115.72" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_M_lower_bound (2 samples, 0.01%)</title><rect x="93.3" y="437" width="0.1" height="15.0" fill="rgb(253,122,45)" rx="2" ry="2" />
<text  x="96.29" y="447.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (24 samples, 0.11%)</title><rect x="1143.8" y="389" width="1.2" height="15.0" fill="rgb(234,148,23)" rx="2" ry="2" />
<text  x="1146.75" y="399.5" ></text>
</g>
<g >
<title>deactivate_task (9 samples, 0.04%)</title><rect x="29.2" y="709" width="0.4" height="15.0" fill="rgb(216,98,29)" rx="2" ry="2" />
<text  x="32.16" y="719.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (5 samples, 0.02%)</title><rect x="94.5" y="501" width="0.3" height="15.0" fill="rgb(244,202,49)" rx="2" ry="2" />
<text  x="97.51" y="511.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (2 samples, 0.01%)</title><rect x="1151.7" y="597" width="0.1" height="15.0" fill="rgb(242,88,49)" rx="2" ry="2" />
<text  x="1154.73" y="607.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (22 samples, 0.10%)</title><rect x="847.8" y="437" width="1.2" height="15.0" fill="rgb(226,225,51)" rx="2" ry="2" />
<text  x="850.79" y="447.5" ></text>
</g>
<g >
<title>std::__addressof&lt;RPG::EventCommand&gt; (63 samples, 0.28%)</title><rect x="1062.8" y="485" width="3.3" height="15.0" fill="rgb(207,176,25)" rx="2" ry="2" />
<text  x="1065.75" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (3 samples, 0.01%)</title><rect x="1176.3" y="517" width="0.2" height="15.0" fill="rgb(215,203,12)" rx="2" ry="2" />
<text  x="1179.32" y="527.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;Input::UiSource::Update()::{lambda(int)#1}&gt; &gt; (3 samples, 0.01%)</title><rect x="111.7" y="661" width="0.2" height="15.0" fill="rgb(254,125,31)" rx="2" ry="2" />
<text  x="114.70" y="671.5" ></text>
</g>
<g >
<title>operator delete (19 samples, 0.09%)</title><rect x="105.3" y="837" width="1.0" height="15.0" fill="rgb(214,15,11)" rx="2" ry="2" />
<text  x="108.32" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (3 samples, 0.01%)</title><rect x="1149.3" y="581" width="0.1" height="15.0" fill="rgb(247,41,1)" rx="2" ry="2" />
<text  x="1152.29" y="591.5" ></text>
</g>
<g >
<title>get_vma_policy.part.39 (2 samples, 0.01%)</title><rect x="192.6" y="421" width="0.1" height="15.0" fill="rgb(208,8,39)" rx="2" ry="2" />
<text  x="195.60" y="431.5" ></text>
</g>
<g >
<title>operator delete (570 samples, 2.57%)</title><rect x="1066.2" y="469" width="30.3" height="15.0" fill="rgb(212,57,5)" rx="2" ry="2" />
<text  x="1069.21" y="479.5" >op..</text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (7 samples, 0.03%)</title><rect x="528.0" y="181" width="0.4" height="15.0" fill="rgb(223,23,16)" rx="2" ry="2" />
<text  x="531.05" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (5 samples, 0.02%)</title><rect x="64.3" y="837" width="0.3" height="15.0" fill="rgb(240,81,12)" rx="2" ry="2" />
<text  x="67.34" y="847.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (27 samples, 0.12%)</title><rect x="1143.6" y="565" width="1.5" height="15.0" fill="rgb(234,35,22)" rx="2" ry="2" />
<text  x="1146.65" y="575.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (16 samples, 0.07%)</title><rect x="1173.2" y="661" width="0.8" height="15.0" fill="rgb(231,149,3)" rx="2" ry="2" />
<text  x="1176.18" y="671.5" ></text>
</g>
<g >
<title>Game_Picture::Erase (5 samples, 0.02%)</title><rect x="1140.7" y="597" width="0.2" height="15.0" fill="rgb(225,42,14)" rx="2" ry="2" />
<text  x="1143.66" y="607.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.01%)</title><rect x="1051.5" y="341" width="0.1" height="15.0" fill="rgb(251,6,3)" rx="2" ry="2" />
<text  x="1054.47" y="351.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (21 samples, 0.09%)</title><rect x="113.8" y="469" width="1.2" height="15.0" fill="rgb(250,104,6)" rx="2" ry="2" />
<text  x="116.83" y="479.5" ></text>
</g>
<g >
<title>RPG::SaveEventExecFrame::SaveEventExecFrame (4 samples, 0.02%)</title><rect x="786.5" y="549" width="0.2" height="15.0" fill="rgb(249,212,45)" rx="2" ry="2" />
<text  x="789.48" y="559.5" ></text>
</g>
<g >
<title>Sprite::Draw (4 samples, 0.02%)</title><rect x="110.6" y="693" width="0.2" height="15.0" fill="rgb(223,137,13)" rx="2" ry="2" />
<text  x="113.59" y="703.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.02%)</title><rect x="113.1" y="517" width="0.3" height="15.0" fill="rgb(230,199,17)" rx="2" ry="2" />
<text  x="116.14" y="527.5" ></text>
</g>
<g >
<title>Sdl2Ui::SetTitle (2 samples, 0.01%)</title><rect x="111.4" y="709" width="0.1" height="15.0" fill="rgb(246,203,5)" rx="2" ry="2" />
<text  x="114.38" y="719.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;int&gt;, int&gt; (3 samples, 0.01%)</title><rect x="1143.0" y="485" width="0.2" height="15.0" fill="rgb(220,192,49)" rx="2" ry="2" />
<text  x="1146.01" y="495.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (*&amp;)(FileRequestResult*, int, int, bool), FileRequestResult*, int&amp;, int&amp;, bool&amp;&gt; (3 samples, 0.01%)</title><rect x="94.4" y="549" width="0.1" height="15.0" fill="rgb(217,64,49)" rx="2" ry="2" />
<text  x="97.35" y="559.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (8 samples, 0.04%)</title><rect x="92.8" y="421" width="0.4" height="15.0" fill="rgb(222,108,49)" rx="2" ry="2" />
<text  x="95.76" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (8 samples, 0.04%)</title><rect x="109.4" y="837" width="0.4" height="15.0" fill="rgb(228,16,19)" rx="2" ry="2" />
<text  x="112.36" y="847.5" ></text>
</g>
<g >
<title>__do_munmap (10 samples, 0.05%)</title><rect x="1041.7" y="197" width="0.6" height="15.0" fill="rgb(253,28,37)" rx="2" ry="2" />
<text  x="1044.73" y="207.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (77 samples, 0.35%)</title><rect x="115.0" y="469" width="4.0" height="15.0" fill="rgb(233,10,53)" rx="2" ry="2" />
<text  x="117.95" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (4 samples, 0.02%)</title><rect x="1102.1" y="565" width="0.2" height="15.0" fill="rgb(234,110,25)" rx="2" ry="2" />
<text  x="1105.08" y="575.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (5 samples, 0.02%)</title><rect x="94.5" y="773" width="0.3" height="15.0" fill="rgb(238,7,3)" rx="2" ry="2" />
<text  x="97.51" y="783.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::_M_allocate (3 samples, 0.01%)</title><rect x="786.0" y="581" width="0.2" height="15.0" fill="rgb(207,99,52)" rx="2" ry="2" />
<text  x="789.00" y="591.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_base (2 samples, 0.01%)</title><rect x="786.6" y="517" width="0.1" height="15.0" fill="rgb(247,177,35)" rx="2" ry="2" />
<text  x="789.59" y="527.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="120.5" y="357" width="0.1" height="15.0" fill="rgb(208,54,7)" rx="2" ry="2" />
<text  x="123.54" y="367.5" ></text>
</g>
<g >
<title>std::min&lt;int&gt; (7 samples, 0.03%)</title><rect x="1133.5" y="581" width="0.4" height="15.0" fill="rgb(225,96,51)" rx="2" ry="2" />
<text  x="1136.53" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_read (9 samples, 0.04%)</title><rect x="34.0" y="821" width="0.5" height="15.0" fill="rgb(225,165,26)" rx="2" ry="2" />
<text  x="37.00" y="831.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.01%)</title><rect x="685.0" y="341" width="0.2" height="15.0" fill="rgb(244,127,40)" rx="2" ry="2" />
<text  x="688.05" y="351.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (2 samples, 0.01%)</title><rect x="1171.3" y="597" width="0.1" height="15.0" fill="rgb(233,83,41)" rx="2" ry="2" />
<text  x="1174.27" y="607.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.01%)</title><rect x="542.4" y="357" width="0.1" height="15.0" fill="rgb(209,25,47)" rx="2" ry="2" />
<text  x="545.42" y="367.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="94.1" y="389" width="0.1" height="15.0" fill="rgb(214,38,54)" rx="2" ry="2" />
<text  x="97.14" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (3 samples, 0.01%)</title><rect x="112.2" y="693" width="0.1" height="15.0" fill="rgb(209,105,35)" rx="2" ry="2" />
<text  x="115.18" y="703.5" ></text>
</g>
<g >
<title>Cache::SystemOrBlack (7 samples, 0.03%)</title><rect x="1172.7" y="661" width="0.3" height="15.0" fill="rgb(233,39,6)" rx="2" ry="2" />
<text  x="1175.65" y="671.5" ></text>
</g>
<g >
<title>sync_regs (7 samples, 0.03%)</title><rect x="115.7" y="437" width="0.4" height="15.0" fill="rgb(224,11,21)" rx="2" ry="2" />
<text  x="118.70" y="447.5" ></text>
</g>
<g >
<title>Cache::System (2 samples, 0.01%)</title><rect x="1172.4" y="645" width="0.1" height="15.0" fill="rgb(222,213,34)" rx="2" ry="2" />
<text  x="1175.44" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (2 samples, 0.01%)</title><rect x="71.4" y="837" width="0.1" height="15.0" fill="rgb(218,110,40)" rx="2" ry="2" />
<text  x="74.42" y="847.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (8 samples, 0.04%)</title><rect x="92.8" y="469" width="0.4" height="15.0" fill="rgb(211,55,24)" rx="2" ry="2" />
<text  x="95.76" y="479.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (6 samples, 0.03%)</title><rect x="67.0" y="837" width="0.3" height="15.0" fill="rgb(252,61,32)" rx="2" ry="2" />
<text  x="70.00" y="847.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (3 samples, 0.01%)</title><rect x="1176.5" y="645" width="0.1" height="15.0" fill="rgb(221,219,43)" rx="2" ry="2" />
<text  x="1179.48" y="655.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*&gt; (51 samples, 0.23%)</title><rect x="841.9" y="421" width="2.7" height="15.0" fill="rgb(240,220,3)" rx="2" ry="2" />
<text  x="844.89" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (7 samples, 0.03%)</title><rect x="784.6" y="533" width="0.3" height="15.0" fill="rgb(235,121,30)" rx="2" ry="2" />
<text  x="787.57" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="1176.5" y="597" width="0.1" height="15.0" fill="rgb(211,76,51)" rx="2" ry="2" />
<text  x="1179.54" y="607.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (25 samples, 0.11%)</title><rect x="1174.4" y="469" width="1.3" height="15.0" fill="rgb(224,168,39)" rx="2" ry="2" />
<text  x="1177.41" y="479.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (3 samples, 0.01%)</title><rect x="35.7" y="837" width="0.1" height="15.0" fill="rgb(244,73,5)" rx="2" ry="2" />
<text  x="38.65" y="847.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (560 samples, 2.53%)</title><rect x="1066.5" y="421" width="29.8" height="15.0" fill="rgb(214,34,45)" rx="2" ry="2" />
<text  x="1069.53" y="431.5" >[l..</text>
</g>
</g>
</svg>
