<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="886" onload="init(evt)" viewBox="0 0 1200 886" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="886.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="869" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="869" > </text>
<g id="frames">
<g >
<title>[unknown] (219 samples, 2.19%)</title><rect x="133.9" y="805" width="25.9" height="15.0" fill="rgb(233,124,15)" rx="2" ry="2" />
<text  x="136.94" y="815.5" >[..</text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (8 samples, 0.08%)</title><rect x="963.2" y="341" width="1.0" height="15.0" fill="rgb(242,218,25)" rx="2" ry="2" />
<text  x="966.22" y="351.5" ></text>
</g>
<g >
<title>__fsnotify_parent (1 samples, 0.01%)</title><rect x="65.9" y="693" width="0.1" height="15.0" fill="rgb(241,108,52)" rx="2" ry="2" />
<text  x="68.90" y="703.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (3 samples, 0.03%)</title><rect x="184.9" y="581" width="0.3" height="15.0" fill="rgb(244,225,0)" rx="2" ry="2" />
<text  x="187.89" y="591.5" ></text>
</g>
<g >
<title>Game_Picture::Show (53 samples, 0.53%)</title><rect x="917.7" y="581" width="6.3" height="15.0" fill="rgb(210,50,21)" rx="2" ry="2" />
<text  x="920.70" y="591.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (6 samples, 0.06%)</title><rect x="134.7" y="789" width="0.7" height="15.0" fill="rgb(205,2,10)" rx="2" ry="2" />
<text  x="137.65" y="799.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="101.2" y="773" width="0.1" height="15.0" fill="rgb(244,22,49)" rx="2" ry="2" />
<text  x="104.16" y="783.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="922.8" y="341" width="0.2" height="15.0" fill="rgb(222,171,22)" rx="2" ry="2" />
<text  x="925.77" y="351.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (1 samples, 0.01%)</title><rect x="1187.9" y="677" width="0.1" height="15.0" fill="rgb(249,155,53)" rx="2" ry="2" />
<text  x="1190.88" y="687.5" ></text>
</g>
<g >
<title>__fdget_pos (2 samples, 0.02%)</title><rect x="65.4" y="757" width="0.3" height="15.0" fill="rgb(248,141,52)" rx="2" ry="2" />
<text  x="68.43" y="767.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (192 samples, 1.92%)</title><rect x="656.8" y="469" width="22.7" height="15.0" fill="rgb(217,107,13)" rx="2" ry="2" />
<text  x="659.84" y="479.5" >s..</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (3 samples, 0.03%)</title><rect x="918.3" y="421" width="0.3" height="15.0" fill="rgb(248,116,47)" rx="2" ry="2" />
<text  x="921.29" y="431.5" ></text>
</g>
<g >
<title>__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int&gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;Input::UiSource::Update()::&lt;lambda(int)&gt; &gt; &gt; (2 samples, 0.02%)</title><rect x="255.3" y="581" width="0.2" height="15.0" fill="rgb(253,136,45)" rx="2" ry="2" />
<text  x="258.29" y="591.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (3 samples, 0.03%)</title><rect x="224.9" y="437" width="0.3" height="15.0" fill="rgb(232,217,17)" rx="2" ry="2" />
<text  x="227.87" y="447.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="826.7" y="325" width="0.1" height="15.0" fill="rgb(214,68,17)" rx="2" ry="2" />
<text  x="829.66" y="335.5" ></text>
</g>
<g >
<title>ip_rcv_finish_core.isra.23 (1 samples, 0.01%)</title><rect x="1128.8" y="389" width="0.1" height="15.0" fill="rgb(249,118,16)" rx="2" ry="2" />
<text  x="1131.79" y="399.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (2 samples, 0.02%)</title><rect x="921.9" y="325" width="0.3" height="15.0" fill="rgb(209,78,26)" rx="2" ry="2" />
<text  x="924.95" y="335.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.01%)</title><rect x="923.0" y="437" width="0.1" height="15.0" fill="rgb(210,51,9)" rx="2" ry="2" />
<text  x="926.01" y="447.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (1 samples, 0.01%)</title><rect x="103.0" y="805" width="0.2" height="15.0" fill="rgb(230,98,40)" rx="2" ry="2" />
<text  x="106.05" y="815.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.01%)</title><rect x="1188.0" y="645" width="0.1" height="15.0" fill="rgb(224,16,45)" rx="2" ry="2" />
<text  x="1191.00" y="655.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="908.1" y="373" width="0.2" height="15.0" fill="rgb(219,105,40)" rx="2" ry="2" />
<text  x="911.15" y="383.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="51.3" y="709" width="0.1" height="15.0" fill="rgb(252,133,25)" rx="2" ry="2" />
<text  x="54.28" y="719.5" ></text>
</g>
<g >
<title>Bitmap::WaverBlit (3 samples, 0.03%)</title><rect x="184.9" y="597" width="0.3" height="15.0" fill="rgb(229,134,21)" rx="2" ry="2" />
<text  x="187.89" y="607.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="656.0" y="373" width="0.1" height="15.0" fill="rgb(252,99,34)" rx="2" ry="2" />
<text  x="659.02" y="383.5" ></text>
</g>
<g >
<title>finish_task_switch (8 samples, 0.08%)</title><rect x="963.2" y="293" width="1.0" height="15.0" fill="rgb(254,152,18)" rx="2" ry="2" />
<text  x="966.22" y="303.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.02%)</title><rect x="676.7" y="309" width="0.2" height="15.0" fill="rgb(223,98,0)" rx="2" ry="2" />
<text  x="679.65" y="319.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (1 samples, 0.01%)</title><rect x="923.1" y="453" width="0.1" height="15.0" fill="rgb(235,197,38)" rx="2" ry="2" />
<text  x="926.13" y="463.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="64.0" y="597" width="0.1" height="15.0" fill="rgb(211,7,29)" rx="2" ry="2" />
<text  x="67.01" y="607.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (1 samples, 0.01%)</title><rect x="922.2" y="373" width="0.1" height="15.0" fill="rgb(232,216,12)" rx="2" ry="2" />
<text  x="925.18" y="383.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (1 samples, 0.01%)</title><rect x="225.6" y="597" width="0.1" height="15.0" fill="rgb(217,1,33)" rx="2" ry="2" />
<text  x="228.57" y="607.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="63.7" y="613" width="0.1" height="15.0" fill="rgb(224,93,28)" rx="2" ry="2" />
<text  x="66.66" y="623.5" ></text>
</g>
<g >
<title>__GI___nanosleep (55 samples, 0.55%)</title><rect x="965.0" y="613" width="6.5" height="15.0" fill="rgb(246,227,51)" rx="2" ry="2" />
<text  x="967.99" y="623.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.01%)</title><rect x="964.2" y="485" width="0.1" height="15.0" fill="rgb(209,108,42)" rx="2" ry="2" />
<text  x="967.17" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (52 samples, 0.52%)</title><rect x="965.2" y="597" width="6.2" height="15.0" fill="rgb(220,181,31)" rx="2" ry="2" />
<text  x="968.23" y="607.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="923.5" y="373" width="0.1" height="15.0" fill="rgb(211,78,33)" rx="2" ry="2" />
<text  x="926.48" y="383.5" ></text>
</g>
<g >
<title>finish_task_switch (47 samples, 0.47%)</title><rect x="965.6" y="485" width="5.5" height="15.0" fill="rgb(214,224,52)" rx="2" ry="2" />
<text  x="968.58" y="495.5" ></text>
</g>
<g >
<title>psi_task_change (4 samples, 0.04%)</title><rect x="54.9" y="645" width="0.5" height="15.0" fill="rgb(248,2,53)" rx="2" ry="2" />
<text  x="57.93" y="655.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_1&lt;true&gt;::__uninit_default_n&lt;unsigned char*, unsigned long&gt; (1 samples, 0.01%)</title><rect x="920.4" y="229" width="0.1" height="15.0" fill="rgb(248,153,13)" rx="2" ry="2" />
<text  x="923.41" y="239.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (1 samples, 0.01%)</title><rect x="1133.9" y="581" width="0.1" height="15.0" fill="rgb(208,57,6)" rx="2" ry="2" />
<text  x="1136.87" y="591.5" ></text>
</g>
<g >
<title>__GI___poll (1 samples, 0.01%)</title><rect x="974.0" y="565" width="0.1" height="15.0" fill="rgb(216,166,30)" rx="2" ry="2" />
<text  x="976.95" y="575.5" ></text>
</g>
<g >
<title>mod_timer (1 samples, 0.01%)</title><rect x="647.8" y="229" width="0.1" height="15.0" fill="rgb(228,61,37)" rx="2" ry="2" />
<text  x="650.76" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (1 samples, 0.01%)</title><rect x="961.6" y="453" width="0.1" height="15.0" fill="rgb(242,171,10)" rx="2" ry="2" />
<text  x="964.57" y="463.5" ></text>
</g>
<g >
<title>Cache::SystemOrBlack (1 samples, 0.01%)</title><rect x="960.2" y="581" width="0.1" height="15.0" fill="rgb(249,113,29)" rx="2" ry="2" />
<text  x="963.16" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (1 samples, 0.01%)</title><rect x="921.6" y="325" width="0.1" height="15.0" fill="rgb(254,209,50)" rx="2" ry="2" />
<text  x="924.59" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2 samples, 0.02%)</title><rect x="959.6" y="469" width="0.2" height="15.0" fill="rgb(234,111,19)" rx="2" ry="2" />
<text  x="962.57" y="479.5" ></text>
</g>
<g >
<title>__GI___writev (1 samples, 0.01%)</title><rect x="963.0" y="453" width="0.1" height="15.0" fill="rgb(237,7,24)" rx="2" ry="2" />
<text  x="965.99" y="463.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (9 samples, 0.09%)</title><rect x="250.1" y="597" width="1.1" height="15.0" fill="rgb(245,167,19)" rx="2" ry="2" />
<text  x="253.10" y="607.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.01%)</title><rect x="101.3" y="757" width="0.1" height="15.0" fill="rgb(238,165,18)" rx="2" ry="2" />
<text  x="104.28" y="767.5" ></text>
</g>
<g >
<title>[libpthread-2.29.so] (8 samples, 0.08%)</title><rect x="177.5" y="693" width="0.9" height="15.0" fill="rgb(252,194,44)" rx="2" ry="2" />
<text  x="180.46" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (18 samples, 0.18%)</title><rect x="1160.9" y="629" width="2.1" height="15.0" fill="rgb(238,29,22)" rx="2" ry="2" />
<text  x="1163.87" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (1 samples, 0.01%)</title><rect x="919.2" y="357" width="0.2" height="15.0" fill="rgb(228,156,17)" rx="2" ry="2" />
<text  x="922.23" y="367.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (6 samples, 0.06%)</title><rect x="956.3" y="613" width="0.7" height="15.0" fill="rgb(209,115,6)" rx="2" ry="2" />
<text  x="959.26" y="623.5" ></text>
</g>
<g >
<title>unix_stream_read_generic (1 samples, 0.01%)</title><rect x="1188.0" y="693" width="0.1" height="15.0" fill="rgb(229,84,28)" rx="2" ry="2" />
<text  x="1191.00" y="703.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (4 samples, 0.04%)</title><rect x="918.2" y="469" width="0.4" height="15.0" fill="rgb(213,172,32)" rx="2" ry="2" />
<text  x="921.17" y="479.5" ></text>
</g>
<g >
<title>XEventsQueued (1 samples, 0.01%)</title><rect x="71.1" y="789" width="0.1" height="15.0" fill="rgb(212,74,29)" rx="2" ry="2" />
<text  x="74.09" y="799.5" ></text>
</g>
<g >
<title>Bitmap::Blit (1 samples, 0.01%)</title><rect x="90.1" y="789" width="0.1" height="15.0" fill="rgb(237,216,49)" rx="2" ry="2" />
<text  x="93.07" y="799.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="715.5" y="341" width="0.1" height="15.0" fill="rgb(243,53,13)" rx="2" ry="2" />
<text  x="718.45" y="351.5" ></text>
</g>
<g >
<title>FileRequestResult::~FileRequestResult (1 samples, 0.01%)</title><rect x="919.0" y="533" width="0.1" height="15.0" fill="rgb(219,205,4)" rx="2" ry="2" />
<text  x="922.00" y="543.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (11 samples, 0.11%)</title><rect x="963.0" y="565" width="1.3" height="15.0" fill="rgb(248,158,33)" rx="2" ry="2" />
<text  x="965.99" y="575.5" ></text>
</g>
<g >
<title>_XReply (9 samples, 0.09%)</title><rect x="963.1" y="517" width="1.1" height="15.0" fill="rgb(219,198,4)" rx="2" ry="2" />
<text  x="966.10" y="527.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.01%)</title><rect x="973.7" y="389" width="0.1" height="15.0" fill="rgb(205,6,45)" rx="2" ry="2" />
<text  x="976.72" y="399.5" ></text>
</g>
<g >
<title>FpsOverlay::Draw (1 samples, 0.01%)</title><rect x="90.3" y="789" width="0.1" height="15.0" fill="rgb(207,19,44)" rx="2" ry="2" />
<text  x="93.31" y="799.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (10 samples, 0.10%)</title><rect x="646.7" y="341" width="1.2" height="15.0" fill="rgb(225,98,6)" rx="2" ry="2" />
<text  x="649.70" y="351.5" ></text>
</g>
<g >
<title>_copy_to_user (1 samples, 0.01%)</title><rect x="1152.7" y="581" width="0.2" height="15.0" fill="rgb(248,109,35)" rx="2" ry="2" />
<text  x="1155.73" y="591.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (8 samples, 0.08%)</title><rect x="963.2" y="277" width="1.0" height="15.0" fill="rgb(236,86,15)" rx="2" ry="2" />
<text  x="966.22" y="287.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.01%)</title><rect x="64.8" y="661" width="0.2" height="15.0" fill="rgb(211,225,54)" rx="2" ry="2" />
<text  x="67.84" y="671.5" ></text>
</g>
<g >
<title>_int_free (596 samples, 5.96%)</title><rect x="838.0" y="437" width="70.3" height="15.0" fill="rgb(249,2,43)" rx="2" ry="2" />
<text  x="840.98" y="447.5" >_int_free</text>
</g>
<g >
<title>__x64_sys_clock_gettime (4 samples, 0.04%)</title><rect x="1140.4" y="613" width="0.4" height="15.0" fill="rgb(206,123,9)" rx="2" ry="2" />
<text  x="1143.35" y="623.5" ></text>
</g>
<g >
<title>Input::UiSource::Update (2 samples, 0.02%)</title><rect x="255.3" y="661" width="0.2" height="15.0" fill="rgb(230,14,34)" rx="2" ry="2" />
<text  x="258.29" y="671.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.01%)</title><rect x="961.9" y="309" width="0.1" height="15.0" fill="rgb(243,208,6)" rx="2" ry="2" />
<text  x="964.92" y="319.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.04%)</title><rect x="917.7" y="453" width="0.5" height="15.0" fill="rgb(252,94,51)" rx="2" ry="2" />
<text  x="920.70" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (1 samples, 0.01%)</title><rect x="255.6" y="613" width="0.2" height="15.0" fill="rgb(233,17,52)" rx="2" ry="2" />
<text  x="258.65" y="623.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.02%)</title><rect x="647.5" y="277" width="0.3" height="15.0" fill="rgb(243,17,8)" rx="2" ry="2" />
<text  x="650.53" y="287.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="224.2" y="533" width="0.1" height="15.0" fill="rgb(216,167,26)" rx="2" ry="2" />
<text  x="227.16" y="543.5" ></text>
</g>
<g >
<title>handle_irq (5 samples, 0.05%)</title><rect x="1128.2" y="565" width="0.6" height="15.0" fill="rgb(252,44,40)" rx="2" ry="2" />
<text  x="1131.21" y="575.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (8 samples, 0.08%)</title><rect x="963.2" y="229" width="1.0" height="15.0" fill="rgb(249,69,54)" rx="2" ry="2" />
<text  x="966.22" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="916.5" y="405" width="0.1" height="15.0" fill="rgb(213,173,24)" rx="2" ry="2" />
<text  x="919.52" y="415.5" ></text>
</g>
<g >
<title>Bitmap::ZoomOpacityBlit (333 samples, 3.33%)</title><rect x="185.2" y="597" width="39.3" height="15.0" fill="rgb(249,148,21)" rx="2" ry="2" />
<text  x="188.24" y="607.5" >Bit..</text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.01%)</title><rect x="963.0" y="69" width="0.1" height="15.0" fill="rgb(215,73,54)" rx="2" ry="2" />
<text  x="965.99" y="79.5" ></text>
</g>
<g >
<title>malloc@plt (26 samples, 0.26%)</title><rect x="649.8" y="373" width="3.0" height="15.0" fill="rgb(219,99,49)" rx="2" ry="2" />
<text  x="652.77" y="383.5" ></text>
</g>
<g >
<title>Cache::System (2 samples, 0.02%)</title><rect x="959.6" y="549" width="0.2" height="15.0" fill="rgb(223,180,21)" rx="2" ry="2" />
<text  x="962.57" y="559.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (69 samples, 0.69%)</title><rect x="55.5" y="629" width="8.2" height="15.0" fill="rgb(231,189,32)" rx="2" ry="2" />
<text  x="58.52" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt;::erase (1 samples, 0.01%)</title><rect x="923.5" y="421" width="0.1" height="15.0" fill="rgb(250,6,46)" rx="2" ry="2" />
<text  x="926.48" y="431.5" ></text>
</g>
<g >
<title>Bitmap::pitch (1 samples, 0.01%)</title><rect x="974.9" y="661" width="0.1" height="15.0" fill="rgb(215,79,21)" rx="2" ry="2" />
<text  x="977.90" y="671.5" ></text>
</g>
<g >
<title>xhci_queue_isoc_tx_prepare (1 samples, 0.01%)</title><rect x="891.3" y="101" width="0.1" height="15.0" fill="rgb(206,161,15)" rx="2" ry="2" />
<text  x="894.29" y="111.5" ></text>
</g>
<g >
<title>__x64_sys_writev (1 samples, 0.01%)</title><rect x="963.0" y="389" width="0.1" height="15.0" fill="rgb(249,103,37)" rx="2" ry="2" />
<text  x="965.99" y="399.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (11 samples, 0.11%)</title><rect x="251.2" y="533" width="1.3" height="15.0" fill="rgb(218,179,12)" rx="2" ry="2" />
<text  x="254.17" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_M_lower_bound (1 samples, 0.01%)</title><rect x="919.4" y="213" width="0.1" height="15.0" fill="rgb(209,110,54)" rx="2" ry="2" />
<text  x="922.35" y="223.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.01%)</title><rect x="1133.6" y="469" width="0.1" height="15.0" fill="rgb(252,118,1)" rx="2" ry="2" />
<text  x="1136.63" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.02%)</title><rect x="922.8" y="469" width="0.2" height="15.0" fill="rgb(243,90,32)" rx="2" ry="2" />
<text  x="925.77" y="479.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (1 samples, 0.01%)</title><rect x="1133.9" y="613" width="0.1" height="15.0" fill="rgb(233,55,40)" rx="2" ry="2" />
<text  x="1136.87" y="623.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="133.7" y="565" width="0.1" height="15.0" fill="rgb(246,15,18)" rx="2" ry="2" />
<text  x="136.71" y="575.5" ></text>
</g>
<g >
<title>[[stack]] (54 samples, 0.54%)</title><rect x="90.0" y="805" width="6.3" height="15.0" fill="rgb(226,141,44)" rx="2" ry="2" />
<text  x="92.96" y="815.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (1 samples, 0.01%)</title><rect x="960.5" y="469" width="0.1" height="15.0" fill="rgb(217,202,7)" rx="2" ry="2" />
<text  x="963.51" y="479.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="326.6" y="357" width="0.2" height="15.0" fill="rgb(219,143,48)" rx="2" ry="2" />
<text  x="329.64" y="367.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.01%)</title><rect x="965.5" y="469" width="0.1" height="15.0" fill="rgb(225,196,29)" rx="2" ry="2" />
<text  x="968.46" y="479.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (4 samples, 0.04%)</title><rect x="138.5" y="789" width="0.5" height="15.0" fill="rgb(226,143,0)" rx="2" ry="2" />
<text  x="141.54" y="799.5" ></text>
</g>
<g >
<title>vfs_write (5 samples, 0.05%)</title><rect x="66.4" y="741" width="0.6" height="15.0" fill="rgb(253,132,52)" rx="2" ry="2" />
<text  x="69.37" y="751.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.02%)</title><rect x="67.0" y="789" width="0.2" height="15.0" fill="rgb(250,109,49)" rx="2" ry="2" />
<text  x="69.96" y="799.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.02%)</title><rect x="959.6" y="485" width="0.2" height="15.0" fill="rgb(220,41,9)" rx="2" ry="2" />
<text  x="962.57" y="495.5" ></text>
</g>
<g >
<title>xhci_irq (2 samples, 0.02%)</title><rect x="133.6" y="661" width="0.2" height="15.0" fill="rgb(230,116,11)" rx="2" ry="2" />
<text  x="136.59" y="671.5" ></text>
</g>
<g >
<title>sock_poll (1 samples, 0.01%)</title><rect x="964.2" y="469" width="0.1" height="15.0" fill="rgb(237,167,12)" rx="2" ry="2" />
<text  x="967.17" y="479.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.01%)</title><rect x="963.0" y="245" width="0.1" height="15.0" fill="rgb(234,119,36)" rx="2" ry="2" />
<text  x="965.99" y="255.5" ></text>
</g>
<g >
<title>Bitmap::EffectsBlit (381 samples, 3.81%)</title><rect x="179.6" y="613" width="44.9" height="15.0" fill="rgb(214,30,1)" rx="2" ry="2" />
<text  x="182.58" y="623.5" >Bitm..</text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.02%)</title><rect x="324.4" y="421" width="0.2" height="15.0" fill="rgb(219,52,38)" rx="2" ry="2" />
<text  x="327.40" y="431.5" ></text>
</g>
<g >
<title>__sched_text_start (8 samples, 0.08%)</title><rect x="963.2" y="309" width="1.0" height="15.0" fill="rgb(228,197,11)" rx="2" ry="2" />
<text  x="966.22" y="319.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="962.9" y="517" width="0.1" height="15.0" fill="rgb(217,45,3)" rx="2" ry="2" />
<text  x="965.87" y="527.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="916.3" y="421" width="0.1" height="15.0" fill="rgb(229,96,53)" rx="2" ry="2" />
<text  x="919.29" y="431.5" ></text>
</g>
<g >
<title>__GI___poll (1 samples, 0.01%)</title><rect x="962.9" y="485" width="0.1" height="15.0" fill="rgb(233,77,49)" rx="2" ry="2" />
<text  x="965.87" y="495.5" ></text>
</g>
<g >
<title>Game_Map::Refresh (2 samples, 0.02%)</title><rect x="954.8" y="597" width="0.3" height="15.0" fill="rgb(220,150,31)" rx="2" ry="2" />
<text  x="957.85" y="607.5" ></text>
</g>
<g >
<title>__libc_recvmsg (3 samples, 0.03%)</title><rect x="962.4" y="501" width="0.4" height="15.0" fill="rgb(243,203,51)" rx="2" ry="2" />
<text  x="965.40" y="511.5" ></text>
</g>
<g >
<title>Cache::System (2 samples, 0.02%)</title><rect x="960.4" y="581" width="0.2" height="15.0" fill="rgb(236,6,1)" rx="2" ry="2" />
<text  x="963.39" y="591.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (3 samples, 0.03%)</title><rect x="159.2" y="789" width="0.3" height="15.0" fill="rgb(248,26,39)" rx="2" ry="2" />
<text  x="162.18" y="799.5" ></text>
</g>
<g >
<title>consume_skb (1 samples, 0.01%)</title><rect x="1188.0" y="677" width="0.1" height="15.0" fill="rgb(224,41,54)" rx="2" ry="2" />
<text  x="1191.00" y="687.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="51.3" y="773" width="0.1" height="15.0" fill="rgb(229,65,18)" rx="2" ry="2" />
<text  x="54.28" y="783.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (1 samples, 0.01%)</title><rect x="101.9" y="709" width="0.1" height="15.0" fill="rgb(238,32,41)" rx="2" ry="2" />
<text  x="104.87" y="719.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (6 samples, 0.06%)</title><rect x="958.4" y="613" width="0.7" height="15.0" fill="rgb(251,178,50)" rx="2" ry="2" />
<text  x="961.39" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (1 samples, 0.01%)</title><rect x="916.3" y="437" width="0.1" height="15.0" fill="rgb(235,195,30)" rx="2" ry="2" />
<text  x="919.29" y="447.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.01%)</title><rect x="67.2" y="805" width="0.1" height="15.0" fill="rgb(209,2,44)" rx="2" ry="2" />
<text  x="70.20" y="815.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="715.5" y="389" width="0.1" height="15.0" fill="rgb(216,205,52)" rx="2" ry="2" />
<text  x="718.45" y="399.5" ></text>
</g>
<g >
<title>__sched_text_start (51 samples, 0.51%)</title><rect x="965.3" y="501" width="6.1" height="15.0" fill="rgb(209,62,46)" rx="2" ry="2" />
<text  x="968.34" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (984 samples, 9.83%)</title><rect x="721.9" y="421" width="116.1" height="15.0" fill="rgb(207,19,14)" rx="2" ry="2" />
<text  x="724.94" y="431.5" >std::vector&lt;in..</text>
</g>
<g >
<title>Bitmap::BlitFast (91 samples, 0.91%)</title><rect x="239.3" y="613" width="10.7" height="15.0" fill="rgb(226,174,23)" rx="2" ry="2" />
<text  x="242.25" y="623.5" ></text>
</g>
<g >
<title>RPG::EventCommand::EventCommand (3,545 samples, 35.43%)</title><rect x="269.4" y="501" width="418.1" height="15.0" fill="rgb(238,74,32)" rx="2" ry="2" />
<text  x="272.44" y="511.5" >RPG::EventCommand::EventCommand</text>
</g>
<g >
<title>Scene::IsAsyncPending (89 samples, 0.89%)</title><rect x="1163.6" y="693" width="10.5" height="15.0" fill="rgb(223,18,5)" rx="2" ry="2" />
<text  x="1166.58" y="703.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.01%)</title><rect x="326.6" y="229" width="0.2" height="15.0" fill="rgb(247,58,12)" rx="2" ry="2" />
<text  x="329.64" y="239.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (1 samples, 0.01%)</title><rect x="965.1" y="597" width="0.1" height="15.0" fill="rgb(241,49,41)" rx="2" ry="2" />
<text  x="968.11" y="607.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.01%)</title><rect x="676.8" y="229" width="0.1" height="15.0" fill="rgb(252,8,10)" rx="2" ry="2" />
<text  x="679.77" y="239.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (12 samples, 0.12%)</title><rect x="99.3" y="709" width="1.4" height="15.0" fill="rgb(218,186,34)" rx="2" ry="2" />
<text  x="102.27" y="719.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1 samples, 0.01%)</title><rect x="65.7" y="677" width="0.1" height="15.0" fill="rgb(238,21,16)" rx="2" ry="2" />
<text  x="68.66" y="687.5" ></text>
</g>
<g >
<title>_XReply (1 samples, 0.01%)</title><rect x="963.0" y="533" width="0.1" height="15.0" fill="rgb(219,70,49)" rx="2" ry="2" />
<text  x="965.99" y="543.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;int&gt;::weak_ptr&lt;int, void&gt; (1 samples, 0.01%)</title><rect x="918.9" y="517" width="0.1" height="15.0" fill="rgb(209,98,39)" rx="2" ry="2" />
<text  x="921.88" y="527.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="133.7" y="629" width="0.1" height="15.0" fill="rgb(206,22,23)" rx="2" ry="2" />
<text  x="136.71" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (2 samples, 0.02%)</title><rect x="922.8" y="405" width="0.2" height="15.0" fill="rgb(253,101,12)" rx="2" ry="2" />
<text  x="925.77" y="415.5" ></text>
</g>
<g >
<title>__wake_up_common (3 samples, 0.03%)</title><rect x="66.4" y="677" width="0.3" height="15.0" fill="rgb(253,126,36)" rx="2" ry="2" />
<text  x="69.37" y="687.5" ></text>
</g>
<g >
<title>x86_pmu_enable (8 samples, 0.08%)</title><rect x="1161.9" y="485" width="1.0" height="15.0" fill="rgb(228,104,16)" rx="2" ry="2" />
<text  x="1164.93" y="495.5" ></text>
</g>
<g >
<title>syscall (7 samples, 0.07%)</title><rect x="101.5" y="789" width="0.8" height="15.0" fill="rgb(234,171,17)" rx="2" ry="2" />
<text  x="104.51" y="799.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (1 samples, 0.01%)</title><rect x="960.4" y="501" width="0.1" height="15.0" fill="rgb(242,201,11)" rx="2" ry="2" />
<text  x="963.39" y="511.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (329 samples, 3.29%)</title><rect x="185.6" y="565" width="38.8" height="15.0" fill="rgb(240,157,9)" rx="2" ry="2" />
<text  x="188.60" y="575.5" >pix..</text>
</g>
<g >
<title>mntput_no_expire (1 samples, 0.01%)</title><rect x="920.8" y="117" width="0.1" height="15.0" fill="rgb(253,51,36)" rx="2" ry="2" />
<text  x="923.77" y="127.5" ></text>
</g>
<g >
<title>std::stable_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, bool (*)(Drawable const*, Drawable const*)&gt; (11 samples, 0.11%)</title><rect x="253.5" y="645" width="1.3" height="15.0" fill="rgb(245,40,48)" rx="2" ry="2" />
<text  x="256.52" y="655.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (38 samples, 0.38%)</title><rect x="919.1" y="517" width="4.5" height="15.0" fill="rgb(209,222,5)" rx="2" ry="2" />
<text  x="922.12" y="527.5" ></text>
</g>
<g >
<title>Bitmap::Blit (87 samples, 0.87%)</title><rect x="229.0" y="613" width="10.3" height="15.0" fill="rgb(208,65,33)" rx="2" ry="2" />
<text  x="231.99" y="623.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.01%)</title><rect x="963.0" y="165" width="0.1" height="15.0" fill="rgb(236,28,46)" rx="2" ry="2" />
<text  x="965.99" y="175.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="646.6" y="309" width="0.1" height="15.0" fill="rgb(229,39,7)" rx="2" ry="2" />
<text  x="649.58" y="319.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (3 samples, 0.03%)</title><rect x="133.2" y="789" width="0.4" height="15.0" fill="rgb(210,206,38)" rx="2" ry="2" />
<text  x="136.24" y="799.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (2 samples, 0.02%)</title><rect x="133.6" y="709" width="0.2" height="15.0" fill="rgb(223,95,7)" rx="2" ry="2" />
<text  x="136.59" y="719.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (2 samples, 0.02%)</title><rect x="973.6" y="549" width="0.2" height="15.0" fill="rgb(232,80,34)" rx="2" ry="2" />
<text  x="976.60" y="559.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (1 samples, 0.01%)</title><rect x="919.2" y="437" width="0.2" height="15.0" fill="rgb(207,58,54)" rx="2" ry="2" />
<text  x="922.23" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned char&gt;::allocate (1 samples, 0.01%)</title><rect x="917.5" y="421" width="0.1" height="15.0" fill="rgb(252,143,11)" rx="2" ry="2" />
<text  x="920.47" y="431.5" ></text>
</g>
<g >
<title>native_apic_msr_eoi_write (1 samples, 0.01%)</title><rect x="891.4" y="325" width="0.1" height="15.0" fill="rgb(251,27,37)" rx="2" ry="2" />
<text  x="894.40" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.01%)</title><rect x="959.9" y="533" width="0.1" height="15.0" fill="rgb(210,221,11)" rx="2" ry="2" />
<text  x="962.92" y="543.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (1 samples, 0.01%)</title><rect x="960.5" y="485" width="0.1" height="15.0" fill="rgb(207,103,27)" rx="2" ry="2" />
<text  x="963.51" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.05%)</title><rect x="101.5" y="757" width="0.6" height="15.0" fill="rgb(223,199,43)" rx="2" ry="2" />
<text  x="104.51" y="767.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (1 samples, 0.01%)</title><rect x="923.1" y="485" width="0.1" height="15.0" fill="rgb(214,110,39)" rx="2" ry="2" />
<text  x="926.13" y="495.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="656.0" y="261" width="0.1" height="15.0" fill="rgb(236,216,5)" rx="2" ry="2" />
<text  x="659.02" y="271.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.01%)</title><rect x="963.0" y="85" width="0.1" height="15.0" fill="rgb(233,120,3)" rx="2" ry="2" />
<text  x="965.99" y="95.5" ></text>
</g>
<g >
<title>Window_Base::Update (1 samples, 0.01%)</title><rect x="960.2" y="597" width="0.1" height="15.0" fill="rgb(234,206,8)" rx="2" ry="2" />
<text  x="963.16" y="607.5" ></text>
</g>
<g >
<title>__libc_calloc (1 samples, 0.01%)</title><rect x="101.3" y="789" width="0.1" height="15.0" fill="rgb(213,159,6)" rx="2" ry="2" />
<text  x="104.28" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (482 samples, 4.82%)</title><rect x="281.2" y="453" width="56.9" height="15.0" fill="rgb(233,191,1)" rx="2" ry="2" />
<text  x="284.24" y="463.5" >std::_..</text>
</g>
<g >
<title>Scene::IsAsyncPending (157 samples, 1.57%)</title><rect x="159.9" y="709" width="18.5" height="15.0" fill="rgb(232,140,30)" rx="2" ry="2" />
<text  x="162.89" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_default_append (2 samples, 0.02%)</title><rect x="917.5" y="469" width="0.2" height="15.0" fill="rgb(219,119,11)" rx="2" ry="2" />
<text  x="920.47" y="479.5" ></text>
</g>
<g >
<title>run_rebalance_domains (2 samples, 0.02%)</title><rect x="63.8" y="581" width="0.2" height="15.0" fill="rgb(218,209,9)" rx="2" ry="2" />
<text  x="66.78" y="591.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (69 samples, 0.69%)</title><rect x="55.5" y="581" width="8.2" height="15.0" fill="rgb(246,164,4)" rx="2" ry="2" />
<text  x="58.52" y="591.5" ></text>
</g>
<g >
<title>Bitmap::Blit (45 samples, 0.45%)</title><rect x="179.6" y="597" width="5.3" height="15.0" fill="rgb(247,19,39)" rx="2" ry="2" />
<text  x="182.58" y="607.5" ></text>
</g>
<g >
<title>operator delete (16 samples, 0.16%)</title><rect x="833.4" y="341" width="1.9" height="15.0" fill="rgb(231,199,35)" rx="2" ry="2" />
<text  x="836.38" y="351.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.01%)</title><rect x="920.2" y="261" width="0.1" height="15.0" fill="rgb(209,137,8)" rx="2" ry="2" />
<text  x="923.18" y="271.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (1,346 samples, 13.45%)</title><rect x="975.3" y="645" width="158.7" height="15.0" fill="rgb(238,103,51)" rx="2" ry="2" />
<text  x="978.25" y="655.5" >[libSDL2-2.0.so.0.9.0]</text>
</g>
<g >
<title>LoadBitmap (1 samples, 0.01%)</title><rect x="960.5" y="533" width="0.1" height="15.0" fill="rgb(240,154,36)" rx="2" ry="2" />
<text  x="963.51" y="543.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="826.7" y="245" width="0.1" height="15.0" fill="rgb(236,35,27)" rx="2" ry="2" />
<text  x="829.66" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (4 samples, 0.04%)</title><rect x="917.7" y="501" width="0.5" height="15.0" fill="rgb(232,132,54)" rx="2" ry="2" />
<text  x="920.70" y="511.5" ></text>
</g>
<g >
<title>pixman_transform_point (1 samples, 0.01%)</title><rect x="185.1" y="533" width="0.1" height="15.0" fill="rgb(224,73,44)" rx="2" ry="2" />
<text  x="188.12" y="543.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (5 samples, 0.05%)</title><rect x="1134.2" y="597" width="0.6" height="15.0" fill="rgb(248,122,21)" rx="2" ry="2" />
<text  x="1137.22" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (2 samples, 0.02%)</title><rect x="922.8" y="437" width="0.2" height="15.0" fill="rgb(251,175,6)" rx="2" ry="2" />
<text  x="925.77" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="921.0" y="261" width="0.1" height="15.0" fill="rgb(251,151,40)" rx="2" ry="2" />
<text  x="924.00" y="271.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (8 samples, 0.08%)</title><rect x="1161.9" y="469" width="1.0" height="15.0" fill="rgb(223,34,4)" rx="2" ry="2" />
<text  x="1164.93" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="920.9" y="197" width="0.1" height="15.0" fill="rgb(235,129,24)" rx="2" ry="2" />
<text  x="923.89" y="207.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="961.6" y="437" width="0.1" height="15.0" fill="rgb(215,174,51)" rx="2" ry="2" />
<text  x="964.57" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;RPG::EventCommand&gt; &gt;::allocate (86 samples, 0.86%)</title><rect x="258.0" y="549" width="10.1" height="15.0" fill="rgb(235,98,11)" rx="2" ry="2" />
<text  x="261.01" y="559.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (1 samples, 0.01%)</title><rect x="919.2" y="341" width="0.2" height="15.0" fill="rgb(218,120,44)" rx="2" ry="2" />
<text  x="922.23" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.03%)</title><rect x="974.5" y="565" width="0.4" height="15.0" fill="rgb(231,185,13)" rx="2" ry="2" />
<text  x="977.54" y="575.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.01%)</title><rect x="255.5" y="565" width="0.1" height="15.0" fill="rgb(243,105,3)" rx="2" ry="2" />
<text  x="258.53" y="575.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="1128.2" y="517" width="0.1" height="15.0" fill="rgb(230,210,18)" rx="2" ry="2" />
<text  x="1131.21" y="527.5" ></text>
</g>
<g >
<title>Sprite::Sprite (1 samples, 0.01%)</title><rect x="923.2" y="501" width="0.2" height="15.0" fill="rgb(212,139,23)" rx="2" ry="2" />
<text  x="926.24" y="511.5" ></text>
</g>
<g >
<title>update_load_avg (2 samples, 0.02%)</title><rect x="1161.3" y="485" width="0.3" height="15.0" fill="rgb(242,74,37)" rx="2" ry="2" />
<text  x="1164.34" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="1163.1" y="581" width="0.2" height="15.0" fill="rgb(244,115,42)" rx="2" ry="2" />
<text  x="1166.11" y="591.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (8 samples, 0.08%)</title><rect x="696.9" y="581" width="1.0" height="15.0" fill="rgb(225,200,37)" rx="2" ry="2" />
<text  x="699.94" y="591.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (2 samples, 0.02%)</title><rect x="225.3" y="613" width="0.3" height="15.0" fill="rgb(241,170,19)" rx="2" ry="2" />
<text  x="228.34" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.09%)</title><rect x="972.5" y="485" width="1.1" height="15.0" fill="rgb(237,172,39)" rx="2" ry="2" />
<text  x="975.54" y="495.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, Drawable**, Drawable**&gt; (1 samples, 0.01%)</title><rect x="253.6" y="549" width="0.2" height="15.0" fill="rgb(243,121,16)" rx="2" ry="2" />
<text  x="256.64" y="559.5" ></text>
</g>
<g >
<title>FileFinder::FindSound (1 samples, 0.01%)</title><rect x="916.3" y="517" width="0.1" height="15.0" fill="rgb(252,20,18)" rx="2" ry="2" />
<text  x="919.29" y="527.5" ></text>
</g>
<g >
<title>tcache_get (8 samples, 0.08%)</title><rect x="648.4" y="357" width="0.9" height="15.0" fill="rgb(236,67,13)" rx="2" ry="2" />
<text  x="651.35" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.01%)</title><rect x="254.9" y="581" width="0.2" height="15.0" fill="rgb(252,141,10)" rx="2" ry="2" />
<text  x="257.94" y="591.5" ></text>
</g>
<g >
<title>xcb_writev (1 samples, 0.01%)</title><rect x="963.0" y="501" width="0.1" height="15.0" fill="rgb(235,41,50)" rx="2" ry="2" />
<text  x="965.99" y="511.5" ></text>
</g>
<g >
<title>apic_ack_irq (1 samples, 0.01%)</title><rect x="1128.7" y="517" width="0.1" height="15.0" fill="rgb(240,201,6)" rx="2" ry="2" />
<text  x="1131.68" y="527.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (1 samples, 0.01%)</title><rect x="916.2" y="565" width="0.1" height="15.0" fill="rgb(240,22,45)" rx="2" ry="2" />
<text  x="919.17" y="575.5" ></text>
</g>
<g >
<title>easyrpg-player (9,518 samples, 95.12%)</title><rect x="67.5" y="821" width="1122.5" height="15.0" fill="rgb(252,118,35)" rx="2" ry="2" />
<text  x="70.55" y="831.5" >easyrpg-player</text>
</g>
<g >
<title>__fdget (1 samples, 0.01%)</title><rect x="973.7" y="421" width="0.1" height="15.0" fill="rgb(212,133,44)" rx="2" ry="2" />
<text  x="976.72" y="431.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1133.7" y="453" width="0.2" height="15.0" fill="rgb(211,224,53)" rx="2" ry="2" />
<text  x="1136.75" y="463.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.01%)</title><rect x="1128.8" y="469" width="0.1" height="15.0" fill="rgb(216,116,35)" rx="2" ry="2" />
<text  x="1131.79" y="479.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.01%)</title><rect x="325.5" y="373" width="0.1" height="15.0" fill="rgb(211,17,0)" rx="2" ry="2" />
<text  x="328.46" y="383.5" ></text>
</g>
<g >
<title>vfs_writev (1 samples, 0.01%)</title><rect x="963.0" y="357" width="0.1" height="15.0" fill="rgb(232,39,22)" rx="2" ry="2" />
<text  x="965.99" y="367.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.01%)</title><rect x="66.3" y="709" width="0.1" height="15.0" fill="rgb(215,160,0)" rx="2" ry="2" />
<text  x="69.25" y="719.5" ></text>
</g>
<g >
<title>terminate_walk (1 samples, 0.01%)</title><rect x="920.8" y="133" width="0.1" height="15.0" fill="rgb(209,157,23)" rx="2" ry="2" />
<text  x="923.77" y="143.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="908.1" y="309" width="0.2" height="15.0" fill="rgb(205,121,22)" rx="2" ry="2" />
<text  x="911.15" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (15 samples, 0.15%)</title><rect x="919.4" y="341" width="1.7" height="15.0" fill="rgb(240,19,5)" rx="2" ry="2" />
<text  x="922.35" y="351.5" ></text>
</g>
<g >
<title>memset@plt (1 samples, 0.01%)</title><rect x="100.7" y="757" width="0.1" height="15.0" fill="rgb(237,134,16)" rx="2" ry="2" />
<text  x="103.69" y="767.5" ></text>
</g>
<g >
<title>Game_Map::IsAnyEventStarting (2 samples, 0.02%)</title><rect x="957.2" y="597" width="0.2" height="15.0" fill="rgb(238,206,27)" rx="2" ry="2" />
<text  x="960.21" y="607.5" ></text>
</g>
<g >
<title>posix_get_monotonic_raw (2 samples, 0.02%)</title><rect x="1187.6" y="757" width="0.3" height="15.0" fill="rgb(226,188,52)" rx="2" ry="2" />
<text  x="1190.64" y="767.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="964.9" y="581" width="0.1" height="15.0" fill="rgb(236,114,52)" rx="2" ry="2" />
<text  x="967.87" y="591.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (15 samples, 0.15%)</title><rect x="919.4" y="421" width="1.7" height="15.0" fill="rgb(236,8,28)" rx="2" ry="2" />
<text  x="922.35" y="431.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (6 samples, 0.06%)</title><rect x="223.1" y="533" width="0.7" height="15.0" fill="rgb(229,229,36)" rx="2" ry="2" />
<text  x="226.10" y="543.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.01%)</title><rect x="1161.2" y="533" width="0.1" height="15.0" fill="rgb(232,211,14)" rx="2" ry="2" />
<text  x="1164.23" y="543.5" ></text>
</g>
<g >
<title>run_rebalance_domains (2 samples, 0.02%)</title><rect x="324.4" y="357" width="0.2" height="15.0" fill="rgb(248,97,22)" rx="2" ry="2" />
<text  x="327.40" y="367.5" ></text>
</g>
<g >
<title>account_entity_dequeue (1 samples, 0.01%)</title><rect x="51.3" y="645" width="0.1" height="15.0" fill="rgb(248,73,20)" rx="2" ry="2" />
<text  x="54.28" y="655.5" ></text>
</g>
<g >
<title>__errno_location@plt (1 samples, 0.01%)</title><rect x="972.3" y="517" width="0.1" height="15.0" fill="rgb(210,76,23)" rx="2" ry="2" />
<text  x="975.30" y="527.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (1 samples, 0.01%)</title><rect x="1188.0" y="709" width="0.1" height="15.0" fill="rgb(213,54,8)" rx="2" ry="2" />
<text  x="1191.00" y="719.5" ></text>
</g>
<g >
<title>handle_irq (5 samples, 0.05%)</title><rect x="829.5" y="293" width="0.6" height="15.0" fill="rgb(220,179,6)" rx="2" ry="2" />
<text  x="832.49" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (9 samples, 0.09%)</title><rect x="972.5" y="469" width="1.1" height="15.0" fill="rgb(217,135,51)" rx="2" ry="2" />
<text  x="975.54" y="479.5" ></text>
</g>
<g >
<title>___sys_recvmsg (1 samples, 0.01%)</title><rect x="962.5" y="421" width="0.1" height="15.0" fill="rgb(236,211,22)" rx="2" ry="2" />
<text  x="965.51" y="431.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (1 samples, 0.01%)</title><rect x="972.2" y="581" width="0.1" height="15.0" fill="rgb(253,72,16)" rx="2" ry="2" />
<text  x="975.18" y="591.5" ></text>
</g>
<g >
<title>pixman_image_get_width (1 samples, 0.01%)</title><rect x="959.0" y="597" width="0.1" height="15.0" fill="rgb(215,78,8)" rx="2" ry="2" />
<text  x="961.98" y="607.5" ></text>
</g>
<g >
<title>Window_Base::Update (3 samples, 0.03%)</title><rect x="959.8" y="629" width="0.4" height="15.0" fill="rgb(215,198,29)" rx="2" ry="2" />
<text  x="962.80" y="639.5" ></text>
</g>
<g >
<title>png_read_info (1 samples, 0.01%)</title><rect x="920.5" y="293" width="0.1" height="15.0" fill="rgb(243,175,45)" rx="2" ry="2" />
<text  x="923.53" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="253.6" y="517" width="0.2" height="15.0" fill="rgb(230,148,11)" rx="2" ry="2" />
<text  x="256.64" y="527.5" ></text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt;, 36ul&gt; (4 samples, 0.04%)</title><rect x="255.5" y="661" width="0.5" height="15.0" fill="rgb(222,6,38)" rx="2" ry="2" />
<text  x="258.53" y="671.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (2 samples, 0.02%)</title><rect x="958.2" y="581" width="0.2" height="15.0" fill="rgb(238,203,9)" rx="2" ry="2" />
<text  x="961.15" y="591.5" ></text>
</g>
<g >
<title>__sys_recvmsg (1 samples, 0.01%)</title><rect x="1188.0" y="757" width="0.1" height="15.0" fill="rgb(223,88,15)" rx="2" ry="2" />
<text  x="1191.00" y="767.5" ></text>
</g>
<g >
<title>check_cfs_rq_runtime (1 samples, 0.01%)</title><rect x="64.8" y="629" width="0.2" height="15.0" fill="rgb(229,104,10)" rx="2" ry="2" />
<text  x="67.84" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (44 samples, 0.44%)</title><rect x="1177.9" y="629" width="5.1" height="15.0" fill="rgb(248,168,26)" rx="2" ry="2" />
<text  x="1180.85" y="639.5" ></text>
</g>
<g >
<title>Graphics::LocalDraw (639 samples, 6.39%)</title><rect x="179.5" y="661" width="75.3" height="15.0" fill="rgb(209,192,6)" rx="2" ry="2" />
<text  x="182.46" y="671.5" >Graphics..</text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (3 samples, 0.03%)</title><rect x="224.9" y="501" width="0.3" height="15.0" fill="rgb(208,40,26)" rx="2" ry="2" />
<text  x="227.87" y="511.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.01%)</title><rect x="223.9" y="453" width="0.1" height="15.0" fill="rgb(248,100,50)" rx="2" ry="2" />
<text  x="226.92" y="463.5" ></text>
</g>
<g >
<title>RPG::SaveEventExecFrame::~SaveEventExecFrame (1,692 samples, 16.91%)</title><rect x="708.7" y="533" width="199.6" height="15.0" fill="rgb(249,169,2)" rx="2" ry="2" />
<text  x="711.73" y="543.5" >RPG::SaveEventExecFrame::~..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;RPG::SaveEventExecFrame&gt;::deallocate (5 samples, 0.05%)</title><rect x="256.8" y="485" width="0.6" height="15.0" fill="rgb(210,91,19)" rx="2" ry="2" />
<text  x="259.83" y="495.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (1 samples, 0.01%)</title><rect x="225.6" y="565" width="0.1" height="15.0" fill="rgb(235,8,50)" rx="2" ry="2" />
<text  x="228.57" y="575.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.02%)</title><rect x="649.5" y="293" width="0.3" height="15.0" fill="rgb(217,125,26)" rx="2" ry="2" />
<text  x="652.53" y="303.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.01%)</title><rect x="922.2" y="357" width="0.1" height="15.0" fill="rgb(207,104,48)" rx="2" ry="2" />
<text  x="925.18" y="367.5" ></text>
</g>
<g >
<title>do_sys_poll (100 samples, 1.00%)</title><rect x="53.5" y="757" width="11.8" height="15.0" fill="rgb(230,143,27)" rx="2" ry="2" />
<text  x="56.52" y="767.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (3 samples, 0.03%)</title><rect x="891.0" y="325" width="0.4" height="15.0" fill="rgb(244,92,10)" rx="2" ry="2" />
<text  x="894.05" y="335.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.01%)</title><rect x="963.0" y="213" width="0.1" height="15.0" fill="rgb(224,61,23)" rx="2" ry="2" />
<text  x="965.99" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (1 samples, 0.01%)</title><rect x="696.7" y="549" width="0.1" height="15.0" fill="rgb(247,197,50)" rx="2" ry="2" />
<text  x="699.70" y="559.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="890.9" y="389" width="0.1" height="15.0" fill="rgb(248,165,13)" rx="2" ry="2" />
<text  x="893.93" y="399.5" ></text>
</g>
<g >
<title>__accumulate_pelt_segments (1 samples, 0.01%)</title><rect x="54.8" y="581" width="0.1" height="15.0" fill="rgb(214,169,53)" rx="2" ry="2" />
<text  x="57.81" y="591.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (1 samples, 0.01%)</title><rect x="255.1" y="661" width="0.1" height="15.0" fill="rgb(211,92,37)" rx="2" ry="2" />
<text  x="258.06" y="671.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.01%)</title><rect x="830.1" y="325" width="0.1" height="15.0" fill="rgb(206,149,4)" rx="2" ry="2" />
<text  x="833.08" y="335.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.01%)</title><rect x="971.4" y="597" width="0.1" height="15.0" fill="rgb(240,14,48)" rx="2" ry="2" />
<text  x="974.36" y="607.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="51.3" y="693" width="0.1" height="15.0" fill="rgb(243,116,30)" rx="2" ry="2" />
<text  x="54.28" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (4 samples, 0.04%)</title><rect x="918.2" y="501" width="0.4" height="15.0" fill="rgb(229,109,11)" rx="2" ry="2" />
<text  x="921.17" y="511.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.01%)</title><rect x="1128.8" y="373" width="0.1" height="15.0" fill="rgb(249,40,26)" rx="2" ry="2" />
<text  x="1131.79" y="383.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandMovePicture (5 samples, 0.05%)</title><rect x="915.6" y="597" width="0.6" height="15.0" fill="rgb(211,146,33)" rx="2" ry="2" />
<text  x="918.58" y="607.5" ></text>
</g>
<g >
<title>__x2apic_send_IPI_dest (1 samples, 0.01%)</title><rect x="908.1" y="197" width="0.2" height="15.0" fill="rgb(235,85,30)" rx="2" ry="2" />
<text  x="911.15" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (1 samples, 0.01%)</title><rect x="921.2" y="405" width="0.2" height="15.0" fill="rgb(231,25,1)" rx="2" ry="2" />
<text  x="924.24" y="415.5" ></text>
</g>
<g >
<title>operator new (2,473 samples, 24.72%)</title><rect x="361.2" y="389" width="291.6" height="15.0" fill="rgb(241,18,17)" rx="2" ry="2" />
<text  x="364.19" y="399.5" >operator new</text>
</g>
<g >
<title>std::__copy_move_a&lt;true, Drawable**, Drawable**&gt; (1 samples, 0.01%)</title><rect x="254.7" y="549" width="0.1" height="15.0" fill="rgb(251,223,9)" rx="2" ry="2" />
<text  x="257.70" y="559.5" ></text>
</g>
<g >
<title>pixman_transform_point (3 samples, 0.03%)</title><rect x="223.5" y="517" width="0.3" height="15.0" fill="rgb(234,7,49)" rx="2" ry="2" />
<text  x="226.45" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;TilemapLayer::TileData, std::allocator&lt;TilemapLayer::TileData&gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="253.3" y="629" width="0.1" height="15.0" fill="rgb(219,17,32)" rx="2" ry="2" />
<text  x="256.29" y="639.5" ></text>
</g>
<g >
<title>Game_Interpreter::KeyInputState::CheckInput (1 samples, 0.01%)</title><rect x="915.3" y="581" width="0.2" height="15.0" fill="rgb(239,179,26)" rx="2" ry="2" />
<text  x="918.34" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator++ (2 samples, 0.02%)</title><rect x="959.3" y="613" width="0.3" height="15.0" fill="rgb(239,168,54)" rx="2" ry="2" />
<text  x="962.33" y="623.5" ></text>
</g>
<g >
<title>__GI__IO_file_open (2 samples, 0.02%)</title><rect x="920.6" y="261" width="0.3" height="15.0" fill="rgb(249,5,31)" rx="2" ry="2" />
<text  x="923.65" y="271.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (192 samples, 1.92%)</title><rect x="656.8" y="421" width="22.7" height="15.0" fill="rgb(216,145,24)" rx="2" ry="2" />
<text  x="659.84" y="431.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree_increment@plt (14 samples, 0.14%)</title><rect x="1183.0" y="629" width="1.7" height="15.0" fill="rgb(208,217,38)" rx="2" ry="2" />
<text  x="1186.04" y="639.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="63.7" y="597" width="0.1" height="15.0" fill="rgb(238,183,15)" rx="2" ry="2" />
<text  x="66.66" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (35 samples, 0.35%)</title><rect x="1152.1" y="597" width="4.2" height="15.0" fill="rgb(246,200,46)" rx="2" ry="2" />
<text  x="1155.14" y="607.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="971.0" y="469" width="0.1" height="15.0" fill="rgb(216,194,54)" rx="2" ry="2" />
<text  x="974.01" y="479.5" ></text>
</g>
<g >
<title>color_tone (1 samples, 0.01%)</title><rect x="224.6" y="581" width="0.1" height="15.0" fill="rgb(226,101,26)" rx="2" ry="2" />
<text  x="227.63" y="591.5" ></text>
</g>
<g >
<title>xhci_queue_isoc_tx_prepare (1 samples, 0.01%)</title><rect x="133.7" y="485" width="0.1" height="15.0" fill="rgb(205,26,8)" rx="2" ry="2" />
<text  x="136.71" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (1 samples, 0.01%)</title><rect x="922.4" y="437" width="0.1" height="15.0" fill="rgb(210,118,24)" rx="2" ry="2" />
<text  x="925.42" y="447.5" ></text>
</g>
<g >
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="249.8" y="565" width="0.2" height="15.0" fill="rgb(225,208,50)" rx="2" ry="2" />
<text  x="252.75" y="575.5" ></text>
</g>
<g >
<title>Scene::MainFunction (8,536 samples, 85.31%)</title><rect x="178.4" y="709" width="1006.6" height="15.0" fill="rgb(213,194,42)" rx="2" ry="2" />
<text  x="181.40" y="719.5" >Scene::MainFunction</text>
</g>
<g >
<title>std::default_delete&lt;Sprite&gt;::operator() (1 samples, 0.01%)</title><rect x="923.5" y="485" width="0.1" height="15.0" fill="rgb(213,174,17)" rx="2" ry="2" />
<text  x="926.48" y="495.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.01%)</title><rect x="647.8" y="293" width="0.1" height="15.0" fill="rgb(237,179,0)" rx="2" ry="2" />
<text  x="650.76" y="303.5" ></text>
</g>
<g >
<title>enqueue_task_fair (2 samples, 0.02%)</title><rect x="66.5" y="581" width="0.2" height="15.0" fill="rgb(215,151,33)" rx="2" ry="2" />
<text  x="69.49" y="591.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.01%)</title><rect x="101.3" y="773" width="0.1" height="15.0" fill="rgb(211,43,20)" rx="2" ry="2" />
<text  x="104.28" y="783.5" ></text>
</g>
<g >
<title>pipe_write (2 samples, 0.02%)</title><rect x="66.7" y="693" width="0.3" height="15.0" fill="rgb(228,126,54)" rx="2" ry="2" />
<text  x="69.72" y="703.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.01%)</title><rect x="963.0" y="197" width="0.1" height="15.0" fill="rgb(231,170,46)" rx="2" ry="2" />
<text  x="965.99" y="207.5" ></text>
</g>
<g >
<title>std::__insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (2 samples, 0.02%)</title><rect x="253.8" y="565" width="0.2" height="15.0" fill="rgb(221,14,41)" rx="2" ry="2" />
<text  x="256.76" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="964.5" y="549" width="0.3" height="15.0" fill="rgb(238,181,20)" rx="2" ry="2" />
<text  x="967.52" y="559.5" ></text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (2 samples, 0.02%)</title><rect x="958.2" y="613" width="0.2" height="15.0" fill="rgb(233,31,30)" rx="2" ry="2" />
<text  x="961.15" y="623.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.01%)</title><rect x="326.6" y="245" width="0.2" height="15.0" fill="rgb(222,202,18)" rx="2" ry="2" />
<text  x="329.64" y="255.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (15 samples, 0.15%)</title><rect x="919.4" y="437" width="1.7" height="15.0" fill="rgb(225,170,0)" rx="2" ry="2" />
<text  x="922.35" y="447.5" ></text>
</g>
<g >
<title>Sdl2Ui::ProcessActiveEvent (88 samples, 0.88%)</title><rect x="961.1" y="661" width="10.4" height="15.0" fill="rgb(253,117,50)" rx="2" ry="2" />
<text  x="964.10" y="671.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="891.3" y="245" width="0.1" height="15.0" fill="rgb(234,49,29)" rx="2" ry="2" />
<text  x="894.29" y="255.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="826.7" y="309" width="0.1" height="15.0" fill="rgb(250,3,15)" rx="2" ry="2" />
<text  x="829.66" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.05%)</title><rect x="101.5" y="773" width="0.6" height="15.0" fill="rgb(209,0,15)" rx="2" ry="2" />
<text  x="104.51" y="783.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, Drawable**, Drawable**&gt; (1 samples, 0.01%)</title><rect x="254.1" y="517" width="0.1" height="15.0" fill="rgb(248,85,33)" rx="2" ry="2" />
<text  x="257.11" y="527.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="642.3" y="325" width="0.2" height="15.0" fill="rgb(241,131,47)" rx="2" ry="2" />
<text  x="645.34" y="335.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (22 samples, 0.22%)</title><rect x="98.2" y="789" width="2.6" height="15.0" fill="rgb(245,49,9)" rx="2" ry="2" />
<text  x="101.21" y="799.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (1 samples, 0.01%)</title><rect x="923.1" y="469" width="0.1" height="15.0" fill="rgb(234,144,49)" rx="2" ry="2" />
<text  x="926.13" y="479.5" ></text>
</g>
<g >
<title>xhci_msi_irq (2 samples, 0.02%)</title><rect x="67.0" y="693" width="0.2" height="15.0" fill="rgb(228,97,1)" rx="2" ry="2" />
<text  x="69.96" y="703.5" ></text>
</g>
<g >
<title>[libGLX.so.0.0.0] (1 samples, 0.01%)</title><rect x="96.7" y="805" width="0.1" height="15.0" fill="rgb(214,206,45)" rx="2" ry="2" />
<text  x="99.68" y="815.5" ></text>
</g>
<g >
<title>std::__fill_n_a&lt;unsigned long, unsigned char&gt; (1 samples, 0.01%)</title><rect x="917.6" y="389" width="0.1" height="15.0" fill="rgb(251,98,27)" rx="2" ry="2" />
<text  x="920.58" y="399.5" ></text>
</g>
<g >
<title>Tilemap::SetOx (1 samples, 0.01%)</title><rect x="91.5" y="789" width="0.1" height="15.0" fill="rgb(223,6,7)" rx="2" ry="2" />
<text  x="94.49" y="799.5" ></text>
</g>
<g >
<title>handle_edge_irq (2 samples, 0.02%)</title><rect x="647.9" y="309" width="0.2" height="15.0" fill="rgb(212,177,24)" rx="2" ry="2" />
<text  x="650.88" y="319.5" ></text>
</g>
<g >
<title>xhci_irq (3 samples, 0.03%)</title><rect x="829.7" y="197" width="0.4" height="15.0" fill="rgb(233,25,10)" rx="2" ry="2" />
<text  x="832.73" y="207.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="708.5" y="549" width="0.1" height="15.0" fill="rgb(254,141,28)" rx="2" ry="2" />
<text  x="711.49" y="559.5" ></text>
</g>
<g >
<title>malloc_consolidate (19 samples, 0.19%)</title><rect x="265.8" y="469" width="2.2" height="15.0" fill="rgb(246,145,6)" rx="2" ry="2" />
<text  x="268.79" y="479.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.01%)</title><rect x="963.0" y="325" width="0.1" height="15.0" fill="rgb(214,211,54)" rx="2" ry="2" />
<text  x="965.99" y="335.5" ></text>
</g>
<g >
<title>new_sync_read (1 samples, 0.01%)</title><rect x="65.7" y="709" width="0.1" height="15.0" fill="rgb(218,93,41)" rx="2" ry="2" />
<text  x="68.66" y="719.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="708.5" y="453" width="0.1" height="15.0" fill="rgb(245,224,2)" rx="2" ry="2" />
<text  x="711.49" y="463.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (1 samples, 0.01%)</title><rect x="960.4" y="453" width="0.1" height="15.0" fill="rgb(217,77,20)" rx="2" ry="2" />
<text  x="963.39" y="463.5" ></text>
</g>
<g >
<title>Game_Character::UpdateMovement (5 samples, 0.05%)</title><rect x="957.0" y="629" width="0.6" height="15.0" fill="rgb(234,155,14)" rx="2" ry="2" />
<text  x="959.97" y="639.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (1 samples, 0.01%)</title><rect x="224.7" y="565" width="0.2" height="15.0" fill="rgb(238,48,50)" rx="2" ry="2" />
<text  x="227.75" y="575.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (3 samples, 0.03%)</title><rect x="973.2" y="389" width="0.4" height="15.0" fill="rgb(212,112,44)" rx="2" ry="2" />
<text  x="976.25" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (956 samples, 9.55%)</title><rect x="725.2" y="373" width="112.8" height="15.0" fill="rgb(247,3,35)" rx="2" ry="2" />
<text  x="728.24" y="383.5" >std::allocato..</text>
</g>
<g >
<title>do_sys_open (2 samples, 0.02%)</title><rect x="920.6" y="181" width="0.3" height="15.0" fill="rgb(216,60,38)" rx="2" ry="2" />
<text  x="923.65" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="973.6" y="501" width="0.2" height="15.0" fill="rgb(211,93,50)" rx="2" ry="2" />
<text  x="976.60" y="511.5" ></text>
</g>
<g >
<title>fsnotify (1 samples, 0.01%)</title><rect x="66.1" y="693" width="0.2" height="15.0" fill="rgb(211,134,27)" rx="2" ry="2" />
<text  x="69.13" y="703.5" ></text>
</g>
<g >
<title>Graphics::RemoveDrawable (1 samples, 0.01%)</title><rect x="923.5" y="437" width="0.1" height="15.0" fill="rgb(226,13,20)" rx="2" ry="2" />
<text  x="926.48" y="447.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="676.8" y="261" width="0.1" height="15.0" fill="rgb(242,191,13)" rx="2" ry="2" />
<text  x="679.77" y="271.5" ></text>
</g>
<g >
<title>std::make_pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt;&amp;&gt; (1 samples, 0.01%)</title><rect x="918.8" y="517" width="0.1" height="15.0" fill="rgb(210,124,22)" rx="2" ry="2" />
<text  x="921.76" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::~vector (1,692 samples, 16.91%)</title><rect x="708.7" y="517" width="199.6" height="15.0" fill="rgb(228,213,35)" rx="2" ry="2" />
<text  x="711.73" y="527.5" >std::vector&lt;RPG::EventComm..</text>
</g>
<g >
<title>__GI___poll (4 samples, 0.04%)</title><rect x="974.4" y="597" width="0.5" height="15.0" fill="rgb(227,165,15)" rx="2" ry="2" />
<text  x="977.43" y="607.5" ></text>
</g>
<g >
<title>Graphics::Draw (639 samples, 6.39%)</title><rect x="179.5" y="677" width="75.3" height="15.0" fill="rgb(243,27,34)" rx="2" ry="2" />
<text  x="182.46" y="687.5" >Graphics..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="257.8" y="597" width="0.1" height="15.0" fill="rgb(249,185,45)" rx="2" ry="2" />
<text  x="260.77" y="607.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="223.9" y="517" width="0.3" height="15.0" fill="rgb(225,126,26)" rx="2" ry="2" />
<text  x="226.92" y="527.5" ></text>
</g>
<g >
<title>Scene::MainFunction (8,694 samples, 86.89%)</title><rect x="159.8" y="725" width="1025.2" height="15.0" fill="rgb(209,7,52)" rx="2" ry="2" />
<text  x="162.77" y="735.5" >Scene::MainFunction</text>
</g>
<g >
<title>XFlush (2 samples, 0.02%)</title><rect x="71.2" y="789" width="0.2" height="15.0" fill="rgb(252,157,15)" rx="2" ry="2" />
<text  x="74.21" y="799.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="920.6" y="229" width="0.3" height="15.0" fill="rgb(240,193,49)" rx="2" ry="2" />
<text  x="923.65" y="239.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.01%)</title><rect x="1128.8" y="485" width="0.1" height="15.0" fill="rgb(213,168,41)" rx="2" ry="2" />
<text  x="1131.79" y="495.5" ></text>
</g>
<g >
<title>unlink_chunk (1 samples, 0.01%)</title><rect x="917.5" y="357" width="0.1" height="15.0" fill="rgb(235,35,19)" rx="2" ry="2" />
<text  x="920.47" y="367.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="133.2" y="741" width="0.2" height="15.0" fill="rgb(253,145,36)" rx="2" ry="2" />
<text  x="136.24" y="751.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.01%)</title><rect x="1187.8" y="741" width="0.1" height="15.0" fill="rgb(218,52,50)" rx="2" ry="2" />
<text  x="1190.76" y="751.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="964.8" y="549" width="0.1" height="15.0" fill="rgb(216,19,41)" rx="2" ry="2" />
<text  x="967.76" y="559.5" ></text>
</g>
<g >
<title>try_to_wake_up (3 samples, 0.03%)</title><rect x="66.4" y="629" width="0.3" height="15.0" fill="rgb(207,198,41)" rx="2" ry="2" />
<text  x="69.37" y="639.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (1 samples, 0.01%)</title><rect x="973.8" y="549" width="0.2" height="15.0" fill="rgb(210,49,22)" rx="2" ry="2" />
<text  x="976.84" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (4 samples, 0.04%)</title><rect x="954.4" y="581" width="0.4" height="15.0" fill="rgb(244,190,44)" rx="2" ry="2" />
<text  x="957.38" y="591.5" ></text>
</g>
<g >
<title>AudioResampler::FillBufferDifferentRate (3 samples, 0.03%)</title><rect x="916.6" y="453" width="0.4" height="15.0" fill="rgb(254,75,41)" rx="2" ry="2" />
<text  x="919.64" y="463.5" ></text>
</g>
<g >
<title>_int_free (6 samples, 0.06%)</title><rect x="715.7" y="341" width="0.7" height="15.0" fill="rgb(205,180,50)" rx="2" ry="2" />
<text  x="718.69" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="1133.7" y="437" width="0.2" height="15.0" fill="rgb(240,66,0)" rx="2" ry="2" />
<text  x="1136.75" y="447.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (2 samples, 0.02%)</title><rect x="102.1" y="773" width="0.2" height="15.0" fill="rgb(237,216,8)" rx="2" ry="2" />
<text  x="105.10" y="783.5" ></text>
</g>
<g >
<title>memcpy (4 samples, 0.04%)</title><rect x="917.0" y="485" width="0.5" height="15.0" fill="rgb(234,144,2)" rx="2" ry="2" />
<text  x="919.99" y="495.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (3 samples, 0.03%)</title><rect x="224.9" y="517" width="0.3" height="15.0" fill="rgb(209,173,12)" rx="2" ry="2" />
<text  x="227.87" y="527.5" ></text>
</g>
<g >
<title>Player::IsRPG2k3 (3 samples, 0.03%)</title><rect x="708.1" y="565" width="0.4" height="15.0" fill="rgb(221,42,46)" rx="2" ry="2" />
<text  x="711.14" y="575.5" ></text>
</g>
<g >
<title>XextFindDisplay (1 samples, 0.01%)</title><rect x="962.3" y="501" width="0.1" height="15.0" fill="rgb(208,45,40)" rx="2" ry="2" />
<text  x="965.28" y="511.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="656.0" y="309" width="0.1" height="15.0" fill="rgb(207,100,39)" rx="2" ry="2" />
<text  x="659.02" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="739.5" y="277" width="0.1" height="15.0" fill="rgb(254,53,2)" rx="2" ry="2" />
<text  x="742.51" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="964.2" y="517" width="0.1" height="15.0" fill="rgb(220,148,14)" rx="2" ry="2" />
<text  x="967.17" y="527.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (8 samples, 0.08%)</title><rect x="250.2" y="565" width="1.0" height="15.0" fill="rgb(211,226,42)" rx="2" ry="2" />
<text  x="253.22" y="575.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (59 samples, 0.59%)</title><rect x="326.8" y="373" width="6.9" height="15.0" fill="rgb(247,118,48)" rx="2" ry="2" />
<text  x="329.76" y="383.5" ></text>
</g>
<g >
<title>_int_malloc (12 samples, 0.12%)</title><rect x="84.2" y="789" width="1.4" height="15.0" fill="rgb(236,96,23)" rx="2" ry="2" />
<text  x="87.18" y="799.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.01%)</title><rect x="923.4" y="501" width="0.1" height="15.0" fill="rgb(232,167,37)" rx="2" ry="2" />
<text  x="926.36" y="511.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.01%)</title><rect x="325.5" y="357" width="0.1" height="15.0" fill="rgb(228,172,14)" rx="2" ry="2" />
<text  x="328.46" y="367.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.03%)</title><rect x="145.0" y="789" width="0.4" height="15.0" fill="rgb(208,100,43)" rx="2" ry="2" />
<text  x="148.03" y="799.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Set (22 samples, 0.22%)</title><rect x="706.0" y="581" width="2.6" height="15.0" fill="rgb(238,70,43)" rx="2" ry="2" />
<text  x="709.02" y="591.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="255.1" y="629" width="0.1" height="15.0" fill="rgb(213,3,6)" rx="2" ry="2" />
<text  x="258.06" y="639.5" ></text>
</g>
<g >
<title>_XSend (1 samples, 0.01%)</title><rect x="963.0" y="517" width="0.1" height="15.0" fill="rgb(247,218,38)" rx="2" ry="2" />
<text  x="965.99" y="527.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.01%)</title><rect x="920.5" y="85" width="0.1" height="15.0" fill="rgb(235,50,51)" rx="2" ry="2" />
<text  x="923.53" y="95.5" ></text>
</g>
<g >
<title>_int_malloc (11 samples, 0.11%)</title><rect x="93.7" y="789" width="1.3" height="15.0" fill="rgb(205,150,9)" rx="2" ry="2" />
<text  x="96.73" y="799.5" ></text>
</g>
<g >
<title>Bitmap::Create (15 samples, 0.15%)</title><rect x="919.4" y="469" width="1.7" height="15.0" fill="rgb(231,121,16)" rx="2" ry="2" />
<text  x="922.35" y="479.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;Drawable*&gt; (1 samples, 0.01%)</title><rect x="923.5" y="341" width="0.1" height="15.0" fill="rgb(208,115,7)" rx="2" ry="2" />
<text  x="926.48" y="351.5" ></text>
</g>
<g >
<title>_copy_to_user (1 samples, 0.01%)</title><rect x="1155.7" y="565" width="0.1" height="15.0" fill="rgb(235,225,51)" rx="2" ry="2" />
<text  x="1158.68" y="575.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (1 samples, 0.01%)</title><rect x="1133.9" y="629" width="0.1" height="15.0" fill="rgb(234,214,53)" rx="2" ry="2" />
<text  x="1136.87" y="639.5" ></text>
</g>
<g >
<title>Scene_Map::Update (1 samples, 0.01%)</title><rect x="90.9" y="789" width="0.1" height="15.0" fill="rgb(210,126,28)" rx="2" ry="2" />
<text  x="93.90" y="799.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.01%)</title><rect x="921.6" y="341" width="0.1" height="15.0" fill="rgb(252,41,25)" rx="2" ry="2" />
<text  x="924.59" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="923.5" y="405" width="0.1" height="15.0" fill="rgb(223,7,5)" rx="2" ry="2" />
<text  x="926.48" y="415.5" ></text>
</g>
<g >
<title>Game_Switches_Class::Get (1 samples, 0.01%)</title><rect x="256.6" y="581" width="0.1" height="15.0" fill="rgb(252,122,22)" rx="2" ry="2" />
<text  x="259.59" y="591.5" ></text>
</g>
<g >
<title>_start (8,695 samples, 86.90%)</title><rect x="159.8" y="805" width="1025.4" height="15.0" fill="rgb(234,188,35)" rx="2" ry="2" />
<text  x="162.77" y="815.5" >_start</text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="676.5" y="309" width="0.2" height="15.0" fill="rgb(237,114,26)" rx="2" ry="2" />
<text  x="679.54" y="319.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (1 samples, 0.01%)</title><rect x="959.1" y="597" width="0.1" height="15.0" fill="rgb(213,29,28)" rx="2" ry="2" />
<text  x="962.09" y="607.5" ></text>
</g>
<g >
<title>__GI__IO_doallocbuf (1 samples, 0.01%)</title><rect x="920.9" y="261" width="0.1" height="15.0" fill="rgb(237,187,44)" rx="2" ry="2" />
<text  x="923.89" y="271.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="64.0" y="565" width="0.1" height="15.0" fill="rgb(239,95,17)" rx="2" ry="2" />
<text  x="67.01" y="575.5" ></text>
</g>
<g >
<title>common_file_perm (1 samples, 0.01%)</title><rect x="66.0" y="677" width="0.1" height="15.0" fill="rgb(210,216,26)" rx="2" ry="2" />
<text  x="69.02" y="687.5" ></text>
</g>
<g >
<title>__sys_recvmsg (1 samples, 0.01%)</title><rect x="962.5" y="437" width="0.1" height="15.0" fill="rgb(231,66,16)" rx="2" ry="2" />
<text  x="965.51" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="974.0" y="549" width="0.1" height="15.0" fill="rgb(236,196,8)" rx="2" ry="2" />
<text  x="976.95" y="559.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (1 samples, 0.01%)</title><rect x="960.2" y="517" width="0.1" height="15.0" fill="rgb(239,181,26)" rx="2" ry="2" />
<text  x="963.16" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment@plt (8 samples, 0.08%)</title><rect x="176.5" y="661" width="1.0" height="15.0" fill="rgb(248,5,23)" rx="2" ry="2" />
<text  x="179.52" y="671.5" ></text>
</g>
<g >
<title>std::__fill_n_a&lt;unsigned long, unsigned char&gt; (1 samples, 0.01%)</title><rect x="920.4" y="197" width="0.1" height="15.0" fill="rgb(252,129,17)" rx="2" ry="2" />
<text  x="923.41" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (971 samples, 9.70%)</title><rect x="723.5" y="405" width="114.5" height="15.0" fill="rgb(237,207,33)" rx="2" ry="2" />
<text  x="726.47" y="415.5" >std::_Vector_b..</text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.01%)</title><rect x="826.7" y="197" width="0.1" height="15.0" fill="rgb(209,58,25)" rx="2" ry="2" />
<text  x="829.66" y="207.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="971.0" y="453" width="0.1" height="15.0" fill="rgb(215,37,1)" rx="2" ry="2" />
<text  x="974.01" y="463.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (218 samples, 2.18%)</title><rect x="1135.0" y="661" width="25.8" height="15.0" fill="rgb(252,154,8)" rx="2" ry="2" />
<text  x="1138.04" y="671.5" >_..</text>
</g>
<g >
<title>__GI___libc_malloc (4 samples, 0.04%)</title><rect x="917.7" y="437" width="0.5" height="15.0" fill="rgb(232,58,37)" rx="2" ry="2" />
<text  x="920.70" y="447.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.01%)</title><rect x="101.4" y="789" width="0.1" height="15.0" fill="rgb(223,71,22)" rx="2" ry="2" />
<text  x="104.40" y="799.5" ></text>
</g>
<g >
<title>Opacity::IsTransparent (1 samples, 0.01%)</title><rect x="239.4" y="597" width="0.1" height="15.0" fill="rgb(237,118,28)" rx="2" ry="2" />
<text  x="242.37" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::resize (2 samples, 0.02%)</title><rect x="917.5" y="485" width="0.2" height="15.0" fill="rgb(236,211,26)" rx="2" ry="2" />
<text  x="920.47" y="495.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (2 samples, 0.02%)</title><rect x="225.3" y="549" width="0.3" height="15.0" fill="rgb(219,210,17)" rx="2" ry="2" />
<text  x="228.34" y="559.5" ></text>
</g>
<g >
<title>[libGLX.so.0.0.0] (1 samples, 0.01%)</title><rect x="96.7" y="773" width="0.1" height="15.0" fill="rgb(221,131,7)" rx="2" ry="2" />
<text  x="99.68" y="783.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingBackgroundExecution (3 samples, 0.03%)</title><rect x="256.4" y="613" width="0.3" height="15.0" fill="rgb(229,50,38)" rx="2" ry="2" />
<text  x="259.35" y="623.5" ></text>
</g>
<g >
<title>update_sd_lb_stats (2 samples, 0.02%)</title><rect x="64.2" y="613" width="0.3" height="15.0" fill="rgb(218,7,2)" rx="2" ry="2" />
<text  x="67.25" y="623.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="715.5" y="309" width="0.1" height="15.0" fill="rgb(229,121,7)" rx="2" ry="2" />
<text  x="718.45" y="319.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="54.0" y="709" width="0.1" height="15.0" fill="rgb(218,75,49)" rx="2" ry="2" />
<text  x="56.99" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::capacity (1 samples, 0.01%)</title><rect x="921.1" y="325" width="0.1" height="15.0" fill="rgb(247,93,25)" rx="2" ry="2" />
<text  x="924.12" y="335.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (1 samples, 0.01%)</title><rect x="916.1" y="549" width="0.1" height="15.0" fill="rgb(223,38,25)" rx="2" ry="2" />
<text  x="919.05" y="559.5" ></text>
</g>
<g >
<title>FileRequestAsync::SetGraphicFile (1 samples, 0.01%)</title><rect x="923.6" y="549" width="0.1" height="15.0" fill="rgb(241,207,31)" rx="2" ry="2" />
<text  x="926.60" y="559.5" ></text>
</g>
<g >
<title>std::__chunk_insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (2 samples, 0.02%)</title><rect x="253.8" y="581" width="0.2" height="15.0" fill="rgb(213,100,24)" rx="2" ry="2" />
<text  x="256.76" y="591.5" ></text>
</g>
<g >
<title>posix_get_monotonic_raw (21 samples, 0.21%)</title><rect x="1153.0" y="581" width="2.4" height="15.0" fill="rgb(242,38,18)" rx="2" ry="2" />
<text  x="1155.97" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (52 samples, 0.52%)</title><rect x="965.2" y="581" width="6.2" height="15.0" fill="rgb(234,44,51)" rx="2" ry="2" />
<text  x="968.23" y="591.5" ></text>
</g>
<g >
<title>__GI__IO_file_xsgetn (1 samples, 0.01%)</title><rect x="920.5" y="229" width="0.1" height="15.0" fill="rgb(241,221,9)" rx="2" ry="2" />
<text  x="923.53" y="239.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.01%)</title><rect x="647.3" y="309" width="0.1" height="15.0" fill="rgb(205,186,21)" rx="2" ry="2" />
<text  x="650.29" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (51 samples, 0.51%)</title><rect x="965.3" y="565" width="6.1" height="15.0" fill="rgb(242,204,52)" rx="2" ry="2" />
<text  x="968.34" y="575.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (38 samples, 0.38%)</title><rect x="919.1" y="533" width="4.5" height="15.0" fill="rgb(252,44,42)" rx="2" ry="2" />
<text  x="922.12" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="101.0" y="773" width="0.2" height="15.0" fill="rgb(226,92,1)" rx="2" ry="2" />
<text  x="104.04" y="783.5" ></text>
</g>
<g >
<title>BaseUi::GetDisplaySurface (1 samples, 0.01%)</title><rect x="90.0" y="789" width="0.1" height="15.0" fill="rgb(212,88,44)" rx="2" ry="2" />
<text  x="92.96" y="799.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (9 samples, 0.09%)</title><rect x="99.6" y="693" width="1.1" height="15.0" fill="rgb(253,133,26)" rx="2" ry="2" />
<text  x="102.63" y="703.5" ></text>
</g>
<g >
<title>Game_Map::ScrollDown (1 samples, 0.01%)</title><rect x="957.6" y="613" width="0.1" height="15.0" fill="rgb(253,212,27)" rx="2" ry="2" />
<text  x="960.56" y="623.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (5 samples, 0.05%)</title><rect x="1188.9" y="805" width="0.6" height="15.0" fill="rgb(221,226,35)" rx="2" ry="2" />
<text  x="1191.94" y="815.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (2 samples, 0.02%)</title><rect x="225.3" y="581" width="0.3" height="15.0" fill="rgb(236,195,6)" rx="2" ry="2" />
<text  x="228.34" y="591.5" ></text>
</g>
<g >
<title>xcb_wait_for_reply64 (9 samples, 0.09%)</title><rect x="963.1" y="501" width="1.1" height="15.0" fill="rgb(207,29,23)" rx="2" ry="2" />
<text  x="966.10" y="511.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.01%)</title><rect x="963.0" y="261" width="0.1" height="15.0" fill="rgb(240,72,46)" rx="2" ry="2" />
<text  x="965.99" y="271.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.01%)</title><rect x="971.2" y="485" width="0.2" height="15.0" fill="rgb(211,205,36)" rx="2" ry="2" />
<text  x="974.24" y="495.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.01%)</title><rect x="133.2" y="645" width="0.2" height="15.0" fill="rgb(224,111,21)" rx="2" ry="2" />
<text  x="136.24" y="655.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="920.6" y="213" width="0.3" height="15.0" fill="rgb(206,39,37)" rx="2" ry="2" />
<text  x="923.65" y="223.5" ></text>
</g>
<g >
<title>XQueryKeymap (1 samples, 0.01%)</title><rect x="962.9" y="565" width="0.1" height="15.0" fill="rgb(207,208,13)" rx="2" ry="2" />
<text  x="965.87" y="575.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="63.8" y="597" width="0.2" height="15.0" fill="rgb(222,28,49)" rx="2" ry="2" />
<text  x="66.78" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="973.6" y="485" width="0.2" height="15.0" fill="rgb(219,14,37)" rx="2" ry="2" />
<text  x="976.60" y="495.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.01%)</title><rect x="961.7" y="373" width="0.1" height="15.0" fill="rgb(250,84,54)" rx="2" ry="2" />
<text  x="964.69" y="383.5" ></text>
</g>
<g >
<title>pixman_image_create_solid_fill (1 samples, 0.01%)</title><rect x="224.4" y="565" width="0.1" height="15.0" fill="rgb(233,67,32)" rx="2" ry="2" />
<text  x="227.40" y="575.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="971.0" y="389" width="0.1" height="15.0" fill="rgb(233,90,15)" rx="2" ry="2" />
<text  x="974.01" y="399.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="64.0" y="453" width="0.1" height="15.0" fill="rgb(246,42,14)" rx="2" ry="2" />
<text  x="67.01" y="463.5" ></text>
</g>
<g >
<title>unix_write_space (1 samples, 0.01%)</title><rect x="961.9" y="261" width="0.1" height="15.0" fill="rgb(240,212,4)" rx="2" ry="2" />
<text  x="964.92" y="271.5" ></text>
</g>
<g >
<title>std::replace&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (1 samples, 0.01%)</title><rect x="916.2" y="533" width="0.1" height="15.0" fill="rgb(207,219,47)" rx="2" ry="2" />
<text  x="919.17" y="543.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (68 samples, 0.68%)</title><rect x="231.1" y="581" width="8.0" height="15.0" fill="rgb(241,84,31)" rx="2" ry="2" />
<text  x="234.12" y="591.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="923.5" y="389" width="0.1" height="15.0" fill="rgb(251,109,50)" rx="2" ry="2" />
<text  x="926.48" y="399.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (51 samples, 0.51%)</title><rect x="917.7" y="565" width="6.0" height="15.0" fill="rgb(223,196,39)" rx="2" ry="2" />
<text  x="920.70" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (1 samples, 0.01%)</title><rect x="959.1" y="613" width="0.1" height="15.0" fill="rgb(219,180,38)" rx="2" ry="2" />
<text  x="962.09" y="623.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="656.0" y="389" width="0.1" height="15.0" fill="rgb(217,102,50)" rx="2" ry="2" />
<text  x="659.02" y="399.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.01%)</title><rect x="965.5" y="437" width="0.1" height="15.0" fill="rgb(218,162,13)" rx="2" ry="2" />
<text  x="968.46" y="447.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.16 (1 samples, 0.01%)</title><rect x="63.7" y="549" width="0.1" height="15.0" fill="rgb(231,104,17)" rx="2" ry="2" />
<text  x="66.66" y="559.5" ></text>
</g>
<g >
<title>find (9 samples, 0.09%)</title><rect x="921.5" y="453" width="1.0" height="15.0" fill="rgb(215,11,39)" rx="2" ry="2" />
<text  x="924.48" y="463.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (10 samples, 0.10%)</title><rect x="961.6" y="565" width="1.2" height="15.0" fill="rgb(236,204,16)" rx="2" ry="2" />
<text  x="964.57" y="575.5" ></text>
</g>
<g >
<title>vfs_statx_fd (1 samples, 0.01%)</title><rect x="920.9" y="149" width="0.1" height="15.0" fill="rgb(253,194,33)" rx="2" ry="2" />
<text  x="923.89" y="159.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.01%)</title><rect x="676.7" y="293" width="0.1" height="15.0" fill="rgb(226,48,9)" rx="2" ry="2" />
<text  x="679.65" y="303.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (1 samples, 0.01%)</title><rect x="960.5" y="501" width="0.1" height="15.0" fill="rgb(231,147,41)" rx="2" ry="2" />
<text  x="963.51" y="511.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.01%)</title><rect x="649.3" y="309" width="0.1" height="15.0" fill="rgb(225,105,24)" rx="2" ry="2" />
<text  x="652.29" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (2 samples, 0.02%)</title><rect x="959.3" y="597" width="0.3" height="15.0" fill="rgb(245,171,31)" rx="2" ry="2" />
<text  x="962.33" y="607.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="642.3" y="309" width="0.2" height="15.0" fill="rgb(218,195,4)" rx="2" ry="2" />
<text  x="645.34" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.01%)</title><rect x="924.0" y="549" width="0.1" height="15.0" fill="rgb(218,206,30)" rx="2" ry="2" />
<text  x="926.95" y="559.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (2 samples, 0.02%)</title><rect x="225.3" y="565" width="0.3" height="15.0" fill="rgb(247,191,31)" rx="2" ry="2" />
<text  x="228.34" y="575.5" ></text>
</g>
<g >
<title>Sdl2Ui::ProcessEvents (117 samples, 1.17%)</title><rect x="961.1" y="677" width="13.8" height="15.0" fill="rgb(246,91,49)" rx="2" ry="2" />
<text  x="964.10" y="687.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="646.6" y="325" width="0.1" height="15.0" fill="rgb(240,106,20)" rx="2" ry="2" />
<text  x="649.58" y="335.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.01%)</title><rect x="676.8" y="197" width="0.1" height="15.0" fill="rgb(211,115,16)" rx="2" ry="2" />
<text  x="679.77" y="207.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.02%)</title><rect x="647.9" y="357" width="0.2" height="15.0" fill="rgb(216,39,33)" rx="2" ry="2" />
<text  x="650.88" y="367.5" ></text>
</g>
<g >
<title>Bitmap::Create (3 samples, 0.03%)</title><rect x="224.9" y="581" width="0.3" height="15.0" fill="rgb(248,125,31)" rx="2" ry="2" />
<text  x="227.87" y="591.5" ></text>
</g>
<g >
<title>_int_free (53 samples, 0.53%)</title><rect x="145.4" y="789" width="6.2" height="15.0" fill="rgb(212,32,16)" rx="2" ry="2" />
<text  x="148.38" y="799.5" ></text>
</g>
<g >
<title>Graphics::IsTransitionPending (1 samples, 0.01%)</title><rect x="1173.3" y="677" width="0.1" height="15.0" fill="rgb(218,157,3)" rx="2" ry="2" />
<text  x="1176.25" y="687.5" ></text>
</g>
<g >
<title>__x64_sys_poll (1 samples, 0.01%)</title><rect x="974.0" y="517" width="0.1" height="15.0" fill="rgb(241,26,34)" rx="2" ry="2" />
<text  x="976.95" y="527.5" ></text>
</g>
<g >
<title>RPG::EventCommand::~EventCommand (1,059 samples, 10.58%)</title><rect x="713.1" y="437" width="124.9" height="15.0" fill="rgb(246,36,27)" rx="2" ry="2" />
<text  x="716.09" y="447.5" >RPG::EventComma..</text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="715.5" y="325" width="0.1" height="15.0" fill="rgb(225,105,53)" rx="2" ry="2" />
<text  x="718.45" y="335.5" ></text>
</g>
<g >
<title>__GI___fxstat (1 samples, 0.01%)</title><rect x="920.9" y="229" width="0.1" height="15.0" fill="rgb(244,77,38)" rx="2" ry="2" />
<text  x="923.89" y="239.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (2 samples, 0.02%)</title><rect x="67.0" y="725" width="0.2" height="15.0" fill="rgb(244,19,47)" rx="2" ry="2" />
<text  x="69.96" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator= (3,643 samples, 36.41%)</title><rect x="257.9" y="597" width="429.6" height="15.0" fill="rgb(239,109,12)" rx="2" ry="2" />
<text  x="260.89" y="607.5" >std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCo..</text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.04%)</title><rect x="649.3" y="325" width="0.5" height="15.0" fill="rgb(253,1,43)" rx="2" ry="2" />
<text  x="652.29" y="335.5" ></text>
</g>
<g >
<title>fread (2 samples, 0.02%)</title><rect x="920.9" y="309" width="0.2" height="15.0" fill="rgb(246,133,24)" rx="2" ry="2" />
<text  x="923.89" y="319.5" ></text>
</g>
<g >
<title>handle_edge_irq (5 samples, 0.05%)</title><rect x="1128.2" y="549" width="0.6" height="15.0" fill="rgb(248,76,3)" rx="2" ry="2" />
<text  x="1131.21" y="559.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="974.1" y="549" width="0.1" height="15.0" fill="rgb(253,23,41)" rx="2" ry="2" />
<text  x="977.07" y="559.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (3 samples, 0.03%)</title><rect x="138.2" y="757" width="0.3" height="15.0" fill="rgb(248,227,13)" rx="2" ry="2" />
<text  x="141.19" y="767.5" ></text>
</g>
<g >
<title>xhci_msi_irq (4 samples, 0.04%)</title><rect x="829.6" y="213" width="0.5" height="15.0" fill="rgb(207,61,16)" rx="2" ry="2" />
<text  x="832.61" y="223.5" ></text>
</g>
<g >
<title>__sched_text_start (90 samples, 0.90%)</title><rect x="54.3" y="677" width="10.7" height="15.0" fill="rgb(219,26,34)" rx="2" ry="2" />
<text  x="57.34" y="687.5" ></text>
</g>
<g >
<title>native_write_msr (69 samples, 0.69%)</title><rect x="55.5" y="565" width="8.2" height="15.0" fill="rgb(254,197,40)" rx="2" ry="2" />
<text  x="58.52" y="575.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="826.7" y="261" width="0.1" height="15.0" fill="rgb(249,39,20)" rx="2" ry="2" />
<text  x="829.66" y="271.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.02%)</title><rect x="676.7" y="357" width="0.2" height="15.0" fill="rgb(250,36,46)" rx="2" ry="2" />
<text  x="679.65" y="367.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="642.3" y="213" width="0.2" height="15.0" fill="rgb(242,124,51)" rx="2" ry="2" />
<text  x="645.34" y="223.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.01%)</title><rect x="920.5" y="53" width="0.1" height="15.0" fill="rgb(248,177,42)" rx="2" ry="2" />
<text  x="923.53" y="63.5" ></text>
</g>
<g >
<title>ret_from_intr (4 samples, 0.04%)</title><rect x="891.0" y="405" width="0.5" height="15.0" fill="rgb(226,87,6)" rx="2" ry="2" />
<text  x="894.05" y="415.5" ></text>
</g>
<g >
<title>attach_entity_load_avg (1 samples, 0.01%)</title><rect x="326.6" y="197" width="0.2" height="15.0" fill="rgb(251,218,32)" rx="2" ry="2" />
<text  x="329.64" y="207.5" ></text>
</g>
<g >
<title>usb_submit_urb (1 samples, 0.01%)</title><rect x="133.7" y="533" width="0.1" height="15.0" fill="rgb(209,10,16)" rx="2" ry="2" />
<text  x="136.71" y="543.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (1 samples, 0.01%)</title><rect x="958.0" y="613" width="0.2" height="15.0" fill="rgb(212,3,25)" rx="2" ry="2" />
<text  x="961.03" y="623.5" ></text>
</g>
<g >
<title>i40e_napi_poll (1 samples, 0.01%)</title><rect x="1128.8" y="517" width="0.1" height="15.0" fill="rgb(230,81,6)" rx="2" ry="2" />
<text  x="1131.79" y="527.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (1 samples, 0.01%)</title><rect x="255.1" y="645" width="0.1" height="15.0" fill="rgb(206,98,51)" rx="2" ry="2" />
<text  x="258.06" y="655.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="891.3" y="229" width="0.1" height="15.0" fill="rgb(206,90,43)" rx="2" ry="2" />
<text  x="894.29" y="239.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (3 samples, 0.03%)</title><rect x="1133.3" y="453" width="0.3" height="15.0" fill="rgb(215,70,23)" rx="2" ry="2" />
<text  x="1136.28" y="463.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipTo (183 samples, 1.83%)</title><rect x="928.7" y="597" width="21.5" height="15.0" fill="rgb(232,189,14)" rx="2" ry="2" />
<text  x="931.67" y="607.5" >G..</text>
</g>
<g >
<title>AsyncHandler::IsFilePending (89 samples, 0.89%)</title><rect x="1174.2" y="661" width="10.5" height="15.0" fill="rgb(206,22,29)" rx="2" ry="2" />
<text  x="1177.20" y="671.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.01%)</title><rect x="253.5" y="581" width="0.1" height="15.0" fill="rgb(239,71,28)" rx="2" ry="2" />
<text  x="256.52" y="591.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="891.3" y="181" width="0.1" height="15.0" fill="rgb(208,78,12)" rx="2" ry="2" />
<text  x="894.29" y="191.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (1 samples, 0.01%)</title><rect x="960.0" y="533" width="0.2" height="15.0" fill="rgb(240,95,41)" rx="2" ry="2" />
<text  x="963.04" y="543.5" ></text>
</g>
<g >
<title>XQueryKeymap (1 samples, 0.01%)</title><rect x="963.0" y="549" width="0.1" height="15.0" fill="rgb(210,137,45)" rx="2" ry="2" />
<text  x="965.99" y="559.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.02%)</title><rect x="964.5" y="565" width="0.3" height="15.0" fill="rgb(224,10,3)" rx="2" ry="2" />
<text  x="967.52" y="575.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="51.3" y="725" width="0.1" height="15.0" fill="rgb(238,87,46)" rx="2" ry="2" />
<text  x="54.28" y="735.5" ></text>
</g>
<g >
<title>pick_next_task_fair (6 samples, 0.06%)</title><rect x="64.1" y="661" width="0.7" height="15.0" fill="rgb(229,26,17)" rx="2" ry="2" />
<text  x="67.13" y="671.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="638.8" y="309" width="0.1" height="15.0" fill="rgb(229,100,34)" rx="2" ry="2" />
<text  x="641.80" y="319.5" ></text>
</g>
<g >
<title>__atomic_add (2 samples, 0.02%)</title><rect x="225.3" y="533" width="0.3" height="15.0" fill="rgb(228,106,51)" rx="2" ry="2" />
<text  x="228.34" y="543.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (2 samples, 0.02%)</title><rect x="647.9" y="277" width="0.2" height="15.0" fill="rgb(240,105,41)" rx="2" ry="2" />
<text  x="650.88" y="287.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (4 samples, 0.04%)</title><rect x="638.8" y="341" width="0.5" height="15.0" fill="rgb(207,145,22)" rx="2" ry="2" />
<text  x="641.80" y="351.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (2 samples, 0.02%)</title><rect x="973.0" y="405" width="0.2" height="15.0" fill="rgb(216,180,11)" rx="2" ry="2" />
<text  x="976.01" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (5 samples, 0.05%)</title><rect x="973.0" y="453" width="0.6" height="15.0" fill="rgb(234,108,1)" rx="2" ry="2" />
<text  x="976.01" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (5 samples, 0.05%)</title><rect x="705.2" y="565" width="0.6" height="15.0" fill="rgb(220,3,45)" rx="2" ry="2" />
<text  x="708.19" y="575.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="708.5" y="485" width="0.1" height="15.0" fill="rgb(243,201,35)" rx="2" ry="2" />
<text  x="711.49" y="495.5" ></text>
</g>
<g >
<title>__gconv (1 samples, 0.01%)</title><rect x="254.8" y="597" width="0.1" height="15.0" fill="rgb(234,65,48)" rx="2" ry="2" />
<text  x="257.82" y="607.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="250.0" y="581" width="0.1" height="15.0" fill="rgb(209,198,13)" rx="2" ry="2" />
<text  x="252.99" y="591.5" ></text>
</g>
<g >
<title>std::move&lt;Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="254.7" y="581" width="0.1" height="15.0" fill="rgb(205,173,5)" rx="2" ry="2" />
<text  x="257.70" y="591.5" ></text>
</g>
<g >
<title>__libc_recvmsg (10 samples, 0.10%)</title><rect x="972.4" y="517" width="1.2" height="15.0" fill="rgb(241,203,8)" rx="2" ry="2" />
<text  x="975.42" y="527.5" ></text>
</g>
<g >
<title>_int_malloc (2 samples, 0.02%)</title><rect x="325.3" y="389" width="0.3" height="15.0" fill="rgb(234,5,18)" rx="2" ry="2" />
<text  x="328.34" y="399.5" ></text>
</g>
<g >
<title>__gconv_transform_utf8_internal (1 samples, 0.01%)</title><rect x="254.8" y="581" width="0.1" height="15.0" fill="rgb(231,71,33)" rx="2" ry="2" />
<text  x="257.82" y="591.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (2 samples, 0.02%)</title><rect x="1134.6" y="581" width="0.2" height="15.0" fill="rgb(241,0,25)" rx="2" ry="2" />
<text  x="1137.57" y="591.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::_M_allocate (86 samples, 0.86%)</title><rect x="258.0" y="565" width="10.1" height="15.0" fill="rgb(254,181,17)" rx="2" ry="2" />
<text  x="261.01" y="575.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (5 samples, 0.05%)</title><rect x="1134.2" y="613" width="0.6" height="15.0" fill="rgb(235,94,36)" rx="2" ry="2" />
<text  x="1137.22" y="623.5" ></text>
</g>
<g >
<title>glXSwapBuffers (1 samples, 0.01%)</title><rect x="95.0" y="789" width="0.1" height="15.0" fill="rgb(240,144,32)" rx="2" ry="2" />
<text  x="98.03" y="799.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (1 samples, 0.01%)</title><rect x="138.4" y="741" width="0.1" height="15.0" fill="rgb(235,212,1)" rx="2" ry="2" />
<text  x="141.42" y="751.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2 samples, 0.02%)</title><rect x="1155.8" y="565" width="0.2" height="15.0" fill="rgb(217,140,54)" rx="2" ry="2" />
<text  x="1158.80" y="575.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (46 samples, 0.46%)</title><rect x="965.6" y="469" width="5.4" height="15.0" fill="rgb(212,181,1)" rx="2" ry="2" />
<text  x="968.58" y="479.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.01%)</title><rect x="962.9" y="421" width="0.1" height="15.0" fill="rgb(208,180,48)" rx="2" ry="2" />
<text  x="965.87" y="431.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (13 samples, 0.13%)</title><rect x="959.2" y="661" width="1.5" height="15.0" fill="rgb(216,89,36)" rx="2" ry="2" />
<text  x="962.21" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (4 samples, 0.04%)</title><rect x="921.7" y="341" width="0.5" height="15.0" fill="rgb(246,125,18)" rx="2" ry="2" />
<text  x="924.71" y="351.5" ></text>
</g>
<g >
<title>trigger_load_balance (1 samples, 0.01%)</title><rect x="638.8" y="213" width="0.1" height="15.0" fill="rgb(227,102,11)" rx="2" ry="2" />
<text  x="641.80" y="223.5" ></text>
</g>
<g >
<title>ImagePNG::ReadPNG (1 samples, 0.01%)</title><rect x="920.5" y="309" width="0.1" height="15.0" fill="rgb(250,75,7)" rx="2" ry="2" />
<text  x="923.53" y="319.5" ></text>
</g>
<g >
<title>do_IRQ (6 samples, 0.06%)</title><rect x="1128.2" y="581" width="0.7" height="15.0" fill="rgb(246,120,30)" rx="2" ry="2" />
<text  x="1131.21" y="591.5" ></text>
</g>
<g >
<title>sock_poll (3 samples, 0.03%)</title><rect x="65.0" y="741" width="0.3" height="15.0" fill="rgb(242,61,4)" rx="2" ry="2" />
<text  x="67.96" y="751.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="908.1" y="325" width="0.2" height="15.0" fill="rgb(238,223,6)" rx="2" ry="2" />
<text  x="911.15" y="335.5" ></text>
</g>
<g >
<title>read_tsc (11 samples, 0.11%)</title><rect x="1153.6" y="549" width="1.3" height="15.0" fill="rgb(226,87,37)" rx="2" ry="2" />
<text  x="1156.56" y="559.5" ></text>
</g>
<g >
<title>Input::Update (7 samples, 0.07%)</title><rect x="255.2" y="677" width="0.8" height="15.0" fill="rgb(215,68,25)" rx="2" ry="2" />
<text  x="258.17" y="687.5" ></text>
</g>
<g >
<title>AsyncNext&lt;Scene_Map::UpdateStage1(MapUpdateAsyncContext)::&lt;lambda()&gt; &gt; (4 samples, 0.04%)</title><rect x="959.3" y="645" width="0.5" height="15.0" fill="rgb(232,156,40)" rx="2" ry="2" />
<text  x="962.33" y="655.5" ></text>
</g>
<g >
<title>_XEnq (1 samples, 0.01%)</title><rect x="71.9" y="789" width="0.1" height="15.0" fill="rgb(210,33,30)" rx="2" ry="2" />
<text  x="74.91" y="799.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.02%)</title><rect x="676.7" y="325" width="0.2" height="15.0" fill="rgb(230,208,16)" rx="2" ry="2" />
<text  x="679.65" y="335.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.01%)</title><rect x="676.7" y="277" width="0.1" height="15.0" fill="rgb(253,53,16)" rx="2" ry="2" />
<text  x="679.65" y="287.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::function (1 samples, 0.01%)</title><rect x="918.8" y="485" width="0.1" height="15.0" fill="rgb(233,7,40)" rx="2" ry="2" />
<text  x="921.76" y="495.5" ></text>
</g>
<g >
<title>handle_irq_event (5 samples, 0.05%)</title><rect x="829.5" y="261" width="0.6" height="15.0" fill="rgb(237,186,3)" rx="2" ry="2" />
<text  x="832.49" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (1 samples, 0.01%)</title><rect x="919.2" y="421" width="0.2" height="15.0" fill="rgb(233,169,36)" rx="2" ry="2" />
<text  x="922.23" y="431.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="265.7" y="421" width="0.1" height="15.0" fill="rgb(233,76,41)" rx="2" ry="2" />
<text  x="268.67" y="431.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.03%)</title><rect x="638.9" y="309" width="0.4" height="15.0" fill="rgb(213,161,27)" rx="2" ry="2" />
<text  x="641.92" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.01%)</title><rect x="919.0" y="485" width="0.1" height="15.0" fill="rgb(227,50,1)" rx="2" ry="2" />
<text  x="922.00" y="495.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.01%)</title><rect x="974.0" y="501" width="0.1" height="15.0" fill="rgb(251,60,7)" rx="2" ry="2" />
<text  x="976.95" y="511.5" ></text>
</g>
<g >
<title>unlink_chunk (142 samples, 1.42%)</title><rect x="891.5" y="405" width="16.8" height="15.0" fill="rgb(246,186,2)" rx="2" ry="2" />
<text  x="894.52" y="415.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="739.6" y="293" width="0.1" height="15.0" fill="rgb(221,60,35)" rx="2" ry="2" />
<text  x="742.63" y="303.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="971.0" y="421" width="0.1" height="15.0" fill="rgb(220,185,53)" rx="2" ry="2" />
<text  x="974.01" y="431.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (81 samples, 0.81%)</title><rect x="1163.7" y="677" width="9.6" height="15.0" fill="rgb(208,178,12)" rx="2" ry="2" />
<text  x="1166.70" y="687.5" ></text>
</g>
<g >
<title>SdlMixerAudio::SE_Play (9 samples, 0.09%)</title><rect x="916.6" y="517" width="1.1" height="15.0" fill="rgb(219,214,5)" rx="2" ry="2" />
<text  x="919.64" y="527.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (2 samples, 0.02%)</title><rect x="67.3" y="805" width="0.2" height="15.0" fill="rgb(254,22,29)" rx="2" ry="2" />
<text  x="70.31" y="815.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (2 samples, 0.02%)</title><rect x="973.8" y="597" width="0.3" height="15.0" fill="rgb(227,28,17)" rx="2" ry="2" />
<text  x="976.84" y="607.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, Drawable**, Drawable**&gt; (1 samples, 0.01%)</title><rect x="923.5" y="357" width="0.1" height="15.0" fill="rgb(215,53,36)" rx="2" ry="2" />
<text  x="926.48" y="367.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (5 samples, 0.05%)</title><rect x="254.2" y="597" width="0.6" height="15.0" fill="rgb(221,207,51)" rx="2" ry="2" />
<text  x="257.23" y="607.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.01%)</title><rect x="964.8" y="533" width="0.1" height="15.0" fill="rgb(227,58,26)" rx="2" ry="2" />
<text  x="967.76" y="543.5" ></text>
</g>
<g >
<title>usb_hcd_submit_urb (1 samples, 0.01%)</title><rect x="133.7" y="517" width="0.1" height="15.0" fill="rgb(225,162,34)" rx="2" ry="2" />
<text  x="136.71" y="527.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (7 samples, 0.07%)</title><rect x="1134.0" y="645" width="0.8" height="15.0" fill="rgb(211,69,38)" rx="2" ry="2" />
<text  x="1136.98" y="655.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.01%)</title><rect x="917.5" y="373" width="0.1" height="15.0" fill="rgb(231,219,51)" rx="2" ry="2" />
<text  x="920.47" y="383.5" ></text>
</g>
<g >
<title>x86_pmu_enable (69 samples, 0.69%)</title><rect x="55.5" y="613" width="8.2" height="15.0" fill="rgb(217,17,38)" rx="2" ry="2" />
<text  x="58.52" y="623.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="708.5" y="533" width="0.1" height="15.0" fill="rgb(229,79,50)" rx="2" ry="2" />
<text  x="711.49" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="974.2" y="565" width="0.2" height="15.0" fill="rgb(208,38,53)" rx="2" ry="2" />
<text  x="977.19" y="575.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="133.2" y="709" width="0.2" height="15.0" fill="rgb(244,44,33)" rx="2" ry="2" />
<text  x="136.24" y="719.5" ></text>
</g>
<g >
<title>__libc_recvmsg (2 samples, 0.02%)</title><rect x="973.6" y="517" width="0.2" height="15.0" fill="rgb(205,91,8)" rx="2" ry="2" />
<text  x="976.60" y="527.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="224.0" y="437" width="0.2" height="15.0" fill="rgb(231,11,49)" rx="2" ry="2" />
<text  x="227.04" y="447.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (3 samples, 0.03%)</title><rect x="254.3" y="565" width="0.4" height="15.0" fill="rgb(218,72,51)" rx="2" ry="2" />
<text  x="257.35" y="575.5" ></text>
</g>
<g >
<title>Bitmap::ConvertImage (4 samples, 0.04%)</title><rect x="919.4" y="309" width="0.4" height="15.0" fill="rgb(219,63,25)" rx="2" ry="2" />
<text  x="922.35" y="319.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.01%)</title><rect x="66.0" y="693" width="0.1" height="15.0" fill="rgb(228,34,3)" rx="2" ry="2" />
<text  x="69.02" y="703.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="51.3" y="741" width="0.1" height="15.0" fill="rgb(225,223,15)" rx="2" ry="2" />
<text  x="54.28" y="751.5" ></text>
</g>
<g >
<title>operator++ (1 samples, 0.01%)</title><rect x="921.4" y="453" width="0.1" height="15.0" fill="rgb(245,19,43)" rx="2" ry="2" />
<text  x="924.36" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.09%)</title><rect x="1187.1" y="805" width="1.0" height="15.0" fill="rgb(226,156,15)" rx="2" ry="2" />
<text  x="1190.05" y="815.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.01%)</title><rect x="66.8" y="677" width="0.2" height="15.0" fill="rgb(242,229,22)" rx="2" ry="2" />
<text  x="69.84" y="687.5" ></text>
</g>
<g >
<title>memcpy@plt (3 samples, 0.03%)</title><rect x="333.4" y="357" width="0.3" height="15.0" fill="rgb(230,89,12)" rx="2" ry="2" />
<text  x="336.36" y="367.5" ></text>
</g>
<g >
<title>Plane::GetZ (1 samples, 0.01%)</title><rect x="254.6" y="549" width="0.1" height="15.0" fill="rgb(216,0,29)" rx="2" ry="2" />
<text  x="257.59" y="559.5" ></text>
</g>
<g >
<title>operator() (7 samples, 0.07%)</title><rect x="252.5" y="629" width="0.8" height="15.0" fill="rgb(231,76,8)" rx="2" ry="2" />
<text  x="255.46" y="639.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (5,944 samples, 59.40%)</title><rect x="256.0" y="629" width="701.0" height="15.0" fill="rgb(252,147,5)" rx="2" ry="2" />
<text  x="259.00" y="639.5" >Game_CommonEvent::Update</text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="830.0" y="181" width="0.1" height="15.0" fill="rgb(223,65,21)" rx="2" ry="2" />
<text  x="832.96" y="191.5" ></text>
</g>
<g >
<title>__atomic_add (7 samples, 0.07%)</title><rect x="250.3" y="533" width="0.9" height="15.0" fill="rgb(221,48,31)" rx="2" ry="2" />
<text  x="253.34" y="543.5" ></text>
</g>
<g >
<title>__exchange_and_add (1 samples, 0.01%)</title><rect x="225.6" y="533" width="0.1" height="15.0" fill="rgb(222,123,12)" rx="2" ry="2" />
<text  x="228.57" y="543.5" ></text>
</g>
<g >
<title>glXSwapBuffers (4 samples, 0.04%)</title><rect x="1163.0" y="661" width="0.5" height="15.0" fill="rgb(237,75,10)" rx="2" ry="2" />
<text  x="1165.99" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.04%)</title><rect x="961.7" y="453" width="0.5" height="15.0" fill="rgb(230,92,20)" rx="2" ry="2" />
<text  x="964.69" y="463.5" ></text>
</g>
<g >
<title>udev_monitor_get_fd (1 samples, 0.01%)</title><rect x="964.3" y="565" width="0.1" height="15.0" fill="rgb(224,160,1)" rx="2" ry="2" />
<text  x="967.28" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="973.8" y="517" width="0.2" height="15.0" fill="rgb(219,210,25)" rx="2" ry="2" />
<text  x="976.84" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (1 samples, 0.01%)</title><rect x="960.4" y="485" width="0.1" height="15.0" fill="rgb(244,124,50)" rx="2" ry="2" />
<text  x="963.39" y="495.5" ></text>
</g>
<g >
<title>Sprite_Timer::Update (1 samples, 0.01%)</title><rect x="91.4" y="789" width="0.1" height="15.0" fill="rgb(213,6,28)" rx="2" ry="2" />
<text  x="94.37" y="799.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (1 samples, 0.01%)</title><rect x="1133.9" y="597" width="0.1" height="15.0" fill="rgb(218,213,13)" rx="2" ry="2" />
<text  x="1136.87" y="607.5" ></text>
</g>
<g >
<title>__GI___libc_read (1 samples, 0.01%)</title><rect x="920.5" y="181" width="0.1" height="15.0" fill="rgb(223,85,45)" rx="2" ry="2" />
<text  x="923.53" y="191.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (1 samples, 0.01%)</title><rect x="960.4" y="405" width="0.1" height="15.0" fill="rgb(236,169,31)" rx="2" ry="2" />
<text  x="963.39" y="415.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (13 samples, 0.13%)</title><rect x="79.3" y="789" width="1.6" height="15.0" fill="rgb(236,119,12)" rx="2" ry="2" />
<text  x="82.34" y="799.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (243 samples, 2.43%)</title><rect x="1134.8" y="677" width="28.7" height="15.0" fill="rgb(212,72,11)" rx="2" ry="2" />
<text  x="1137.81" y="687.5" >[l..</text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="224.0" y="453" width="0.2" height="15.0" fill="rgb(228,63,32)" rx="2" ry="2" />
<text  x="227.04" y="463.5" ></text>
</g>
<g >
<title>__GI__IO_fread (2 samples, 0.02%)</title><rect x="920.9" y="293" width="0.2" height="15.0" fill="rgb(215,0,43)" rx="2" ry="2" />
<text  x="923.89" y="303.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="715.5" y="293" width="0.1" height="15.0" fill="rgb(211,138,1)" rx="2" ry="2" />
<text  x="718.45" y="303.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.01%)</title><rect x="1133.7" y="405" width="0.2" height="15.0" fill="rgb(215,111,34)" rx="2" ry="2" />
<text  x="1136.75" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (520 samples, 5.20%)</title><rect x="277.9" y="485" width="61.4" height="15.0" fill="rgb(228,154,14)" rx="2" ry="2" />
<text  x="280.94" y="495.5" >std::_..</text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="974.2" y="549" width="0.2" height="15.0" fill="rgb(230,182,20)" rx="2" ry="2" />
<text  x="977.19" y="559.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (5 samples, 0.05%)</title><rect x="921.6" y="405" width="0.6" height="15.0" fill="rgb(252,75,23)" rx="2" ry="2" />
<text  x="924.59" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_getpid (2 samples, 0.02%)</title><rect x="53.3" y="773" width="0.2" height="15.0" fill="rgb(229,122,38)" rx="2" ry="2" />
<text  x="56.28" y="783.5" ></text>
</g>
<g >
<title>run_rebalance_domains (3 samples, 0.03%)</title><rect x="638.9" y="277" width="0.4" height="15.0" fill="rgb(238,194,34)" rx="2" ry="2" />
<text  x="641.92" y="287.5" ></text>
</g>
<g >
<title>Sprite::GetZ (2 samples, 0.02%)</title><rect x="70.9" y="789" width="0.2" height="15.0" fill="rgb(227,8,53)" rx="2" ry="2" />
<text  x="73.85" y="799.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.01%)</title><rect x="1140.8" y="613" width="0.1" height="15.0" fill="rgb(205,2,51)" rx="2" ry="2" />
<text  x="1143.82" y="623.5" ></text>
</g>
<g >
<title>__GI__IO_file_xsgetn (2 samples, 0.02%)</title><rect x="920.9" y="277" width="0.2" height="15.0" fill="rgb(239,104,44)" rx="2" ry="2" />
<text  x="923.89" y="287.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.01%)</title><rect x="101.2" y="709" width="0.1" height="15.0" fill="rgb(236,153,3)" rx="2" ry="2" />
<text  x="104.16" y="719.5" ></text>
</g>
<g >
<title>Cache::System (1 samples, 0.01%)</title><rect x="960.2" y="565" width="0.1" height="15.0" fill="rgb(252,141,9)" rx="2" ry="2" />
<text  x="963.16" y="575.5" ></text>
</g>
<g >
<title>__fdget_pos (1 samples, 0.01%)</title><rect x="66.3" y="741" width="0.1" height="15.0" fill="rgb(211,62,42)" rx="2" ry="2" />
<text  x="69.25" y="751.5" ></text>
</g>
<g >
<title>new_sync_write (2 samples, 0.02%)</title><rect x="66.7" y="709" width="0.3" height="15.0" fill="rgb(229,157,2)" rx="2" ry="2" />
<text  x="69.72" y="719.5" ></text>
</g>
<g >
<title>Bitmap::Blit (1 samples, 0.01%)</title><rect x="919.5" y="293" width="0.1" height="15.0" fill="rgb(209,217,48)" rx="2" ry="2" />
<text  x="922.47" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2 samples, 0.02%)</title><rect x="922.8" y="389" width="0.2" height="15.0" fill="rgb(208,194,4)" rx="2" ry="2" />
<text  x="925.77" y="399.5" ></text>
</g>
<g >
<title>eventfd_write (3 samples, 0.03%)</title><rect x="66.4" y="709" width="0.3" height="15.0" fill="rgb(244,187,5)" rx="2" ry="2" />
<text  x="69.37" y="719.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (1 samples, 0.01%)</title><rect x="1133.9" y="565" width="0.1" height="15.0" fill="rgb(206,145,22)" rx="2" ry="2" />
<text  x="1136.87" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;RPG::SaveEventExecFrame&gt;::destroy&lt;RPG::SaveEventExecFrame&gt; (1,692 samples, 16.91%)</title><rect x="708.7" y="549" width="199.6" height="15.0" fill="rgb(245,223,30)" rx="2" ry="2" />
<text  x="711.73" y="559.5" >__gnu_cxx::new_allocator&lt;R..</text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (2 samples, 0.02%)</title><rect x="254.8" y="645" width="0.3" height="15.0" fill="rgb(211,174,19)" rx="2" ry="2" />
<text  x="257.82" y="655.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (2 samples, 0.02%)</title><rect x="647.9" y="261" width="0.2" height="15.0" fill="rgb(230,79,19)" rx="2" ry="2" />
<text  x="650.88" y="271.5" ></text>
</g>
<g >
<title>std::_Temporary_buffer&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable*&gt;::~_Temporary_buffer (1 samples, 0.01%)</title><rect x="253.5" y="613" width="0.1" height="15.0" fill="rgb(241,96,40)" rx="2" ry="2" />
<text  x="256.52" y="623.5" ></text>
</g>
<g >
<title>Game_Map::LoopHorizontal (1 samples, 0.01%)</title><rect x="228.2" y="629" width="0.1" height="15.0" fill="rgb(250,77,27)" rx="2" ry="2" />
<text  x="231.17" y="639.5" ></text>
</g>
<g >
<title>[[heap]] (165 samples, 1.65%)</title><rect x="70.5" y="805" width="19.5" height="15.0" fill="rgb(247,63,29)" rx="2" ry="2" />
<text  x="73.50" y="815.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (2 samples, 0.02%)</title><rect x="958.2" y="597" width="0.2" height="15.0" fill="rgb(215,102,37)" rx="2" ry="2" />
<text  x="961.15" y="607.5" ></text>
</g>
<g >
<title>Game_Map::SetNeedRefresh (1 samples, 0.01%)</title><rect x="90.8" y="789" width="0.1" height="15.0" fill="rgb(254,47,37)" rx="2" ry="2" />
<text  x="93.78" y="799.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandConditionalBranch (44 samples, 0.44%)</title><rect x="692.7" y="597" width="5.2" height="15.0" fill="rgb(213,51,27)" rx="2" ry="2" />
<text  x="695.69" y="607.5" ></text>
</g>
<g >
<title>unlink_chunk (3 samples, 0.03%)</title><rect x="1188.6" y="789" width="0.3" height="15.0" fill="rgb(233,221,24)" rx="2" ry="2" />
<text  x="1191.58" y="799.5" ></text>
</g>
<g >
<title>Cache::SystemOrBlack (3 samples, 0.03%)</title><rect x="959.8" y="613" width="0.4" height="15.0" fill="rgb(234,116,30)" rx="2" ry="2" />
<text  x="962.80" y="623.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (1 samples, 0.01%)</title><rect x="961.9" y="373" width="0.1" height="15.0" fill="rgb(217,104,7)" rx="2" ry="2" />
<text  x="964.92" y="383.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="265.7" y="405" width="0.1" height="15.0" fill="rgb(254,125,36)" rx="2" ry="2" />
<text  x="268.67" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (1 samples, 0.01%)</title><rect x="919.4" y="229" width="0.1" height="15.0" fill="rgb(207,207,23)" rx="2" ry="2" />
<text  x="922.35" y="239.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="739.5" y="261" width="0.1" height="15.0" fill="rgb(232,96,37)" rx="2" ry="2" />
<text  x="742.51" y="271.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.01%)</title><rect x="891.4" y="341" width="0.1" height="15.0" fill="rgb(254,33,26)" rx="2" ry="2" />
<text  x="894.40" y="351.5" ></text>
</g>
<g >
<title>irq_entries_start (2 samples, 0.02%)</title><rect x="1188.3" y="805" width="0.3" height="15.0" fill="rgb(219,221,31)" rx="2" ry="2" />
<text  x="1191.35" y="815.5" ></text>
</g>
<g >
<title>_int_free (15 samples, 0.15%)</title><rect x="92.0" y="789" width="1.7" height="15.0" fill="rgb(233,88,12)" rx="2" ry="2" />
<text  x="94.96" y="799.5" ></text>
</g>
<g >
<title>timekeeping_advance (1 samples, 0.01%)</title><rect x="63.7" y="517" width="0.1" height="15.0" fill="rgb(242,96,8)" rx="2" ry="2" />
<text  x="66.66" y="527.5" ></text>
</g>
<g >
<title>poll_schedule_timeout.constprop.14 (91 samples, 0.91%)</title><rect x="54.2" y="741" width="10.8" height="15.0" fill="rgb(209,32,42)" rx="2" ry="2" />
<text  x="57.22" y="751.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (13 samples, 0.13%)</title><rect x="1132.1" y="469" width="1.5" height="15.0" fill="rgb(236,185,28)" rx="2" ry="2" />
<text  x="1135.10" y="479.5" ></text>
</g>
<g >
<title>activate_task (1 samples, 0.01%)</title><rect x="963.0" y="101" width="0.1" height="15.0" fill="rgb(236,10,23)" rx="2" ry="2" />
<text  x="965.99" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator++ (1 samples, 0.01%)</title><rect x="179.3" y="661" width="0.2" height="15.0" fill="rgb(237,190,53)" rx="2" ry="2" />
<text  x="182.35" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.08%)</title><rect x="963.2" y="421" width="1.0" height="15.0" fill="rgb(242,81,29)" rx="2" ry="2" />
<text  x="966.22" y="431.5" ></text>
</g>
<g >
<title>Player::MainLoop (1 samples, 0.01%)</title><rect x="70.7" y="789" width="0.2" height="15.0" fill="rgb(243,51,33)" rx="2" ry="2" />
<text  x="73.73" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (1 samples, 0.01%)</title><rect x="179.3" y="645" width="0.2" height="15.0" fill="rgb(225,163,1)" rx="2" ry="2" />
<text  x="182.35" y="655.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="646.7" y="293" width="0.1" height="15.0" fill="rgb(235,178,7)" rx="2" ry="2" />
<text  x="649.70" y="303.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="224.2" y="485" width="0.1" height="15.0" fill="rgb(231,88,29)" rx="2" ry="2" />
<text  x="227.16" y="495.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.01%)</title><rect x="1162.9" y="533" width="0.1" height="15.0" fill="rgb(223,114,7)" rx="2" ry="2" />
<text  x="1165.88" y="543.5" ></text>
</g>
<g >
<title>operator() (3 samples, 0.03%)</title><rect x="224.9" y="597" width="0.3" height="15.0" fill="rgb(237,19,14)" rx="2" ry="2" />
<text  x="227.87" y="607.5" ></text>
</g>
<g >
<title>free@plt (25 samples, 0.25%)</title><rect x="830.4" y="341" width="3.0" height="15.0" fill="rgb(230,50,16)" rx="2" ry="2" />
<text  x="833.43" y="351.5" ></text>
</g>
<g >
<title>eventfd_poll (1 samples, 0.01%)</title><rect x="54.0" y="741" width="0.1" height="15.0" fill="rgb(214,149,9)" rx="2" ry="2" />
<text  x="56.99" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator++ (114 samples, 1.14%)</title><rect x="164.0" y="677" width="13.5" height="15.0" fill="rgb(220,116,36)" rx="2" ry="2" />
<text  x="167.02" y="687.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (1 samples, 0.01%)</title><rect x="921.6" y="357" width="0.1" height="15.0" fill="rgb(244,189,20)" rx="2" ry="2" />
<text  x="924.59" y="367.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="64.0" y="485" width="0.1" height="15.0" fill="rgb(219,15,15)" rx="2" ry="2" />
<text  x="67.01" y="495.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (10 samples, 0.10%)</title><rect x="646.7" y="357" width="1.2" height="15.0" fill="rgb(242,49,49)" rx="2" ry="2" />
<text  x="649.70" y="367.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (9 samples, 0.09%)</title><rect x="963.1" y="549" width="1.1" height="15.0" fill="rgb(237,47,38)" rx="2" ry="2" />
<text  x="966.10" y="559.5" ></text>
</g>
<g >
<title>__wake_up_locked_key (3 samples, 0.03%)</title><rect x="66.4" y="693" width="0.3" height="15.0" fill="rgb(216,50,14)" rx="2" ry="2" />
<text  x="69.37" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (128 samples, 1.28%)</title><rect x="51.9" y="789" width="15.1" height="15.0" fill="rgb(209,160,23)" rx="2" ry="2" />
<text  x="54.86" y="799.5" ></text>
</g>
<g >
<title>__GI___poll (9 samples, 0.09%)</title><rect x="963.1" y="453" width="1.1" height="15.0" fill="rgb(246,160,36)" rx="2" ry="2" />
<text  x="966.10" y="463.5" ></text>
</g>
<g >
<title>trigger_load_balance (1 samples, 0.01%)</title><rect x="739.5" y="197" width="0.1" height="15.0" fill="rgb(230,24,36)" rx="2" ry="2" />
<text  x="742.51" y="207.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (39 samples, 0.39%)</title><rect x="919.0" y="549" width="4.6" height="15.0" fill="rgb(252,91,17)" rx="2" ry="2" />
<text  x="922.00" y="559.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.01%)</title><rect x="224.3" y="517" width="0.1" height="15.0" fill="rgb(230,0,53)" rx="2" ry="2" />
<text  x="227.28" y="527.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="250.0" y="549" width="0.1" height="15.0" fill="rgb(208,137,46)" rx="2" ry="2" />
<text  x="252.99" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (2,953 samples, 29.51%)</title><rect x="339.3" y="485" width="348.2" height="15.0" fill="rgb(221,168,16)" rx="2" ry="2" />
<text  x="342.26" y="495.5" >std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector</text>
</g>
<g >
<title>__x64_sys_poll (8 samples, 0.08%)</title><rect x="963.2" y="405" width="1.0" height="15.0" fill="rgb(237,147,48)" rx="2" ry="2" />
<text  x="966.22" y="415.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="656.0" y="357" width="0.1" height="15.0" fill="rgb(243,63,29)" rx="2" ry="2" />
<text  x="659.02" y="367.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;RPG::EventCommand const*, std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt; &gt;, RPG::EventCommand*&gt; (3,556 samples, 35.54%)</title><rect x="268.1" y="549" width="419.4" height="15.0" fill="rgb(222,221,22)" rx="2" ry="2" />
<text  x="271.15" y="559.5" >std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;RPG:..</text>
</g>
<g >
<title>__fget (1 samples, 0.01%)</title><rect x="974.0" y="453" width="0.1" height="15.0" fill="rgb(214,67,20)" rx="2" ry="2" />
<text  x="976.95" y="463.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_a&lt;unsigned char*, unsigned long, unsigned char&gt; (1 samples, 0.01%)</title><rect x="920.4" y="261" width="0.1" height="15.0" fill="rgb(234,18,54)" rx="2" ry="2" />
<text  x="923.41" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (5 samples, 0.05%)</title><rect x="656.3" y="453" width="0.5" height="15.0" fill="rgb(234,17,11)" rx="2" ry="2" />
<text  x="659.25" y="463.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="676.5" y="325" width="0.2" height="15.0" fill="rgb(242,62,7)" rx="2" ry="2" />
<text  x="679.54" y="335.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (41 samples, 0.41%)</title><rect x="179.9" y="565" width="4.9" height="15.0" fill="rgb(232,167,11)" rx="2" ry="2" />
<text  x="182.94" y="575.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (3 samples, 0.03%)</title><rect x="927.4" y="581" width="0.3" height="15.0" fill="rgb(208,222,30)" rx="2" ry="2" />
<text  x="930.37" y="591.5" ></text>
</g>
<g >
<title>rcu_check_callbacks (1 samples, 0.01%)</title><rect x="646.8" y="245" width="0.1" height="15.0" fill="rgb(214,27,29)" rx="2" ry="2" />
<text  x="649.82" y="255.5" ></text>
</g>
<g >
<title>schedule (8 samples, 0.08%)</title><rect x="963.2" y="325" width="1.0" height="15.0" fill="rgb(235,53,37)" rx="2" ry="2" />
<text  x="966.22" y="335.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (19 samples, 0.19%)</title><rect x="703.8" y="581" width="2.2" height="15.0" fill="rgb(240,63,46)" rx="2" ry="2" />
<text  x="706.78" y="591.5" ></text>
</g>
<g >
<title>__fget (2 samples, 0.02%)</title><rect x="53.5" y="709" width="0.3" height="15.0" fill="rgb(239,109,8)" rx="2" ry="2" />
<text  x="56.52" y="719.5" ></text>
</g>
<g >
<title>Sprite::SetOpacity (1 samples, 0.01%)</title><rect x="961.0" y="629" width="0.1" height="15.0" fill="rgb(233,181,10)" rx="2" ry="2" />
<text  x="963.98" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (7 samples, 0.07%)</title><rect x="715.6" y="389" width="0.8" height="15.0" fill="rgb(243,20,25)" rx="2" ry="2" />
<text  x="718.57" y="399.5" ></text>
</g>
<g >
<title>[libGLX.so.0.0.0] (4 samples, 0.04%)</title><rect x="1163.0" y="645" width="0.5" height="15.0" fill="rgb(227,21,0)" rx="2" ry="2" />
<text  x="1165.99" y="655.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (1 samples, 0.01%)</title><rect x="255.8" y="597" width="0.1" height="15.0" fill="rgb(207,126,14)" rx="2" ry="2" />
<text  x="258.76" y="607.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="642.3" y="341" width="0.2" height="15.0" fill="rgb(224,16,54)" rx="2" ry="2" />
<text  x="645.34" y="351.5" ></text>
</g>
<g >
<title>std::__merge_sort_loop&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (2 samples, 0.02%)</title><rect x="254.0" y="581" width="0.2" height="15.0" fill="rgb(230,175,43)" rx="2" ry="2" />
<text  x="257.00" y="591.5" ></text>
</g>
<g >
<title>default_wake_function (1 samples, 0.01%)</title><rect x="963.0" y="149" width="0.1" height="15.0" fill="rgb(250,127,19)" rx="2" ry="2" />
<text  x="965.99" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.18%)</title><rect x="1160.9" y="645" width="2.1" height="15.0" fill="rgb(240,81,27)" rx="2" ry="2" />
<text  x="1163.87" y="655.5" ></text>
</g>
<g >
<title>__GI___strftime_l (1 samples, 0.01%)</title><rect x="916.4" y="469" width="0.1" height="15.0" fill="rgb(225,0,40)" rx="2" ry="2" />
<text  x="919.40" y="479.5" ></text>
</g>
<g >
<title>___sys_recvmsg (1 samples, 0.01%)</title><rect x="1188.0" y="741" width="0.1" height="15.0" fill="rgb(238,7,23)" rx="2" ry="2" />
<text  x="1191.00" y="751.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.01%)</title><rect x="962.0" y="357" width="0.2" height="15.0" fill="rgb(208,201,53)" rx="2" ry="2" />
<text  x="965.04" y="367.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="919.2" y="325" width="0.2" height="15.0" fill="rgb(248,212,2)" rx="2" ry="2" />
<text  x="922.23" y="335.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (5 samples, 0.05%)</title><rect x="921.6" y="389" width="0.6" height="15.0" fill="rgb(207,48,36)" rx="2" ry="2" />
<text  x="924.59" y="399.5" ></text>
</g>
<g >
<title>Game_Picture::Erase (4 samples, 0.04%)</title><rect x="914.6" y="581" width="0.5" height="15.0" fill="rgb(206,177,11)" rx="2" ry="2" />
<text  x="917.64" y="591.5" ></text>
</g>
<g >
<title>irq_exit (4 samples, 0.04%)</title><rect x="647.4" y="325" width="0.5" height="15.0" fill="rgb(254,213,53)" rx="2" ry="2" />
<text  x="650.41" y="335.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="1128.6" y="453" width="0.1" height="15.0" fill="rgb(232,27,39)" rx="2" ry="2" />
<text  x="1131.56" y="463.5" ></text>
</g>
<g >
<title>__lseek64 (1 samples, 0.01%)</title><rect x="920.3" y="261" width="0.1" height="15.0" fill="rgb(207,153,1)" rx="2" ry="2" />
<text  x="923.30" y="271.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (1 samples, 0.01%)</title><rect x="923.1" y="501" width="0.1" height="15.0" fill="rgb(247,36,5)" rx="2" ry="2" />
<text  x="926.13" y="511.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="250.0" y="565" width="0.1" height="15.0" fill="rgb(207,207,9)" rx="2" ry="2" />
<text  x="252.99" y="575.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (1 samples, 0.01%)</title><rect x="961.5" y="581" width="0.1" height="15.0" fill="rgb(208,121,20)" rx="2" ry="2" />
<text  x="964.45" y="591.5" ></text>
</g>
<g >
<title>GetRequest (1 samples, 0.01%)</title><rect x="960.4" y="517" width="0.1" height="15.0" fill="rgb(233,149,39)" rx="2" ry="2" />
<text  x="963.39" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned char&gt; &gt;::allocate (1 samples, 0.01%)</title><rect x="917.5" y="437" width="0.1" height="15.0" fill="rgb(239,38,44)" rx="2" ry="2" />
<text  x="920.47" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.04%)</title><rect x="917.0" y="469" width="0.5" height="15.0" fill="rgb(220,74,18)" rx="2" ry="2" />
<text  x="919.99" y="479.5" ></text>
</g>
<g >
<title>TilemapLayer::Draw (235 samples, 2.35%)</title><rect x="225.7" y="645" width="27.7" height="15.0" fill="rgb(224,138,0)" rx="2" ry="2" />
<text  x="228.69" y="655.5" >T..</text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="64.0" y="437" width="0.1" height="15.0" fill="rgb(245,175,12)" rx="2" ry="2" />
<text  x="67.01" y="447.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (29 samples, 0.29%)</title><rect x="971.5" y="645" width="3.4" height="15.0" fill="rgb(234,200,20)" rx="2" ry="2" />
<text  x="974.48" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.01%)</title><rect x="919.0" y="517" width="0.1" height="15.0" fill="rgb(218,49,48)" rx="2" ry="2" />
<text  x="922.00" y="527.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (46 samples, 0.46%)</title><rect x="965.6" y="453" width="5.4" height="15.0" fill="rgb(220,94,30)" rx="2" ry="2" />
<text  x="968.58" y="463.5" ></text>
</g>
<g >
<title>activate_task (1 samples, 0.01%)</title><rect x="326.6" y="261" width="0.2" height="15.0" fill="rgb(221,161,3)" rx="2" ry="2" />
<text  x="329.64" y="271.5" ></text>
</g>
<g >
<title>xcb_poll_for_reply64 (3 samples, 0.03%)</title><rect x="962.4" y="549" width="0.4" height="15.0" fill="rgb(205,113,51)" rx="2" ry="2" />
<text  x="965.40" y="559.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (3 samples, 0.03%)</title><rect x="63.7" y="645" width="0.3" height="15.0" fill="rgb(218,76,32)" rx="2" ry="2" />
<text  x="66.66" y="655.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="64.0" y="581" width="0.1" height="15.0" fill="rgb(227,187,41)" rx="2" ry="2" />
<text  x="67.01" y="591.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="64.0" y="421" width="0.1" height="15.0" fill="rgb(242,169,12)" rx="2" ry="2" />
<text  x="67.01" y="431.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (8 samples, 0.08%)</title><rect x="963.2" y="357" width="1.0" height="15.0" fill="rgb(250,96,54)" rx="2" ry="2" />
<text  x="966.22" y="367.5" ></text>
</g>
<g >
<title>main (8,695 samples, 86.90%)</title><rect x="159.8" y="773" width="1025.4" height="15.0" fill="rgb(209,52,36)" rx="2" ry="2" />
<text  x="162.77" y="783.5" >main</text>
</g>
<g >
<title>__strftime_internal (1 samples, 0.01%)</title><rect x="916.4" y="453" width="0.1" height="15.0" fill="rgb(241,63,18)" rx="2" ry="2" />
<text  x="919.40" y="463.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="961.6" y="421" width="0.1" height="15.0" fill="rgb(207,204,50)" rx="2" ry="2" />
<text  x="964.57" y="431.5" ></text>
</g>
<g >
<title>Output::Debug (2 samples, 0.02%)</title><rect x="916.4" y="517" width="0.2" height="15.0" fill="rgb(223,116,27)" rx="2" ry="2" />
<text  x="919.40" y="527.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (33 samples, 0.33%)</title><rect x="924.2" y="597" width="3.9" height="15.0" fill="rgb(215,145,11)" rx="2" ry="2" />
<text  x="927.19" y="607.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::expired (1 samples, 0.01%)</title><rect x="225.2" y="597" width="0.1" height="15.0" fill="rgb(242,72,40)" rx="2" ry="2" />
<text  x="228.22" y="607.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (14 samples, 0.14%)</title><rect x="99.0" y="725" width="1.7" height="15.0" fill="rgb(222,10,8)" rx="2" ry="2" />
<text  x="102.04" y="735.5" ></text>
</g>
<g >
<title>update_blocked_averages (3 samples, 0.03%)</title><rect x="64.5" y="645" width="0.3" height="15.0" fill="rgb(227,44,5)" rx="2" ry="2" />
<text  x="67.48" y="655.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (12 samples, 0.12%)</title><rect x="331.9" y="357" width="1.5" height="15.0" fill="rgb(215,63,0)" rx="2" ry="2" />
<text  x="334.95" y="367.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (11 samples, 0.11%)</title><rect x="251.2" y="549" width="1.3" height="15.0" fill="rgb(232,222,29)" rx="2" ry="2" />
<text  x="254.17" y="559.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (1 samples, 0.01%)</title><rect x="646.9" y="181" width="0.2" height="15.0" fill="rgb(227,164,24)" rx="2" ry="2" />
<text  x="649.94" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (956 samples, 9.55%)</title><rect x="725.2" y="357" width="112.8" height="15.0" fill="rgb(222,107,7)" rx="2" ry="2" />
<text  x="728.24" y="367.5" >__gnu_cxx::ne..</text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (3 samples, 0.03%)</title><rect x="224.9" y="565" width="0.3" height="15.0" fill="rgb(236,35,31)" rx="2" ry="2" />
<text  x="227.87" y="575.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandEnd (1,693 samples, 16.92%)</title><rect x="708.6" y="597" width="199.7" height="15.0" fill="rgb(226,75,17)" rx="2" ry="2" />
<text  x="711.61" y="607.5" >Game_Interpreter::CommandEnd</text>
</g>
<g >
<title>scheduler_tick (3 samples, 0.03%)</title><rect x="646.9" y="245" width="0.4" height="15.0" fill="rgb(215,122,47)" rx="2" ry="2" />
<text  x="649.94" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="962.4" y="485" width="0.2" height="15.0" fill="rgb(230,41,0)" rx="2" ry="2" />
<text  x="965.40" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (1 samples, 0.01%)</title><rect x="53.2" y="773" width="0.1" height="15.0" fill="rgb(252,103,32)" rx="2" ry="2" />
<text  x="56.16" y="783.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (5 samples, 0.05%)</title><rect x="928.1" y="597" width="0.6" height="15.0" fill="rgb(229,208,35)" rx="2" ry="2" />
<text  x="931.08" y="607.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="133.7" y="581" width="0.1" height="15.0" fill="rgb(234,40,27)" rx="2" ry="2" />
<text  x="136.71" y="591.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.01%)</title><rect x="963.0" y="117" width="0.1" height="15.0" fill="rgb(212,31,50)" rx="2" ry="2" />
<text  x="965.99" y="127.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.02%)</title><rect x="133.4" y="757" width="0.2" height="15.0" fill="rgb(209,105,3)" rx="2" ry="2" />
<text  x="136.35" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (448 samples, 4.48%)</title><rect x="285.2" y="437" width="52.9" height="15.0" fill="rgb(213,151,14)" rx="2" ry="2" />
<text  x="288.25" y="447.5" >std::..</text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (4 samples, 0.04%)</title><rect x="921.7" y="357" width="0.5" height="15.0" fill="rgb(239,82,35)" rx="2" ry="2" />
<text  x="924.71" y="367.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (9 samples, 0.09%)</title><rect x="963.1" y="485" width="1.1" height="15.0" fill="rgb(241,37,32)" rx="2" ry="2" />
<text  x="966.10" y="495.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.02%)</title><rect x="922.5" y="437" width="0.3" height="15.0" fill="rgb(243,117,4)" rx="2" ry="2" />
<text  x="925.54" y="447.5" ></text>
</g>
<g >
<title>find (8 samples, 0.08%)</title><rect x="921.5" y="437" width="0.9" height="15.0" fill="rgb(235,165,36)" rx="2" ry="2" />
<text  x="924.48" y="447.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (1 samples, 0.01%)</title><rect x="919.2" y="389" width="0.2" height="15.0" fill="rgb(244,54,20)" rx="2" ry="2" />
<text  x="922.23" y="399.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.01%)</title><rect x="133.7" y="549" width="0.1" height="15.0" fill="rgb(250,96,44)" rx="2" ry="2" />
<text  x="136.71" y="559.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (1 samples, 0.01%)</title><rect x="71.4" y="789" width="0.2" height="15.0" fill="rgb(235,164,16)" rx="2" ry="2" />
<text  x="74.44" y="799.5" ></text>
</g>
<g >
<title>Sprite::BlitScreenIntern (381 samples, 3.81%)</title><rect x="179.6" y="629" width="44.9" height="15.0" fill="rgb(252,211,30)" rx="2" ry="2" />
<text  x="182.58" y="639.5" >Spri..</text>
</g>
<g >
<title>std::_Rb_tree_increment (92 samples, 0.92%)</title><rect x="165.7" y="661" width="10.8" height="15.0" fill="rgb(230,11,30)" rx="2" ry="2" />
<text  x="168.67" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (75 samples, 0.75%)</title><rect x="713.1" y="421" width="8.8" height="15.0" fill="rgb(245,99,38)" rx="2" ry="2" />
<text  x="716.09" y="431.5" ></text>
</g>
<g >
<title>xhci_irq (3 samples, 0.03%)</title><rect x="891.0" y="277" width="0.4" height="15.0" fill="rgb(214,12,11)" rx="2" ry="2" />
<text  x="894.05" y="287.5" ></text>
</g>
<g >
<title>activate_task (2 samples, 0.02%)</title><rect x="66.5" y="597" width="0.2" height="15.0" fill="rgb(221,162,1)" rx="2" ry="2" />
<text  x="69.49" y="607.5" ></text>
</g>
<g >
<title>operator new (22 samples, 0.22%)</title><rect x="85.6" y="789" width="2.6" height="15.0" fill="rgb(244,14,48)" rx="2" ry="2" />
<text  x="88.59" y="799.5" ></text>
</g>
<g >
<title>ksys_read (5 samples, 0.05%)</title><rect x="65.7" y="757" width="0.6" height="15.0" fill="rgb(205,21,29)" rx="2" ry="2" />
<text  x="68.66" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::size (6 samples, 0.06%)</title><rect x="955.6" y="597" width="0.7" height="15.0" fill="rgb(226,71,1)" rx="2" ry="2" />
<text  x="958.56" y="607.5" ></text>
</g>
<g >
<title>__ext4_iget (1 samples, 0.01%)</title><rect x="920.6" y="117" width="0.2" height="15.0" fill="rgb(251,110,30)" rx="2" ry="2" />
<text  x="923.65" y="127.5" ></text>
</g>
<g >
<title>LoadBitmap&lt;(&lt;unnamed&gt;::Material::Type)9&gt; (2 samples, 0.02%)</title><rect x="959.6" y="533" width="0.2" height="15.0" fill="rgb(251,199,46)" rx="2" ry="2" />
<text  x="962.57" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (482 samples, 4.82%)</title><rect x="281.2" y="469" width="56.9" height="15.0" fill="rgb(245,111,31)" rx="2" ry="2" />
<text  x="284.24" y="479.5" >std::_..</text>
</g>
<g >
<title>__exchange_and_add (11 samples, 0.11%)</title><rect x="251.2" y="517" width="1.3" height="15.0" fill="rgb(244,53,3)" rx="2" ry="2" />
<text  x="254.17" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="255.5" y="629" width="0.1" height="15.0" fill="rgb(248,83,10)" rx="2" ry="2" />
<text  x="258.53" y="639.5" ></text>
</g>
<g >
<title>Sdl2Ui::ProcessEvents (2 samples, 0.02%)</title><rect x="91.0" y="789" width="0.3" height="15.0" fill="rgb(215,212,13)" rx="2" ry="2" />
<text  x="94.02" y="799.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (1 samples, 0.01%)</title><rect x="225.6" y="581" width="0.1" height="15.0" fill="rgb(216,79,32)" rx="2" ry="2" />
<text  x="228.57" y="591.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="224.2" y="453" width="0.1" height="15.0" fill="rgb(217,68,4)" rx="2" ry="2" />
<text  x="227.16" y="463.5" ></text>
</g>
<g >
<title>Game_Interpreter::Clear (6 samples, 0.06%)</title><rect x="256.7" y="613" width="0.7" height="15.0" fill="rgb(231,191,23)" rx="2" ry="2" />
<text  x="259.71" y="623.5" ></text>
</g>
<g >
<title>x86_pmu_enable (8 samples, 0.08%)</title><rect x="963.2" y="245" width="1.0" height="15.0" fill="rgb(232,58,45)" rx="2" ry="2" />
<text  x="966.22" y="255.5" ></text>
</g>
<g >
<title>Cache::System (2 samples, 0.02%)</title><rect x="960.4" y="565" width="0.2" height="15.0" fill="rgb(220,162,42)" rx="2" ry="2" />
<text  x="963.39" y="575.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="739.5" y="229" width="0.1" height="15.0" fill="rgb(222,190,36)" rx="2" ry="2" />
<text  x="742.51" y="239.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="908.1" y="293" width="0.2" height="15.0" fill="rgb(212,136,54)" rx="2" ry="2" />
<text  x="911.15" y="303.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (1 samples, 0.01%)</title><rect x="973.1" y="373" width="0.1" height="15.0" fill="rgb(210,171,4)" rx="2" ry="2" />
<text  x="976.13" y="383.5" ></text>
</g>
<g >
<title>schedule (90 samples, 0.90%)</title><rect x="54.3" y="693" width="10.7" height="15.0" fill="rgb(219,193,11)" rx="2" ry="2" />
<text  x="57.34" y="703.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (4 samples, 0.04%)</title><rect x="971.8" y="597" width="0.5" height="15.0" fill="rgb(235,183,43)" rx="2" ry="2" />
<text  x="974.83" y="607.5" ></text>
</g>
<g >
<title>pixman_region32_init (1 samples, 0.01%)</title><rect x="88.2" y="789" width="0.1" height="15.0" fill="rgb(253,217,37)" rx="2" ry="2" />
<text  x="91.19" y="799.5" ></text>
</g>
<g >
<title>usb_hcd_poll_rh_status (1 samples, 0.01%)</title><rect x="647.8" y="245" width="0.1" height="15.0" fill="rgb(221,103,15)" rx="2" ry="2" />
<text  x="650.76" y="255.5" ></text>
</g>
<g >
<title>usb_hcd_is_primary_hcd (1 samples, 0.01%)</title><rect x="829.6" y="197" width="0.1" height="15.0" fill="rgb(233,63,42)" rx="2" ry="2" />
<text  x="832.61" y="207.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (1 samples, 0.01%)</title><rect x="101.2" y="741" width="0.1" height="15.0" fill="rgb(226,209,40)" rx="2" ry="2" />
<text  x="104.16" y="751.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="708.5" y="501" width="0.1" height="15.0" fill="rgb(235,173,19)" rx="2" ry="2" />
<text  x="711.49" y="511.5" ></text>
</g>
<g >
<title>path_openat (2 samples, 0.02%)</title><rect x="920.6" y="149" width="0.3" height="15.0" fill="rgb(237,61,49)" rx="2" ry="2" />
<text  x="923.65" y="159.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (1 samples, 0.01%)</title><rect x="225.6" y="613" width="0.1" height="15.0" fill="rgb(249,174,21)" rx="2" ry="2" />
<text  x="228.57" y="623.5" ></text>
</g>
<g >
<title>Bitmap::ToneBlit (3 samples, 0.03%)</title><rect x="224.5" y="597" width="0.4" height="15.0" fill="rgb(251,175,19)" rx="2" ry="2" />
<text  x="227.51" y="607.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.01%)</title><rect x="917.5" y="405" width="0.1" height="15.0" fill="rgb(234,116,17)" rx="2" ry="2" />
<text  x="920.47" y="415.5" ></text>
</g>
<g >
<title>usb_submit_urb (1 samples, 0.01%)</title><rect x="891.3" y="149" width="0.1" height="15.0" fill="rgb(213,130,6)" rx="2" ry="2" />
<text  x="894.29" y="159.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (1 samples, 0.01%)</title><rect x="965.3" y="485" width="0.2" height="15.0" fill="rgb(250,110,43)" rx="2" ry="2" />
<text  x="968.34" y="495.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (11 samples, 0.11%)</title><rect x="972.3" y="549" width="1.3" height="15.0" fill="rgb(216,202,5)" rx="2" ry="2" />
<text  x="975.30" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (3 samples, 0.03%)</title><rect x="88.3" y="789" width="0.4" height="15.0" fill="rgb(218,218,50)" rx="2" ry="2" />
<text  x="91.31" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_M_lower_bound (1 samples, 0.01%)</title><rect x="919.2" y="405" width="0.2" height="15.0" fill="rgb(227,100,0)" rx="2" ry="2" />
<text  x="922.23" y="415.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (11 samples, 0.11%)</title><rect x="972.3" y="565" width="1.3" height="15.0" fill="rgb(244,127,5)" rx="2" ry="2" />
<text  x="975.30" y="575.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2,415 samples, 24.14%)</title><rect x="364.5" y="373" width="284.8" height="15.0" fill="rgb(215,122,33)" rx="2" ry="2" />
<text  x="367.50" y="383.5" >__GI___libc_malloc</text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (28 samples, 0.28%)</title><rect x="971.6" y="629" width="3.3" height="15.0" fill="rgb(246,147,6)" rx="2" ry="2" />
<text  x="974.60" y="639.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.02%)</title><rect x="223.9" y="501" width="0.3" height="15.0" fill="rgb(213,123,43)" rx="2" ry="2" />
<text  x="226.92" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.03%)</title><rect x="974.5" y="581" width="0.4" height="15.0" fill="rgb(221,51,8)" rx="2" ry="2" />
<text  x="977.54" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.07%)</title><rect x="1187.3" y="789" width="0.8" height="15.0" fill="rgb(251,81,17)" rx="2" ry="2" />
<text  x="1190.29" y="799.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="265.7" y="357" width="0.1" height="15.0" fill="rgb(245,113,34)" rx="2" ry="2" />
<text  x="268.67" y="367.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.09%)</title><rect x="324.6" y="421" width="1.1" height="15.0" fill="rgb(205,61,54)" rx="2" ry="2" />
<text  x="327.64" y="431.5" ></text>
</g>
<g >
<title>Game_Map::AddScreenY (1 samples, 0.01%)</title><rect x="957.6" y="597" width="0.1" height="15.0" fill="rgb(224,145,17)" rx="2" ry="2" />
<text  x="960.56" y="607.5" ></text>
</g>
<g >
<title>Sprite::SetY (1 samples, 0.01%)</title><rect x="958.5" y="597" width="0.1" height="15.0" fill="rgb(249,53,49)" rx="2" ry="2" />
<text  x="961.50" y="607.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;Drawable*&gt; (1 samples, 0.01%)</title><rect x="253.6" y="533" width="0.2" height="15.0" fill="rgb(219,220,52)" rx="2" ry="2" />
<text  x="256.64" y="543.5" ></text>
</g>
<g >
<title>deactivate_task (4 samples, 0.04%)</title><rect x="1161.3" y="533" width="0.5" height="15.0" fill="rgb(220,15,47)" rx="2" ry="2" />
<text  x="1164.34" y="543.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (1 samples, 0.01%)</title><rect x="962.5" y="405" width="0.1" height="15.0" fill="rgb(239,228,44)" rx="2" ry="2" />
<text  x="965.51" y="415.5" ></text>
</g>
<g >
<title>operator new@plt (27 samples, 0.27%)</title><rect x="652.8" y="389" width="3.2" height="15.0" fill="rgb(212,36,5)" rx="2" ry="2" />
<text  x="655.83" y="399.5" ></text>
</g>
<g >
<title>import_iovec (1 samples, 0.01%)</title><rect x="973.1" y="389" width="0.1" height="15.0" fill="rgb(236,172,16)" rx="2" ry="2" />
<text  x="976.13" y="399.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.02%)</title><rect x="67.0" y="805" width="0.2" height="15.0" fill="rgb(239,217,16)" rx="2" ry="2" />
<text  x="69.96" y="815.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.01%)</title><rect x="96.7" y="757" width="0.1" height="15.0" fill="rgb(253,125,8)" rx="2" ry="2" />
<text  x="99.68" y="767.5" ></text>
</g>
<g >
<title>_IO_new_file_seekoff (1 samples, 0.01%)</title><rect x="920.3" y="277" width="0.1" height="15.0" fill="rgb(213,50,1)" rx="2" ry="2" />
<text  x="923.30" y="287.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**&gt; (1 samples, 0.01%)</title><rect x="254.1" y="533" width="0.1" height="15.0" fill="rgb(254,115,29)" rx="2" ry="2" />
<text  x="257.11" y="543.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (2 samples, 0.02%)</title><rect x="255.8" y="613" width="0.2" height="15.0" fill="rgb(251,161,19)" rx="2" ry="2" />
<text  x="258.76" y="623.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;Drawable*&gt; (1 samples, 0.01%)</title><rect x="254.7" y="533" width="0.1" height="15.0" fill="rgb(240,131,26)" rx="2" ry="2" />
<text  x="257.70" y="543.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.01%)</title><rect x="133.2" y="661" width="0.2" height="15.0" fill="rgb(233,115,47)" rx="2" ry="2" />
<text  x="136.24" y="671.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (1 samples, 0.01%)</title><rect x="646.9" y="213" width="0.2" height="15.0" fill="rgb(229,197,35)" rx="2" ry="2" />
<text  x="649.94" y="223.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (1 samples, 0.01%)</title><rect x="179.3" y="677" width="0.2" height="15.0" fill="rgb(245,10,27)" rx="2" ry="2" />
<text  x="182.35" y="687.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (1 samples, 0.01%)</title><rect x="1187.9" y="661" width="0.1" height="15.0" fill="rgb(226,85,19)" rx="2" ry="2" />
<text  x="1190.88" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (1 samples, 0.01%)</title><rect x="921.4" y="437" width="0.1" height="15.0" fill="rgb(205,126,8)" rx="2" ry="2" />
<text  x="924.36" y="447.5" ></text>
</g>
<g >
<title>ret_from_intr (5 samples, 0.05%)</title><rect x="829.5" y="325" width="0.6" height="15.0" fill="rgb(231,71,51)" rx="2" ry="2" />
<text  x="832.49" y="335.5" ></text>
</g>
<g >
<title>[anon] (3 samples, 0.03%)</title><rect x="96.3" y="805" width="0.4" height="15.0" fill="rgb(219,103,28)" rx="2" ry="2" />
<text  x="99.32" y="815.5" ></text>
</g>
<g >
<title>do_nanosleep (16 samples, 0.16%)</title><rect x="1161.1" y="581" width="1.9" height="15.0" fill="rgb(218,137,22)" rx="2" ry="2" />
<text  x="1164.11" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (47 samples, 0.47%)</title><rect x="716.4" y="389" width="5.5" height="15.0" fill="rgb(222,76,9)" rx="2" ry="2" />
<text  x="719.40" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (4 samples, 0.04%)</title><rect x="917.7" y="485" width="0.5" height="15.0" fill="rgb(240,23,22)" rx="2" ry="2" />
<text  x="920.70" y="495.5" ></text>
</g>
<g >
<title>irq_work_interrupt (1 samples, 0.01%)</title><rect x="971.1" y="485" width="0.1" height="15.0" fill="rgb(219,11,27)" rx="2" ry="2" />
<text  x="974.12" y="495.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.02%)</title><rect x="255.8" y="645" width="0.2" height="15.0" fill="rgb(218,200,46)" rx="2" ry="2" />
<text  x="258.76" y="655.5" ></text>
</g>
<g >
<title>dequeue_task_fair (2 samples, 0.02%)</title><rect x="1161.3" y="517" width="0.3" height="15.0" fill="rgb(238,188,18)" rx="2" ry="2" />
<text  x="1164.34" y="527.5" ></text>
</g>
<g >
<title>map_id_range_down (1 samples, 0.01%)</title><rect x="1128.8" y="325" width="0.1" height="15.0" fill="rgb(234,215,14)" rx="2" ry="2" />
<text  x="1131.79" y="335.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandEndLoop (54 samples, 0.54%)</title><rect x="908.3" y="597" width="6.3" height="15.0" fill="rgb(213,9,2)" rx="2" ry="2" />
<text  x="911.27" y="607.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.01%)</title><rect x="891.3" y="165" width="0.1" height="15.0" fill="rgb(223,158,5)" rx="2" ry="2" />
<text  x="894.29" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (2 samples, 0.02%)</title><rect x="101.9" y="741" width="0.2" height="15.0" fill="rgb(253,228,36)" rx="2" ry="2" />
<text  x="104.87" y="751.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.03%)</title><rect x="133.6" y="789" width="0.3" height="15.0" fill="rgb(218,11,20)" rx="2" ry="2" />
<text  x="136.59" y="799.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (12 samples, 0.12%)</title><rect x="916.3" y="549" width="1.4" height="15.0" fill="rgb(244,41,25)" rx="2" ry="2" />
<text  x="919.29" y="559.5" ></text>
</g>
<g >
<title>std::__distance&lt;char*&gt; (37 samples, 0.37%)</title><rect x="333.7" y="405" width="4.4" height="15.0" fill="rgb(241,67,47)" rx="2" ry="2" />
<text  x="336.72" y="415.5" ></text>
</g>
<g >
<title>enqueue_entity (2 samples, 0.02%)</title><rect x="66.5" y="565" width="0.2" height="15.0" fill="rgb(253,164,8)" rx="2" ry="2" />
<text  x="69.49" y="575.5" ></text>
</g>
<g >
<title>Color::Color (1 samples, 0.01%)</title><rect x="923.2" y="485" width="0.2" height="15.0" fill="rgb(246,103,54)" rx="2" ry="2" />
<text  x="926.24" y="495.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n&lt;unsigned char*, unsigned long&gt; (1 samples, 0.01%)</title><rect x="917.6" y="437" width="0.1" height="15.0" fill="rgb(250,227,16)" rx="2" ry="2" />
<text  x="920.58" y="447.5" ></text>
</g>
<g >
<title>malloc_consolidate (592 samples, 5.92%)</title><rect x="838.5" y="421" width="69.8" height="15.0" fill="rgb(230,228,26)" rx="2" ry="2" />
<text  x="841.45" y="431.5" >malloc_..</text>
</g>
<g >
<title>Cache::SystemOrBlack (2 samples, 0.02%)</title><rect x="960.4" y="597" width="0.2" height="15.0" fill="rgb(219,73,7)" rx="2" ry="2" />
<text  x="963.39" y="607.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="54.8" y="597" width="0.1" height="15.0" fill="rgb(219,143,35)" rx="2" ry="2" />
<text  x="57.81" y="607.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.01%)</title><rect x="916.3" y="485" width="0.1" height="15.0" fill="rgb(231,110,11)" rx="2" ry="2" />
<text  x="919.29" y="495.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.01%)</title><rect x="962.6" y="485" width="0.2" height="15.0" fill="rgb(232,50,6)" rx="2" ry="2" />
<text  x="965.63" y="495.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.02%)</title><rect x="647.9" y="341" width="0.2" height="15.0" fill="rgb(217,18,51)" rx="2" ry="2" />
<text  x="650.88" y="351.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (1 samples, 0.01%)</title><rect x="960.5" y="517" width="0.1" height="15.0" fill="rgb(219,201,33)" rx="2" ry="2" />
<text  x="963.51" y="527.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.01%)</title><rect x="830.1" y="309" width="0.1" height="15.0" fill="rgb(237,197,51)" rx="2" ry="2" />
<text  x="833.08" y="319.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (2 samples, 0.02%)</title><rect x="257.5" y="613" width="0.3" height="15.0" fill="rgb(234,27,1)" rx="2" ry="2" />
<text  x="260.53" y="623.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingExecution (3 samples, 0.03%)</title><rect x="256.4" y="597" width="0.3" height="15.0" fill="rgb(243,158,9)" rx="2" ry="2" />
<text  x="259.35" y="607.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (192 samples, 1.92%)</title><rect x="656.8" y="405" width="22.7" height="15.0" fill="rgb(251,145,24)" rx="2" ry="2" />
<text  x="659.84" y="415.5" >s..</text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="133.8" y="741" width="0.1" height="15.0" fill="rgb(234,142,15)" rx="2" ry="2" />
<text  x="136.83" y="751.5" ></text>
</g>
<g >
<title>Sprite::Refresh (9 samples, 0.09%)</title><rect x="224.5" y="629" width="1.1" height="15.0" fill="rgb(239,125,47)" rx="2" ry="2" />
<text  x="227.51" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (66 samples, 0.66%)</title><rect x="325.9" y="405" width="7.8" height="15.0" fill="rgb(220,142,44)" rx="2" ry="2" />
<text  x="328.93" y="415.5" ></text>
</g>
<g >
<title>Sprite::BlitScreen (391 samples, 3.91%)</title><rect x="179.6" y="645" width="46.1" height="15.0" fill="rgb(218,54,34)" rx="2" ry="2" />
<text  x="182.58" y="655.5" >Spri..</text>
</g>
<g >
<title>__task_pid_nr_ns (2 samples, 0.02%)</title><rect x="53.3" y="757" width="0.2" height="15.0" fill="rgb(245,7,16)" rx="2" ry="2" />
<text  x="56.28" y="767.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="265.7" y="437" width="0.1" height="15.0" fill="rgb(205,224,20)" rx="2" ry="2" />
<text  x="268.67" y="447.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.01%)</title><rect x="959.9" y="501" width="0.1" height="15.0" fill="rgb(236,164,20)" rx="2" ry="2" />
<text  x="962.92" y="511.5" ></text>
</g>
<g >
<title>speex_resampler_process_int (3 samples, 0.03%)</title><rect x="916.6" y="421" width="0.4" height="15.0" fill="rgb(205,68,23)" rx="2" ry="2" />
<text  x="919.64" y="431.5" ></text>
</g>
<g >
<title>Game_Map::GetVehicle (1 samples, 0.01%)</title><rect x="957.4" y="581" width="0.2" height="15.0" fill="rgb(215,130,17)" rx="2" ry="2" />
<text  x="960.44" y="591.5" ></text>
</g>
<g >
<title>std::__stable_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (11 samples, 0.11%)</title><rect x="253.5" y="629" width="1.3" height="15.0" fill="rgb(235,130,46)" rx="2" ry="2" />
<text  x="256.52" y="639.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (14 samples, 0.14%)</title><rect x="962.8" y="581" width="1.6" height="15.0" fill="rgb(218,199,52)" rx="2" ry="2" />
<text  x="965.75" y="591.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (1 samples, 0.01%)</title><rect x="254.8" y="629" width="0.1" height="15.0" fill="rgb(212,174,7)" rx="2" ry="2" />
<text  x="257.82" y="639.5" ></text>
</g>
<g >
<title>sock_poll (1 samples, 0.01%)</title><rect x="962.9" y="405" width="0.1" height="15.0" fill="rgb(231,29,45)" rx="2" ry="2" />
<text  x="965.87" y="415.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="923.5" y="325" width="0.1" height="15.0" fill="rgb(211,122,40)" rx="2" ry="2" />
<text  x="926.48" y="335.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (1 samples, 0.01%)</title><rect x="960.4" y="533" width="0.1" height="15.0" fill="rgb(232,174,1)" rx="2" ry="2" />
<text  x="963.39" y="543.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="739.5" y="293" width="0.1" height="15.0" fill="rgb(218,119,8)" rx="2" ry="2" />
<text  x="742.51" y="303.5" ></text>
</g>
<g >
<title>__fopen_internal (2 samples, 0.02%)</title><rect x="920.6" y="293" width="0.3" height="15.0" fill="rgb(240,93,28)" rx="2" ry="2" />
<text  x="923.65" y="303.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (1,344 samples, 13.43%)</title><rect x="975.4" y="629" width="158.5" height="15.0" fill="rgb(242,94,30)" rx="2" ry="2" />
<text  x="978.37" y="639.5" >[libSDL2-2.0.so.0.9.0]</text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator bool (1 samples, 0.01%)</title><rect x="959.1" y="629" width="0.1" height="15.0" fill="rgb(234,154,39)" rx="2" ry="2" />
<text  x="962.09" y="639.5" ></text>
</g>
<g >
<title>sock_recvmsg (1 samples, 0.01%)</title><rect x="1188.0" y="725" width="0.1" height="15.0" fill="rgb(205,183,51)" rx="2" ry="2" />
<text  x="1191.00" y="735.5" ></text>
</g>
<g >
<title>all (10,006 samples, 100%)</title><rect x="10.0" y="837" width="1180.0" height="15.0" fill="rgb(221,170,9)" rx="2" ry="2" />
<text  x="13.00" y="847.5" ></text>
</g>
<g >
<title>housekeeping_cpumask (1 samples, 0.01%)</title><rect x="647.2" y="213" width="0.1" height="15.0" fill="rgb(232,145,20)" rx="2" ry="2" />
<text  x="650.17" y="223.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (3 samples, 0.03%)</title><rect x="974.1" y="597" width="0.3" height="15.0" fill="rgb(209,222,6)" rx="2" ry="2" />
<text  x="977.07" y="607.5" ></text>
</g>
<g >
<title>FileFinder::FindImage (2 samples, 0.02%)</title><rect x="921.1" y="469" width="0.3" height="15.0" fill="rgb(243,162,47)" rx="2" ry="2" />
<text  x="924.12" y="479.5" ></text>
</g>
<g >
<title>deactivate_task (9 samples, 0.09%)</title><rect x="54.3" y="661" width="1.1" height="15.0" fill="rgb(246,218,41)" rx="2" ry="2" />
<text  x="57.34" y="671.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="133.2" y="693" width="0.2" height="15.0" fill="rgb(215,53,24)" rx="2" ry="2" />
<text  x="136.24" y="703.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (8 samples, 0.08%)</title><rect x="1161.9" y="453" width="1.0" height="15.0" fill="rgb(239,14,32)" rx="2" ry="2" />
<text  x="1164.93" y="463.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="826.7" y="293" width="0.1" height="15.0" fill="rgb(217,139,22)" rx="2" ry="2" />
<text  x="829.66" y="303.5" ></text>
</g>
<g >
<title>do_nanosleep (51 samples, 0.51%)</title><rect x="965.3" y="533" width="6.1" height="15.0" fill="rgb(249,187,43)" rx="2" ry="2" />
<text  x="968.34" y="543.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="64.0" y="549" width="0.1" height="15.0" fill="rgb(252,198,1)" rx="2" ry="2" />
<text  x="67.01" y="559.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipTo (1 samples, 0.01%)</title><rect x="90.5" y="789" width="0.2" height="15.0" fill="rgb(220,21,8)" rx="2" ry="2" />
<text  x="93.55" y="799.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="64.0" y="629" width="0.1" height="15.0" fill="rgb(221,0,11)" rx="2" ry="2" />
<text  x="67.01" y="639.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.01%)</title><rect x="920.5" y="133" width="0.1" height="15.0" fill="rgb(243,165,3)" rx="2" ry="2" />
<text  x="923.53" y="143.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (2 samples, 0.02%)</title><rect x="91.7" y="789" width="0.3" height="15.0" fill="rgb(209,86,45)" rx="2" ry="2" />
<text  x="94.72" y="799.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (1 samples, 0.01%)</title><rect x="955.1" y="597" width="0.1" height="15.0" fill="rgb(251,47,25)" rx="2" ry="2" />
<text  x="958.08" y="607.5" ></text>
</g>
<g >
<title>xhci_msi_irq (2 samples, 0.02%)</title><rect x="133.6" y="677" width="0.2" height="15.0" fill="rgb(208,176,31)" rx="2" ry="2" />
<text  x="136.59" y="687.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (1 samples, 0.01%)</title><rect x="100.6" y="645" width="0.1" height="15.0" fill="rgb(252,40,22)" rx="2" ry="2" />
<text  x="103.57" y="655.5" ></text>
</g>
<g >
<title>ImageBMP::ReadBMP (6 samples, 0.06%)</title><rect x="919.8" y="309" width="0.7" height="15.0" fill="rgb(236,219,0)" rx="2" ry="2" />
<text  x="922.82" y="319.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.01%)</title><rect x="1128.7" y="533" width="0.1" height="15.0" fill="rgb(240,15,48)" rx="2" ry="2" />
<text  x="1131.68" y="543.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.01%)</title><rect x="647.8" y="277" width="0.1" height="15.0" fill="rgb(233,191,10)" rx="2" ry="2" />
<text  x="650.76" y="287.5" ></text>
</g>
<g >
<title>_int_free (769 samples, 7.69%)</title><rect x="739.7" y="341" width="90.7" height="15.0" fill="rgb(235,188,17)" rx="2" ry="2" />
<text  x="742.75" y="351.5" >_int_free</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="224.2" y="517" width="0.1" height="15.0" fill="rgb(239,76,4)" rx="2" ry="2" />
<text  x="227.16" y="527.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (1,354 samples, 13.53%)</title><rect x="975.1" y="661" width="159.7" height="15.0" fill="rgb(252,229,17)" rx="2" ry="2" />
<text  x="978.13" y="671.5" >[libSDL2-2.0.so.0.9.0]</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_M_lower_bound (1 samples, 0.01%)</title><rect x="960.4" y="469" width="0.1" height="15.0" fill="rgb(251,165,35)" rx="2" ry="2" />
<text  x="963.39" y="479.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (1 samples, 0.01%)</title><rect x="70.3" y="805" width="0.1" height="15.0" fill="rgb(240,227,7)" rx="2" ry="2" />
<text  x="73.26" y="815.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1185.2" y="805" width="0.1" height="15.0" fill="rgb(227,134,3)" rx="2" ry="2" />
<text  x="1188.16" y="815.5" ></text>
</g>
<g >
<title>__update_load_avg_se (1 samples, 0.01%)</title><rect x="66.5" y="549" width="0.1" height="15.0" fill="rgb(249,23,6)" rx="2" ry="2" />
<text  x="69.49" y="559.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (4 samples, 0.04%)</title><rect x="917.7" y="517" width="0.5" height="15.0" fill="rgb(208,148,18)" rx="2" ry="2" />
<text  x="920.70" y="527.5" ></text>
</g>
<g >
<title>__sys_recvmsg (1 samples, 0.01%)</title><rect x="973.7" y="453" width="0.1" height="15.0" fill="rgb(233,189,38)" rx="2" ry="2" />
<text  x="976.72" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="964.9" y="597" width="0.1" height="15.0" fill="rgb(216,110,21)" rx="2" ry="2" />
<text  x="967.87" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::~vector (5 samples, 0.05%)</title><rect x="256.8" y="549" width="0.6" height="15.0" fill="rgb(229,171,4)" rx="2" ry="2" />
<text  x="259.83" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (1 samples, 0.01%)</title><rect x="96.2" y="789" width="0.1" height="15.0" fill="rgb(209,128,9)" rx="2" ry="2" />
<text  x="99.21" y="799.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="324.5" y="325" width="0.1" height="15.0" fill="rgb(246,201,0)" rx="2" ry="2" />
<text  x="327.52" y="335.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (1 samples, 0.01%)</title><rect x="54.7" y="597" width="0.1" height="15.0" fill="rgb(230,97,4)" rx="2" ry="2" />
<text  x="57.70" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (1 samples, 0.01%)</title><rect x="973.7" y="469" width="0.1" height="15.0" fill="rgb(244,229,0)" rx="2" ry="2" />
<text  x="976.72" y="479.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="890.9" y="405" width="0.1" height="15.0" fill="rgb(241,173,27)" rx="2" ry="2" />
<text  x="893.93" y="415.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (9 samples, 0.09%)</title><rect x="250.1" y="581" width="1.1" height="15.0" fill="rgb(240,134,18)" rx="2" ry="2" />
<text  x="253.10" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (66 samples, 0.66%)</title><rect x="325.9" y="421" width="7.8" height="15.0" fill="rgb(243,171,51)" rx="2" ry="2" />
<text  x="328.93" y="431.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (329 samples, 3.29%)</title><rect x="185.6" y="549" width="38.8" height="15.0" fill="rgb(211,144,46)" rx="2" ry="2" />
<text  x="188.60" y="559.5" >[li..</text>
</g>
<g >
<title>posix_ktime_get_ts (2 samples, 0.02%)</title><rect x="101.9" y="725" width="0.2" height="15.0" fill="rgb(228,138,19)" rx="2" ry="2" />
<text  x="104.87" y="735.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (15 samples, 0.15%)</title><rect x="919.4" y="373" width="1.7" height="15.0" fill="rgb(215,69,24)" rx="2" ry="2" />
<text  x="922.35" y="383.5" ></text>
</g>
<g >
<title>Window_Selectable::Update (1 samples, 0.01%)</title><rect x="960.2" y="613" width="0.1" height="15.0" fill="rgb(242,219,18)" rx="2" ry="2" />
<text  x="963.16" y="623.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (2 samples, 0.02%)</title><rect x="922.5" y="469" width="0.3" height="15.0" fill="rgb(225,45,9)" rx="2" ry="2" />
<text  x="925.54" y="479.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="133.7" y="645" width="0.1" height="15.0" fill="rgb(245,229,26)" rx="2" ry="2" />
<text  x="136.71" y="655.5" ></text>
</g>
<g >
<title>security_file_permission (3 samples, 0.03%)</title><rect x="65.9" y="709" width="0.4" height="15.0" fill="rgb(231,220,51)" rx="2" ry="2" />
<text  x="68.90" y="719.5" ></text>
</g>
<g >
<title>XFlush (11 samples, 0.11%)</title><rect x="961.5" y="597" width="1.3" height="15.0" fill="rgb(220,182,53)" rx="2" ry="2" />
<text  x="964.45" y="607.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.01%)</title><rect x="922.3" y="373" width="0.1" height="15.0" fill="rgb(246,109,22)" rx="2" ry="2" />
<text  x="925.30" y="383.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (5,979 samples, 59.75%)</title><rect x="256.0" y="677" width="705.1" height="15.0" fill="rgb(237,6,47)" rx="2" ry="2" />
<text  x="259.00" y="687.5" >Scene_Map::UpdateStage1</text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="676.5" y="213" width="0.2" height="15.0" fill="rgb(216,131,1)" rx="2" ry="2" />
<text  x="679.54" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_write (6 samples, 0.06%)</title><rect x="66.3" y="773" width="0.7" height="15.0" fill="rgb(234,15,33)" rx="2" ry="2" />
<text  x="69.25" y="783.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="676.5" y="229" width="0.2" height="15.0" fill="rgb(245,90,12)" rx="2" ry="2" />
<text  x="679.54" y="239.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="715.5" y="357" width="0.1" height="15.0" fill="rgb(209,226,54)" rx="2" ry="2" />
<text  x="718.45" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::push_back (1 samples, 0.01%)</title><rect x="921.1" y="341" width="0.1" height="15.0" fill="rgb(242,10,20)" rx="2" ry="2" />
<text  x="924.12" y="351.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="708.5" y="437" width="0.1" height="15.0" fill="rgb(229,22,14)" rx="2" ry="2" />
<text  x="711.49" y="447.5" ></text>
</g>
<g >
<title>__vfs_write (5 samples, 0.05%)</title><rect x="66.4" y="725" width="0.6" height="15.0" fill="rgb(208,229,16)" rx="2" ry="2" />
<text  x="69.37" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (5 samples, 0.05%)</title><rect x="928.1" y="581" width="0.6" height="15.0" fill="rgb(244,53,18)" rx="2" ry="2" />
<text  x="931.08" y="591.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="51.3" y="757" width="0.1" height="15.0" fill="rgb(254,71,13)" rx="2" ry="2" />
<text  x="54.28" y="767.5" ></text>
</g>
<g >
<title>Game_Map::LoopHorizontal (1 samples, 0.01%)</title><rect x="70.5" y="789" width="0.1" height="15.0" fill="rgb(243,136,13)" rx="2" ry="2" />
<text  x="73.50" y="799.5" ></text>
</g>
<g >
<title>__atomic_add (1 samples, 0.01%)</title><rect x="923.1" y="405" width="0.1" height="15.0" fill="rgb(220,107,42)" rx="2" ry="2" />
<text  x="926.13" y="415.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="656.0" y="341" width="0.1" height="15.0" fill="rgb(254,107,51)" rx="2" ry="2" />
<text  x="659.02" y="351.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="891.3" y="213" width="0.1" height="15.0" fill="rgb(237,78,27)" rx="2" ry="2" />
<text  x="894.29" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="974.0" y="533" width="0.1" height="15.0" fill="rgb(224,7,36)" rx="2" ry="2" />
<text  x="976.95" y="543.5" ></text>
</g>
<g >
<title>ext4_lookup (1 samples, 0.01%)</title><rect x="920.6" y="133" width="0.2" height="15.0" fill="rgb(210,135,15)" rx="2" ry="2" />
<text  x="923.65" y="143.5" ></text>
</g>
<g >
<title>__GI___nanosleep (19 samples, 0.19%)</title><rect x="1160.8" y="661" width="2.2" height="15.0" fill="rgb(213,20,24)" rx="2" ry="2" />
<text  x="1163.75" y="671.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (2 samples, 0.02%)</title><rect x="225.3" y="597" width="0.3" height="15.0" fill="rgb(238,150,18)" rx="2" ry="2" />
<text  x="228.34" y="607.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="638.8" y="293" width="0.1" height="15.0" fill="rgb(207,197,23)" rx="2" ry="2" />
<text  x="641.80" y="303.5" ></text>
</g>
<g >
<title>xhci_urb_enqueue (1 samples, 0.01%)</title><rect x="891.3" y="117" width="0.1" height="15.0" fill="rgb(211,216,44)" rx="2" ry="2" />
<text  x="894.29" y="127.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (91 samples, 0.91%)</title><rect x="54.2" y="709" width="10.8" height="15.0" fill="rgb(247,56,2)" rx="2" ry="2" />
<text  x="57.22" y="719.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="250.0" y="533" width="0.1" height="15.0" fill="rgb(219,77,12)" rx="2" ry="2" />
<text  x="252.99" y="543.5" ></text>
</g>
<g >
<title>none_of&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int&gt; &gt;, Input::UiSource::Update()::&lt;lambda(int)&gt; &gt; (2 samples, 0.02%)</title><rect x="255.3" y="629" width="0.2" height="15.0" fill="rgb(236,82,17)" rx="2" ry="2" />
<text  x="258.29" y="639.5" ></text>
</g>
<g >
<title>handle_irq_event (2 samples, 0.02%)</title><rect x="67.0" y="741" width="0.2" height="15.0" fill="rgb(246,141,15)" rx="2" ry="2" />
<text  x="69.96" y="751.5" ></text>
</g>
<g >
<title>handle_edge_irq (2 samples, 0.02%)</title><rect x="67.0" y="757" width="0.2" height="15.0" fill="rgb(232,174,46)" rx="2" ry="2" />
<text  x="69.96" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (1 samples, 0.01%)</title><rect x="708.5" y="565" width="0.1" height="15.0" fill="rgb(234,152,1)" rx="2" ry="2" />
<text  x="711.49" y="575.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="826.7" y="229" width="0.1" height="15.0" fill="rgb(214,182,27)" rx="2" ry="2" />
<text  x="829.66" y="239.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (12 samples, 0.12%)</title><rect x="916.3" y="565" width="1.4" height="15.0" fill="rgb(238,84,5)" rx="2" ry="2" />
<text  x="919.29" y="575.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.01%)</title><rect x="54.8" y="613" width="0.1" height="15.0" fill="rgb(231,195,45)" rx="2" ry="2" />
<text  x="57.81" y="623.5" ></text>
</g>
<g >
<title>do_nanosleep (1 samples, 0.01%)</title><rect x="1187.9" y="741" width="0.1" height="15.0" fill="rgb(243,170,22)" rx="2" ry="2" />
<text  x="1190.88" y="751.5" ></text>
</g>
<g >
<title>AudioResampler::FillBuffer (3 samples, 0.03%)</title><rect x="916.6" y="469" width="0.4" height="15.0" fill="rgb(213,156,15)" rx="2" ry="2" />
<text  x="919.64" y="479.5" ></text>
</g>
<g >
<title>AudioDecoder::Decode (3 samples, 0.03%)</title><rect x="916.6" y="485" width="0.4" height="15.0" fill="rgb(218,57,46)" rx="2" ry="2" />
<text  x="919.64" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (2,626 samples, 26.24%)</title><rect x="346.6" y="437" width="309.7" height="15.0" fill="rgb(229,25,38)" rx="2" ry="2" />
<text  x="349.57" y="447.5" >std::_Vector_base&lt;int, std::allocator&lt;int..</text>
</g>
<g >
<title>schedule (51 samples, 0.51%)</title><rect x="965.3" y="517" width="6.1" height="15.0" fill="rgb(213,124,34)" rx="2" ry="2" />
<text  x="968.34" y="527.5" ></text>
</g>
<g >
<title>[libspeexdsp.so.1.5.0] (2 samples, 0.02%)</title><rect x="916.8" y="405" width="0.2" height="15.0" fill="rgb(244,155,36)" rx="2" ry="2" />
<text  x="919.76" y="415.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (2 samples, 0.02%)</title><rect x="102.8" y="805" width="0.2" height="15.0" fill="rgb(211,142,30)" rx="2" ry="2" />
<text  x="105.81" y="815.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.01%)</title><rect x="923.4" y="469" width="0.1" height="15.0" fill="rgb(216,218,47)" rx="2" ry="2" />
<text  x="926.36" y="479.5" ></text>
</g>
<g >
<title>Scene::IsAsyncPending (1 samples, 0.01%)</title><rect x="1184.9" y="661" width="0.1" height="15.0" fill="rgb(248,64,49)" rx="2" ry="2" />
<text  x="1187.93" y="671.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.01%)</title><rect x="223.9" y="421" width="0.1" height="15.0" fill="rgb(219,24,18)" rx="2" ry="2" />
<text  x="226.92" y="431.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (4 samples, 0.04%)</title><rect x="918.2" y="517" width="0.4" height="15.0" fill="rgb(239,196,30)" rx="2" ry="2" />
<text  x="921.17" y="527.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (1 samples, 0.01%)</title><rect x="223.9" y="405" width="0.1" height="15.0" fill="rgb(231,33,18)" rx="2" ry="2" />
<text  x="226.92" y="415.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.01%)</title><rect x="54.7" y="613" width="0.1" height="15.0" fill="rgb(220,36,27)" rx="2" ry="2" />
<text  x="57.70" y="623.5" ></text>
</g>
<g >
<title>native_smp_send_reschedule (1 samples, 0.01%)</title><rect x="739.5" y="165" width="0.1" height="15.0" fill="rgb(247,91,26)" rx="2" ry="2" />
<text  x="742.51" y="175.5" ></text>
</g>
<g >
<title>__GI__IO_fread (1 samples, 0.01%)</title><rect x="920.5" y="245" width="0.1" height="15.0" fill="rgb(250,114,32)" rx="2" ry="2" />
<text  x="923.53" y="255.5" ></text>
</g>
<g >
<title>ktime_get_raw_ts64 (1 samples, 0.01%)</title><rect x="1152.9" y="581" width="0.1" height="15.0" fill="rgb(211,72,43)" rx="2" ry="2" />
<text  x="1155.85" y="591.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (38 samples, 0.38%)</title><rect x="1129.4" y="581" width="4.5" height="15.0" fill="rgb(254,68,12)" rx="2" ry="2" />
<text  x="1132.38" y="591.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="1163.5" y="677" width="0.1" height="15.0" fill="rgb(229,27,33)" rx="2" ry="2" />
<text  x="1166.47" y="687.5" ></text>
</g>
<g >
<title>do_sys_poll (2 samples, 0.02%)</title><rect x="974.7" y="533" width="0.2" height="15.0" fill="rgb(225,95,27)" rx="2" ry="2" />
<text  x="977.66" y="543.5" ></text>
</g>
<g >
<title>do_filp_open (2 samples, 0.02%)</title><rect x="920.6" y="165" width="0.3" height="15.0" fill="rgb(228,61,27)" rx="2" ry="2" />
<text  x="923.65" y="175.5" ></text>
</g>
<g >
<title>Game_Player::GetVehicle (1 samples, 0.01%)</title><rect x="957.4" y="597" width="0.2" height="15.0" fill="rgb(206,26,20)" rx="2" ry="2" />
<text  x="960.44" y="607.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (2 samples, 0.02%)</title><rect x="71.7" y="789" width="0.2" height="15.0" fill="rgb(231,18,27)" rx="2" ry="2" />
<text  x="74.68" y="799.5" ></text>
</g>
<g >
<title>x86_pmu_enable (46 samples, 0.46%)</title><rect x="965.6" y="437" width="5.4" height="15.0" fill="rgb(214,185,42)" rx="2" ry="2" />
<text  x="968.58" y="447.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="642.3" y="245" width="0.2" height="15.0" fill="rgb(248,158,19)" rx="2" ry="2" />
<text  x="645.34" y="255.5" ></text>
</g>
<g >
<title>native_write_msr (8 samples, 0.08%)</title><rect x="1161.9" y="437" width="1.0" height="15.0" fill="rgb(211,214,12)" rx="2" ry="2" />
<text  x="1164.93" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2 samples, 0.02%)</title><rect x="922.8" y="373" width="0.2" height="15.0" fill="rgb(205,115,8)" rx="2" ry="2" />
<text  x="925.77" y="383.5" ></text>
</g>
<g >
<title>LoadBitmap&lt;(&lt;unnamed&gt;::Material::Type)9&gt; (2 samples, 0.02%)</title><rect x="960.4" y="549" width="0.2" height="15.0" fill="rgb(239,109,35)" rx="2" ry="2" />
<text  x="963.39" y="559.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (1 samples, 0.01%)</title><rect x="960.2" y="501" width="0.1" height="15.0" fill="rgb(217,114,8)" rx="2" ry="2" />
<text  x="963.16" y="511.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (1 samples, 0.01%)</title><rect x="676.8" y="213" width="0.1" height="15.0" fill="rgb(221,50,2)" rx="2" ry="2" />
<text  x="679.77" y="223.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (71 samples, 0.71%)</title><rect x="241.6" y="581" width="8.4" height="15.0" fill="rgb(250,42,23)" rx="2" ry="2" />
<text  x="244.61" y="591.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (192 samples, 1.92%)</title><rect x="656.8" y="437" width="22.7" height="15.0" fill="rgb(214,151,43)" rx="2" ry="2" />
<text  x="659.84" y="447.5" >s..</text>
</g>
<g >
<title>utf8_internal_loop (1 samples, 0.01%)</title><rect x="254.8" y="565" width="0.1" height="15.0" fill="rgb(247,191,34)" rx="2" ry="2" />
<text  x="257.82" y="575.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (2,691 samples, 26.89%)</title><rect x="339.5" y="469" width="317.3" height="15.0" fill="rgb(229,128,28)" rx="2" ry="2" />
<text  x="342.49" y="479.5" >std::_Vector_base&lt;int, std::allocator&lt;int&gt;..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (1 samples, 0.01%)</title><rect x="255.6" y="629" width="0.2" height="15.0" fill="rgb(254,140,18)" rx="2" ry="2" />
<text  x="258.65" y="639.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (1 samples, 0.01%)</title><rect x="224.7" y="581" width="0.2" height="15.0" fill="rgb(219,172,8)" rx="2" ry="2" />
<text  x="227.75" y="591.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__weak_ptr&lt;int, void&gt; (1 samples, 0.01%)</title><rect x="918.9" y="501" width="0.1" height="15.0" fill="rgb(234,12,51)" rx="2" ry="2" />
<text  x="921.88" y="511.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.01%)</title><rect x="67.2" y="789" width="0.1" height="15.0" fill="rgb(249,178,16)" rx="2" ry="2" />
<text  x="70.20" y="799.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (51 samples, 0.51%)</title><rect x="965.3" y="549" width="6.1" height="15.0" fill="rgb(220,138,53)" rx="2" ry="2" />
<text  x="968.34" y="559.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (3 samples, 0.03%)</title><rect x="1128.3" y="501" width="0.4" height="15.0" fill="rgb(229,164,49)" rx="2" ry="2" />
<text  x="1131.32" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::deallocate (5 samples, 0.05%)</title><rect x="256.8" y="501" width="0.6" height="15.0" fill="rgb(248,100,26)" rx="2" ry="2" />
<text  x="259.83" y="511.5" ></text>
</g>
<g >
<title>handle_irq (2 samples, 0.02%)</title><rect x="647.9" y="325" width="0.2" height="15.0" fill="rgb(231,93,24)" rx="2" ry="2" />
<text  x="650.88" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (1 samples, 0.01%)</title><rect x="916.3" y="469" width="0.1" height="15.0" fill="rgb(207,117,11)" rx="2" ry="2" />
<text  x="919.29" y="479.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (85 samples, 0.85%)</title><rect x="229.2" y="597" width="10.1" height="15.0" fill="rgb(227,196,32)" rx="2" ry="2" />
<text  x="232.23" y="607.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (2 samples, 0.02%)</title><rect x="922.2" y="389" width="0.2" height="15.0" fill="rgb(226,224,33)" rx="2" ry="2" />
<text  x="925.18" y="399.5" ></text>
</g>
<g >
<title>deactivate_task (1 samples, 0.01%)</title><rect x="965.5" y="485" width="0.1" height="15.0" fill="rgb(239,50,6)" rx="2" ry="2" />
<text  x="968.46" y="495.5" ></text>
</g>
<g >
<title>operator new (86 samples, 0.86%)</title><rect x="258.0" y="517" width="10.1" height="15.0" fill="rgb(240,1,45)" rx="2" ry="2" />
<text  x="261.01" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (2,554 samples, 25.52%)</title><rect x="355.1" y="405" width="301.2" height="15.0" fill="rgb(238,195,20)" rx="2" ry="2" />
<text  x="358.06" y="415.5" >__gnu_cxx::new_allocator&lt;int&gt;::allocate</text>
</g>
<g >
<title>FreeBitmapMemory (1 samples, 0.01%)</title><rect x="921.4" y="469" width="0.1" height="15.0" fill="rgb(240,87,23)" rx="2" ry="2" />
<text  x="924.36" y="479.5" ></text>
</g>
<g >
<title>ucnv_createConverterFromSharedData_63 (1 samples, 0.01%)</title><rect x="159.7" y="789" width="0.1" height="15.0" fill="rgb(212,212,26)" rx="2" ry="2" />
<text  x="162.65" y="799.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (1 samples, 0.01%)</title><rect x="90.7" y="789" width="0.1" height="15.0" fill="rgb(236,43,39)" rx="2" ry="2" />
<text  x="93.66" y="799.5" ></text>
</g>
<g >
<title>Bitmap::find_format (1 samples, 0.01%)</title><rect x="919.4" y="277" width="0.1" height="15.0" fill="rgb(247,71,49)" rx="2" ry="2" />
<text  x="922.35" y="287.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.01%)</title><rect x="1156.3" y="597" width="0.1" height="15.0" fill="rgb(215,155,37)" rx="2" ry="2" />
<text  x="1159.27" y="607.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (28 samples, 0.28%)</title><rect x="1130.6" y="501" width="3.3" height="15.0" fill="rgb(253,204,36)" rx="2" ry="2" />
<text  x="1133.56" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (4 samples, 0.04%)</title><rect x="914.6" y="549" width="0.5" height="15.0" fill="rgb(242,91,46)" rx="2" ry="2" />
<text  x="917.64" y="559.5" ></text>
</g>
<g >
<title>vfs_read (5 samples, 0.05%)</title><rect x="65.7" y="741" width="0.6" height="15.0" fill="rgb(253,201,28)" rx="2" ry="2" />
<text  x="68.66" y="751.5" ></text>
</g>
<g >
<title>[libGLdispatch.so.0.0.0] (2 samples, 0.02%)</title><rect x="102.3" y="805" width="0.3" height="15.0" fill="rgb(248,82,18)" rx="2" ry="2" />
<text  x="105.34" y="815.5" ></text>
</g>
<g >
<title>update_blocked_averages (3 samples, 0.03%)</title><rect x="638.9" y="261" width="0.4" height="15.0" fill="rgb(206,70,49)" rx="2" ry="2" />
<text  x="641.92" y="271.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.02%)</title><rect x="223.9" y="533" width="0.3" height="15.0" fill="rgb(224,9,43)" rx="2" ry="2" />
<text  x="226.92" y="543.5" ></text>
</g>
<g >
<title>handle_irq (3 samples, 0.03%)</title><rect x="133.6" y="757" width="0.3" height="15.0" fill="rgb(233,138,24)" rx="2" ry="2" />
<text  x="136.59" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="960.2" y="453" width="0.1" height="15.0" fill="rgb(223,133,36)" rx="2" ry="2" />
<text  x="963.16" y="463.5" ></text>
</g>
<g >
<title>operator delete@plt (23 samples, 0.23%)</title><rect x="835.3" y="341" width="2.7" height="15.0" fill="rgb(221,174,49)" rx="2" ry="2" />
<text  x="838.27" y="351.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="324.4" y="405" width="0.2" height="15.0" fill="rgb(229,51,38)" rx="2" ry="2" />
<text  x="327.40" y="415.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="676.5" y="341" width="0.2" height="15.0" fill="rgb(205,215,11)" rx="2" ry="2" />
<text  x="679.54" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.01%)</title><rect x="715.6" y="341" width="0.1" height="15.0" fill="rgb(243,90,17)" rx="2" ry="2" />
<text  x="718.57" y="351.5" ></text>
</g>
<g >
<title>trigger_load_balance (1 samples, 0.01%)</title><rect x="708.5" y="421" width="0.1" height="15.0" fill="rgb(232,223,37)" rx="2" ry="2" />
<text  x="711.49" y="431.5" ></text>
</g>
<g >
<title>do_sys_poll (8 samples, 0.08%)</title><rect x="963.2" y="389" width="1.0" height="15.0" fill="rgb(241,165,47)" rx="2" ry="2" />
<text  x="966.22" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.01%)</title><rect x="255.5" y="645" width="0.1" height="15.0" fill="rgb(226,194,10)" rx="2" ry="2" />
<text  x="258.53" y="655.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="265.7" y="453" width="0.1" height="15.0" fill="rgb(242,17,3)" rx="2" ry="2" />
<text  x="268.67" y="463.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="916.4" y="437" width="0.1" height="15.0" fill="rgb(241,134,20)" rx="2" ry="2" />
<text  x="919.40" y="447.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (1 samples, 0.01%)</title><rect x="224.4" y="549" width="0.1" height="15.0" fill="rgb(207,81,26)" rx="2" ry="2" />
<text  x="227.40" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="101.2" y="757" width="0.1" height="15.0" fill="rgb(224,114,45)" rx="2" ry="2" />
<text  x="104.16" y="767.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.05%)</title><rect x="961.6" y="469" width="0.6" height="15.0" fill="rgb(227,88,41)" rx="2" ry="2" />
<text  x="964.57" y="479.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.01%)</title><rect x="920.5" y="117" width="0.1" height="15.0" fill="rgb(249,79,31)" rx="2" ry="2" />
<text  x="923.53" y="127.5" ></text>
</g>
<g >
<title>__sched_text_start (14 samples, 0.14%)</title><rect x="1161.3" y="549" width="1.7" height="15.0" fill="rgb(240,202,10)" rx="2" ry="2" />
<text  x="1164.34" y="559.5" ></text>
</g>
<g >
<title>Game_Screen::GetFlashColor (1 samples, 0.01%)</title><rect x="958.4" y="597" width="0.1" height="15.0" fill="rgb(252,124,34)" rx="2" ry="2" />
<text  x="961.39" y="607.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.02%)</title><rect x="53.5" y="741" width="0.3" height="15.0" fill="rgb(232,49,11)" rx="2" ry="2" />
<text  x="56.52" y="751.5" ></text>
</g>
<g >
<title>__libc_open64 (2 samples, 0.02%)</title><rect x="920.6" y="245" width="0.3" height="15.0" fill="rgb(238,198,18)" rx="2" ry="2" />
<text  x="923.65" y="255.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="739.5" y="213" width="0.1" height="15.0" fill="rgb(214,28,21)" rx="2" ry="2" />
<text  x="742.51" y="223.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="638.8" y="245" width="0.1" height="15.0" fill="rgb(225,4,35)" rx="2" ry="2" />
<text  x="641.80" y="255.5" ></text>
</g>
<g >
<title>do_writev (1 samples, 0.01%)</title><rect x="963.0" y="373" width="0.1" height="15.0" fill="rgb(230,65,52)" rx="2" ry="2" />
<text  x="965.99" y="383.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.01%)</title><rect x="974.0" y="469" width="0.1" height="15.0" fill="rgb(222,71,2)" rx="2" ry="2" />
<text  x="976.95" y="479.5" ></text>
</g>
<g >
<title>dequeue_entity (2 samples, 0.02%)</title><rect x="1161.3" y="501" width="0.3" height="15.0" fill="rgb(213,183,6)" rx="2" ry="2" />
<text  x="1164.34" y="511.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (5 samples, 0.05%)</title><rect x="961.6" y="517" width="0.6" height="15.0" fill="rgb(248,179,8)" rx="2" ry="2" />
<text  x="964.57" y="527.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (3 samples, 0.03%)</title><rect x="891.0" y="309" width="0.4" height="15.0" fill="rgb(218,164,41)" rx="2" ry="2" />
<text  x="894.05" y="319.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="922.3" y="325" width="0.1" height="15.0" fill="rgb(238,55,40)" rx="2" ry="2" />
<text  x="925.30" y="335.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (5 samples, 0.05%)</title><rect x="921.6" y="373" width="0.6" height="15.0" fill="rgb(218,19,31)" rx="2" ry="2" />
<text  x="924.59" y="383.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (70 samples, 0.70%)</title><rect x="55.4" y="645" width="8.3" height="15.0" fill="rgb(232,213,1)" rx="2" ry="2" />
<text  x="58.40" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (33 samples, 0.33%)</title><rect x="1136.0" y="629" width="3.9" height="15.0" fill="rgb(242,211,53)" rx="2" ry="2" />
<text  x="1138.99" y="639.5" ></text>
</g>
<g >
<title>run_rebalance_domains (3 samples, 0.03%)</title><rect x="647.4" y="293" width="0.4" height="15.0" fill="rgb(210,218,7)" rx="2" ry="2" />
<text  x="650.41" y="303.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="133.7" y="613" width="0.1" height="15.0" fill="rgb(227,152,37)" rx="2" ry="2" />
<text  x="136.71" y="623.5" ></text>
</g>
<g >
<title>Graphics::IsTransitionPending (2 samples, 0.02%)</title><rect x="1184.7" y="661" width="0.2" height="15.0" fill="rgb(251,75,51)" rx="2" ry="2" />
<text  x="1187.69" y="671.5" ></text>
</g>
<g >
<title>__glDispatchCheckMultithreaded (1 samples, 0.01%)</title><rect x="1163.3" y="629" width="0.2" height="15.0" fill="rgb(212,178,25)" rx="2" ry="2" />
<text  x="1166.35" y="639.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (51 samples, 0.51%)</title><rect x="139.0" y="789" width="6.0" height="15.0" fill="rgb(207,136,34)" rx="2" ry="2" />
<text  x="142.01" y="799.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.01%)</title><rect x="646.9" y="197" width="0.2" height="15.0" fill="rgb(208,80,4)" rx="2" ry="2" />
<text  x="649.94" y="207.5" ></text>
</g>
<g >
<title>tcache_put (1 samples, 0.01%)</title><rect x="255.5" y="549" width="0.1" height="15.0" fill="rgb(213,193,25)" rx="2" ry="2" />
<text  x="258.53" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="96.7" y="741" width="0.1" height="15.0" fill="rgb(208,6,19)" rx="2" ry="2" />
<text  x="99.68" y="751.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.03%)</title><rect x="133.6" y="773" width="0.3" height="15.0" fill="rgb(222,220,31)" rx="2" ry="2" />
<text  x="136.59" y="783.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (45 samples, 0.45%)</title><rect x="965.7" y="405" width="5.3" height="15.0" fill="rgb(232,35,15)" rx="2" ry="2" />
<text  x="968.70" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="922.7" y="421" width="0.1" height="15.0" fill="rgb(237,68,43)" rx="2" ry="2" />
<text  x="925.65" y="431.5" ></text>
</g>
<g >
<title>TilemapSubLayer::Draw (1 samples, 0.01%)</title><rect x="253.4" y="645" width="0.1" height="15.0" fill="rgb(212,107,9)" rx="2" ry="2" />
<text  x="256.41" y="655.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (1 samples, 0.01%)</title><rect x="917.6" y="357" width="0.1" height="15.0" fill="rgb(233,21,13)" rx="2" ry="2" />
<text  x="920.58" y="367.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="676.8" y="293" width="0.1" height="15.0" fill="rgb(235,84,49)" rx="2" ry="2" />
<text  x="679.77" y="303.5" ></text>
</g>
<g >
<title>finish_task_switch (74 samples, 0.74%)</title><rect x="55.4" y="661" width="8.7" height="15.0" fill="rgb(224,150,47)" rx="2" ry="2" />
<text  x="58.40" y="671.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;RPG::EventCommand const*, std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt; &gt;, RPG::EventCommand*&gt; (3,556 samples, 35.54%)</title><rect x="268.1" y="533" width="419.4" height="15.0" fill="rgb(215,84,43)" rx="2" ry="2" />
<text  x="271.15" y="543.5" >std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx..</text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.01%)</title><rect x="63.7" y="565" width="0.1" height="15.0" fill="rgb(219,218,47)" rx="2" ry="2" />
<text  x="66.66" y="575.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (2 samples, 0.02%)</title><rect x="915.9" y="565" width="0.3" height="15.0" fill="rgb(235,65,40)" rx="2" ry="2" />
<text  x="918.93" y="575.5" ></text>
</g>
<g >
<title>_int_malloc (889 samples, 8.88%)</title><rect x="541.9" y="357" width="104.8" height="15.0" fill="rgb(247,24,42)" rx="2" ry="2" />
<text  x="544.86" y="367.5" >_int_malloc</text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.01%)</title><rect x="223.8" y="533" width="0.1" height="15.0" fill="rgb(205,51,52)" rx="2" ry="2" />
<text  x="226.81" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::reset (1 samples, 0.01%)</title><rect x="923.5" y="501" width="0.1" height="15.0" fill="rgb(215,141,27)" rx="2" ry="2" />
<text  x="926.48" y="511.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (2 samples, 0.02%)</title><rect x="922.2" y="405" width="0.2" height="15.0" fill="rgb(243,136,25)" rx="2" ry="2" />
<text  x="925.18" y="415.5" ></text>
</g>
<g >
<title>__GI__IO_file_doallocate (1 samples, 0.01%)</title><rect x="920.9" y="245" width="0.1" height="15.0" fill="rgb(228,174,5)" rx="2" ry="2" />
<text  x="923.89" y="255.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (2 samples, 0.02%)</title><rect x="923.7" y="565" width="0.3" height="15.0" fill="rgb(244,31,34)" rx="2" ry="2" />
<text  x="926.72" y="575.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (2 samples, 0.02%)</title><rect x="1156.0" y="565" width="0.3" height="15.0" fill="rgb(213,98,33)" rx="2" ry="2" />
<text  x="1159.04" y="575.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.01%)</title><rect x="1161.2" y="549" width="0.1" height="15.0" fill="rgb(226,164,23)" rx="2" ry="2" />
<text  x="1164.23" y="559.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="656.0" y="325" width="0.1" height="15.0" fill="rgb(242,14,53)" rx="2" ry="2" />
<text  x="659.02" y="335.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (2 samples, 0.02%)</title><rect x="971.9" y="581" width="0.3" height="15.0" fill="rgb(237,41,30)" rx="2" ry="2" />
<text  x="974.95" y="591.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.02%)</title><rect x="918.4" y="405" width="0.2" height="15.0" fill="rgb(233,183,44)" rx="2" ry="2" />
<text  x="921.41" y="415.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="676.5" y="293" width="0.2" height="15.0" fill="rgb(244,218,36)" rx="2" ry="2" />
<text  x="679.54" y="303.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="962.2" y="517" width="0.1" height="15.0" fill="rgb(252,93,24)" rx="2" ry="2" />
<text  x="965.16" y="527.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, int const*, int*&gt; (192 samples, 1.92%)</title><rect x="656.8" y="389" width="22.7" height="15.0" fill="rgb(247,94,21)" rx="2" ry="2" />
<text  x="659.84" y="399.5" >s..</text>
</g>
<g >
<title>read_tsc (1 samples, 0.01%)</title><rect x="1133.7" y="373" width="0.2" height="15.0" fill="rgb(211,155,20)" rx="2" ry="2" />
<text  x="1136.75" y="383.5" ></text>
</g>
<g >
<title>xhci_irq (2 samples, 0.02%)</title><rect x="67.0" y="677" width="0.2" height="15.0" fill="rgb(252,104,44)" rx="2" ry="2" />
<text  x="69.96" y="687.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.01%)</title><rect x="102.0" y="709" width="0.1" height="15.0" fill="rgb(243,8,15)" rx="2" ry="2" />
<text  x="104.98" y="719.5" ></text>
</g>
<g >
<title>kick_ilb (1 samples, 0.01%)</title><rect x="908.1" y="245" width="0.2" height="15.0" fill="rgb(228,195,22)" rx="2" ry="2" />
<text  x="911.15" y="255.5" ></text>
</g>
<g >
<title>[libpng16.so.16.36.0] (1 samples, 0.01%)</title><rect x="920.5" y="261" width="0.1" height="15.0" fill="rgb(240,168,8)" rx="2" ry="2" />
<text  x="923.53" y="271.5" ></text>
</g>
<g >
<title>nohz_balance_exit_idle (1 samples, 0.01%)</title><rect x="638.8" y="197" width="0.1" height="15.0" fill="rgb(213,7,36)" rx="2" ry="2" />
<text  x="641.80" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create@plt (1 samples, 0.01%)</title><rect x="325.8" y="421" width="0.1" height="15.0" fill="rgb(208,8,17)" rx="2" ry="2" />
<text  x="328.81" y="431.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (1 samples, 0.01%)</title><rect x="961.7" y="389" width="0.1" height="15.0" fill="rgb(254,103,42)" rx="2" ry="2" />
<text  x="964.69" y="399.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.01%)</title><rect x="908.1" y="181" width="0.2" height="15.0" fill="rgb(254,225,27)" rx="2" ry="2" />
<text  x="911.15" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_allocate (1 samples, 0.01%)</title><rect x="917.5" y="453" width="0.1" height="15.0" fill="rgb(222,149,26)" rx="2" ry="2" />
<text  x="920.47" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (2 samples, 0.02%)</title><rect x="927.5" y="565" width="0.2" height="15.0" fill="rgb(215,116,25)" rx="2" ry="2" />
<text  x="930.49" y="575.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="960.4" y="389" width="0.1" height="15.0" fill="rgb(244,171,39)" rx="2" ry="2" />
<text  x="963.39" y="399.5" ></text>
</g>
<g >
<title>default_wake_function (3 samples, 0.03%)</title><rect x="66.4" y="645" width="0.3" height="15.0" fill="rgb(208,208,30)" rx="2" ry="2" />
<text  x="69.37" y="655.5" ></text>
</g>
<g >
<title>trigger_load_balance (1 samples, 0.01%)</title><rect x="908.1" y="261" width="0.2" height="15.0" fill="rgb(214,188,6)" rx="2" ry="2" />
<text  x="911.15" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;Drawable**, Drawable**&gt; (3 samples, 0.03%)</title><rect x="254.3" y="581" width="0.4" height="15.0" fill="rgb(251,101,16)" rx="2" ry="2" />
<text  x="257.35" y="591.5" ></text>
</g>
<g >
<title>main_arena (3 samples, 0.03%)</title><rect x="1188.6" y="805" width="0.3" height="15.0" fill="rgb(219,20,25)" rx="2" ry="2" />
<text  x="1191.58" y="815.5" ></text>
</g>
<g >
<title>__GI_fseek (1 samples, 0.01%)</title><rect x="920.3" y="293" width="0.1" height="15.0" fill="rgb(232,2,14)" rx="2" ry="2" />
<text  x="923.30" y="303.5" ></text>
</g>
<g >
<title>glXSwapBuffers (1 samples, 0.01%)</title><rect x="1188.1" y="805" width="0.1" height="15.0" fill="rgb(241,69,41)" rx="2" ry="2" />
<text  x="1191.11" y="815.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (1 samples, 0.01%)</title><rect x="923.1" y="421" width="0.1" height="15.0" fill="rgb(212,136,52)" rx="2" ry="2" />
<text  x="926.13" y="431.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (1 samples, 0.01%)</title><rect x="253.9" y="533" width="0.1" height="15.0" fill="rgb(253,47,6)" rx="2" ry="2" />
<text  x="256.88" y="543.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.01%)</title><rect x="66.6" y="549" width="0.1" height="15.0" fill="rgb(236,89,23)" rx="2" ry="2" />
<text  x="69.61" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="920.5" y="149" width="0.1" height="15.0" fill="rgb(212,59,3)" rx="2" ry="2" />
<text  x="923.53" y="159.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="265.7" y="373" width="0.1" height="15.0" fill="rgb(207,132,6)" rx="2" ry="2" />
<text  x="268.67" y="383.5" ></text>
</g>
<g >
<title>handle_irq (2 samples, 0.02%)</title><rect x="67.0" y="773" width="0.2" height="15.0" fill="rgb(218,153,32)" rx="2" ry="2" />
<text  x="69.96" y="783.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.01%)</title><rect x="962.0" y="405" width="0.2" height="15.0" fill="rgb(226,160,47)" rx="2" ry="2" />
<text  x="965.04" y="415.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="254.7" y="565" width="0.1" height="15.0" fill="rgb(245,194,53)" rx="2" ry="2" />
<text  x="257.70" y="575.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="647.6" y="261" width="0.2" height="15.0" fill="rgb(254,161,34)" rx="2" ry="2" />
<text  x="650.64" y="271.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (4 samples, 0.04%)</title><rect x="917.7" y="533" width="0.5" height="15.0" fill="rgb(235,189,50)" rx="2" ry="2" />
<text  x="920.70" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_compare (1 samples, 0.01%)</title><rect x="921.8" y="325" width="0.1" height="15.0" fill="rgb(252,124,30)" rx="2" ry="2" />
<text  x="924.83" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="923.4" y="485" width="0.1" height="15.0" fill="rgb(216,62,6)" rx="2" ry="2" />
<text  x="926.36" y="495.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (1 samples, 0.01%)</title><rect x="254.9" y="613" width="0.2" height="15.0" fill="rgb(216,3,44)" rx="2" ry="2" />
<text  x="257.94" y="623.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="739.6" y="277" width="0.1" height="15.0" fill="rgb(237,44,28)" rx="2" ry="2" />
<text  x="742.63" y="287.5" ></text>
</g>
<g >
<title>operator() (1 samples, 0.01%)</title><rect x="921.1" y="373" width="0.1" height="15.0" fill="rgb(222,64,54)" rx="2" ry="2" />
<text  x="924.12" y="383.5" ></text>
</g>
<g >
<title>find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int&gt; &gt;, Input::UiSource::Update()::&lt;lambda(int)&gt; &gt; (2 samples, 0.02%)</title><rect x="255.3" y="613" width="0.2" height="15.0" fill="rgb(214,56,24)" rx="2" ry="2" />
<text  x="258.29" y="623.5" ></text>
</g>
<g >
<title>std::return_temporary_buffer&lt;Drawable*&gt; (1 samples, 0.01%)</title><rect x="253.5" y="597" width="0.1" height="15.0" fill="rgb(241,205,14)" rx="2" ry="2" />
<text  x="256.52" y="607.5" ></text>
</g>
<g >
<title>Game_Picture::Move (2 samples, 0.02%)</title><rect x="915.9" y="581" width="0.3" height="15.0" fill="rgb(227,93,45)" rx="2" ry="2" />
<text  x="918.93" y="591.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.01%)</title><rect x="1187.9" y="597" width="0.1" height="15.0" fill="rgb(221,148,39)" rx="2" ry="2" />
<text  x="1190.88" y="607.5" ></text>
</g>
<g >
<title>sock_poll (1 samples, 0.01%)</title><rect x="65.3" y="757" width="0.1" height="15.0" fill="rgb(251,161,6)" rx="2" ry="2" />
<text  x="68.31" y="767.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.01%)</title><rect x="962.0" y="373" width="0.2" height="15.0" fill="rgb(229,67,41)" rx="2" ry="2" />
<text  x="965.04" y="383.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (8 samples, 0.08%)</title><rect x="963.2" y="213" width="1.0" height="15.0" fill="rgb(225,116,24)" rx="2" ry="2" />
<text  x="966.22" y="223.5" ></text>
</g>
<g >
<title>dequeue_entity (3 samples, 0.03%)</title><rect x="54.6" y="629" width="0.3" height="15.0" fill="rgb(225,92,0)" rx="2" ry="2" />
<text  x="57.58" y="639.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (37 samples, 0.37%)</title><rect x="333.7" y="421" width="4.4" height="15.0" fill="rgb(234,172,32)" rx="2" ry="2" />
<text  x="336.72" y="431.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (3 samples, 0.03%)</title><rect x="224.9" y="485" width="0.3" height="15.0" fill="rgb(208,63,16)" rx="2" ry="2" />
<text  x="227.87" y="495.5" ></text>
</g>
<g >
<title>dequeue_task_fair (4 samples, 0.04%)</title><rect x="54.5" y="645" width="0.4" height="15.0" fill="rgb(205,108,5)" rx="2" ry="2" />
<text  x="57.46" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_openat (2 samples, 0.02%)</title><rect x="920.6" y="197" width="0.3" height="15.0" fill="rgb(205,180,32)" rx="2" ry="2" />
<text  x="923.65" y="207.5" ></text>
</g>
<g >
<title>import_iovec (1 samples, 0.01%)</title><rect x="961.8" y="389" width="0.1" height="15.0" fill="rgb(231,115,22)" rx="2" ry="2" />
<text  x="964.81" y="399.5" ></text>
</g>
<g >
<title>Cache::SystemOrBlack (2 samples, 0.02%)</title><rect x="959.6" y="581" width="0.2" height="15.0" fill="rgb(219,133,50)" rx="2" ry="2" />
<text  x="962.57" y="591.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n&lt;unsigned char*, unsigned long&gt; (1 samples, 0.01%)</title><rect x="920.4" y="245" width="0.1" height="15.0" fill="rgb(247,129,22)" rx="2" ry="2" />
<text  x="923.41" y="255.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (192 samples, 1.92%)</title><rect x="656.8" y="453" width="22.7" height="15.0" fill="rgb(242,221,25)" rx="2" ry="2" />
<text  x="659.84" y="463.5" >s..</text>
</g>
<g >
<title>[libGLX_nvidia.so.390.116] (47 samples, 0.47%)</title><rect x="96.8" y="805" width="5.5" height="15.0" fill="rgb(218,124,17)" rx="2" ry="2" />
<text  x="99.80" y="815.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="963.0" y="405" width="0.1" height="15.0" fill="rgb(221,123,13)" rx="2" ry="2" />
<text  x="965.99" y="415.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.01%)</title><rect x="1187.9" y="725" width="0.1" height="15.0" fill="rgb(242,177,21)" rx="2" ry="2" />
<text  x="1190.88" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::operator= (5 samples, 0.05%)</title><rect x="256.8" y="581" width="0.6" height="15.0" fill="rgb(253,35,41)" rx="2" ry="2" />
<text  x="259.83" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_poll (1 samples, 0.01%)</title><rect x="962.9" y="437" width="0.1" height="15.0" fill="rgb(252,178,21)" rx="2" ry="2" />
<text  x="965.87" y="447.5" ></text>
</g>
<g >
<title>unix_stream_sendmsg (1 samples, 0.01%)</title><rect x="963.0" y="277" width="0.1" height="15.0" fill="rgb(218,176,7)" rx="2" ry="2" />
<text  x="965.99" y="287.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandErasePicture (4 samples, 0.04%)</title><rect x="914.6" y="597" width="0.5" height="15.0" fill="rgb(239,195,8)" rx="2" ry="2" />
<text  x="917.64" y="607.5" ></text>
</g>
<g >
<title>xhci_msi_irq (3 samples, 0.03%)</title><rect x="1128.3" y="485" width="0.4" height="15.0" fill="rgb(250,127,15)" rx="2" ry="2" />
<text  x="1131.32" y="495.5" ></text>
</g>
<g >
<title>__libc_recvmsg (5 samples, 0.05%)</title><rect x="961.6" y="501" width="0.6" height="15.0" fill="rgb(216,128,20)" rx="2" ry="2" />
<text  x="964.57" y="511.5" ></text>
</g>
<g >
<title>ksys_write (6 samples, 0.06%)</title><rect x="66.3" y="757" width="0.7" height="15.0" fill="rgb(247,200,14)" rx="2" ry="2" />
<text  x="69.25" y="767.5" ></text>
</g>
<g >
<title>x2apic_send_IPI (1 samples, 0.01%)</title><rect x="908.1" y="213" width="0.2" height="15.0" fill="rgb(231,79,32)" rx="2" ry="2" />
<text  x="911.15" y="223.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="64.0" y="613" width="0.1" height="15.0" fill="rgb(220,118,38)" rx="2" ry="2" />
<text  x="67.01" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment@plt (3 samples, 0.03%)</title><rect x="1172.9" y="645" width="0.4" height="15.0" fill="rgb(245,106,17)" rx="2" ry="2" />
<text  x="1175.90" y="655.5" ></text>
</g>
<g >
<title>skb_unlink (1 samples, 0.01%)</title><rect x="973.5" y="357" width="0.1" height="15.0" fill="rgb(241,67,29)" rx="2" ry="2" />
<text  x="976.48" y="367.5" ></text>
</g>
<g >
<title>Spriteset_Map::Update (3 samples, 0.03%)</title><rect x="960.7" y="661" width="0.4" height="15.0" fill="rgb(254,50,33)" rx="2" ry="2" />
<text  x="963.75" y="671.5" ></text>
</g>
<g >
<title>do_IRQ (5 samples, 0.05%)</title><rect x="829.5" y="309" width="0.6" height="15.0" fill="rgb(224,148,26)" rx="2" ry="2" />
<text  x="832.49" y="319.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;RPG::EventCommand const*, std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt; &gt;, RPG::EventCommand*, RPG::EventCommand&gt; (3,556 samples, 35.54%)</title><rect x="268.1" y="565" width="419.4" height="15.0" fill="rgb(228,43,54)" rx="2" ry="2" />
<text  x="271.15" y="575.5" >std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;..</text>
</g>
<g >
<title>XFlush (17 samples, 0.17%)</title><rect x="971.8" y="613" width="2.0" height="15.0" fill="rgb(238,163,54)" rx="2" ry="2" />
<text  x="974.83" y="623.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (3 samples, 0.03%)</title><rect x="96.3" y="789" width="0.4" height="15.0" fill="rgb(246,6,14)" rx="2" ry="2" />
<text  x="99.32" y="799.5" ></text>
</g>
<g >
<title>Bitmap::MultiplyAlpha (2 samples, 0.02%)</title><rect x="919.6" y="293" width="0.2" height="15.0" fill="rgb(250,29,2)" rx="2" ry="2" />
<text  x="922.59" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="920.9" y="213" width="0.1" height="15.0" fill="rgb(211,66,37)" rx="2" ry="2" />
<text  x="923.89" y="223.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="646.6" y="261" width="0.1" height="15.0" fill="rgb(249,202,52)" rx="2" ry="2" />
<text  x="649.58" y="271.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (2 samples, 0.02%)</title><rect x="133.6" y="693" width="0.2" height="15.0" fill="rgb(232,89,41)" rx="2" ry="2" />
<text  x="136.59" y="703.5" ></text>
</g>
<g >
<title>unlink_chunk (10 samples, 0.10%)</title><rect x="88.8" y="789" width="1.2" height="15.0" fill="rgb(245,142,52)" rx="2" ry="2" />
<text  x="91.78" y="799.5" ></text>
</g>
<g >
<title>ext4_getattr (1 samples, 0.01%)</title><rect x="920.9" y="85" width="0.1" height="15.0" fill="rgb(210,19,47)" rx="2" ry="2" />
<text  x="923.89" y="95.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (3 samples, 0.03%)</title><rect x="964.4" y="581" width="0.4" height="15.0" fill="rgb(254,17,49)" rx="2" ry="2" />
<text  x="967.40" y="591.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;Drawable*&gt; (1 samples, 0.01%)</title><rect x="254.1" y="501" width="0.1" height="15.0" fill="rgb(245,64,2)" rx="2" ry="2" />
<text  x="257.11" y="511.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.01%)</title><rect x="960.0" y="501" width="0.2" height="15.0" fill="rgb(208,171,53)" rx="2" ry="2" />
<text  x="963.04" y="511.5" ></text>
</g>
<g >
<title>[libpthread-2.29.so] (6 samples, 0.06%)</title><rect x="1173.4" y="677" width="0.7" height="15.0" fill="rgb(254,49,24)" rx="2" ry="2" />
<text  x="1176.37" y="687.5" ></text>
</g>
<g >
<title>__sys_recvmsg (4 samples, 0.04%)</title><rect x="961.7" y="421" width="0.5" height="15.0" fill="rgb(214,191,2)" rx="2" ry="2" />
<text  x="964.69" y="431.5" ></text>
</g>
<g >
<title>sock_recvmsg (1 samples, 0.01%)</title><rect x="961.9" y="389" width="0.1" height="15.0" fill="rgb(209,99,31)" rx="2" ry="2" />
<text  x="964.92" y="399.5" ></text>
</g>
<g >
<title>Game_Interpreter::Push (3,644 samples, 36.42%)</title><rect x="257.8" y="613" width="429.7" height="15.0" fill="rgb(235,166,38)" rx="2" ry="2" />
<text  x="260.77" y="623.5" >Game_Interpreter::Push</text>
</g>
<g >
<title>std::_Rb_tree_increment (6 samples, 0.06%)</title><rect x="1173.4" y="661" width="0.7" height="15.0" fill="rgb(245,35,51)" rx="2" ry="2" />
<text  x="1176.37" y="671.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (4 samples, 0.04%)</title><rect x="829.6" y="245" width="0.5" height="15.0" fill="rgb(248,104,44)" rx="2" ry="2" />
<text  x="832.61" y="255.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.01%)</title><rect x="95.1" y="789" width="0.2" height="15.0" fill="rgb(222,126,54)" rx="2" ry="2" />
<text  x="98.14" y="799.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;RPG::EventCommand&gt;::deallocate (596 samples, 5.96%)</title><rect x="838.0" y="453" width="70.3" height="15.0" fill="rgb(228,86,42)" rx="2" ry="2" />
<text  x="840.98" y="463.5" >__gnu_c..</text>
</g>
<g >
<title>[libX11.so.6.3.0] (13 samples, 0.13%)</title><rect x="972.3" y="581" width="1.5" height="15.0" fill="rgb(211,185,34)" rx="2" ry="2" />
<text  x="975.30" y="591.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.01%)</title><rect x="919.2" y="373" width="0.2" height="15.0" fill="rgb(212,126,11)" rx="2" ry="2" />
<text  x="922.23" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (1 samples, 0.01%)</title><rect x="255.5" y="597" width="0.1" height="15.0" fill="rgb(224,121,14)" rx="2" ry="2" />
<text  x="258.53" y="607.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (2,686 samples, 26.84%)</title><rect x="339.5" y="453" width="316.8" height="15.0" fill="rgb(210,133,23)" rx="2" ry="2" />
<text  x="342.49" y="463.5" >std::_Vector_base&lt;int, std::allocator&lt;int&gt;..</text>
</g>
<g >
<title>Window_Selectable::Update (4 samples, 0.04%)</title><rect x="960.3" y="629" width="0.4" height="15.0" fill="rgb(210,198,15)" rx="2" ry="2" />
<text  x="963.27" y="639.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (17 samples, 0.17%)</title><rect x="98.7" y="757" width="2.0" height="15.0" fill="rgb(236,212,14)" rx="2" ry="2" />
<text  x="101.68" y="767.5" ></text>
</g>
<g >
<title>RPG::SaveEventExecState::operator= (5 samples, 0.05%)</title><rect x="256.8" y="597" width="0.6" height="15.0" fill="rgb(233,77,12)" rx="2" ry="2" />
<text  x="259.83" y="607.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (1 samples, 0.01%)</title><rect x="973.8" y="565" width="0.2" height="15.0" fill="rgb(210,162,51)" rx="2" ry="2" />
<text  x="976.84" y="575.5" ></text>
</g>
<g >
<title>pollwake (3 samples, 0.03%)</title><rect x="66.4" y="661" width="0.3" height="15.0" fill="rgb(236,19,15)" rx="2" ry="2" />
<text  x="69.37" y="671.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (1 samples, 0.01%)</title><rect x="920.4" y="165" width="0.1" height="15.0" fill="rgb(227,136,53)" rx="2" ry="2" />
<text  x="923.41" y="175.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (17 samples, 0.17%)</title><rect x="98.7" y="741" width="2.0" height="15.0" fill="rgb(251,55,18)" rx="2" ry="2" />
<text  x="101.68" y="751.5" ></text>
</g>
<g >
<title>_M_invoke (1 samples, 0.01%)</title><rect x="921.1" y="389" width="0.1" height="15.0" fill="rgb(242,162,45)" rx="2" ry="2" />
<text  x="924.12" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="88.7" y="789" width="0.1" height="15.0" fill="rgb(209,15,10)" rx="2" ry="2" />
<text  x="91.66" y="799.5" ></text>
</g>
<g >
<title>Window_NumberInput::Update (1 samples, 0.01%)</title><rect x="960.2" y="629" width="0.1" height="15.0" fill="rgb(220,104,6)" rx="2" ry="2" />
<text  x="963.16" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="962.9" y="453" width="0.1" height="15.0" fill="rgb(245,66,6)" rx="2" ry="2" />
<text  x="965.87" y="463.5" ></text>
</g>
<g >
<title>[libXi.so.6.1.0] (1 samples, 0.01%)</title><rect x="962.3" y="533" width="0.1" height="15.0" fill="rgb(228,176,28)" rx="2" ry="2" />
<text  x="965.28" y="543.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (91 samples, 0.91%)</title><rect x="54.2" y="725" width="10.8" height="15.0" fill="rgb(250,229,18)" rx="2" ry="2" />
<text  x="57.22" y="735.5" ></text>
</g>
<g >
<title>XSync (9 samples, 0.09%)</title><rect x="963.1" y="533" width="1.1" height="15.0" fill="rgb(222,182,14)" rx="2" ry="2" />
<text  x="966.10" y="543.5" ></text>
</g>
<g >
<title>LoadBitmap&lt;(&lt;unnamed&gt;::Material::Type)9&gt; (3 samples, 0.03%)</title><rect x="959.8" y="565" width="0.4" height="15.0" fill="rgb(226,135,13)" rx="2" ry="2" />
<text  x="962.80" y="575.5" ></text>
</g>
<g >
<title>std::bitset&lt;36ul&gt;::_M_copy_to_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.01%)</title><rect x="255.6" y="645" width="0.2" height="15.0" fill="rgb(218,125,37)" rx="2" ry="2" />
<text  x="258.65" y="655.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (27 samples, 0.27%)</title><rect x="1130.7" y="485" width="3.2" height="15.0" fill="rgb(215,69,39)" rx="2" ry="2" />
<text  x="1133.68" y="495.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="133.2" y="725" width="0.2" height="15.0" fill="rgb(218,64,38)" rx="2" ry="2" />
<text  x="136.24" y="735.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (2 samples, 0.02%)</title><rect x="922.2" y="421" width="0.2" height="15.0" fill="rgb(227,149,43)" rx="2" ry="2" />
<text  x="925.18" y="431.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (1 samples, 0.01%)</title><rect x="1187.9" y="757" width="0.1" height="15.0" fill="rgb(254,37,30)" rx="2" ry="2" />
<text  x="1190.88" y="767.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (9 samples, 0.09%)</title><rect x="963.1" y="469" width="1.1" height="15.0" fill="rgb(241,56,0)" rx="2" ry="2" />
<text  x="966.10" y="479.5" ></text>
</g>
<g >
<title>get_max_fast (26 samples, 0.26%)</title><rect x="639.3" y="341" width="3.0" height="15.0" fill="rgb(224,180,26)" rx="2" ry="2" />
<text  x="642.27" y="351.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.01%)</title><rect x="223.9" y="469" width="0.1" height="15.0" fill="rgb(209,209,11)" rx="2" ry="2" />
<text  x="226.92" y="479.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (88 samples, 0.88%)</title><rect x="961.1" y="645" width="10.4" height="15.0" fill="rgb(225,45,24)" rx="2" ry="2" />
<text  x="964.10" y="655.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="133.2" y="757" width="0.2" height="15.0" fill="rgb(207,191,10)" rx="2" ry="2" />
<text  x="136.24" y="767.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="924.0" y="533" width="0.1" height="15.0" fill="rgb(226,161,23)" rx="2" ry="2" />
<text  x="926.95" y="543.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (218 samples, 2.18%)</title><rect x="1135.0" y="645" width="25.8" height="15.0" fill="rgb(227,103,5)" rx="2" ry="2" />
<text  x="1138.04" y="655.5" >_..</text>
</g>
<g >
<title>__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int&gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;Input::UiSource::Update()::&lt;lambda(int)&gt; &gt; &gt; (2 samples, 0.02%)</title><rect x="255.3" y="597" width="0.2" height="15.0" fill="rgb(232,198,50)" rx="2" ry="2" />
<text  x="258.29" y="607.5" ></text>
</g>
<g >
<title>update_process_times (4 samples, 0.04%)</title><rect x="646.8" y="261" width="0.5" height="15.0" fill="rgb(240,44,44)" rx="2" ry="2" />
<text  x="649.82" y="271.5" ></text>
</g>
<g >
<title>kick_ilb (1 samples, 0.01%)</title><rect x="739.5" y="181" width="0.1" height="15.0" fill="rgb(250,167,16)" rx="2" ry="2" />
<text  x="742.51" y="191.5" ></text>
</g>
<g >
<title>std::_Bit_reference::operator bool (1 samples, 0.01%)</title><rect x="256.6" y="565" width="0.1" height="15.0" fill="rgb(229,136,31)" rx="2" ry="2" />
<text  x="259.59" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="916.5" y="389" width="0.1" height="15.0" fill="rgb(241,155,54)" rx="2" ry="2" />
<text  x="919.52" y="399.5" ></text>
</g>
<g >
<title>__libc_recvmsg (10 samples, 0.10%)</title><rect x="972.4" y="501" width="1.2" height="15.0" fill="rgb(237,216,45)" rx="2" ry="2" />
<text  x="975.42" y="511.5" ></text>
</g>
<g >
<title>__mnt_want_write_file (1 samples, 0.01%)</title><rect x="66.7" y="677" width="0.1" height="15.0" fill="rgb(207,172,26)" rx="2" ry="2" />
<text  x="69.72" y="687.5" ></text>
</g>
<g >
<title>[libGLX.so.0.0.0] (3 samples, 0.03%)</title><rect x="1163.0" y="629" width="0.3" height="15.0" fill="rgb(207,162,17)" rx="2" ry="2" />
<text  x="1165.99" y="639.5" ></text>
</g>
<g >
<title>__GI___poll (1 samples, 0.01%)</title><rect x="964.8" y="581" width="0.1" height="15.0" fill="rgb(231,171,31)" rx="2" ry="2" />
<text  x="967.76" y="591.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.01%)</title><rect x="647.1" y="229" width="0.1" height="15.0" fill="rgb(230,148,2)" rx="2" ry="2" />
<text  x="650.05" y="239.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Set (2 samples, 0.02%)</title><rect x="955.2" y="597" width="0.2" height="15.0" fill="rgb(215,2,29)" rx="2" ry="2" />
<text  x="958.20" y="607.5" ></text>
</g>
<g >
<title>consume_skb (1 samples, 0.01%)</title><rect x="961.9" y="341" width="0.1" height="15.0" fill="rgb(221,93,54)" rx="2" ry="2" />
<text  x="964.92" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign@plt (1 samples, 0.01%)</title><rect x="924.1" y="549" width="0.1" height="15.0" fill="rgb(220,199,23)" rx="2" ry="2" />
<text  x="927.07" y="559.5" ></text>
</g>
<g >
<title>find_busiest_group (2 samples, 0.02%)</title><rect x="64.2" y="629" width="0.3" height="15.0" fill="rgb(221,195,27)" rx="2" ry="2" />
<text  x="67.25" y="639.5" ></text>
</g>
<g >
<title>operator() (2 samples, 0.02%)</title><rect x="959.6" y="629" width="0.2" height="15.0" fill="rgb(224,198,14)" rx="2" ry="2" />
<text  x="962.57" y="639.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.02%)</title><rect x="53.5" y="725" width="0.3" height="15.0" fill="rgb(238,13,17)" rx="2" ry="2" />
<text  x="56.52" y="735.5" ></text>
</g>
<g >
<title>LoadBitmap (9 samples, 0.09%)</title><rect x="921.5" y="469" width="1.0" height="15.0" fill="rgb(218,110,6)" rx="2" ry="2" />
<text  x="924.48" y="479.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (8 samples, 0.08%)</title><rect x="963.2" y="261" width="1.0" height="15.0" fill="rgb(220,160,26)" rx="2" ry="2" />
<text  x="966.22" y="271.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.01%)</title><rect x="963.0" y="133" width="0.1" height="15.0" fill="rgb(247,58,43)" rx="2" ry="2" />
<text  x="965.99" y="143.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.04%)</title><rect x="647.4" y="309" width="0.5" height="15.0" fill="rgb(231,31,30)" rx="2" ry="2" />
<text  x="650.41" y="319.5" ></text>
</g>
<g >
<title>SDL_UpdateTexture (1 samples, 0.01%)</title><rect x="975.0" y="661" width="0.1" height="15.0" fill="rgb(229,192,45)" rx="2" ry="2" />
<text  x="978.01" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (2 samples, 0.02%)</title><rect x="924.0" y="581" width="0.2" height="15.0" fill="rgb(244,24,42)" rx="2" ry="2" />
<text  x="926.95" y="591.5" ></text>
</g>
<g >
<title>ext4_file_getattr (1 samples, 0.01%)</title><rect x="920.9" y="101" width="0.1" height="15.0" fill="rgb(213,222,15)" rx="2" ry="2" />
<text  x="923.89" y="111.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (55 samples, 0.55%)</title><rect x="917.7" y="597" width="6.5" height="15.0" fill="rgb(240,193,4)" rx="2" ry="2" />
<text  x="920.70" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (2 samples, 0.02%)</title><rect x="1187.6" y="773" width="0.3" height="15.0" fill="rgb(213,76,42)" rx="2" ry="2" />
<text  x="1190.64" y="783.5" ></text>
</g>
<g >
<title>pixman_transform_init_scale@plt (1 samples, 0.01%)</title><rect x="185.5" y="549" width="0.1" height="15.0" fill="rgb(247,82,35)" rx="2" ry="2" />
<text  x="188.48" y="559.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.02%)</title><rect x="63.8" y="613" width="0.2" height="15.0" fill="rgb(253,70,40)" rx="2" ry="2" />
<text  x="66.78" y="623.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.01%)</title><rect x="646.9" y="229" width="0.2" height="15.0" fill="rgb(246,203,27)" rx="2" ry="2" />
<text  x="649.94" y="239.5" ></text>
</g>
<g >
<title>_IO_new_file_fopen (2 samples, 0.02%)</title><rect x="920.6" y="277" width="0.3" height="15.0" fill="rgb(233,223,41)" rx="2" ry="2" />
<text  x="923.65" y="287.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="642.3" y="293" width="0.2" height="15.0" fill="rgb(253,178,53)" rx="2" ry="2" />
<text  x="645.34" y="303.5" ></text>
</g>
<g >
<title>_XSetLastRequestRead (1 samples, 0.01%)</title><rect x="72.0" y="789" width="0.1" height="15.0" fill="rgb(217,57,29)" rx="2" ry="2" />
<text  x="75.03" y="799.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (3 samples, 0.03%)</title><rect x="224.9" y="405" width="0.3" height="15.0" fill="rgb(235,212,9)" rx="2" ry="2" />
<text  x="227.87" y="415.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="224.0" y="469" width="0.2" height="15.0" fill="rgb(234,97,47)" rx="2" ry="2" />
<text  x="227.04" y="479.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="676.5" y="261" width="0.2" height="15.0" fill="rgb(207,117,47)" rx="2" ry="2" />
<text  x="679.54" y="271.5" ></text>
</g>
<g >
<title>malloc_consolidate (2 samples, 0.02%)</title><rect x="225.0" y="341" width="0.2" height="15.0" fill="rgb(229,106,45)" rx="2" ry="2" />
<text  x="227.99" y="351.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="962.2" y="501" width="0.1" height="15.0" fill="rgb(206,38,37)" rx="2" ry="2" />
<text  x="965.16" y="511.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.01%)</title><rect x="963.0" y="229" width="0.1" height="15.0" fill="rgb(226,168,5)" rx="2" ry="2" />
<text  x="965.99" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_poll (2 samples, 0.02%)</title><rect x="974.7" y="549" width="0.2" height="15.0" fill="rgb(229,128,53)" rx="2" ry="2" />
<text  x="977.66" y="559.5" ></text>
</g>
<g >
<title>speex_resampler_process_interleaved_int (3 samples, 0.03%)</title><rect x="916.6" y="437" width="0.4" height="15.0" fill="rgb(221,79,19)" rx="2" ry="2" />
<text  x="919.64" y="447.5" ></text>
</g>
<g >
<title>__pollwait (1 samples, 0.01%)</title><rect x="53.8" y="741" width="0.1" height="15.0" fill="rgb(227,12,26)" rx="2" ry="2" />
<text  x="56.75" y="751.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.02%)</title><rect x="324.4" y="341" width="0.2" height="15.0" fill="rgb(227,164,22)" rx="2" ry="2" />
<text  x="327.40" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::vector (1 samples, 0.01%)</title><rect x="920.4" y="293" width="0.1" height="15.0" fill="rgb(218,162,2)" rx="2" ry="2" />
<text  x="923.41" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;RPG::EventCommand&gt;::allocate (86 samples, 0.86%)</title><rect x="258.0" y="533" width="10.1" height="15.0" fill="rgb(226,177,2)" rx="2" ry="2" />
<text  x="261.01" y="543.5" ></text>
</g>
<g >
<title>posix_get_monotonic_raw (4 samples, 0.04%)</title><rect x="1156.4" y="597" width="0.5" height="15.0" fill="rgb(212,168,51)" rx="2" ry="2" />
<text  x="1159.39" y="607.5" ></text>
</g>
<g >
<title>GetRequest (4 samples, 0.04%)</title><rect x="918.2" y="533" width="0.4" height="15.0" fill="rgb(227,71,29)" rx="2" ry="2" />
<text  x="921.17" y="543.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="63.7" y="501" width="0.1" height="15.0" fill="rgb(254,225,34)" rx="2" ry="2" />
<text  x="66.66" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.02%)</title><rect x="922.8" y="453" width="0.2" height="15.0" fill="rgb(252,162,46)" rx="2" ry="2" />
<text  x="925.77" y="463.5" ></text>
</g>
<g >
<title>Cache::System (1 samples, 0.01%)</title><rect x="960.2" y="549" width="0.1" height="15.0" fill="rgb(247,154,44)" rx="2" ry="2" />
<text  x="963.16" y="559.5" ></text>
</g>
<g >
<title>put_prev_task_fair (1 samples, 0.01%)</title><rect x="64.8" y="645" width="0.2" height="15.0" fill="rgb(245,159,21)" rx="2" ry="2" />
<text  x="67.84" y="655.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="708.5" y="469" width="0.1" height="15.0" fill="rgb(215,127,0)" rx="2" ry="2" />
<text  x="711.49" y="479.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;RPG::EventCommand*&gt; (1,096 samples, 10.95%)</title><rect x="708.7" y="469" width="129.3" height="15.0" fill="rgb(215,20,41)" rx="2" ry="2" />
<text  x="711.73" y="479.5" >std::_Destroy_au..</text>
</g>
<g >
<title>__libc_calloc (3 samples, 0.03%)</title><rect x="224.9" y="373" width="0.3" height="15.0" fill="rgb(226,142,13)" rx="2" ry="2" />
<text  x="227.87" y="383.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (27 samples, 0.27%)</title><rect x="135.4" y="789" width="3.1" height="15.0" fill="rgb(246,94,9)" rx="2" ry="2" />
<text  x="138.36" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (1 samples, 0.01%)</title><rect x="922.3" y="357" width="0.1" height="15.0" fill="rgb(241,207,5)" rx="2" ry="2" />
<text  x="925.30" y="367.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (3 samples, 0.03%)</title><rect x="962.4" y="533" width="0.4" height="15.0" fill="rgb(253,153,53)" rx="2" ry="2" />
<text  x="965.40" y="543.5" ></text>
</g>
<g >
<title>run_rebalance_domains (3 samples, 0.03%)</title><rect x="649.4" y="309" width="0.4" height="15.0" fill="rgb(227,127,4)" rx="2" ry="2" />
<text  x="652.41" y="319.5" ></text>
</g>
<g >
<title>__tzfile_read (1 samples, 0.01%)</title><rect x="916.5" y="437" width="0.1" height="15.0" fill="rgb(228,5,49)" rx="2" ry="2" />
<text  x="919.52" y="447.5" ></text>
</g>
<g >
<title>Output::DebugStr (2 samples, 0.02%)</title><rect x="916.4" y="501" width="0.2" height="15.0" fill="rgb(245,201,47)" rx="2" ry="2" />
<text  x="919.40" y="511.5" ></text>
</g>
<g >
<title>Graphics::UpdateTitle (2 samples, 0.02%)</title><rect x="254.8" y="661" width="0.3" height="15.0" fill="rgb(242,50,12)" rx="2" ry="2" />
<text  x="257.82" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (1 samples, 0.01%)</title><rect x="696.7" y="565" width="0.1" height="15.0" fill="rgb(242,154,26)" rx="2" ry="2" />
<text  x="699.70" y="575.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="642.3" y="277" width="0.2" height="15.0" fill="rgb(237,140,17)" rx="2" ry="2" />
<text  x="645.34" y="287.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="960.0" y="517" width="0.2" height="15.0" fill="rgb(229,41,2)" rx="2" ry="2" />
<text  x="963.04" y="527.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.01%)</title><rect x="1133.7" y="389" width="0.2" height="15.0" fill="rgb(236,184,41)" rx="2" ry="2" />
<text  x="1136.75" y="399.5" ></text>
</g>
<g >
<title>Window_NumberInput::Update (1 samples, 0.01%)</title><rect x="91.6" y="789" width="0.1" height="15.0" fill="rgb(252,200,50)" rx="2" ry="2" />
<text  x="94.61" y="799.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="656.0" y="293" width="0.1" height="15.0" fill="rgb(232,204,24)" rx="2" ry="2" />
<text  x="659.02" y="303.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (1 samples, 0.01%)</title><rect x="919.4" y="293" width="0.1" height="15.0" fill="rgb(227,131,43)" rx="2" ry="2" />
<text  x="922.35" y="303.5" ></text>
</g>
<g >
<title>ImageBMP::ReadBMP (4 samples, 0.04%)</title><rect x="919.8" y="293" width="0.5" height="15.0" fill="rgb(222,128,53)" rx="2" ry="2" />
<text  x="922.82" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (1 samples, 0.01%)</title><rect x="960.4" y="421" width="0.1" height="15.0" fill="rgb(242,69,51)" rx="2" ry="2" />
<text  x="963.39" y="431.5" ></text>
</g>
<g >
<title>Window::Update (1 samples, 0.01%)</title><rect x="960.6" y="597" width="0.1" height="15.0" fill="rgb(215,87,32)" rx="2" ry="2" />
<text  x="963.63" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (144 samples, 1.44%)</title><rect x="1139.9" y="629" width="17.0" height="15.0" fill="rgb(245,190,34)" rx="2" ry="2" />
<text  x="1142.88" y="639.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (2 samples, 0.02%)</title><rect x="959.6" y="517" width="0.2" height="15.0" fill="rgb(222,31,4)" rx="2" ry="2" />
<text  x="962.57" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="920.5" y="165" width="0.1" height="15.0" fill="rgb(226,110,28)" rx="2" ry="2" />
<text  x="923.53" y="175.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandControlVariables (91 samples, 0.91%)</title><rect x="697.9" y="597" width="10.7" height="15.0" fill="rgb(222,180,24)" rx="2" ry="2" />
<text  x="700.88" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (2 samples, 0.02%)</title><rect x="924.0" y="565" width="0.2" height="15.0" fill="rgb(211,176,31)" rx="2" ry="2" />
<text  x="926.95" y="575.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.01%)</title><rect x="920.3" y="245" width="0.1" height="15.0" fill="rgb(229,123,27)" rx="2" ry="2" />
<text  x="923.30" y="255.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (11 samples, 0.11%)</title><rect x="251.2" y="581" width="1.3" height="15.0" fill="rgb(221,228,17)" rx="2" ry="2" />
<text  x="254.17" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (15 samples, 0.15%)</title><rect x="1185.3" y="805" width="1.8" height="15.0" fill="rgb(214,165,1)" rx="2" ry="2" />
<text  x="1188.28" y="815.5" ></text>
</g>
<g >
<title>Utils::Tokenize (2 samples, 0.02%)</title><rect x="921.1" y="421" width="0.3" height="15.0" fill="rgb(252,207,19)" rx="2" ry="2" />
<text  x="924.12" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (3 samples, 0.03%)</title><rect x="224.9" y="469" width="0.3" height="15.0" fill="rgb(251,37,0)" rx="2" ry="2" />
<text  x="227.87" y="479.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="646.6" y="245" width="0.1" height="15.0" fill="rgb(245,94,4)" rx="2" ry="2" />
<text  x="649.58" y="255.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (8 samples, 0.08%)</title><rect x="917.7" y="549" width="0.9" height="15.0" fill="rgb(210,135,11)" rx="2" ry="2" />
<text  x="920.70" y="559.5" ></text>
</g>
<g >
<title>resched_curr (1 samples, 0.01%)</title><rect x="223.9" y="373" width="0.1" height="15.0" fill="rgb(228,60,41)" rx="2" ry="2" />
<text  x="226.92" y="383.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (192 samples, 1.92%)</title><rect x="656.8" y="373" width="22.7" height="15.0" fill="rgb(216,83,30)" rx="2" ry="2" />
<text  x="659.84" y="383.5" >s..</text>
</g>
<g >
<title>xcb_poll_for_reply64 (2 samples, 0.02%)</title><rect x="973.6" y="565" width="0.2" height="15.0" fill="rgb(230,100,54)" rx="2" ry="2" />
<text  x="976.60" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (1 samples, 0.01%)</title><rect x="922.2" y="341" width="0.1" height="15.0" fill="rgb(228,175,5)" rx="2" ry="2" />
<text  x="925.18" y="351.5" ></text>
</g>
<g >
<title>Game_Player::UpdateScroll (1 samples, 0.01%)</title><rect x="957.6" y="629" width="0.1" height="15.0" fill="rgb(221,124,27)" rx="2" ry="2" />
<text  x="960.56" y="639.5" ></text>
</g>
<g >
<title>pixman_transform_point_31_16 (3 samples, 0.03%)</title><rect x="223.5" y="501" width="0.3" height="15.0" fill="rgb(243,150,32)" rx="2" ry="2" />
<text  x="226.45" y="511.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.01%)</title><rect x="51.3" y="661" width="0.1" height="15.0" fill="rgb(246,186,52)" rx="2" ry="2" />
<text  x="54.28" y="671.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (1 samples, 0.01%)</title><rect x="919.2" y="469" width="0.2" height="15.0" fill="rgb(239,110,5)" rx="2" ry="2" />
<text  x="922.23" y="479.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="676.5" y="245" width="0.2" height="15.0" fill="rgb(239,67,22)" rx="2" ry="2" />
<text  x="679.54" y="255.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="646.6" y="293" width="0.1" height="15.0" fill="rgb(211,146,40)" rx="2" ry="2" />
<text  x="649.58" y="303.5" ></text>
</g>
<g >
<title>__GI___poll (1 samples, 0.01%)</title><rect x="964.2" y="549" width="0.1" height="15.0" fill="rgb(238,205,40)" rx="2" ry="2" />
<text  x="967.17" y="559.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="100.9" y="773" width="0.1" height="15.0" fill="rgb(206,38,7)" rx="2" ry="2" />
<text  x="103.92" y="783.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="973.8" y="533" width="0.2" height="15.0" fill="rgb(249,160,11)" rx="2" ry="2" />
<text  x="976.84" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (54 samples, 0.54%)</title><rect x="1166.5" y="645" width="6.4" height="15.0" fill="rgb(219,186,8)" rx="2" ry="2" />
<text  x="1169.53" y="655.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (2 samples, 0.02%)</title><rect x="959.6" y="501" width="0.2" height="15.0" fill="rgb(214,140,52)" rx="2" ry="2" />
<text  x="962.57" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (7 samples, 0.07%)</title><rect x="715.6" y="373" width="0.8" height="15.0" fill="rgb(218,224,51)" rx="2" ry="2" />
<text  x="718.57" y="383.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandKeyInputProc (4 samples, 0.04%)</title><rect x="915.1" y="597" width="0.5" height="15.0" fill="rgb(225,79,7)" rx="2" ry="2" />
<text  x="918.11" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (59 samples, 0.59%)</title><rect x="326.8" y="389" width="6.9" height="15.0" fill="rgb(218,201,9)" rx="2" ry="2" />
<text  x="329.76" y="399.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (3 samples, 0.03%)</title><rect x="133.2" y="773" width="0.4" height="15.0" fill="rgb(249,163,25)" rx="2" ry="2" />
<text  x="136.24" y="783.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::Terrain&gt; (2 samples, 0.02%)</title><rect x="960.7" y="613" width="0.3" height="15.0" fill="rgb(250,52,30)" rx="2" ry="2" />
<text  x="963.75" y="623.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.01%)</title><rect x="326.6" y="277" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="329.64" y="287.5" ></text>
</g>
<g >
<title>i40e_clean_rx_irq (1 samples, 0.01%)</title><rect x="1128.8" y="501" width="0.1" height="15.0" fill="rgb(234,135,30)" rx="2" ry="2" />
<text  x="1131.79" y="511.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateSceneCalling (2 samples, 0.02%)</title><rect x="959.6" y="613" width="0.2" height="15.0" fill="rgb(217,88,40)" rx="2" ry="2" />
<text  x="962.57" y="623.5" ></text>
</g>
<g >
<title>__GI___writev (1 samples, 0.01%)</title><rect x="963.0" y="437" width="0.1" height="15.0" fill="rgb(242,228,46)" rx="2" ry="2" />
<text  x="965.99" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="964.5" y="533" width="0.3" height="15.0" fill="rgb(243,109,6)" rx="2" ry="2" />
<text  x="967.52" y="543.5" ></text>
</g>
<g >
<title>FileFinder::MakeCanonical (2 samples, 0.02%)</title><rect x="921.1" y="453" width="0.3" height="15.0" fill="rgb(235,40,11)" rx="2" ry="2" />
<text  x="924.12" y="463.5" ></text>
</g>
<g >
<title>unix_stream_read_generic (1 samples, 0.01%)</title><rect x="961.9" y="357" width="0.1" height="15.0" fill="rgb(228,113,9)" rx="2" ry="2" />
<text  x="964.92" y="367.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;RPG::EventCommand*&gt; (1,096 samples, 10.95%)</title><rect x="708.7" y="485" width="129.3" height="15.0" fill="rgb(206,208,42)" rx="2" ry="2" />
<text  x="711.73" y="495.5" >std::_Destroy&lt;RP..</text>
</g>
<g >
<title>native_write_msr (8 samples, 0.08%)</title><rect x="963.2" y="197" width="1.0" height="15.0" fill="rgb(214,77,37)" rx="2" ry="2" />
<text  x="966.22" y="207.5" ></text>
</g>
<g >
<title>FileRequestAsync::Bind (3 samples, 0.03%)</title><rect x="918.6" y="533" width="0.4" height="15.0" fill="rgb(210,192,6)" rx="2" ry="2" />
<text  x="921.64" y="543.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.01%)</title><rect x="961.9" y="325" width="0.1" height="15.0" fill="rgb(215,189,33)" rx="2" ry="2" />
<text  x="964.92" y="335.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="1163.5" y="661" width="0.1" height="15.0" fill="rgb(236,219,27)" rx="2" ry="2" />
<text  x="1166.47" y="671.5" ></text>
</g>
<g >
<title>sock_recvmsg (3 samples, 0.03%)</title><rect x="973.2" y="405" width="0.4" height="15.0" fill="rgb(215,125,23)" rx="2" ry="2" />
<text  x="976.25" y="415.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.01%)</title><rect x="223.9" y="437" width="0.1" height="15.0" fill="rgb(230,199,33)" rx="2" ry="2" />
<text  x="226.92" y="447.5" ></text>
</g>
<g >
<title>free_perturb (23 samples, 0.23%)</title><rect x="826.8" y="325" width="2.7" height="15.0" fill="rgb(240,196,42)" rx="2" ry="2" />
<text  x="829.78" y="335.5" ></text>
</g>
<g >
<title>_int_malloc (47 samples, 0.47%)</title><rect x="151.6" y="789" width="5.6" height="15.0" fill="rgb(239,129,1)" rx="2" ry="2" />
<text  x="154.63" y="799.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (3 samples, 0.03%)</title><rect x="224.9" y="549" width="0.3" height="15.0" fill="rgb(249,164,46)" rx="2" ry="2" />
<text  x="227.87" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (4 samples, 0.04%)</title><rect x="917.7" y="469" width="0.5" height="15.0" fill="rgb(243,47,18)" rx="2" ry="2" />
<text  x="920.70" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (8 samples, 0.08%)</title><rect x="177.5" y="677" width="0.9" height="15.0" fill="rgb(251,118,21)" rx="2" ry="2" />
<text  x="180.46" y="687.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.01%)</title><rect x="1128.8" y="533" width="0.1" height="15.0" fill="rgb(206,90,10)" rx="2" ry="2" />
<text  x="1131.79" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (3 samples, 0.03%)</title><rect x="224.9" y="453" width="0.3" height="15.0" fill="rgb(246,213,5)" rx="2" ry="2" />
<text  x="227.87" y="463.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (3 samples, 0.03%)</title><rect x="1128.3" y="517" width="0.4" height="15.0" fill="rgb(215,116,45)" rx="2" ry="2" />
<text  x="1131.32" y="527.5" ></text>
</g>
<g >
<title>xhci_urb_enqueue (1 samples, 0.01%)</title><rect x="133.7" y="501" width="0.1" height="15.0" fill="rgb(219,5,15)" rx="2" ry="2" />
<text  x="136.71" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (4 samples, 0.04%)</title><rect x="914.6" y="565" width="0.5" height="15.0" fill="rgb(209,75,7)" rx="2" ry="2" />
<text  x="917.64" y="575.5" ></text>
</g>
<g >
<title>FileRequestAsync::Bind&lt;Game_Picture&gt; (3 samples, 0.03%)</title><rect x="918.6" y="549" width="0.4" height="15.0" fill="rgb(222,85,46)" rx="2" ry="2" />
<text  x="921.64" y="559.5" ></text>
</g>
<g >
<title>WriteLog (2 samples, 0.02%)</title><rect x="916.4" y="485" width="0.2" height="15.0" fill="rgb(248,196,42)" rx="2" ry="2" />
<text  x="919.40" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="973.5" y="341" width="0.1" height="15.0" fill="rgb(251,93,2)" rx="2" ry="2" />
<text  x="976.48" y="351.5" ></text>
</g>
<g >
<title>SDLAudioP2 (488 samples, 4.88%)</title><rect x="10.0" y="821" width="57.5" height="15.0" fill="rgb(231,115,13)" rx="2" ry="2" />
<text  x="13.00" y="831.5" >SDLAud..</text>
</g>
<g >
<title>common_file_perm (1 samples, 0.01%)</title><rect x="920.5" y="37" width="0.1" height="15.0" fill="rgb(211,188,22)" rx="2" ry="2" />
<text  x="923.53" y="47.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (86 samples, 0.86%)</title><rect x="258.0" y="501" width="10.1" height="15.0" fill="rgb(242,58,21)" rx="2" ry="2" />
<text  x="261.01" y="511.5" ></text>
</g>
<g >
<title>_int_malloc (85 samples, 0.85%)</title><rect x="258.1" y="485" width="10.0" height="15.0" fill="rgb(232,228,37)" rx="2" ry="2" />
<text  x="261.12" y="495.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="891.3" y="261" width="0.1" height="15.0" fill="rgb(234,45,37)" rx="2" ry="2" />
<text  x="894.29" y="271.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandConditionalBranch (1 samples, 0.01%)</title><rect x="70.3" y="789" width="0.1" height="15.0" fill="rgb(237,141,21)" rx="2" ry="2" />
<text  x="73.26" y="799.5" ></text>
</g>
<g >
<title>Cache::System (3 samples, 0.03%)</title><rect x="959.8" y="597" width="0.4" height="15.0" fill="rgb(211,124,18)" rx="2" ry="2" />
<text  x="962.80" y="607.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::destroy&lt;RPG::SaveEventExecFrame&gt; (1,692 samples, 16.91%)</title><rect x="708.7" y="565" width="199.6" height="15.0" fill="rgb(214,158,8)" rx="2" ry="2" />
<text  x="711.73" y="575.5" >std::allocator_traits&lt;std:..</text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.02%)</title><rect x="63.8" y="565" width="0.2" height="15.0" fill="rgb(214,184,35)" rx="2" ry="2" />
<text  x="66.78" y="575.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (149 samples, 1.49%)</title><rect x="159.9" y="693" width="17.6" height="15.0" fill="rgb(222,147,4)" rx="2" ry="2" />
<text  x="162.89" y="703.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (7 samples, 0.07%)</title><rect x="1134.0" y="629" width="0.8" height="15.0" fill="rgb(226,101,16)" rx="2" ry="2" />
<text  x="1136.98" y="639.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (11 samples, 0.11%)</title><rect x="972.3" y="533" width="1.3" height="15.0" fill="rgb(253,54,25)" rx="2" ry="2" />
<text  x="975.30" y="543.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (6 samples, 0.06%)</title><rect x="961.6" y="533" width="0.7" height="15.0" fill="rgb(234,196,18)" rx="2" ry="2" />
<text  x="964.57" y="543.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.02%)</title><rect x="255.8" y="629" width="0.2" height="15.0" fill="rgb(249,178,48)" rx="2" ry="2" />
<text  x="258.76" y="639.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (1 samples, 0.01%)</title><rect x="918.9" y="453" width="0.1" height="15.0" fill="rgb(217,207,15)" rx="2" ry="2" />
<text  x="921.88" y="463.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="963.0" y="485" width="0.1" height="15.0" fill="rgb(212,87,12)" rx="2" ry="2" />
<text  x="965.99" y="495.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (15 samples, 0.15%)</title><rect x="919.4" y="453" width="1.7" height="15.0" fill="rgb(238,27,41)" rx="2" ry="2" />
<text  x="922.35" y="463.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.01%)</title><rect x="676.8" y="149" width="0.1" height="15.0" fill="rgb(218,52,46)" rx="2" ry="2" />
<text  x="679.77" y="159.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="826.7" y="277" width="0.1" height="15.0" fill="rgb(239,210,50)" rx="2" ry="2" />
<text  x="829.66" y="287.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="919.4" y="261" width="0.1" height="15.0" fill="rgb(223,75,11)" rx="2" ry="2" />
<text  x="922.35" y="271.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (4 samples, 0.04%)</title><rect x="638.8" y="325" width="0.5" height="15.0" fill="rgb(232,6,36)" rx="2" ry="2" />
<text  x="641.80" y="335.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="676.8" y="277" width="0.1" height="15.0" fill="rgb(232,99,35)" rx="2" ry="2" />
<text  x="679.77" y="287.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (4 samples, 0.04%)</title><rect x="649.3" y="357" width="0.5" height="15.0" fill="rgb(227,93,48)" rx="2" ry="2" />
<text  x="652.29" y="367.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.01%)</title><rect x="255.1" y="613" width="0.1" height="15.0" fill="rgb(249,55,43)" rx="2" ry="2" />
<text  x="258.06" y="623.5" ></text>
</g>
<g >
<title>alloc_perturb (13 samples, 0.13%)</title><rect x="637.3" y="341" width="1.5" height="15.0" fill="rgb(225,91,6)" rx="2" ry="2" />
<text  x="640.27" y="351.5" ></text>
</g>
<g >
<title>std::fill_n&lt;unsigned char*, unsigned long, unsigned char&gt; (1 samples, 0.01%)</title><rect x="917.6" y="405" width="0.1" height="15.0" fill="rgb(213,35,28)" rx="2" ry="2" />
<text  x="920.58" y="415.5" ></text>
</g>
<g >
<title>handle_edge_irq (2 samples, 0.02%)</title><rect x="133.6" y="741" width="0.2" height="15.0" fill="rgb(229,195,30)" rx="2" ry="2" />
<text  x="136.59" y="751.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_weak_add_ref (1 samples, 0.01%)</title><rect x="918.9" y="469" width="0.1" height="15.0" fill="rgb(243,13,15)" rx="2" ry="2" />
<text  x="921.88" y="479.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (1 samples, 0.01%)</title><rect x="676.8" y="181" width="0.1" height="15.0" fill="rgb(207,164,11)" rx="2" ry="2" />
<text  x="679.77" y="191.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.01%)</title><rect x="326.6" y="293" width="0.2" height="15.0" fill="rgb(224,135,3)" rx="2" ry="2" />
<text  x="329.64" y="303.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (34 samples, 0.34%)</title><rect x="1129.9" y="517" width="4.0" height="15.0" fill="rgb(233,211,2)" rx="2" ry="2" />
<text  x="1132.86" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (1 samples, 0.01%)</title><rect x="255.5" y="581" width="0.1" height="15.0" fill="rgb(229,28,19)" rx="2" ry="2" />
<text  x="258.53" y="591.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="963.0" y="469" width="0.1" height="15.0" fill="rgb(249,101,30)" rx="2" ry="2" />
<text  x="965.99" y="479.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="960.2" y="485" width="0.1" height="15.0" fill="rgb(237,59,46)" rx="2" ry="2" />
<text  x="963.16" y="495.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (8 samples, 0.08%)</title><rect x="1161.9" y="501" width="1.0" height="15.0" fill="rgb(217,127,35)" rx="2" ry="2" />
<text  x="1164.93" y="511.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.01%)</title><rect x="973.7" y="437" width="0.1" height="15.0" fill="rgb(207,209,5)" rx="2" ry="2" />
<text  x="976.72" y="447.5" ></text>
</g>
<g >
<title>Cache::System (3 samples, 0.03%)</title><rect x="959.8" y="581" width="0.4" height="15.0" fill="rgb(251,73,53)" rx="2" ry="2" />
<text  x="962.80" y="591.5" ></text>
</g>
<g >
<title>pixman_transform_point_31_16 (1 samples, 0.01%)</title><rect x="185.1" y="517" width="0.1" height="15.0" fill="rgb(233,13,47)" rx="2" ry="2" />
<text  x="188.12" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="960.2" y="469" width="0.1" height="15.0" fill="rgb(220,183,29)" rx="2" ry="2" />
<text  x="963.16" y="479.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.01%)</title><rect x="326.6" y="309" width="0.2" height="15.0" fill="rgb(231,14,3)" rx="2" ry="2" />
<text  x="329.64" y="319.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (1 samples, 0.01%)</title><rect x="919.4" y="245" width="0.1" height="15.0" fill="rgb(253,190,42)" rx="2" ry="2" />
<text  x="922.35" y="255.5" ></text>
</g>
<g >
<title>do_sched_yield (1 samples, 0.01%)</title><rect x="101.2" y="725" width="0.1" height="15.0" fill="rgb(211,120,54)" rx="2" ry="2" />
<text  x="104.16" y="735.5" ></text>
</g>
<g >
<title>syscall@plt (1 samples, 0.01%)</title><rect x="1189.5" y="805" width="0.1" height="15.0" fill="rgb(210,32,29)" rx="2" ry="2" />
<text  x="1192.53" y="815.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="638.8" y="229" width="0.1" height="15.0" fill="rgb(215,226,44)" rx="2" ry="2" />
<text  x="641.80" y="239.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (11 samples, 0.11%)</title><rect x="162.7" y="677" width="1.3" height="15.0" fill="rgb(211,156,11)" rx="2" ry="2" />
<text  x="165.72" y="687.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="64.0" y="533" width="0.1" height="15.0" fill="rgb(206,168,11)" rx="2" ry="2" />
<text  x="67.01" y="543.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="965.5" y="421" width="0.1" height="15.0" fill="rgb(235,198,23)" rx="2" ry="2" />
<text  x="968.46" y="431.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.01%)</title><rect x="66.3" y="725" width="0.1" height="15.0" fill="rgb(233,219,21)" rx="2" ry="2" />
<text  x="69.25" y="735.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (2 samples, 0.02%)</title><rect x="973.8" y="581" width="0.3" height="15.0" fill="rgb(220,120,36)" rx="2" ry="2" />
<text  x="976.84" y="591.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipTo (1 samples, 0.01%)</title><rect x="134.1" y="789" width="0.1" height="15.0" fill="rgb(209,131,40)" rx="2" ry="2" />
<text  x="137.06" y="799.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="133.7" y="597" width="0.1" height="15.0" fill="rgb(215,220,23)" rx="2" ry="2" />
<text  x="136.71" y="607.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.01%)</title><rect x="159.5" y="789" width="0.2" height="15.0" fill="rgb(206,130,2)" rx="2" ry="2" />
<text  x="162.53" y="799.5" ></text>
</g>
<g >
<title>interrupt_entry (1 samples, 0.01%)</title><rect x="1188.2" y="805" width="0.1" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="1191.23" y="815.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (8 samples, 0.08%)</title><rect x="250.2" y="549" width="1.0" height="15.0" fill="rgb(211,27,28)" rx="2" ry="2" />
<text  x="253.22" y="559.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.01%)</title><rect x="1128.8" y="421" width="0.1" height="15.0" fill="rgb(211,210,39)" rx="2" ry="2" />
<text  x="1131.79" y="431.5" ></text>
</g>
<g >
<title>Sprite::~Sprite (1 samples, 0.01%)</title><rect x="91.3" y="789" width="0.1" height="15.0" fill="rgb(229,166,27)" rx="2" ry="2" />
<text  x="94.25" y="799.5" ></text>
</g>
<g >
<title>__libc_recvmsg (5 samples, 0.05%)</title><rect x="961.6" y="485" width="0.6" height="15.0" fill="rgb(235,106,21)" rx="2" ry="2" />
<text  x="964.57" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (1 samples, 0.01%)</title><rect x="962.5" y="453" width="0.1" height="15.0" fill="rgb(211,150,27)" rx="2" ry="2" />
<text  x="965.51" y="463.5" ></text>
</g>
<g >
<title>put_timespec64 (7 samples, 0.07%)</title><rect x="1155.4" y="581" width="0.9" height="15.0" fill="rgb(227,41,4)" rx="2" ry="2" />
<text  x="1158.45" y="591.5" ></text>
</g>
<g >
<title>pipe_read (1 samples, 0.01%)</title><rect x="65.7" y="693" width="0.1" height="15.0" fill="rgb(218,191,51)" rx="2" ry="2" />
<text  x="68.66" y="703.5" ></text>
</g>
<g >
<title>iconv (1 samples, 0.01%)</title><rect x="254.8" y="613" width="0.1" height="15.0" fill="rgb(214,202,8)" rx="2" ry="2" />
<text  x="257.82" y="623.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (1 samples, 0.01%)</title><rect x="960.0" y="549" width="0.2" height="15.0" fill="rgb(234,111,5)" rx="2" ry="2" />
<text  x="963.04" y="559.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="64.0" y="501" width="0.1" height="15.0" fill="rgb(227,11,26)" rx="2" ry="2" />
<text  x="67.01" y="511.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.01%)</title><rect x="51.3" y="677" width="0.1" height="15.0" fill="rgb(249,96,50)" rx="2" ry="2" />
<text  x="54.28" y="687.5" ></text>
</g>
<g >
<title>unix_stream_read_generic (3 samples, 0.03%)</title><rect x="973.2" y="373" width="0.4" height="15.0" fill="rgb(217,76,42)" rx="2" ry="2" />
<text  x="976.25" y="383.5" ></text>
</g>
<g >
<title>std::function&lt;bool (char32_t)&gt;::operator() (1 samples, 0.01%)</title><rect x="921.1" y="405" width="0.1" height="15.0" fill="rgb(218,96,11)" rx="2" ry="2" />
<text  x="924.12" y="415.5" ></text>
</g>
<g >
<title>operator()&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int&gt; &gt; &gt; (2 samples, 0.02%)</title><rect x="255.3" y="565" width="0.2" height="15.0" fill="rgb(249,46,8)" rx="2" ry="2" />
<text  x="258.29" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (68 samples, 0.68%)</title><rect x="679.5" y="469" width="8.0" height="15.0" fill="rgb(249,39,36)" rx="2" ry="2" />
<text  x="682.48" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_newfstat (1 samples, 0.01%)</title><rect x="920.9" y="181" width="0.1" height="15.0" fill="rgb(224,146,15)" rx="2" ry="2" />
<text  x="923.89" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (2,554 samples, 25.52%)</title><rect x="355.1" y="421" width="301.2" height="15.0" fill="rgb(236,15,49)" rx="2" ry="2" />
<text  x="358.06" y="431.5" >std::allocator_traits&lt;std::allocator&lt;int..</text>
</g>
<g >
<title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="962.9" y="501" width="0.1" height="15.0" fill="rgb(240,113,33)" rx="2" ry="2" />
<text  x="965.87" y="511.5" ></text>
</g>
<g >
<title>ktime_get_raw_ts64 (1 samples, 0.01%)</title><rect x="1187.6" y="741" width="0.2" height="15.0" fill="rgb(227,127,12)" rx="2" ry="2" />
<text  x="1190.64" y="751.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (15 samples, 0.15%)</title><rect x="919.4" y="405" width="1.7" height="15.0" fill="rgb(230,81,43)" rx="2" ry="2" />
<text  x="922.35" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::_M_deallocate (5 samples, 0.05%)</title><rect x="256.8" y="517" width="0.6" height="15.0" fill="rgb(222,216,22)" rx="2" ry="2" />
<text  x="259.83" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::~_Vector_base (5 samples, 0.05%)</title><rect x="256.8" y="533" width="0.6" height="15.0" fill="rgb(210,43,32)" rx="2" ry="2" />
<text  x="259.83" y="543.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (38 samples, 0.38%)</title><rect x="74.9" y="789" width="4.4" height="15.0" fill="rgb(250,167,54)" rx="2" ry="2" />
<text  x="77.86" y="799.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (2 samples, 0.02%)</title><rect x="253.8" y="549" width="0.2" height="15.0" fill="rgb(250,227,25)" rx="2" ry="2" />
<text  x="256.76" y="559.5" ></text>
</g>
<g >
<title>unix_destruct_scm (1 samples, 0.01%)</title><rect x="961.9" y="293" width="0.1" height="15.0" fill="rgb(208,49,20)" rx="2" ry="2" />
<text  x="964.92" y="303.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (2,279 samples, 22.78%)</title><rect x="687.5" y="613" width="268.8" height="15.0" fill="rgb(238,105,27)" rx="2" ry="2" />
<text  x="690.50" y="623.5" >Game_Interpreter::Update</text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.01%)</title><rect x="326.6" y="325" width="0.2" height="15.0" fill="rgb(235,145,32)" rx="2" ry="2" />
<text  x="329.64" y="335.5" ></text>
</g>
<g >
<title>Bitmap::GetOperator (1 samples, 0.01%)</title><rect x="133.9" y="789" width="0.2" height="15.0" fill="rgb(235,83,16)" rx="2" ry="2" />
<text  x="136.94" y="799.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.01%)</title><rect x="921.2" y="373" width="0.2" height="15.0" fill="rgb(227,55,41)" rx="2" ry="2" />
<text  x="924.24" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="973.8" y="501" width="0.2" height="15.0" fill="rgb(221,114,51)" rx="2" ry="2" />
<text  x="976.84" y="511.5" ></text>
</g>
<g >
<title>__atomic_add (1 samples, 0.01%)</title><rect x="918.9" y="437" width="0.1" height="15.0" fill="rgb(226,209,45)" rx="2" ry="2" />
<text  x="921.88" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (7 samples, 0.07%)</title><rect x="715.6" y="357" width="0.8" height="15.0" fill="rgb(239,74,17)" rx="2" ry="2" />
<text  x="718.57" y="367.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="224.0" y="421" width="0.2" height="15.0" fill="rgb(213,191,2)" rx="2" ry="2" />
<text  x="227.04" y="431.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="739.6" y="261" width="0.1" height="15.0" fill="rgb(232,61,24)" rx="2" ry="2" />
<text  x="742.63" y="271.5" ></text>
</g>
<g >
<title>tick_sched_timer (4 samples, 0.04%)</title><rect x="646.8" y="293" width="0.5" height="15.0" fill="rgb(218,127,34)" rx="2" ry="2" />
<text  x="649.82" y="303.5" ></text>
</g>
<g >
<title>handle_irq_event (4 samples, 0.04%)</title><rect x="1128.2" y="533" width="0.5" height="15.0" fill="rgb(224,188,3)" rx="2" ry="2" />
<text  x="1131.21" y="543.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.01%)</title><rect x="65.8" y="709" width="0.1" height="15.0" fill="rgb(209,55,26)" rx="2" ry="2" />
<text  x="68.78" y="719.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="324.4" y="373" width="0.2" height="15.0" fill="rgb(207,142,32)" rx="2" ry="2" />
<text  x="327.40" y="383.5" ></text>
</g>
<g >
<title>std::__fill_a&lt;unsigned char&gt; (1 samples, 0.01%)</title><rect x="920.4" y="181" width="0.1" height="15.0" fill="rgb(221,118,13)" rx="2" ry="2" />
<text  x="923.41" y="191.5" ></text>
</g>
<g >
<title>Transform::Scale (1 samples, 0.01%)</title><rect x="185.5" y="565" width="0.1" height="15.0" fill="rgb(250,91,11)" rx="2" ry="2" />
<text  x="188.48" y="575.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_1&lt;true&gt;::__uninit_default_n&lt;unsigned char*, unsigned long&gt; (1 samples, 0.01%)</title><rect x="917.6" y="421" width="0.1" height="15.0" fill="rgb(251,88,24)" rx="2" ry="2" />
<text  x="920.58" y="431.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.01%)</title><rect x="1187.9" y="709" width="0.1" height="15.0" fill="rgb(218,198,4)" rx="2" ry="2" />
<text  x="1190.88" y="719.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="646.6" y="277" width="0.1" height="15.0" fill="rgb(226,10,15)" rx="2" ry="2" />
<text  x="649.58" y="287.5" ></text>
</g>
<g >
<title>vfs_getattr (1 samples, 0.01%)</title><rect x="920.9" y="133" width="0.1" height="15.0" fill="rgb(216,125,26)" rx="2" ry="2" />
<text  x="923.89" y="143.5" ></text>
</g>
<g >
<title>pixman_region32_rectangles (1 samples, 0.01%)</title><rect x="239.1" y="581" width="0.2" height="15.0" fill="rgb(238,38,45)" rx="2" ry="2" />
<text  x="242.14" y="591.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (1 samples, 0.01%)</title><rect x="90.4" y="789" width="0.1" height="15.0" fill="rgb(219,201,49)" rx="2" ry="2" />
<text  x="93.43" y="799.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;RPG::EventCommand*, RPG::EventCommand&gt; (1,096 samples, 10.95%)</title><rect x="708.7" y="501" width="129.3" height="15.0" fill="rgb(244,48,9)" rx="2" ry="2" />
<text  x="711.73" y="511.5" >std::_Destroy&lt;RP..</text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="64.0" y="517" width="0.1" height="15.0" fill="rgb(233,132,10)" rx="2" ry="2" />
<text  x="67.01" y="527.5" ></text>
</g>
<g >
<title>[libspeexdsp.so.1.5.0] (2 samples, 0.02%)</title><rect x="916.8" y="389" width="0.2" height="15.0" fill="rgb(249,158,45)" rx="2" ry="2" />
<text  x="919.76" y="399.5" ></text>
</g>
<g >
<title>vfs_getattr_nosec (1 samples, 0.01%)</title><rect x="920.9" y="117" width="0.1" height="15.0" fill="rgb(232,156,53)" rx="2" ry="2" />
<text  x="923.89" y="127.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="974.1" y="565" width="0.1" height="15.0" fill="rgb(227,48,36)" rx="2" ry="2" />
<text  x="977.07" y="575.5" ></text>
</g>
<g >
<title>kick_ilb (1 samples, 0.01%)</title><rect x="708.5" y="405" width="0.1" height="15.0" fill="rgb(211,0,49)" rx="2" ry="2" />
<text  x="711.49" y="415.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (11 samples, 0.11%)</title><rect x="251.2" y="597" width="1.3" height="15.0" fill="rgb(224,154,12)" rx="2" ry="2" />
<text  x="254.17" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_default_initialize (1 samples, 0.01%)</title><rect x="920.4" y="277" width="0.1" height="15.0" fill="rgb(229,34,28)" rx="2" ry="2" />
<text  x="923.41" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (1 samples, 0.01%)</title><rect x="1188.0" y="773" width="0.1" height="15.0" fill="rgb(242,3,11)" rx="2" ry="2" />
<text  x="1191.00" y="783.5" ></text>
</g>
<g >
<title>do_syscall_64 (135 samples, 1.35%)</title><rect x="1140.9" y="613" width="16.0" height="15.0" fill="rgb(215,32,50)" rx="2" ry="2" />
<text  x="1143.94" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (1 samples, 0.01%)</title><rect x="923.0" y="453" width="0.1" height="15.0" fill="rgb(253,221,38)" rx="2" ry="2" />
<text  x="926.01" y="463.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (15 samples, 0.15%)</title><rect x="919.4" y="325" width="1.7" height="15.0" fill="rgb(212,43,0)" rx="2" ry="2" />
<text  x="922.35" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="972.4" y="485" width="0.1" height="15.0" fill="rgb(218,88,17)" rx="2" ry="2" />
<text  x="975.42" y="495.5" ></text>
</g>
<g >
<title>__update_load_avg_se (1 samples, 0.01%)</title><rect x="647.4" y="277" width="0.1" height="15.0" fill="rgb(244,184,32)" rx="2" ry="2" />
<text  x="650.41" y="287.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (1 samples, 0.01%)</title><rect x="646.9" y="165" width="0.2" height="15.0" fill="rgb(243,103,4)" rx="2" ry="2" />
<text  x="649.94" y="175.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (1 samples, 0.01%)</title><rect x="919.5" y="277" width="0.1" height="15.0" fill="rgb(254,193,1)" rx="2" ry="2" />
<text  x="922.47" y="287.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.01%)</title><rect x="646.9" y="149" width="0.2" height="15.0" fill="rgb(225,98,26)" rx="2" ry="2" />
<text  x="649.94" y="159.5" ></text>
</g>
<g >
<title>_M_lower_bound (6 samples, 0.06%)</title><rect x="921.5" y="421" width="0.7" height="15.0" fill="rgb(220,171,41)" rx="2" ry="2" />
<text  x="924.48" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (75 samples, 0.75%)</title><rect x="713.1" y="405" width="8.8" height="15.0" fill="rgb(214,19,18)" rx="2" ry="2" />
<text  x="716.09" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;::operator++ (1 samples, 0.01%)</title><rect x="254.2" y="581" width="0.1" height="15.0" fill="rgb(240,40,29)" rx="2" ry="2" />
<text  x="257.23" y="591.5" ></text>
</g>
<g >
<title>x2apic_send_IPI (1 samples, 0.01%)</title><rect x="739.5" y="149" width="0.1" height="15.0" fill="rgb(212,131,45)" rx="2" ry="2" />
<text  x="742.51" y="159.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (1 samples, 0.01%)</title><rect x="922.3" y="341" width="0.1" height="15.0" fill="rgb(227,189,38)" rx="2" ry="2" />
<text  x="925.30" y="351.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**&gt; (1 samples, 0.01%)</title><rect x="253.6" y="581" width="0.2" height="15.0" fill="rgb(224,167,22)" rx="2" ry="2" />
<text  x="256.64" y="591.5" ></text>
</g>
<g >
<title>xhci_msi_irq (3 samples, 0.03%)</title><rect x="891.0" y="293" width="0.4" height="15.0" fill="rgb(212,48,10)" rx="2" ry="2" />
<text  x="894.05" y="303.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (1 samples, 0.01%)</title><rect x="225.6" y="549" width="0.1" height="15.0" fill="rgb(209,158,46)" rx="2" ry="2" />
<text  x="228.57" y="559.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (1 samples, 0.01%)</title><rect x="676.8" y="165" width="0.1" height="15.0" fill="rgb(207,158,22)" rx="2" ry="2" />
<text  x="679.77" y="175.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (1,300 samples, 12.99%)</title><rect x="975.6" y="613" width="153.3" height="15.0" fill="rgb(237,157,10)" rx="2" ry="2" />
<text  x="978.60" y="623.5" >[libSDL2-2.0.so.0.9..</text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.01%)</title><rect x="965.5" y="453" width="0.1" height="15.0" fill="rgb(251,102,6)" rx="2" ry="2" />
<text  x="968.46" y="463.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_a&lt;unsigned char*, unsigned long, unsigned char&gt; (1 samples, 0.01%)</title><rect x="917.6" y="453" width="0.1" height="15.0" fill="rgb(224,170,24)" rx="2" ry="2" />
<text  x="920.58" y="463.5" ></text>
</g>
<g >
<title>xhci_irq (2 samples, 0.02%)</title><rect x="647.9" y="229" width="0.2" height="15.0" fill="rgb(213,199,35)" rx="2" ry="2" />
<text  x="650.88" y="239.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (42 samples, 0.42%)</title><rect x="1128.9" y="613" width="5.0" height="15.0" fill="rgb(213,8,43)" rx="2" ry="2" />
<text  x="1131.91" y="623.5" ></text>
</g>
<g >
<title>FileFinder::SplitPath (2 samples, 0.02%)</title><rect x="921.1" y="437" width="0.3" height="15.0" fill="rgb(236,158,43)" rx="2" ry="2" />
<text  x="924.12" y="447.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (4 samples, 0.04%)</title><rect x="918.2" y="453" width="0.4" height="15.0" fill="rgb(214,122,27)" rx="2" ry="2" />
<text  x="921.17" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="922.7" y="405" width="0.1" height="15.0" fill="rgb(216,98,38)" rx="2" ry="2" />
<text  x="925.65" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_free (23 samples, 0.23%)</title><rect x="72.1" y="789" width="2.8" height="15.0" fill="rgb(235,120,45)" rx="2" ry="2" />
<text  x="75.15" y="799.5" ></text>
</g>
<g >
<title>load_balance (2 samples, 0.02%)</title><rect x="64.2" y="645" width="0.3" height="15.0" fill="rgb(222,162,48)" rx="2" ry="2" />
<text  x="67.25" y="655.5" ></text>
</g>
<g >
<title>Sprite::SetZ (3 samples, 0.03%)</title><rect x="958.6" y="597" width="0.4" height="15.0" fill="rgb(239,33,0)" rx="2" ry="2" />
<text  x="961.62" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::_M_allocate_and_copy&lt;__gnu_cxx::__normal_iterator&lt;RPG::EventCommand const*, std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt; &gt; &gt; (3,642 samples, 36.40%)</title><rect x="258.0" y="581" width="429.5" height="15.0" fill="rgb(248,40,44)" rx="2" ry="2" />
<text  x="261.01" y="591.5" >std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCo..</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="829.5" y="245" width="0.1" height="15.0" fill="rgb(218,156,28)" rx="2" ry="2" />
<text  x="832.49" y="255.5" ></text>
</g>
<g >
<title>LoadBitmap&lt;(&lt;unnamed&gt;::Material::Type)8&gt; (34 samples, 0.34%)</title><rect x="919.1" y="485" width="4.0" height="15.0" fill="rgb(246,162,48)" rx="2" ry="2" />
<text  x="922.12" y="495.5" ></text>
</g>
<g >
<title>rh_timer_func (1 samples, 0.01%)</title><rect x="647.8" y="261" width="0.1" height="15.0" fill="rgb(207,166,3)" rx="2" ry="2" />
<text  x="650.76" y="271.5" ></text>
</g>
<g >
<title>ret_from_intr (6 samples, 0.06%)</title><rect x="1128.2" y="597" width="0.7" height="15.0" fill="rgb(224,217,36)" rx="2" ry="2" />
<text  x="1131.21" y="607.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (87 samples, 0.87%)</title><rect x="961.2" y="629" width="10.3" height="15.0" fill="rgb(227,202,5)" rx="2" ry="2" />
<text  x="964.22" y="639.5" ></text>
</g>
<g >
<title>pipe_poll (1 samples, 0.01%)</title><rect x="54.1" y="741" width="0.1" height="15.0" fill="rgb(228,227,49)" rx="2" ry="2" />
<text  x="57.11" y="751.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="974.1" y="533" width="0.1" height="15.0" fill="rgb(209,2,25)" rx="2" ry="2" />
<text  x="977.07" y="543.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (30 samples, 0.30%)</title><rect x="961.5" y="613" width="3.5" height="15.0" fill="rgb(222,77,16)" rx="2" ry="2" />
<text  x="964.45" y="623.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;RPG::EventCommand&gt; &gt;::deallocate (596 samples, 5.96%)</title><rect x="838.0" y="469" width="70.3" height="15.0" fill="rgb(222,184,19)" rx="2" ry="2" />
<text  x="840.98" y="479.5" >std::al..</text>
</g>
<g >
<title>handle_irq_event (3 samples, 0.03%)</title><rect x="891.0" y="341" width="0.4" height="15.0" fill="rgb(241,33,25)" rx="2" ry="2" />
<text  x="894.05" y="351.5" ></text>
</g>
<g >
<title>___sys_recvmsg (5 samples, 0.05%)</title><rect x="973.0" y="421" width="0.6" height="15.0" fill="rgb(252,77,20)" rx="2" ry="2" />
<text  x="976.01" y="431.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (2 samples, 0.02%)</title><rect x="102.6" y="805" width="0.2" height="15.0" fill="rgb(243,58,0)" rx="2" ry="2" />
<text  x="105.57" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (8 samples, 0.08%)</title><rect x="95.3" y="789" width="0.9" height="15.0" fill="rgb(251,180,5)" rx="2" ry="2" />
<text  x="98.26" y="799.5" ></text>
</g>
<g >
<title>LoadBitmap&lt;(&lt;unnamed&gt;::Material::Type)9&gt; (1 samples, 0.01%)</title><rect x="960.2" y="533" width="0.1" height="15.0" fill="rgb(237,70,2)" rx="2" ry="2" />
<text  x="963.16" y="543.5" ></text>
</g>
<g >
<title>unlink_chunk (31 samples, 0.31%)</title><rect x="643.0" y="341" width="3.7" height="15.0" fill="rgb(227,113,44)" rx="2" ry="2" />
<text  x="646.04" y="351.5" ></text>
</g>
<g >
<title>Cache::Picture (34 samples, 0.34%)</title><rect x="919.1" y="501" width="4.0" height="15.0" fill="rgb(210,70,45)" rx="2" ry="2" />
<text  x="922.12" y="511.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="133.5" y="725" width="0.1" height="15.0" fill="rgb(208,79,38)" rx="2" ry="2" />
<text  x="136.47" y="735.5" ></text>
</g>
<g >
<title>Opacity::IsSplit (1 samples, 0.01%)</title><rect x="239.4" y="581" width="0.1" height="15.0" fill="rgb(228,206,1)" rx="2" ry="2" />
<text  x="242.37" y="591.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingExecution (2 samples, 0.02%)</title><rect x="957.2" y="581" width="0.2" height="15.0" fill="rgb(246,143,45)" rx="2" ry="2" />
<text  x="960.21" y="591.5" ></text>
</g>
<g >
<title>tcache_get (3 samples, 0.03%)</title><rect x="642.5" y="341" width="0.3" height="15.0" fill="rgb(209,220,29)" rx="2" ry="2" />
<text  x="645.45" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="890.9" y="373" width="0.1" height="15.0" fill="rgb(232,169,6)" rx="2" ry="2" />
<text  x="893.93" y="383.5" ></text>
</g>
<g >
<title>ttwu_do_activate (2 samples, 0.02%)</title><rect x="66.5" y="613" width="0.2" height="15.0" fill="rgb(219,37,41)" rx="2" ry="2" />
<text  x="69.49" y="623.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="891.3" y="197" width="0.1" height="15.0" fill="rgb(222,35,42)" rx="2" ry="2" />
<text  x="894.29" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (2 samples, 0.02%)</title><rect x="697.6" y="565" width="0.3" height="15.0" fill="rgb(209,223,44)" rx="2" ry="2" />
<text  x="700.65" y="575.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (4 samples, 0.04%)</title><rect x="649.3" y="373" width="0.5" height="15.0" fill="rgb(242,45,13)" rx="2" ry="2" />
<text  x="652.29" y="383.5" ></text>
</g>
<g >
<title>AudioSeCache::Decode (9 samples, 0.09%)</title><rect x="916.6" y="501" width="1.1" height="15.0" fill="rgb(205,111,9)" rx="2" ry="2" />
<text  x="919.64" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="919.0" y="501" width="0.1" height="15.0" fill="rgb(250,9,41)" rx="2" ry="2" />
<text  x="922.00" y="511.5" ></text>
</g>
<g >
<title>Transition::IsErased (1 samples, 0.01%)</title><rect x="923.6" y="533" width="0.1" height="15.0" fill="rgb(233,63,17)" rx="2" ry="2" />
<text  x="926.60" y="543.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="974.1" y="517" width="0.1" height="15.0" fill="rgb(221,13,3)" rx="2" ry="2" />
<text  x="977.07" y="527.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.03%)</title><rect x="638.9" y="293" width="0.4" height="15.0" fill="rgb(226,187,38)" rx="2" ry="2" />
<text  x="641.92" y="303.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.01%)</title><rect x="224.0" y="405" width="0.2" height="15.0" fill="rgb(253,131,15)" rx="2" ry="2" />
<text  x="227.04" y="415.5" ></text>
</g>
<g >
<title>malloc_consolidate (17 samples, 0.17%)</title><rect x="157.2" y="789" width="2.0" height="15.0" fill="rgb(225,160,41)" rx="2" ry="2" />
<text  x="160.18" y="799.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="676.5" y="277" width="0.2" height="15.0" fill="rgb(236,135,3)" rx="2" ry="2" />
<text  x="679.54" y="287.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (2 samples, 0.02%)</title><rect x="959.3" y="629" width="0.3" height="15.0" fill="rgb(242,123,45)" rx="2" ry="2" />
<text  x="962.33" y="639.5" ></text>
</g>
<g >
<title>std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt;&amp;, true&gt; (1 samples, 0.01%)</title><rect x="918.8" y="501" width="0.1" height="15.0" fill="rgb(239,160,17)" rx="2" ry="2" />
<text  x="921.76" y="511.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (4 samples, 0.04%)</title><rect x="138.1" y="773" width="0.4" height="15.0" fill="rgb(233,58,7)" rx="2" ry="2" />
<text  x="141.07" y="783.5" ></text>
</g>
<g >
<title>unlink_chunk (1 samples, 0.01%)</title><rect x="268.0" y="469" width="0.1" height="15.0" fill="rgb(236,58,27)" rx="2" ry="2" />
<text  x="271.03" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="963.0" y="421" width="0.1" height="15.0" fill="rgb(211,109,44)" rx="2" ry="2" />
<text  x="965.99" y="431.5" ></text>
</g>
<g >
<title>Game_Map::GetBushDepth (2 samples, 0.02%)</title><rect x="960.7" y="629" width="0.3" height="15.0" fill="rgb(251,224,9)" rx="2" ry="2" />
<text  x="963.75" y="639.5" ></text>
</g>
<g >
<title>handle_irq_event (2 samples, 0.02%)</title><rect x="647.9" y="293" width="0.2" height="15.0" fill="rgb(215,170,13)" rx="2" ry="2" />
<text  x="650.88" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_free (93 samples, 0.93%)</title><rect x="728.8" y="341" width="10.9" height="15.0" fill="rgb(206,62,53)" rx="2" ry="2" />
<text  x="731.78" y="351.5" ></text>
</g>
<g >
<title>__do_sys_newfstat (1 samples, 0.01%)</title><rect x="920.9" y="165" width="0.1" height="15.0" fill="rgb(228,74,29)" rx="2" ry="2" />
<text  x="923.89" y="175.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="971.0" y="437" width="0.1" height="15.0" fill="rgb(214,31,7)" rx="2" ry="2" />
<text  x="974.01" y="447.5" ></text>
</g>
<g >
<title>__sys_recvmsg (5 samples, 0.05%)</title><rect x="973.0" y="437" width="0.6" height="15.0" fill="rgb(242,225,34)" rx="2" ry="2" />
<text  x="976.01" y="447.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (6 samples, 0.06%)</title><rect x="100.0" y="677" width="0.7" height="15.0" fill="rgb(253,183,26)" rx="2" ry="2" />
<text  x="102.98" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (1 samples, 0.01%)</title><rect x="916.3" y="453" width="0.1" height="15.0" fill="rgb(246,25,35)" rx="2" ry="2" />
<text  x="919.29" y="463.5" ></text>
</g>
<g >
<title>Player::Update (1 samples, 0.01%)</title><rect x="134.2" y="789" width="0.1" height="15.0" fill="rgb(230,48,42)" rx="2" ry="2" />
<text  x="137.18" y="799.5" ></text>
</g>
<g >
<title>schedule (14 samples, 0.14%)</title><rect x="1161.3" y="565" width="1.7" height="15.0" fill="rgb(218,209,30)" rx="2" ry="2" />
<text  x="1164.34" y="575.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="715.5" y="373" width="0.1" height="15.0" fill="rgb(249,47,42)" rx="2" ry="2" />
<text  x="718.45" y="383.5" ></text>
</g>
<g >
<title>check_preempt_curr (1 samples, 0.01%)</title><rect x="223.9" y="389" width="0.1" height="15.0" fill="rgb(242,168,19)" rx="2" ry="2" />
<text  x="226.92" y="399.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (37 samples, 0.37%)</title><rect x="1129.5" y="565" width="4.4" height="15.0" fill="rgb(245,40,31)" rx="2" ry="2" />
<text  x="1132.50" y="575.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;RPG::EventCommand&gt; (1,059 samples, 10.58%)</title><rect x="713.1" y="453" width="124.9" height="15.0" fill="rgb(234,183,47)" rx="2" ry="2" />
<text  x="716.09" y="463.5" >std::_Destroy&lt;R..</text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="656.0" y="277" width="0.1" height="15.0" fill="rgb(251,58,0)" rx="2" ry="2" />
<text  x="659.02" y="287.5" ></text>
</g>
<g >
<title>Player::Run (8,695 samples, 86.90%)</title><rect x="159.8" y="757" width="1025.4" height="15.0" fill="rgb(238,185,50)" rx="2" ry="2" />
<text  x="162.77" y="767.5" >Player::Run</text>
</g>
<g >
<title>tzset_internal (1 samples, 0.01%)</title><rect x="916.5" y="453" width="0.1" height="15.0" fill="rgb(235,96,23)" rx="2" ry="2" />
<text  x="919.52" y="463.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.02%)</title><rect x="324.4" y="389" width="0.2" height="15.0" fill="rgb(212,46,12)" rx="2" ry="2" />
<text  x="327.40" y="399.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (1 samples, 0.01%)</title><rect x="916.2" y="549" width="0.1" height="15.0" fill="rgb(219,85,47)" rx="2" ry="2" />
<text  x="919.17" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="159.5" y="773" width="0.2" height="15.0" fill="rgb(248,159,51)" rx="2" ry="2" />
<text  x="162.53" y="783.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="51.3" y="805" width="0.1" height="15.0" fill="rgb(216,207,9)" rx="2" ry="2" />
<text  x="54.28" y="815.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="676.8" y="245" width="0.1" height="15.0" fill="rgb(207,10,45)" rx="2" ry="2" />
<text  x="679.77" y="255.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.01%)</title><rect x="1187.9" y="693" width="0.1" height="15.0" fill="rgb(252,75,35)" rx="2" ry="2" />
<text  x="1190.88" y="703.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="145.3" y="773" width="0.1" height="15.0" fill="rgb(216,117,35)" rx="2" ry="2" />
<text  x="148.26" y="783.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (3 samples, 0.03%)</title><rect x="51.4" y="805" width="0.3" height="15.0" fill="rgb(232,61,29)" rx="2" ry="2" />
<text  x="54.39" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.01%)</title><rect x="915.5" y="581" width="0.1" height="15.0" fill="rgb(213,44,20)" rx="2" ry="2" />
<text  x="918.46" y="591.5" ></text>
</g>
<g >
<title>do_IRQ (4 samples, 0.04%)</title><rect x="891.0" y="389" width="0.5" height="15.0" fill="rgb(241,3,8)" rx="2" ry="2" />
<text  x="894.05" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (3 samples, 0.03%)</title><rect x="927.7" y="581" width="0.4" height="15.0" fill="rgb(209,45,53)" rx="2" ry="2" />
<text  x="930.73" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::pop_back (1,692 samples, 16.91%)</title><rect x="708.7" y="581" width="199.6" height="15.0" fill="rgb(215,175,26)" rx="2" ry="2" />
<text  x="711.73" y="591.5" >std::vector&lt;RPG::SaveEvent..</text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (1 samples, 0.01%)</title><rect x="1187.9" y="629" width="0.1" height="15.0" fill="rgb(217,218,34)" rx="2" ry="2" />
<text  x="1190.88" y="639.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.01%)</title><rect x="325.6" y="389" width="0.1" height="15.0" fill="rgb(242,43,26)" rx="2" ry="2" />
<text  x="328.58" y="399.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="133.5" y="709" width="0.1" height="15.0" fill="rgb(246,92,17)" rx="2" ry="2" />
<text  x="136.47" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (129 samples, 1.29%)</title><rect x="51.7" y="805" width="15.3" height="15.0" fill="rgb(248,126,1)" rx="2" ry="2" />
<text  x="54.75" y="815.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (54 samples, 0.54%)</title><rect x="243.4" y="565" width="6.4" height="15.0" fill="rgb(253,16,6)" rx="2" ry="2" />
<text  x="246.38" y="575.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (1 samples, 0.01%)</title><rect x="71.6" y="789" width="0.1" height="15.0" fill="rgb(243,211,49)" rx="2" ry="2" />
<text  x="74.56" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (2 samples, 0.02%)</title><rect x="914.9" y="533" width="0.2" height="15.0" fill="rgb(225,45,54)" rx="2" ry="2" />
<text  x="917.87" y="543.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (1 samples, 0.01%)</title><rect x="1128.8" y="437" width="0.1" height="15.0" fill="rgb(237,15,49)" rx="2" ry="2" />
<text  x="1131.79" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (15 samples, 0.15%)</title><rect x="919.4" y="357" width="1.7" height="15.0" fill="rgb(205,86,14)" rx="2" ry="2" />
<text  x="922.35" y="367.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (2 samples, 0.02%)</title><rect x="696.7" y="581" width="0.2" height="15.0" fill="rgb(213,136,11)" rx="2" ry="2" />
<text  x="699.70" y="591.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (3 samples, 0.03%)</title><rect x="1189.6" y="805" width="0.4" height="15.0" fill="rgb(211,23,36)" rx="2" ry="2" />
<text  x="1192.65" y="815.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (6 samples, 0.06%)</title><rect x="646.7" y="325" width="0.7" height="15.0" fill="rgb(242,75,24)" rx="2" ry="2" />
<text  x="649.70" y="335.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="708.5" y="517" width="0.1" height="15.0" fill="rgb(241,197,28)" rx="2" ry="2" />
<text  x="711.49" y="527.5" ></text>
</g>
<g >
<title>Bitmap::GetOperator (1 samples, 0.01%)</title><rect x="229.1" y="597" width="0.1" height="15.0" fill="rgb(224,77,32)" rx="2" ry="2" />
<text  x="232.11" y="607.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (21 samples, 0.21%)</title><rect x="98.3" y="773" width="2.5" height="15.0" fill="rgb(234,175,0)" rx="2" ry="2" />
<text  x="101.33" y="783.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.01%)</title><rect x="63.7" y="533" width="0.1" height="15.0" fill="rgb(239,192,27)" rx="2" ry="2" />
<text  x="66.66" y="543.5" ></text>
</g>
<g >
<title>ip_route_input_slow (1 samples, 0.01%)</title><rect x="1128.8" y="341" width="0.1" height="15.0" fill="rgb(230,222,28)" rx="2" ry="2" />
<text  x="1131.79" y="351.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandConditionalBranch (1 samples, 0.01%)</title><rect x="257.4" y="613" width="0.1" height="15.0" fill="rgb(253,148,33)" rx="2" ry="2" />
<text  x="260.42" y="623.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandPlaySound (13 samples, 0.13%)</title><rect x="916.2" y="597" width="1.5" height="15.0" fill="rgb(243,144,47)" rx="2" ry="2" />
<text  x="919.17" y="607.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.03%)</title><rect x="974.1" y="581" width="0.3" height="15.0" fill="rgb(213,173,32)" rx="2" ry="2" />
<text  x="977.07" y="591.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="971.0" y="405" width="0.1" height="15.0" fill="rgb(213,50,12)" rx="2" ry="2" />
<text  x="974.01" y="415.5" ></text>
</g>
<g >
<title>trigger_load_balance (1 samples, 0.01%)</title><rect x="647.2" y="229" width="0.1" height="15.0" fill="rgb(230,36,31)" rx="2" ry="2" />
<text  x="650.17" y="239.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (3 samples, 0.03%)</title><rect x="224.9" y="533" width="0.3" height="15.0" fill="rgb(244,50,53)" rx="2" ry="2" />
<text  x="227.87" y="543.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="676.7" y="341" width="0.2" height="15.0" fill="rgb(213,94,7)" rx="2" ry="2" />
<text  x="679.65" y="351.5" ></text>
</g>
<g >
<title>Scene::OnFinishAsync (93 samples, 0.93%)</title><rect x="1174.1" y="693" width="10.9" height="15.0" fill="rgb(235,7,30)" rx="2" ry="2" />
<text  x="1177.08" y="703.5" ></text>
</g>
<g >
<title>__wake_up_locked (1 samples, 0.01%)</title><rect x="963.0" y="181" width="0.1" height="15.0" fill="rgb(230,104,25)" rx="2" ry="2" />
<text  x="965.99" y="191.5" ></text>
</g>
<g >
<title>_int_free (5 samples, 0.05%)</title><rect x="256.8" y="469" width="0.6" height="15.0" fill="rgb(230,44,3)" rx="2" ry="2" />
<text  x="259.83" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;Scene&gt;, std::allocator&lt;std::shared_ptr&lt;Scene&gt; &gt; &gt;::clear (1 samples, 0.01%)</title><rect x="1185.0" y="725" width="0.2" height="15.0" fill="rgb(229,8,38)" rx="2" ry="2" />
<text  x="1188.05" y="735.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (33 samples, 0.33%)</title><rect x="1156.9" y="629" width="3.9" height="15.0" fill="rgb(232,152,44)" rx="2" ry="2" />
<text  x="1159.86" y="639.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.01%)</title><rect x="1128.8" y="405" width="0.1" height="15.0" fill="rgb(215,39,13)" rx="2" ry="2" />
<text  x="1131.79" y="415.5" ></text>
</g>
<g >
<title>psi_task_change (2 samples, 0.02%)</title><rect x="1161.6" y="517" width="0.2" height="15.0" fill="rgb(233,91,14)" rx="2" ry="2" />
<text  x="1164.58" y="527.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (15 samples, 0.15%)</title><rect x="919.4" y="389" width="1.7" height="15.0" fill="rgb(209,157,51)" rx="2" ry="2" />
<text  x="922.35" y="399.5" ></text>
</g>
<g >
<title>pixman_image_create_solid_fill (1 samples, 0.01%)</title><rect x="184.8" y="581" width="0.1" height="15.0" fill="rgb(238,202,10)" rx="2" ry="2" />
<text  x="187.77" y="591.5" ></text>
</g>
<g >
<title>ktime_get_raw_ts64 (16 samples, 0.16%)</title><rect x="1153.0" y="565" width="1.9" height="15.0" fill="rgb(222,174,1)" rx="2" ry="2" />
<text  x="1155.97" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_ppoll (101 samples, 1.01%)</title><rect x="53.5" y="773" width="11.9" height="15.0" fill="rgb(231,156,51)" rx="2" ry="2" />
<text  x="56.52" y="783.5" ></text>
</g>
<g >
<title>Game_Picture::Update (12 samples, 0.12%)</title><rect x="957.7" y="629" width="1.4" height="15.0" fill="rgb(221,180,53)" rx="2" ry="2" />
<text  x="960.68" y="639.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.01%)</title><rect x="656.1" y="389" width="0.2" height="15.0" fill="rgb(250,75,25)" rx="2" ry="2" />
<text  x="659.13" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="964.8" y="565" width="0.1" height="15.0" fill="rgb(246,162,43)" rx="2" ry="2" />
<text  x="967.76" y="575.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="917.5" y="389" width="0.1" height="15.0" fill="rgb(241,125,46)" rx="2" ry="2" />
<text  x="920.47" y="399.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (1 samples, 0.01%)</title><rect x="185.1" y="549" width="0.1" height="15.0" fill="rgb(218,66,27)" rx="2" ry="2" />
<text  x="188.12" y="559.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (9 samples, 0.09%)</title><rect x="324.6" y="405" width="1.1" height="15.0" fill="rgb(215,16,43)" rx="2" ry="2" />
<text  x="327.64" y="415.5" ></text>
</g>
<g >
<title>Player::MainLoop (8,695 samples, 86.90%)</title><rect x="159.8" y="741" width="1025.4" height="15.0" fill="rgb(237,125,40)" rx="2" ry="2" />
<text  x="162.77" y="751.5" >Player::MainLoop</text>
</g>
<g >
<title>[libX11.so.6.3.0] (1 samples, 0.01%)</title><rect x="254.9" y="597" width="0.2" height="15.0" fill="rgb(226,42,31)" rx="2" ry="2" />
<text  x="257.94" y="607.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="638.8" y="277" width="0.1" height="15.0" fill="rgb(210,89,18)" rx="2" ry="2" />
<text  x="641.80" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="958.3" y="565" width="0.1" height="15.0" fill="rgb(246,170,0)" rx="2" ry="2" />
<text  x="961.27" y="575.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (10 samples, 0.10%)</title><rect x="1175.6" y="645" width="1.2" height="15.0" fill="rgb(207,170,36)" rx="2" ry="2" />
<text  x="1178.61" y="655.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="739.5" y="309" width="0.2" height="15.0" fill="rgb(211,17,32)" rx="2" ry="2" />
<text  x="742.51" y="319.5" ></text>
</g>
<g >
<title>std::__merge_sort_with_buffer&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (4 samples, 0.04%)</title><rect x="253.8" y="597" width="0.4" height="15.0" fill="rgb(223,96,3)" rx="2" ry="2" />
<text  x="256.76" y="607.5" ></text>
</g>
<g >
<title>sock_sendmsg (1 samples, 0.01%)</title><rect x="963.0" y="293" width="0.1" height="15.0" fill="rgb(245,190,35)" rx="2" ry="2" />
<text  x="965.99" y="303.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="265.7" y="469" width="0.1" height="15.0" fill="rgb(233,206,50)" rx="2" ry="2" />
<text  x="268.67" y="479.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (9 samples, 0.09%)</title><rect x="973.8" y="613" width="1.1" height="15.0" fill="rgb(217,180,18)" rx="2" ry="2" />
<text  x="976.84" y="623.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (1 samples, 0.01%)</title><rect x="923.1" y="437" width="0.1" height="15.0" fill="rgb(205,158,16)" rx="2" ry="2" />
<text  x="926.13" y="447.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="908.1" y="341" width="0.2" height="15.0" fill="rgb(231,3,36)" rx="2" ry="2" />
<text  x="911.15" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (1 samples, 0.01%)</title><rect x="696.8" y="565" width="0.1" height="15.0" fill="rgb(207,66,14)" rx="2" ry="2" />
<text  x="699.82" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.01%)</title><rect x="325.7" y="421" width="0.1" height="15.0" fill="rgb(230,215,21)" rx="2" ry="2" />
<text  x="328.70" y="431.5" ></text>
</g>
<g >
<title>[libpng16.so.16.36.0] (1 samples, 0.01%)</title><rect x="920.5" y="277" width="0.1" height="15.0" fill="rgb(212,94,44)" rx="2" ry="2" />
<text  x="923.53" y="287.5" ></text>
</g>
<g >
<title>do_iter_write (1 samples, 0.01%)</title><rect x="963.0" y="341" width="0.1" height="15.0" fill="rgb(225,107,22)" rx="2" ry="2" />
<text  x="965.99" y="351.5" ></text>
</g>
<g >
<title>_Xutf8TextListToTextProperty (1 samples, 0.01%)</title><rect x="254.9" y="629" width="0.2" height="15.0" fill="rgb(207,124,44)" rx="2" ry="2" />
<text  x="257.94" y="639.5" ></text>
</g>
<g >
<title>Game_System::OnSeReady (12 samples, 0.12%)</title><rect x="916.3" y="533" width="1.4" height="15.0" fill="rgb(244,118,48)" rx="2" ry="2" />
<text  x="919.29" y="543.5" ></text>
</g>
<g >
<title>Game_Player::Update (6 samples, 0.06%)</title><rect x="957.0" y="645" width="0.7" height="15.0" fill="rgb(209,135,17)" rx="2" ry="2" />
<text  x="959.97" y="655.5" ></text>
</g>
<g >
<title>__task_pid_nr_ns (1 samples, 0.01%)</title><rect x="1163.2" y="565" width="0.1" height="15.0" fill="rgb(214,187,29)" rx="2" ry="2" />
<text  x="1166.23" y="575.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.01%)</title><rect x="224.3" y="533" width="0.1" height="15.0" fill="rgb(241,60,44)" rx="2" ry="2" />
<text  x="227.28" y="543.5" ></text>
</g>
<g >
<title>security_file_permission (1 samples, 0.01%)</title><rect x="920.5" y="69" width="0.1" height="15.0" fill="rgb(211,50,29)" rx="2" ry="2" />
<text  x="923.53" y="79.5" ></text>
</g>
<g >
<title>__pollwait (1 samples, 0.01%)</title><rect x="54.0" y="725" width="0.1" height="15.0" fill="rgb(214,110,7)" rx="2" ry="2" />
<text  x="56.99" y="735.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_base (1 samples, 0.01%)</title><rect x="921.2" y="389" width="0.2" height="15.0" fill="rgb(207,38,5)" rx="2" ry="2" />
<text  x="924.24" y="399.5" ></text>
</g>
<g >
<title>Bitmap::StretchBlit (332 samples, 3.32%)</title><rect x="185.4" y="581" width="39.1" height="15.0" fill="rgb(231,100,33)" rx="2" ry="2" />
<text  x="188.36" y="591.5" >Bit..</text>
</g>
<g >
<title>XEHeadOfExtensionList@plt (1 samples, 0.01%)</title><rect x="70.4" y="805" width="0.1" height="15.0" fill="rgb(253,128,54)" rx="2" ry="2" />
<text  x="73.38" y="815.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.02%)</title><rect x="648.1" y="357" width="0.3" height="15.0" fill="rgb(211,187,10)" rx="2" ry="2" />
<text  x="651.12" y="367.5" ></text>
</g>
<g >
<title>_dbus_string_init_const (1 samples, 0.01%)</title><rect x="80.9" y="789" width="0.1" height="15.0" fill="rgb(220,38,18)" rx="2" ry="2" />
<text  x="83.88" y="799.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (16 samples, 0.16%)</title><rect x="1161.1" y="613" width="1.9" height="15.0" fill="rgb(245,14,37)" rx="2" ry="2" />
<text  x="1164.11" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (1 samples, 0.01%)</title><rect x="255.5" y="613" width="0.1" height="15.0" fill="rgb(227,91,39)" rx="2" ry="2" />
<text  x="258.53" y="623.5" ></text>
</g>
<g >
<title>xhci_irq (3 samples, 0.03%)</title><rect x="1128.3" y="469" width="0.4" height="15.0" fill="rgb(241,83,48)" rx="2" ry="2" />
<text  x="1131.32" y="479.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="908.1" y="389" width="0.2" height="15.0" fill="rgb(213,126,1)" rx="2" ry="2" />
<text  x="911.15" y="399.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="890.9" y="357" width="0.1" height="15.0" fill="rgb(227,73,30)" rx="2" ry="2" />
<text  x="893.93" y="367.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (3 samples, 0.03%)</title><rect x="63.7" y="629" width="0.3" height="15.0" fill="rgb(209,107,16)" rx="2" ry="2" />
<text  x="66.66" y="639.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="908.1" y="277" width="0.2" height="15.0" fill="rgb(218,70,12)" rx="2" ry="2" />
<text  x="911.15" y="287.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.01%)</title><rect x="962.0" y="389" width="0.2" height="15.0" fill="rgb(238,170,26)" rx="2" ry="2" />
<text  x="965.04" y="399.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (1 samples, 0.01%)</title><rect x="959.9" y="517" width="0.1" height="15.0" fill="rgb(222,5,10)" rx="2" ry="2" />
<text  x="962.92" y="527.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.01%)</title><rect x="973.0" y="389" width="0.1" height="15.0" fill="rgb(233,135,9)" rx="2" ry="2" />
<text  x="976.01" y="399.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (3 samples, 0.03%)</title><rect x="224.9" y="389" width="0.3" height="15.0" fill="rgb(208,204,21)" rx="2" ry="2" />
<text  x="227.87" y="399.5" ></text>
</g>
<g >
<title>[libXi.so.6.1.0] (1 samples, 0.01%)</title><rect x="962.3" y="517" width="0.1" height="15.0" fill="rgb(250,212,10)" rx="2" ry="2" />
<text  x="965.28" y="527.5" ></text>
</g>
<g >
<title>TilemapLayer::DrawTile (205 samples, 2.05%)</title><rect x="228.3" y="629" width="24.2" height="15.0" fill="rgb(253,90,7)" rx="2" ry="2" />
<text  x="231.29" y="639.5" >T..</text>
</g>
<g >
<title>_IO_new_fopen (2 samples, 0.02%)</title><rect x="920.6" y="309" width="0.3" height="15.0" fill="rgb(240,138,8)" rx="2" ry="2" />
<text  x="923.65" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::_M_deallocate (596 samples, 5.96%)</title><rect x="838.0" y="485" width="70.3" height="15.0" fill="rgb(241,74,2)" rx="2" ry="2" />
<text  x="840.98" y="495.5" >std::_V..</text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (10 samples, 0.10%)</title><rect x="253.6" y="613" width="1.2" height="15.0" fill="rgb(213,166,35)" rx="2" ry="2" />
<text  x="256.64" y="623.5" ></text>
</g>
<g >
<title>handle_edge_irq (5 samples, 0.05%)</title><rect x="829.5" y="277" width="0.6" height="15.0" fill="rgb(222,72,49)" rx="2" ry="2" />
<text  x="832.49" y="287.5" ></text>
</g>
<g >
<title>__GI___xstat (1 samples, 0.01%)</title><rect x="916.5" y="421" width="0.1" height="15.0" fill="rgb(254,55,46)" rx="2" ry="2" />
<text  x="919.52" y="431.5" ></text>
</g>
<g >
<title>Game_System::SePlay (13 samples, 0.13%)</title><rect x="916.2" y="581" width="1.5" height="15.0" fill="rgb(251,158,46)" rx="2" ry="2" />
<text  x="919.17" y="591.5" ></text>
</g>
<g >
<title>_XEventsQueued (10 samples, 0.10%)</title><rect x="961.6" y="581" width="1.2" height="15.0" fill="rgb(245,155,9)" rx="2" ry="2" />
<text  x="964.57" y="591.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (11 samples, 0.11%)</title><rect x="251.2" y="565" width="1.3" height="15.0" fill="rgb(216,100,50)" rx="2" ry="2" />
<text  x="254.17" y="575.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="250.0" y="517" width="0.1" height="15.0" fill="rgb(211,5,42)" rx="2" ry="2" />
<text  x="252.99" y="527.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="642.3" y="229" width="0.2" height="15.0" fill="rgb(235,93,34)" rx="2" ry="2" />
<text  x="645.34" y="239.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (2 samples, 0.02%)</title><rect x="648.1" y="341" width="0.3" height="15.0" fill="rgb(231,136,33)" rx="2" ry="2" />
<text  x="651.12" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_read (7 samples, 0.07%)</title><rect x="65.4" y="773" width="0.9" height="15.0" fill="rgb(219,48,3)" rx="2" ry="2" />
<text  x="68.43" y="783.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.01%)</title><rect x="920.5" y="101" width="0.1" height="15.0" fill="rgb(245,186,6)" rx="2" ry="2" />
<text  x="923.53" y="111.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (5 samples, 0.05%)</title><rect x="100.1" y="661" width="0.6" height="15.0" fill="rgb(218,145,11)" rx="2" ry="2" />
<text  x="103.10" y="671.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1133.7" y="469" width="0.2" height="15.0" fill="rgb(234,101,37)" rx="2" ry="2" />
<text  x="1136.75" y="479.5" ></text>
</g>
<g >
<title>Player::Update (8,352 samples, 83.47%)</title><rect x="178.6" y="693" width="985.0" height="15.0" fill="rgb(242,55,24)" rx="2" ry="2" />
<text  x="181.64" y="703.5" >Player::Update</text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (18 samples, 0.18%)</title><rect x="962.8" y="597" width="2.1" height="15.0" fill="rgb(221,97,8)" rx="2" ry="2" />
<text  x="965.75" y="607.5" ></text>
</g>
<g >
<title>irq_exit (4 samples, 0.04%)</title><rect x="649.3" y="341" width="0.5" height="15.0" fill="rgb(242,229,52)" rx="2" ry="2" />
<text  x="652.29" y="351.5" ></text>
</g>
<g >
<title>___sys_recvmsg (3 samples, 0.03%)</title><rect x="961.7" y="405" width="0.3" height="15.0" fill="rgb(229,54,52)" rx="2" ry="2" />
<text  x="964.69" y="415.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (2 samples, 0.02%)</title><rect x="922.8" y="357" width="0.2" height="15.0" fill="rgb(210,128,43)" rx="2" ry="2" />
<text  x="925.77" y="367.5" ></text>
</g>
<g >
<title>std::__merge_adaptive&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, long, Drawable**, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (1 samples, 0.01%)</title><rect x="253.6" y="597" width="0.2" height="15.0" fill="rgb(209,44,13)" rx="2" ry="2" />
<text  x="256.64" y="607.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="63.7" y="581" width="0.1" height="15.0" fill="rgb(237,114,30)" rx="2" ry="2" />
<text  x="66.66" y="591.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (44 samples, 0.44%)</title><rect x="179.6" y="581" width="5.2" height="15.0" fill="rgb(252,21,35)" rx="2" ry="2" />
<text  x="182.58" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator++ (67 samples, 0.67%)</title><rect x="1176.8" y="645" width="7.9" height="15.0" fill="rgb(250,198,22)" rx="2" ry="2" />
<text  x="1179.79" y="655.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="64.0" y="469" width="0.1" height="15.0" fill="rgb(248,15,4)" rx="2" ry="2" />
<text  x="67.01" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.02%)</title><rect x="922.8" y="421" width="0.2" height="15.0" fill="rgb(253,120,6)" rx="2" ry="2" />
<text  x="925.77" y="431.5" ></text>
</g>
<g >
<title>Sprite::~Sprite (1 samples, 0.01%)</title><rect x="923.5" y="453" width="0.1" height="15.0" fill="rgb(228,197,11)" rx="2" ry="2" />
<text  x="926.48" y="463.5" ></text>
</g>
<g >
<title>native_write_msr (45 samples, 0.45%)</title><rect x="965.7" y="389" width="5.3" height="15.0" fill="rgb(218,11,42)" rx="2" ry="2" />
<text  x="968.70" y="399.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.02%)</title><rect x="223.9" y="485" width="0.3" height="15.0" fill="rgb(239,227,42)" rx="2" ry="2" />
<text  x="226.92" y="495.5" ></text>
</g>
<g >
<title>GetRequest (1 samples, 0.01%)</title><rect x="919.2" y="453" width="0.2" height="15.0" fill="rgb(208,195,15)" rx="2" ry="2" />
<text  x="922.23" y="463.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="224.2" y="501" width="0.1" height="15.0" fill="rgb(226,55,28)" rx="2" ry="2" />
<text  x="227.16" y="511.5" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.01%)</title><rect x="649.4" y="293" width="0.1" height="15.0" fill="rgb(226,59,47)" rx="2" ry="2" />
<text  x="652.41" y="303.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="250.0" y="597" width="0.1" height="15.0" fill="rgb(221,68,23)" rx="2" ry="2" />
<text  x="252.99" y="607.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="326.6" y="373" width="0.2" height="15.0" fill="rgb(229,50,53)" rx="2" ry="2" />
<text  x="329.64" y="383.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (39 samples, 0.39%)</title><rect x="950.2" y="597" width="4.6" height="15.0" fill="rgb(214,193,6)" rx="2" ry="2" />
<text  x="953.25" y="607.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (4 samples, 0.04%)</title><rect x="829.6" y="229" width="0.5" height="15.0" fill="rgb(240,44,26)" rx="2" ry="2" />
<text  x="832.61" y="239.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.01%)</title><rect x="973.7" y="405" width="0.1" height="15.0" fill="rgb(252,32,38)" rx="2" ry="2" />
<text  x="976.72" y="415.5" ></text>
</g>
<g >
<title>tick_sched_handle (4 samples, 0.04%)</title><rect x="646.8" y="277" width="0.5" height="15.0" fill="rgb(246,215,45)" rx="2" ry="2" />
<text  x="649.82" y="287.5" ></text>
</g>
<g >
<title>std::fill_n&lt;unsigned char*, unsigned long, unsigned char&gt; (1 samples, 0.01%)</title><rect x="920.4" y="213" width="0.1" height="15.0" fill="rgb(210,40,45)" rx="2" ry="2" />
<text  x="923.41" y="223.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.01%)</title><rect x="101.2" y="693" width="0.1" height="15.0" fill="rgb(250,199,13)" rx="2" ry="2" />
<text  x="104.16" y="703.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="826.7" y="213" width="0.1" height="15.0" fill="rgb(227,124,22)" rx="2" ry="2" />
<text  x="829.66" y="223.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**&gt; (1 samples, 0.01%)</title><rect x="254.1" y="549" width="0.1" height="15.0" fill="rgb(213,10,18)" rx="2" ry="2" />
<text  x="257.11" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_poll (1 samples, 0.01%)</title><rect x="964.2" y="501" width="0.1" height="15.0" fill="rgb(221,102,29)" rx="2" ry="2" />
<text  x="967.17" y="511.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="250.0" y="613" width="0.1" height="15.0" fill="rgb(240,35,51)" rx="2" ry="2" />
<text  x="252.99" y="623.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (1 samples, 0.01%)</title><rect x="1187.9" y="613" width="0.1" height="15.0" fill="rgb(223,226,3)" rx="2" ry="2" />
<text  x="1190.88" y="623.5" ></text>
</g>
<g >
<title>Scene::HasRequestedScene (1 samples, 0.01%)</title><rect x="955.4" y="597" width="0.2" height="15.0" fill="rgb(251,164,32)" rx="2" ry="2" />
<text  x="958.44" y="607.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="638.8" y="261" width="0.1" height="15.0" fill="rgb(222,113,38)" rx="2" ry="2" />
<text  x="641.80" y="271.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.01%)</title><rect x="960.4" y="437" width="0.1" height="15.0" fill="rgb(232,28,51)" rx="2" ry="2" />
<text  x="963.39" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (1 samples, 0.01%)</title><rect x="1187.9" y="773" width="0.1" height="15.0" fill="rgb(226,166,52)" rx="2" ry="2" />
<text  x="1190.88" y="783.5" ></text>
</g>
<g >
<title>Window_Message::Update (8 samples, 0.08%)</title><rect x="959.8" y="645" width="0.9" height="15.0" fill="rgb(243,93,27)" rx="2" ry="2" />
<text  x="962.80" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (1 samples, 0.01%)</title><rect x="1187.2" y="789" width="0.1" height="15.0" fill="rgb(212,138,14)" rx="2" ry="2" />
<text  x="1190.17" y="799.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (16 samples, 0.16%)</title><rect x="1161.1" y="597" width="1.9" height="15.0" fill="rgb(223,73,6)" rx="2" ry="2" />
<text  x="1164.11" y="607.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.01%)</title><rect x="974.0" y="485" width="0.1" height="15.0" fill="rgb(225,54,42)" rx="2" ry="2" />
<text  x="976.95" y="495.5" ></text>
</g>
<g >
<title>[unknown] (/tmp/.glbnrHoY (261 samples, 2.61%)</title><rect x="103.2" y="805" width="30.7" height="15.0" fill="rgb(251,8,19)" rx="2" ry="2" />
<text  x="106.16" y="815.5" >[u..</text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="265.7" y="389" width="0.1" height="15.0" fill="rgb(227,114,29)" rx="2" ry="2" />
<text  x="268.67" y="399.5" ></text>
</g>
<g >
<title>Sprite::~Sprite (1 samples, 0.01%)</title><rect x="923.5" y="469" width="0.1" height="15.0" fill="rgb(233,125,0)" rx="2" ry="2" />
<text  x="926.48" y="479.5" ></text>
</g>
<g >
<title>[libGLX.so.0.0.0] (1 samples, 0.01%)</title><rect x="96.7" y="789" width="0.1" height="15.0" fill="rgb(235,103,7)" rx="2" ry="2" />
<text  x="99.68" y="799.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.01%)</title><rect x="1133.7" y="421" width="0.2" height="15.0" fill="rgb(214,81,24)" rx="2" ry="2" />
<text  x="1136.75" y="431.5" ></text>
</g>
<g >
<title>Window_Base::Update (2 samples, 0.02%)</title><rect x="959.6" y="597" width="0.2" height="15.0" fill="rgb(230,133,23)" rx="2" ry="2" />
<text  x="962.57" y="607.5" ></text>
</g>
<g >
<title>tcache_put (2 samples, 0.02%)</title><rect x="642.8" y="341" width="0.2" height="15.0" fill="rgb(228,44,50)" rx="2" ry="2" />
<text  x="645.81" y="351.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (2 samples, 0.02%)</title><rect x="922.5" y="453" width="0.3" height="15.0" fill="rgb(251,89,13)" rx="2" ry="2" />
<text  x="925.54" y="463.5" ></text>
</g>
<g >
<title>read_tsc (5 samples, 0.05%)</title><rect x="1154.9" y="565" width="0.5" height="15.0" fill="rgb(243,38,53)" rx="2" ry="2" />
<text  x="1157.86" y="575.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="54.6" y="613" width="0.1" height="15.0" fill="rgb(241,140,27)" rx="2" ry="2" />
<text  x="57.58" y="623.5" ></text>
</g>
<g >
<title>any_of&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int&gt; &gt;, Input::UiSource::Update()::&lt;lambda(int)&gt; &gt; (2 samples, 0.02%)</title><rect x="255.3" y="645" width="0.2" height="15.0" fill="rgb(206,158,52)" rx="2" ry="2" />
<text  x="258.29" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.08%)</title><rect x="963.2" y="437" width="1.0" height="15.0" fill="rgb(252,112,20)" rx="2" ry="2" />
<text  x="966.22" y="447.5" ></text>
</g>
<g >
<title>sock_wfree (1 samples, 0.01%)</title><rect x="961.9" y="277" width="0.1" height="15.0" fill="rgb(228,77,54)" rx="2" ry="2" />
<text  x="964.92" y="287.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="326.6" y="341" width="0.2" height="15.0" fill="rgb(213,55,2)" rx="2" ry="2" />
<text  x="329.64" y="351.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (1 samples, 0.01%)</title><rect x="960.5" y="453" width="0.1" height="15.0" fill="rgb(253,81,27)" rx="2" ry="2" />
<text  x="963.51" y="463.5" ></text>
</g>
<g >
<title>__GI___getpid (2 samples, 0.02%)</title><rect x="1163.1" y="613" width="0.2" height="15.0" fill="rgb(223,107,26)" rx="2" ry="2" />
<text  x="1166.11" y="623.5" ></text>
</g>
<g >
<title>__GI___libc_read (1 samples, 0.01%)</title><rect x="920.5" y="197" width="0.1" height="15.0" fill="rgb(215,157,41)" rx="2" ry="2" />
<text  x="923.53" y="207.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (1 samples, 0.01%)</title><rect x="70.6" y="789" width="0.1" height="15.0" fill="rgb(226,94,49)" rx="2" ry="2" />
<text  x="73.62" y="799.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="254.0" y="549" width="0.1" height="15.0" fill="rgb(237,93,41)" rx="2" ry="2" />
<text  x="257.00" y="559.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="133.4" y="741" width="0.2" height="15.0" fill="rgb(214,181,34)" rx="2" ry="2" />
<text  x="136.35" y="751.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (3 samples, 0.03%)</title><rect x="184.9" y="565" width="0.3" height="15.0" fill="rgb(209,94,47)" rx="2" ry="2" />
<text  x="187.89" y="575.5" ></text>
</g>
<g >
<title>FindFile (1 samples, 0.01%)</title><rect x="916.3" y="501" width="0.1" height="15.0" fill="rgb(228,182,23)" rx="2" ry="2" />
<text  x="919.29" y="511.5" ></text>
</g>
<g >
<title>handle_irq (4 samples, 0.04%)</title><rect x="891.0" y="373" width="0.5" height="15.0" fill="rgb(229,62,40)" rx="2" ry="2" />
<text  x="894.05" y="383.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.01%)</title><rect x="923.0" y="469" width="0.1" height="15.0" fill="rgb(218,61,32)" rx="2" ry="2" />
<text  x="926.01" y="479.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="739.5" y="245" width="0.1" height="15.0" fill="rgb(228,207,15)" rx="2" ry="2" />
<text  x="742.51" y="255.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.01%)</title><rect x="53.9" y="741" width="0.1" height="15.0" fill="rgb(249,189,54)" rx="2" ry="2" />
<text  x="56.87" y="751.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (89 samples, 0.89%)</title><rect x="239.5" y="597" width="10.5" height="15.0" fill="rgb(246,22,25)" rx="2" ry="2" />
<text  x="242.49" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (2 samples, 0.02%)</title><rect x="705.8" y="565" width="0.2" height="15.0" fill="rgb(250,124,44)" rx="2" ry="2" />
<text  x="708.78" y="575.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="326.6" y="389" width="0.2" height="15.0" fill="rgb(220,22,33)" rx="2" ry="2" />
<text  x="329.64" y="399.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (45 samples, 0.45%)</title><rect x="965.7" y="421" width="5.3" height="15.0" fill="rgb(221,176,20)" rx="2" ry="2" />
<text  x="968.70" y="431.5" ></text>
</g>
<g >
<title>_IO_new_file_underflow (1 samples, 0.01%)</title><rect x="920.5" y="213" width="0.1" height="15.0" fill="rgb(229,128,4)" rx="2" ry="2" />
<text  x="923.53" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="962.9" y="469" width="0.1" height="15.0" fill="rgb(210,221,18)" rx="2" ry="2" />
<text  x="965.87" y="479.5" ></text>
</g>
<g >
<title>std::__weak_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__weak_count (1 samples, 0.01%)</title><rect x="918.9" y="485" width="0.1" height="15.0" fill="rgb(211,177,1)" rx="2" ry="2" />
<text  x="921.88" y="495.5" ></text>
</g>
<g >
<title>Cache::System (2 samples, 0.02%)</title><rect x="959.6" y="565" width="0.2" height="15.0" fill="rgb(205,26,19)" rx="2" ry="2" />
<text  x="962.57" y="575.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.01%)</title><rect x="1188.0" y="661" width="0.1" height="15.0" fill="rgb(241,204,19)" rx="2" ry="2" />
<text  x="1191.00" y="671.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="739.6" y="245" width="0.1" height="15.0" fill="rgb(228,171,45)" rx="2" ry="2" />
<text  x="742.63" y="255.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (39 samples, 0.39%)</title><rect x="1129.3" y="597" width="4.6" height="15.0" fill="rgb(229,8,25)" rx="2" ry="2" />
<text  x="1132.27" y="607.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="133.2" y="677" width="0.2" height="15.0" fill="rgb(216,126,18)" rx="2" ry="2" />
<text  x="136.24" y="687.5" ></text>
</g>
<g >
<title>_int_free (27 samples, 0.27%)</title><rect x="81.0" y="789" width="3.2" height="15.0" fill="rgb(251,137,21)" rx="2" ry="2" />
<text  x="83.99" y="799.5" ></text>
</g>
<g >
<title>memmove@plt (22 samples, 0.22%)</title><rect x="676.9" y="357" width="2.6" height="15.0" fill="rgb(237,36,54)" rx="2" ry="2" />
<text  x="679.89" y="367.5" ></text>
</g>
<g >
<title>Graphics::Update (3 samples, 0.03%)</title><rect x="254.8" y="677" width="0.4" height="15.0" fill="rgb(214,55,0)" rx="2" ry="2" />
<text  x="257.82" y="687.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="1128.8" y="565" width="0.1" height="15.0" fill="rgb(243,182,37)" rx="2" ry="2" />
<text  x="1131.79" y="575.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.01%)</title><rect x="265.7" y="341" width="0.1" height="15.0" fill="rgb(221,167,41)" rx="2" ry="2" />
<text  x="268.67" y="351.5" ></text>
</g>
<g >
<title>select_task_rq_fair (1 samples, 0.01%)</title><rect x="66.4" y="613" width="0.1" height="15.0" fill="rgb(242,40,28)" rx="2" ry="2" />
<text  x="69.37" y="623.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="1128.8" y="549" width="0.1" height="15.0" fill="rgb(229,133,8)" rx="2" ry="2" />
<text  x="1131.79" y="559.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="920.2" y="277" width="0.1" height="15.0" fill="rgb(218,127,10)" rx="2" ry="2" />
<text  x="923.18" y="287.5" ></text>
</g>
<g >
<title>sock_write_iter (1 samples, 0.01%)</title><rect x="963.0" y="309" width="0.1" height="15.0" fill="rgb(233,143,13)" rx="2" ry="2" />
<text  x="965.99" y="319.5" ></text>
</g>
<g >
<title>handle_irq_event (2 samples, 0.02%)</title><rect x="133.6" y="725" width="0.2" height="15.0" fill="rgb(231,134,47)" rx="2" ry="2" />
<text  x="136.59" y="735.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (9 samples, 0.09%)</title><rect x="250.1" y="613" width="1.1" height="15.0" fill="rgb(227,183,11)" rx="2" ry="2" />
<text  x="253.10" y="623.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.01%)</title><rect x="1128.8" y="453" width="0.1" height="15.0" fill="rgb(215,98,54)" rx="2" ry="2" />
<text  x="1131.79" y="463.5" ></text>
</g>
<g >
<title>Scene::IsAsyncPending (92 samples, 0.92%)</title><rect x="1174.2" y="677" width="10.8" height="15.0" fill="rgb(206,196,50)" rx="2" ry="2" />
<text  x="1177.20" y="687.5" ></text>
</g>
<g >
<title>__tz_convert (1 samples, 0.01%)</title><rect x="916.5" y="469" width="0.1" height="15.0" fill="rgb(223,183,21)" rx="2" ry="2" />
<text  x="919.52" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="964.2" y="533" width="0.1" height="15.0" fill="rgb(211,108,13)" rx="2" ry="2" />
<text  x="967.17" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_M_lower_bound (4 samples, 0.04%)</title><rect x="918.2" y="485" width="0.4" height="15.0" fill="rgb(238,60,0)" rx="2" ry="2" />
<text  x="921.17" y="495.5" ></text>
</g>
<g >
<title>__vfs_read (1 samples, 0.01%)</title><rect x="65.7" y="725" width="0.1" height="15.0" fill="rgb(253,87,18)" rx="2" ry="2" />
<text  x="68.66" y="735.5" ></text>
</g>
<g >
<title>Utils::DecodeUTF32 (1 samples, 0.01%)</title><rect x="921.1" y="357" width="0.1" height="15.0" fill="rgb(228,212,51)" rx="2" ry="2" />
<text  x="924.12" y="367.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.01%)</title><rect x="973.1" y="341" width="0.1" height="15.0" fill="rgb(209,197,48)" rx="2" ry="2" />
<text  x="976.13" y="351.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (5,944 samples, 59.40%)</title><rect x="256.0" y="645" width="701.0" height="15.0" fill="rgb(241,138,52)" rx="2" ry="2" />
<text  x="259.00" y="655.5" >Game_Map::UpdateCommonEvents</text>
</g>
<g >
<title>usb_hcd_submit_urb (1 samples, 0.01%)</title><rect x="891.3" y="133" width="0.1" height="15.0" fill="rgb(217,134,11)" rx="2" ry="2" />
<text  x="894.29" y="143.5" ></text>
</g>
<g >
<title>Game_Player::UpdateSelfMovement (4 samples, 0.04%)</title><rect x="957.1" y="613" width="0.5" height="15.0" fill="rgb(249,62,18)" rx="2" ry="2" />
<text  x="960.09" y="623.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**&gt; (1 samples, 0.01%)</title><rect x="253.6" y="565" width="0.2" height="15.0" fill="rgb(232,181,25)" rx="2" ry="2" />
<text  x="256.64" y="575.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (2 samples, 0.02%)</title><rect x="67.0" y="709" width="0.2" height="15.0" fill="rgb(246,183,42)" rx="2" ry="2" />
<text  x="69.96" y="719.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (70 samples, 0.70%)</title><rect x="668.4" y="357" width="8.3" height="15.0" fill="rgb(226,192,48)" rx="2" ry="2" />
<text  x="671.40" y="367.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="908.1" y="357" width="0.2" height="15.0" fill="rgb(229,125,44)" rx="2" ry="2" />
<text  x="911.15" y="367.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.01%)</title><rect x="1187.9" y="645" width="0.1" height="15.0" fill="rgb(250,104,17)" rx="2" ry="2" />
<text  x="1190.88" y="655.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (2 samples, 0.02%)</title><rect x="254.0" y="565" width="0.2" height="15.0" fill="rgb(219,145,33)" rx="2" ry="2" />
<text  x="257.00" y="575.5" ></text>
</g>
<g >
<title>__libc_recvmsg (3 samples, 0.03%)</title><rect x="962.4" y="517" width="0.4" height="15.0" fill="rgb(243,90,30)" rx="2" ry="2" />
<text  x="965.40" y="527.5" ></text>
</g>
<g >
<title>xcb_wait_for_reply64 (1 samples, 0.01%)</title><rect x="962.9" y="533" width="0.1" height="15.0" fill="rgb(207,131,43)" rx="2" ry="2" />
<text  x="965.87" y="543.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="100.9" y="789" width="0.1" height="15.0" fill="rgb(212,5,14)" rx="2" ry="2" />
<text  x="103.92" y="799.5" ></text>
</g>
<g >
<title>Game_Map::Update (5,963 samples, 59.59%)</title><rect x="256.0" y="661" width="703.2" height="15.0" fill="rgb(254,160,49)" rx="2" ry="2" />
<text  x="259.00" y="671.5" >Game_Map::Update</text>
</g>
<g >
<title>Bitmap::Init (3 samples, 0.03%)</title><rect x="224.9" y="421" width="0.3" height="15.0" fill="rgb(220,228,25)" rx="2" ry="2" />
<text  x="227.87" y="431.5" ></text>
</g>
<g >
<title>_XReply (1 samples, 0.01%)</title><rect x="962.9" y="549" width="0.1" height="15.0" fill="rgb(254,105,3)" rx="2" ry="2" />
<text  x="965.87" y="559.5" ></text>
</g>
<g >
<title>__atomic_add (1 samples, 0.01%)</title><rect x="960.5" y="437" width="0.1" height="15.0" fill="rgb(243,93,1)" rx="2" ry="2" />
<text  x="963.51" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::~_Vector_base (596 samples, 5.96%)</title><rect x="838.0" y="501" width="70.3" height="15.0" fill="rgb(250,159,37)" rx="2" ry="2" />
<text  x="840.98" y="511.5" >std::_V..</text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::_M_move_assign (5 samples, 0.05%)</title><rect x="256.8" y="565" width="0.6" height="15.0" fill="rgb(214,22,45)" rx="2" ry="2" />
<text  x="259.83" y="575.5" ></text>
</g>
<g >
<title>strcmp@plt (1 samples, 0.01%)</title><rect x="255.9" y="597" width="0.1" height="15.0" fill="rgb(225,120,34)" rx="2" ry="2" />
<text  x="258.88" y="607.5" ></text>
</g>
<g >
<title>Sprite_Character::Update (3 samples, 0.03%)</title><rect x="960.7" y="645" width="0.4" height="15.0" fill="rgb(217,91,13)" rx="2" ry="2" />
<text  x="963.75" y="655.5" ></text>
</g>
<g >
<title>rw_verify_area (4 samples, 0.04%)</title><rect x="65.8" y="725" width="0.5" height="15.0" fill="rgb(214,100,31)" rx="2" ry="2" />
<text  x="68.78" y="735.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.02%)</title><rect x="921.9" y="309" width="0.3" height="15.0" fill="rgb(213,146,31)" rx="2" ry="2" />
<text  x="924.95" y="319.5" ></text>
</g>
<g >
<title>__GI___sched_yield (2 samples, 0.02%)</title><rect x="101.0" y="789" width="0.3" height="15.0" fill="rgb(247,51,6)" rx="2" ry="2" />
<text  x="104.04" y="799.5" ></text>
</g>
<g >
<title>__libc_start_main (8,695 samples, 86.90%)</title><rect x="159.8" y="789" width="1025.4" height="15.0" fill="rgb(247,219,33)" rx="2" ry="2" />
<text  x="162.77" y="799.5" >__libc_start_main</text>
</g>
<g >
<title>Game_Screen::Update (13 samples, 0.13%)</title><rect x="957.7" y="645" width="1.5" height="15.0" fill="rgb(254,40,18)" rx="2" ry="2" />
<text  x="960.68" y="655.5" ></text>
</g>
<g >
<title>native_smp_send_reschedule (1 samples, 0.01%)</title><rect x="908.1" y="229" width="0.2" height="15.0" fill="rgb(249,98,34)" rx="2" ry="2" />
<text  x="911.15" y="239.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (5 samples, 0.05%)</title><rect x="646.7" y="309" width="0.6" height="15.0" fill="rgb(212,122,46)" rx="2" ry="2" />
<text  x="649.70" y="319.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="100.8" y="789" width="0.1" height="15.0" fill="rgb(219,221,28)" rx="2" ry="2" />
<text  x="103.81" y="799.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.01%)</title><rect x="1161.2" y="565" width="0.1" height="15.0" fill="rgb(239,18,45)" rx="2" ry="2" />
<text  x="1164.23" y="575.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="1161.5" y="469" width="0.1" height="15.0" fill="rgb(251,196,49)" rx="2" ry="2" />
<text  x="1164.46" y="479.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (1 samples, 0.01%)</title><rect x="225.6" y="629" width="0.1" height="15.0" fill="rgb(237,81,31)" rx="2" ry="2" />
<text  x="228.57" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (10 samples, 0.10%)</title><rect x="338.1" y="469" width="1.2" height="15.0" fill="rgb(212,126,21)" rx="2" ry="2" />
<text  x="341.08" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_compare (1 samples, 0.01%)</title><rect x="921.6" y="309" width="0.1" height="15.0" fill="rgb(236,128,51)" rx="2" ry="2" />
<text  x="924.59" y="319.5" ></text>
</g>
<g >
<title>finish_task_switch (9 samples, 0.09%)</title><rect x="1161.8" y="533" width="1.1" height="15.0" fill="rgb(205,125,23)" rx="2" ry="2" />
<text  x="1164.81" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="1163.1" y="597" width="0.2" height="15.0" fill="rgb(247,215,46)" rx="2" ry="2" />
<text  x="1166.11" y="607.5" ></text>
</g>
<g >
<title>_XEventsQueued (13 samples, 0.13%)</title><rect x="972.3" y="597" width="1.5" height="15.0" fill="rgb(236,65,3)" rx="2" ry="2" />
<text  x="975.30" y="607.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (69 samples, 0.69%)</title><rect x="55.5" y="597" width="8.2" height="15.0" fill="rgb(214,7,40)" rx="2" ry="2" />
<text  x="58.52" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (1 samples, 0.01%)</title><rect x="922.2" y="325" width="0.1" height="15.0" fill="rgb(232,101,1)" rx="2" ry="2" />
<text  x="925.18" y="335.5" ></text>
</g>
<g >
<title>poll_schedule_timeout.constprop.14 (8 samples, 0.08%)</title><rect x="963.2" y="373" width="1.0" height="15.0" fill="rgb(252,66,13)" rx="2" ry="2" />
<text  x="966.22" y="383.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (11 samples, 0.11%)</title><rect x="251.2" y="613" width="1.3" height="15.0" fill="rgb(227,32,46)" rx="2" ry="2" />
<text  x="254.17" y="623.5" ></text>
</g>
<g >
<title>_XEnq (1 samples, 0.01%)</title><rect x="962.3" y="549" width="0.1" height="15.0" fill="rgb(219,36,41)" rx="2" ry="2" />
<text  x="965.28" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (4 samples, 0.04%)</title><rect x="918.2" y="437" width="0.4" height="15.0" fill="rgb(254,4,24)" rx="2" ry="2" />
<text  x="921.17" y="447.5" ></text>
</g>
<g >
<title>_int_malloc (3 samples, 0.03%)</title><rect x="224.9" y="357" width="0.3" height="15.0" fill="rgb(248,204,20)" rx="2" ry="2" />
<text  x="227.87" y="367.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.01%)</title><rect x="326.6" y="213" width="0.2" height="15.0" fill="rgb(231,212,42)" rx="2" ry="2" />
<text  x="329.64" y="223.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (35 samples, 0.35%)</title><rect x="1129.7" y="533" width="4.2" height="15.0" fill="rgb(251,75,26)" rx="2" ry="2" />
<text  x="1132.74" y="543.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="642.3" y="261" width="0.2" height="15.0" fill="rgb(241,134,30)" rx="2" ry="2" />
<text  x="645.34" y="271.5" ></text>
</g>
<g >
<title>__libc_recvmsg (2 samples, 0.02%)</title><rect x="973.6" y="533" width="0.2" height="15.0" fill="rgb(238,221,5)" rx="2" ry="2" />
<text  x="976.60" y="543.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (29 samples, 0.29%)</title><rect x="971.5" y="661" width="3.4" height="15.0" fill="rgb(250,228,42)" rx="2" ry="2" />
<text  x="974.48" y="671.5" ></text>
</g>
<g >
<title>tcache_put (2 samples, 0.02%)</title><rect x="830.2" y="325" width="0.2" height="15.0" fill="rgb(243,63,43)" rx="2" ry="2" />
<text  x="833.20" y="335.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (6 samples, 0.06%)</title><rect x="961.6" y="549" width="0.7" height="15.0" fill="rgb(232,106,9)" rx="2" ry="2" />
<text  x="964.57" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator++ (64 samples, 0.64%)</title><rect x="1165.7" y="661" width="7.6" height="15.0" fill="rgb(247,14,2)" rx="2" ry="2" />
<text  x="1168.71" y="671.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.01%)</title><rect x="64.0" y="405" width="0.1" height="15.0" fill="rgb(234,226,35)" rx="2" ry="2" />
<text  x="67.01" y="415.5" ></text>
</g>
<g >
<title>handle_edge_irq (4 samples, 0.04%)</title><rect x="891.0" y="357" width="0.5" height="15.0" fill="rgb(240,24,35)" rx="2" ry="2" />
<text  x="894.05" y="367.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="224.2" y="469" width="0.1" height="15.0" fill="rgb(230,29,28)" rx="2" ry="2" />
<text  x="227.16" y="479.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (35 samples, 0.35%)</title><rect x="1129.7" y="549" width="4.2" height="15.0" fill="rgb(227,198,11)" rx="2" ry="2" />
<text  x="1132.74" y="559.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="51.3" y="789" width="0.1" height="15.0" fill="rgb(220,154,6)" rx="2" ry="2" />
<text  x="54.28" y="799.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (3 samples, 0.03%)</title><rect x="134.3" y="789" width="0.4" height="15.0" fill="rgb(252,175,25)" rx="2" ry="2" />
<text  x="137.30" y="799.5" ></text>
</g>
<g >
<title>Bitmap::EffectsBlit (1 samples, 0.01%)</title><rect x="90.2" y="789" width="0.1" height="15.0" fill="rgb(234,81,48)" rx="2" ry="2" />
<text  x="93.19" y="799.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.02%)</title><rect x="739.5" y="325" width="0.2" height="15.0" fill="rgb(235,70,9)" rx="2" ry="2" />
<text  x="742.51" y="335.5" ></text>
</g>
<g >
<title>Window_Base::Update (3 samples, 0.03%)</title><rect x="960.4" y="613" width="0.3" height="15.0" fill="rgb(236,113,43)" rx="2" ry="2" />
<text  x="963.39" y="623.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.01%)</title><rect x="973.1" y="357" width="0.1" height="15.0" fill="rgb(214,57,14)" rx="2" ry="2" />
<text  x="976.13" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="962.4" y="469" width="0.2" height="15.0" fill="rgb(218,79,54)" rx="2" ry="2" />
<text  x="965.40" y="479.5" ></text>
</g>
<g >
<title>std::_Construct&lt;RPG::EventCommand, RPG::EventCommand const&amp;&gt; (3,545 samples, 35.43%)</title><rect x="269.4" y="517" width="418.1" height="15.0" fill="rgb(217,118,44)" rx="2" ry="2" />
<text  x="272.44" y="527.5" >std::_Construct&lt;RPG::EventCommand, RPG::EventCommand cons..</text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (1 samples, 0.01%)</title><rect x="919.5" y="261" width="0.1" height="15.0" fill="rgb(240,98,40)" rx="2" ry="2" />
<text  x="922.47" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="922.5" y="421" width="0.2" height="15.0" fill="rgb(244,54,37)" rx="2" ry="2" />
<text  x="925.54" y="431.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (1 samples, 0.01%)</title><rect x="1128.8" y="357" width="0.1" height="15.0" fill="rgb(238,183,39)" rx="2" ry="2" />
<text  x="1131.79" y="367.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="647.1" y="213" width="0.1" height="15.0" fill="rgb(248,148,11)" rx="2" ry="2" />
<text  x="650.05" y="223.5" ></text>
</g>
<g >
<title>xhci_msi_irq (2 samples, 0.02%)</title><rect x="647.9" y="245" width="0.2" height="15.0" fill="rgb(219,72,0)" rx="2" ry="2" />
<text  x="650.88" y="255.5" ></text>
</g>
<g >
<title>LoadBitmap&lt;(&lt;unnamed&gt;::Material::Type)9&gt; (1 samples, 0.01%)</title><rect x="959.9" y="549" width="0.1" height="15.0" fill="rgb(208,211,12)" rx="2" ry="2" />
<text  x="962.92" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (4 samples, 0.04%)</title><rect x="961.7" y="437" width="0.5" height="15.0" fill="rgb(252,115,25)" rx="2" ry="2" />
<text  x="964.69" y="447.5" ></text>
</g>
<g >
<title>Cache::SpriteEffect (7 samples, 0.07%)</title><rect x="224.5" y="613" width="0.8" height="15.0" fill="rgb(247,82,39)" rx="2" ry="2" />
<text  x="227.51" y="623.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (8 samples, 0.08%)</title><rect x="1161.9" y="517" width="1.0" height="15.0" fill="rgb(206,177,20)" rx="2" ry="2" />
<text  x="1164.93" y="527.5" ></text>
</g>
<g >
<title>std::__fill_a&lt;unsigned char&gt; (1 samples, 0.01%)</title><rect x="917.6" y="373" width="0.1" height="15.0" fill="rgb(236,27,5)" rx="2" ry="2" />
<text  x="920.58" y="383.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="64.0" y="645" width="0.1" height="15.0" fill="rgb(215,173,32)" rx="2" ry="2" />
<text  x="67.01" y="655.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (971 samples, 9.70%)</title><rect x="723.5" y="389" width="114.5" height="15.0" fill="rgb(245,70,5)" rx="2" ry="2" />
<text  x="726.47" y="399.5" >std::_Vector_b..</text>
</g>
<g >
<title>Sdl2Ui::UpdateDisplay (1,356 samples, 13.55%)</title><rect x="974.9" y="677" width="159.9" height="15.0" fill="rgb(209,163,17)" rx="2" ry="2" />
<text  x="977.90" y="687.5" >Sdl2Ui::UpdateDisplay</text>
</g>
</g>
</svg>
