<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1094" onload="init(evt)" viewBox="0 0 1200 1094" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1094.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1077" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="1077" > </text>
<g id="frames">
<g >
<title>std::allocator&lt;int&gt;::~allocator (2 samples, 0.01%)</title><rect x="91.8" y="997" width="0.1" height="15.0" fill="rgb(237,48,5)" rx="2" ry="2" />
<text  x="94.75" y="1007.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (149 samples, 0.75%)</title><rect x="161.8" y="597" width="8.8" height="15.0" fill="rgb(244,53,36)" rx="2" ry="2" />
<text  x="164.77" y="607.5" ></text>
</g>
<g >
<title>Cache::System (5 samples, 0.03%)</title><rect x="1179.8" y="805" width="0.3" height="15.0" fill="rgb(227,195,38)" rx="2" ry="2" />
<text  x="1182.76" y="815.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (5 samples, 0.03%)</title><rect x="292.6" y="805" width="0.3" height="15.0" fill="rgb(224,78,31)" rx="2" ry="2" />
<text  x="295.65" y="815.5" ></text>
</g>
<g >
<title>std::_Bit_iterator_base::_Bit_iterator_base (2 samples, 0.01%)</title><rect x="337.6" y="741" width="0.1" height="15.0" fill="rgb(249,77,29)" rx="2" ry="2" />
<text  x="340.60" y="751.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (1,304 samples, 6.58%)</title><rect x="159.3" y="869" width="77.6" height="15.0" fill="rgb(209,175,53)" rx="2" ry="2" />
<text  x="162.27" y="879.5" >FileRequ..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (100 samples, 0.50%)</title><rect x="161.8" y="501" width="5.9" height="15.0" fill="rgb(254,23,35)" rx="2" ry="2" />
<text  x="164.77" y="511.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (5 samples, 0.03%)</title><rect x="318.5" y="261" width="0.3" height="15.0" fill="rgb(207,68,49)" rx="2" ry="2" />
<text  x="321.55" y="271.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (3 samples, 0.02%)</title><rect x="1009.5" y="645" width="0.1" height="15.0" fill="rgb(226,26,37)" rx="2" ry="2" />
<text  x="1012.47" y="655.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (5 samples, 0.03%)</title><rect x="1008.3" y="677" width="0.3" height="15.0" fill="rgb(214,134,25)" rx="2" ry="2" />
<text  x="1011.34" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (67 samples, 0.34%)</title><rect x="1028.6" y="693" width="4.0" height="15.0" fill="rgb(209,182,40)" rx="2" ry="2" />
<text  x="1031.58" y="703.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::~_Vector_base (8 samples, 0.04%)</title><rect x="959.3" y="309" width="0.5" height="15.0" fill="rgb(210,210,4)" rx="2" ry="2" />
<text  x="962.28" y="319.5" ></text>
</g>
<g >
<title>handle_mm_fault (64 samples, 0.32%)</title><rect x="299.4" y="405" width="3.8" height="15.0" fill="rgb(230,111,3)" rx="2" ry="2" />
<text  x="302.37" y="415.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (166 samples, 0.84%)</title><rect x="131.0" y="741" width="9.9" height="15.0" fill="rgb(232,192,26)" rx="2" ry="2" />
<text  x="134.05" y="751.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.02%)</title><rect x="138.4" y="405" width="0.2" height="15.0" fill="rgb(244,81,39)" rx="2" ry="2" />
<text  x="141.37" y="415.5" ></text>
</g>
<g >
<title>std::bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;, Game_Picture*&amp;, std::_Placeholder&lt;1&gt; const&amp;&gt; (36 samples, 0.18%)</title><rect x="687.2" y="709" width="2.1" height="15.0" fill="rgb(215,187,22)" rx="2" ry="2" />
<text  x="690.17" y="719.5" ></text>
</g>
<g >
<title>finish_task_switch (23 samples, 0.12%)</title><rect x="1181.1" y="693" width="1.3" height="15.0" fill="rgb(245,218,5)" rx="2" ry="2" />
<text  x="1184.07" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (16 samples, 0.08%)</title><rect x="1077.6" y="773" width="0.9" height="15.0" fill="rgb(241,86,46)" rx="2" ry="2" />
<text  x="1080.59" y="783.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (4 samples, 0.02%)</title><rect x="1013.5" y="709" width="0.2" height="15.0" fill="rgb(228,21,28)" rx="2" ry="2" />
<text  x="1016.46" y="719.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocator&lt;Bitmap&gt; (2 samples, 0.01%)</title><rect x="953.4" y="373" width="0.2" height="15.0" fill="rgb(235,7,26)" rx="2" ry="2" />
<text  x="956.44" y="383.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (20 samples, 0.10%)</title><rect x="868.9" y="501" width="1.2" height="15.0" fill="rgb(212,29,35)" rx="2" ry="2" />
<text  x="871.89" y="511.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (80 samples, 0.40%)</title><rect x="865.3" y="517" width="4.8" height="15.0" fill="rgb(250,20,3)" rx="2" ry="2" />
<text  x="868.32" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::size (2 samples, 0.01%)</title><rect x="1148.5" y="821" width="0.1" height="15.0" fill="rgb(224,64,39)" rx="2" ry="2" />
<text  x="1151.50" y="831.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (349 samples, 1.76%)</title><rect x="267.5" y="693" width="20.8" height="15.0" fill="rgb(252,185,48)" rx="2" ry="2" />
<text  x="270.52" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (9 samples, 0.05%)</title><rect x="510.2" y="741" width="0.5" height="15.0" fill="rgb(216,153,17)" rx="2" ry="2" />
<text  x="513.15" y="751.5" ></text>
</g>
<g >
<title>std::forward&lt;Game_Picture*&amp;&gt; (4 samples, 0.02%)</title><rect x="965.9" y="533" width="0.2" height="15.0" fill="rgb(234,194,12)" rx="2" ry="2" />
<text  x="968.88" y="543.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (48 samples, 0.24%)</title><rect x="785.5" y="437" width="2.9" height="15.0" fill="rgb(221,144,17)" rx="2" ry="2" />
<text  x="788.53" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (3 samples, 0.02%)</title><rect x="329.9" y="997" width="0.1" height="15.0" fill="rgb(239,136,25)" rx="2" ry="2" />
<text  x="332.86" y="1007.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, true&gt; (60 samples, 0.30%)</title><rect x="791.1" y="501" width="3.5" height="15.0" fill="rgb(205,61,45)" rx="2" ry="2" />
<text  x="794.07" y="511.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (4 samples, 0.02%)</title><rect x="326.2" y="629" width="0.3" height="15.0" fill="rgb(247,165,33)" rx="2" ry="2" />
<text  x="329.23" y="639.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (44 samples, 0.22%)</title><rect x="258.8" y="677" width="2.6" height="15.0" fill="rgb(247,9,41)" rx="2" ry="2" />
<text  x="261.83" y="687.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (6 samples, 0.03%)</title><rect x="1154.7" y="805" width="0.3" height="15.0" fill="rgb(251,9,0)" rx="2" ry="2" />
<text  x="1157.69" y="815.5" ></text>
</g>
<g >
<title>pixman_region32_extents (2 samples, 0.01%)</title><rect x="327.6" y="997" width="0.1" height="15.0" fill="rgb(225,29,42)" rx="2" ry="2" />
<text  x="330.60" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (7 samples, 0.04%)</title><rect x="659.6" y="645" width="0.4" height="15.0" fill="rgb(244,216,14)" rx="2" ry="2" />
<text  x="662.60" y="655.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (102 samples, 0.51%)</title><rect x="144.7" y="821" width="6.1" height="15.0" fill="rgb(247,15,46)" rx="2" ry="2" />
<text  x="147.68" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (6 samples, 0.03%)</title><rect x="788.5" y="485" width="0.4" height="15.0" fill="rgb(246,225,51)" rx="2" ry="2" />
<text  x="791.51" y="495.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (4 samples, 0.02%)</title><rect x="1162.9" y="805" width="0.2" height="15.0" fill="rgb(222,168,29)" rx="2" ry="2" />
<text  x="1165.91" y="815.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (3 samples, 0.02%)</title><rect x="977.4" y="453" width="0.2" height="15.0" fill="rgb(235,97,35)" rx="2" ry="2" />
<text  x="980.44" y="463.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (3 samples, 0.02%)</title><rect x="1133.0" y="805" width="0.1" height="15.0" fill="rgb(215,159,26)" rx="2" ry="2" />
<text  x="1135.96" y="815.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int&gt; (4 samples, 0.02%)</title><rect x="674.1" y="597" width="0.3" height="15.0" fill="rgb(242,107,40)" rx="2" ry="2" />
<text  x="677.13" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (2 samples, 0.01%)</title><rect x="720.3" y="661" width="0.1" height="15.0" fill="rgb(246,190,14)" rx="2" ry="2" />
<text  x="723.27" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt;::end (16 samples, 0.08%)</title><rect x="938.1" y="437" width="0.9" height="15.0" fill="rgb(226,130,17)" rx="2" ry="2" />
<text  x="941.08" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_base (4 samples, 0.02%)</title><rect x="831.7" y="389" width="0.3" height="15.0" fill="rgb(239,55,40)" rx="2" ry="2" />
<text  x="834.74" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (2 samples, 0.01%)</title><rect x="1038.0" y="725" width="0.1" height="15.0" fill="rgb(252,144,50)" rx="2" ry="2" />
<text  x="1040.99" y="735.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (1,178 samples, 5.94%)</title><rect x="795.1" y="517" width="70.2" height="15.0" fill="rgb(246,68,28)" rx="2" ry="2" />
<text  x="798.12" y="527.5" >Game_Pi..</text>
</g>
<g >
<title>Bitmap::~Bitmap (92 samples, 0.46%)</title><rect x="954.3" y="341" width="5.5" height="15.0" fill="rgb(207,117,20)" rx="2" ry="2" />
<text  x="957.27" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (3 samples, 0.02%)</title><rect x="1096.4" y="773" width="0.2" height="15.0" fill="rgb(242,217,3)" rx="2" ry="2" />
<text  x="1099.40" y="783.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="837.6" y="357" width="0.1" height="15.0" fill="rgb(210,75,23)" rx="2" ry="2" />
<text  x="840.57" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (29 samples, 0.15%)</title><rect x="286.6" y="485" width="1.7" height="15.0" fill="rgb(216,193,27)" rx="2" ry="2" />
<text  x="289.57" y="495.5" ></text>
</g>
<g >
<title>main (4 samples, 0.02%)</title><rect x="326.2" y="997" width="0.3" height="15.0" fill="rgb(239,181,36)" rx="2" ry="2" />
<text  x="329.23" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (23 samples, 0.12%)</title><rect x="512.4" y="757" width="1.4" height="15.0" fill="rgb(218,181,5)" rx="2" ry="2" />
<text  x="515.41" y="767.5" ></text>
</g>
<g >
<title>__interceptor_recvmsg (3 samples, 0.02%)</title><rect x="1182.6" y="741" width="0.2" height="15.0" fill="rgb(232,26,53)" rx="2" ry="2" />
<text  x="1185.62" y="751.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::~__allocated_ptr (13 samples, 0.07%)</title><rect x="952.7" y="373" width="0.7" height="15.0" fill="rgb(218,120,49)" rx="2" ry="2" />
<text  x="955.67" y="383.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (59 samples, 0.30%)</title><rect x="691.2" y="629" width="3.5" height="15.0" fill="rgb(208,18,31)" rx="2" ry="2" />
<text  x="694.22" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (5 samples, 0.03%)</title><rect x="861.0" y="501" width="0.3" height="15.0" fill="rgb(212,17,9)" rx="2" ry="2" />
<text  x="864.03" y="511.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::CommonEvent&gt; (7 samples, 0.04%)</title><rect x="1151.3" y="773" width="0.4" height="15.0" fill="rgb(244,137,7)" rx="2" ry="2" />
<text  x="1154.30" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create@plt (4 samples, 0.02%)</title><rect x="792.7" y="421" width="0.3" height="15.0" fill="rgb(243,124,20)" rx="2" ry="2" />
<text  x="795.74" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::_M_ptr (8 samples, 0.04%)</title><rect x="1147.2" y="789" width="0.5" height="15.0" fill="rgb(232,189,54)" rx="2" ry="2" />
<text  x="1150.19" y="799.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::get (12 samples, 0.06%)</title><rect x="1147.7" y="805" width="0.7" height="15.0" fill="rgb(248,58,36)" rx="2" ry="2" />
<text  x="1150.67" y="815.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.01%)</title><rect x="58.2" y="997" width="0.1" height="15.0" fill="rgb(223,74,32)" rx="2" ry="2" />
<text  x="61.17" y="1007.5" ></text>
</g>
<g >
<title>Bitmap::Clear (3 samples, 0.02%)</title><rect x="23.0" y="997" width="0.2" height="15.0" fill="rgb(244,0,43)" rx="2" ry="2" />
<text  x="26.04" y="1007.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.01%)</title><rect x="137.0" y="309" width="0.1" height="15.0" fill="rgb(252,206,46)" rx="2" ry="2" />
<text  x="140.00" y="319.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (20 samples, 0.10%)</title><rect x="596.8" y="757" width="1.2" height="15.0" fill="rgb(228,151,18)" rx="2" ry="2" />
<text  x="599.78" y="767.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (33 samples, 0.17%)</title><rect x="173.7" y="517" width="2.0" height="15.0" fill="rgb(230,192,47)" rx="2" ry="2" />
<text  x="176.74" y="527.5" ></text>
</g>
<g >
<title>Bitmap::find_format (49 samples, 0.25%)</title><rect x="264.4" y="437" width="2.9" height="15.0" fill="rgb(225,140,12)" rx="2" ry="2" />
<text  x="267.36" y="447.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::operator[] (29 samples, 0.15%)</title><rect x="286.6" y="437" width="1.7" height="15.0" fill="rgb(254,143,3)" rx="2" ry="2" />
<text  x="289.57" y="447.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (58 samples, 0.29%)</title><rect x="141.1" y="805" width="3.4" height="15.0" fill="rgb(236,62,2)" rx="2" ry="2" />
<text  x="144.05" y="815.5" ></text>
</g>
<g >
<title>Game_Switches_Class::Get (4 samples, 0.02%)</title><rect x="508.8" y="757" width="0.3" height="15.0" fill="rgb(214,58,38)" rx="2" ry="2" />
<text  x="511.84" y="767.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (3 samples, 0.02%)</title><rect x="1009.5" y="677" width="0.1" height="15.0" fill="rgb(229,173,37)" rx="2" ry="2" />
<text  x="1012.47" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (8 samples, 0.04%)</title><rect x="883.8" y="437" width="0.5" height="15.0" fill="rgb(234,97,10)" rx="2" ry="2" />
<text  x="886.78" y="447.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::operator= (4 samples, 0.02%)</title><rect x="75.7" y="997" width="0.2" height="15.0" fill="rgb(235,182,48)" rx="2" ry="2" />
<text  x="78.67" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="1024.1" y="613" width="0.1" height="15.0" fill="rgb(207,196,43)" rx="2" ry="2" />
<text  x="1027.12" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (648 samples, 3.27%)</title><rect x="402.6" y="789" width="38.5" height="15.0" fill="rgb(231,168,29)" rx="2" ry="2" />
<text  x="405.56" y="799.5" >std..</text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; (4 samples, 0.02%)</title><rect x="941.7" y="405" width="0.2" height="15.0" fill="rgb(240,125,0)" rx="2" ry="2" />
<text  x="944.65" y="415.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*, std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (178 samples, 0.90%)</title><rect x="969.9" y="645" width="10.6" height="15.0" fill="rgb(241,81,36)" rx="2" ry="2" />
<text  x="972.93" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::new_allocator (4 samples, 0.02%)</title><rect x="55.1" y="997" width="0.2" height="15.0" fill="rgb(254,51,18)" rx="2" ry="2" />
<text  x="58.07" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (19 samples, 0.10%)</title><rect x="976.2" y="437" width="1.2" height="15.0" fill="rgb(213,171,38)" rx="2" ry="2" />
<text  x="979.24" y="447.5" ></text>
</g>
<g >
<title>std::default_delete&lt;Sprite&gt;::operator() (9 samples, 0.05%)</title><rect x="237.6" y="549" width="0.6" height="15.0" fill="rgb(220,48,30)" rx="2" ry="2" />
<text  x="240.63" y="559.5" ></text>
</g>
<g >
<title>std::replace&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (214 samples, 1.08%)</title><rect x="628.7" y="693" width="12.7" height="15.0" fill="rgb(242,106,52)" rx="2" ry="2" />
<text  x="631.70" y="703.5" ></text>
</g>
<g >
<title>std::allocator&lt;Bitmap&gt;::allocator (2 samples, 0.01%)</title><rect x="839.9" y="469" width="0.1" height="15.0" fill="rgb(243,129,24)" rx="2" ry="2" />
<text  x="842.89" y="479.5" ></text>
</g>
<g >
<title>Color::Color (5 samples, 0.03%)</title><rect x="835.8" y="341" width="0.3" height="15.0" fill="rgb(235,166,26)" rx="2" ry="2" />
<text  x="838.85" y="351.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (14 samples, 0.07%)</title><rect x="147.5" y="453" width="0.8" height="15.0" fill="rgb(244,1,23)" rx="2" ry="2" />
<text  x="150.48" y="463.5" ></text>
</g>
<g >
<title>std::allocator&lt;Bitmap&gt;::~allocator (4 samples, 0.02%)</title><rect x="839.5" y="405" width="0.3" height="15.0" fill="rgb(209,2,4)" rx="2" ry="2" />
<text  x="842.54" y="415.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (9 samples, 0.05%)</title><rect x="130.5" y="629" width="0.5" height="15.0" fill="rgb(244,200,11)" rx="2" ry="2" />
<text  x="133.51" y="639.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (3 samples, 0.02%)</title><rect x="702.4" y="693" width="0.1" height="15.0" fill="rgb(253,13,27)" rx="2" ry="2" />
<text  x="705.35" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.03%)</title><rect x="155.2" y="533" width="0.4" height="15.0" fill="rgb(224,11,33)" rx="2" ry="2" />
<text  x="158.22" y="543.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="625.2" y="661" width="0.1" height="15.0" fill="rgb(209,146,53)" rx="2" ry="2" />
<text  x="628.19" y="671.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (2 samples, 0.01%)</title><rect x="154.6" y="597" width="0.1" height="15.0" fill="rgb(227,96,14)" rx="2" ry="2" />
<text  x="157.63" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="646.7" y="581" width="0.2" height="15.0" fill="rgb(216,49,4)" rx="2" ry="2" />
<text  x="649.74" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (37 samples, 0.19%)</title><rect x="622.1" y="613" width="2.2" height="15.0" fill="rgb(207,190,22)" rx="2" ry="2" />
<text  x="625.09" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (19 samples, 0.10%)</title><rect x="77.0" y="997" width="1.1" height="15.0" fill="rgb(207,194,46)" rx="2" ry="2" />
<text  x="79.98" y="1007.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (6 samples, 0.03%)</title><rect x="74.4" y="997" width="0.4" height="15.0" fill="rgb(213,77,49)" rx="2" ry="2" />
<text  x="77.42" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (185 samples, 0.93%)</title><rect x="247.8" y="357" width="11.0" height="15.0" fill="rgb(231,169,37)" rx="2" ry="2" />
<text  x="250.81" y="367.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (13 samples, 0.07%)</title><rect x="324.7" y="437" width="0.8" height="15.0" fill="rgb(241,41,22)" rx="2" ry="2" />
<text  x="327.68" y="447.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (102 samples, 0.51%)</title><rect x="144.7" y="613" width="6.1" height="15.0" fill="rgb(242,124,19)" rx="2" ry="2" />
<text  x="147.68" y="623.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (143 samples, 0.72%)</title><rect x="150.8" y="773" width="8.5" height="15.0" fill="rgb(210,110,23)" rx="2" ry="2" />
<text  x="153.76" y="783.5" ></text>
</g>
<g >
<title>do_page_fault (5 samples, 0.03%)</title><rect x="137.7" y="437" width="0.3" height="15.0" fill="rgb(220,169,53)" rx="2" ry="2" />
<text  x="140.66" y="447.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (26 samples, 0.13%)</title><rect x="1180.9" y="757" width="1.5" height="15.0" fill="rgb(238,123,40)" rx="2" ry="2" />
<text  x="1183.89" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (8 samples, 0.04%)</title><rect x="47.3" y="997" width="0.5" height="15.0" fill="rgb(227,106,26)" rx="2" ry="2" />
<text  x="50.33" y="1007.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (58 samples, 0.29%)</title><rect x="141.1" y="661" width="3.4" height="15.0" fill="rgb(239,49,37)" rx="2" ry="2" />
<text  x="144.05" y="671.5" ></text>
</g>
<g >
<title>Sprite::SetTone (10 samples, 0.05%)</title><rect x="1006.1" y="725" width="0.6" height="15.0" fill="rgb(211,118,5)" rx="2" ry="2" />
<text  x="1009.08" y="735.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="980.4" y="597" width="0.1" height="15.0" fill="rgb(236,11,50)" rx="2" ry="2" />
<text  x="983.41" y="607.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (3 samples, 0.02%)</title><rect x="83.7" y="997" width="0.1" height="15.0" fill="rgb(250,110,14)" rx="2" ry="2" />
<text  x="86.65" y="1007.5" ></text>
</g>
<g >
<title>operator!= (10 samples, 0.05%)</title><rect x="849.3" y="469" width="0.6" height="15.0" fill="rgb(232,176,11)" rx="2" ry="2" />
<text  x="852.30" y="479.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*&gt; (177 samples, 0.89%)</title><rect x="970.0" y="629" width="10.5" height="15.0" fill="rgb(253,219,39)" rx="2" ry="2" />
<text  x="972.99" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (2 samples, 0.01%)</title><rect x="583.9" y="757" width="0.1" height="15.0" fill="rgb(250,214,4)" rx="2" ry="2" />
<text  x="586.86" y="767.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (45 samples, 0.23%)</title><rect x="245.1" y="485" width="2.7" height="15.0" fill="rgb(212,184,51)" rx="2" ry="2" />
<text  x="248.13" y="495.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (1,304 samples, 6.58%)</title><rect x="159.3" y="917" width="77.6" height="15.0" fill="rgb(215,145,3)" rx="2" ry="2" />
<text  x="162.27" y="927.5" >Game_Int..</text>
</g>
<g >
<title>ksys_mmap_pgoff (9 samples, 0.05%)</title><rect x="135.9" y="373" width="0.6" height="15.0" fill="rgb(244,120,43)" rx="2" ry="2" />
<text  x="138.93" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (6 samples, 0.03%)</title><rect x="1075.4" y="757" width="0.3" height="15.0" fill="rgb(244,110,35)" rx="2" ry="2" />
<text  x="1078.38" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt; &gt; &gt;::size (2 samples, 0.01%)</title><rect x="1022.3" y="741" width="0.1" height="15.0" fill="rgb(230,93,6)" rx="2" ry="2" />
<text  x="1025.27" y="751.5" ></text>
</g>
<g >
<title>std::forward&lt;Game_Picture*&amp;&gt; (2 samples, 0.01%)</title><rect x="966.1" y="549" width="0.1" height="15.0" fill="rgb(214,7,10)" rx="2" ry="2" />
<text  x="969.12" y="559.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_get_use_count (5 samples, 0.03%)</title><rect x="725.3" y="645" width="0.3" height="15.0" fill="rgb(206,191,7)" rx="2" ry="2" />
<text  x="728.34" y="655.5" ></text>
</g>
<g >
<title>pixman_image_get_width (32 samples, 0.16%)</title><rect x="1159.7" y="773" width="1.9" height="15.0" fill="rgb(237,214,16)" rx="2" ry="2" />
<text  x="1162.69" y="783.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (5 samples, 0.03%)</title><rect x="257.9" y="197" width="0.3" height="15.0" fill="rgb(250,145,8)" rx="2" ry="2" />
<text  x="260.93" y="207.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (61 samples, 0.31%)</title><rect x="696.6" y="645" width="3.7" height="15.0" fill="rgb(217,156,36)" rx="2" ry="2" />
<text  x="699.64" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (49 samples, 0.25%)</title><rect x="1172.3" y="789" width="2.9" height="15.0" fill="rgb(236,136,51)" rx="2" ry="2" />
<text  x="1175.32" y="799.5" ></text>
</g>
<g >
<title>__wake_up_locked_key (2 samples, 0.01%)</title><rect x="21.1" y="901" width="0.1" height="15.0" fill="rgb(226,62,28)" rx="2" ry="2" />
<text  x="24.07" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt;::begin (45 samples, 0.23%)</title><rect x="1123.1" y="789" width="2.7" height="15.0" fill="rgb(234,53,24)" rx="2" ry="2" />
<text  x="1126.07" y="799.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (101 samples, 0.51%)</title><rect x="261.4" y="629" width="6.1" height="15.0" fill="rgb(229,94,4)" rx="2" ry="2" />
<text  x="264.45" y="639.5" ></text>
</g>
<g >
<title>posix_get_monotonic_raw (6 samples, 0.03%)</title><rect x="283.2" y="501" width="0.4" height="15.0" fill="rgb(216,0,49)" rx="2" ry="2" />
<text  x="286.24" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (4 samples, 0.02%)</title><rect x="73.6" y="997" width="0.2" height="15.0" fill="rgb(220,219,52)" rx="2" ry="2" />
<text  x="76.59" y="1007.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::function (96 samples, 0.48%)</title><rect x="663.4" y="661" width="5.7" height="15.0" fill="rgb(215,171,17)" rx="2" ry="2" />
<text  x="666.41" y="671.5" ></text>
</g>
<g >
<title>[anon] (128 samples, 0.65%)</title><rect x="121.1" y="1013" width="7.6" height="15.0" fill="rgb(249,187,31)" rx="2" ry="2" />
<text  x="124.11" y="1023.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (6 samples, 0.03%)</title><rect x="272.8" y="517" width="0.4" height="15.0" fill="rgb(215,38,7)" rx="2" ry="2" />
<text  x="275.82" y="527.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (58 samples, 0.29%)</title><rect x="141.1" y="869" width="3.4" height="15.0" fill="rgb(249,213,36)" rx="2" ry="2" />
<text  x="144.05" y="879.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::get (2 samples, 0.01%)</title><rect x="1008.0" y="725" width="0.2" height="15.0" fill="rgb(218,149,33)" rx="2" ry="2" />
<text  x="1011.04" y="735.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, true&gt; (16 samples, 0.08%)</title><rect x="154.6" y="629" width="1.0" height="15.0" fill="rgb(214,78,6)" rx="2" ry="2" />
<text  x="157.63" y="639.5" ></text>
</g>
<g >
<title>Game_Player::Update (21 samples, 0.11%)</title><rect x="1150.9" y="853" width="1.3" height="15.0" fill="rgb(230,218,31)" rx="2" ry="2" />
<text  x="1153.94" y="863.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (193 samples, 0.97%)</title><rect x="828.4" y="469" width="11.5" height="15.0" fill="rgb(248,7,32)" rx="2" ry="2" />
<text  x="831.40" y="479.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (2 samples, 0.01%)</title><rect x="21.7" y="1013" width="0.1" height="15.0" fill="rgb(225,78,32)" rx="2" ry="2" />
<text  x="24.73" y="1023.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (238 samples, 1.20%)</title><rect x="244.7" y="661" width="14.1" height="15.0" fill="rgb(213,125,2)" rx="2" ry="2" />
<text  x="247.65" y="671.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (36 samples, 0.18%)</title><rect x="159.6" y="629" width="2.2" height="15.0" fill="rgb(251,201,21)" rx="2" ry="2" />
<text  x="162.63" y="639.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.02%)</title><rect x="138.4" y="421" width="0.2" height="15.0" fill="rgb(235,122,28)" rx="2" ry="2" />
<text  x="141.37" y="431.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (9 samples, 0.05%)</title><rect x="130.5" y="853" width="0.5" height="15.0" fill="rgb(244,229,41)" rx="2" ry="2" />
<text  x="133.51" y="863.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (185 samples, 0.93%)</title><rect x="247.8" y="389" width="11.0" height="15.0" fill="rgb(206,86,18)" rx="2" ry="2" />
<text  x="250.81" y="399.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::swap (17 samples, 0.09%)</title><rect x="1013.3" y="725" width="1.0" height="15.0" fill="rgb(249,145,24)" rx="2" ry="2" />
<text  x="1016.28" y="735.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (5 samples, 0.03%)</title><rect x="1180.2" y="741" width="0.3" height="15.0" fill="rgb(237,46,38)" rx="2" ry="2" />
<text  x="1183.18" y="751.5" ></text>
</g>
<g >
<title>error_entry (21 samples, 0.11%)</title><rect x="297.9" y="453" width="1.2" height="15.0" fill="rgb(208,210,3)" rx="2" ry="2" />
<text  x="300.88" y="463.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (29 samples, 0.15%)</title><rect x="286.6" y="549" width="1.7" height="15.0" fill="rgb(228,142,46)" rx="2" ry="2" />
<text  x="289.57" y="559.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (7 samples, 0.04%)</title><rect x="258.4" y="293" width="0.4" height="15.0" fill="rgb(214,107,3)" rx="2" ry="2" />
<text  x="261.41" y="303.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (2 samples, 0.01%)</title><rect x="79.8" y="997" width="0.2" height="15.0" fill="rgb(238,129,3)" rx="2" ry="2" />
<text  x="82.84" y="1007.5" ></text>
</g>
<g >
<title>Bitmap::Init (102 samples, 0.51%)</title><rect x="144.7" y="533" width="6.1" height="15.0" fill="rgb(206,98,37)" rx="2" ry="2" />
<text  x="147.68" y="543.5" ></text>
</g>
<g >
<title>__libc_recvmsg (2 samples, 0.01%)</title><rect x="1180.3" y="677" width="0.1" height="15.0" fill="rgb(210,27,37)" rx="2" ry="2" />
<text  x="1183.29" y="687.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_memcmp (2 samples, 0.01%)</title><rect x="58.1" y="997" width="0.1" height="15.0" fill="rgb(211,207,6)" rx="2" ry="2" />
<text  x="61.05" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (41 samples, 0.21%)</title><rect x="722.6" y="629" width="2.4" height="15.0" fill="rgb(232,207,25)" rx="2" ry="2" />
<text  x="725.60" y="639.5" ></text>
</g>
<g >
<title>Player::IsMajorUpdatedVersion (2 samples, 0.01%)</title><rect x="848.2" y="501" width="0.1" height="15.0" fill="rgb(227,187,47)" rx="2" ry="2" />
<text  x="851.23" y="511.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (2 samples, 0.01%)</title><rect x="981.2" y="709" width="0.1" height="15.0" fill="rgb(236,109,13)" rx="2" ry="2" />
<text  x="984.19" y="719.5" ></text>
</g>
<g >
<title>__handle_mm_fault (63 samples, 0.32%)</title><rect x="299.4" y="389" width="3.8" height="15.0" fill="rgb(238,105,53)" rx="2" ry="2" />
<text  x="302.43" y="399.5" ></text>
</g>
<g >
<title>operator delete@plt (4 samples, 0.02%)</title><rect x="953.2" y="325" width="0.2" height="15.0" fill="rgb(230,31,47)" rx="2" ry="2" />
<text  x="956.20" y="335.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (6 samples, 0.03%)</title><rect x="154.3" y="581" width="0.3" height="15.0" fill="rgb(216,69,28)" rx="2" ry="2" />
<text  x="157.27" y="591.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (238 samples, 1.20%)</title><rect x="244.7" y="629" width="14.1" height="15.0" fill="rgb(211,64,49)" rx="2" ry="2" />
<text  x="247.65" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (3 samples, 0.02%)</title><rect x="485.1" y="709" width="0.2" height="15.0" fill="rgb(247,122,30)" rx="2" ry="2" />
<text  x="488.14" y="719.5" ></text>
</g>
<g >
<title>Spriteset_Map::Update (2 samples, 0.01%)</title><rect x="1179.4" y="869" width="0.1" height="15.0" fill="rgb(217,149,9)" rx="2" ry="2" />
<text  x="1182.40" y="879.5" ></text>
</g>
<g >
<title>max&lt;int&gt; (2 samples, 0.01%)</title><rect x="1169.6" y="789" width="0.2" height="15.0" fill="rgb(250,94,40)" rx="2" ry="2" />
<text  x="1172.64" y="799.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.12%)</title><rect x="256.2" y="261" width="1.4" height="15.0" fill="rgb(250,43,48)" rx="2" ry="2" />
<text  x="259.21" y="271.5" ></text>
</g>
<g >
<title>operator!= (10 samples, 0.05%)</title><rect x="853.5" y="485" width="0.6" height="15.0" fill="rgb(212,195,50)" rx="2" ry="2" />
<text  x="856.53" y="495.5" ></text>
</g>
<g >
<title>__fget_light (4 samples, 0.02%)</title><rect x="16.4" y="933" width="0.2" height="15.0" fill="rgb(228,222,29)" rx="2" ry="2" />
<text  x="19.37" y="943.5" ></text>
</g>
<g >
<title>operator new (85 samples, 0.43%)</title><rect x="1027.6" y="725" width="5.1" height="15.0" fill="rgb(231,78,53)" rx="2" ry="2" />
<text  x="1030.63" y="735.5" ></text>
</g>
<g >
<title>min&lt;int&gt; (3 samples, 0.02%)</title><rect x="1162.5" y="773" width="0.2" height="15.0" fill="rgb(228,67,13)" rx="2" ry="2" />
<text  x="1165.49" y="783.5" ></text>
</g>
<g >
<title>std::forward&lt;FileRequestResult*&gt; (2 samples, 0.01%)</title><rect x="968.1" y="645" width="0.2" height="15.0" fill="rgb(209,203,3)" rx="2" ry="2" />
<text  x="971.15" y="655.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (44 samples, 0.22%)</title><rect x="258.8" y="725" width="2.6" height="15.0" fill="rgb(225,127,26)" rx="2" ry="2" />
<text  x="261.83" y="735.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt;::_M_head (2 samples, 0.01%)</title><rect x="1171.1" y="725" width="0.1" height="15.0" fill="rgb(242,131,45)" rx="2" ry="2" />
<text  x="1174.07" y="735.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (72 samples, 0.36%)</title><rect x="690.5" y="645" width="4.3" height="15.0" fill="rgb(231,102,35)" rx="2" ry="2" />
<text  x="693.50" y="655.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (40 samples, 0.20%)</title><rect x="141.1" y="485" width="2.3" height="15.0" fill="rgb(215,73,28)" rx="2" ry="2" />
<text  x="144.05" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_valptr (9 samples, 0.05%)</title><rect x="767.0" y="421" width="0.5" height="15.0" fill="rgb(221,50,36)" rx="2" ry="2" />
<text  x="769.96" y="431.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.05%)</title><rect x="130.5" y="517" width="0.5" height="15.0" fill="rgb(209,191,54)" rx="2" ry="2" />
<text  x="133.51" y="527.5" ></text>
</g>
<g >
<title>Window_Selectable::Update (5 samples, 0.03%)</title><rect x="1179.8" y="853" width="0.3" height="15.0" fill="rgb(242,73,13)" rx="2" ry="2" />
<text  x="1182.76" y="863.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator bool (5 samples, 0.03%)</title><rect x="1009.4" y="725" width="0.2" height="15.0" fill="rgb(230,12,31)" rx="2" ry="2" />
<text  x="1012.35" y="735.5" ></text>
</g>
<g >
<title>alloc_pages_vma (4 samples, 0.02%)</title><rect x="136.8" y="341" width="0.2" height="15.0" fill="rgb(223,22,14)" rx="2" ry="2" />
<text  x="139.76" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;::~pair (3 samples, 0.02%)</title><rect x="681.0" y="693" width="0.2" height="15.0" fill="rgb(206,207,24)" rx="2" ry="2" />
<text  x="683.98" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (70 samples, 0.35%)</title><rect x="721.0" y="677" width="4.2" height="15.0" fill="rgb(216,53,28)" rx="2" ry="2" />
<text  x="723.99" y="687.5" ></text>
</g>
<g >
<title>Bitmap::GetHeight (5 samples, 0.03%)</title><rect x="840.2" y="501" width="0.3" height="15.0" fill="rgb(253,193,6)" rx="2" ry="2" />
<text  x="843.19" y="511.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (7 samples, 0.04%)</title><rect x="256.9" y="37" width="0.4" height="15.0" fill="rgb(222,131,19)" rx="2" ry="2" />
<text  x="259.86" y="47.5" ></text>
</g>
<g >
<title>std::max&lt;int&gt; (7 samples, 0.04%)</title><rect x="1033.5" y="757" width="0.4" height="15.0" fill="rgb(245,136,37)" rx="2" ry="2" />
<text  x="1036.52" y="767.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::_M_head (3 samples, 0.02%)</title><rect x="72.4" y="997" width="0.2" height="15.0" fill="rgb(206,148,32)" rx="2" ry="2" />
<text  x="75.40" y="1007.5" ></text>
</g>
<g >
<title>std::make_shared&lt;int, int&gt; (6 samples, 0.03%)</title><rect x="100.9" y="997" width="0.4" height="15.0" fill="rgb(209,16,3)" rx="2" ry="2" />
<text  x="103.92" y="1007.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (2 samples, 0.01%)</title><rect x="74.1" y="997" width="0.1" height="15.0" fill="rgb(214,224,20)" rx="2" ry="2" />
<text  x="77.13" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (3 samples, 0.02%)</title><rect x="483.1" y="709" width="0.2" height="15.0" fill="rgb(220,200,5)" rx="2" ry="2" />
<text  x="486.12" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::begin (8 samples, 0.04%)</title><rect x="336.7" y="773" width="0.5" height="15.0" fill="rgb(235,206,19)" rx="2" ry="2" />
<text  x="339.71" y="783.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_destroy (117 samples, 0.59%)</title><rect x="703.5" y="661" width="7.0" height="15.0" fill="rgb(248,27,11)" rx="2" ry="2" />
<text  x="706.48" y="671.5" ></text>
</g>
<g >
<title>Bitmap::~Bitmap (53 samples, 0.27%)</title><rect x="241.4" y="373" width="3.2" height="15.0" fill="rgb(245,158,44)" rx="2" ry="2" />
<text  x="244.44" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (13 samples, 0.07%)</title><rect x="950.3" y="389" width="0.8" height="15.0" fill="rgb(210,22,52)" rx="2" ry="2" />
<text  x="953.28" y="399.5" ></text>
</g>
<g >
<title>operator== (9 samples, 0.05%)</title><rect x="1005.1" y="677" width="0.6" height="15.0" fill="rgb(234,112,21)" rx="2" ry="2" />
<text  x="1008.12" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="170.9" y="533" width="0.2" height="15.0" fill="rgb(216,204,13)" rx="2" ry="2" />
<text  x="173.88" y="543.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (29 samples, 0.15%)</title><rect x="157.5" y="517" width="1.7" height="15.0" fill="rgb(214,197,34)" rx="2" ry="2" />
<text  x="160.49" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt;::__normal_iterator (20 samples, 0.10%)</title><rect x="1128.1" y="773" width="1.2" height="15.0" fill="rgb(234,150,27)" rx="2" ry="2" />
<text  x="1131.08" y="783.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (58 samples, 0.29%)</title><rect x="305.7" y="437" width="3.5" height="15.0" fill="rgb(223,6,25)" rx="2" ry="2" />
<text  x="308.74" y="447.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (20 samples, 0.10%)</title><rect x="237.0" y="581" width="1.2" height="15.0" fill="rgb(237,36,53)" rx="2" ry="2" />
<text  x="239.97" y="591.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (2 samples, 0.01%)</title><rect x="1003.5" y="709" width="0.1" height="15.0" fill="rgb(244,178,24)" rx="2" ry="2" />
<text  x="1006.46" y="719.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (10,357 samples, 52.26%)</title><rect x="461.9" y="789" width="616.6" height="15.0" fill="rgb(206,143,50)" rx="2" ry="2" />
<text  x="464.86" y="799.5" >Game_Interpreter::ExecuteCommand</text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (11 samples, 0.06%)</title><rect x="247.2" y="389" width="0.6" height="15.0" fill="rgb(230,22,1)" rx="2" ry="2" />
<text  x="250.16" y="399.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator bool (4 samples, 0.02%)</title><rect x="97.3" y="997" width="0.3" height="15.0" fill="rgb(234,50,1)" rx="2" ry="2" />
<text  x="100.35" y="1007.5" ></text>
</g>
<g >
<title>Game_Map::UpdateForegroundEvents (21 samples, 0.11%)</title><rect x="1149.7" y="853" width="1.2" height="15.0" fill="rgb(232,119,21)" rx="2" ry="2" />
<text  x="1152.69" y="863.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (7 samples, 0.04%)</title><rect x="695.1" y="677" width="0.5" height="15.0" fill="rgb(231,26,13)" rx="2" ry="2" />
<text  x="698.15" y="687.5" ></text>
</g>
<g >
<title>do_syscall_64 (11 samples, 0.06%)</title><rect x="135.9" y="405" width="0.6" height="15.0" fill="rgb(254,89,38)" rx="2" ry="2" />
<text  x="138.87" y="415.5" ></text>
</g>
<g >
<title>std::min&lt;int&gt; (62 samples, 0.31%)</title><rect x="572.7" y="741" width="3.7" height="15.0" fill="rgb(242,55,9)" rx="2" ry="2" />
<text  x="575.73" y="751.5" ></text>
</g>
<g >
<title>__GI_madvise (2 samples, 0.01%)</title><rect x="647.0" y="613" width="0.2" height="15.0" fill="rgb(216,196,52)" rx="2" ry="2" />
<text  x="650.04" y="623.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (2 samples, 0.01%)</title><rect x="130.3" y="997" width="0.2" height="15.0" fill="rgb(251,189,44)" rx="2" ry="2" />
<text  x="133.33" y="1007.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::reset (1,303 samples, 6.57%)</title><rect x="888.3" y="517" width="77.6" height="15.0" fill="rgb(243,195,40)" rx="2" ry="2" />
<text  x="891.30" y="527.5" >std::uni..</text>
</g>
<g >
<title>Game_Interpreter::Update (101 samples, 0.51%)</title><rect x="261.4" y="917" width="6.1" height="15.0" fill="rgb(238,153,11)" rx="2" ry="2" />
<text  x="264.45" y="927.5" ></text>
</g>
<g >
<title>Game_Picture::Show (349 samples, 1.76%)</title><rect x="267.5" y="869" width="20.8" height="15.0" fill="rgb(213,21,34)" rx="2" ry="2" />
<text  x="270.52" y="879.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (58 samples, 0.29%)</title><rect x="141.1" y="725" width="3.4" height="15.0" fill="rgb(253,229,37)" rx="2" ry="2" />
<text  x="144.05" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (5 samples, 0.03%)</title><rect x="479.4" y="725" width="0.3" height="15.0" fill="rgb(242,115,16)" rx="2" ry="2" />
<text  x="482.43" y="735.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="80.4" y="997" width="0.2" height="15.0" fill="rgb(213,208,17)" rx="2" ry="2" />
<text  x="83.44" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (166 samples, 0.84%)</title><rect x="131.0" y="597" width="9.9" height="15.0" fill="rgb(252,29,31)" rx="2" ry="2" />
<text  x="134.05" y="607.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.02%)</title><rect x="759.6" y="501" width="0.2" height="15.0" fill="rgb(248,123,1)" rx="2" ry="2" />
<text  x="762.57" y="511.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Scene, (__gnu_cxx::_Lock_policy)2&gt;::get (4 samples, 0.02%)</title><rect x="83.4" y="997" width="0.3" height="15.0" fill="rgb(245,95,42)" rx="2" ry="2" />
<text  x="86.42" y="1007.5" ></text>
</g>
<g >
<title>Game_Map::Update (101 samples, 0.51%)</title><rect x="261.4" y="965" width="6.1" height="15.0" fill="rgb(254,118,42)" rx="2" ry="2" />
<text  x="264.45" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::operator[] (2 samples, 0.01%)</title><rect x="1148.4" y="821" width="0.1" height="15.0" fill="rgb(215,182,31)" rx="2" ry="2" />
<text  x="1151.38" y="831.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (39 samples, 0.20%)</title><rect x="1180.1" y="837" width="2.3" height="15.0" fill="rgb(241,222,15)" rx="2" ry="2" />
<text  x="1183.12" y="847.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (9 samples, 0.05%)</title><rect x="130.5" y="613" width="0.5" height="15.0" fill="rgb(238,229,5)" rx="2" ry="2" />
<text  x="133.51" y="623.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (9 samples, 0.05%)</title><rect x="237.6" y="357" width="0.6" height="15.0" fill="rgb(216,224,35)" rx="2" ry="2" />
<text  x="240.63" y="367.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (2 samples, 0.01%)</title><rect x="258.1" y="69" width="0.1" height="15.0" fill="rgb(207,225,24)" rx="2" ry="2" />
<text  x="261.11" y="79.5" ></text>
</g>
<g >
<title>Bitmap::pitch (6 samples, 0.03%)</title><rect x="826.3" y="485" width="0.3" height="15.0" fill="rgb(243,30,8)" rx="2" ry="2" />
<text  x="829.26" y="495.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;*&gt; (7 samples, 0.04%)</title><rect x="61.0" y="997" width="0.4" height="15.0" fill="rgb(210,165,25)" rx="2" ry="2" />
<text  x="63.97" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (2 samples, 0.01%)</title><rect x="999.0" y="693" width="0.2" height="15.0" fill="rgb(246,80,50)" rx="2" ry="2" />
<text  x="1002.05" y="703.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::get (2 samples, 0.01%)</title><rect x="851.1" y="453" width="0.1" height="15.0" fill="rgb(254,38,19)" rx="2" ry="2" />
<text  x="854.09" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (7 samples, 0.04%)</title><rect x="628.2" y="677" width="0.4" height="15.0" fill="rgb(226,138,4)" rx="2" ry="2" />
<text  x="631.16" y="687.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.03%)</title><rect x="1183.8" y="1013" width="0.3" height="15.0" fill="rgb(238,207,34)" rx="2" ry="2" />
<text  x="1186.81" y="1023.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Picture*, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl&lt;Game_Picture*&amp;, std::_Placeholder&lt;1&gt; const&amp;, void&gt; (2 samples, 0.01%)</title><rect x="72.6" y="997" width="0.2" height="15.0" fill="rgb(249,80,10)" rx="2" ry="2" />
<text  x="75.64" y="1007.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (3 samples, 0.02%)</title><rect x="79.4" y="997" width="0.1" height="15.0" fill="rgb(215,212,51)" rx="2" ry="2" />
<text  x="82.37" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (12 samples, 0.06%)</title><rect x="760.4" y="501" width="0.7" height="15.0" fill="rgb(214,17,18)" rx="2" ry="2" />
<text  x="763.41" y="511.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (404 samples, 2.04%)</title><rect x="617.4" y="709" width="24.0" height="15.0" fill="rgb(244,97,33)" rx="2" ry="2" />
<text  x="620.39" y="719.5" >F..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (32 samples, 0.16%)</title><rect x="645.4" y="645" width="1.9" height="15.0" fill="rgb(253,228,50)" rx="2" ry="2" />
<text  x="648.37" y="655.5" ></text>
</g>
<g >
<title>std::default_delete&lt;Sprite&gt;::operator() (4 samples, 0.02%)</title><rect x="326.2" y="517" width="0.3" height="15.0" fill="rgb(205,136,25)" rx="2" ry="2" />
<text  x="329.23" y="527.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (4 samples, 0.02%)</title><rect x="326.2" y="469" width="0.3" height="15.0" fill="rgb(211,36,35)" rx="2" ry="2" />
<text  x="329.23" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_ptr (5 samples, 0.03%)</title><rect x="767.2" y="405" width="0.3" height="15.0" fill="rgb(249,46,18)" rx="2" ry="2" />
<text  x="770.19" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (16 samples, 0.08%)</title><rect x="792.5" y="437" width="1.0" height="15.0" fill="rgb(230,42,5)" rx="2" ry="2" />
<text  x="795.50" y="447.5" ></text>
</g>
<g >
<title>__ioctl (4 samples, 0.02%)</title><rect x="292.7" y="741" width="0.2" height="15.0" fill="rgb(233,85,31)" rx="2" ry="2" />
<text  x="295.70" y="751.5" ></text>
</g>
<g >
<title>std::max&lt;int&gt; (66 samples, 0.33%)</title><rect x="568.8" y="741" width="3.9" height="15.0" fill="rgb(223,174,48)" rx="2" ry="2" />
<text  x="571.80" y="751.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (4 samples, 0.02%)</title><rect x="32.3" y="997" width="0.3" height="15.0" fill="rgb(218,229,1)" rx="2" ry="2" />
<text  x="35.33" y="1007.5" ></text>
</g>
<g >
<title>calloc (126 samples, 0.64%)</title><rect x="131.0" y="517" width="7.6" height="15.0" fill="rgb(249,99,22)" rx="2" ry="2" />
<text  x="134.05" y="527.5" ></text>
</g>
<g >
<title>std::move&lt;int*&amp;&gt; (2 samples, 0.01%)</title><rect x="103.7" y="997" width="0.1" height="15.0" fill="rgb(233,138,33)" rx="2" ry="2" />
<text  x="106.66" y="1007.5" ></text>
</g>
<g >
<title>Scene::GetGraphicsState (2 samples, 0.01%)</title><rect x="35.5" y="997" width="0.2" height="15.0" fill="rgb(248,20,34)" rx="2" ry="2" />
<text  x="38.54" y="1007.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::_Bind (31 samples, 0.16%)</title><rect x="700.4" y="661" width="1.9" height="15.0" fill="rgb(211,194,52)" rx="2" ry="2" />
<text  x="703.45" y="671.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (2 samples, 0.01%)</title><rect x="791.0" y="485" width="0.1" height="15.0" fill="rgb(238,70,2)" rx="2" ry="2" />
<text  x="793.95" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (21 samples, 0.11%)</title><rect x="241.4" y="309" width="1.3" height="15.0" fill="rgb(206,215,12)" rx="2" ry="2" />
<text  x="244.44" y="319.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (4 samples, 0.02%)</title><rect x="326.2" y="549" width="0.3" height="15.0" fill="rgb(221,226,25)" rx="2" ry="2" />
<text  x="329.23" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_Rb_tree_iterator (3 samples, 0.02%)</title><rect x="68.7" y="997" width="0.2" height="15.0" fill="rgb(223,23,29)" rx="2" ry="2" />
<text  x="71.71" y="1007.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (61 samples, 0.31%)</title><rect x="141.1" y="997" width="3.6" height="15.0" fill="rgb(219,78,7)" rx="2" ry="2" />
<text  x="144.05" y="1007.5" ></text>
</g>
<g >
<title>Blend (18 samples, 0.09%)</title><rect x="1161.6" y="805" width="1.1" height="15.0" fill="rgb(226,139,38)" rx="2" ry="2" />
<text  x="1164.60" y="815.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator bool (3 samples, 0.02%)</title><rect x="850.8" y="485" width="0.2" height="15.0" fill="rgb(252,31,43)" rx="2" ry="2" />
<text  x="853.85" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (2 samples, 0.01%)</title><rect x="478.5" y="741" width="0.1" height="15.0" fill="rgb(219,19,5)" rx="2" ry="2" />
<text  x="481.48" y="751.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (101 samples, 0.51%)</title><rect x="261.4" y="757" width="6.1" height="15.0" fill="rgb(237,202,0)" rx="2" ry="2" />
<text  x="264.45" y="767.5" ></text>
</g>
<g >
<title>Sdl2Ui::UpdateDisplay (4 samples, 0.02%)</title><rect x="331.8" y="869" width="0.3" height="15.0" fill="rgb(233,167,32)" rx="2" ry="2" />
<text  x="334.82" y="879.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (41 samples, 0.21%)</title><rect x="736.7" y="469" width="2.4" height="15.0" fill="rgb(233,192,35)" rx="2" ry="2" />
<text  x="739.71" y="479.5" ></text>
</g>
<g >
<title>Game_Screen::GetFlashColor (18 samples, 0.09%)</title><rect x="1163.7" y="805" width="1.1" height="15.0" fill="rgb(230,29,41)" rx="2" ry="2" />
<text  x="1166.74" y="815.5" ></text>
</g>
<g >
<title>Bitmap::GetWidth (17 samples, 0.09%)</title><rect x="840.5" y="501" width="1.0" height="15.0" fill="rgb(223,60,33)" rx="2" ry="2" />
<text  x="843.49" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::deallocate (3 samples, 0.02%)</title><rect x="326.2" y="373" width="0.2" height="15.0" fill="rgb(212,112,12)" rx="2" ry="2" />
<text  x="329.23" y="383.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (5 samples, 0.03%)</title><rect x="292.6" y="853" width="0.3" height="15.0" fill="rgb(254,197,11)" rx="2" ry="2" />
<text  x="295.65" y="863.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Graphics::State, (__gnu_cxx::_Lock_policy)2&gt;::get (2 samples, 0.01%)</title><rect x="83.3" y="997" width="0.1" height="15.0" fill="rgb(232,163,3)" rx="2" ry="2" />
<text  x="86.30" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (8 samples, 0.04%)</title><rect x="678.8" y="485" width="0.5" height="15.0" fill="rgb(245,29,54)" rx="2" ry="2" />
<text  x="681.83" y="495.5" ></text>
</g>
<g >
<title>pixman_image_unref (53 samples, 0.27%)</title><rect x="241.4" y="357" width="3.2" height="15.0" fill="rgb(246,38,51)" rx="2" ry="2" />
<text  x="244.44" y="367.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (4 samples, 0.02%)</title><rect x="1170.9" y="757" width="0.3" height="15.0" fill="rgb(226,206,0)" rx="2" ry="2" />
<text  x="1173.95" y="767.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (6 samples, 0.03%)</title><rect x="154.3" y="565" width="0.3" height="15.0" fill="rgb(226,5,23)" rx="2" ry="2" />
<text  x="157.27" y="575.5" ></text>
</g>
<g >
<title>pthread_getspecific@plt (2 samples, 0.01%)</title><rect x="979.5" y="469" width="0.1" height="15.0" fill="rgb(226,209,8)" rx="2" ry="2" />
<text  x="982.52" y="479.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (12 samples, 0.06%)</title><rect x="719.4" y="597" width="0.8" height="15.0" fill="rgb(236,188,35)" rx="2" ry="2" />
<text  x="722.44" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (11 samples, 0.06%)</title><rect x="482.6" y="725" width="0.7" height="15.0" fill="rgb(231,27,32)" rx="2" ry="2" />
<text  x="485.64" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (10 samples, 0.05%)</title><rect x="887.7" y="501" width="0.6" height="15.0" fill="rgb(233,1,34)" rx="2" ry="2" />
<text  x="890.71" y="511.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (18 samples, 0.09%)</title><rect x="1026.0" y="725" width="1.1" height="15.0" fill="rgb(215,112,41)" rx="2" ry="2" />
<text  x="1029.02" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator* (8 samples, 0.04%)</title><rect x="49.7" y="997" width="0.5" height="15.0" fill="rgb(237,187,3)" rx="2" ry="2" />
<text  x="52.71" y="1007.5" ></text>
</g>
<g >
<title>std::max&lt;int&gt; (3 samples, 0.02%)</title><rect x="600.8" y="757" width="0.2" height="15.0" fill="rgb(221,6,8)" rx="2" ry="2" />
<text  x="603.77" y="767.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (20 samples, 0.10%)</title><rect x="237.0" y="661" width="1.2" height="15.0" fill="rgb(245,66,47)" rx="2" ry="2" />
<text  x="239.97" y="671.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (96 samples, 0.48%)</title><rect x="238.9" y="469" width="5.7" height="15.0" fill="rgb(211,16,46)" rx="2" ry="2" />
<text  x="241.88" y="479.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (9 samples, 0.05%)</title><rect x="130.5" y="965" width="0.5" height="15.0" fill="rgb(217,108,3)" rx="2" ry="2" />
<text  x="133.51" y="975.5" ></text>
</g>
<g >
<title>Game_Interpreter::ValueOrVariable (45 samples, 0.23%)</title><rect x="609.1" y="757" width="2.6" height="15.0" fill="rgb(216,60,41)" rx="2" ry="2" />
<text  x="612.05" y="767.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (109 samples, 0.55%)</title><rect x="238.2" y="629" width="6.5" height="15.0" fill="rgb(245,160,2)" rx="2" ry="2" />
<text  x="241.16" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_create (10 samples, 0.05%)</title><rect x="1023.5" y="693" width="0.6" height="15.0" fill="rgb(221,171,11)" rx="2" ry="2" />
<text  x="1026.46" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (14 samples, 0.07%)</title><rect x="623.5" y="597" width="0.8" height="15.0" fill="rgb(219,184,25)" rx="2" ry="2" />
<text  x="626.46" y="607.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (101 samples, 0.51%)</title><rect x="261.4" y="805" width="6.1" height="15.0" fill="rgb(246,50,8)" rx="2" ry="2" />
<text  x="264.45" y="815.5" ></text>
</g>
<g >
<title>easyrpg-player (19,623 samples, 99.02%)</title><rect x="21.6" y="1029" width="1168.4" height="15.0" fill="rgb(251,21,5)" rx="2" ry="2" />
<text  x="24.61" y="1039.5" >easyrpg-player</text>
</g>
<g >
<title>std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt;::cbegin (3 samples, 0.02%)</title><rect x="112.3" y="997" width="0.2" height="15.0" fill="rgb(248,45,36)" rx="2" ry="2" />
<text  x="115.29" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::destroy&lt;Bitmap&gt; (3 samples, 0.02%)</title><rect x="267.3" y="453" width="0.2" height="15.0" fill="rgb(210,212,45)" rx="2" ry="2" />
<text  x="270.28" y="463.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (20 samples, 0.10%)</title><rect x="721.3" y="645" width="1.2" height="15.0" fill="rgb(213,34,51)" rx="2" ry="2" />
<text  x="724.35" y="655.5" ></text>
</g>
<g >
<title>Bitmap::height (2 samples, 0.01%)</title><rect x="24.1" y="997" width="0.1" height="15.0" fill="rgb(244,31,28)" rx="2" ry="2" />
<text  x="27.05" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.03%)</title><rect x="159.3" y="517" width="0.3" height="15.0" fill="rgb(215,185,13)" rx="2" ry="2" />
<text  x="162.27" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::destroy&lt;Bitmap&gt; (185 samples, 0.93%)</title><rect x="247.8" y="453" width="11.0" height="15.0" fill="rgb(253,186,33)" rx="2" ry="2" />
<text  x="250.81" y="463.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (2 samples, 0.01%)</title><rect x="106.9" y="997" width="0.2" height="15.0" fill="rgb(244,9,14)" rx="2" ry="2" />
<text  x="109.93" y="1007.5" ></text>
</g>
<g >
<title>unmap_vmas (4 samples, 0.02%)</title><rect x="257.3" y="165" width="0.3" height="15.0" fill="rgb(241,204,9)" rx="2" ry="2" />
<text  x="260.34" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (2 samples, 0.01%)</title><rect x="109.4" y="997" width="0.1" height="15.0" fill="rgb(215,114,50)" rx="2" ry="2" />
<text  x="112.38" y="1007.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (9 samples, 0.05%)</title><rect x="130.5" y="981" width="0.5" height="15.0" fill="rgb(215,158,35)" rx="2" ry="2" />
<text  x="133.51" y="991.5" ></text>
</g>
<g >
<title>ksys_write (6 samples, 0.03%)</title><rect x="21.1" y="965" width="0.3" height="15.0" fill="rgb(211,79,45)" rx="2" ry="2" />
<text  x="24.07" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (2 samples, 0.01%)</title><rect x="124.4" y="997" width="0.2" height="15.0" fill="rgb(216,227,43)" rx="2" ry="2" />
<text  x="127.44" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="159.5" y="485" width="0.1" height="15.0" fill="rgb(217,73,35)" rx="2" ry="2" />
<text  x="162.51" y="495.5" ></text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (5 samples, 0.03%)</title><rect x="1003.6" y="725" width="0.3" height="15.0" fill="rgb(253,175,30)" rx="2" ry="2" />
<text  x="1006.57" y="735.5" ></text>
</g>
<g >
<title>pixman_image_get_width (2 samples, 0.01%)</title><rect x="841.3" y="469" width="0.1" height="15.0" fill="rgb(250,137,32)" rx="2" ry="2" />
<text  x="844.32" y="479.5" ></text>
</g>
<g >
<title>Scene_Map::AsyncNext&lt;Scene_Map::UpdateStage1(MapUpdateAsyncContext)::{lambda()#2}&gt; (3 samples, 0.02%)</title><rect x="1179.2" y="869" width="0.2" height="15.0" fill="rgb(215,131,31)" rx="2" ry="2" />
<text  x="1182.22" y="879.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (45 samples, 0.23%)</title><rect x="245.1" y="565" width="2.7" height="15.0" fill="rgb(224,38,21)" rx="2" ry="2" />
<text  x="248.13" y="575.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (44 samples, 0.22%)</title><rect x="707.4" y="597" width="2.6" height="15.0" fill="rgb(234,34,45)" rx="2" ry="2" />
<text  x="710.41" y="607.5" ></text>
</g>
<g >
<title>__vfs_read (2 samples, 0.01%)</title><rect x="20.8" y="933" width="0.1" height="15.0" fill="rgb(237,54,50)" rx="2" ry="2" />
<text  x="23.78" y="943.5" ></text>
</g>
<g >
<title>std::__weak_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_get_use_count (8 samples, 0.04%)</title><rect x="725.2" y="661" width="0.4" height="15.0" fill="rgb(238,111,21)" rx="2" ry="2" />
<text  x="728.16" y="671.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (199 samples, 1.00%)</title><rect x="948.1" y="453" width="11.9" height="15.0" fill="rgb(214,197,51)" rx="2" ry="2" />
<text  x="951.14" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::destroy&lt;Bitmap&gt; (96 samples, 0.48%)</title><rect x="954.0" y="357" width="5.8" height="15.0" fill="rgb(222,177,2)" rx="2" ry="2" />
<text  x="957.04" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (10 samples, 0.05%)</title><rect x="887.7" y="485" width="0.6" height="15.0" fill="rgb(245,178,13)" rx="2" ry="2" />
<text  x="890.71" y="495.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (78 samples, 0.39%)</title><rect x="171.1" y="613" width="4.7" height="15.0" fill="rgb(220,108,24)" rx="2" ry="2" />
<text  x="174.12" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::operator (12 samples, 0.06%)</title><rect x="1147.7" y="821" width="0.7" height="15.0" fill="rgb(238,150,6)" rx="2" ry="2" />
<text  x="1150.67" y="831.5" ></text>
</g>
<g >
<title>pixman_image_unref (254 samples, 1.28%)</title><rect x="309.6" y="325" width="15.1" height="15.0" fill="rgb(234,44,8)" rx="2" ry="2" />
<text  x="312.55" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (55 samples, 0.28%)</title><rect x="544.9" y="741" width="3.3" height="15.0" fill="rgb(216,200,20)" rx="2" ry="2" />
<text  x="547.92" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="338.6" y="789" width="0.1" height="15.0" fill="rgb(244,199,12)" rx="2" ry="2" />
<text  x="341.61" y="799.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (2 samples, 0.01%)</title><rect x="851.1" y="485" width="0.1" height="15.0" fill="rgb(253,106,33)" rx="2" ry="2" />
<text  x="854.09" y="495.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (109 samples, 0.55%)</title><rect x="238.2" y="741" width="6.5" height="15.0" fill="rgb(228,133,37)" rx="2" ry="2" />
<text  x="241.16" y="751.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::_Placeholder&lt;1&gt;, true&gt;::_Head_base&lt;std::_Placeholder&lt;1&gt; &gt; (3 samples, 0.02%)</title><rect x="701.8" y="597" width="0.1" height="15.0" fill="rgb(229,205,3)" rx="2" ry="2" />
<text  x="704.76" y="607.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="267.5" y="549" width="0.3" height="15.0" fill="rgb(218,167,42)" rx="2" ry="2" />
<text  x="270.52" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (8 samples, 0.04%)</title><rect x="1138.9" y="805" width="0.4" height="15.0" fill="rgb(251,32,47)" rx="2" ry="2" />
<text  x="1141.85" y="815.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="264.1" y="533" width="0.1" height="15.0" fill="rgb(236,64,4)" rx="2" ry="2" />
<text  x="267.12" y="543.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="154.6" y="565" width="0.1" height="15.0" fill="rgb(214,160,14)" rx="2" ry="2" />
<text  x="157.63" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (18 samples, 0.09%)</title><rect x="258.8" y="549" width="1.1" height="15.0" fill="rgb(229,70,34)" rx="2" ry="2" />
<text  x="261.83" y="559.5" ></text>
</g>
<g >
<title>Window_Message::Update (9 samples, 0.05%)</title><rect x="1179.5" y="869" width="0.6" height="15.0" fill="rgb(225,46,32)" rx="2" ry="2" />
<text  x="1182.52" y="879.5" ></text>
</g>
<g >
<title>do_mmap (8 samples, 0.04%)</title><rect x="135.9" y="341" width="0.5" height="15.0" fill="rgb(208,18,37)" rx="2" ry="2" />
<text  x="138.93" y="351.5" ></text>
</g>
<g >
<title>Sprite::~Sprite (9 samples, 0.05%)</title><rect x="237.6" y="517" width="0.6" height="15.0" fill="rgb(205,158,39)" rx="2" ry="2" />
<text  x="240.63" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::reset (963 samples, 4.86%)</title><rect x="179.6" y="661" width="57.3" height="15.0" fill="rgb(240,119,4)" rx="2" ry="2" />
<text  x="182.58" y="671.5" >std::u..</text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, true&gt; (7 samples, 0.04%)</title><rect x="108.1" y="997" width="0.4" height="15.0" fill="rgb(239,14,31)" rx="2" ry="2" />
<text  x="111.12" y="1007.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (3 samples, 0.02%)</title><rect x="60.0" y="997" width="0.2" height="15.0" fill="rgb(216,181,16)" rx="2" ry="2" />
<text  x="63.02" y="1007.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (7 samples, 0.04%)</title><rect x="659.6" y="661" width="0.4" height="15.0" fill="rgb(228,89,48)" rx="2" ry="2" />
<text  x="662.60" y="671.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (64 samples, 0.32%)</title><rect x="175.8" y="581" width="3.8" height="15.0" fill="rgb(217,158,19)" rx="2" ry="2" />
<text  x="178.76" y="591.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (350 samples, 1.77%)</title><rect x="267.5" y="917" width="20.8" height="15.0" fill="rgb(245,8,28)" rx="2" ry="2" />
<text  x="270.46" y="927.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (13 samples, 0.07%)</title><rect x="864.2" y="437" width="0.8" height="15.0" fill="rgb(228,100,33)" rx="2" ry="2" />
<text  x="867.25" y="447.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (143 samples, 0.72%)</title><rect x="150.8" y="917" width="8.5" height="15.0" fill="rgb(223,195,53)" rx="2" ry="2" />
<text  x="153.76" y="927.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (349 samples, 1.76%)</title><rect x="267.5" y="741" width="20.8" height="15.0" fill="rgb(234,161,38)" rx="2" ry="2" />
<text  x="270.52" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (297 samples, 1.50%)</title><rect x="1056.4" y="757" width="17.7" height="15.0" fill="rgb(226,46,28)" rx="2" ry="2" />
<text  x="1059.45" y="767.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (1,304 samples, 6.58%)</title><rect x="159.3" y="757" width="77.6" height="15.0" fill="rgb(208,193,33)" rx="2" ry="2" />
<text  x="162.27" y="767.5" >std::__i..</text>
</g>
<g >
<title>pixman_image_unref (69 samples, 0.35%)</title><rect x="954.8" y="325" width="4.1" height="15.0" fill="rgb(222,53,4)" rx="2" ry="2" />
<text  x="957.75" y="335.5" ></text>
</g>
<g >
<title>std::forward&lt;std::_Placeholder&lt;1&gt; const&amp;&gt; (2 samples, 0.01%)</title><rect x="95.8" y="997" width="0.1" height="15.0" fill="rgb(227,5,28)" rx="2" ry="2" />
<text  x="98.80" y="1007.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (9 samples, 0.05%)</title><rect x="237.6" y="437" width="0.6" height="15.0" fill="rgb(243,86,41)" rx="2" ry="2" />
<text  x="240.63" y="447.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.05%)</title><rect x="130.5" y="469" width="0.5" height="15.0" fill="rgb(244,209,1)" rx="2" ry="2" />
<text  x="133.51" y="479.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (3 samples, 0.02%)</title><rect x="668.9" y="645" width="0.2" height="15.0" fill="rgb(218,16,37)" rx="2" ry="2" />
<text  x="671.95" y="655.5" ></text>
</g>
<g >
<title>Bitmap::Init (5 samples, 0.03%)</title><rect x="23.8" y="997" width="0.3" height="15.0" fill="rgb(224,191,34)" rx="2" ry="2" />
<text  x="26.75" y="1007.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (13,686 samples, 69.06%)</title><rect x="333.7" y="837" width="814.9" height="15.0" fill="rgb(242,9,11)" rx="2" ry="2" />
<text  x="336.73" y="847.5" >Game_CommonEvent::Update</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_right (8 samples, 0.04%)</title><rect x="755.2" y="437" width="0.5" height="15.0" fill="rgb(218,87,21)" rx="2" ry="2" />
<text  x="758.23" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (37 samples, 0.19%)</title><rect x="580.4" y="741" width="2.2" height="15.0" fill="rgb(235,111,6)" rx="2" ry="2" />
<text  x="583.41" y="751.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (14 samples, 0.07%)</title><rect x="154.7" y="581" width="0.9" height="15.0" fill="rgb(224,25,30)" rx="2" ry="2" />
<text  x="157.75" y="591.5" ></text>
</g>
<g >
<title>operator== (4 samples, 0.02%)</title><rect x="1166.7" y="757" width="0.2" height="15.0" fill="rgb(215,2,23)" rx="2" ry="2" />
<text  x="1169.66" y="767.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&amp;&gt; (2 samples, 0.01%)</title><rect x="837.9" y="389" width="0.1" height="15.0" fill="rgb(220,134,24)" rx="2" ry="2" />
<text  x="840.87" y="399.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (6 samples, 0.03%)</title><rect x="1182.5" y="773" width="0.4" height="15.0" fill="rgb(236,177,2)" rx="2" ry="2" />
<text  x="1185.50" y="783.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (514 samples, 2.59%)</title><rect x="294.8" y="533" width="30.7" height="15.0" fill="rgb(242,99,17)" rx="2" ry="2" />
<text  x="297.85" y="543.5" >Ga..</text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::~__allocated_ptr (6 samples, 0.03%)</title><rect x="309.2" y="373" width="0.4" height="15.0" fill="rgb(233,48,14)" rx="2" ry="2" />
<text  x="312.20" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::max_size (5 samples, 0.03%)</title><rect x="53.6" y="997" width="0.3" height="15.0" fill="rgb(223,149,34)" rx="2" ry="2" />
<text  x="56.58" y="1007.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (19 samples, 0.10%)</title><rect x="869.0" y="485" width="1.1" height="15.0" fill="rgb(229,95,30)" rx="2" ry="2" />
<text  x="871.95" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (2 samples, 0.01%)</title><rect x="293.9" y="997" width="0.1" height="15.0" fill="rgb(236,14,34)" rx="2" ry="2" />
<text  x="296.90" y="1007.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::operator[] (44 samples, 0.22%)</title><rect x="245.2" y="405" width="2.6" height="15.0" fill="rgb(238,119,47)" rx="2" ry="2" />
<text  x="248.19" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (49 samples, 0.25%)</title><rect x="264.4" y="469" width="2.9" height="15.0" fill="rgb(230,220,8)" rx="2" ry="2" />
<text  x="267.36" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (2 samples, 0.01%)</title><rect x="861.3" y="469" width="0.1" height="15.0" fill="rgb(221,80,6)" rx="2" ry="2" />
<text  x="864.33" y="479.5" ></text>
</g>
<g >
<title>Game_Interpreter::IsRunning (18 samples, 0.09%)</title><rect x="338.3" y="821" width="1.0" height="15.0" fill="rgb(219,111,22)" rx="2" ry="2" />
<text  x="341.25" y="831.5" ></text>
</g>
<g >
<title>std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt;::cbegin (21 samples, 0.11%)</title><rect x="946.9" y="421" width="1.2" height="15.0" fill="rgb(244,64,1)" rx="2" ry="2" />
<text  x="949.89" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (3 samples, 0.02%)</title><rect x="615.4" y="709" width="0.1" height="15.0" fill="rgb(225,24,16)" rx="2" ry="2" />
<text  x="618.36" y="719.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (514 samples, 2.59%)</title><rect x="294.8" y="613" width="30.7" height="15.0" fill="rgb(224,115,52)" rx="2" ry="2" />
<text  x="297.85" y="623.5" >st..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate (85 samples, 0.43%)</title><rect x="674.6" y="597" width="5.1" height="15.0" fill="rgb(225,213,14)" rx="2" ry="2" />
<text  x="677.61" y="607.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (20 samples, 0.10%)</title><rect x="237.0" y="725" width="1.2" height="15.0" fill="rgb(221,212,45)" rx="2" ry="2" />
<text  x="239.97" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (52 samples, 0.26%)</title><rect x="478.6" y="741" width="3.1" height="15.0" fill="rgb(252,132,35)" rx="2" ry="2" />
<text  x="481.59" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="592.4" y="725" width="0.1" height="15.0" fill="rgb(246,224,12)" rx="2" ry="2" />
<text  x="595.38" y="735.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (5 samples, 0.03%)</title><rect x="787.7" y="389" width="0.3" height="15.0" fill="rgb(249,147,42)" rx="2" ry="2" />
<text  x="790.68" y="399.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.03%)</title><rect x="159.3" y="533" width="0.3" height="15.0" fill="rgb(217,229,46)" rx="2" ry="2" />
<text  x="162.27" y="543.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (166 samples, 0.84%)</title><rect x="131.0" y="997" width="9.9" height="15.0" fill="rgb(230,57,28)" rx="2" ry="2" />
<text  x="134.05" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (28 samples, 0.14%)</title><rect x="981.9" y="709" width="1.7" height="15.0" fill="rgb(225,131,4)" rx="2" ry="2" />
<text  x="984.90" y="719.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (9 samples, 0.05%)</title><rect x="1171.4" y="805" width="0.5" height="15.0" fill="rgb(239,46,3)" rx="2" ry="2" />
<text  x="1174.36" y="815.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.01%)</title><rect x="1180.7" y="757" width="0.1" height="15.0" fill="rgb(254,94,30)" rx="2" ry="2" />
<text  x="1183.65" y="767.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.05%)</title><rect x="317.8" y="261" width="0.6" height="15.0" fill="rgb(223,12,51)" rx="2" ry="2" />
<text  x="320.83" y="271.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (254 samples, 1.28%)</title><rect x="309.6" y="389" width="15.1" height="15.0" fill="rgb(236,140,50)" rx="2" ry="2" />
<text  x="312.55" y="399.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_manager (88 samples, 0.44%)</title><rect x="663.7" y="645" width="5.2" height="15.0" fill="rgb(211,108,0)" rx="2" ry="2" />
<text  x="666.71" y="655.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (1,304 samples, 6.58%)</title><rect x="159.3" y="773" width="77.6" height="15.0" fill="rgb(217,169,26)" rx="2" ry="2" />
<text  x="162.27" y="783.5" >std::_Bi..</text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.01%)</title><rect x="646.7" y="453" width="0.2" height="15.0" fill="rgb(238,1,37)" rx="2" ry="2" />
<text  x="649.74" y="463.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (595 samples, 3.00%)</title><rect x="1038.8" y="773" width="35.4" height="15.0" fill="rgb(223,84,15)" rx="2" ry="2" />
<text  x="1041.76" y="783.5" >Gam..</text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (49 samples, 0.25%)</title><rect x="167.7" y="549" width="2.9" height="15.0" fill="rgb(247,100,35)" rx="2" ry="2" />
<text  x="170.73" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (79 samples, 0.40%)</title><rect x="991.0" y="565" width="4.7" height="15.0" fill="rgb(211,194,42)" rx="2" ry="2" />
<text  x="993.95" y="575.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.01%)</title><rect x="646.7" y="469" width="0.2" height="15.0" fill="rgb(232,211,47)" rx="2" ry="2" />
<text  x="649.74" y="479.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (6 samples, 0.03%)</title><rect x="159.3" y="613" width="0.3" height="15.0" fill="rgb(210,192,46)" rx="2" ry="2" />
<text  x="162.27" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator bool (3 samples, 0.02%)</title><rect x="109.6" y="997" width="0.2" height="15.0" fill="rgb(207,66,54)" rx="2" ry="2" />
<text  x="112.61" y="1007.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (3 samples, 0.02%)</title><rect x="267.3" y="533" width="0.2" height="15.0" fill="rgb(219,64,13)" rx="2" ry="2" />
<text  x="270.28" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (191 samples, 0.96%)</title><rect x="380.5" y="773" width="11.4" height="15.0" fill="rgb(250,220,44)" rx="2" ry="2" />
<text  x="383.53" y="783.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.02%)</title><rect x="1023.8" y="597" width="0.1" height="15.0" fill="rgb(218,57,48)" rx="2" ry="2" />
<text  x="1026.76" y="607.5" ></text>
</g>
<g >
<title>Game_Picture::Show (58 samples, 0.29%)</title><rect x="141.1" y="933" width="3.4" height="15.0" fill="rgb(227,90,1)" rx="2" ry="2" />
<text  x="144.05" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (36 samples, 0.18%)</title><rect x="159.6" y="549" width="2.2" height="15.0" fill="rgb(207,92,22)" rx="2" ry="2" />
<text  x="162.63" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt;::end (59 samples, 0.30%)</title><rect x="1125.8" y="789" width="3.5" height="15.0" fill="rgb(240,85,11)" rx="2" ry="2" />
<text  x="1128.75" y="799.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (6,390 samples, 32.24%)</title><rect x="615.7" y="741" width="380.5" height="15.0" fill="rgb(251,222,47)" rx="2" ry="2" />
<text  x="618.72" y="751.5" >Game_Picture::RequestPictureSprite</text>
</g>
<g >
<title>__do_page_fault (5 samples, 0.03%)</title><rect x="137.7" y="421" width="0.3" height="15.0" fill="rgb(234,135,34)" rx="2" ry="2" />
<text  x="140.66" y="431.5" ></text>
</g>
<g >
<title>Player::Update (44 samples, 0.22%)</title><rect x="258.8" y="981" width="2.6" height="15.0" fill="rgb(243,28,17)" rx="2" ry="2" />
<text  x="261.83" y="991.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (9 samples, 0.05%)</title><rect x="135.9" y="357" width="0.6" height="15.0" fill="rgb(253,215,7)" rx="2" ry="2" />
<text  x="138.93" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (183 samples, 0.92%)</title><rect x="418.8" y="773" width="10.9" height="15.0" fill="rgb(231,81,36)" rx="2" ry="2" />
<text  x="421.81" y="783.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="1024.1" y="629" width="0.1" height="15.0" fill="rgb(221,49,46)" rx="2" ry="2" />
<text  x="1027.12" y="639.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (18 samples, 0.09%)</title><rect x="143.4" y="581" width="1.1" height="15.0" fill="rgb(246,223,28)" rx="2" ry="2" />
<text  x="146.43" y="591.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (238 samples, 1.20%)</title><rect x="244.7" y="773" width="14.1" height="15.0" fill="rgb(245,27,34)" rx="2" ry="2" />
<text  x="247.65" y="783.5" ></text>
</g>
<g >
<title>Tone::Tone (9 samples, 0.05%)</title><rect x="877.6" y="501" width="0.5" height="15.0" fill="rgb(215,133,7)" rx="2" ry="2" />
<text  x="880.58" y="511.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::swap (13 samples, 0.07%)</title><rect x="885.8" y="485" width="0.8" height="15.0" fill="rgb(221,8,15)" rx="2" ry="2" />
<text  x="888.80" y="495.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (4 samples, 0.02%)</title><rect x="331.8" y="821" width="0.3" height="15.0" fill="rgb(236,78,9)" rx="2" ry="2" />
<text  x="334.82" y="831.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_base (7 samples, 0.04%)</title><rect x="70.3" y="997" width="0.4" height="15.0" fill="rgb(224,106,49)" rx="2" ry="2" />
<text  x="73.26" y="1007.5" ></text>
</g>
<g >
<title>Bitmap::EffectsBlit (9 samples, 0.05%)</title><rect x="331.0" y="805" width="0.6" height="15.0" fill="rgb(219,180,12)" rx="2" ry="2" />
<text  x="334.05" y="815.5" ></text>
</g>
<g >
<title>Utils::EncodeUTF (5 samples, 0.03%)</title><rect x="1024.6" y="741" width="0.3" height="15.0" fill="rgb(226,22,46)" rx="2" ry="2" />
<text  x="1027.59" y="751.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandConditionalBranch (3 samples, 0.02%)</title><rect x="27.2" y="997" width="0.2" height="15.0" fill="rgb(205,229,18)" rx="2" ry="2" />
<text  x="30.21" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="55.8" y="997" width="0.2" height="15.0" fill="rgb(248,80,2)" rx="2" ry="2" />
<text  x="58.85" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (2 samples, 0.01%)</title><rect x="1037.8" y="709" width="0.1" height="15.0" fill="rgb(211,97,26)" rx="2" ry="2" />
<text  x="1040.75" y="719.5" ></text>
</g>
<g >
<title>Cache::System (5 samples, 0.03%)</title><rect x="1179.8" y="789" width="0.3" height="15.0" fill="rgb(221,39,22)" rx="2" ry="2" />
<text  x="1182.76" y="799.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (9 samples, 0.05%)</title><rect x="130.5" y="933" width="0.5" height="15.0" fill="rgb(252,125,44)" rx="2" ry="2" />
<text  x="133.51" y="943.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="267.3" y="293" width="0.1" height="15.0" fill="rgb(212,208,15)" rx="2" ry="2" />
<text  x="270.28" y="303.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (5 samples, 0.03%)</title><rect x="301.8" y="341" width="0.3" height="15.0" fill="rgb(210,195,28)" rx="2" ry="2" />
<text  x="304.81" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt; &gt; &gt;::begin (2 samples, 0.01%)</title><rect x="128.5" y="997" width="0.2" height="15.0" fill="rgb(214,145,10)" rx="2" ry="2" />
<text  x="131.55" y="1007.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (10 samples, 0.05%)</title><rect x="129.4" y="1013" width="0.6" height="15.0" fill="rgb(238,46,7)" rx="2" ry="2" />
<text  x="132.44" y="1023.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::destroy&lt;Bitmap&gt; (98 samples, 0.49%)</title><rect x="953.9" y="373" width="5.9" height="15.0" fill="rgb(213,62,12)" rx="2" ry="2" />
<text  x="956.92" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator bool (2 samples, 0.01%)</title><rect x="861.3" y="501" width="0.1" height="15.0" fill="rgb(223,72,28)" rx="2" ry="2" />
<text  x="864.33" y="511.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Impl::_Impl (8 samples, 0.04%)</title><rect x="832.0" y="389" width="0.5" height="15.0" fill="rgb(249,116,49)" rx="2" ry="2" />
<text  x="834.97" y="399.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (9 samples, 0.05%)</title><rect x="130.5" y="789" width="0.5" height="15.0" fill="rgb(209,141,24)" rx="2" ry="2" />
<text  x="133.51" y="799.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (62 samples, 0.31%)</title><rect x="155.6" y="549" width="3.7" height="15.0" fill="rgb(232,60,44)" rx="2" ry="2" />
<text  x="158.58" y="559.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (8 samples, 0.04%)</title><rect x="170.6" y="613" width="0.5" height="15.0" fill="rgb(234,143,29)" rx="2" ry="2" />
<text  x="173.64" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_addr (3 samples, 0.02%)</title><rect x="651.2" y="597" width="0.2" height="15.0" fill="rgb(215,141,14)" rx="2" ry="2" />
<text  x="654.21" y="607.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (10 samples, 0.05%)</title><rect x="1182.4" y="853" width="0.6" height="15.0" fill="rgb(217,21,12)" rx="2" ry="2" />
<text  x="1185.44" y="863.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (8 samples, 0.04%)</title><rect x="887.8" y="469" width="0.5" height="15.0" fill="rgb(224,122,36)" rx="2" ry="2" />
<text  x="890.83" y="479.5" ></text>
</g>
<g >
<title>std::default_delete&lt;Sprite&gt;::operator() (963 samples, 4.86%)</title><rect x="179.6" y="645" width="57.3" height="15.0" fill="rgb(220,95,19)" rx="2" ry="2" />
<text  x="182.58" y="655.5" >std::d..</text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (1,304 samples, 6.58%)</title><rect x="159.3" y="821" width="77.6" height="15.0" fill="rgb(212,154,26)" rx="2" ry="2" />
<text  x="162.27" y="831.5" >std::fun..</text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (2 samples, 0.01%)</title><rect x="785.7" y="421" width="0.1" height="15.0" fill="rgb(208,27,41)" rx="2" ry="2" />
<text  x="788.71" y="431.5" ></text>
</g>
<g >
<title>Drawable::Drawable (3 samples, 0.02%)</title><rect x="873.7" y="501" width="0.2" height="15.0" fill="rgb(210,53,12)" rx="2" ry="2" />
<text  x="876.71" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator@plt (2 samples, 0.01%)</title><rect x="762.1" y="501" width="0.2" height="15.0" fill="rgb(233,110,51)" rx="2" ry="2" />
<text  x="765.13" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;Bitmap&gt;::allocator (2 samples, 0.01%)</title><rect x="832.3" y="357" width="0.2" height="15.0" fill="rgb(214,145,9)" rx="2" ry="2" />
<text  x="835.33" y="367.5" ></text>
</g>
<g >
<title>Bitmap::GetWidth (2 samples, 0.01%)</title><rect x="1002.6" y="725" width="0.1" height="15.0" fill="rgb(211,78,37)" rx="2" ry="2" />
<text  x="1005.56" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare@plt (3 samples, 0.02%)</title><rect x="788.9" y="485" width="0.1" height="15.0" fill="rgb(211,135,17)" rx="2" ry="2" />
<text  x="791.87" y="495.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (11 samples, 0.06%)</title><rect x="857.6" y="485" width="0.6" height="15.0" fill="rgb(251,188,1)" rx="2" ry="2" />
<text  x="860.58" y="495.5" ></text>
</g>
<g >
<title>x86_pmu_enable (21 samples, 0.11%)</title><rect x="1181.1" y="645" width="1.3" height="15.0" fill="rgb(221,108,28)" rx="2" ry="2" />
<text  x="1184.13" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (65 samples, 0.33%)</title><rect x="425.8" y="757" width="3.9" height="15.0" fill="rgb(228,133,42)" rx="2" ry="2" />
<text  x="428.84" y="767.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (4,487 samples, 22.64%)</title><rect x="714.0" y="725" width="267.1" height="15.0" fill="rgb(235,84,10)" rx="2" ry="2" />
<text  x="716.96" y="735.5" >FileRequestAsync::Start</text>
</g>
<g >
<title>Tone::Tone (6 samples, 0.03%)</title><rect x="842.8" y="485" width="0.4" height="15.0" fill="rgb(250,91,21)" rx="2" ry="2" />
<text  x="845.81" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (4 samples, 0.02%)</title><rect x="596.8" y="741" width="0.3" height="15.0" fill="rgb(225,222,48)" rx="2" ry="2" />
<text  x="599.84" y="751.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (29 samples, 0.15%)</title><rect x="286.6" y="533" width="1.7" height="15.0" fill="rgb(236,21,46)" rx="2" ry="2" />
<text  x="289.57" y="543.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (9 samples, 0.05%)</title><rect x="130.5" y="565" width="0.5" height="15.0" fill="rgb(249,227,24)" rx="2" ry="2" />
<text  x="133.51" y="575.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (41 samples, 0.21%)</title><rect x="993.2" y="533" width="2.5" height="15.0" fill="rgb(253,28,38)" rx="2" ry="2" />
<text  x="996.21" y="543.5" ></text>
</g>
<g >
<title>std::tuple&lt;Game_Picture*, std::_Placeholder&lt;1&gt; &gt;::tuple&lt;Game_Picture*&amp;, std::_Placeholder&lt;1&gt; const&amp;, true&gt; (16 samples, 0.08%)</title><rect x="688.4" y="677" width="0.9" height="15.0" fill="rgb(215,65,0)" rx="2" ry="2" />
<text  x="691.36" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="824.3" y="421" width="0.2" height="15.0" fill="rgb(211,142,13)" rx="2" ry="2" />
<text  x="827.29" y="431.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Sprite*, false&gt;::_M_head (4 samples, 0.02%)</title><rect x="1011.6" y="629" width="0.2" height="15.0" fill="rgb(223,229,34)" rx="2" ry="2" />
<text  x="1014.55" y="639.5" ></text>
</g>
<g >
<title>Scene::IsAsyncPending (3 samples, 0.02%)</title><rect x="1179.2" y="853" width="0.2" height="15.0" fill="rgb(214,46,11)" rx="2" ry="2" />
<text  x="1182.22" y="863.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (20 samples, 0.10%)</title><rect x="1019.4" y="693" width="1.1" height="15.0" fill="rgb(208,111,9)" rx="2" ry="2" />
<text  x="1022.35" y="703.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (15 samples, 0.08%)</title><rect x="887.4" y="517" width="0.9" height="15.0" fill="rgb(212,178,6)" rx="2" ry="2" />
<text  x="890.41" y="527.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (5 samples, 0.03%)</title><rect x="1007.7" y="725" width="0.3" height="15.0" fill="rgb(230,140,4)" rx="2" ry="2" />
<text  x="1010.74" y="735.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (7 samples, 0.04%)</title><rect x="1153.3" y="805" width="0.4" height="15.0" fill="rgb(211,22,4)" rx="2" ry="2" />
<text  x="1156.26" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (2 samples, 0.01%)</title><rect x="1043.9" y="741" width="0.2" height="15.0" fill="rgb(226,64,0)" rx="2" ry="2" />
<text  x="1046.94" y="751.5" ></text>
</g>
<g >
<title>Sprite::SetOx (2 samples, 0.01%)</title><rect x="852.8" y="501" width="0.1" height="15.0" fill="rgb(229,162,4)" rx="2" ry="2" />
<text  x="855.76" y="511.5" ></text>
</g>
<g >
<title>std::__weak_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__weak_count (16 samples, 0.08%)</title><rect x="685.9" y="661" width="1.0" height="15.0" fill="rgb(207,8,19)" rx="2" ry="2" />
<text  x="688.92" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.02%)</title><rect x="646.9" y="581" width="0.1" height="15.0" fill="rgb(238,223,51)" rx="2" ry="2" />
<text  x="649.86" y="591.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Picture*, std::_Placeholder&lt;1&gt; &gt; (2 samples, 0.01%)</title><rect x="966.7" y="613" width="0.1" height="15.0" fill="rgb(217,65,47)" rx="2" ry="2" />
<text  x="969.66" y="623.5" ></text>
</g>
<g >
<title>memcpy@plt (4 samples, 0.02%)</title><rect x="1027.4" y="725" width="0.2" height="15.0" fill="rgb(235,104,36)" rx="2" ry="2" />
<text  x="1030.39" y="735.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (514 samples, 2.59%)</title><rect x="294.8" y="629" width="30.7" height="15.0" fill="rgb(227,223,14)" rx="2" ry="2" />
<text  x="297.85" y="639.5" >st..</text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (58 samples, 0.29%)</title><rect x="141.1" y="853" width="3.4" height="15.0" fill="rgb(205,67,6)" rx="2" ry="2" />
<text  x="144.05" y="863.5" ></text>
</g>
<g >
<title>common_file_perm (3 samples, 0.02%)</title><rect x="20.9" y="885" width="0.2" height="15.0" fill="rgb(241,12,31)" rx="2" ry="2" />
<text  x="23.90" y="895.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (9 samples, 0.05%)</title><rect x="135.9" y="389" width="0.6" height="15.0" fill="rgb(218,96,5)" rx="2" ry="2" />
<text  x="138.93" y="399.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="255.5" y="261" width="0.2" height="15.0" fill="rgb(209,182,15)" rx="2" ry="2" />
<text  x="258.49" y="271.5" ></text>
</g>
<g >
<title>pixman_image_unref (9 samples, 0.05%)</title><rect x="237.6" y="373" width="0.6" height="15.0" fill="rgb(250,36,53)" rx="2" ry="2" />
<text  x="240.63" y="383.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (44 samples, 0.22%)</title><rect x="258.8" y="773" width="2.6" height="15.0" fill="rgb(207,123,22)" rx="2" ry="2" />
<text  x="261.83" y="783.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (387 samples, 1.95%)</title><rect x="735.3" y="501" width="23.1" height="15.0" fill="rgb(207,176,48)" rx="2" ry="2" />
<text  x="738.34" y="511.5" >A..</text>
</g>
<g >
<title>pthread_getspecific@plt (2 samples, 0.01%)</title><rect x="137.5" y="437" width="0.1" height="15.0" fill="rgb(222,200,2)" rx="2" ry="2" />
<text  x="140.48" y="447.5" ></text>
</g>
<g >
<title>std::default_delete&lt;Sprite&gt;::operator() (185 samples, 0.93%)</title><rect x="247.8" y="581" width="11.0" height="15.0" fill="rgb(222,189,18)" rx="2" ry="2" />
<text  x="250.81" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::_M_ptr (2 samples, 0.01%)</title><rect x="1170.8" y="789" width="0.1" height="15.0" fill="rgb(244,16,10)" rx="2" ry="2" />
<text  x="1173.77" y="799.5" ></text>
</g>
<g >
<title>Sprite::~Sprite (185 samples, 0.93%)</title><rect x="247.8" y="565" width="11.0" height="15.0" fill="rgb(243,81,26)" rx="2" ry="2" />
<text  x="250.81" y="575.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (13 samples, 0.07%)</title><rect x="869.3" y="469" width="0.8" height="15.0" fill="rgb(215,123,53)" rx="2" ry="2" />
<text  x="872.31" y="479.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (166 samples, 0.84%)</title><rect x="131.0" y="869" width="9.9" height="15.0" fill="rgb(208,210,10)" rx="2" ry="2" />
<text  x="134.05" y="879.5" ></text>
</g>
<g >
<title>do_syscall_64 (98 samples, 0.49%)</title><rect x="15.6" y="997" width="5.8" height="15.0" fill="rgb(222,177,13)" rx="2" ry="2" />
<text  x="18.60" y="1007.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (49 samples, 0.25%)</title><rect x="772.4" y="389" width="3.0" height="15.0" fill="rgb(238,68,19)" rx="2" ry="2" />
<text  x="775.43" y="399.5" ></text>
</g>
<g >
<title>malloc (41 samples, 0.21%)</title><rect x="148.3" y="485" width="2.5" height="15.0" fill="rgb(227,226,51)" rx="2" ry="2" />
<text  x="151.32" y="495.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (2 samples, 0.01%)</title><rect x="331.7" y="821" width="0.1" height="15.0" fill="rgb(247,32,33)" rx="2" ry="2" />
<text  x="334.70" y="831.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (2 samples, 0.01%)</title><rect x="1013.2" y="725" width="0.1" height="15.0" fill="rgb(224,34,53)" rx="2" ry="2" />
<text  x="1016.16" y="735.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (14 samples, 0.07%)</title><rect x="620.5" y="645" width="0.8" height="15.0" fill="rgb(238,89,46)" rx="2" ry="2" />
<text  x="623.48" y="655.5" ></text>
</g>
<g >
<title>std::default_delete&lt;Sprite&gt;::operator() (1,263 samples, 6.37%)</title><rect x="889.1" y="501" width="75.2" height="15.0" fill="rgb(224,180,7)" rx="2" ry="2" />
<text  x="892.08" y="511.5" >std::def..</text>
</g>
<g >
<title>__GI___pthread_getspecific (3 samples, 0.02%)</title><rect x="318.4" y="261" width="0.1" height="15.0" fill="rgb(231,102,16)" rx="2" ry="2" />
<text  x="321.37" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (22 samples, 0.11%)</title><rect x="1113.7" y="789" width="1.3" height="15.0" fill="rgb(208,64,16)" rx="2" ry="2" />
<text  x="1116.73" y="799.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (123 samples, 0.62%)</title><rect x="770.1" y="405" width="7.3" height="15.0" fill="rgb(211,162,46)" rx="2" ry="2" />
<text  x="773.11" y="415.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (18 samples, 0.09%)</title><rect x="258.8" y="565" width="1.1" height="15.0" fill="rgb(243,87,34)" rx="2" ry="2" />
<text  x="261.83" y="575.5" ></text>
</g>
<g >
<title>Scene::MainFunction (515 samples, 2.60%)</title><rect x="294.8" y="933" width="30.7" height="15.0" fill="rgb(244,6,21)" rx="2" ry="2" />
<text  x="297.79" y="943.5" >Sc..</text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (166 samples, 0.84%)</title><rect x="131.0" y="805" width="9.9" height="15.0" fill="rgb(233,139,14)" rx="2" ry="2" />
<text  x="134.05" y="815.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (7 samples, 0.04%)</title><rect x="787.6" y="405" width="0.4" height="15.0" fill="rgb(212,181,41)" rx="2" ry="2" />
<text  x="790.56" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_mutate (14 samples, 0.07%)</title><rect x="1023.5" y="709" width="0.8" height="15.0" fill="rgb(240,19,52)" rx="2" ry="2" />
<text  x="1026.46" y="719.5" ></text>
</g>
<g >
<title>Sprite::SetZoomY (2 samples, 0.01%)</title><rect x="855.9" y="501" width="0.1" height="15.0" fill="rgb(226,21,25)" rx="2" ry="2" />
<text  x="858.91" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="647.0" y="597" width="0.2" height="15.0" fill="rgb(253,163,42)" rx="2" ry="2" />
<text  x="650.04" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (2 samples, 0.01%)</title><rect x="599.5" y="725" width="0.1" height="15.0" fill="rgb(235,51,19)" rx="2" ry="2" />
<text  x="602.52" y="735.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandControlVariables (1,303 samples, 6.57%)</title><rect x="514.0" y="773" width="77.5" height="15.0" fill="rgb(226,101,44)" rx="2" ry="2" />
<text  x="516.96" y="783.5" >Game_Int..</text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (2 samples, 0.01%)</title><rect x="1178.4" y="773" width="0.1" height="15.0" fill="rgb(249,117,43)" rx="2" ry="2" />
<text  x="1181.39" y="783.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.05%)</title><rect x="138.6" y="501" width="0.5" height="15.0" fill="rgb(253,69,45)" rx="2" ry="2" />
<text  x="141.55" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::operator bool (7 samples, 0.04%)</title><rect x="713.1" y="693" width="0.4" height="15.0" fill="rgb(220,99,17)" rx="2" ry="2" />
<text  x="716.07" y="703.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (7 samples, 0.04%)</title><rect x="1182.5" y="805" width="0.4" height="15.0" fill="rgb(237,100,7)" rx="2" ry="2" />
<text  x="1185.50" y="815.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::end (3 samples, 0.02%)</title><rect x="751.6" y="469" width="0.2" height="15.0" fill="rgb(220,9,14)" rx="2" ry="2" />
<text  x="754.59" y="479.5" ></text>
</g>
<g >
<title>operator new@plt (2 samples, 0.01%)</title><rect x="1032.7" y="725" width="0.1" height="15.0" fill="rgb(218,37,16)" rx="2" ry="2" />
<text  x="1035.69" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign@plt (2 samples, 0.01%)</title><rect x="1012.6" y="725" width="0.1" height="15.0" fill="rgb(207,228,7)" rx="2" ry="2" />
<text  x="1015.62" y="735.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (21 samples, 0.11%)</title><rect x="1181.1" y="661" width="1.3" height="15.0" fill="rgb(254,35,22)" rx="2" ry="2" />
<text  x="1184.13" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_key (9 samples, 0.05%)</title><rect x="784.2" y="469" width="0.6" height="15.0" fill="rgb(215,176,24)" rx="2" ry="2" />
<text  x="787.22" y="479.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (8 samples, 0.04%)</title><rect x="787.5" y="421" width="0.5" height="15.0" fill="rgb(230,192,3)" rx="2" ry="2" />
<text  x="790.50" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (88 samples, 0.44%)</title><rect x="652.9" y="629" width="5.3" height="15.0" fill="rgb(241,189,35)" rx="2" ry="2" />
<text  x="655.93" y="639.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (20 samples, 0.10%)</title><rect x="237.0" y="821" width="1.2" height="15.0" fill="rgb(248,126,17)" rx="2" ry="2" />
<text  x="239.97" y="831.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (58 samples, 0.29%)</title><rect x="141.1" y="773" width="3.4" height="15.0" fill="rgb(253,93,35)" rx="2" ry="2" />
<text  x="144.05" y="783.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (133 samples, 0.67%)</title><rect x="971.7" y="485" width="7.9" height="15.0" fill="rgb(248,11,40)" rx="2" ry="2" />
<text  x="974.72" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;::base (3 samples, 0.02%)</title><rect x="46.5" y="997" width="0.2" height="15.0" fill="rgb(227,106,10)" rx="2" ry="2" />
<text  x="49.50" y="1007.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="646.7" y="517" width="0.2" height="15.0" fill="rgb(247,124,25)" rx="2" ry="2" />
<text  x="649.74" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (55 samples, 0.28%)</title><rect x="150.8" y="581" width="3.2" height="15.0" fill="rgb(207,116,19)" rx="2" ry="2" />
<text  x="153.76" y="591.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (5 samples, 0.03%)</title><rect x="1180.2" y="757" width="0.3" height="15.0" fill="rgb(236,124,47)" rx="2" ry="2" />
<text  x="1183.18" y="767.5" ></text>
</g>
<g >
<title>operator new (78 samples, 0.39%)</title><rect x="171.1" y="565" width="4.7" height="15.0" fill="rgb(220,188,7)" rx="2" ry="2" />
<text  x="174.12" y="575.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (13 samples, 0.07%)</title><rect x="256.5" y="165" width="0.8" height="15.0" fill="rgb(247,139,1)" rx="2" ry="2" />
<text  x="259.50" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.01%)</title><rect x="154.6" y="581" width="0.1" height="15.0" fill="rgb(221,143,48)" rx="2" ry="2" />
<text  x="157.63" y="591.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (3 samples, 0.02%)</title><rect x="36.3" y="997" width="0.1" height="15.0" fill="rgb(239,224,13)" rx="2" ry="2" />
<text  x="39.26" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::deallocate (83 samples, 0.42%)</title><rect x="990.7" y="597" width="5.0" height="15.0" fill="rgb(238,82,46)" rx="2" ry="2" />
<text  x="993.71" y="607.5" ></text>
</g>
<g >
<title>Sprite::GetBitmap (3 samples, 0.02%)</title><rect x="850.0" y="501" width="0.1" height="15.0" fill="rgb(220,136,26)" rx="2" ry="2" />
<text  x="852.96" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (9 samples, 0.05%)</title><rect x="330.1" y="997" width="0.5" height="15.0" fill="rgb(230,139,15)" rx="2" ry="2" />
<text  x="333.10" y="1007.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (4 samples, 0.02%)</title><rect x="74.8" y="997" width="0.2" height="15.0" fill="rgb(254,106,30)" rx="2" ry="2" />
<text  x="77.78" y="1007.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (54 samples, 0.27%)</title><rect x="785.2" y="469" width="3.2" height="15.0" fill="rgb(229,148,17)" rx="2" ry="2" />
<text  x="788.23" y="479.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.02%)</title><rect x="150.8" y="549" width="0.1" height="15.0" fill="rgb(241,133,15)" rx="2" ry="2" />
<text  x="153.76" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (11 samples, 0.06%)</title><rect x="113.8" y="997" width="0.7" height="15.0" fill="rgb(241,187,16)" rx="2" ry="2" />
<text  x="116.84" y="1007.5" ></text>
</g>
<g >
<title>put_timespec64 (2 samples, 0.01%)</title><rect x="283.6" y="501" width="0.1" height="15.0" fill="rgb(250,128,22)" rx="2" ry="2" />
<text  x="286.59" y="511.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (2 samples, 0.01%)</title><rect x="83.2" y="997" width="0.1" height="15.0" fill="rgb(218,209,48)" rx="2" ry="2" />
<text  x="86.18" y="1007.5" ></text>
</g>
<g >
<title>Player::Update (515 samples, 2.60%)</title><rect x="294.8" y="917" width="30.7" height="15.0" fill="rgb(223,24,0)" rx="2" ry="2" />
<text  x="297.79" y="927.5" >Pl..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (62 samples, 0.31%)</title><rect x="155.6" y="613" width="3.7" height="15.0" fill="rgb(254,27,29)" rx="2" ry="2" />
<text  x="158.58" y="623.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (109 samples, 0.55%)</title><rect x="238.2" y="837" width="6.5" height="15.0" fill="rgb(223,172,38)" rx="2" ry="2" />
<text  x="241.16" y="847.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;Input::UiSource::Update()::{lambda(int)#1}&gt; &gt; (3 samples, 0.02%)</title><rect x="332.4" y="805" width="0.2" height="15.0" fill="rgb(237,136,1)" rx="2" ry="2" />
<text  x="335.42" y="815.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (58 samples, 0.29%)</title><rect x="305.7" y="453" width="3.5" height="15.0" fill="rgb(222,159,25)" rx="2" ry="2" />
<text  x="308.74" y="463.5" ></text>
</g>
<g >
<title>XFlush (5 samples, 0.03%)</title><rect x="1180.2" y="805" width="0.3" height="15.0" fill="rgb(232,217,10)" rx="2" ry="2" />
<text  x="1183.18" y="815.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="161.7" y="533" width="0.1" height="15.0" fill="rgb(237,176,5)" rx="2" ry="2" />
<text  x="164.65" y="543.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (207 samples, 1.04%)</title><rect x="647.8" y="709" width="12.3" height="15.0" fill="rgb(244,182,49)" rx="2" ry="2" />
<text  x="650.75" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;::__normal_iterator (3 samples, 0.02%)</title><rect x="46.3" y="997" width="0.2" height="15.0" fill="rgb(249,130,12)" rx="2" ry="2" />
<text  x="49.32" y="1007.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (2 samples, 0.01%)</title><rect x="106.1" y="997" width="0.1" height="15.0" fill="rgb(205,18,14)" rx="2" ry="2" />
<text  x="109.10" y="1007.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, FileRequestResult*&amp;&amp;&gt; (5 samples, 0.03%)</title><rect x="97.9" y="997" width="0.3" height="15.0" fill="rgb(229,24,0)" rx="2" ry="2" />
<text  x="100.94" y="1007.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (6 samples, 0.03%)</title><rect x="945.6" y="389" width="0.3" height="15.0" fill="rgb(238,208,5)" rx="2" ry="2" />
<text  x="948.58" y="399.5" ></text>
</g>
<g >
<title>Game_Picture::SetNonEffectParams (4 samples, 0.02%)</title><rect x="31.6" y="997" width="0.2" height="15.0" fill="rgb(244,34,51)" rx="2" ry="2" />
<text  x="34.55" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (4 samples, 0.02%)</title><rect x="979.9" y="485" width="0.3" height="15.0" fill="rgb(219,40,37)" rx="2" ry="2" />
<text  x="982.94" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_addr (3 samples, 0.02%)</title><rect x="44.3" y="997" width="0.2" height="15.0" fill="rgb(220,142,4)" rx="2" ry="2" />
<text  x="47.30" y="1007.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (20 samples, 0.10%)</title><rect x="237.0" y="789" width="1.2" height="15.0" fill="rgb(205,180,35)" rx="2" ry="2" />
<text  x="239.97" y="799.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingForegroundExecution (13 samples, 0.07%)</title><rect x="1149.8" y="837" width="0.8" height="15.0" fill="rgb(238,105,53)" rx="2" ry="2" />
<text  x="1152.81" y="847.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;Drawable*&gt; (9 samples, 0.05%)</title><rect x="943.6" y="357" width="0.5" height="15.0" fill="rgb(238,150,54)" rx="2" ry="2" />
<text  x="946.56" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate (18 samples, 0.09%)</title><rect x="143.4" y="565" width="1.1" height="15.0" fill="rgb(237,154,21)" rx="2" ry="2" />
<text  x="146.43" y="575.5" ></text>
</g>
<g >
<title>Bitmap::Create (5 samples, 0.03%)</title><rect x="23.2" y="997" width="0.3" height="15.0" fill="rgb(233,127,29)" rx="2" ry="2" />
<text  x="26.22" y="1007.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Scene, (__gnu_cxx::_Lock_policy)2&gt;::get (49 samples, 0.25%)</title><rect x="1134.5" y="773" width="2.9" height="15.0" fill="rgb(241,33,42)" rx="2" ry="2" />
<text  x="1137.51" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (8 samples, 0.04%)</title><rect x="480.2" y="709" width="0.5" height="15.0" fill="rgb(218,7,7)" rx="2" ry="2" />
<text  x="483.20" y="719.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (5 samples, 0.03%)</title><rect x="257.9" y="181" width="0.3" height="15.0" fill="rgb(250,140,14)" rx="2" ry="2" />
<text  x="260.93" y="191.5" ></text>
</g>
<g >
<title>operator!= (9 samples, 0.05%)</title><rect x="1167.3" y="789" width="0.6" height="15.0" fill="rgb(254,97,25)" rx="2" ry="2" />
<text  x="1170.31" y="799.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (3 samples, 0.02%)</title><rect x="79.0" y="997" width="0.2" height="15.0" fill="rgb(219,85,42)" rx="2" ry="2" />
<text  x="82.01" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (185 samples, 0.93%)</title><rect x="247.8" y="341" width="11.0" height="15.0" fill="rgb(251,135,1)" rx="2" ry="2" />
<text  x="250.81" y="351.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl (3 samples, 0.02%)</title><rect x="689.1" y="645" width="0.2" height="15.0" fill="rgb(209,210,45)" rx="2" ry="2" />
<text  x="692.07" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (3 samples, 0.02%)</title><rect x="1075.2" y="741" width="0.2" height="15.0" fill="rgb(245,29,2)" rx="2" ry="2" />
<text  x="1078.20" y="751.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::~function (131 samples, 0.66%)</title><rect x="702.7" y="709" width="7.8" height="15.0" fill="rgb(240,176,53)" rx="2" ry="2" />
<text  x="705.65" y="719.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate (9 samples, 0.05%)</title><rect x="130.5" y="549" width="0.5" height="15.0" fill="rgb(221,124,2)" rx="2" ry="2" />
<text  x="133.51" y="559.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (9 samples, 0.05%)</title><rect x="237.6" y="501" width="0.6" height="15.0" fill="rgb(244,12,41)" rx="2" ry="2" />
<text  x="240.63" y="511.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (3 samples, 0.02%)</title><rect x="875.1" y="469" width="0.2" height="15.0" fill="rgb(208,203,21)" rx="2" ry="2" />
<text  x="878.08" y="479.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (39 samples, 0.20%)</title><rect x="884.8" y="501" width="2.4" height="15.0" fill="rgb(215,131,4)" rx="2" ry="2" />
<text  x="887.85" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::push_back (2 samples, 0.01%)</title><rect x="1024.8" y="725" width="0.1" height="15.0" fill="rgb(251,218,18)" rx="2" ry="2" />
<text  x="1027.77" y="735.5" ></text>
</g>
<g >
<title>Color::Color (2 samples, 0.01%)</title><rect x="1004.2" y="693" width="0.1" height="15.0" fill="rgb(225,78,18)" rx="2" ry="2" />
<text  x="1007.23" y="703.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;*&gt; (3 samples, 0.02%)</title><rect x="60.6" y="997" width="0.1" height="15.0" fill="rgb(248,173,26)" rx="2" ry="2" />
<text  x="63.55" y="1007.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (102 samples, 0.51%)</title><rect x="144.7" y="789" width="6.1" height="15.0" fill="rgb(219,114,2)" rx="2" ry="2" />
<text  x="147.68" y="799.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_weak_add_ref (14 samples, 0.07%)</title><rect x="686.0" y="645" width="0.9" height="15.0" fill="rgb(212,89,29)" rx="2" ry="2" />
<text  x="689.04" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (9 samples, 0.05%)</title><rect x="500.1" y="709" width="0.6" height="15.0" fill="rgb(238,158,30)" rx="2" ry="2" />
<text  x="503.15" y="719.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (2 samples, 0.01%)</title><rect x="1179.9" y="725" width="0.1" height="15.0" fill="rgb(242,227,30)" rx="2" ry="2" />
<text  x="1182.88" y="735.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (514 samples, 2.59%)</title><rect x="294.8" y="549" width="30.7" height="15.0" fill="rgb(236,2,28)" rx="2" ry="2" />
<text  x="297.85" y="559.5" >st..</text>
</g>
<g >
<title>std::move&lt;Sprite*&amp;&gt; (2 samples, 0.01%)</title><rect x="103.5" y="997" width="0.1" height="15.0" fill="rgb(213,67,5)" rx="2" ry="2" />
<text  x="106.48" y="1007.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (4 samples, 0.02%)</title><rect x="865.0" y="469" width="0.3" height="15.0" fill="rgb(235,152,3)" rx="2" ry="2" />
<text  x="868.02" y="479.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (3 samples, 0.02%)</title><rect x="257.9" y="117" width="0.2" height="15.0" fill="rgb(222,221,6)" rx="2" ry="2" />
<text  x="260.93" y="127.5" ></text>
</g>
<g >
<title>poll_freewait (2 samples, 0.01%)</title><rect x="16.8" y="949" width="0.1" height="15.0" fill="rgb(212,187,34)" rx="2" ry="2" />
<text  x="19.79" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::~vector (12 samples, 0.06%)</title><rect x="959.0" y="325" width="0.8" height="15.0" fill="rgb(233,226,9)" rx="2" ry="2" />
<text  x="962.04" y="335.5" ></text>
</g>
<g >
<title>MakeFlashColor (15 samples, 0.08%)</title><rect x="845.3" y="485" width="0.8" height="15.0" fill="rgb(206,150,51)" rx="2" ry="2" />
<text  x="848.25" y="495.5" ></text>
</g>
<g >
<title>Game_Map::Refresh (4 samples, 0.02%)</title><rect x="1146.6" y="821" width="0.2" height="15.0" fill="rgb(229,170,52)" rx="2" ry="2" />
<text  x="1149.59" y="831.5" ></text>
</g>
<g >
<title>pixman_region32_fini (2 samples, 0.01%)</title><rect x="327.7" y="997" width="0.1" height="15.0" fill="rgb(213,30,49)" rx="2" ry="2" />
<text  x="330.72" y="1007.5" ></text>
</g>
<g >
<title>Game_Picture::Show (101 samples, 0.51%)</title><rect x="261.4" y="853" width="6.1" height="15.0" fill="rgb(223,163,31)" rx="2" ry="2" />
<text  x="264.45" y="863.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (1,304 samples, 6.58%)</title><rect x="159.3" y="805" width="77.6" height="15.0" fill="rgb(241,46,51)" rx="2" ry="2" />
<text  x="162.27" y="815.5" >std::_Fu..</text>
</g>
<g >
<title>Bitmap::GetRect (43 samples, 0.22%)</title><rect x="865.9" y="501" width="2.5" height="15.0" fill="rgb(248,94,25)" rx="2" ry="2" />
<text  x="868.85" y="511.5" ></text>
</g>
<g >
<title>memcmp (3 samples, 0.02%)</title><rect x="783.2" y="373" width="0.2" height="15.0" fill="rgb(231,157,49)" rx="2" ry="2" />
<text  x="786.21" y="383.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (339 samples, 1.71%)</title><rect x="1155.0" y="821" width="20.2" height="15.0" fill="rgb(238,210,54)" rx="2" ry="2" />
<text  x="1158.05" y="831.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::_M_ptr (5 samples, 0.03%)</title><rect x="1170.9" y="773" width="0.3" height="15.0" fill="rgb(224,105,24)" rx="2" ry="2" />
<text  x="1173.89" y="783.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (12 samples, 0.06%)</title><rect x="104.4" y="997" width="0.7" height="15.0" fill="rgb(211,178,47)" rx="2" ry="2" />
<text  x="107.37" y="1007.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (2 samples, 0.01%)</title><rect x="100.4" y="997" width="0.1" height="15.0" fill="rgb(218,100,43)" rx="2" ry="2" />
<text  x="103.38" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (22 samples, 0.11%)</title><rect x="667.5" y="565" width="1.3" height="15.0" fill="rgb(233,227,46)" rx="2" ry="2" />
<text  x="670.52" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (10 samples, 0.05%)</title><rect x="1170.8" y="805" width="0.6" height="15.0" fill="rgb(241,150,50)" rx="2" ry="2" />
<text  x="1173.77" y="815.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (7 samples, 0.04%)</title><rect x="787.1" y="405" width="0.4" height="15.0" fill="rgb(227,210,50)" rx="2" ry="2" />
<text  x="790.08" y="415.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (349 samples, 1.76%)</title><rect x="267.5" y="757" width="20.8" height="15.0" fill="rgb(244,172,31)" rx="2" ry="2" />
<text  x="270.52" y="767.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (109 samples, 0.55%)</title><rect x="238.2" y="677" width="6.5" height="15.0" fill="rgb(223,12,28)" rx="2" ry="2" />
<text  x="241.16" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt;::_M_erase (104 samples, 0.52%)</title><rect x="940.4" y="421" width="6.2" height="15.0" fill="rgb(235,61,10)" rx="2" ry="2" />
<text  x="943.40" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (94 samples, 0.47%)</title><rect x="1045.1" y="741" width="5.6" height="15.0" fill="rgb(240,25,3)" rx="2" ry="2" />
<text  x="1048.13" y="751.5" ></text>
</g>
<g >
<title>Sdl2Ui::GetTicks (18 samples, 0.09%)</title><rect x="758.5" y="501" width="1.1" height="15.0" fill="rgb(234,47,0)" rx="2" ry="2" />
<text  x="761.50" y="511.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (13 samples, 0.07%)</title><rect x="324.7" y="453" width="0.8" height="15.0" fill="rgb(246,106,29)" rx="2" ry="2" />
<text  x="327.68" y="463.5" ></text>
</g>
<g >
<title>operator!= (5 samples, 0.03%)</title><rect x="1166.6" y="773" width="0.3" height="15.0" fill="rgb(205,48,22)" rx="2" ry="2" />
<text  x="1169.60" y="783.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_valptr (8 samples, 0.04%)</title><rect x="650.9" y="629" width="0.5" height="15.0" fill="rgb(208,156,4)" rx="2" ry="2" />
<text  x="653.91" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get_deleter (16 samples, 0.08%)</title><rect x="964.9" y="501" width="1.0" height="15.0" fill="rgb(244,90,40)" rx="2" ry="2" />
<text  x="967.93" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (174 samples, 0.88%)</title><rect x="391.9" y="773" width="10.4" height="15.0" fill="rgb(247,70,44)" rx="2" ry="2" />
<text  x="394.90" y="783.5" ></text>
</g>
<g >
<title>Drawable::IsGlobal (2 samples, 0.01%)</title><rect x="26.0" y="997" width="0.1" height="15.0" fill="rgb(217,216,21)" rx="2" ry="2" />
<text  x="28.96" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (126 samples, 0.64%)</title><rect x="131.0" y="485" width="7.6" height="15.0" fill="rgb(254,18,0)" rx="2" ry="2" />
<text  x="134.05" y="495.5" ></text>
</g>
<g >
<title>Drawable::~Drawable (4 samples, 0.02%)</title><rect x="891.4" y="453" width="0.2" height="15.0" fill="rgb(236,156,33)" rx="2" ry="2" />
<text  x="894.40" y="463.5" ></text>
</g>
<g >
<title>__wake_up_common (2 samples, 0.01%)</title><rect x="21.1" y="885" width="0.1" height="15.0" fill="rgb(221,11,10)" rx="2" ry="2" />
<text  x="24.07" y="895.5" ></text>
</g>
<g >
<title>operator new (64 samples, 0.32%)</title><rect x="175.8" y="501" width="3.8" height="15.0" fill="rgb(205,12,50)" rx="2" ry="2" />
<text  x="178.76" y="511.5" ></text>
</g>
<g >
<title>Game_Picture::Show (20 samples, 0.10%)</title><rect x="237.0" y="805" width="1.2" height="15.0" fill="rgb(246,116,15)" rx="2" ry="2" />
<text  x="239.97" y="815.5" ></text>
</g>
<g >
<title>Tone::Tone (8 samples, 0.04%)</title><rect x="1162.2" y="789" width="0.5" height="15.0" fill="rgb(210,38,29)" rx="2" ry="2" />
<text  x="1165.19" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.01%)</title><rect x="125.7" y="997" width="0.2" height="15.0" fill="rgb(252,92,48)" rx="2" ry="2" />
<text  x="128.75" y="1007.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="270.9" y="533" width="0.1" height="15.0" fill="rgb(250,136,17)" rx="2" ry="2" />
<text  x="273.91" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_S_value (4 samples, 0.02%)</title><rect x="65.9" y="997" width="0.2" height="15.0" fill="rgb(221,125,26)" rx="2" ry="2" />
<text  x="68.85" y="1007.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (58 samples, 0.29%)</title><rect x="279.8" y="501" width="3.4" height="15.0" fill="rgb(237,140,52)" rx="2" ry="2" />
<text  x="282.78" y="511.5" ></text>
</g>
<g >
<title>Bitmap::Create (58 samples, 0.29%)</title><rect x="305.7" y="501" width="3.5" height="15.0" fill="rgb(210,196,35)" rx="2" ry="2" />
<text  x="308.74" y="511.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (3 samples, 0.02%)</title><rect x="1171.2" y="773" width="0.2" height="15.0" fill="rgb(224,188,26)" rx="2" ry="2" />
<text  x="1174.18" y="783.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (241 samples, 1.22%)</title><rect x="294.8" y="517" width="14.4" height="15.0" fill="rgb(215,172,34)" rx="2" ry="2" />
<text  x="297.85" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (6 samples, 0.03%)</title><rect x="592.3" y="741" width="0.4" height="15.0" fill="rgb(243,140,16)" rx="2" ry="2" />
<text  x="595.32" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::deallocate (26 samples, 0.13%)</title><rect x="259.9" y="405" width="1.5" height="15.0" fill="rgb(218,17,12)" rx="2" ry="2" />
<text  x="262.90" y="415.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (5 samples, 0.03%)</title><rect x="26.7" y="997" width="0.3" height="15.0" fill="rgb(222,84,11)" rx="2" ry="2" />
<text  x="29.67" y="1007.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (61 samples, 0.31%)</title><rect x="17.0" y="933" width="3.6" height="15.0" fill="rgb(228,157,31)" rx="2" ry="2" />
<text  x="19.97" y="943.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (7 samples, 0.04%)</title><rect x="887.9" y="453" width="0.4" height="15.0" fill="rgb(251,11,35)" rx="2" ry="2" />
<text  x="890.88" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string@plt (2 samples, 0.01%)</title><rect x="1017.6" y="741" width="0.1" height="15.0" fill="rgb(254,212,1)" rx="2" ry="2" />
<text  x="1020.63" y="751.5" ></text>
</g>
<g >
<title>Game_Screen::GetTone (9 samples, 0.05%)</title><rect x="1004.3" y="725" width="0.6" height="15.0" fill="rgb(239,94,29)" rx="2" ry="2" />
<text  x="1007.35" y="735.5" ></text>
</g>
<g >
<title>do_page_fault (8 samples, 0.04%)</title><rect x="136.6" y="405" width="0.5" height="15.0" fill="rgb(226,6,17)" rx="2" ry="2" />
<text  x="139.65" y="415.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.03%)</title><rect x="724.6" y="581" width="0.3" height="15.0" fill="rgb(234,210,53)" rx="2" ry="2" />
<text  x="727.56" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (11 samples, 0.06%)</title><rect x="110.1" y="997" width="0.6" height="15.0" fill="rgb(223,55,12)" rx="2" ry="2" />
<text  x="113.09" y="1007.5" ></text>
</g>
<g >
<title>unmap_page_range (4 samples, 0.02%)</title><rect x="257.3" y="133" width="0.3" height="15.0" fill="rgb(233,10,19)" rx="2" ry="2" />
<text  x="260.34" y="143.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (18 samples, 0.09%)</title><rect x="625.8" y="661" width="1.1" height="15.0" fill="rgb(229,27,37)" rx="2" ry="2" />
<text  x="628.84" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::operator* (11 samples, 0.06%)</title><rect x="245.9" y="389" width="0.7" height="15.0" fill="rgb(214,66,37)" rx="2" ry="2" />
<text  x="248.90" y="399.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (102 samples, 0.51%)</title><rect x="144.7" y="773" width="6.1" height="15.0" fill="rgb(246,102,23)" rx="2" ry="2" />
<text  x="147.68" y="783.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (18 samples, 0.09%)</title><rect x="143.4" y="469" width="1.1" height="15.0" fill="rgb(247,136,52)" rx="2" ry="2" />
<text  x="146.43" y="479.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (58 samples, 0.29%)</title><rect x="305.7" y="469" width="3.5" height="15.0" fill="rgb(244,31,37)" rx="2" ry="2" />
<text  x="308.74" y="479.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (21 samples, 0.11%)</title><rect x="863.8" y="453" width="1.2" height="15.0" fill="rgb(226,164,5)" rx="2" ry="2" />
<text  x="866.77" y="463.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (109 samples, 0.55%)</title><rect x="238.2" y="565" width="6.5" height="15.0" fill="rgb(225,112,24)" rx="2" ry="2" />
<text  x="241.16" y="575.5" ></text>
</g>
<g >
<title>std::swap&lt;Sprite*&gt; (10 samples, 0.05%)</title><rect x="964.3" y="501" width="0.6" height="15.0" fill="rgb(245,163,45)" rx="2" ry="2" />
<text  x="967.34" y="511.5" ></text>
</g>
<g >
<title>std::max&lt;int&gt; (9 samples, 0.05%)</title><rect x="102.1" y="997" width="0.5" height="15.0" fill="rgb(209,196,40)" rx="2" ry="2" />
<text  x="105.05" y="1007.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (8 samples, 0.04%)</title><rect x="1016.7" y="741" width="0.5" height="15.0" fill="rgb(210,180,19)" rx="2" ry="2" />
<text  x="1019.67" y="751.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (129 samples, 0.65%)</title><rect x="702.8" y="693" width="7.7" height="15.0" fill="rgb(224,168,33)" rx="2" ry="2" />
<text  x="705.77" y="703.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (238 samples, 1.20%)</title><rect x="244.7" y="645" width="14.1" height="15.0" fill="rgb(247,115,20)" rx="2" ry="2" />
<text  x="247.65" y="655.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (238 samples, 1.20%)</title><rect x="244.7" y="917" width="14.1" height="15.0" fill="rgb(242,84,23)" rx="2" ry="2" />
<text  x="247.65" y="927.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (109 samples, 0.55%)</title><rect x="238.2" y="917" width="6.5" height="15.0" fill="rgb(221,183,40)" rx="2" ry="2" />
<text  x="241.16" y="927.5" ></text>
</g>
<g >
<title>down_read_trylock (2 samples, 0.01%)</title><rect x="299.2" y="405" width="0.1" height="15.0" fill="rgb(217,158,50)" rx="2" ry="2" />
<text  x="302.19" y="415.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (58 samples, 0.29%)</title><rect x="305.7" y="405" width="3.5" height="15.0" fill="rgb(210,90,46)" rx="2" ry="2" />
<text  x="308.74" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::~vector (2 samples, 0.01%)</title><rect x="120.4" y="997" width="0.1" height="15.0" fill="rgb(233,102,3)" rx="2" ry="2" />
<text  x="123.39" y="1007.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::operator (3 samples, 0.02%)</title><rect x="1149.5" y="837" width="0.1" height="15.0" fill="rgb(221,44,31)" rx="2" ry="2" />
<text  x="1152.45" y="847.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (8 samples, 0.04%)</title><rect x="255.7" y="261" width="0.5" height="15.0" fill="rgb(228,33,16)" rx="2" ry="2" />
<text  x="258.73" y="271.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (19 samples, 0.10%)</title><rect x="774.2" y="357" width="1.2" height="15.0" fill="rgb(251,189,18)" rx="2" ry="2" />
<text  x="777.22" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::vector (15 samples, 0.08%)</title><rect x="836.7" y="341" width="0.9" height="15.0" fill="rgb(205,44,37)" rx="2" ry="2" />
<text  x="839.68" y="351.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (49 samples, 0.25%)</title><rect x="264.4" y="517" width="2.9" height="15.0" fill="rgb(251,156,43)" rx="2" ry="2" />
<text  x="267.36" y="527.5" ></text>
</g>
<g >
<title>Game_Picture::Show (1,304 samples, 6.58%)</title><rect x="159.3" y="901" width="77.6" height="15.0" fill="rgb(248,5,17)" rx="2" ry="2" />
<text  x="162.27" y="911.5" >Game_Pic..</text>
</g>
<g >
<title>std::__copy_move_a&lt;true, Drawable**, Drawable**&gt; (9 samples, 0.05%)</title><rect x="943.6" y="373" width="0.5" height="15.0" fill="rgb(210,195,42)" rx="2" ry="2" />
<text  x="946.56" y="383.5" ></text>
</g>
<g >
<title>std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;::~pair (172 samples, 0.87%)</title><rect x="970.2" y="581" width="10.2" height="15.0" fill="rgb(205,181,21)" rx="2" ry="2" />
<text  x="973.17" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (11 samples, 0.06%)</title><rect x="724.3" y="597" width="0.6" height="15.0" fill="rgb(250,201,35)" rx="2" ry="2" />
<text  x="727.26" y="607.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::~__allocated_ptr (43 samples, 0.22%)</title><rect x="238.9" y="405" width="2.5" height="15.0" fill="rgb(227,216,48)" rx="2" ry="2" />
<text  x="241.88" y="415.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;2ul, bool&gt; (10 samples, 0.05%)</title><rect x="771.8" y="357" width="0.6" height="15.0" fill="rgb(209,181,5)" rx="2" ry="2" />
<text  x="774.84" y="367.5" ></text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (10 samples, 0.05%)</title><rect x="1163.1" y="805" width="0.6" height="15.0" fill="rgb(216,125,37)" rx="2" ry="2" />
<text  x="1166.15" y="815.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::~function (4 samples, 0.02%)</title><rect x="97.7" y="997" width="0.2" height="15.0" fill="rgb(253,121,52)" rx="2" ry="2" />
<text  x="100.71" y="1007.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (14 samples, 0.07%)</title><rect x="614.9" y="741" width="0.8" height="15.0" fill="rgb(214,17,1)" rx="2" ry="2" />
<text  x="617.89" y="751.5" ></text>
</g>
<g >
<title>__strlen_avx2 (2 samples, 0.01%)</title><rect x="627.5" y="645" width="0.1" height="15.0" fill="rgb(219,223,43)" rx="2" ry="2" />
<text  x="630.51" y="655.5" ></text>
</g>
<g >
<title>Bitmap::Blit (424 samples, 2.14%)</title><rect x="800.6" y="501" width="25.2" height="15.0" fill="rgb(229,133,43)" rx="2" ry="2" />
<text  x="803.60" y="511.5" >B..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_key (4 samples, 0.02%)</title><rect x="68.2" y="997" width="0.2" height="15.0" fill="rgb(227,113,35)" rx="2" ry="2" />
<text  x="71.17" y="1007.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (29 samples, 0.15%)</title><rect x="286.6" y="469" width="1.7" height="15.0" fill="rgb(209,207,7)" rx="2" ry="2" />
<text  x="289.57" y="479.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (59 samples, 0.30%)</title><rect x="150.8" y="597" width="3.5" height="15.0" fill="rgb(222,111,49)" rx="2" ry="2" />
<text  x="153.76" y="607.5" ></text>
</g>
<g >
<title>std::forward&lt;int&amp;&gt; (2 samples, 0.01%)</title><rect x="838.0" y="389" width="0.1" height="15.0" fill="rgb(238,32,14)" rx="2" ry="2" />
<text  x="840.99" y="399.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="129.1" y="997" width="0.2" height="15.0" fill="rgb(209,72,42)" rx="2" ry="2" />
<text  x="132.08" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (55 samples, 0.28%)</title><rect x="150.8" y="565" width="3.2" height="15.0" fill="rgb(208,51,36)" rx="2" ry="2" />
<text  x="153.76" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (3 samples, 0.02%)</title><rect x="497.6" y="709" width="0.2" height="15.0" fill="rgb(245,88,33)" rx="2" ry="2" />
<text  x="500.59" y="719.5" ></text>
</g>
<g >
<title>Game_Character::UpdateMovement (19 samples, 0.10%)</title><rect x="1151.0" y="837" width="1.1" height="15.0" fill="rgb(248,144,49)" rx="2" ry="2" />
<text  x="1154.00" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::operator++ (4 samples, 0.02%)</title><rect x="1151.8" y="789" width="0.2" height="15.0" fill="rgb(245,214,29)" rx="2" ry="2" />
<text  x="1154.77" y="799.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (96 samples, 0.48%)</title><rect x="238.9" y="437" width="5.7" height="15.0" fill="rgb(236,61,45)" rx="2" ry="2" />
<text  x="241.88" y="447.5" ></text>
</g>
<g >
<title>std::map&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, (anonymous namespace)::CacheItem, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (2 samples, 0.01%)</title><rect x="1179.9" y="773" width="0.1" height="15.0" fill="rgb(251,9,10)" rx="2" ry="2" />
<text  x="1182.88" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (2 samples, 0.01%)</title><rect x="503.4" y="725" width="0.1" height="15.0" fill="rgb(222,205,21)" rx="2" ry="2" />
<text  x="506.36" y="735.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (3 samples, 0.02%)</title><rect x="824.9" y="453" width="0.2" height="15.0" fill="rgb(205,222,26)" rx="2" ry="2" />
<text  x="827.95" y="463.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (238 samples, 1.20%)</title><rect x="244.7" y="853" width="14.1" height="15.0" fill="rgb(227,186,50)" rx="2" ry="2" />
<text  x="247.65" y="863.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (20 samples, 0.10%)</title><rect x="237.0" y="613" width="1.2" height="15.0" fill="rgb(205,150,30)" rx="2" ry="2" />
<text  x="239.97" y="623.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;BaseUi, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (9 samples, 0.05%)</title><rect x="761.5" y="501" width="0.6" height="15.0" fill="rgb(247,112,25)" rx="2" ry="2" />
<text  x="764.54" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_M_lower_bound (337 samples, 1.70%)</title><rect x="764.2" y="469" width="20.0" height="15.0" fill="rgb(213,33,35)" rx="2" ry="2" />
<text  x="767.16" y="479.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::function&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;, void, void&gt; (10 samples, 0.05%)</title><rect x="96.8" y="997" width="0.5" height="15.0" fill="rgb(210,91,9)" rx="2" ry="2" />
<text  x="99.75" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append@plt (8 samples, 0.04%)</title><rect x="627.7" y="677" width="0.5" height="15.0" fill="rgb(253,60,11)" rx="2" ry="2" />
<text  x="630.69" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;Drawable* const&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (21 samples, 0.11%)</title><rect x="50.9" y="997" width="1.3" height="15.0" fill="rgb(236,53,13)" rx="2" ry="2" />
<text  x="53.91" y="1007.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (9 samples, 0.05%)</title><rect x="130.5" y="597" width="0.5" height="15.0" fill="rgb(251,127,19)" rx="2" ry="2" />
<text  x="133.51" y="607.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.01%)</title><rect x="234.5" y="453" width="0.2" height="15.0" fill="rgb(227,227,32)" rx="2" ry="2" />
<text  x="237.53" y="463.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (3 samples, 0.02%)</title><rect x="1180.2" y="725" width="0.2" height="15.0" fill="rgb(207,86,34)" rx="2" ry="2" />
<text  x="1183.24" y="735.5" ></text>
</g>
<g >
<title>Graphics::Draw (18 samples, 0.09%)</title><rect x="331.0" y="885" width="1.1" height="15.0" fill="rgb(229,89,5)" rx="2" ry="2" />
<text  x="333.99" y="895.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (5 samples, 0.03%)</title><rect x="292.6" y="981" width="0.3" height="15.0" fill="rgb(245,66,42)" rx="2" ry="2" />
<text  x="295.65" y="991.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (4 samples, 0.02%)</title><rect x="1146.8" y="821" width="0.3" height="15.0" fill="rgb(228,35,16)" rx="2" ry="2" />
<text  x="1149.83" y="831.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (58 samples, 0.29%)</title><rect x="141.1" y="613" width="3.4" height="15.0" fill="rgb(231,7,31)" rx="2" ry="2" />
<text  x="144.05" y="623.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (40 samples, 0.20%)</title><rect x="141.1" y="533" width="2.3" height="15.0" fill="rgb(249,26,40)" rx="2" ry="2" />
<text  x="144.05" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (2 samples, 0.01%)</title><rect x="1171.9" y="805" width="0.1" height="15.0" fill="rgb(229,203,15)" rx="2" ry="2" />
<text  x="1174.90" y="815.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (44 samples, 0.22%)</title><rect x="258.8" y="693" width="2.6" height="15.0" fill="rgb(208,105,28)" rx="2" ry="2" />
<text  x="261.83" y="703.5" ></text>
</g>
<g >
<title>Bitmap::Create (64 samples, 0.32%)</title><rect x="175.8" y="645" width="3.8" height="15.0" fill="rgb(243,225,32)" rx="2" ry="2" />
<text  x="178.76" y="655.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable*&gt; (745 samples, 3.76%)</title><rect x="893.2" y="437" width="44.4" height="15.0" fill="rgb(223,24,9)" rx="2" ry="2" />
<text  x="896.24" y="447.5" >std:..</text>
</g>
<g >
<title>operator delete (3 samples, 0.02%)</title><rect x="326.2" y="341" width="0.2" height="15.0" fill="rgb(251,33,38)" rx="2" ry="2" />
<text  x="329.23" y="351.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (2 samples, 0.01%)</title><rect x="888.2" y="437" width="0.1" height="15.0" fill="rgb(228,174,21)" rx="2" ry="2" />
<text  x="891.18" y="447.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="75.6" y="997" width="0.1" height="15.0" fill="rgb(226,142,30)" rx="2" ry="2" />
<text  x="78.56" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.05%)</title><rect x="1012.0" y="709" width="0.6" height="15.0" fill="rgb(238,177,22)" rx="2" ry="2" />
<text  x="1014.97" y="719.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (13 samples, 0.07%)</title><rect x="838.1" y="405" width="0.8" height="15.0" fill="rgb(216,60,23)" rx="2" ry="2" />
<text  x="841.11" y="415.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_M_head (8 samples, 0.04%)</title><rect x="774.9" y="341" width="0.5" height="15.0" fill="rgb(218,149,17)" rx="2" ry="2" />
<text  x="777.87" y="351.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (101 samples, 0.51%)</title><rect x="261.4" y="933" width="6.1" height="15.0" fill="rgb(233,117,1)" rx="2" ry="2" />
<text  x="264.45" y="943.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (4 samples, 0.02%)</title><rect x="73.2" y="997" width="0.3" height="15.0" fill="rgb(232,107,1)" rx="2" ry="2" />
<text  x="76.23" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (93 samples, 0.47%)</title><rect x="641.9" y="693" width="5.5" height="15.0" fill="rgb(248,172,13)" rx="2" ry="2" />
<text  x="644.86" y="703.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt;::_M_head (4 samples, 0.02%)</title><rect x="860.3" y="421" width="0.2" height="15.0" fill="rgb(233,126,33)" rx="2" ry="2" />
<text  x="863.26" y="431.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (44 samples, 0.22%)</title><rect x="258.8" y="597" width="2.6" height="15.0" fill="rgb(231,61,2)" rx="2" ry="2" />
<text  x="261.83" y="607.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (189 samples, 0.95%)</title><rect x="828.6" y="453" width="11.3" height="15.0" fill="rgb(242,133,54)" rx="2" ry="2" />
<text  x="831.64" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (35 samples, 0.18%)</title><rect x="1048.6" y="725" width="2.1" height="15.0" fill="rgb(233,149,1)" rx="2" ry="2" />
<text  x="1051.65" y="735.5" ></text>
</g>
<g >
<title>Sprite_Character::Update (2 samples, 0.01%)</title><rect x="1179.4" y="853" width="0.1" height="15.0" fill="rgb(231,227,54)" rx="2" ry="2" />
<text  x="1182.40" y="863.5" ></text>
</g>
<g >
<title>std::forward&lt;int&gt; (4 samples, 0.02%)</title><rect x="95.4" y="997" width="0.2" height="15.0" fill="rgb(229,10,24)" rx="2" ry="2" />
<text  x="98.38" y="1007.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (3 samples, 0.02%)</title><rect x="331.3" y="757" width="0.2" height="15.0" fill="rgb(244,52,0)" rx="2" ry="2" />
<text  x="334.35" y="767.5" ></text>
</g>
<g >
<title>Player::Update (109 samples, 0.55%)</title><rect x="238.2" y="949" width="6.5" height="15.0" fill="rgb(216,214,2)" rx="2" ry="2" />
<text  x="241.16" y="959.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::reset (97 samples, 0.49%)</title><rect x="238.9" y="549" width="5.8" height="15.0" fill="rgb(236,135,22)" rx="2" ry="2" />
<text  x="241.88" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::operator (9 samples, 0.05%)</title><rect x="759.8" y="501" width="0.5" height="15.0" fill="rgb(248,20,6)" rx="2" ry="2" />
<text  x="762.81" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (524 samples, 2.64%)</title><rect x="371.1" y="789" width="31.2" height="15.0" fill="rgb(207,35,19)" rx="2" ry="2" />
<text  x="374.06" y="799.5" >st..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::deallocate (87 samples, 0.44%)</title><rect x="990.5" y="613" width="5.2" height="15.0" fill="rgb(243,12,29)" rx="2" ry="2" />
<text  x="993.48" y="623.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (18 samples, 0.09%)</title><rect x="823.9" y="453" width="1.0" height="15.0" fill="rgb(225,105,13)" rx="2" ry="2" />
<text  x="826.88" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::~new_allocator (6 samples, 0.03%)</title><rect x="52.3" y="997" width="0.4" height="15.0" fill="rgb(229,98,54)" rx="2" ry="2" />
<text  x="55.33" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="1024.1" y="581" width="0.1" height="15.0" fill="rgb(229,123,26)" rx="2" ry="2" />
<text  x="1027.12" y="591.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (58 samples, 0.29%)</title><rect x="141.1" y="757" width="3.4" height="15.0" fill="rgb(209,148,42)" rx="2" ry="2" />
<text  x="144.05" y="767.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 2ul, 3ul&gt;::__less (10 samples, 0.05%)</title><rect x="785.9" y="405" width="0.6" height="15.0" fill="rgb(246,189,17)" rx="2" ry="2" />
<text  x="788.95" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (21 samples, 0.11%)</title><rect x="1084.3" y="757" width="1.3" height="15.0" fill="rgb(208,41,10)" rx="2" ry="2" />
<text  x="1087.31" y="767.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__weak_ptr (6 samples, 0.03%)</title><rect x="685.4" y="597" width="0.3" height="15.0" fill="rgb(220,144,29)" rx="2" ry="2" />
<text  x="688.38" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (3 samples, 0.02%)</title><rect x="45.1" y="997" width="0.1" height="15.0" fill="rgb(243,153,40)" rx="2" ry="2" />
<text  x="48.07" y="1007.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (5 samples, 0.03%)</title><rect x="1021.0" y="741" width="0.3" height="15.0" fill="rgb(247,97,34)" rx="2" ry="2" />
<text  x="1024.02" y="751.5" ></text>
</g>
<g >
<title>Player::Run (4 samples, 0.02%)</title><rect x="326.2" y="981" width="0.3" height="15.0" fill="rgb(229,11,45)" rx="2" ry="2" />
<text  x="329.23" y="991.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (12 samples, 0.06%)</title><rect x="98.7" y="997" width="0.7" height="15.0" fill="rgb(252,164,42)" rx="2" ry="2" />
<text  x="101.72" y="1007.5" ></text>
</g>
<g >
<title>Tone::Tone (5 samples, 0.03%)</title><rect x="1169.6" y="805" width="0.3" height="15.0" fill="rgb(250,193,3)" rx="2" ry="2" />
<text  x="1172.58" y="815.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::~allocator (3 samples, 0.02%)</title><rect x="92.9" y="997" width="0.2" height="15.0" fill="rgb(232,191,37)" rx="2" ry="2" />
<text  x="95.88" y="1007.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::_Vector_base (12 samples, 0.06%)</title><rect x="836.9" y="325" width="0.7" height="15.0" fill="rgb(236,47,40)" rx="2" ry="2" />
<text  x="839.86" y="335.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandControlVariables (2 samples, 0.01%)</title><rect x="27.4" y="997" width="0.1" height="15.0" fill="rgb(206,27,10)" rx="2" ry="2" />
<text  x="30.39" y="1007.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingBackgroundExecution (64 samples, 0.32%)</title><rect x="334.3" y="821" width="3.8" height="15.0" fill="rgb(218,12,28)" rx="2" ry="2" />
<text  x="337.26" y="831.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (166 samples, 0.84%)</title><rect x="131.0" y="645" width="9.9" height="15.0" fill="rgb(211,66,23)" rx="2" ry="2" />
<text  x="134.05" y="655.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (58 samples, 0.29%)</title><rect x="141.1" y="901" width="3.4" height="15.0" fill="rgb(233,62,31)" rx="2" ry="2" />
<text  x="144.05" y="911.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (58 samples, 0.29%)</title><rect x="305.7" y="389" width="3.5" height="15.0" fill="rgb(242,1,36)" rx="2" ry="2" />
<text  x="308.74" y="399.5" ></text>
</g>
<g >
<title>std::_Bit_reference::operator bool (3 samples, 0.02%)</title><rect x="335.2" y="789" width="0.2" height="15.0" fill="rgb(212,33,29)" rx="2" ry="2" />
<text  x="338.22" y="799.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::get (5 samples, 0.03%)</title><rect x="108.7" y="997" width="0.3" height="15.0" fill="rgb(253,3,32)" rx="2" ry="2" />
<text  x="111.72" y="1007.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::_Placeholder&lt;1&gt;&gt; (7 samples, 0.04%)</title><rect x="966.8" y="597" width="0.4" height="15.0" fill="rgb(211,62,42)" rx="2" ry="2" />
<text  x="969.78" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (16 samples, 0.08%)</title><rect x="479.7" y="725" width="1.0" height="15.0" fill="rgb(205,166,37)" rx="2" ry="2" />
<text  x="482.73" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (2 samples, 0.01%)</title><rect x="738.7" y="453" width="0.2" height="15.0" fill="rgb(238,113,50)" rx="2" ry="2" />
<text  x="741.73" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (10 samples, 0.05%)</title><rect x="247.2" y="373" width="0.6" height="15.0" fill="rgb(236,84,16)" rx="2" ry="2" />
<text  x="250.21" y="383.5" ></text>
</g>
<g >
<title>__do_munmap (23 samples, 0.12%)</title><rect x="256.2" y="197" width="1.4" height="15.0" fill="rgb(226,147,25)" rx="2" ry="2" />
<text  x="259.21" y="207.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (53 samples, 0.27%)</title><rect x="665.7" y="581" width="3.1" height="15.0" fill="rgb(243,186,26)" rx="2" ry="2" />
<text  x="668.67" y="591.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Game_Picture*, false&gt;::_Head_base&lt;Game_Picture*&gt; (2 samples, 0.01%)</title><rect x="701.3" y="613" width="0.2" height="15.0" fill="rgb(245,125,15)" rx="2" ry="2" />
<text  x="704.34" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.03%)</title><rect x="623.9" y="581" width="0.4" height="15.0" fill="rgb(233,58,21)" rx="2" ry="2" />
<text  x="626.94" y="591.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (3 samples, 0.02%)</title><rect x="138.0" y="469" width="0.2" height="15.0" fill="rgb(214,200,31)" rx="2" ry="2" />
<text  x="141.01" y="479.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (963 samples, 4.86%)</title><rect x="179.6" y="549" width="57.3" height="15.0" fill="rgb(210,203,54)" rx="2" ry="2" />
<text  x="182.58" y="559.5" >std::m..</text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Impl::~_Impl (3 samples, 0.02%)</title><rect x="989.8" y="613" width="0.1" height="15.0" fill="rgb(245,157,27)" rx="2" ry="2" />
<text  x="992.76" y="623.5" ></text>
</g>
<g >
<title>memmove (2 samples, 0.01%)</title><rect x="944.0" y="341" width="0.1" height="15.0" fill="rgb(212,148,36)" rx="2" ry="2" />
<text  x="946.97" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::operator bool (2 samples, 0.01%)</title><rect x="109.3" y="997" width="0.1" height="15.0" fill="rgb(253,162,22)" rx="2" ry="2" />
<text  x="112.26" y="1007.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned (9 samples, 0.05%)</title><rect x="1026.6" y="709" width="0.5" height="15.0" fill="rgb(205,94,3)" rx="2" ry="2" />
<text  x="1029.56" y="719.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (17 samples, 0.09%)</title><rect x="135.5" y="437" width="1.0" height="15.0" fill="rgb(223,219,16)" rx="2" ry="2" />
<text  x="138.51" y="447.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (3,963 samples, 20.00%)</title><rect x="729.9" y="533" width="236.0" height="15.0" fill="rgb(229,187,9)" rx="2" ry="2" />
<text  x="732.92" y="543.5" >Game_Picture::OnPictureSpriteRe..</text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::end (9 samples, 0.05%)</title><rect x="337.2" y="773" width="0.5" height="15.0" fill="rgb(205,27,14)" rx="2" ry="2" />
<text  x="340.18" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::size (8 samples, 0.04%)</title><rect x="115.4" y="997" width="0.5" height="15.0" fill="rgb(253,164,6)" rx="2" ry="2" />
<text  x="118.39" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (2 samples, 0.01%)</title><rect x="1074.9" y="725" width="0.1" height="15.0" fill="rgb(231,200,46)" rx="2" ry="2" />
<text  x="1077.91" y="735.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (5 samples, 0.03%)</title><rect x="793.2" y="421" width="0.3" height="15.0" fill="rgb(220,23,40)" rx="2" ry="2" />
<text  x="796.15" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator!= (2 samples, 0.01%)</title><rect x="751.4" y="485" width="0.1" height="15.0" fill="rgb(227,109,1)" rx="2" ry="2" />
<text  x="754.41" y="495.5" ></text>
</g>
<g >
<title>std::ostream::_M_insert&lt;long&gt; (3 samples, 0.02%)</title><rect x="1025.6" y="741" width="0.2" height="15.0" fill="rgb(222,105,54)" rx="2" ry="2" />
<text  x="1028.61" y="751.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (15 samples, 0.08%)</title><rect x="858.3" y="485" width="0.9" height="15.0" fill="rgb(238,196,28)" rx="2" ry="2" />
<text  x="861.29" y="495.5" ></text>
</g>
<g >
<title>max&lt;int&gt; (3 samples, 0.02%)</title><rect x="1165.8" y="773" width="0.2" height="15.0" fill="rgb(231,127,15)" rx="2" ry="2" />
<text  x="1168.83" y="783.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (183 samples, 0.92%)</title><rect x="294.8" y="485" width="10.9" height="15.0" fill="rgb(227,222,1)" rx="2" ry="2" />
<text  x="297.85" y="495.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (49 samples, 0.25%)</title><rect x="261.4" y="597" width="3.0" height="15.0" fill="rgb(242,198,46)" rx="2" ry="2" />
<text  x="264.45" y="607.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.04%)</title><rect x="263.9" y="549" width="0.4" height="15.0" fill="rgb(219,190,29)" rx="2" ry="2" />
<text  x="266.89" y="559.5" ></text>
</g>
<g >
<title>Bitmap::Clear (25 samples, 0.13%)</title><rect x="825.8" y="501" width="1.5" height="15.0" fill="rgb(209,78,37)" rx="2" ry="2" />
<text  x="828.84" y="511.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (29 samples, 0.15%)</title><rect x="692.9" y="613" width="1.8" height="15.0" fill="rgb(250,202,23)" rx="2" ry="2" />
<text  x="695.94" y="623.5" ></text>
</g>
<g >
<title>Bitmap::GetOpacity (2 samples, 0.01%)</title><rect x="23.6" y="997" width="0.1" height="15.0" fill="rgb(240,67,35)" rx="2" ry="2" />
<text  x="26.58" y="1007.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;int, std::allocator&lt;int&gt;, int&gt; (170 samples, 0.86%)</title><rect x="670.6" y="677" width="10.1" height="15.0" fill="rgb(240,187,1)" rx="2" ry="2" />
<text  x="673.62" y="687.5" ></text>
</g>
<g >
<title>Cache::Picture (320 samples, 1.61%)</title><rect x="267.5" y="629" width="19.1" height="15.0" fill="rgb(235,202,6)" rx="2" ry="2" />
<text  x="270.52" y="639.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (3 samples, 0.02%)</title><rect x="1182.6" y="661" width="0.2" height="15.0" fill="rgb(226,51,35)" rx="2" ry="2" />
<text  x="1185.62" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_data (2 samples, 0.01%)</title><rect x="1024.4" y="677" width="0.1" height="15.0" fill="rgb(227,133,22)" rx="2" ry="2" />
<text  x="1027.35" y="687.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (3 samples, 0.02%)</title><rect x="888.9" y="453" width="0.2" height="15.0" fill="rgb(253,36,47)" rx="2" ry="2" />
<text  x="891.90" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_S_key (3 samples, 0.02%)</title><rect x="65.7" y="997" width="0.2" height="15.0" fill="rgb(238,55,16)" rx="2" ry="2" />
<text  x="68.67" y="1007.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (32 samples, 0.16%)</title><rect x="778.2" y="389" width="1.9" height="15.0" fill="rgb(232,125,23)" rx="2" ry="2" />
<text  x="781.21" y="399.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;int, std::allocator&lt;int&gt;, int&gt; (5 samples, 0.03%)</title><rect x="90.1" y="997" width="0.3" height="15.0" fill="rgb(217,5,51)" rx="2" ry="2" />
<text  x="93.14" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::base (3 samples, 0.02%)</title><rect x="46.9" y="997" width="0.2" height="15.0" fill="rgb(220,87,52)" rx="2" ry="2" />
<text  x="49.92" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (2 samples, 0.01%)</title><rect x="330.8" y="1013" width="0.1" height="15.0" fill="rgb(205,95,24)" rx="2" ry="2" />
<text  x="333.75" y="1023.5" ></text>
</g>
<g >
<title>Rect::Rect (5 samples, 0.03%)</title><rect x="848.3" y="501" width="0.3" height="15.0" fill="rgb(248,123,40)" rx="2" ry="2" />
<text  x="851.35" y="511.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (4 samples, 0.02%)</title><rect x="326.2" y="613" width="0.3" height="15.0" fill="rgb(252,34,19)" rx="2" ry="2" />
<text  x="329.23" y="623.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::destroy&lt;Bitmap&gt; (53 samples, 0.27%)</title><rect x="241.4" y="405" width="3.2" height="15.0" fill="rgb(221,217,18)" rx="2" ry="2" />
<text  x="244.44" y="415.5" ></text>
</g>
<g >
<title>MakeFlashColor (12 samples, 0.06%)</title><rect x="1164.1" y="789" width="0.7" height="15.0" fill="rgb(240,95,26)" rx="2" ry="2" />
<text  x="1167.10" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (9 samples, 0.05%)</title><rect x="1037.3" y="741" width="0.6" height="15.0" fill="rgb(219,32,10)" rx="2" ry="2" />
<text  x="1040.33" y="751.5" ></text>
</g>
<g >
<title>Player::MainLoop (4 samples, 0.02%)</title><rect x="326.2" y="965" width="0.3" height="15.0" fill="rgb(223,122,6)" rx="2" ry="2" />
<text  x="329.23" y="975.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (2 samples, 0.01%)</title><rect x="885.7" y="469" width="0.1" height="15.0" fill="rgb(225,123,41)" rx="2" ry="2" />
<text  x="888.68" y="479.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (2 samples, 0.01%)</title><rect x="1007.9" y="709" width="0.1" height="15.0" fill="rgb(252,108,17)" rx="2" ry="2" />
<text  x="1010.92" y="719.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (7 samples, 0.04%)</title><rect x="1163.3" y="789" width="0.4" height="15.0" fill="rgb(233,20,44)" rx="2" ry="2" />
<text  x="1166.33" y="799.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (109 samples, 0.55%)</title><rect x="238.2" y="725" width="6.5" height="15.0" fill="rgb(240,93,54)" rx="2" ry="2" />
<text  x="241.16" y="735.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (102 samples, 0.51%)</title><rect x="953.7" y="389" width="6.1" height="15.0" fill="rgb(231,207,35)" rx="2" ry="2" />
<text  x="956.68" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (88 samples, 0.44%)</title><rect x="832.6" y="389" width="5.3" height="15.0" fill="rgb(232,24,15)" rx="2" ry="2" />
<text  x="835.63" y="399.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, FileRequestResult*&amp;&amp;, false&gt;::_Head_base&lt;FileRequestResult*&gt; (2 samples, 0.01%)</title><rect x="967.7" y="581" width="0.1" height="15.0" fill="rgb(220,62,16)" rx="2" ry="2" />
<text  x="970.67" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (29 samples, 0.15%)</title><rect x="507.1" y="741" width="1.7" height="15.0" fill="rgb(209,168,29)" rx="2" ry="2" />
<text  x="510.11" y="751.5" ></text>
</g>
<g >
<title>Player::IsEnglish (3 samples, 0.02%)</title><rect x="34.5" y="997" width="0.2" height="15.0" fill="rgb(212,198,2)" rx="2" ry="2" />
<text  x="37.53" y="1007.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (102 samples, 0.51%)</title><rect x="144.7" y="901" width="6.1" height="15.0" fill="rgb(215,223,39)" rx="2" ry="2" />
<text  x="147.68" y="911.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (154 samples, 0.78%)</title><rect x="296.2" y="469" width="9.2" height="15.0" fill="rgb(248,214,28)" rx="2" ry="2" />
<text  x="299.22" y="479.5" ></text>
</g>
<g >
<title>Bitmap::width (2 samples, 0.01%)</title><rect x="130.2" y="997" width="0.1" height="15.0" fill="rgb(248,213,44)" rx="2" ry="2" />
<text  x="133.16" y="1007.5" ></text>
</g>
<g >
<title>std::forward&lt;std::weak_ptr&lt;int&gt; &gt; (2 samples, 0.01%)</title><rect x="663.3" y="661" width="0.1" height="15.0" fill="rgb(235,20,5)" rx="2" ry="2" />
<text  x="666.29" y="671.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;2ul, bool, false&gt;::_Head_base&lt;bool&amp;&gt; (7 samples, 0.04%)</title><rect x="793.9" y="437" width="0.4" height="15.0" fill="rgb(229,31,26)" rx="2" ry="2" />
<text  x="796.87" y="447.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.03%)</title><rect x="244.8" y="549" width="0.3" height="15.0" fill="rgb(230,113,34)" rx="2" ry="2" />
<text  x="247.83" y="559.5" ></text>
</g>
<g >
<title>main (14,314 samples, 72.23%)</title><rect x="330.9" y="981" width="852.3" height="15.0" fill="rgb(224,42,19)" rx="2" ry="2" />
<text  x="333.93" y="991.5" >main</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (184 samples, 0.93%)</title><rect x="272.8" y="533" width="10.9" height="15.0" fill="rgb(252,88,41)" rx="2" ry="2" />
<text  x="275.76" y="543.5" ></text>
</g>
<g >
<title>malloc (22 samples, 0.11%)</title><rect x="142.1" y="469" width="1.3" height="15.0" fill="rgb(205,111,50)" rx="2" ry="2" />
<text  x="145.06" y="479.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::end (3 samples, 0.02%)</title><rect x="246.9" y="389" width="0.2" height="15.0" fill="rgb(214,26,9)" rx="2" ry="2" />
<text  x="249.92" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt; (41 samples, 0.21%)</title><rect x="1120.6" y="789" width="2.4" height="15.0" fill="rgb(239,105,17)" rx="2" ry="2" />
<text  x="1123.57" y="799.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (13 samples, 0.07%)</title><rect x="686.1" y="629" width="0.8" height="15.0" fill="rgb(217,115,11)" rx="2" ry="2" />
<text  x="689.10" y="639.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandConditionalBranch (677 samples, 3.42%)</title><rect x="473.5" y="773" width="40.3" height="15.0" fill="rgb(215,87,44)" rx="2" ry="2" />
<text  x="476.53" y="783.5" >Gam..</text>
</g>
<g >
<title>clock_gettime@plt (5 samples, 0.03%)</title><rect x="759.3" y="469" width="0.3" height="15.0" fill="rgb(216,91,15)" rx="2" ry="2" />
<text  x="762.27" y="479.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (126 samples, 0.64%)</title><rect x="131.0" y="501" width="7.6" height="15.0" fill="rgb(232,173,2)" rx="2" ry="2" />
<text  x="134.05" y="511.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (238 samples, 1.20%)</title><rect x="244.7" y="933" width="14.1" height="15.0" fill="rgb(251,47,25)" rx="2" ry="2" />
<text  x="247.65" y="943.5" ></text>
</g>
<g >
<title>Scene_Map::Update (109 samples, 0.55%)</title><rect x="238.2" y="933" width="6.5" height="15.0" fill="rgb(205,122,19)" rx="2" ry="2" />
<text  x="241.16" y="943.5" ></text>
</g>
<g >
<title>Sprite::~Sprite (3 samples, 0.02%)</title><rect x="267.3" y="565" width="0.2" height="15.0" fill="rgb(241,142,36)" rx="2" ry="2" />
<text  x="270.28" y="575.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.01%)</title><rect x="161.7" y="517" width="0.1" height="15.0" fill="rgb(213,121,6)" rx="2" ry="2" />
<text  x="164.65" y="527.5" ></text>
</g>
<g >
<title>do_page_fault (4 samples, 0.02%)</title><rect x="138.3" y="453" width="0.3" height="15.0" fill="rgb(232,189,51)" rx="2" ry="2" />
<text  x="141.31" y="463.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;int&gt;::weak_ptr&lt;int, void&gt; (5 samples, 0.03%)</title><rect x="120.5" y="997" width="0.3" height="15.0" fill="rgb(251,39,7)" rx="2" ry="2" />
<text  x="123.51" y="1007.5" ></text>
</g>
<g >
<title>std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt;&amp;, true&gt; (116 samples, 0.59%)</title><rect x="663.2" y="677" width="6.9" height="15.0" fill="rgb(208,13,4)" rx="2" ry="2" />
<text  x="666.17" y="687.5" ></text>
</g>
<g >
<title>std::swap&lt;int*&gt; (14 samples, 0.07%)</title><rect x="985.3" y="677" width="0.8" height="15.0" fill="rgb(225,52,35)" rx="2" ry="2" />
<text  x="988.30" y="687.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (8 samples, 0.04%)</title><rect x="244.7" y="581" width="0.4" height="15.0" fill="rgb(242,20,11)" rx="2" ry="2" />
<text  x="247.65" y="591.5" ></text>
</g>
<g >
<title>__interceptor_free (4 samples, 0.02%)</title><rect x="958.1" y="293" width="0.3" height="15.0" fill="rgb(228,77,0)" rx="2" ry="2" />
<text  x="961.14" y="303.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (102 samples, 0.51%)</title><rect x="144.7" y="885" width="6.1" height="15.0" fill="rgb(218,12,15)" rx="2" ry="2" />
<text  x="147.68" y="895.5" ></text>
</g>
<g >
<title>operator new (104 samples, 0.52%)</title><rect x="878.5" y="517" width="6.2" height="15.0" fill="rgb(207,134,18)" rx="2" ry="2" />
<text  x="881.48" y="527.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::operator= (3 samples, 0.02%)</title><rect x="839.2" y="405" width="0.2" height="15.0" fill="rgb(213,59,44)" rx="2" ry="2" />
<text  x="842.18" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;Sprite&gt; &gt;::_M_head (2 samples, 0.01%)</title><rect x="965.7" y="437" width="0.1" height="15.0" fill="rgb(235,152,41)" rx="2" ry="2" />
<text  x="968.71" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (7 samples, 0.04%)</title><rect x="126.3" y="997" width="0.4" height="15.0" fill="rgb(222,33,37)" rx="2" ry="2" />
<text  x="129.29" y="1007.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Drawable*&gt; &gt;::construct&lt;Drawable*, Drawable* const&amp;&gt; (19 samples, 0.10%)</title><rect x="875.7" y="469" width="1.2" height="15.0" fill="rgb(238,178,18)" rx="2" ry="2" />
<text  x="878.74" y="479.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::~_Sp_counted_ptr_inplace (17 samples, 0.09%)</title><rect x="951.7" y="373" width="1.0" height="15.0" fill="rgb(208,117,23)" rx="2" ry="2" />
<text  x="954.65" y="383.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (49 samples, 0.25%)</title><rect x="264.4" y="565" width="2.9" height="15.0" fill="rgb(206,120,52)" rx="2" ry="2" />
<text  x="267.36" y="575.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (174 samples, 0.88%)</title><rect x="970.1" y="597" width="10.3" height="15.0" fill="rgb(250,134,37)" rx="2" ry="2" />
<text  x="973.05" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::basic_string (2 samples, 0.01%)</title><rect x="1025.1" y="725" width="0.1" height="15.0" fill="rgb(215,179,35)" rx="2" ry="2" />
<text  x="1028.07" y="735.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (68 samples, 0.34%)</title><rect x="681.8" y="661" width="4.0" height="15.0" fill="rgb(246,101,36)" rx="2" ry="2" />
<text  x="684.75" y="671.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.01%)</title><rect x="1182.6" y="613" width="0.1" height="15.0" fill="rgb(208,68,12)" rx="2" ry="2" />
<text  x="1185.62" y="623.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (9 samples, 0.05%)</title><rect x="130.5" y="869" width="0.5" height="15.0" fill="rgb(224,16,9)" rx="2" ry="2" />
<text  x="133.51" y="879.5" ></text>
</g>
<g >
<title>Bitmap::Init (40 samples, 0.20%)</title><rect x="141.1" y="517" width="2.3" height="15.0" fill="rgb(206,189,23)" rx="2" ry="2" />
<text  x="144.05" y="527.5" ></text>
</g>
<g >
<title>__GI___nanosleep (26 samples, 0.13%)</title><rect x="1180.9" y="821" width="1.5" height="15.0" fill="rgb(241,183,3)" rx="2" ry="2" />
<text  x="1183.89" y="831.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.05%)</title><rect x="130.5" y="501" width="0.5" height="15.0" fill="rgb(210,72,53)" rx="2" ry="2" />
<text  x="133.51" y="511.5" ></text>
</g>
<g >
<title>operator delete (109 samples, 0.55%)</title><rect x="703.7" y="645" width="6.5" height="15.0" fill="rgb(223,43,38)" rx="2" ry="2" />
<text  x="706.72" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_ptr (3 samples, 0.02%)</title><rect x="44.5" y="997" width="0.2" height="15.0" fill="rgb(211,82,28)" rx="2" ry="2" />
<text  x="47.47" y="1007.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (6 samples, 0.03%)</title><rect x="860.7" y="501" width="0.3" height="15.0" fill="rgb(219,40,49)" rx="2" ry="2" />
<text  x="863.67" y="511.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (349 samples, 1.76%)</title><rect x="267.5" y="805" width="20.8" height="15.0" fill="rgb(242,213,28)" rx="2" ry="2" />
<text  x="270.52" y="815.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (64 samples, 0.32%)</title><rect x="175.8" y="597" width="3.8" height="15.0" fill="rgb(205,51,18)" rx="2" ry="2" />
<text  x="178.76" y="607.5" ></text>
</g>
<g >
<title>zap_page_range (8 samples, 0.04%)</title><rect x="257.9" y="213" width="0.5" height="15.0" fill="rgb(254,89,7)" rx="2" ry="2" />
<text  x="260.93" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::operator== (2 samples, 0.01%)</title><rect x="785.1" y="469" width="0.1" height="15.0" fill="rgb(246,152,21)" rx="2" ry="2" />
<text  x="788.12" y="479.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (59 samples, 0.30%)</title><rect x="172.3" y="533" width="3.5" height="15.0" fill="rgb(252,225,41)" rx="2" ry="2" />
<text  x="175.25" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::get (7 samples, 0.04%)</title><rect x="713.1" y="677" width="0.4" height="15.0" fill="rgb(226,136,37)" rx="2" ry="2" />
<text  x="716.07" y="687.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (64 samples, 0.32%)</title><rect x="175.8" y="565" width="3.8" height="15.0" fill="rgb(251,197,16)" rx="2" ry="2" />
<text  x="178.76" y="575.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (136 samples, 0.69%)</title><rect x="131.0" y="549" width="8.1" height="15.0" fill="rgb(207,26,5)" rx="2" ry="2" />
<text  x="134.05" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (3 samples, 0.02%)</title><rect x="125.9" y="997" width="0.1" height="15.0" fill="rgb(229,43,1)" rx="2" ry="2" />
<text  x="128.87" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt;::__normal_iterator (11 samples, 0.06%)</title><rect x="1125.1" y="773" width="0.7" height="15.0" fill="rgb(212,27,39)" rx="2" ry="2" />
<text  x="1128.10" y="783.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (101 samples, 0.51%)</title><rect x="261.4" y="709" width="6.1" height="15.0" fill="rgb(207,218,17)" rx="2" ry="2" />
<text  x="264.45" y="719.5" ></text>
</g>
<g >
<title>Sprite::Flash (13 samples, 0.07%)</title><rect x="1004.9" y="725" width="0.8" height="15.0" fill="rgb(243,164,48)" rx="2" ry="2" />
<text  x="1007.88" y="735.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_base (6 samples, 0.03%)</title><rect x="673.6" y="597" width="0.4" height="15.0" fill="rgb(245,74,46)" rx="2" ry="2" />
<text  x="676.59" y="607.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (164 samples, 0.83%)</title><rect x="986.1" y="677" width="9.8" height="15.0" fill="rgb(214,116,4)" rx="2" ry="2" />
<text  x="989.13" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (46 samples, 0.23%)</title><rect x="697.5" y="629" width="2.8" height="15.0" fill="rgb(227,147,46)" rx="2" ry="2" />
<text  x="700.53" y="639.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.01%)</title><rect x="646.9" y="421" width="0.1" height="15.0" fill="rgb(250,90,6)" rx="2" ry="2" />
<text  x="649.86" y="431.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 2ul, 3ul&gt;::__less (23 samples, 0.12%)</title><rect x="771.1" y="389" width="1.3" height="15.0" fill="rgb(252,31,6)" rx="2" ry="2" />
<text  x="774.06" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (49 samples, 0.25%)</title><rect x="167.7" y="533" width="2.9" height="15.0" fill="rgb(242,136,1)" rx="2" ry="2" />
<text  x="170.73" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (6 samples, 0.03%)</title><rect x="851.8" y="405" width="0.4" height="15.0" fill="rgb(253,188,22)" rx="2" ry="2" />
<text  x="854.80" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Drawable* const*, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;::__normal_iterator (4 samples, 0.02%)</title><rect x="947.9" y="405" width="0.2" height="15.0" fill="rgb(231,58,22)" rx="2" ry="2" />
<text  x="950.90" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator++ (7 samples, 0.04%)</title><rect x="618.5" y="693" width="0.4" height="15.0" fill="rgb(219,19,7)" rx="2" ry="2" />
<text  x="621.46" y="703.5" ></text>
</g>
<g >
<title>Bitmap::Create (166 samples, 0.84%)</title><rect x="131.0" y="725" width="9.9" height="15.0" fill="rgb(238,160,47)" rx="2" ry="2" />
<text  x="134.05" y="735.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="141.9" y="453" width="0.2" height="15.0" fill="rgb(205,189,18)" rx="2" ry="2" />
<text  x="144.94" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::deallocate (6 samples, 0.03%)</title><rect x="309.2" y="357" width="0.4" height="15.0" fill="rgb(243,182,47)" rx="2" ry="2" />
<text  x="312.20" y="367.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (1,304 samples, 6.58%)</title><rect x="159.3" y="949" width="77.6" height="15.0" fill="rgb(231,35,49)" rx="2" ry="2" />
<text  x="162.27" y="959.5" >Game_Int..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (48 samples, 0.24%)</title><rect x="644.5" y="661" width="2.8" height="15.0" fill="rgb(223,166,39)" rx="2" ry="2" />
<text  x="647.48" y="671.5" ></text>
</g>
<g >
<title>FileRequestResult::~FileRequestResult (61 samples, 0.31%)</title><rect x="716.8" y="677" width="3.6" height="15.0" fill="rgb(219,140,40)" rx="2" ry="2" />
<text  x="719.76" y="687.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (102 samples, 0.51%)</title><rect x="144.7" y="597" width="6.1" height="15.0" fill="rgb(216,77,35)" rx="2" ry="2" />
<text  x="147.68" y="607.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (60 samples, 0.30%)</title><rect x="176.0" y="485" width="3.6" height="15.0" fill="rgb(251,37,4)" rx="2" ry="2" />
<text  x="179.00" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_left (2 samples, 0.01%)</title><rect x="757.8" y="453" width="0.1" height="15.0" fill="rgb(210,109,34)" rx="2" ry="2" />
<text  x="760.79" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_key (5 samples, 0.03%)</title><rect x="658.5" y="677" width="0.3" height="15.0" fill="rgb(252,125,37)" rx="2" ry="2" />
<text  x="661.53" y="687.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (101 samples, 0.51%)</title><rect x="261.4" y="981" width="6.1" height="15.0" fill="rgb(251,19,54)" rx="2" ry="2" />
<text  x="264.45" y="991.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (5 samples, 0.03%)</title><rect x="292.6" y="869" width="0.3" height="15.0" fill="rgb(225,87,27)" rx="2" ry="2" />
<text  x="295.65" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (7 samples, 0.04%)</title><rect x="1074.8" y="741" width="0.4" height="15.0" fill="rgb(250,28,40)" rx="2" ry="2" />
<text  x="1077.79" y="751.5" ></text>
</g>
<g >
<title>Sprite::Sprite (6 samples, 0.03%)</title><rect x="36.9" y="997" width="0.4" height="15.0" fill="rgb(235,140,48)" rx="2" ry="2" />
<text  x="39.91" y="1007.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (3 samples, 0.02%)</title><rect x="893.1" y="421" width="0.1" height="15.0" fill="rgb(220,200,12)" rx="2" ry="2" />
<text  x="896.06" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::destroy&lt;Bitmap&gt; (185 samples, 0.93%)</title><rect x="247.8" y="437" width="11.0" height="15.0" fill="rgb(231,122,28)" rx="2" ry="2" />
<text  x="250.81" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Drawable*&gt; &gt;::construct&lt;Drawable*, Drawable* const&amp;&gt; (5 samples, 0.03%)</title><rect x="93.2" y="997" width="0.3" height="15.0" fill="rgb(249,161,46)" rx="2" ry="2" />
<text  x="96.24" y="1007.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Game_Screen*, false&gt;::_M_head (2 samples, 0.01%)</title><rect x="860.4" y="405" width="0.1" height="15.0" fill="rgb(251,114,12)" rx="2" ry="2" />
<text  x="863.38" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;::operator* (84 samples, 0.42%)</title><rect x="932.3" y="373" width="5.0" height="15.0" fill="rgb(234,219,19)" rx="2" ry="2" />
<text  x="935.30" y="383.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (514 samples, 2.59%)</title><rect x="294.8" y="693" width="30.7" height="15.0" fill="rgb(235,213,6)" rx="2" ry="2" />
<text  x="297.85" y="703.5" >Fi..</text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (166 samples, 0.84%)</title><rect x="131.0" y="853" width="9.9" height="15.0" fill="rgb(218,100,18)" rx="2" ry="2" />
<text  x="134.05" y="863.5" ></text>
</g>
<g >
<title>rw_verify_area (3 samples, 0.02%)</title><rect x="20.9" y="933" width="0.2" height="15.0" fill="rgb(217,194,31)" rx="2" ry="2" />
<text  x="23.90" y="943.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_Rb_tree_iterator (3 samples, 0.02%)</title><rect x="784.9" y="453" width="0.2" height="15.0" fill="rgb(233,86,47)" rx="2" ry="2" />
<text  x="787.94" y="463.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (32 samples, 0.16%)</title><rect x="306.3" y="293" width="1.9" height="15.0" fill="rgb(249,171,46)" rx="2" ry="2" />
<text  x="309.28" y="303.5" ></text>
</g>
<g >
<title>Sprite::~Sprite (1,157 samples, 5.84%)</title><rect x="891.1" y="469" width="68.9" height="15.0" fill="rgb(205,43,9)" rx="2" ry="2" />
<text  x="894.10" y="479.5" >Sprite:..</text>
</g>
<g >
<title>Bitmap::GetOpacity (2 samples, 0.01%)</title><rect x="801.4" y="485" width="0.1" height="15.0" fill="rgb(211,204,18)" rx="2" ry="2" />
<text  x="804.37" y="495.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (169 samples, 0.85%)</title><rect x="949.9" y="405" width="10.1" height="15.0" fill="rgb(236,39,15)" rx="2" ry="2" />
<text  x="952.93" y="415.5" ></text>
</g>
<g >
<title>wp_page_copy (3 samples, 0.02%)</title><rect x="138.4" y="373" width="0.2" height="15.0" fill="rgb(228,84,39)" rx="2" ry="2" />
<text  x="141.37" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (2 samples, 0.01%)</title><rect x="1180.3" y="629" width="0.1" height="15.0" fill="rgb(224,127,9)" rx="2" ry="2" />
<text  x="1183.29" y="639.5" ></text>
</g>
<g >
<title>operator new (68 samples, 0.34%)</title><rect x="696.2" y="661" width="4.1" height="15.0" fill="rgb(218,101,28)" rx="2" ry="2" />
<text  x="699.22" y="671.5" ></text>
</g>
<g >
<title>pixman_image_composite32@plt (5 samples, 0.03%)</title><rect x="825.5" y="485" width="0.3" height="15.0" fill="rgb(214,15,37)" rx="2" ry="2" />
<text  x="828.54" y="495.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Graphics::State, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (4 samples, 0.02%)</title><rect x="874.7" y="469" width="0.3" height="15.0" fill="rgb(209,177,9)" rx="2" ry="2" />
<text  x="877.73" y="479.5" ></text>
</g>
<g >
<title>Cache::SystemOrBlack (3 samples, 0.02%)</title><rect x="1179.6" y="837" width="0.2" height="15.0" fill="rgb(218,126,43)" rx="2" ry="2" />
<text  x="1182.58" y="847.5" ></text>
</g>
<g >
<title>Game_Interpreter::IsAsyncPending (2 samples, 0.01%)</title><rect x="1148.6" y="837" width="0.1" height="15.0" fill="rgb(246,96,11)" rx="2" ry="2" />
<text  x="1151.62" y="847.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.03%)</title><rect x="154.7" y="549" width="0.3" height="15.0" fill="rgb(246,140,32)" rx="2" ry="2" />
<text  x="157.75" y="559.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (4 samples, 0.02%)</title><rect x="127.3" y="997" width="0.2" height="15.0" fill="rgb(208,185,53)" rx="2" ry="2" />
<text  x="130.30" y="1007.5" ></text>
</g>
<g >
<title>__libc_recvmsg (3 samples, 0.02%)</title><rect x="1182.6" y="709" width="0.2" height="15.0" fill="rgb(219,4,9)" rx="2" ry="2" />
<text  x="1185.62" y="719.5" ></text>
</g>
<g >
<title>Sprite::SetTone (12 samples, 0.06%)</title><rect x="1167.2" y="805" width="0.7" height="15.0" fill="rgb(252,68,34)" rx="2" ry="2" />
<text  x="1170.20" y="815.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (4 samples, 0.02%)</title><rect x="1009.4" y="693" width="0.2" height="15.0" fill="rgb(240,208,33)" rx="2" ry="2" />
<text  x="1012.41" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (25 samples, 0.13%)</title><rect x="174.2" y="501" width="1.4" height="15.0" fill="rgb(205,210,41)" rx="2" ry="2" />
<text  x="177.16" y="511.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 3ul, 3ul&gt;::__less (9 samples, 0.05%)</title><rect x="86.6" y="997" width="0.6" height="15.0" fill="rgb(208,10,26)" rx="2" ry="2" />
<text  x="89.63" y="1007.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (3 samples, 0.02%)</title><rect x="267.3" y="501" width="0.2" height="15.0" fill="rgb(234,154,45)" rx="2" ry="2" />
<text  x="270.28" y="511.5" ></text>
</g>
<g >
<title>std::__distance&lt;char*&gt; (7 samples, 0.04%)</title><rect x="78.4" y="997" width="0.4" height="15.0" fill="rgb(210,53,42)" rx="2" ry="2" />
<text  x="81.41" y="1007.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Transition*, std::default_delete&lt;Transition&gt; &gt; (3 samples, 0.02%)</title><rect x="713.7" y="645" width="0.1" height="15.0" fill="rgb(247,33,10)" rx="2" ry="2" />
<text  x="716.67" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (2 samples, 0.01%)</title><rect x="1075.1" y="709" width="0.1" height="15.0" fill="rgb(223,73,2)" rx="2" ry="2" />
<text  x="1078.08" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (7 samples, 0.04%)</title><rect x="686.3" y="613" width="0.5" height="15.0" fill="rgb(214,33,36)" rx="2" ry="2" />
<text  x="689.34" y="623.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Picture*, std::_Placeholder&lt;1&gt; &gt;::_M_head (3 samples, 0.02%)</title><rect x="701.5" y="613" width="0.2" height="15.0" fill="rgb(229,127,38)" rx="2" ry="2" />
<text  x="704.52" y="623.5" ></text>
</g>
<g >
<title>Sprite::SetOx (2 samples, 0.01%)</title><rect x="36.4" y="997" width="0.2" height="15.0" fill="rgb(235,83,44)" rx="2" ry="2" />
<text  x="39.44" y="1007.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (21 samples, 0.11%)</title><rect x="1181.1" y="629" width="1.3" height="15.0" fill="rgb(213,191,22)" rx="2" ry="2" />
<text  x="1184.13" y="639.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.03%)</title><rect x="138.8" y="453" width="0.3" height="15.0" fill="rgb(221,224,10)" rx="2" ry="2" />
<text  x="141.79" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Drawable* const*, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;::__normal_iterator&lt;Drawable**&gt; (3 samples, 0.02%)</title><rect x="892.6" y="437" width="0.2" height="15.0" fill="rgb(222,26,50)" rx="2" ry="2" />
<text  x="895.65" y="447.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (238 samples, 1.20%)</title><rect x="244.7" y="965" width="14.1" height="15.0" fill="rgb(230,179,21)" rx="2" ry="2" />
<text  x="247.65" y="975.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (4 samples, 0.02%)</title><rect x="858.4" y="469" width="0.2" height="15.0" fill="rgb(241,104,16)" rx="2" ry="2" />
<text  x="861.35" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt;::begin (8 samples, 0.04%)</title><rect x="937.6" y="437" width="0.5" height="15.0" fill="rgb(207,34,35)" rx="2" ry="2" />
<text  x="940.60" y="447.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (61 samples, 0.31%)</title><rect x="144.7" y="469" width="3.6" height="15.0" fill="rgb(217,68,14)" rx="2" ry="2" />
<text  x="147.68" y="479.5" ></text>
</g>
<g >
<title>Window_Base::Update (3 samples, 0.02%)</title><rect x="1179.6" y="853" width="0.2" height="15.0" fill="rgb(242,172,28)" rx="2" ry="2" />
<text  x="1182.58" y="863.5" ></text>
</g>
<g >
<title>__libc_start_main (515 samples, 2.60%)</title><rect x="294.8" y="997" width="30.7" height="15.0" fill="rgb(253,44,33)" rx="2" ry="2" />
<text  x="297.79" y="1007.5" >__..</text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_destroy (3 samples, 0.02%)</title><rect x="61.4" y="997" width="0.2" height="15.0" fill="rgb(253,46,7)" rx="2" ry="2" />
<text  x="64.38" y="1007.5" ></text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;Bitmap&gt;, true&gt;::_Sp_ebo_helper (2 samples, 0.01%)</title><rect x="72.1" y="997" width="0.1" height="15.0" fill="rgb(227,103,42)" rx="2" ry="2" />
<text  x="75.10" y="1007.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (5 samples, 0.03%)</title><rect x="788.1" y="421" width="0.3" height="15.0" fill="rgb(211,74,34)" rx="2" ry="2" />
<text  x="791.09" y="431.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (254 samples, 1.28%)</title><rect x="769.0" y="437" width="15.1" height="15.0" fill="rgb(218,50,30)" rx="2" ry="2" />
<text  x="771.98" y="447.5" ></text>
</g>
<g >
<title>__interceptor_recvmsg (3 samples, 0.02%)</title><rect x="1180.2" y="709" width="0.2" height="15.0" fill="rgb(210,132,44)" rx="2" ry="2" />
<text  x="1183.24" y="719.5" ></text>
</g>
<g >
<title>__GI___poll (2 samples, 0.01%)</title><rect x="1180.8" y="773" width="0.1" height="15.0" fill="rgb(241,93,29)" rx="2" ry="2" />
<text  x="1183.77" y="783.5" ></text>
</g>
<g >
<title>std::bitset&lt;36ul&gt;::reference::operator= (2 samples, 0.01%)</title><rect x="332.7" y="885" width="0.1" height="15.0" fill="rgb(242,4,32)" rx="2" ry="2" />
<text  x="335.66" y="895.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (35 samples, 0.18%)</title><rect x="792.3" y="469" width="2.1" height="15.0" fill="rgb(213,195,37)" rx="2" ry="2" />
<text  x="795.32" y="479.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (2 samples, 0.01%)</title><rect x="80.3" y="997" width="0.1" height="15.0" fill="rgb(235,1,32)" rx="2" ry="2" />
<text  x="83.26" y="1007.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (59 samples, 0.30%)</title><rect x="150.8" y="613" width="3.5" height="15.0" fill="rgb(217,149,42)" rx="2" ry="2" />
<text  x="153.76" y="623.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (4 samples, 0.02%)</title><rect x="1178.9" y="789" width="0.2" height="15.0" fill="rgb(247,101,39)" rx="2" ry="2" />
<text  x="1181.87" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data@plt (2 samples, 0.01%)</title><rect x="793.0" y="421" width="0.1" height="15.0" fill="rgb(230,177,50)" rx="2" ry="2" />
<text  x="795.98" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_valptr (7 samples, 0.04%)</title><rect x="754.1" y="405" width="0.4" height="15.0" fill="rgb(222,127,19)" rx="2" ry="2" />
<text  x="757.09" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (14 samples, 0.07%)</title><rect x="418.0" y="757" width="0.8" height="15.0" fill="rgb(210,213,47)" rx="2" ry="2" />
<text  x="420.98" y="767.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (3 samples, 0.02%)</title><rect x="267.3" y="549" width="0.2" height="15.0" fill="rgb(250,117,51)" rx="2" ry="2" />
<text  x="270.28" y="559.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (8 samples, 0.04%)</title><rect x="885.3" y="485" width="0.5" height="15.0" fill="rgb(224,88,26)" rx="2" ry="2" />
<text  x="888.32" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (7 samples, 0.04%)</title><rect x="888.7" y="501" width="0.4" height="15.0" fill="rgb(250,188,45)" rx="2" ry="2" />
<text  x="891.66" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (176 samples, 0.89%)</title><rect x="273.2" y="517" width="10.5" height="15.0" fill="rgb(206,101,21)" rx="2" ry="2" />
<text  x="276.23" y="527.5" ></text>
</g>
<g >
<title>sync_regs (9 samples, 0.05%)</title><rect x="298.6" y="437" width="0.5" height="15.0" fill="rgb(243,47,6)" rx="2" ry="2" />
<text  x="301.60" y="447.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (10 samples, 0.05%)</title><rect x="886.6" y="469" width="0.6" height="15.0" fill="rgb(212,4,3)" rx="2" ry="2" />
<text  x="889.57" y="479.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator() (8 samples, 0.04%)</title><rect x="69.5" y="997" width="0.5" height="15.0" fill="rgb(254,215,32)" rx="2" ry="2" />
<text  x="72.54" y="1007.5" ></text>
</g>
<g >
<title>Player::Run (515 samples, 2.60%)</title><rect x="294.8" y="965" width="30.7" height="15.0" fill="rgb(245,65,25)" rx="2" ry="2" />
<text  x="297.79" y="975.5" >Pl..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::_M_ptr (5 samples, 0.03%)</title><rect x="87.2" y="997" width="0.3" height="15.0" fill="rgb(206,17,13)" rx="2" ry="2" />
<text  x="90.17" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.02%)</title><rect x="760.8" y="485" width="0.2" height="15.0" fill="rgb(239,215,25)" rx="2" ry="2" />
<text  x="763.82" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::get (2 samples, 0.01%)</title><rect x="601.1" y="741" width="0.2" height="15.0" fill="rgb(232,105,1)" rx="2" ry="2" />
<text  x="604.13" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_M_begin (2 samples, 0.01%)</title><rect x="65.5" y="997" width="0.1" height="15.0" fill="rgb(237,125,13)" rx="2" ry="2" />
<text  x="68.49" y="1007.5" ></text>
</g>
<g >
<title>FileRequestAsync::Bind&lt;Game_Picture&gt; (2 samples, 0.01%)</title><rect x="26.5" y="997" width="0.1" height="15.0" fill="rgb(233,182,22)" rx="2" ry="2" />
<text  x="29.49" y="1007.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::~__allocated_ptr (26 samples, 0.13%)</title><rect x="259.9" y="437" width="1.5" height="15.0" fill="rgb(226,5,42)" rx="2" ry="2" />
<text  x="262.90" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::end (3 samples, 0.02%)</title><rect x="246.9" y="373" width="0.2" height="15.0" fill="rgb(220,209,36)" rx="2" ry="2" />
<text  x="249.92" y="383.5" ></text>
</g>
<g >
<title>pthread_getspecific@plt (2 samples, 0.01%)</title><rect x="286.5" y="517" width="0.1" height="15.0" fill="rgb(251,185,38)" rx="2" ry="2" />
<text  x="289.45" y="527.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::_M_ptr (9 samples, 0.05%)</title><rect x="1147.8" y="789" width="0.5" height="15.0" fill="rgb(232,148,22)" rx="2" ry="2" />
<text  x="1150.78" y="799.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (4 samples, 0.02%)</title><rect x="326.2" y="453" width="0.3" height="15.0" fill="rgb(229,2,54)" rx="2" ry="2" />
<text  x="329.23" y="463.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_M_head (10 samples, 0.05%)</title><rect x="779.5" y="357" width="0.6" height="15.0" fill="rgb(247,93,3)" rx="2" ry="2" />
<text  x="782.52" y="367.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (73 samples, 0.37%)</title><rect x="1028.3" y="709" width="4.4" height="15.0" fill="rgb(241,75,26)" rx="2" ry="2" />
<text  x="1031.34" y="719.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (238 samples, 1.20%)</title><rect x="244.7" y="693" width="14.1" height="15.0" fill="rgb(213,141,22)" rx="2" ry="2" />
<text  x="247.65" y="703.5" ></text>
</g>
<g >
<title>PicPointerPatch::ReplaceName (45 samples, 0.23%)</title><rect x="1023.1" y="757" width="2.7" height="15.0" fill="rgb(219,86,9)" rx="2" ry="2" />
<text  x="1026.10" y="767.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (349 samples, 1.76%)</title><rect x="267.5" y="885" width="20.8" height="15.0" fill="rgb(242,159,19)" rx="2" ry="2" />
<text  x="270.52" y="895.5" ></text>
</g>
<g >
<title>find_vma (3 samples, 0.02%)</title><rect x="256.2" y="181" width="0.2" height="15.0" fill="rgb(250,11,25)" rx="2" ry="2" />
<text  x="259.21" y="191.5" ></text>
</g>
<g >
<title>Bitmap::~Bitmap (4 samples, 0.02%)</title><rect x="24.7" y="997" width="0.2" height="15.0" fill="rgb(249,99,18)" rx="2" ry="2" />
<text  x="27.71" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base (11 samples, 0.06%)</title><rect x="750.6" y="437" width="0.7" height="15.0" fill="rgb(233,0,26)" rx="2" ry="2" />
<text  x="753.64" y="447.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (102 samples, 0.51%)</title><rect x="144.7" y="677" width="6.1" height="15.0" fill="rgb(244,195,49)" rx="2" ry="2" />
<text  x="147.68" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;Drawable* const&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="896.0" y="405" width="0.2" height="15.0" fill="rgb(242,157,36)" rx="2" ry="2" />
<text  x="899.04" y="415.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (6 samples, 0.03%)</title><rect x="783.6" y="421" width="0.4" height="15.0" fill="rgb(237,73,34)" rx="2" ry="2" />
<text  x="786.63" y="431.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (2 samples, 0.01%)</title><rect x="331.4" y="741" width="0.1" height="15.0" fill="rgb(241,185,3)" rx="2" ry="2" />
<text  x="334.41" y="751.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.01%)</title><rect x="646.9" y="437" width="0.1" height="15.0" fill="rgb(211,152,2)" rx="2" ry="2" />
<text  x="649.86" y="447.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_clone (83 samples, 0.42%)</title><rect x="689.9" y="677" width="5.0" height="15.0" fill="rgb(233,116,18)" rx="2" ry="2" />
<text  x="692.91" y="687.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (4 samples, 0.02%)</title><rect x="694.9" y="693" width="0.2" height="15.0" fill="rgb(231,116,41)" rx="2" ry="2" />
<text  x="697.85" y="703.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt;::_M_head (2 samples, 0.01%)</title><rect x="1178.3" y="773" width="0.1" height="15.0" fill="rgb(218,102,2)" rx="2" ry="2" />
<text  x="1181.27" y="783.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (13 samples, 0.07%)</title><rect x="1170.0" y="805" width="0.8" height="15.0" fill="rgb(235,22,9)" rx="2" ry="2" />
<text  x="1172.99" y="815.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, Game_Picture*, std::_Placeholder&lt;1&gt; &gt; (7 samples, 0.04%)</title><rect x="966.8" y="613" width="0.4" height="15.0" fill="rgb(211,103,0)" rx="2" ry="2" />
<text  x="969.78" y="623.5" ></text>
</g>
<g >
<title>std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;::pair (62 samples, 0.31%)</title><rect x="682.0" y="629" width="3.7" height="15.0" fill="rgb(232,74,18)" rx="2" ry="2" />
<text  x="685.05" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (83 samples, 0.42%)</title><rect x="832.8" y="373" width="5.0" height="15.0" fill="rgb(239,160,29)" rx="2" ry="2" />
<text  x="835.81" y="383.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (2 samples, 0.01%)</title><rect x="21.6" y="1013" width="0.1" height="15.0" fill="rgb(235,50,12)" rx="2" ry="2" />
<text  x="24.61" y="1023.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="150.3" y="437" width="0.3" height="15.0" fill="rgb(217,55,24)" rx="2" ry="2" />
<text  x="153.34" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::push_back (5 samples, 0.03%)</title><rect x="119.9" y="997" width="0.3" height="15.0" fill="rgb(245,58,41)" rx="2" ry="2" />
<text  x="122.91" y="1007.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (109 samples, 0.55%)</title><rect x="238.2" y="613" width="6.5" height="15.0" fill="rgb(205,109,29)" rx="2" ry="2" />
<text  x="241.16" y="623.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, Game_Picture*, std::_Placeholder&lt;1&gt; &gt; (2 samples, 0.01%)</title><rect x="99.9" y="997" width="0.1" height="15.0" fill="rgb(248,148,23)" rx="2" ry="2" />
<text  x="102.91" y="1007.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::destroy&lt;Bitmap&gt; (9 samples, 0.05%)</title><rect x="237.6" y="421" width="0.6" height="15.0" fill="rgb(247,160,50)" rx="2" ry="2" />
<text  x="240.63" y="431.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (20 samples, 0.10%)</title><rect x="719.0" y="613" width="1.2" height="15.0" fill="rgb(225,190,2)" rx="2" ry="2" />
<text  x="721.96" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (25 samples, 0.13%)</title><rect x="962.6" y="421" width="1.5" height="15.0" fill="rgb(244,50,19)" rx="2" ry="2" />
<text  x="965.61" y="431.5" ></text>
</g>
<g >
<title>min&lt;int&gt; (2 samples, 0.01%)</title><rect x="1169.8" y="789" width="0.1" height="15.0" fill="rgb(227,101,46)" rx="2" ry="2" />
<text  x="1172.76" y="799.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="958.7" y="293" width="0.1" height="15.0" fill="rgb(219,30,11)" rx="2" ry="2" />
<text  x="961.68" y="303.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (1,304 samples, 6.58%)</title><rect x="159.3" y="837" width="77.6" height="15.0" fill="rgb(207,146,41)" rx="2" ry="2" />
<text  x="162.27" y="847.5" >FileRequ..</text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (4 samples, 0.02%)</title><rect x="855.7" y="453" width="0.2" height="15.0" fill="rgb(240,222,47)" rx="2" ry="2" />
<text  x="858.67" y="463.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (35 samples, 0.18%)</title><rect x="318.8" y="261" width="2.1" height="15.0" fill="rgb(207,209,19)" rx="2" ry="2" />
<text  x="321.84" y="271.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Graphics::State, (__gnu_cxx::_Lock_policy)2&gt;::get (8 samples, 0.04%)</title><rect x="855.2" y="437" width="0.5" height="15.0" fill="rgb(228,109,2)" rx="2" ry="2" />
<text  x="858.20" y="447.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (49 samples, 0.25%)</title><rect x="785.5" y="453" width="2.9" height="15.0" fill="rgb(254,73,13)" rx="2" ry="2" />
<text  x="788.53" y="463.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (40 samples, 0.20%)</title><rect x="884.8" y="517" width="2.4" height="15.0" fill="rgb(235,207,3)" rx="2" ry="2" />
<text  x="887.79" y="527.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (20 samples, 0.10%)</title><rect x="237.0" y="629" width="1.2" height="15.0" fill="rgb(222,159,34)" rx="2" ry="2" />
<text  x="239.97" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::deallocate (3 samples, 0.02%)</title><rect x="326.2" y="357" width="0.2" height="15.0" fill="rgb(209,52,6)" rx="2" ry="2" />
<text  x="329.23" y="367.5" ></text>
</g>
<g >
<title>default_wake_function (2 samples, 0.01%)</title><rect x="21.1" y="853" width="0.1" height="15.0" fill="rgb(248,210,3)" rx="2" ry="2" />
<text  x="24.07" y="863.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (2 samples, 0.01%)</title><rect x="948.3" y="421" width="0.1" height="15.0" fill="rgb(213,27,34)" rx="2" ry="2" />
<text  x="951.32" y="431.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (116 samples, 0.59%)</title><rect x="831.2" y="405" width="6.9" height="15.0" fill="rgb(237,202,24)" rx="2" ry="2" />
<text  x="834.20" y="415.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (42 samples, 0.21%)</title><rect x="151.5" y="517" width="2.5" height="15.0" fill="rgb(209,174,3)" rx="2" ry="2" />
<text  x="154.47" y="527.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (100 samples, 0.50%)</title><rect x="161.8" y="533" width="5.9" height="15.0" fill="rgb(212,0,26)" rx="2" ry="2" />
<text  x="164.77" y="543.5" ></text>
</g>
<g >
<title>Bitmap::Blit (5 samples, 0.03%)</title><rect x="331.0" y="789" width="0.3" height="15.0" fill="rgb(224,40,4)" rx="2" ry="2" />
<text  x="334.05" y="799.5" ></text>
</g>
<g >
<title>pixman_image_unref (185 samples, 0.93%)</title><rect x="247.8" y="405" width="11.0" height="15.0" fill="rgb(248,158,36)" rx="2" ry="2" />
<text  x="250.81" y="415.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (7 samples, 0.04%)</title><rect x="1178.1" y="789" width="0.4" height="15.0" fill="rgb(233,48,31)" rx="2" ry="2" />
<text  x="1181.09" y="799.5" ></text>
</g>
<g >
<title>Game_Picture::SetNonEffectParams (19 samples, 0.10%)</title><rect x="996.2" y="741" width="1.1" height="15.0" fill="rgb(231,194,14)" rx="2" ry="2" />
<text  x="999.19" y="751.5" ></text>
</g>
<g >
<title>DynamicFormat::code_alpha (6 samples, 0.03%)</title><rect x="26.1" y="997" width="0.4" height="15.0" fill="rgb(209,198,44)" rx="2" ry="2" />
<text  x="29.14" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string@plt (2 samples, 0.01%)</title><rect x="628.6" y="677" width="0.1" height="15.0" fill="rgb(226,40,20)" rx="2" ry="2" />
<text  x="631.58" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (29 samples, 0.15%)</title><rect x="286.6" y="405" width="1.7" height="15.0" fill="rgb(227,205,33)" rx="2" ry="2" />
<text  x="289.57" y="415.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (2 samples, 0.01%)</title><rect x="600.5" y="709" width="0.1" height="15.0" fill="rgb(225,86,31)" rx="2" ry="2" />
<text  x="603.48" y="719.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (78 samples, 0.39%)</title><rect x="171.1" y="549" width="4.7" height="15.0" fill="rgb(234,30,22)" rx="2" ry="2" />
<text  x="174.12" y="559.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (29 samples, 0.15%)</title><rect x="286.6" y="565" width="1.7" height="15.0" fill="rgb(234,12,44)" rx="2" ry="2" />
<text  x="289.57" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::push_back (23 samples, 0.12%)</title><rect x="1023.2" y="725" width="1.4" height="15.0" fill="rgb(219,20,25)" rx="2" ry="2" />
<text  x="1026.22" y="735.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (66 samples, 0.33%)</title><rect x="960.3" y="453" width="4.0" height="15.0" fill="rgb(239,7,24)" rx="2" ry="2" />
<text  x="963.35" y="463.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (19 samples, 0.10%)</title><rect x="779.0" y="373" width="1.1" height="15.0" fill="rgb(254,91,27)" rx="2" ry="2" />
<text  x="781.98" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;Drawable* const&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (492 samples, 2.48%)</title><rect x="908.1" y="389" width="29.3" height="15.0" fill="rgb(208,107,18)" rx="2" ry="2" />
<text  x="911.07" y="399.5" >__..</text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (17 samples, 0.09%)</title><rect x="480.7" y="725" width="1.0" height="15.0" fill="rgb(254,16,8)" rx="2" ry="2" />
<text  x="483.68" y="735.5" ></text>
</g>
<g >
<title>Sprite::~Sprite (963 samples, 4.86%)</title><rect x="179.6" y="613" width="57.3" height="15.0" fill="rgb(220,157,6)" rx="2" ry="2" />
<text  x="182.58" y="623.5" >Sprite..</text>
</g>
<g >
<title>apparmor_file_permission (3 samples, 0.02%)</title><rect x="20.9" y="901" width="0.2" height="15.0" fill="rgb(251,82,45)" rx="2" ry="2" />
<text  x="23.90" y="911.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.05%)</title><rect x="237.6" y="325" width="0.6" height="15.0" fill="rgb(243,33,32)" rx="2" ry="2" />
<text  x="240.63" y="335.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (4 samples, 0.02%)</title><rect x="790.8" y="501" width="0.3" height="15.0" fill="rgb(239,143,18)" rx="2" ry="2" />
<text  x="793.83" y="511.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.04%)</title><rect x="668.4" y="533" width="0.4" height="15.0" fill="rgb(246,99,23)" rx="2" ry="2" />
<text  x="671.41" y="543.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (4 samples, 0.02%)</title><rect x="326.2" y="725" width="0.3" height="15.0" fill="rgb(246,129,11)" rx="2" ry="2" />
<text  x="329.23" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_valptr (2 samples, 0.01%)</title><rect x="767.5" y="437" width="0.1" height="15.0" fill="rgb(210,8,52)" rx="2" ry="2" />
<text  x="770.49" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (22 samples, 0.11%)</title><rect x="1111.9" y="741" width="1.4" height="15.0" fill="rgb(247,27,4)" rx="2" ry="2" />
<text  x="1114.94" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_valptr (2 samples, 0.01%)</title><rect x="757.7" y="421" width="0.1" height="15.0" fill="rgb(236,148,43)" rx="2" ry="2" />
<text  x="760.67" y="431.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (1,233 samples, 6.22%)</title><rect x="368.0" y="805" width="73.4" height="15.0" fill="rgb(231,192,53)" rx="2" ry="2" />
<text  x="370.97" y="815.5" >Game_Int..</text>
</g>
<g >
<title>Sprite::SetBitmap (41 samples, 0.21%)</title><rect x="850.1" y="501" width="2.5" height="15.0" fill="rgb(248,211,43)" rx="2" ry="2" />
<text  x="853.14" y="511.5" ></text>
</g>
<g >
<title>Scene_Map::Update (4 samples, 0.02%)</title><rect x="326.2" y="917" width="0.3" height="15.0" fill="rgb(218,124,25)" rx="2" ry="2" />
<text  x="329.23" y="927.5" ></text>
</g>
<g >
<title>file_update_time (2 samples, 0.01%)</title><rect x="21.3" y="885" width="0.1" height="15.0" fill="rgb(207,125,3)" rx="2" ry="2" />
<text  x="24.31" y="895.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (58 samples, 0.29%)</title><rect x="141.1" y="917" width="3.4" height="15.0" fill="rgb(243,79,48)" rx="2" ry="2" />
<text  x="144.05" y="927.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (2 samples, 0.01%)</title><rect x="884.3" y="437" width="0.1" height="15.0" fill="rgb(243,41,41)" rx="2" ry="2" />
<text  x="887.25" y="447.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (260 samples, 1.31%)</title><rect x="309.2" y="421" width="15.5" height="15.0" fill="rgb(211,101,52)" rx="2" ry="2" />
<text  x="312.20" y="431.5" ></text>
</g>
<g >
<title>std::__weak_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__weak_count (6 samples, 0.03%)</title><rect x="89.4" y="997" width="0.4" height="15.0" fill="rgb(233,59,16)" rx="2" ry="2" />
<text  x="92.43" y="1007.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;int&gt;::shared_ptr&lt;std::allocator&lt;int&gt;, int&gt; (2 samples, 0.01%)</title><rect x="107.1" y="997" width="0.1" height="15.0" fill="rgb(213,85,33)" rx="2" ry="2" />
<text  x="110.11" y="1007.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (23 samples, 0.12%)</title><rect x="256.2" y="229" width="1.4" height="15.0" fill="rgb(207,178,27)" rx="2" ry="2" />
<text  x="259.21" y="239.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl (3 samples, 0.02%)</title><rect x="73.9" y="997" width="0.2" height="15.0" fill="rgb(219,26,9)" rx="2" ry="2" />
<text  x="76.95" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_M_end (7 samples, 0.04%)</title><rect x="67.7" y="997" width="0.4" height="15.0" fill="rgb(224,47,15)" rx="2" ry="2" />
<text  x="70.70" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (2 samples, 0.01%)</title><rect x="856.8" y="501" width="0.1" height="15.0" fill="rgb(206,186,27)" rx="2" ry="2" />
<text  x="859.80" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.04%)</title><rect x="257.9" y="245" width="0.5" height="15.0" fill="rgb(238,76,35)" rx="2" ry="2" />
<text  x="260.93" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator bool (4 samples, 0.02%)</title><rect x="1172.0" y="805" width="0.3" height="15.0" fill="rgb(238,154,8)" rx="2" ry="2" />
<text  x="1175.02" y="815.5" ></text>
</g>
<g >
<title>operator delete@plt (2 samples, 0.01%)</title><rect x="720.2" y="661" width="0.1" height="15.0" fill="rgb(244,51,53)" rx="2" ry="2" />
<text  x="723.16" y="671.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (4 samples, 0.02%)</title><rect x="62.6" y="997" width="0.3" height="15.0" fill="rgb(229,200,42)" rx="2" ry="2" />
<text  x="65.63" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (2 samples, 0.01%)</title><rect x="412.6" y="773" width="0.1" height="15.0" fill="rgb(219,176,23)" rx="2" ry="2" />
<text  x="415.56" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt; (6 samples, 0.03%)</title><rect x="1149.1" y="837" width="0.4" height="15.0" fill="rgb(228,85,33)" rx="2" ry="2" />
<text  x="1152.09" y="847.5" ></text>
</g>
<g >
<title>Game_Map::GetDisplayX (8 samples, 0.04%)</title><rect x="614.3" y="741" width="0.5" height="15.0" fill="rgb(254,39,13)" rx="2" ry="2" />
<text  x="617.29" y="751.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (5 samples, 0.03%)</title><rect x="859.3" y="485" width="0.3" height="15.0" fill="rgb(226,37,12)" rx="2" ry="2" />
<text  x="862.30" y="495.5" ></text>
</g>
<g >
<title>do_page_fault (69 samples, 0.35%)</title><rect x="299.2" y="437" width="4.1" height="15.0" fill="rgb(251,41,48)" rx="2" ry="2" />
<text  x="302.19" y="447.5" ></text>
</g>
<g >
<title>Transition::IsErased (13 samples, 0.07%)</title><rect x="712.3" y="693" width="0.8" height="15.0" fill="rgb(232,119,19)" rx="2" ry="2" />
<text  x="715.30" y="703.5" ></text>
</g>
<g >
<title>free_unref_page_commit (2 samples, 0.01%)</title><rect x="258.1" y="85" width="0.1" height="15.0" fill="rgb(252,162,11)" rx="2" ry="2" />
<text  x="261.11" y="95.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (4,000 samples, 20.18%)</title><rect x="728.5" y="613" width="238.2" height="15.0" fill="rgb(249,174,38)" rx="2" ry="2" />
<text  x="731.49" y="623.5" >std::__invoke&lt;std::_Mem_fn&lt;void..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char32_t&gt;::allocate (9 samples, 0.05%)</title><rect x="1023.5" y="661" width="0.6" height="15.0" fill="rgb(249,23,45)" rx="2" ry="2" />
<text  x="1026.52" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (45 samples, 0.23%)</title><rect x="245.1" y="453" width="2.7" height="15.0" fill="rgb(254,210,47)" rx="2" ry="2" />
<text  x="248.13" y="463.5" ></text>
</g>
<g >
<title>Game_Picture::SyncCurrentToFinish (31 samples, 0.16%)</title><rect x="997.3" y="741" width="1.9" height="15.0" fill="rgb(208,57,7)" rx="2" ry="2" />
<text  x="1000.32" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (3 samples, 0.02%)</title><rect x="592.1" y="741" width="0.2" height="15.0" fill="rgb(219,59,38)" rx="2" ry="2" />
<text  x="595.14" y="751.5" ></text>
</g>
<g >
<title>_XEventsQueued (7 samples, 0.04%)</title><rect x="1182.5" y="821" width="0.4" height="15.0" fill="rgb(245,151,53)" rx="2" ry="2" />
<text  x="1185.50" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (2 samples, 0.01%)</title><rect x="332.9" y="837" width="0.1" height="15.0" fill="rgb(216,38,11)" rx="2" ry="2" />
<text  x="335.90" y="847.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::_M_ptr (6 samples, 0.03%)</title><rect x="713.1" y="661" width="0.4" height="15.0" fill="rgb(244,212,2)" rx="2" ry="2" />
<text  x="716.13" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (3 samples, 0.02%)</title><rect x="479.2" y="725" width="0.2" height="15.0" fill="rgb(243,119,38)" rx="2" ry="2" />
<text  x="482.25" y="735.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (143 samples, 0.72%)</title><rect x="150.8" y="805" width="8.5" height="15.0" fill="rgb(242,204,1)" rx="2" ry="2" />
<text  x="153.76" y="815.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (2 samples, 0.01%)</title><rect x="293.8" y="997" width="0.1" height="15.0" fill="rgb(224,60,11)" rx="2" ry="2" />
<text  x="296.78" y="1007.5" ></text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (9 samples, 0.05%)</title><rect x="1153.7" y="821" width="0.5" height="15.0" fill="rgb(215,170,46)" rx="2" ry="2" />
<text  x="1156.68" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (3 samples, 0.02%)</title><rect x="597.3" y="725" width="0.2" height="15.0" fill="rgb(235,217,46)" rx="2" ry="2" />
<text  x="600.32" y="735.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="1180.3" y="661" width="0.1" height="15.0" fill="rgb(235,126,30)" rx="2" ry="2" />
<text  x="1183.29" y="671.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (166 samples, 0.84%)</title><rect x="131.0" y="917" width="9.9" height="15.0" fill="rgb(239,128,2)" rx="2" ry="2" />
<text  x="134.05" y="927.5" ></text>
</g>
<g >
<title>std::_Bit_const_iterator::_Bit_const_iterator (4 samples, 0.02%)</title><rect x="337.5" y="757" width="0.2" height="15.0" fill="rgb(208,45,3)" rx="2" ry="2" />
<text  x="340.48" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (4 samples, 0.02%)</title><rect x="332.8" y="853" width="0.2" height="15.0" fill="rgb(211,2,40)" rx="2" ry="2" />
<text  x="335.78" y="863.5" ></text>
</g>
<g >
<title>Graphics::RegisterDrawable (50 samples, 0.25%)</title><rect x="873.9" y="501" width="3.0" height="15.0" fill="rgb(240,213,39)" rx="2" ry="2" />
<text  x="876.89" y="511.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (514 samples, 2.59%)</title><rect x="294.8" y="709" width="30.7" height="15.0" fill="rgb(222,112,40)" rx="2" ry="2" />
<text  x="297.85" y="719.5" >Fi..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_valptr (5 samples, 0.03%)</title><rect x="69.0" y="997" width="0.3" height="15.0" fill="rgb(239,120,5)" rx="2" ry="2" />
<text  x="72.01" y="1007.5" ></text>
</g>
<g >
<title>dequeue_entity (2 samples, 0.01%)</title><rect x="17.0" y="837" width="0.1" height="15.0" fill="rgb(226,7,19)" rx="2" ry="2" />
<text  x="20.03" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (119 samples, 0.60%)</title><rect x="584.0" y="757" width="7.1" height="15.0" fill="rgb(225,110,20)" rx="2" ry="2" />
<text  x="586.98" y="767.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (17 samples, 0.09%)</title><rect x="1010.8" y="661" width="1.0" height="15.0" fill="rgb(227,36,34)" rx="2" ry="2" />
<text  x="1013.78" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.02%)</title><rect x="267.3" y="309" width="0.2" height="15.0" fill="rgb(219,160,40)" rx="2" ry="2" />
<text  x="270.28" y="319.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (514 samples, 2.59%)</title><rect x="294.8" y="645" width="30.7" height="15.0" fill="rgb(254,113,21)" rx="2" ry="2" />
<text  x="297.85" y="655.5" >st..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_destroy (2 samples, 0.01%)</title><rect x="1024.1" y="677" width="0.1" height="15.0" fill="rgb(222,185,26)" rx="2" ry="2" />
<text  x="1027.12" y="687.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (238 samples, 1.20%)</title><rect x="244.7" y="741" width="14.1" height="15.0" fill="rgb(249,1,42)" rx="2" ry="2" />
<text  x="247.65" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (2 samples, 0.01%)</title><rect x="1007.6" y="725" width="0.1" height="15.0" fill="rgb(236,39,31)" rx="2" ry="2" />
<text  x="1010.56" y="735.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (143 samples, 0.72%)</title><rect x="150.8" y="821" width="8.5" height="15.0" fill="rgb(209,67,39)" rx="2" ry="2" />
<text  x="153.76" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (7 samples, 0.04%)</title><rect x="838.5" y="373" width="0.4" height="15.0" fill="rgb(227,70,25)" rx="2" ry="2" />
<text  x="841.47" y="383.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (3 samples, 0.02%)</title><rect x="257.9" y="149" width="0.2" height="15.0" fill="rgb(247,190,30)" rx="2" ry="2" />
<text  x="260.93" y="159.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (3 samples, 0.02%)</title><rect x="995.7" y="645" width="0.2" height="15.0" fill="rgb(214,68,28)" rx="2" ry="2" />
<text  x="998.72" y="655.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.01%)</title><rect x="726.5" y="661" width="0.1" height="15.0" fill="rgb(211,165,7)" rx="2" ry="2" />
<text  x="729.53" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (76 samples, 0.38%)</title><rect x="397.7" y="757" width="4.6" height="15.0" fill="rgb(241,222,4)" rx="2" ry="2" />
<text  x="400.74" y="767.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt;::_M_head (4 samples, 0.02%)</title><rect x="1008.4" y="645" width="0.2" height="15.0" fill="rgb(248,122,38)" rx="2" ry="2" />
<text  x="1011.40" y="655.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (26 samples, 0.13%)</title><rect x="259.9" y="517" width="1.5" height="15.0" fill="rgb(220,171,53)" rx="2" ry="2" />
<text  x="262.90" y="527.5" ></text>
</g>
<g >
<title>Sprite::GetBitmap (2 samples, 0.01%)</title><rect x="1166.9" y="805" width="0.1" height="15.0" fill="rgb(234,25,3)" rx="2" ry="2" />
<text  x="1169.90" y="815.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (49 samples, 0.25%)</title><rect x="264.4" y="485" width="2.9" height="15.0" fill="rgb(235,115,22)" rx="2" ry="2" />
<text  x="267.36" y="495.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt;::_M_head (2 samples, 0.01%)</title><rect x="73.1" y="997" width="0.1" height="15.0" fill="rgb(216,213,42)" rx="2" ry="2" />
<text  x="76.05" y="1007.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (166 samples, 0.84%)</title><rect x="131.0" y="773" width="9.9" height="15.0" fill="rgb(235,102,2)" rx="2" ry="2" />
<text  x="134.05" y="783.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (9 samples, 0.05%)</title><rect x="998.6" y="725" width="0.6" height="15.0" fill="rgb(228,92,26)" rx="2" ry="2" />
<text  x="1001.63" y="735.5" ></text>
</g>
<g >
<title>Game_Screen::GetFlashColor (17 samples, 0.09%)</title><rect x="845.1" y="501" width="1.0" height="15.0" fill="rgb(212,45,39)" rx="2" ry="2" />
<text  x="848.13" y="511.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (20 samples, 0.10%)</title><rect x="237.0" y="837" width="1.2" height="15.0" fill="rgb(225,88,24)" rx="2" ry="2" />
<text  x="239.97" y="847.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (9 samples, 0.05%)</title><rect x="130.5" y="997" width="0.5" height="15.0" fill="rgb(207,41,18)" rx="2" ry="2" />
<text  x="133.51" y="1007.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (4 samples, 0.02%)</title><rect x="302.5" y="357" width="0.3" height="15.0" fill="rgb(216,159,22)" rx="2" ry="2" />
<text  x="305.53" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (11 samples, 0.06%)</title><rect x="66.1" y="997" width="0.6" height="15.0" fill="rgb(219,163,17)" rx="2" ry="2" />
<text  x="69.09" y="1007.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (514 samples, 2.59%)</title><rect x="294.8" y="677" width="30.7" height="15.0" fill="rgb(245,224,43)" rx="2" ry="2" />
<text  x="297.85" y="687.5" >st..</text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (12 samples, 0.06%)</title><rect x="301.5" y="373" width="0.7" height="15.0" fill="rgb(217,23,19)" rx="2" ry="2" />
<text  x="304.46" y="383.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (109 samples, 0.55%)</title><rect x="238.2" y="709" width="6.5" height="15.0" fill="rgb(207,108,12)" rx="2" ry="2" />
<text  x="241.16" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (4 samples, 0.02%)</title><rect x="267.5" y="565" width="0.3" height="15.0" fill="rgb(242,202,21)" rx="2" ry="2" />
<text  x="270.52" y="575.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt;::~_Sp_counted_ptr_inplace (9 samples, 0.05%)</title><rect x="989.5" y="629" width="0.5" height="15.0" fill="rgb(250,154,21)" rx="2" ry="2" />
<text  x="992.46" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt;::_M_erase (963 samples, 4.86%)</title><rect x="179.6" y="565" width="57.3" height="15.0" fill="rgb(211,43,15)" rx="2" ry="2" />
<text  x="182.58" y="575.5" >std::v..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.02%)</title><rect x="267.3" y="341" width="0.2" height="15.0" fill="rgb(224,124,26)" rx="2" ry="2" />
<text  x="270.28" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (4 samples, 0.02%)</title><rect x="1077.3" y="773" width="0.3" height="15.0" fill="rgb(205,160,37)" rx="2" ry="2" />
<text  x="1080.35" y="783.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (45 samples, 0.23%)</title><rect x="777.4" y="405" width="2.7" height="15.0" fill="rgb(236,197,10)" rx="2" ry="2" />
<text  x="780.43" y="415.5" ></text>
</g>
<g >
<title>Game_Interpreter::IsRunning (14 samples, 0.07%)</title><rect x="441.4" y="805" width="0.8" height="15.0" fill="rgb(242,36,9)" rx="2" ry="2" />
<text  x="444.38" y="815.5" ></text>
</g>
<g >
<title>Player::MainLoop (14,314 samples, 72.23%)</title><rect x="330.9" y="949" width="852.3" height="15.0" fill="rgb(209,55,54)" rx="2" ry="2" />
<text  x="333.93" y="959.5" >Player::MainLoop</text>
</g>
<g >
<title>[libasan.so.5.0.0] (910 samples, 4.59%)</title><rect x="180.5" y="469" width="54.2" height="15.0" fill="rgb(231,127,8)" rx="2" ry="2" />
<text  x="183.47" y="479.5" >[liba..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_M_lower_bound (2 samples, 0.01%)</title><rect x="1179.9" y="741" width="0.1" height="15.0" fill="rgb(213,75,2)" rx="2" ry="2" />
<text  x="1182.88" y="751.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (18 samples, 0.09%)</title><rect x="1037.3" y="757" width="1.0" height="15.0" fill="rgb(240,204,33)" rx="2" ry="2" />
<text  x="1040.28" y="767.5" ></text>
</g>
<g >
<title>Game_Screen::GetTone (35 samples, 0.18%)</title><rect x="846.1" y="501" width="2.1" height="15.0" fill="rgb(215,220,48)" rx="2" ry="2" />
<text  x="849.15" y="511.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;FileRequestResult*&gt; (9 samples, 0.05%)</title><rect x="967.3" y="629" width="0.5" height="15.0" fill="rgb(219,222,23)" rx="2" ry="2" />
<text  x="970.25" y="639.5" ></text>
</g>
<g >
<title>operator new@plt (2 samples, 0.01%)</title><rect x="700.3" y="661" width="0.1" height="15.0" fill="rgb(235,7,45)" rx="2" ry="2" />
<text  x="703.27" y="671.5" ></text>
</g>
<g >
<title>Player::Run (14,314 samples, 72.23%)</title><rect x="330.9" y="965" width="852.3" height="15.0" fill="rgb(222,216,41)" rx="2" ry="2" />
<text  x="333.93" y="975.5" >Player::Run</text>
</g>
<g >
<title>unmap_page_range (3 samples, 0.02%)</title><rect x="258.2" y="181" width="0.2" height="15.0" fill="rgb(205,47,22)" rx="2" ry="2" />
<text  x="261.23" y="191.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (7,317 samples, 36.92%)</title><rect x="601.4" y="773" width="435.6" height="15.0" fill="rgb(234,153,50)" rx="2" ry="2" />
<text  x="604.37" y="783.5" >Game_Interpreter::CommandShowPicture</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Drawable* const*, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;::base (2 samples, 0.01%)</title><rect x="940.3" y="405" width="0.1" height="15.0" fill="rgb(243,105,8)" rx="2" ry="2" />
<text  x="943.28" y="415.5" ></text>
</g>
<g >
<title>operator!= (2 samples, 0.01%)</title><rect x="59.8" y="997" width="0.1" height="15.0" fill="rgb(225,69,54)" rx="2" ry="2" />
<text  x="62.78" y="1007.5" ></text>
</g>
<g >
<title>std::forward&lt;Drawable* const&amp;&gt; (2 samples, 0.01%)</title><rect x="876.7" y="437" width="0.1" height="15.0" fill="rgb(219,204,14)" rx="2" ry="2" />
<text  x="879.69" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (5 samples, 0.03%)</title><rect x="1021.0" y="725" width="0.3" height="15.0" fill="rgb(207,171,2)" rx="2" ry="2" />
<text  x="1024.02" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::get (8 samples, 0.04%)</title><rect x="1008.2" y="709" width="0.5" height="15.0" fill="rgb(220,228,30)" rx="2" ry="2" />
<text  x="1011.22" y="719.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, bool&gt;::_M_head (2 samples, 0.01%)</title><rect x="786.4" y="357" width="0.1" height="15.0" fill="rgb(252,141,40)" rx="2" ry="2" />
<text  x="789.43" y="367.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (15 samples, 0.08%)</title><rect x="699.3" y="597" width="0.9" height="15.0" fill="rgb(223,198,8)" rx="2" ry="2" />
<text  x="702.32" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (5 samples, 0.03%)</title><rect x="44.7" y="997" width="0.3" height="15.0" fill="rgb(205,16,23)" rx="2" ry="2" />
<text  x="47.71" y="1007.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (64 samples, 0.32%)</title><rect x="175.8" y="549" width="3.8" height="15.0" fill="rgb(234,7,30)" rx="2" ry="2" />
<text  x="178.76" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;::operator++ (4 samples, 0.02%)</title><rect x="46.7" y="997" width="0.2" height="15.0" fill="rgb(237,1,35)" rx="2" ry="2" />
<text  x="49.68" y="1007.5" ></text>
</g>
<g >
<title>Bitmap::width (61 samples, 0.31%)</title><rect x="1158.0" y="789" width="3.6" height="15.0" fill="rgb(217,10,51)" rx="2" ry="2" />
<text  x="1160.97" y="799.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (238 samples, 1.20%)</title><rect x="244.7" y="821" width="14.1" height="15.0" fill="rgb(227,138,21)" rx="2" ry="2" />
<text  x="247.65" y="831.5" ></text>
</g>
<g >
<title>_nv029793rm (2 samples, 0.01%)</title><rect x="292.8" y="725" width="0.1" height="15.0" fill="rgb(206,190,14)" rx="2" ry="2" />
<text  x="295.82" y="735.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_destroy (144 samples, 0.73%)</title><rect x="971.1" y="517" width="8.6" height="15.0" fill="rgb(232,104,36)" rx="2" ry="2" />
<text  x="974.12" y="527.5" ></text>
</g>
<g >
<title>std::mem_fn&lt;void (FileRequestResult*), Game_Picture&gt; (24 samples, 0.12%)</title><rect x="710.5" y="709" width="1.4" height="15.0" fill="rgb(219,5,19)" rx="2" ry="2" />
<text  x="713.45" y="719.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (45 samples, 0.23%)</title><rect x="245.1" y="517" width="2.7" height="15.0" fill="rgb(237,116,40)" rx="2" ry="2" />
<text  x="248.13" y="527.5" ></text>
</g>
<g >
<title>Bitmap::Create (216 samples, 1.09%)</title><rect x="827.3" y="501" width="12.9" height="15.0" fill="rgb(210,158,52)" rx="2" ry="2" />
<text  x="830.33" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, bool&gt;::_M_head (2 samples, 0.01%)</title><rect x="772.3" y="341" width="0.1" height="15.0" fill="rgb(233,73,23)" rx="2" ry="2" />
<text  x="775.31" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::operator (6 samples, 0.03%)</title><rect x="713.5" y="693" width="0.3" height="15.0" fill="rgb(226,103,33)" rx="2" ry="2" />
<text  x="716.49" y="703.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (2 samples, 0.01%)</title><rect x="81.3" y="997" width="0.2" height="15.0" fill="rgb(226,167,41)" rx="2" ry="2" />
<text  x="84.33" y="1007.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (515 samples, 2.60%)</title><rect x="294.8" y="741" width="30.7" height="15.0" fill="rgb(232,197,16)" rx="2" ry="2" />
<text  x="297.79" y="751.5" >Ga..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (6 samples, 0.03%)</title><rect x="159.3" y="597" width="0.3" height="15.0" fill="rgb(249,28,35)" rx="2" ry="2" />
<text  x="162.27" y="607.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (4 samples, 0.02%)</title><rect x="326.2" y="421" width="0.3" height="15.0" fill="rgb(234,111,53)" rx="2" ry="2" />
<text  x="329.23" y="431.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (5 samples, 0.03%)</title><rect x="1180.2" y="773" width="0.3" height="15.0" fill="rgb(254,121,17)" rx="2" ry="2" />
<text  x="1183.18" y="783.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (12 samples, 0.06%)</title><rect x="994.8" y="517" width="0.7" height="15.0" fill="rgb(226,49,14)" rx="2" ry="2" />
<text  x="997.76" y="527.5" ></text>
</g>
<g >
<title>std::_Mu&lt;std::_Placeholder&lt;1&gt;, false, true&gt;::operator()&lt;std::tuple&lt;FileRequestResult*&amp;&amp;&gt; &gt; (7 samples, 0.04%)</title><rect x="728.1" y="613" width="0.4" height="15.0" fill="rgb(253,45,46)" rx="2" ry="2" />
<text  x="731.07" y="623.5" ></text>
</g>
<g >
<title>Game_Screen::GetPicture (4 samples, 0.02%)</title><rect x="600.4" y="757" width="0.3" height="15.0" fill="rgb(226,23,47)" rx="2" ry="2" />
<text  x="603.42" y="767.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_destroy (43 samples, 0.22%)</title><rect x="238.9" y="421" width="2.5" height="15.0" fill="rgb(243,9,41)" rx="2" ry="2" />
<text  x="241.88" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::destroy&lt;Bitmap&gt; (3 samples, 0.02%)</title><rect x="267.3" y="469" width="0.2" height="15.0" fill="rgb(215,226,32)" rx="2" ry="2" />
<text  x="270.28" y="479.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (9 samples, 0.05%)</title><rect x="130.5" y="805" width="0.5" height="15.0" fill="rgb(229,32,7)" rx="2" ry="2" />
<text  x="133.51" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (36 samples, 0.18%)</title><rect x="986.5" y="629" width="2.2" height="15.0" fill="rgb(227,179,52)" rx="2" ry="2" />
<text  x="989.55" y="639.5" ></text>
</g>
<g >
<title>Tone::Tone (9 samples, 0.05%)</title><rect x="847.7" y="485" width="0.5" height="15.0" fill="rgb(247,92,6)" rx="2" ry="2" />
<text  x="850.69" y="495.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (44 samples, 0.22%)</title><rect x="258.8" y="709" width="2.6" height="15.0" fill="rgb(228,26,35)" rx="2" ry="2" />
<text  x="261.83" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::size (27 samples, 0.14%)</title><rect x="336.1" y="789" width="1.6" height="15.0" fill="rgb(239,50,18)" rx="2" ry="2" />
<text  x="339.11" y="799.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::destroy&lt;Bitmap&gt; (254 samples, 1.28%)</title><rect x="309.6" y="373" width="15.1" height="15.0" fill="rgb(226,11,47)" rx="2" ry="2" />
<text  x="312.55" y="383.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (5 samples, 0.03%)</title><rect x="292.6" y="933" width="0.3" height="15.0" fill="rgb(248,75,35)" rx="2" ry="2" />
<text  x="295.65" y="943.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (3 samples, 0.02%)</title><rect x="980.9" y="693" width="0.2" height="15.0" fill="rgb(227,165,3)" rx="2" ry="2" />
<text  x="983.95" y="703.5" ></text>
</g>
<g >
<title>clear_page_erms (17 samples, 0.09%)</title><rect x="299.9" y="341" width="1.0" height="15.0" fill="rgb(217,217,29)" rx="2" ry="2" />
<text  x="302.91" y="351.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_ptr (2 samples, 0.01%)</title><rect x="832.5" y="389" width="0.1" height="15.0" fill="rgb(248,161,17)" rx="2" ry="2" />
<text  x="835.45" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (4 samples, 0.02%)</title><rect x="126.0" y="997" width="0.3" height="15.0" fill="rgb(243,28,3)" rx="2" ry="2" />
<text  x="129.05" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (48 samples, 0.24%)</title><rect x="1060.5" y="741" width="2.9" height="15.0" fill="rgb(229,154,12)" rx="2" ry="2" />
<text  x="1063.50" y="751.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::CommonEvent&gt; (5 samples, 0.03%)</title><rect x="1150.2" y="821" width="0.3" height="15.0" fill="rgb(208,184,36)" rx="2" ry="2" />
<text  x="1153.17" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (6 samples, 0.03%)</title><rect x="57.3" y="997" width="0.3" height="15.0" fill="rgb(235,131,22)" rx="2" ry="2" />
<text  x="60.28" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.03%)</title><rect x="154.3" y="533" width="0.3" height="15.0" fill="rgb(221,69,42)" rx="2" ry="2" />
<text  x="157.27" y="543.5" ></text>
</g>
<g >
<title>std::forward&lt;FileRequestResult*&gt; (2 samples, 0.01%)</title><rect x="966.4" y="565" width="0.1" height="15.0" fill="rgb(207,185,27)" rx="2" ry="2" />
<text  x="969.36" y="575.5" ></text>
</g>
<g >
<title>operator== (7 samples, 0.04%)</title><rect x="853.7" y="469" width="0.4" height="15.0" fill="rgb(239,162,34)" rx="2" ry="2" />
<text  x="856.71" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (64 samples, 0.32%)</title><rect x="175.8" y="517" width="3.8" height="15.0" fill="rgb(246,209,41)" rx="2" ry="2" />
<text  x="178.76" y="527.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Game_Picture*, false&gt;::_M_head (2 samples, 0.01%)</title><rect x="701.6" y="597" width="0.1" height="15.0" fill="rgb(251,66,33)" rx="2" ry="2" />
<text  x="704.58" y="607.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (45 samples, 0.23%)</title><rect x="245.1" y="501" width="2.7" height="15.0" fill="rgb(245,2,47)" rx="2" ry="2" />
<text  x="248.13" y="511.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="668.7" y="517" width="0.1" height="15.0" fill="rgb(249,170,1)" rx="2" ry="2" />
<text  x="671.71" y="527.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (515 samples, 2.60%)</title><rect x="294.8" y="837" width="30.7" height="15.0" fill="rgb(211,116,49)" rx="2" ry="2" />
<text  x="297.79" y="847.5" >Ga..</text>
</g>
<g >
<title>operator new (3 samples, 0.02%)</title><rect x="327.0" y="997" width="0.2" height="15.0" fill="rgb(245,222,27)" rx="2" ry="2" />
<text  x="330.00" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (2 samples, 0.01%)</title><rect x="1179.9" y="661" width="0.1" height="15.0" fill="rgb(225,170,6)" rx="2" ry="2" />
<text  x="1182.88" y="671.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;*&gt; (2 samples, 0.01%)</title><rect x="703.4" y="661" width="0.1" height="15.0" fill="rgb(213,112,9)" rx="2" ry="2" />
<text  x="706.36" y="671.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (29 samples, 0.15%)</title><rect x="773.6" y="373" width="1.8" height="15.0" fill="rgb(206,130,6)" rx="2" ry="2" />
<text  x="776.62" y="383.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (4,481 samples, 22.61%)</title><rect x="714.3" y="709" width="266.8" height="15.0" fill="rgb(209,126,12)" rx="2" ry="2" />
<text  x="717.32" y="719.5" >FileRequestAsync::DownloadDone</text>
</g>
<g >
<title>Game_Picture::GetData (4 samples, 0.02%)</title><rect x="1003.3" y="725" width="0.3" height="15.0" fill="rgb(239,176,15)" rx="2" ry="2" />
<text  x="1006.34" y="735.5" ></text>
</g>
<g >
<title>Bitmap::GetOperator (5 samples, 0.03%)</title><rect x="801.5" y="485" width="0.3" height="15.0" fill="rgb(211,28,3)" rx="2" ry="2" />
<text  x="804.49" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="783.1" y="373" width="0.1" height="15.0" fill="rgb(217,139,1)" rx="2" ry="2" />
<text  x="786.09" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::~allocator (2 samples, 0.01%)</title><rect x="953.6" y="373" width="0.1" height="15.0" fill="rgb(206,162,30)" rx="2" ry="2" />
<text  x="956.56" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char32_t&gt; &gt;::deallocate (2 samples, 0.01%)</title><rect x="1024.1" y="661" width="0.1" height="15.0" fill="rgb(208,158,47)" rx="2" ry="2" />
<text  x="1027.12" y="671.5" ></text>
</g>
<g >
<title>min&lt;int&gt; (2 samples, 0.01%)</title><rect x="1007.4" y="709" width="0.2" height="15.0" fill="rgb(207,194,24)" rx="2" ry="2" />
<text  x="1010.44" y="719.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (72 samples, 0.36%)</title><rect x="1133.1" y="805" width="4.3" height="15.0" fill="rgb(240,57,48)" rx="2" ry="2" />
<text  x="1136.14" y="815.5" ></text>
</g>
<g >
<title>Opacity::IsOpaque (5 samples, 0.03%)</title><rect x="801.8" y="485" width="0.3" height="15.0" fill="rgb(240,101,9)" rx="2" ry="2" />
<text  x="804.79" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::get (8 samples, 0.04%)</title><rect x="1147.2" y="805" width="0.5" height="15.0" fill="rgb(215,66,43)" rx="2" ry="2" />
<text  x="1150.19" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (6 samples, 0.03%)</title><rect x="1040.3" y="757" width="0.3" height="15.0" fill="rgb(222,73,15)" rx="2" ry="2" />
<text  x="1043.25" y="767.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (45 samples, 0.23%)</title><rect x="245.1" y="437" width="2.7" height="15.0" fill="rgb(206,29,0)" rx="2" ry="2" />
<text  x="248.13" y="447.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (3 samples, 0.02%)</title><rect x="302.2" y="373" width="0.2" height="15.0" fill="rgb(246,113,14)" rx="2" ry="2" />
<text  x="305.17" y="383.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (109 samples, 0.55%)</title><rect x="238.2" y="885" width="6.5" height="15.0" fill="rgb(216,200,47)" rx="2" ry="2" />
<text  x="241.16" y="895.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (64 samples, 0.32%)</title><rect x="175.8" y="629" width="3.8" height="15.0" fill="rgb(213,84,0)" rx="2" ry="2" />
<text  x="178.76" y="639.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (349 samples, 1.76%)</title><rect x="267.5" y="725" width="20.8" height="15.0" fill="rgb(215,158,17)" rx="2" ry="2" />
<text  x="270.52" y="735.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator() (22 samples, 0.11%)</title><rect x="265.9" y="357" width="1.3" height="15.0" fill="rgb(247,178,36)" rx="2" ry="2" />
<text  x="268.85" y="367.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (101 samples, 0.51%)</title><rect x="261.4" y="741" width="6.1" height="15.0" fill="rgb(211,144,2)" rx="2" ry="2" />
<text  x="264.45" y="751.5" ></text>
</g>
<g >
<title>malloc@plt (3 samples, 0.02%)</title><rect x="834.8" y="293" width="0.2" height="15.0" fill="rgb(251,183,54)" rx="2" ry="2" />
<text  x="837.83" y="303.5" ></text>
</g>
<g >
<title>Sprite::Draw (10 samples, 0.05%)</title><rect x="331.0" y="853" width="0.6" height="15.0" fill="rgb(236,53,12)" rx="2" ry="2" />
<text  x="334.05" y="863.5" ></text>
</g>
<g >
<title>__x64_sys_ppoll (75 samples, 0.38%)</title><rect x="16.2" y="981" width="4.5" height="15.0" fill="rgb(248,17,24)" rx="2" ry="2" />
<text  x="19.19" y="991.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (2 samples, 0.01%)</title><rect x="884.4" y="453" width="0.1" height="15.0" fill="rgb(212,208,45)" rx="2" ry="2" />
<text  x="887.37" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (26 samples, 0.13%)</title><rect x="1180.9" y="789" width="1.5" height="15.0" fill="rgb(212,49,3)" rx="2" ry="2" />
<text  x="1183.89" y="799.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Impl::~_Impl (2 samples, 0.01%)</title><rect x="951.5" y="373" width="0.2" height="15.0" fill="rgb(254,214,39)" rx="2" ry="2" />
<text  x="954.53" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::reset (273 samples, 1.38%)</title><rect x="309.2" y="517" width="16.3" height="15.0" fill="rgb(209,73,15)" rx="2" ry="2" />
<text  x="312.20" y="527.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (1,304 samples, 6.58%)</title><rect x="159.3" y="933" width="77.6" height="15.0" fill="rgb(248,2,19)" rx="2" ry="2" />
<text  x="162.27" y="943.5" >Game_Int..</text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (8 samples, 0.04%)</title><rect x="338.8" y="789" width="0.5" height="15.0" fill="rgb(253,20,7)" rx="2" ry="2" />
<text  x="341.85" y="799.5" ></text>
</g>
<g >
<title>deactivate_task (2 samples, 0.01%)</title><rect x="17.0" y="869" width="0.1" height="15.0" fill="rgb(251,168,10)" rx="2" ry="2" />
<text  x="20.03" y="879.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (11 samples, 0.06%)</title><rect x="836.9" y="309" width="0.7" height="15.0" fill="rgb(239,105,41)" rx="2" ry="2" />
<text  x="839.92" y="319.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;int&gt;::~weak_ptr (3 samples, 0.02%)</title><rect x="681.0" y="677" width="0.2" height="15.0" fill="rgb(239,70,33)" rx="2" ry="2" />
<text  x="683.98" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (2 samples, 0.01%)</title><rect x="597.9" y="709" width="0.1" height="15.0" fill="rgb(211,194,36)" rx="2" ry="2" />
<text  x="600.86" y="719.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.05%)</title><rect x="1023.5" y="629" width="0.6" height="15.0" fill="rgb(238,103,28)" rx="2" ry="2" />
<text  x="1026.52" y="639.5" ></text>
</g>
<g >
<title>__do_munmap (3 samples, 0.02%)</title><rect x="646.9" y="533" width="0.1" height="15.0" fill="rgb(237,68,38)" rx="2" ry="2" />
<text  x="649.86" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_right (4 samples, 0.02%)</title><rect x="768.3" y="453" width="0.3" height="15.0" fill="rgb(215,10,31)" rx="2" ry="2" />
<text  x="771.32" y="463.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (238 samples, 1.20%)</title><rect x="244.7" y="757" width="14.1" height="15.0" fill="rgb(249,14,36)" rx="2" ry="2" />
<text  x="247.65" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_ptr (3 samples, 0.02%)</title><rect x="754.3" y="389" width="0.2" height="15.0" fill="rgb(238,223,17)" rx="2" ry="2" />
<text  x="757.33" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (16 samples, 0.08%)</title><rect x="154.6" y="613" width="1.0" height="15.0" fill="rgb(247,194,20)" rx="2" ry="2" />
<text  x="157.63" y="623.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (2 samples, 0.01%)</title><rect x="824.5" y="421" width="0.2" height="15.0" fill="rgb(240,201,21)" rx="2" ry="2" />
<text  x="827.53" y="431.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (9 samples, 0.05%)</title><rect x="130.5" y="885" width="0.5" height="15.0" fill="rgb(240,184,6)" rx="2" ry="2" />
<text  x="133.51" y="895.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (9 samples, 0.05%)</title><rect x="789.9" y="421" width="0.6" height="15.0" fill="rgb(222,119,52)" rx="2" ry="2" />
<text  x="792.94" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_M_lower_bound (29 samples, 0.15%)</title><rect x="286.6" y="389" width="1.7" height="15.0" fill="rgb(229,51,30)" rx="2" ry="2" />
<text  x="289.57" y="399.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (185 samples, 0.93%)</title><rect x="247.8" y="485" width="11.0" height="15.0" fill="rgb(227,121,36)" rx="2" ry="2" />
<text  x="250.81" y="495.5" ></text>
</g>
<g >
<title>Sprite::~Sprite (26 samples, 0.13%)</title><rect x="259.9" y="549" width="1.5" height="15.0" fill="rgb(248,95,50)" rx="2" ry="2" />
<text  x="262.90" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::emplace_back&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (74 samples, 0.37%)</title><rect x="681.4" y="677" width="4.4" height="15.0" fill="rgb(219,18,42)" rx="2" ry="2" />
<text  x="684.39" y="687.5" ></text>
</g>
<g >
<title>Sprite::~Sprite (185 samples, 0.93%)</title><rect x="247.8" y="549" width="11.0" height="15.0" fill="rgb(224,18,48)" rx="2" ry="2" />
<text  x="250.81" y="559.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (2 samples, 0.01%)</title><rect x="1179.6" y="789" width="0.2" height="15.0" fill="rgb(213,198,23)" rx="2" ry="2" />
<text  x="1182.64" y="799.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::_Placeholder&lt;1&gt; &gt;::_M_head (2 samples, 0.01%)</title><rect x="701.9" y="597" width="0.2" height="15.0" fill="rgb(236,94,17)" rx="2" ry="2" />
<text  x="704.94" y="607.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt;::_M_head (2 samples, 0.01%)</title><rect x="1022.0" y="661" width="0.2" height="15.0" fill="rgb(229,165,12)" rx="2" ry="2" />
<text  x="1025.03" y="671.5" ></text>
</g>
<g >
<title>operator new (83 samples, 0.42%)</title><rect x="674.7" y="565" width="4.9" height="15.0" fill="rgb(239,195,13)" rx="2" ry="2" />
<text  x="677.67" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_Rb_tree_iterator (5 samples, 0.03%)</title><rect x="265.6" y="357" width="0.3" height="15.0" fill="rgb(205,102,43)" rx="2" ry="2" />
<text  x="268.55" y="367.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (11 samples, 0.06%)</title><rect x="857.6" y="501" width="0.6" height="15.0" fill="rgb(205,209,40)" rx="2" ry="2" />
<text  x="860.58" y="511.5" ></text>
</g>
<g >
<title>Sprite::SetWaverDepth (2 samples, 0.01%)</title><rect x="870.1" y="517" width="0.1" height="15.0" fill="rgb(247,198,1)" rx="2" ry="2" />
<text  x="873.08" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (6 samples, 0.03%)</title><rect x="1038.4" y="757" width="0.4" height="15.0" fill="rgb(211,0,18)" rx="2" ry="2" />
<text  x="1041.41" y="767.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (109 samples, 0.55%)</title><rect x="238.2" y="645" width="6.5" height="15.0" fill="rgb(217,51,23)" rx="2" ry="2" />
<text  x="241.16" y="655.5" ></text>
</g>
<g >
<title>__sys_recvmsg (3 samples, 0.02%)</title><rect x="1182.6" y="645" width="0.2" height="15.0" fill="rgb(231,207,44)" rx="2" ry="2" />
<text  x="1185.62" y="655.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_ptr (5 samples, 0.03%)</title><rect x="830.9" y="405" width="0.3" height="15.0" fill="rgb(211,224,33)" rx="2" ry="2" />
<text  x="833.90" y="415.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (32 samples, 0.16%)</title><rect x="242.7" y="325" width="1.9" height="15.0" fill="rgb(215,85,34)" rx="2" ry="2" />
<text  x="245.69" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_ptr (4 samples, 0.02%)</title><rect x="246.3" y="357" width="0.3" height="15.0" fill="rgb(223,147,39)" rx="2" ry="2" />
<text  x="249.32" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (19 samples, 0.10%)</title><rect x="118.5" y="997" width="1.2" height="15.0" fill="rgb(221,122,15)" rx="2" ry="2" />
<text  x="121.54" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="294.7" y="981" width="0.1" height="15.0" fill="rgb(253,179,4)" rx="2" ry="2" />
<text  x="297.67" y="991.5" ></text>
</g>
<g >
<title>Sprite::SetFlashEffect (9 samples, 0.05%)</title><rect x="1005.1" y="709" width="0.6" height="15.0" fill="rgb(241,84,43)" rx="2" ry="2" />
<text  x="1008.12" y="719.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (37 samples, 0.19%)</title><rect x="1009.6" y="725" width="2.3" height="15.0" fill="rgb(225,163,54)" rx="2" ry="2" />
<text  x="1012.65" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (2 samples, 0.01%)</title><rect x="110.9" y="997" width="0.1" height="15.0" fill="rgb(249,80,48)" rx="2" ry="2" />
<text  x="113.86" y="1007.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (52 samples, 0.26%)</title><rect x="780.5" y="405" width="3.1" height="15.0" fill="rgb(247,171,29)" rx="2" ry="2" />
<text  x="783.53" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::_M_ptr (6 samples, 0.03%)</title><rect x="1008.3" y="693" width="0.3" height="15.0" fill="rgb(235,187,16)" rx="2" ry="2" />
<text  x="1011.28" y="703.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (3 samples, 0.02%)</title><rect x="980.5" y="645" width="0.2" height="15.0" fill="rgb(228,93,25)" rx="2" ry="2" />
<text  x="983.53" y="655.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (47 samples, 0.24%)</title><rect x="942.7" y="389" width="2.8" height="15.0" fill="rgb(248,105,20)" rx="2" ry="2" />
<text  x="945.72" y="399.5" ></text>
</g>
<g >
<title>Bitmap::initialize_formats (30 samples, 0.15%)</title><rect x="139.1" y="549" width="1.8" height="15.0" fill="rgb(239,13,29)" rx="2" ry="2" />
<text  x="142.15" y="559.5" ></text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;Bitmap&gt;, true&gt;::~_Sp_ebo_helper (3 samples, 0.02%)</title><rect x="72.2" y="997" width="0.2" height="15.0" fill="rgb(237,187,20)" rx="2" ry="2" />
<text  x="75.22" y="1007.5" ></text>
</g>
<g >
<title>Sprite::BlitScreenIntern (9 samples, 0.05%)</title><rect x="331.0" y="821" width="0.6" height="15.0" fill="rgb(205,79,43)" rx="2" ry="2" />
<text  x="334.05" y="831.5" ></text>
</g>
<g >
<title>Game_Interpreter::ValueOrVariable (7 samples, 0.04%)</title><rect x="599.3" y="757" width="0.5" height="15.0" fill="rgb(228,91,23)" rx="2" ry="2" />
<text  x="602.35" y="767.5" ></text>
</g>
<g >
<title>operator== (4 samples, 0.02%)</title><rect x="1006.4" y="693" width="0.3" height="15.0" fill="rgb(217,42,14)" rx="2" ry="2" />
<text  x="1009.43" y="703.5" ></text>
</g>
<g >
<title>FileRequestResult::FileRequestResult (14 samples, 0.07%)</title><rect x="715.9" y="677" width="0.9" height="15.0" fill="rgb(207,61,11)" rx="2" ry="2" />
<text  x="718.93" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; (4 samples, 0.02%)</title><rect x="892.8" y="437" width="0.3" height="15.0" fill="rgb(215,101,41)" rx="2" ry="2" />
<text  x="895.83" y="447.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (4 samples, 0.02%)</title><rect x="326.2" y="581" width="0.3" height="15.0" fill="rgb(243,49,38)" rx="2" ry="2" />
<text  x="329.23" y="591.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (8 samples, 0.04%)</title><rect x="30.2" y="997" width="0.5" height="15.0" fill="rgb(236,223,1)" rx="2" ry="2" />
<text  x="33.24" y="1007.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (44 samples, 0.22%)</title><rect x="258.8" y="805" width="2.6" height="15.0" fill="rgb(214,16,8)" rx="2" ry="2" />
<text  x="261.83" y="815.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_Rb_tree_iterator (4 samples, 0.02%)</title><rect x="659.2" y="661" width="0.2" height="15.0" fill="rgb(221,34,6)" rx="2" ry="2" />
<text  x="662.18" y="671.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (2 samples, 0.01%)</title><rect x="600.1" y="725" width="0.1" height="15.0" fill="rgb(239,153,48)" rx="2" ry="2" />
<text  x="603.06" y="735.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (2 samples, 0.01%)</title><rect x="600.3" y="725" width="0.1" height="15.0" fill="rgb(254,13,26)" rx="2" ry="2" />
<text  x="603.30" y="735.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (45 samples, 0.23%)</title><rect x="245.1" y="549" width="2.7" height="15.0" fill="rgb(244,194,28)" rx="2" ry="2" />
<text  x="248.13" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (22 samples, 0.11%)</title><rect x="1019.2" y="709" width="1.3" height="15.0" fill="rgb(215,126,32)" rx="2" ry="2" />
<text  x="1022.23" y="719.5" ></text>
</g>
<g >
<title>std::__weak_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__weak_count (11 samples, 0.06%)</title><rect x="979.8" y="533" width="0.6" height="15.0" fill="rgb(212,229,45)" rx="2" ry="2" />
<text  x="982.76" y="543.5" ></text>
</g>
<g >
<title>__gthread_active_p (4 samples, 0.02%)</title><rect x="980.2" y="485" width="0.2" height="15.0" fill="rgb(217,116,10)" rx="2" ry="2" />
<text  x="983.17" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_valptr (4 samples, 0.02%)</title><rect x="760.1" y="485" width="0.2" height="15.0" fill="rgb(239,172,42)" rx="2" ry="2" />
<text  x="763.11" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (8 samples, 0.04%)</title><rect x="591.1" y="757" width="0.4" height="15.0" fill="rgb(239,46,4)" rx="2" ry="2" />
<text  x="594.07" y="767.5" ></text>
</g>
<g >
<title>Bitmap::initialize_formats (4 samples, 0.02%)</title><rect x="24.2" y="997" width="0.2" height="15.0" fill="rgb(252,30,15)" rx="2" ry="2" />
<text  x="27.17" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare@plt (2 samples, 0.01%)</title><rect x="757.2" y="405" width="0.2" height="15.0" fill="rgb(215,7,36)" rx="2" ry="2" />
<text  x="760.25" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (29 samples, 0.15%)</title><rect x="271.0" y="533" width="1.8" height="15.0" fill="rgb(205,116,22)" rx="2" ry="2" />
<text  x="274.03" y="543.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (4 samples, 0.02%)</title><rect x="267.5" y="581" width="0.3" height="15.0" fill="rgb(241,177,41)" rx="2" ry="2" />
<text  x="270.52" y="591.5" ></text>
</g>
<g >
<title>__interceptor_free (2 samples, 0.01%)</title><rect x="294.7" y="997" width="0.1" height="15.0" fill="rgb(251,157,7)" rx="2" ry="2" />
<text  x="297.67" y="1007.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::get (2 samples, 0.01%)</title><rect x="1034.6" y="741" width="0.1" height="15.0" fill="rgb(247,91,33)" rx="2" ry="2" />
<text  x="1037.60" y="751.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (2 samples, 0.01%)</title><rect x="78.9" y="997" width="0.1" height="15.0" fill="rgb(206,97,36)" rx="2" ry="2" />
<text  x="81.89" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (41 samples, 0.21%)</title><rect x="148.3" y="453" width="2.5" height="15.0" fill="rgb(242,114,4)" rx="2" ry="2" />
<text  x="151.32" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Drawable*&gt; &gt;::destroy&lt;Drawable*&gt; (3 samples, 0.02%)</title><rect x="941.9" y="405" width="0.2" height="15.0" fill="rgb(224,158,7)" rx="2" ry="2" />
<text  x="944.89" y="415.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (6 samples, 0.03%)</title><rect x="834.7" y="309" width="0.3" height="15.0" fill="rgb(228,132,7)" rx="2" ry="2" />
<text  x="837.65" y="319.5" ></text>
</g>
<g >
<title>__interceptor_free (32 samples, 0.16%)</title><rect x="242.7" y="341" width="1.9" height="15.0" fill="rgb(212,98,36)" rx="2" ry="2" />
<text  x="245.69" y="351.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (2 samples, 0.01%)</title><rect x="600.5" y="725" width="0.1" height="15.0" fill="rgb(249,198,35)" rx="2" ry="2" />
<text  x="603.48" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (30 samples, 0.15%)</title><rect x="1072.3" y="725" width="1.8" height="15.0" fill="rgb(216,124,17)" rx="2" ry="2" />
<text  x="1075.35" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::new_allocator (7 samples, 0.04%)</title><rect x="53.9" y="997" width="0.4" height="15.0" fill="rgb(244,79,45)" rx="2" ry="2" />
<text  x="56.88" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (48 samples, 0.24%)</title><rect x="974.8" y="469" width="2.8" height="15.0" fill="rgb(254,15,20)" rx="2" ry="2" />
<text  x="977.76" y="479.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (54 samples, 0.27%)</title><rect x="17.2" y="805" width="3.2" height="15.0" fill="rgb(254,127,25)" rx="2" ry="2" />
<text  x="20.20" y="815.5" ></text>
</g>
<g >
<title>Bitmap::initialize_formats (2 samples, 0.01%)</title><rect x="308.3" y="325" width="0.1" height="15.0" fill="rgb(207,102,43)" rx="2" ry="2" />
<text  x="311.30" y="335.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (3 samples, 0.02%)</title><rect x="442.2" y="789" width="0.2" height="15.0" fill="rgb(246,80,9)" rx="2" ry="2" />
<text  x="445.21" y="799.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (35 samples, 0.18%)</title><rect x="267.8" y="581" width="2.0" height="15.0" fill="rgb(245,81,52)" rx="2" ry="2" />
<text  x="270.76" y="591.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (349 samples, 1.76%)</title><rect x="267.5" y="853" width="20.8" height="15.0" fill="rgb(254,105,48)" rx="2" ry="2" />
<text  x="270.52" y="863.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (349 samples, 1.76%)</title><rect x="267.5" y="645" width="20.8" height="15.0" fill="rgb(222,15,30)" rx="2" ry="2" />
<text  x="270.52" y="655.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Set (4 samples, 0.02%)</title><rect x="33.4" y="997" width="0.2" height="15.0" fill="rgb(233,145,38)" rx="2" ry="2" />
<text  x="36.40" y="1007.5" ></text>
</g>
<g >
<title>std::swap&lt;int*&gt; (2 samples, 0.01%)</title><rect x="107.2" y="997" width="0.2" height="15.0" fill="rgb(210,190,30)" rx="2" ry="2" />
<text  x="110.23" y="1007.5" ></text>
</g>
<g >
<title>std::swap&lt;Bitmap*&gt; (12 samples, 0.06%)</title><rect x="885.9" y="469" width="0.7" height="15.0" fill="rgb(215,54,33)" rx="2" ry="2" />
<text  x="888.86" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Drawable*&gt; &gt;::destroy&lt;Drawable*&gt; (6 samples, 0.03%)</title><rect x="93.5" y="997" width="0.4" height="15.0" fill="rgb(245,30,35)" rx="2" ry="2" />
<text  x="96.54" y="1007.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (1,304 samples, 6.58%)</title><rect x="159.3" y="725" width="77.6" height="15.0" fill="rgb(207,49,41)" rx="2" ry="2" />
<text  x="162.27" y="735.5" >std::_Me..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (102 samples, 0.51%)</title><rect x="144.7" y="565" width="6.1" height="15.0" fill="rgb(207,89,34)" rx="2" ry="2" />
<text  x="147.68" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::end@plt (9 samples, 0.05%)</title><rect x="619.0" y="693" width="0.5" height="15.0" fill="rgb(222,161,38)" rx="2" ry="2" />
<text  x="621.99" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="1024.1" y="597" width="0.1" height="15.0" fill="rgb(242,208,2)" rx="2" ry="2" />
<text  x="1027.12" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (11 samples, 0.06%)</title><rect x="510.9" y="741" width="0.6" height="15.0" fill="rgb(234,0,16)" rx="2" ry="2" />
<text  x="513.87" y="751.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (29 samples, 0.15%)</title><rect x="286.6" y="421" width="1.7" height="15.0" fill="rgb(220,217,44)" rx="2" ry="2" />
<text  x="289.57" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_value (3 samples, 0.02%)</title><rect x="768.6" y="453" width="0.1" height="15.0" fill="rgb(233,212,7)" rx="2" ry="2" />
<text  x="771.56" y="463.5" ></text>
</g>
<g >
<title>FileRequestAsync::Bind&lt;Game_Picture&gt; (872 samples, 4.40%)</title><rect x="660.1" y="725" width="51.9" height="15.0" fill="rgb(228,65,4)" rx="2" ry="2" />
<text  x="663.08" y="735.5" >FileR..</text>
</g>
<g >
<title>std::vector&lt;RPG::Switch, std::allocator&lt;RPG::Switch&gt; &gt;::size (3 samples, 0.02%)</title><rect x="115.9" y="997" width="0.1" height="15.0" fill="rgb(216,41,54)" rx="2" ry="2" />
<text  x="118.87" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (6 samples, 0.03%)</title><rect x="154.3" y="549" width="0.3" height="15.0" fill="rgb(238,171,54)" rx="2" ry="2" />
<text  x="157.27" y="559.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::~_Sp_counted_ptr_inplace (4 samples, 0.02%)</title><rect x="71.4" y="997" width="0.3" height="15.0" fill="rgb(237,169,6)" rx="2" ry="2" />
<text  x="74.45" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::begin (10 samples, 0.05%)</title><rect x="968.3" y="677" width="0.6" height="15.0" fill="rgb(242,29,26)" rx="2" ry="2" />
<text  x="971.27" y="687.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (143 samples, 0.72%)</title><rect x="150.8" y="853" width="8.5" height="15.0" fill="rgb(244,138,47)" rx="2" ry="2" />
<text  x="153.76" y="863.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Game_Screen*, false&gt;::_M_head (2 samples, 0.01%)</title><rect x="1008.5" y="629" width="0.1" height="15.0" fill="rgb(240,205,29)" rx="2" ry="2" />
<text  x="1011.52" y="639.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (109 samples, 0.55%)</title><rect x="238.2" y="661" width="6.5" height="15.0" fill="rgb(225,220,47)" rx="2" ry="2" />
<text  x="241.16" y="671.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::get (5 samples, 0.03%)</title><rect x="838.9" y="405" width="0.3" height="15.0" fill="rgb(231,145,29)" rx="2" ry="2" />
<text  x="841.88" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="647.0" y="581" width="0.2" height="15.0" fill="rgb(205,180,1)" rx="2" ry="2" />
<text  x="650.04" y="591.5" ></text>
</g>
<g >
<title>calloc (61 samples, 0.31%)</title><rect x="144.7" y="485" width="3.6" height="15.0" fill="rgb(221,137,4)" rx="2" ry="2" />
<text  x="147.68" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::reset (3 samples, 0.02%)</title><rect x="267.3" y="613" width="0.2" height="15.0" fill="rgb(215,12,27)" rx="2" ry="2" />
<text  x="270.28" y="623.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (5 samples, 0.03%)</title><rect x="888.8" y="469" width="0.3" height="15.0" fill="rgb(211,128,33)" rx="2" ry="2" />
<text  x="891.78" y="479.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (7 samples, 0.04%)</title><rect x="659.6" y="677" width="0.4" height="15.0" fill="rgb(220,50,2)" rx="2" ry="2" />
<text  x="662.60" y="687.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Scene, (__gnu_cxx::_Lock_policy)2&gt;::get (4 samples, 0.02%)</title><rect x="855.7" y="437" width="0.2" height="15.0" fill="rgb(228,34,38)" rx="2" ry="2" />
<text  x="858.67" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (4 samples, 0.02%)</title><rect x="71.2" y="997" width="0.2" height="15.0" fill="rgb(251,218,37)" rx="2" ry="2" />
<text  x="74.21" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_right (9 samples, 0.05%)</title><rect x="651.9" y="661" width="0.5" height="15.0" fill="rgb(222,92,52)" rx="2" ry="2" />
<text  x="654.86" y="671.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (5 samples, 0.03%)</title><rect x="301.8" y="325" width="0.3" height="15.0" fill="rgb(217,37,2)" rx="2" ry="2" />
<text  x="304.81" y="335.5" ></text>
</g>
<g >
<title>poll (2 samples, 0.01%)</title><rect x="1180.8" y="789" width="0.1" height="15.0" fill="rgb(244,127,4)" rx="2" ry="2" />
<text  x="1183.77" y="799.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.05%)</title><rect x="1031.3" y="661" width="0.6" height="15.0" fill="rgb(222,123,49)" rx="2" ry="2" />
<text  x="1034.26" y="671.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (4 samples, 0.02%)</title><rect x="136.8" y="325" width="0.2" height="15.0" fill="rgb(251,34,2)" rx="2" ry="2" />
<text  x="139.76" y="335.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (5 samples, 0.03%)</title><rect x="292.6" y="789" width="0.3" height="15.0" fill="rgb(225,158,35)" rx="2" ry="2" />
<text  x="295.65" y="799.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (4 samples, 0.02%)</title><rect x="170.6" y="565" width="0.3" height="15.0" fill="rgb(221,142,28)" rx="2" ry="2" />
<text  x="173.64" y="575.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="21.6" y="997" width="0.1" height="15.0" fill="rgb(252,185,25)" rx="2" ry="2" />
<text  x="24.61" y="1007.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::reset (185 samples, 0.93%)</title><rect x="247.8" y="597" width="11.0" height="15.0" fill="rgb(251,193,33)" rx="2" ry="2" />
<text  x="250.81" y="607.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (4 samples, 0.02%)</title><rect x="326.2" y="597" width="0.3" height="15.0" fill="rgb(226,200,23)" rx="2" ry="2" />
<text  x="329.23" y="607.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (6 samples, 0.03%)</title><rect x="305.4" y="469" width="0.3" height="15.0" fill="rgb(217,81,27)" rx="2" ry="2" />
<text  x="308.39" y="479.5" ></text>
</g>
<g >
<title>Cache::System (3 samples, 0.02%)</title><rect x="1179.6" y="805" width="0.2" height="15.0" fill="rgb(233,189,5)" rx="2" ry="2" />
<text  x="1182.58" y="815.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (21 samples, 0.11%)</title><rect x="241.4" y="277" width="1.3" height="15.0" fill="rgb(244,182,27)" rx="2" ry="2" />
<text  x="244.44" y="287.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (26 samples, 0.13%)</title><rect x="259.9" y="469" width="1.5" height="15.0" fill="rgb(254,83,15)" rx="2" ry="2" />
<text  x="262.90" y="479.5" ></text>
</g>
<g >
<title>std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (3 samples, 0.02%)</title><rect x="104.0" y="997" width="0.1" height="15.0" fill="rgb(237,148,39)" rx="2" ry="2" />
<text  x="106.96" y="1007.5" ></text>
</g>
<g >
<title>get_page_from_freelist (9 samples, 0.05%)</title><rect x="300.9" y="341" width="0.6" height="15.0" fill="rgb(250,208,24)" rx="2" ry="2" />
<text  x="303.92" y="351.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (18 samples, 0.09%)</title><rect x="88.1" y="997" width="1.1" height="15.0" fill="rgb(224,122,9)" rx="2" ry="2" />
<text  x="91.12" y="1007.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (3 samples, 0.02%)</title><rect x="646.9" y="565" width="0.1" height="15.0" fill="rgb(227,10,50)" rx="2" ry="2" />
<text  x="649.86" y="575.5" ></text>
</g>
<g >
<title>FileRequestAsync::SetGraphicFile (32 samples, 0.16%)</title><rect x="712.1" y="725" width="1.9" height="15.0" fill="rgb(209,64,12)" rx="2" ry="2" />
<text  x="715.06" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::destroy&lt;Bitmap&gt; (9 samples, 0.05%)</title><rect x="237.6" y="405" width="0.6" height="15.0" fill="rgb(244,129,6)" rx="2" ry="2" />
<text  x="240.63" y="415.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (1,304 samples, 6.58%)</title><rect x="159.3" y="965" width="77.6" height="15.0" fill="rgb(225,22,46)" rx="2" ry="2" />
<text  x="162.27" y="975.5" >Game_Int..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_dispose (2 samples, 0.01%)</title><rect x="1024.1" y="693" width="0.1" height="15.0" fill="rgb(230,224,54)" rx="2" ry="2" />
<text  x="1027.12" y="703.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (10 samples, 0.05%)</title><rect x="1182.4" y="869" width="0.6" height="15.0" fill="rgb(224,114,52)" rx="2" ry="2" />
<text  x="1185.44" y="879.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (45 samples, 0.23%)</title><rect x="245.1" y="597" width="2.7" height="15.0" fill="rgb(215,94,42)" rx="2" ry="2" />
<text  x="248.13" y="607.5" ></text>
</g>
<g >
<title>Cache::Picture (11 samples, 0.06%)</title><rect x="237.0" y="565" width="0.6" height="15.0" fill="rgb(207,154,8)" rx="2" ry="2" />
<text  x="239.97" y="575.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (238 samples, 1.20%)</title><rect x="244.7" y="789" width="14.1" height="15.0" fill="rgb(220,1,17)" rx="2" ry="2" />
<text  x="247.65" y="799.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (10 samples, 0.05%)</title><rect x="886.6" y="485" width="0.6" height="15.0" fill="rgb(212,46,9)" rx="2" ry="2" />
<text  x="889.57" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.05%)</title><rect x="257.9" y="261" width="0.5" height="15.0" fill="rgb(242,54,30)" rx="2" ry="2" />
<text  x="260.87" y="271.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (97 samples, 0.49%)</title><rect x="878.9" y="501" width="5.8" height="15.0" fill="rgb(210,8,0)" rx="2" ry="2" />
<text  x="881.89" y="511.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (9 samples, 0.05%)</title><rect x="237.6" y="453" width="0.6" height="15.0" fill="rgb(244,191,28)" rx="2" ry="2" />
<text  x="240.63" y="463.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (21 samples, 0.11%)</title><rect x="699.0" y="613" width="1.2" height="15.0" fill="rgb(205,128,53)" rx="2" ry="2" />
<text  x="701.96" y="623.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (2 samples, 0.01%)</title><rect x="81.1" y="997" width="0.1" height="15.0" fill="rgb(207,135,16)" rx="2" ry="2" />
<text  x="84.09" y="1007.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (4 samples, 0.02%)</title><rect x="326.2" y="821" width="0.3" height="15.0" fill="rgb(221,136,29)" rx="2" ry="2" />
<text  x="329.23" y="831.5" ></text>
</g>
<g >
<title>operator new (18 samples, 0.09%)</title><rect x="143.4" y="533" width="1.1" height="15.0" fill="rgb(206,128,14)" rx="2" ry="2" />
<text  x="146.43" y="543.5" ></text>
</g>
<g >
<title>std::map&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, (anonymous namespace)::CacheItem, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (157 samples, 0.79%)</title><rect x="161.8" y="645" width="9.3" height="15.0" fill="rgb(220,117,38)" rx="2" ry="2" />
<text  x="164.77" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (42 samples, 0.21%)</title><rect x="862.5" y="469" width="2.5" height="15.0" fill="rgb(252,68,19)" rx="2" ry="2" />
<text  x="865.52" y="479.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.01%)</title><rect x="884.5" y="469" width="0.1" height="15.0" fill="rgb(245,121,50)" rx="2" ry="2" />
<text  x="887.49" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (11 samples, 0.06%)</title><rect x="950.4" y="373" width="0.7" height="15.0" fill="rgb(240,118,34)" rx="2" ry="2" />
<text  x="953.40" y="383.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (54 samples, 0.27%)</title><rect x="17.2" y="789" width="3.2" height="15.0" fill="rgb(206,198,54)" rx="2" ry="2" />
<text  x="20.20" y="799.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (11 samples, 0.06%)</title><rect x="646.5" y="629" width="0.7" height="15.0" fill="rgb(243,119,10)" rx="2" ry="2" />
<text  x="649.50" y="639.5" ></text>
</g>
<g >
<title>std::none_of&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, Input::UiSource::Update()::{lambda(int)#1}&gt; (6 samples, 0.03%)</title><rect x="332.2" y="853" width="0.4" height="15.0" fill="rgb(254,80,53)" rx="2" ry="2" />
<text  x="335.24" y="863.5" ></text>
</g>
<g >
<title>operator delete (141 samples, 0.71%)</title><rect x="971.2" y="501" width="8.4" height="15.0" fill="rgb(221,97,8)" rx="2" ry="2" />
<text  x="974.24" y="511.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.02%)</title><rect x="981.5" y="709" width="0.2" height="15.0" fill="rgb(247,39,28)" rx="2" ry="2" />
<text  x="984.54" y="719.5" ></text>
</g>
<g >
<title>Sprite::~Sprite (3 samples, 0.02%)</title><rect x="267.3" y="581" width="0.2" height="15.0" fill="rgb(229,134,44)" rx="2" ry="2" />
<text  x="270.28" y="591.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (96 samples, 0.48%)</title><rect x="238.9" y="485" width="5.7" height="15.0" fill="rgb(234,48,0)" rx="2" ry="2" />
<text  x="241.88" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (62 samples, 0.31%)</title><rect x="499.7" y="725" width="3.7" height="15.0" fill="rgb(236,100,29)" rx="2" ry="2" />
<text  x="502.67" y="735.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (166 samples, 0.84%)</title><rect x="131.0" y="709" width="9.9" height="15.0" fill="rgb(215,106,28)" rx="2" ry="2" />
<text  x="134.05" y="719.5" ></text>
</g>
<g >
<title>Utils::GetRandomNumber (2 samples, 0.01%)</title><rect x="583.0" y="757" width="0.1" height="15.0" fill="rgb(212,196,47)" rx="2" ry="2" />
<text  x="586.03" y="767.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_manager (4 samples, 0.02%)</title><rect x="61.7" y="997" width="0.3" height="15.0" fill="rgb(242,75,3)" rx="2" ry="2" />
<text  x="64.74" y="1007.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (40 samples, 0.20%)</title><rect x="165.3" y="485" width="2.4" height="15.0" fill="rgb(241,49,28)" rx="2" ry="2" />
<text  x="168.34" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (94 samples, 0.47%)</title><rect x="1068.5" y="741" width="5.6" height="15.0" fill="rgb(239,172,45)" rx="2" ry="2" />
<text  x="1071.53" y="751.5" ></text>
</g>
<g >
<title>Game_Map::Update (20 samples, 0.10%)</title><rect x="237.0" y="917" width="1.2" height="15.0" fill="rgb(231,90,15)" rx="2" ry="2" />
<text  x="239.97" y="927.5" ></text>
</g>
<g >
<title>Sprite::Flash (2 samples, 0.01%)</title><rect x="36.1" y="997" width="0.2" height="15.0" fill="rgb(233,184,22)" rx="2" ry="2" />
<text  x="39.14" y="1007.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (9 samples, 0.05%)</title><rect x="844.1" y="501" width="0.6" height="15.0" fill="rgb(223,144,12)" rx="2" ry="2" />
<text  x="847.12" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (3 samples, 0.02%)</title><rect x="510.7" y="741" width="0.2" height="15.0" fill="rgb(246,193,12)" rx="2" ry="2" />
<text  x="513.69" y="751.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator bool (15 samples, 0.08%)</title><rect x="1021.3" y="741" width="0.9" height="15.0" fill="rgb(232,197,22)" rx="2" ry="2" />
<text  x="1024.32" y="751.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (9 samples, 0.05%)</title><rect x="237.6" y="485" width="0.6" height="15.0" fill="rgb(231,51,34)" rx="2" ry="2" />
<text  x="240.63" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (30 samples, 0.15%)</title><rect x="775.6" y="373" width="1.8" height="15.0" fill="rgb(215,13,54)" rx="2" ry="2" />
<text  x="778.65" y="383.5" ></text>
</g>
<g >
<title>Game_Map::Update (44 samples, 0.22%)</title><rect x="258.8" y="933" width="2.6" height="15.0" fill="rgb(207,165,39)" rx="2" ry="2" />
<text  x="261.83" y="943.5" ></text>
</g>
<g >
<title>operator new (13 samples, 0.07%)</title><rect x="1184.1" y="1013" width="0.8" height="15.0" fill="rgb(211,205,38)" rx="2" ry="2" />
<text  x="1187.11" y="1023.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (2 samples, 0.01%)</title><rect x="861.3" y="453" width="0.1" height="15.0" fill="rgb(253,132,18)" rx="2" ry="2" />
<text  x="864.33" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt; (4 samples, 0.02%)</title><rect x="1150.6" y="837" width="0.3" height="15.0" fill="rgb(215,220,31)" rx="2" ry="2" />
<text  x="1153.64" y="847.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (26 samples, 0.13%)</title><rect x="259.9" y="501" width="1.5" height="15.0" fill="rgb(224,217,31)" rx="2" ry="2" />
<text  x="262.90" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (6 samples, 0.03%)</title><rect x="1099.9" y="757" width="0.4" height="15.0" fill="rgb(221,105,40)" rx="2" ry="2" />
<text  x="1102.91" y="767.5" ></text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;Bitmap&gt;, true&gt;::~_Sp_ebo_helper (10 samples, 0.05%)</title><rect x="952.0" y="341" width="0.5" height="15.0" fill="rgb(205,196,17)" rx="2" ry="2" />
<text  x="954.95" y="351.5" ></text>
</g>
<g >
<title>Game_Map::GetDisplayY (2 samples, 0.01%)</title><rect x="614.8" y="741" width="0.1" height="15.0" fill="rgb(223,170,53)" rx="2" ry="2" />
<text  x="617.77" y="751.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (13 samples, 0.07%)</title><rect x="1184.1" y="997" width="0.8" height="15.0" fill="rgb(238,127,27)" rx="2" ry="2" />
<text  x="1187.11" y="1007.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (350 samples, 1.77%)</title><rect x="267.5" y="965" width="20.8" height="15.0" fill="rgb(227,22,46)" rx="2" ry="2" />
<text  x="270.46" y="975.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (196 samples, 0.99%)</title><rect x="948.3" y="437" width="11.7" height="15.0" fill="rgb(247,140,43)" rx="2" ry="2" />
<text  x="951.32" y="447.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.03%)</title><rect x="238.6" y="517" width="0.3" height="15.0" fill="rgb(236,139,13)" rx="2" ry="2" />
<text  x="241.58" y="527.5" ></text>
</g>
<g >
<title>Bitmap::width (2 samples, 0.01%)</title><rect x="1002.6" y="709" width="0.1" height="15.0" fill="rgb(248,137,6)" rx="2" ry="2" />
<text  x="1005.56" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_ptr (2 samples, 0.01%)</title><rect x="760.2" y="469" width="0.1" height="15.0" fill="rgb(243,204,21)" rx="2" ry="2" />
<text  x="763.23" y="479.5" ></text>
</g>
<g >
<title>operator new (42 samples, 0.21%)</title><rect x="722.5" y="645" width="2.5" height="15.0" fill="rgb(215,132,31)" rx="2" ry="2" />
<text  x="725.54" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (8 samples, 0.04%)</title><rect x="1176.8" y="821" width="0.5" height="15.0" fill="rgb(233,152,7)" rx="2" ry="2" />
<text  x="1179.84" y="831.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (16 samples, 0.08%)</title><rect x="858.2" y="501" width="1.0" height="15.0" fill="rgb(243,182,38)" rx="2" ry="2" />
<text  x="861.23" y="511.5" ></text>
</g>
<g >
<title>std::__weak_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__weak_count (4 samples, 0.02%)</title><rect x="669.7" y="629" width="0.3" height="15.0" fill="rgb(216,76,45)" rx="2" ry="2" />
<text  x="672.72" y="639.5" ></text>
</g>
<g >
<title>put_timespec64 (15 samples, 0.08%)</title><rect x="282.3" y="485" width="0.9" height="15.0" fill="rgb(244,101,44)" rx="2" ry="2" />
<text  x="285.34" y="495.5" ></text>
</g>
<g >
<title>memcmp@plt (3 samples, 0.02%)</title><rect x="777.3" y="357" width="0.1" height="15.0" fill="rgb(244,84,43)" rx="2" ry="2" />
<text  x="780.26" y="367.5" ></text>
</g>
<g >
<title>operator delete (35 samples, 0.18%)</title><rect x="267.8" y="597" width="2.0" height="15.0" fill="rgb(221,175,46)" rx="2" ry="2" />
<text  x="270.76" y="607.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (12 samples, 0.06%)</title><rect x="256.6" y="133" width="0.7" height="15.0" fill="rgb(244,229,25)" rx="2" ry="2" />
<text  x="259.56" y="143.5" ></text>
</g>
<g >
<title>Bitmap::height (4 samples, 0.02%)</title><rect x="1002.3" y="709" width="0.3" height="15.0" fill="rgb(231,24,34)" rx="2" ry="2" />
<text  x="1005.32" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (2 samples, 0.01%)</title><rect x="1079.8" y="773" width="0.2" height="15.0" fill="rgb(226,40,25)" rx="2" ry="2" />
<text  x="1082.85" y="783.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_key (25 samples, 0.13%)</title><rect x="753.3" y="437" width="1.4" height="15.0" fill="rgb(210,7,37)" rx="2" ry="2" />
<text  x="756.26" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_weak_release (8 samples, 0.04%)</title><rect x="979.9" y="517" width="0.5" height="15.0" fill="rgb(219,140,16)" rx="2" ry="2" />
<text  x="982.94" y="527.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (58 samples, 0.29%)</title><rect x="305.7" y="485" width="3.5" height="15.0" fill="rgb(226,202,43)" rx="2" ry="2" />
<text  x="308.74" y="495.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (3,990 samples, 20.13%)</title><rect x="728.8" y="565" width="237.6" height="15.0" fill="rgb(231,82,18)" rx="2" ry="2" />
<text  x="731.79" y="575.5" >std::__invoke&lt;void (Game_Pictur..</text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator bool (3 samples, 0.02%)</title><rect x="82.8" y="997" width="0.2" height="15.0" fill="rgb(223,191,27)" rx="2" ry="2" />
<text  x="85.82" y="1007.5" ></text>
</g>
<g >
<title>std::operator- (2 samples, 0.01%)</title><rect x="336.6" y="773" width="0.1" height="15.0" fill="rgb(210,114,2)" rx="2" ry="2" />
<text  x="339.59" y="783.5" ></text>
</g>
<g >
<title>Game_Screen::Update (453 samples, 2.29%)</title><rect x="1152.2" y="853" width="27.0" height="15.0" fill="rgb(252,210,36)" rx="2" ry="2" />
<text  x="1155.19" y="863.5" >G..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (20 samples, 0.10%)</title><rect x="1175.5" y="821" width="1.2" height="15.0" fill="rgb(248,49,41)" rx="2" ry="2" />
<text  x="1178.53" y="831.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::_Vector_impl::~_Vector_impl (4 samples, 0.02%)</title><rect x="959.5" y="293" width="0.3" height="15.0" fill="rgb(249,200,39)" rx="2" ry="2" />
<text  x="962.51" y="303.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (515 samples, 2.60%)</title><rect x="294.8" y="789" width="30.7" height="15.0" fill="rgb(210,80,37)" rx="2" ry="2" />
<text  x="297.79" y="799.5" >Ga..</text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (4 samples, 0.02%)</title><rect x="326.2" y="693" width="0.3" height="15.0" fill="rgb(250,145,53)" rx="2" ry="2" />
<text  x="329.23" y="703.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (9 samples, 0.05%)</title><rect x="130.5" y="901" width="0.5" height="15.0" fill="rgb(218,88,17)" rx="2" ry="2" />
<text  x="133.51" y="911.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (2 samples, 0.01%)</title><rect x="125.5" y="997" width="0.1" height="15.0" fill="rgb(229,50,10)" rx="2" ry="2" />
<text  x="128.51" y="1007.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;int&gt;::shared_ptr&lt;std::allocator&lt;int&gt;, int&gt; (163 samples, 0.82%)</title><rect x="671.0" y="661" width="9.7" height="15.0" fill="rgb(207,26,23)" rx="2" ry="2" />
<text  x="674.03" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (8 samples, 0.04%)</title><rect x="981.3" y="725" width="0.5" height="15.0" fill="rgb(247,31,48)" rx="2" ry="2" />
<text  x="984.31" y="735.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (20 samples, 0.10%)</title><rect x="237.0" y="901" width="1.2" height="15.0" fill="rgb(209,209,5)" rx="2" ry="2" />
<text  x="239.97" y="911.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (29 samples, 0.15%)</title><rect x="286.6" y="517" width="1.7" height="15.0" fill="rgb(231,23,10)" rx="2" ry="2" />
<text  x="289.57" y="527.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (143 samples, 0.72%)</title><rect x="150.8" y="789" width="8.5" height="15.0" fill="rgb(237,133,27)" rx="2" ry="2" />
<text  x="153.76" y="799.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (9 samples, 0.05%)</title><rect x="130.5" y="725" width="0.5" height="15.0" fill="rgb(251,115,15)" rx="2" ry="2" />
<text  x="133.51" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (9 samples, 0.05%)</title><rect x="377.5" y="773" width="0.5" height="15.0" fill="rgb(253,194,47)" rx="2" ry="2" />
<text  x="380.49" y="783.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (1,304 samples, 6.58%)</title><rect x="159.3" y="677" width="77.6" height="15.0" fill="rgb(216,161,10)" rx="2" ry="2" />
<text  x="162.27" y="687.5" >Game_Pic..</text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.01%)</title><rect x="258.1" y="149" width="0.1" height="15.0" fill="rgb(249,187,25)" rx="2" ry="2" />
<text  x="261.11" y="159.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (101 samples, 0.51%)</title><rect x="261.4" y="725" width="6.1" height="15.0" fill="rgb(250,94,53)" rx="2" ry="2" />
<text  x="264.45" y="735.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (13 samples, 0.07%)</title><rect x="709.1" y="581" width="0.8" height="15.0" fill="rgb(241,223,28)" rx="2" ry="2" />
<text  x="712.14" y="591.5" ></text>
</g>
<g >
<title>Game_Interpreter::OnFinishStackFrame (3 samples, 0.02%)</title><rect x="442.2" y="805" width="0.2" height="15.0" fill="rgb(241,196,8)" rx="2" ry="2" />
<text  x="445.21" y="815.5" ></text>
</g>
<g >
<title>Scene_Map::Update (238 samples, 1.20%)</title><rect x="244.7" y="981" width="14.1" height="15.0" fill="rgb(211,197,5)" rx="2" ry="2" />
<text  x="247.65" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare@plt (4 samples, 0.02%)</title><rect x="658.2" y="629" width="0.2" height="15.0" fill="rgb(214,148,10)" rx="2" ry="2" />
<text  x="661.17" y="639.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustParams (2 samples, 0.01%)</title><rect x="34.3" y="997" width="0.1" height="15.0" fill="rgb(247,71,48)" rx="2" ry="2" />
<text  x="37.29" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;::operator* (24 samples, 0.12%)</title><rect x="901.5" y="389" width="1.4" height="15.0" fill="rgb(228,112,23)" rx="2" ry="2" />
<text  x="904.52" y="399.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; (24 samples, 0.12%)</title><rect x="944.1" y="373" width="1.4" height="15.0" fill="rgb(215,76,20)" rx="2" ry="2" />
<text  x="947.09" y="383.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (349 samples, 1.76%)</title><rect x="267.5" y="789" width="20.8" height="15.0" fill="rgb(211,158,52)" rx="2" ry="2" />
<text  x="270.52" y="799.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (3 samples, 0.02%)</title><rect x="999.0" y="709" width="0.2" height="15.0" fill="rgb(231,36,2)" rx="2" ry="2" />
<text  x="1001.99" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_M_lower_bound (84 samples, 0.42%)</title><rect x="752.5" y="453" width="5.0" height="15.0" fill="rgb(253,32,45)" rx="2" ry="2" />
<text  x="755.49" y="463.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::~__weak_ptr (3 samples, 0.02%)</title><rect x="89.9" y="997" width="0.2" height="15.0" fill="rgb(254,30,48)" rx="2" ry="2" />
<text  x="92.91" y="1007.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (20 samples, 0.10%)</title><rect x="237.0" y="885" width="1.2" height="15.0" fill="rgb(253,122,49)" rx="2" ry="2" />
<text  x="239.97" y="895.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (9 samples, 0.05%)</title><rect x="615.2" y="725" width="0.5" height="15.0" fill="rgb(212,91,1)" rx="2" ry="2" />
<text  x="618.18" y="735.5" ></text>
</g>
<g >
<title>DynamicFormat::code_alpha (12 samples, 0.06%)</title><rect x="308.4" y="325" width="0.7" height="15.0" fill="rgb(239,133,10)" rx="2" ry="2" />
<text  x="311.42" y="335.5" ></text>
</g>
<g >
<title>std::mem_fn&lt;void (FileRequestResult*), Game_Picture&gt; (7 samples, 0.04%)</title><rect x="102.6" y="997" width="0.4" height="15.0" fill="rgb(220,147,21)" rx="2" ry="2" />
<text  x="105.59" y="1007.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (238 samples, 1.20%)</title><rect x="244.7" y="613" width="14.1" height="15.0" fill="rgb(226,110,6)" rx="2" ry="2" />
<text  x="247.65" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::_M_ptr (4 samples, 0.02%)</title><rect x="713.6" y="661" width="0.2" height="15.0" fill="rgb(246,183,48)" rx="2" ry="2" />
<text  x="716.61" y="671.5" ></text>
</g>
<g >
<title>Color::Color (3 samples, 0.02%)</title><rect x="843.2" y="501" width="0.1" height="15.0" fill="rgb(221,39,25)" rx="2" ry="2" />
<text  x="846.17" y="511.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (3,997 samples, 20.17%)</title><rect x="728.6" y="597" width="238.0" height="15.0" fill="rgb(235,4,17)" rx="2" ry="2" />
<text  x="731.61" y="607.5" >std::__invoke_impl&lt;void, std::_..</text>
</g>
<g >
<title>std::forward&lt;FileRequestResult*&gt; (10 samples, 0.05%)</title><rect x="94.0" y="997" width="0.6" height="15.0" fill="rgb(252,197,47)" rx="2" ry="2" />
<text  x="97.01" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator!= (2 samples, 0.01%)</title><rect x="647.5" y="709" width="0.1" height="15.0" fill="rgb(232,86,25)" rx="2" ry="2" />
<text  x="650.51" y="719.5" ></text>
</g>
<g >
<title>[[stack]] (1,665 samples, 8.40%)</title><rect x="22.0" y="1013" width="99.1" height="15.0" fill="rgb(234,227,50)" rx="2" ry="2" />
<text  x="24.97" y="1023.5" >[[stack]]</text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.04%)</title><rect x="963.6" y="405" width="0.4" height="15.0" fill="rgb(230,4,43)" rx="2" ry="2" />
<text  x="966.62" y="415.5" ></text>
</g>
<g >
<title>[unknown] (3,369 samples, 17.00%)</title><rect x="130.2" y="1013" width="200.6" height="15.0" fill="rgb(211,136,4)" rx="2" ry="2" />
<text  x="133.16" y="1023.5" >[unknown]</text>
</g>
<g >
<title>FileRequestAsync::Start (4 samples, 0.02%)</title><rect x="326.2" y="741" width="0.3" height="15.0" fill="rgb(220,148,8)" rx="2" ry="2" />
<text  x="329.23" y="751.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (154 samples, 0.78%)</title><rect x="619.5" y="693" width="9.2" height="15.0" fill="rgb(220,200,15)" rx="2" ry="2" />
<text  x="622.53" y="703.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~tuple (16 samples, 0.08%)</title><rect x="285.6" y="613" width="1.0" height="15.0" fill="rgb(232,24,2)" rx="2" ry="2" />
<text  x="288.62" y="623.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (2 samples, 0.01%)</title><rect x="301.6" y="341" width="0.1" height="15.0" fill="rgb(242,173,2)" rx="2" ry="2" />
<text  x="304.58" y="351.5" ></text>
</g>
<g >
<title>Game_Map::Refresh (3 samples, 0.02%)</title><rect x="31.0" y="997" width="0.2" height="15.0" fill="rgb(220,40,19)" rx="2" ry="2" />
<text  x="34.02" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;::operator++ (86 samples, 0.43%)</title><rect x="902.9" y="389" width="5.2" height="15.0" fill="rgb(222,85,40)" rx="2" ry="2" />
<text  x="905.95" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data@plt (3 samples, 0.02%)</title><rect x="625.5" y="661" width="0.2" height="15.0" fill="rgb(226,55,15)" rx="2" ry="2" />
<text  x="628.48" y="671.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::operator[] (49 samples, 0.25%)</title><rect x="264.4" y="421" width="2.9" height="15.0" fill="rgb(252,167,34)" rx="2" ry="2" />
<text  x="267.36" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, bool&gt;::_M_head (2 samples, 0.01%)</title><rect x="74.2" y="997" width="0.2" height="15.0" fill="rgb(220,159,23)" rx="2" ry="2" />
<text  x="77.25" y="1007.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (15 samples, 0.08%)</title><rect x="771.5" y="373" width="0.9" height="15.0" fill="rgb(227,113,5)" rx="2" ry="2" />
<text  x="774.54" y="383.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (49 samples, 0.25%)</title><rect x="791.6" y="485" width="2.9" height="15.0" fill="rgb(244,96,46)" rx="2" ry="2" />
<text  x="794.61" y="495.5" ></text>
</g>
<g >
<title>Color::Color (7 samples, 0.04%)</title><rect x="1164.4" y="773" width="0.4" height="15.0" fill="rgb(252,55,25)" rx="2" ry="2" />
<text  x="1167.40" y="783.5" ></text>
</g>
<g >
<title>operator delete (26 samples, 0.13%)</title><rect x="259.9" y="389" width="1.5" height="15.0" fill="rgb(239,225,11)" rx="2" ry="2" />
<text  x="262.90" y="399.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (12 samples, 0.06%)</title><rect x="324.7" y="405" width="0.8" height="15.0" fill="rgb(226,25,16)" rx="2" ry="2" />
<text  x="327.74" y="415.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (514 samples, 2.59%)</title><rect x="294.8" y="725" width="30.7" height="15.0" fill="rgb(230,108,17)" rx="2" ry="2" />
<text  x="297.85" y="735.5" >Fi..</text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (2 samples, 0.01%)</title><rect x="1056.3" y="757" width="0.1" height="15.0" fill="rgb(234,201,42)" rx="2" ry="2" />
<text  x="1059.33" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_M_begin (5 samples, 0.03%)</title><rect x="247.4" y="357" width="0.3" height="15.0" fill="rgb(219,113,41)" rx="2" ry="2" />
<text  x="250.39" y="367.5" ></text>
</g>
<g >
<title>std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt;&amp;, true&gt; (5 samples, 0.03%)</title><rect x="105.7" y="997" width="0.3" height="15.0" fill="rgb(242,145,26)" rx="2" ry="2" />
<text  x="108.74" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::size (99 samples, 0.50%)</title><rect x="1140.7" y="805" width="5.9" height="15.0" fill="rgb(208,95,51)" rx="2" ry="2" />
<text  x="1143.70" y="815.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.01%)</title><rect x="710.1" y="613" width="0.1" height="15.0" fill="rgb(221,176,35)" rx="2" ry="2" />
<text  x="713.09" y="623.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (2 samples, 0.01%)</title><rect x="1163.6" y="773" width="0.1" height="15.0" fill="rgb(238,93,46)" rx="2" ry="2" />
<text  x="1166.62" y="783.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (213 samples, 1.07%)</title><rect x="999.2" y="741" width="12.7" height="15.0" fill="rgb(214,65,2)" rx="2" ry="2" />
<text  x="1002.17" y="751.5" ></text>
</g>
<g >
<title>Game_Picture::Show (4 samples, 0.02%)</title><rect x="326.2" y="773" width="0.3" height="15.0" fill="rgb(214,109,3)" rx="2" ry="2" />
<text  x="329.23" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::_M_erase_at_end (191 samples, 0.96%)</title><rect x="969.3" y="661" width="11.4" height="15.0" fill="rgb(226,162,43)" rx="2" ry="2" />
<text  x="972.34" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (13 samples, 0.07%)</title><rect x="1011.9" y="725" width="0.7" height="15.0" fill="rgb(250,144,20)" rx="2" ry="2" />
<text  x="1014.85" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_left (8 samples, 0.04%)</title><rect x="767.8" y="453" width="0.5" height="15.0" fill="rgb(247,205,2)" rx="2" ry="2" />
<text  x="770.85" y="463.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (89 samples, 0.45%)</title><rect x="674.4" y="613" width="5.3" height="15.0" fill="rgb(209,150,53)" rx="2" ry="2" />
<text  x="677.37" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator (10 samples, 0.05%)</title><rect x="1178.6" y="837" width="0.6" height="15.0" fill="rgb(232,96,51)" rx="2" ry="2" />
<text  x="1181.57" y="847.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (5 samples, 0.03%)</title><rect x="786.2" y="389" width="0.3" height="15.0" fill="rgb(232,145,18)" rx="2" ry="2" />
<text  x="789.25" y="399.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (49 samples, 0.25%)</title><rect x="264.4" y="405" width="2.9" height="15.0" fill="rgb(223,196,31)" rx="2" ry="2" />
<text  x="267.36" y="415.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (3 samples, 0.02%)</title><rect x="1172.1" y="757" width="0.2" height="15.0" fill="rgb(219,34,26)" rx="2" ry="2" />
<text  x="1175.08" y="767.5" ></text>
</g>
<g >
<title>calloc (17 samples, 0.09%)</title><rect x="141.1" y="469" width="1.0" height="15.0" fill="rgb(246,136,45)" rx="2" ry="2" />
<text  x="144.05" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (61 samples, 0.31%)</title><rect x="503.5" y="741" width="3.6" height="15.0" fill="rgb(226,135,19)" rx="2" ry="2" />
<text  x="506.48" y="751.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (74 samples, 0.37%)</title><rect x="664.5" y="597" width="4.4" height="15.0" fill="rgb(211,86,31)" rx="2" ry="2" />
<text  x="667.54" y="607.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (36 samples, 0.18%)</title><rect x="234.7" y="469" width="2.1" height="15.0" fill="rgb(245,158,53)" rx="2" ry="2" />
<text  x="237.65" y="479.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (166 samples, 0.84%)</title><rect x="131.0" y="933" width="9.9" height="15.0" fill="rgb(237,1,30)" rx="2" ry="2" />
<text  x="134.05" y="943.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (1,304 samples, 6.58%)</title><rect x="159.3" y="789" width="77.6" height="15.0" fill="rgb(229,48,51)" rx="2" ry="2" />
<text  x="162.27" y="799.5" >std::_Bi..</text>
</g>
<g >
<title>std::make_shared&lt;int, int&gt; (181 samples, 0.91%)</title><rect x="670.1" y="693" width="10.8" height="15.0" fill="rgb(205,66,53)" rx="2" ry="2" />
<text  x="673.14" y="703.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::get (2 samples, 0.01%)</title><rect x="857.5" y="469" width="0.1" height="15.0" fill="rgb(222,103,28)" rx="2" ry="2" />
<text  x="860.46" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (18 samples, 0.09%)</title><rect x="1044.1" y="741" width="1.0" height="15.0" fill="rgb(239,43,54)" rx="2" ry="2" />
<text  x="1047.06" y="751.5" ></text>
</g>
<g >
<title>operator delete (49 samples, 0.25%)</title><rect x="261.4" y="581" width="3.0" height="15.0" fill="rgb(246,14,10)" rx="2" ry="2" />
<text  x="264.45" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (2 samples, 0.01%)</title><rect x="601.3" y="757" width="0.1" height="15.0" fill="rgb(218,83,8)" rx="2" ry="2" />
<text  x="604.25" y="767.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt;::~allocator (3 samples, 0.02%)</title><rect x="959.6" y="277" width="0.2" height="15.0" fill="rgb(246,149,52)" rx="2" ry="2" />
<text  x="962.57" y="287.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::~__weak_ptr (3 samples, 0.02%)</title><rect x="681.0" y="661" width="0.2" height="15.0" fill="rgb(228,13,45)" rx="2" ry="2" />
<text  x="683.98" y="671.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (3 samples, 0.02%)</title><rect x="150.6" y="437" width="0.2" height="15.0" fill="rgb(212,97,12)" rx="2" ry="2" />
<text  x="153.58" y="447.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (4 samples, 0.02%)</title><rect x="326.2" y="853" width="0.3" height="15.0" fill="rgb(250,38,25)" rx="2" ry="2" />
<text  x="329.23" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::size (3 samples, 0.02%)</title><rect x="116.7" y="997" width="0.2" height="15.0" fill="rgb(241,93,46)" rx="2" ry="2" />
<text  x="119.70" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::CommonEvent, std::allocator&lt;RPG::CommonEvent&gt; &gt;::operator[] (4 samples, 0.02%)</title><rect x="1150.2" y="805" width="0.2" height="15.0" fill="rgb(252,182,51)" rx="2" ry="2" />
<text  x="1153.17" y="815.5" ></text>
</g>
<g >
<title>Bitmap::height (5 samples, 0.03%)</title><rect x="840.2" y="485" width="0.3" height="15.0" fill="rgb(209,216,36)" rx="2" ry="2" />
<text  x="843.19" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (4 samples, 0.02%)</title><rect x="716.3" y="661" width="0.2" height="15.0" fill="rgb(244,15,20)" rx="2" ry="2" />
<text  x="719.29" y="671.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (963 samples, 4.86%)</title><rect x="179.6" y="533" width="57.3" height="15.0" fill="rgb(238,149,33)" rx="2" ry="2" />
<text  x="182.58" y="543.5" >std::_..</text>
</g>
<g >
<title>perf_pmu_enable.part.105 (55 samples, 0.28%)</title><rect x="17.1" y="837" width="3.3" height="15.0" fill="rgb(248,71,50)" rx="2" ry="2" />
<text  x="20.15" y="847.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (238 samples, 1.20%)</title><rect x="244.7" y="885" width="14.1" height="15.0" fill="rgb(219,13,54)" rx="2" ry="2" />
<text  x="247.65" y="895.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (95 samples, 0.48%)</title><rect x="652.8" y="645" width="5.6" height="15.0" fill="rgb(247,141,20)" rx="2" ry="2" />
<text  x="655.75" y="655.5" ></text>
</g>
<g >
<title>__interceptor_free (6 samples, 0.03%)</title><rect x="958.4" y="309" width="0.4" height="15.0" fill="rgb(248,58,35)" rx="2" ry="2" />
<text  x="961.44" y="319.5" ></text>
</g>
<g >
<title>std::forward&lt;void (Game_Picture::* const&amp;)(FileRequestResult*)&gt; (2 samples, 0.01%)</title><rect x="966.2" y="549" width="0.2" height="15.0" fill="rgb(221,223,48)" rx="2" ry="2" />
<text  x="969.24" y="559.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (58 samples, 0.29%)</title><rect x="141.1" y="981" width="3.4" height="15.0" fill="rgb(239,191,54)" rx="2" ry="2" />
<text  x="144.05" y="991.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (62 samples, 0.31%)</title><rect x="321.0" y="293" width="3.7" height="15.0" fill="rgb(251,229,33)" rx="2" ry="2" />
<text  x="323.99" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (2 samples, 0.01%)</title><rect x="596.9" y="725" width="0.1" height="15.0" fill="rgb(206,50,38)" rx="2" ry="2" />
<text  x="599.90" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (6 samples, 0.03%)</title><rect x="512.0" y="757" width="0.4" height="15.0" fill="rgb(248,201,45)" rx="2" ry="2" />
<text  x="515.00" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (3 samples, 0.02%)</title><rect x="1075.7" y="757" width="0.2" height="15.0" fill="rgb(245,71,34)" rx="2" ry="2" />
<text  x="1078.74" y="767.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (4 samples, 0.02%)</title><rect x="331.8" y="853" width="0.3" height="15.0" fill="rgb(251,21,24)" rx="2" ry="2" />
<text  x="334.82" y="863.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, Drawable**, Drawable**&gt; (963 samples, 4.86%)</title><rect x="179.6" y="517" width="57.3" height="15.0" fill="rgb(244,88,9)" rx="2" ry="2" />
<text  x="182.58" y="527.5" >std::_..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (15 samples, 0.08%)</title><rect x="1062.5" y="725" width="0.9" height="15.0" fill="rgb(233,45,34)" rx="2" ry="2" />
<text  x="1065.46" y="735.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (5 samples, 0.03%)</title><rect x="859.3" y="469" width="0.3" height="15.0" fill="rgb(214,182,21)" rx="2" ry="2" />
<text  x="862.30" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int&gt; (2 samples, 0.01%)</title><rect x="674.2" y="581" width="0.2" height="15.0" fill="rgb(249,57,2)" rx="2" ry="2" />
<text  x="677.25" y="591.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (8 samples, 0.04%)</title><rect x="1174.3" y="725" width="0.5" height="15.0" fill="rgb(250,189,15)" rx="2" ry="2" />
<text  x="1177.34" y="735.5" ></text>
</g>
<g >
<title>Cache::SystemOrBlack (5 samples, 0.03%)</title><rect x="1179.8" y="821" width="0.3" height="15.0" fill="rgb(245,3,31)" rx="2" ry="2" />
<text  x="1182.76" y="831.5" ></text>
</g>
<g >
<title>std::forward&lt;Game_Picture*&amp;&gt; (2 samples, 0.01%)</title><rect x="689.0" y="629" width="0.1" height="15.0" fill="rgb(228,53,51)" rx="2" ry="2" />
<text  x="691.96" y="639.5" ></text>
</g>
<g >
<title>Sdl2Ui::ProcessEvent (39 samples, 0.20%)</title><rect x="1180.1" y="885" width="2.3" height="15.0" fill="rgb(213,17,16)" rx="2" ry="2" />
<text  x="1183.12" y="895.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (5 samples, 0.03%)</title><rect x="1060.0" y="741" width="0.3" height="15.0" fill="rgb(229,104,53)" rx="2" ry="2" />
<text  x="1063.02" y="751.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipTo (395 samples, 1.99%)</title><rect x="485.3" y="757" width="23.5" height="15.0" fill="rgb(247,85,28)" rx="2" ry="2" />
<text  x="488.32" y="767.5" >G..</text>
</g>
<g >
<title>Game_Interpreter::CommandWait (29 samples, 0.15%)</title><rect x="1037.0" y="773" width="1.8" height="15.0" fill="rgb(211,53,5)" rx="2" ry="2" />
<text  x="1040.04" y="783.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (3 samples, 0.02%)</title><rect x="38.0" y="997" width="0.2" height="15.0" fill="rgb(246,70,4)" rx="2" ry="2" />
<text  x="41.04" y="1007.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (2 samples, 0.01%)</title><rect x="79.7" y="997" width="0.1" height="15.0" fill="rgb(243,167,47)" rx="2" ry="2" />
<text  x="82.66" y="1007.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (98 samples, 0.49%)</title><rect x="652.6" y="661" width="5.8" height="15.0" fill="rgb(236,183,37)" rx="2" ry="2" />
<text  x="655.58" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.05%)</title><rect x="175.0" y="485" width="0.6" height="15.0" fill="rgb(248,146,32)" rx="2" ry="2" />
<text  x="178.05" y="495.5" ></text>
</g>
<g >
<title>all (19,818 samples, 100%)</title><rect x="10.0" y="1045" width="1180.0" height="15.0" fill="rgb(211,218,12)" rx="2" ry="2" />
<text  x="13.00" y="1055.5" ></text>
</g>
<g >
<title>Game_Map::GetDisplayX (2 samples, 0.01%)</title><rect x="30.7" y="997" width="0.1" height="15.0" fill="rgb(207,192,15)" rx="2" ry="2" />
<text  x="33.72" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;@plt (2 samples, 0.01%)</title><rect x="626.9" y="677" width="0.1" height="15.0" fill="rgb(233,89,28)" rx="2" ry="2" />
<text  x="629.91" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_M_lower_bound (158 samples, 0.80%)</title><rect x="649.1" y="677" width="9.4" height="15.0" fill="rgb(249,110,32)" rx="2" ry="2" />
<text  x="652.12" y="687.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.01%)</title><rect x="258.1" y="117" width="0.1" height="15.0" fill="rgb(220,10,24)" rx="2" ry="2" />
<text  x="261.11" y="127.5" ></text>
</g>
<g >
<title>std::default_delete&lt;Sprite&gt;::operator() (26 samples, 0.13%)</title><rect x="259.9" y="565" width="1.5" height="15.0" fill="rgb(220,142,37)" rx="2" ry="2" />
<text  x="262.90" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (2 samples, 0.01%)</title><rect x="1163.0" y="773" width="0.1" height="15.0" fill="rgb(224,145,14)" rx="2" ry="2" />
<text  x="1166.03" y="783.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (11 samples, 0.06%)</title><rect x="237.0" y="517" width="0.6" height="15.0" fill="rgb(213,188,32)" rx="2" ry="2" />
<text  x="239.97" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (38 samples, 0.19%)</title><rect x="986.5" y="645" width="2.2" height="15.0" fill="rgb(239,15,6)" rx="2" ry="2" />
<text  x="989.49" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (14 samples, 0.07%)</title><rect x="483.3" y="725" width="0.8" height="15.0" fill="rgb(228,73,9)" rx="2" ry="2" />
<text  x="486.30" y="735.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (3 samples, 0.02%)</title><rect x="324.5" y="277" width="0.2" height="15.0" fill="rgb(222,203,17)" rx="2" ry="2" />
<text  x="327.50" y="287.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;Drawable*&gt; (3 samples, 0.02%)</title><rect x="76.3" y="997" width="0.2" height="15.0" fill="rgb(206,110,43)" rx="2" ry="2" />
<text  x="79.33" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (2 samples, 0.01%)</title><rect x="1115.0" y="789" width="0.2" height="15.0" fill="rgb(254,98,13)" rx="2" ry="2" />
<text  x="1118.04" y="799.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (56 samples, 0.28%)</title><rect x="861.9" y="485" width="3.4" height="15.0" fill="rgb(234,180,35)" rx="2" ry="2" />
<text  x="864.92" y="495.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (1,304 samples, 6.58%)</title><rect x="159.3" y="981" width="77.6" height="15.0" fill="rgb(246,10,51)" rx="2" ry="2" />
<text  x="162.27" y="991.5" >Game_Com..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::push_back (78 samples, 0.39%)</title><rect x="681.2" y="693" width="4.6" height="15.0" fill="rgb(248,129,42)" rx="2" ry="2" />
<text  x="684.16" y="703.5" ></text>
</g>
<g >
<title>do_sys_poll (74 samples, 0.37%)</title><rect x="16.2" y="965" width="4.4" height="15.0" fill="rgb(238,46,17)" rx="2" ry="2" />
<text  x="19.19" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_M_lower_bound (149 samples, 0.75%)</title><rect x="161.8" y="613" width="8.8" height="15.0" fill="rgb(224,24,38)" rx="2" ry="2" />
<text  x="164.77" y="623.5" ></text>
</g>
<g >
<title>FileRequestAsync::Bind (427 samples, 2.15%)</title><rect x="661.6" y="709" width="25.5" height="15.0" fill="rgb(249,143,27)" rx="2" ry="2" />
<text  x="664.63" y="719.5" >F..</text>
</g>
<g >
<title>Sprite::SetZ (25 samples, 0.13%)</title><rect x="854.4" y="501" width="1.5" height="15.0" fill="rgb(252,75,34)" rx="2" ry="2" />
<text  x="857.42" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; (3 samples, 0.02%)</title><rect x="937.4" y="389" width="0.1" height="15.0" fill="rgb(253,190,23)" rx="2" ry="2" />
<text  x="940.36" y="399.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (14 samples, 0.07%)</title><rect x="292.9" y="997" width="0.9" height="15.0" fill="rgb(247,181,29)" rx="2" ry="2" />
<text  x="295.94" y="1007.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (143 samples, 0.72%)</title><rect x="150.8" y="837" width="8.5" height="15.0" fill="rgb(225,135,24)" rx="2" ry="2" />
<text  x="153.76" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (14 samples, 0.07%)</title><rect x="597.1" y="741" width="0.9" height="15.0" fill="rgb(228,21,24)" rx="2" ry="2" />
<text  x="600.14" y="751.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (23 samples, 0.12%)</title><rect x="718.8" y="629" width="1.4" height="15.0" fill="rgb(220,107,13)" rx="2" ry="2" />
<text  x="721.79" y="639.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (5 samples, 0.03%)</title><rect x="599.5" y="741" width="0.3" height="15.0" fill="rgb(230,15,26)" rx="2" ry="2" />
<text  x="602.46" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base (4 samples, 0.02%)</title><rect x="633.7" y="677" width="0.2" height="15.0" fill="rgb(233,177,35)" rx="2" ry="2" />
<text  x="636.70" y="687.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (3 samples, 0.02%)</title><rect x="893.1" y="437" width="0.1" height="15.0" fill="rgb(222,211,24)" rx="2" ry="2" />
<text  x="896.06" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.02%)</title><rect x="1182.6" y="677" width="0.2" height="15.0" fill="rgb(215,47,2)" rx="2" ry="2" />
<text  x="1185.62" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (157 samples, 0.79%)</title><rect x="161.8" y="629" width="9.3" height="15.0" fill="rgb(239,91,23)" rx="2" ry="2" />
<text  x="164.77" y="639.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (41 samples, 0.21%)</title><rect x="509.1" y="757" width="2.4" height="15.0" fill="rgb(249,44,34)" rx="2" ry="2" />
<text  x="512.08" y="767.5" ></text>
</g>
<g >
<title>__sched_text_start (25 samples, 0.13%)</title><rect x="1180.9" y="709" width="1.5" height="15.0" fill="rgb(250,96,15)" rx="2" ry="2" />
<text  x="1183.95" y="719.5" ></text>
</g>
<g >
<title>ktime_get_raw_ts64 (6 samples, 0.03%)</title><rect x="280.4" y="485" width="0.4" height="15.0" fill="rgb(233,174,8)" rx="2" ry="2" />
<text  x="283.44" y="495.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator bool (3 samples, 0.02%)</title><rect x="761.4" y="501" width="0.1" height="15.0" fill="rgb(216,108,9)" rx="2" ry="2" />
<text  x="764.36" y="511.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (5 samples, 0.03%)</title><rect x="292.6" y="997" width="0.3" height="15.0" fill="rgb(225,153,47)" rx="2" ry="2" />
<text  x="295.65" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (4 samples, 0.02%)</title><rect x="483.9" y="709" width="0.2" height="15.0" fill="rgb(245,16,3)" rx="2" ry="2" />
<text  x="486.89" y="719.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (9 samples, 0.05%)</title><rect x="1008.7" y="725" width="0.5" height="15.0" fill="rgb(235,61,45)" rx="2" ry="2" />
<text  x="1011.70" y="735.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (20 samples, 0.10%)</title><rect x="295.0" y="469" width="1.2" height="15.0" fill="rgb(240,187,49)" rx="2" ry="2" />
<text  x="298.03" y="479.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (11 samples, 0.06%)</title><rect x="1153.0" y="821" width="0.7" height="15.0" fill="rgb(208,150,47)" rx="2" ry="2" />
<text  x="1156.02" y="831.5" ></text>
</g>
<g >
<title>x86_pmu_enable (55 samples, 0.28%)</title><rect x="17.1" y="821" width="3.3" height="15.0" fill="rgb(212,83,54)" rx="2" ry="2" />
<text  x="20.15" y="831.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (143 samples, 0.72%)</title><rect x="150.8" y="965" width="8.5" height="15.0" fill="rgb(234,194,5)" rx="2" ry="2" />
<text  x="153.76" y="975.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_destroy (3 samples, 0.02%)</title><rect x="326.2" y="405" width="0.2" height="15.0" fill="rgb(239,122,12)" rx="2" ry="2" />
<text  x="329.23" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::clear (199 samples, 1.00%)</title><rect x="968.9" y="677" width="11.8" height="15.0" fill="rgb(242,106,21)" rx="2" ry="2" />
<text  x="971.86" y="687.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_manager (88 samples, 0.44%)</title><rect x="689.6" y="693" width="5.3" height="15.0" fill="rgb(205,136,21)" rx="2" ry="2" />
<text  x="692.61" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (3 samples, 0.02%)</title><rect x="1153.3" y="789" width="0.2" height="15.0" fill="rgb(230,92,34)" rx="2" ry="2" />
<text  x="1156.32" y="799.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (515 samples, 2.60%)</title><rect x="294.8" y="821" width="30.7" height="15.0" fill="rgb(244,3,18)" rx="2" ry="2" />
<text  x="297.79" y="831.5" >Ga..</text>
</g>
<g >
<title>Scene::MainFunction (4 samples, 0.02%)</title><rect x="326.2" y="949" width="0.3" height="15.0" fill="rgb(254,94,2)" rx="2" ry="2" />
<text  x="329.23" y="959.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (57 samples, 0.29%)</title><rect x="676.2" y="533" width="3.3" height="15.0" fill="rgb(210,25,46)" rx="2" ry="2" />
<text  x="679.15" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_left (7 samples, 0.04%)</title><rect x="651.4" y="661" width="0.5" height="15.0" fill="rgb(212,178,48)" rx="2" ry="2" />
<text  x="654.44" y="671.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;int&gt;::~shared_ptr (3 samples, 0.02%)</title><rect x="996.0" y="725" width="0.2" height="15.0" fill="rgb(242,136,38)" rx="2" ry="2" />
<text  x="999.01" y="735.5" ></text>
</g>
<g >
<title>Blend (26 samples, 0.13%)</title><rect x="841.6" y="501" width="1.6" height="15.0" fill="rgb(236,26,41)" rx="2" ry="2" />
<text  x="844.62" y="511.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (4 samples, 0.02%)</title><rect x="997.1" y="709" width="0.2" height="15.0" fill="rgb(251,134,48)" rx="2" ry="2" />
<text  x="1000.08" y="719.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (349 samples, 1.76%)</title><rect x="267.5" y="709" width="20.8" height="15.0" fill="rgb(249,134,7)" rx="2" ry="2" />
<text  x="270.52" y="719.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (4 samples, 0.02%)</title><rect x="326.2" y="837" width="0.3" height="15.0" fill="rgb(229,197,11)" rx="2" ry="2" />
<text  x="329.23" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (27 samples, 0.14%)</title><rect x="1089.4" y="741" width="1.6" height="15.0" fill="rgb(212,212,8)" rx="2" ry="2" />
<text  x="1092.43" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (3 samples, 0.02%)</title><rect x="442.0" y="757" width="0.2" height="15.0" fill="rgb(227,128,1)" rx="2" ry="2" />
<text  x="445.04" y="767.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustId (2 samples, 0.01%)</title><rect x="1022.5" y="741" width="0.1" height="15.0" fill="rgb(232,164,20)" rx="2" ry="2" />
<text  x="1025.51" y="751.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (21 samples, 0.11%)</title><rect x="883.1" y="453" width="1.3" height="15.0" fill="rgb(231,13,46)" rx="2" ry="2" />
<text  x="886.12" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (4 samples, 0.02%)</title><rect x="1172.0" y="773" width="0.3" height="15.0" fill="rgb(232,18,37)" rx="2" ry="2" />
<text  x="1175.02" y="783.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;BaseUi, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (7 samples, 0.04%)</title><rect x="84.5" y="997" width="0.5" height="15.0" fill="rgb(219,27,5)" rx="2" ry="2" />
<text  x="87.55" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (5 samples, 0.03%)</title><rect x="238.6" y="533" width="0.3" height="15.0" fill="rgb(248,121,4)" rx="2" ry="2" />
<text  x="241.58" y="543.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="234.5" y="437" width="0.2" height="15.0" fill="rgb(215,69,14)" rx="2" ry="2" />
<text  x="237.53" y="447.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (3 samples, 0.02%)</title><rect x="1171.0" y="741" width="0.2" height="15.0" fill="rgb(234,119,6)" rx="2" ry="2" />
<text  x="1174.01" y="751.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (47 samples, 0.24%)</title><rect x="255.1" y="277" width="2.8" height="15.0" fill="rgb(214,12,21)" rx="2" ry="2" />
<text  x="258.07" y="287.5" ></text>
</g>
<g >
<title>free_unref_page_commit (7 samples, 0.04%)</title><rect x="256.9" y="53" width="0.4" height="15.0" fill="rgb(250,71,28)" rx="2" ry="2" />
<text  x="259.86" y="63.5" ></text>
</g>
<g >
<title>Scene::GetRequestedScene (47 samples, 0.24%)</title><rect x="1130.1" y="789" width="2.8" height="15.0" fill="rgb(213,193,38)" rx="2" ry="2" />
<text  x="1133.10" y="799.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (149 samples, 0.75%)</title><rect x="161.8" y="565" width="8.8" height="15.0" fill="rgb(220,35,20)" rx="2" ry="2" />
<text  x="164.77" y="575.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (35 samples, 0.18%)</title><rect x="135.5" y="453" width="2.1" height="15.0" fill="rgb(221,206,52)" rx="2" ry="2" />
<text  x="138.51" y="463.5" ></text>
</g>
<g >
<title>Graphics::Update (18 samples, 0.09%)</title><rect x="331.0" y="901" width="1.1" height="15.0" fill="rgb(210,35,53)" rx="2" ry="2" />
<text  x="333.99" y="911.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Graphics::State, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (11 samples, 0.06%)</title><rect x="855.0" y="469" width="0.7" height="15.0" fill="rgb(221,33,31)" rx="2" ry="2" />
<text  x="858.02" y="479.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::expired (8 samples, 0.04%)</title><rect x="725.2" y="677" width="0.4" height="15.0" fill="rgb(232,135,11)" rx="2" ry="2" />
<text  x="728.16" y="687.5" ></text>
</g>
<g >
<title>Game_Picture::ShowParams::~ShowParams (3 samples, 0.02%)</title><rect x="32.1" y="997" width="0.2" height="15.0" fill="rgb(209,45,22)" rx="2" ry="2" />
<text  x="35.09" y="1007.5" ></text>
</g>
<g >
<title>__strlen_avx2 (4 samples, 0.02%)</title><rect x="267.5" y="533" width="0.3" height="15.0" fill="rgb(246,154,52)" rx="2" ry="2" />
<text  x="270.52" y="543.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (28 samples, 0.14%)</title><rect x="785.8" y="421" width="1.7" height="15.0" fill="rgb(245,128,37)" rx="2" ry="2" />
<text  x="788.83" y="431.5" ></text>
</g>
<g >
<title>Tone::Tone (3 samples, 0.02%)</title><rect x="37.7" y="997" width="0.2" height="15.0" fill="rgb(231,102,32)" rx="2" ry="2" />
<text  x="40.69" y="1007.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (10 samples, 0.05%)</title><rect x="1074.8" y="757" width="0.6" height="15.0" fill="rgb(249,220,44)" rx="2" ry="2" />
<text  x="1077.79" y="767.5" ></text>
</g>
<g >
<title>Bitmap::Create (29 samples, 0.15%)</title><rect x="286.6" y="613" width="1.7" height="15.0" fill="rgb(252,14,3)" rx="2" ry="2" />
<text  x="289.57" y="623.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator() (2 samples, 0.01%)</title><rect x="658.7" y="661" width="0.1" height="15.0" fill="rgb(226,163,52)" rx="2" ry="2" />
<text  x="661.71" y="671.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (9 samples, 0.05%)</title><rect x="130.5" y="677" width="0.5" height="15.0" fill="rgb(216,122,6)" rx="2" ry="2" />
<text  x="133.51" y="687.5" ></text>
</g>
<g >
<title>RPG::SavePicture::SavePicture (2 samples, 0.01%)</title><rect x="34.9" y="997" width="0.1" height="15.0" fill="rgb(247,86,53)" rx="2" ry="2" />
<text  x="37.89" y="1007.5" ></text>
</g>
<g >
<title>std::replace&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (204 samples, 1.03%)</title><rect x="739.1" y="469" width="12.2" height="15.0" fill="rgb(234,66,27)" rx="2" ry="2" />
<text  x="742.15" y="479.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.02%)</title><rect x="261.3" y="325" width="0.1" height="15.0" fill="rgb(246,145,31)" rx="2" ry="2" />
<text  x="264.27" y="335.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4 samples, 0.02%)</title><rect x="137.7" y="389" width="0.3" height="15.0" fill="rgb(244,185,50)" rx="2" ry="2" />
<text  x="140.72" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::operator[] (2 samples, 0.01%)</title><rect x="115.3" y="997" width="0.1" height="15.0" fill="rgb(245,188,35)" rx="2" ry="2" />
<text  x="118.27" y="1007.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (44 samples, 0.22%)</title><rect x="258.8" y="853" width="2.6" height="15.0" fill="rgb(240,189,51)" rx="2" ry="2" />
<text  x="261.83" y="863.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (366 samples, 1.85%)</title><rect x="803.3" y="469" width="21.8" height="15.0" fill="rgb(224,0,23)" rx="2" ry="2" />
<text  x="806.34" y="479.5" >[..</text>
</g>
<g >
<title>Game_Picture::Show (6,810 samples, 34.36%)</title><rect x="611.8" y="757" width="405.5" height="15.0" fill="rgb(244,185,0)" rx="2" ry="2" />
<text  x="614.79" y="767.5" >Game_Picture::Show</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;::base (4 samples, 0.02%)</title><rect x="945.3" y="357" width="0.2" height="15.0" fill="rgb(247,121,15)" rx="2" ry="2" />
<text  x="948.28" y="367.5" ></text>
</g>
<g >
<title>Game_Picture::Show (166 samples, 0.84%)</title><rect x="131.0" y="981" width="9.9" height="15.0" fill="rgb(228,168,37)" rx="2" ry="2" />
<text  x="134.05" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (3 samples, 0.02%)</title><rect x="1060.3" y="741" width="0.2" height="15.0" fill="rgb(240,221,15)" rx="2" ry="2" />
<text  x="1063.32" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (2 samples, 0.01%)</title><rect x="599.6" y="725" width="0.2" height="15.0" fill="rgb(219,83,37)" rx="2" ry="2" />
<text  x="602.64" y="735.5" ></text>
</g>
<g >
<title>operator new (52 samples, 0.26%)</title><rect x="150.9" y="549" width="3.1" height="15.0" fill="rgb(223,105,19)" rx="2" ry="2" />
<text  x="153.94" y="559.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (13 samples, 0.07%)</title><rect x="256.5" y="149" width="0.8" height="15.0" fill="rgb(217,4,8)" rx="2" ry="2" />
<text  x="259.50" y="159.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Picture*, std::_Placeholder&lt;1&gt; &gt; (2 samples, 0.01%)</title><rect x="966.7" y="597" width="0.1" height="15.0" fill="rgb(205,22,3)" rx="2" ry="2" />
<text  x="969.66" y="607.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (58 samples, 0.29%)</title><rect x="305.7" y="357" width="3.5" height="15.0" fill="rgb(207,185,40)" rx="2" ry="2" />
<text  x="308.74" y="367.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;2ul, bool&gt; (3 samples, 0.02%)</title><rect x="786.4" y="373" width="0.1" height="15.0" fill="rgb(227,55,51)" rx="2" ry="2" />
<text  x="789.37" y="383.5" ></text>
</g>
<g >
<title>Game_Picture::SetNonEffectParams (4 samples, 0.02%)</title><rect x="600.2" y="741" width="0.2" height="15.0" fill="rgb(209,170,28)" rx="2" ry="2" />
<text  x="603.18" y="751.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (61 samples, 0.31%)</title><rect x="954.8" y="309" width="3.6" height="15.0" fill="rgb(241,28,23)" rx="2" ry="2" />
<text  x="957.81" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (5 samples, 0.03%)</title><rect x="54.3" y="997" width="0.3" height="15.0" fill="rgb(218,0,7)" rx="2" ry="2" />
<text  x="57.30" y="1007.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_destroy (6 samples, 0.03%)</title><rect x="309.2" y="389" width="0.4" height="15.0" fill="rgb(240,134,3)" rx="2" ry="2" />
<text  x="312.20" y="399.5" ></text>
</g>
<g >
<title>page_fault (78 samples, 0.39%)</title><rect x="1184.9" y="1013" width="4.6" height="15.0" fill="rgb(247,123,16)" rx="2" ry="2" />
<text  x="1187.88" y="1023.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.01%)</title><rect x="299.7" y="373" width="0.1" height="15.0" fill="rgb(242,216,6)" rx="2" ry="2" />
<text  x="302.67" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (14 samples, 0.07%)</title><rect x="1177.7" y="821" width="0.9" height="15.0" fill="rgb(239,91,7)" rx="2" ry="2" />
<text  x="1180.73" y="831.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;Drawable*&gt; (963 samples, 4.86%)</title><rect x="179.6" y="501" width="57.3" height="15.0" fill="rgb(241,203,32)" rx="2" ry="2" />
<text  x="182.58" y="511.5" >std::_..</text>
</g>
<g >
<title>pixman_image_create_bits@plt (5 samples, 0.03%)</title><rect x="835.1" y="325" width="0.3" height="15.0" fill="rgb(251,32,16)" rx="2" ry="2" />
<text  x="838.07" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (2 samples, 0.01%)</title><rect x="597.5" y="725" width="0.1" height="15.0" fill="rgb(220,131,42)" rx="2" ry="2" />
<text  x="600.50" y="735.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::function (2 samples, 0.01%)</title><rect x="96.6" y="997" width="0.2" height="15.0" fill="rgb(227,32,34)" rx="2" ry="2" />
<text  x="99.63" y="1007.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (5 samples, 0.03%)</title><rect x="257.9" y="165" width="0.3" height="15.0" fill="rgb(238,81,4)" rx="2" ry="2" />
<text  x="260.93" y="175.5" ></text>
</g>
<g >
<title>pixman_image_get_height@plt (2 samples, 0.01%)</title><rect x="867.2" y="469" width="0.1" height="15.0" fill="rgb(236,26,33)" rx="2" ry="2" />
<text  x="870.22" y="479.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (2 samples, 0.01%)</title><rect x="1025.2" y="709" width="0.2" height="15.0" fill="rgb(243,214,28)" rx="2" ry="2" />
<text  x="1028.25" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_S_key (28 samples, 0.14%)</title><rect x="286.6" y="373" width="1.6" height="15.0" fill="rgb(217,227,34)" rx="2" ry="2" />
<text  x="289.57" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate (64 samples, 0.32%)</title><rect x="175.8" y="533" width="3.8" height="15.0" fill="rgb(248,142,28)" rx="2" ry="2" />
<text  x="178.76" y="543.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (29 samples, 0.15%)</title><rect x="1010.1" y="693" width="1.7" height="15.0" fill="rgb(236,47,18)" rx="2" ry="2" />
<text  x="1013.06" y="703.5" ></text>
</g>
<g >
<title>Cache::Picture (49 samples, 0.25%)</title><rect x="261.4" y="613" width="3.0" height="15.0" fill="rgb(251,207,54)" rx="2" ry="2" />
<text  x="264.45" y="623.5" ></text>
</g>
<g >
<title>Player::Update (20 samples, 0.10%)</title><rect x="237.0" y="965" width="1.2" height="15.0" fill="rgb(222,10,40)" rx="2" ry="2" />
<text  x="239.97" y="975.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;int&gt;::weak_ptr&lt;int, void&gt; (18 samples, 0.09%)</title><rect x="685.8" y="693" width="1.1" height="15.0" fill="rgb(212,94,0)" rx="2" ry="2" />
<text  x="688.80" y="703.5" ></text>
</g>
<g >
<title>std::forward&lt;std::function&lt;void (FileRequestResult*)&gt;&amp;&gt; (5 samples, 0.03%)</title><rect x="96.0" y="997" width="0.3" height="15.0" fill="rgb(221,45,48)" rx="2" ry="2" />
<text  x="99.04" y="1007.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Sprite*, false&gt;::_M_head (3 samples, 0.02%)</title><rect x="63.9" y="997" width="0.2" height="15.0" fill="rgb(229,108,12)" rx="2" ry="2" />
<text  x="66.94" y="1007.5" ></text>
</g>
<g >
<title>Window_Base::Update (5 samples, 0.03%)</title><rect x="1179.8" y="837" width="0.3" height="15.0" fill="rgb(207,52,15)" rx="2" ry="2" />
<text  x="1182.76" y="847.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (2 samples, 0.01%)</title><rect x="1021.2" y="693" width="0.1" height="15.0" fill="rgb(239,154,26)" rx="2" ry="2" />
<text  x="1024.20" y="703.5" ></text>
</g>
<g >
<title>Sprite::SetOpacity (2 samples, 0.01%)</title><rect x="1005.9" y="725" width="0.1" height="15.0" fill="rgb(249,115,49)" rx="2" ry="2" />
<text  x="1008.90" y="735.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (26 samples, 0.13%)</title><rect x="259.9" y="357" width="1.5" height="15.0" fill="rgb(229,1,54)" rx="2" ry="2" />
<text  x="262.90" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::operator (4 samples, 0.02%)</title><rect x="109.0" y="997" width="0.3" height="15.0" fill="rgb(227,113,13)" rx="2" ry="2" />
<text  x="112.02" y="1007.5" ></text>
</g>
<g >
<title>native_write_msr (53 samples, 0.27%)</title><rect x="17.3" y="773" width="3.1" height="15.0" fill="rgb(205,134,10)" rx="2" ry="2" />
<text  x="20.26" y="783.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Tuple_impl&lt;1ul, std::_Placeholder&lt;1&gt; &gt;&amp;&gt; (3 samples, 0.02%)</title><rect x="103.8" y="997" width="0.2" height="15.0" fill="rgb(213,20,32)" rx="2" ry="2" />
<text  x="106.78" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::emplace_back&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (3 samples, 0.02%)</title><rect x="119.7" y="997" width="0.2" height="15.0" fill="rgb(239,216,22)" rx="2" ry="2" />
<text  x="122.74" y="1007.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustParams (8 samples, 0.04%)</title><rect x="1022.6" y="741" width="0.5" height="15.0" fill="rgb(210,84,0)" rx="2" ry="2" />
<text  x="1025.63" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (7 samples, 0.04%)</title><rect x="238.2" y="533" width="0.4" height="15.0" fill="rgb(250,190,19)" rx="2" ry="2" />
<text  x="241.16" y="543.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (16 samples, 0.08%)</title><rect x="285.6" y="581" width="1.0" height="15.0" fill="rgb(227,168,47)" rx="2" ry="2" />
<text  x="288.62" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_read (7 samples, 0.04%)</title><rect x="20.7" y="981" width="0.4" height="15.0" fill="rgb(231,105,3)" rx="2" ry="2" />
<text  x="23.66" y="991.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (166 samples, 0.84%)</title><rect x="131.0" y="581" width="9.9" height="15.0" fill="rgb(239,86,22)" rx="2" ry="2" />
<text  x="134.05" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_valptr (9 samples, 0.05%)</title><rect x="287.5" y="341" width="0.5" height="15.0" fill="rgb(247,199,11)" rx="2" ry="2" />
<text  x="290.46" y="351.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, true&gt; (78 samples, 0.39%)</title><rect x="171.1" y="645" width="4.7" height="15.0" fill="rgb(239,195,45)" rx="2" ry="2" />
<text  x="174.12" y="655.5" ></text>
</g>
<g >
<title>Graphics::LocalDraw (14 samples, 0.07%)</title><rect x="331.0" y="869" width="0.8" height="15.0" fill="rgb(250,129,46)" rx="2" ry="2" />
<text  x="333.99" y="879.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (21 samples, 0.11%)</title><rect x="1181.1" y="677" width="1.3" height="15.0" fill="rgb(230,100,23)" rx="2" ry="2" />
<text  x="1184.13" y="687.5" ></text>
</g>
<g >
<title>Sprite::SetWaverPhase (2 samples, 0.01%)</title><rect x="36.6" y="997" width="0.1" height="15.0" fill="rgb(212,104,54)" rx="2" ry="2" />
<text  x="39.62" y="1007.5" ></text>
</g>
<g >
<title>Bitmap::find_format (30 samples, 0.15%)</title><rect x="139.1" y="565" width="1.8" height="15.0" fill="rgb(216,5,41)" rx="2" ry="2" />
<text  x="142.15" y="575.5" ></text>
</g>
<g >
<title>Sprite::GetBitmap (3 samples, 0.02%)</title><rect x="1005.7" y="725" width="0.1" height="15.0" fill="rgb(251,178,54)" rx="2" ry="2" />
<text  x="1008.66" y="735.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;int&gt;::weak_ptr (6 samples, 0.03%)</title><rect x="685.4" y="613" width="0.3" height="15.0" fill="rgb(222,89,31)" rx="2" ry="2" />
<text  x="688.38" y="623.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (58 samples, 0.29%)</title><rect x="141.1" y="597" width="3.4" height="15.0" fill="rgb(228,126,17)" rx="2" ry="2" />
<text  x="144.05" y="607.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandEndLoop (24 samples, 0.12%)</title><rect x="591.5" y="773" width="1.5" height="15.0" fill="rgb(239,190,20)" rx="2" ry="2" />
<text  x="594.55" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;::operator+ (6 samples, 0.03%)</title><rect x="941.3" y="405" width="0.4" height="15.0" fill="rgb(249,37,16)" rx="2" ry="2" />
<text  x="944.29" y="415.5" ></text>
</g>
<g >
<title>Player::IsRPG2k3 (7 samples, 0.04%)</title><rect x="568.4" y="741" width="0.4" height="15.0" fill="rgb(247,77,4)" rx="2" ry="2" />
<text  x="571.38" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (8 samples, 0.04%)</title><rect x="1037.9" y="741" width="0.4" height="15.0" fill="rgb(224,146,35)" rx="2" ry="2" />
<text  x="1040.87" y="751.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="332.9" y="789" width="0.1" height="15.0" fill="rgb(238,225,39)" rx="2" ry="2" />
<text  x="335.90" y="799.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (4 samples, 0.02%)</title><rect x="326.2" y="869" width="0.3" height="15.0" fill="rgb(235,144,42)" rx="2" ry="2" />
<text  x="329.23" y="879.5" ></text>
</g>
<g >
<title>std::allocator&lt;Bitmap&gt;::allocator (2 samples, 0.01%)</title><rect x="839.4" y="405" width="0.1" height="15.0" fill="rgb(232,147,9)" rx="2" ry="2" />
<text  x="842.42" y="415.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (14,225 samples, 71.78%)</title><rect x="333.1" y="885" width="847.0" height="15.0" fill="rgb(219,81,44)" rx="2" ry="2" />
<text  x="336.07" y="895.5" >Scene_Map::UpdateStage1</text>
</g>
<g >
<title>security_file_permission (3 samples, 0.02%)</title><rect x="20.9" y="917" width="0.2" height="15.0" fill="rgb(230,119,7)" rx="2" ry="2" />
<text  x="23.90" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_addr (6 samples, 0.03%)</title><rect x="43.5" y="997" width="0.4" height="15.0" fill="rgb(253,201,45)" rx="2" ry="2" />
<text  x="46.52" y="1007.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (143 samples, 0.72%)</title><rect x="150.8" y="677" width="8.5" height="15.0" fill="rgb(227,210,20)" rx="2" ry="2" />
<text  x="153.76" y="687.5" ></text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;Bitmap&gt;, true&gt;::_Sp_ebo_helper (3 samples, 0.02%)</title><rect x="832.3" y="373" width="0.2" height="15.0" fill="rgb(254,3,4)" rx="2" ry="2" />
<text  x="835.27" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (45 samples, 0.23%)</title><rect x="1093.7" y="741" width="2.7" height="15.0" fill="rgb(209,40,25)" rx="2" ry="2" />
<text  x="1096.72" y="751.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Picture*, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl&lt;Game_Picture*&amp;, std::_Placeholder&lt;1&gt; const&amp;, void&gt; (11 samples, 0.06%)</title><rect x="688.6" y="661" width="0.7" height="15.0" fill="rgb(240,151,15)" rx="2" ry="2" />
<text  x="691.60" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::end (3 samples, 0.02%)</title><rect x="758.0" y="453" width="0.2" height="15.0" fill="rgb(224,109,8)" rx="2" ry="2" />
<text  x="761.02" y="463.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.03%)</title><rect x="59.5" y="997" width="0.3" height="15.0" fill="rgb(238,51,53)" rx="2" ry="2" />
<text  x="62.48" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.02%)</title><rect x="179.2" y="453" width="0.2" height="15.0" fill="rgb(244,85,41)" rx="2" ry="2" />
<text  x="182.22" y="463.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4 samples, 0.02%)</title><rect x="325.5" y="997" width="0.2" height="15.0" fill="rgb(223,171,36)" rx="2" ry="2" />
<text  x="328.45" y="1007.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; (9 samples, 0.05%)</title><rect x="80.6" y="997" width="0.5" height="15.0" fill="rgb(221,14,1)" rx="2" ry="2" />
<text  x="83.56" y="1007.5" ></text>
</g>
<g >
<title>malloc (10 samples, 0.05%)</title><rect x="138.6" y="517" width="0.5" height="15.0" fill="rgb(246,191,49)" rx="2" ry="2" />
<text  x="141.55" y="527.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (31 samples, 0.16%)</title><rect x="157.4" y="533" width="1.9" height="15.0" fill="rgb(217,52,10)" rx="2" ry="2" />
<text  x="160.43" y="543.5" ></text>
</g>
<g >
<title>__strlen_avx2 (21 samples, 0.11%)</title><rect x="982.3" y="693" width="1.3" height="15.0" fill="rgb(211,64,33)" rx="2" ry="2" />
<text  x="985.32" y="703.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (156 samples, 0.79%)</title><rect x="970.4" y="549" width="9.3" height="15.0" fill="rgb(237,112,47)" rx="2" ry="2" />
<text  x="973.41" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (6 samples, 0.03%)</title><rect x="159.3" y="581" width="0.3" height="15.0" fill="rgb(230,60,23)" rx="2" ry="2" />
<text  x="162.27" y="591.5" ></text>
</g>
<g >
<title>Sprite::SetZ (6 samples, 0.03%)</title><rect x="1168.9" y="805" width="0.4" height="15.0" fill="rgb(251,99,24)" rx="2" ry="2" />
<text  x="1171.92" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (4 samples, 0.02%)</title><rect x="1139.3" y="805" width="0.3" height="15.0" fill="rgb(217,61,44)" rx="2" ry="2" />
<text  x="1142.33" y="815.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (8 samples, 0.04%)</title><rect x="107.4" y="997" width="0.4" height="15.0" fill="rgb(246,163,50)" rx="2" ry="2" />
<text  x="110.35" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (4 samples, 0.02%)</title><rect x="1040.0" y="757" width="0.3" height="15.0" fill="rgb(238,113,42)" rx="2" ry="2" />
<text  x="1043.01" y="767.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (143 samples, 0.72%)</title><rect x="150.8" y="693" width="8.5" height="15.0" fill="rgb(245,21,49)" rx="2" ry="2" />
<text  x="153.76" y="703.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::get (3 samples, 0.02%)</title><rect x="112.0" y="997" width="0.2" height="15.0" fill="rgb(226,87,10)" rx="2" ry="2" />
<text  x="115.00" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (15 samples, 0.08%)</title><rect x="142.5" y="453" width="0.9" height="15.0" fill="rgb(249,22,17)" rx="2" ry="2" />
<text  x="145.48" y="463.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (163 samples, 0.82%)</title><rect x="986.2" y="661" width="9.7" height="15.0" fill="rgb(238,167,33)" rx="2" ry="2" />
<text  x="989.19" y="671.5" ></text>
</g>
<g >
<title>Utils::DecodeUTF32 (24 samples, 0.12%)</title><rect x="1023.2" y="741" width="1.4" height="15.0" fill="rgb(248,3,50)" rx="2" ry="2" />
<text  x="1026.16" y="751.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (3 samples, 0.02%)</title><rect x="85.2" y="997" width="0.2" height="15.0" fill="rgb(245,12,49)" rx="2" ry="2" />
<text  x="88.20" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.04%)</title><rect x="646.6" y="613" width="0.4" height="15.0" fill="rgb(251,132,11)" rx="2" ry="2" />
<text  x="649.62" y="623.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&gt; (26 samples, 0.13%)</title><rect x="672.8" y="613" width="1.6" height="15.0" fill="rgb(235,107,31)" rx="2" ry="2" />
<text  x="675.82" y="623.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (2 samples, 0.01%)</title><rect x="1182.9" y="837" width="0.1" height="15.0" fill="rgb(220,90,3)" rx="2" ry="2" />
<text  x="1185.91" y="847.5" ></text>
</g>
<g >
<title>page_fault (8 samples, 0.04%)</title><rect x="136.6" y="421" width="0.5" height="15.0" fill="rgb(234,218,4)" rx="2" ry="2" />
<text  x="139.65" y="431.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (3 samples, 0.02%)</title><rect x="981.1" y="725" width="0.2" height="15.0" fill="rgb(218,139,28)" rx="2" ry="2" />
<text  x="984.13" y="735.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Transition*, std::default_delete&lt;Transition&gt; &gt; (2 samples, 0.01%)</title><rect x="79.5" y="997" width="0.2" height="15.0" fill="rgb(208,104,31)" rx="2" ry="2" />
<text  x="82.54" y="1007.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (4 samples, 0.02%)</title><rect x="326.2" y="789" width="0.3" height="15.0" fill="rgb(254,84,53)" rx="2" ry="2" />
<text  x="329.23" y="799.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (4 samples, 0.02%)</title><rect x="501.3" y="693" width="0.3" height="15.0" fill="rgb(217,36,38)" rx="2" ry="2" />
<text  x="504.34" y="703.5" ></text>
</g>
<g >
<title>Bitmap::height (2 samples, 0.01%)</title><rect x="826.1" y="485" width="0.2" height="15.0" fill="rgb(230,48,52)" rx="2" ry="2" />
<text  x="829.14" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (15 samples, 0.08%)</title><rect x="295.3" y="453" width="0.9" height="15.0" fill="rgb(229,198,7)" rx="2" ry="2" />
<text  x="298.32" y="463.5" ></text>
</g>
<g >
<title>Bitmap::Init (136 samples, 0.69%)</title><rect x="131.0" y="565" width="8.1" height="15.0" fill="rgb(218,108,7)" rx="2" ry="2" />
<text  x="134.05" y="575.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_deleter (9 samples, 0.05%)</title><rect x="965.3" y="485" width="0.5" height="15.0" fill="rgb(223,79,36)" rx="2" ry="2" />
<text  x="968.29" y="495.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Picture*, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl (21 samples, 0.11%)</title><rect x="701.0" y="629" width="1.3" height="15.0" fill="rgb(240,19,12)" rx="2" ry="2" />
<text  x="704.04" y="639.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.02%)</title><rect x="59.3" y="997" width="0.2" height="15.0" fill="rgb(209,65,31)" rx="2" ry="2" />
<text  x="62.30" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="756.9" y="389" width="0.1" height="15.0" fill="rgb(229,222,23)" rx="2" ry="2" />
<text  x="759.89" y="399.5" ></text>
</g>
<g >
<title>Sprite::~Sprite (260 samples, 1.31%)</title><rect x="309.2" y="469" width="15.5" height="15.0" fill="rgb(224,180,8)" rx="2" ry="2" />
<text  x="312.20" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_M_lower_bound (47 samples, 0.24%)</title><rect x="264.4" y="373" width="2.8" height="15.0" fill="rgb(230,196,28)" rx="2" ry="2" />
<text  x="267.36" y="383.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (350 samples, 1.77%)</title><rect x="267.5" y="933" width="20.8" height="15.0" fill="rgb(229,54,45)" rx="2" ry="2" />
<text  x="270.46" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (4 samples, 0.02%)</title><rect x="170.6" y="533" width="0.3" height="15.0" fill="rgb(251,67,50)" rx="2" ry="2" />
<text  x="173.64" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (2 samples, 0.01%)</title><rect x="1179.9" y="757" width="0.1" height="15.0" fill="rgb(211,32,21)" rx="2" ry="2" />
<text  x="1182.88" y="767.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator bool (2 samples, 0.01%)</title><rect x="1017.2" y="741" width="0.1" height="15.0" fill="rgb(208,203,35)" rx="2" ry="2" />
<text  x="1020.15" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*, std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt; &gt;::operator++ (2 samples, 0.01%)</title><rect x="720.6" y="677" width="0.2" height="15.0" fill="rgb(250,45,31)" rx="2" ry="2" />
<text  x="723.63" y="687.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (68 samples, 0.34%)</title><rect x="833.5" y="357" width="4.1" height="15.0" fill="rgb(237,79,5)" rx="2" ry="2" />
<text  x="836.52" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_Rb_tree_iterator (2 samples, 0.01%)</title><rect x="758.1" y="437" width="0.1" height="15.0" fill="rgb(236,166,42)" rx="2" ry="2" />
<text  x="761.08" y="447.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Sprite*, false&gt;::_M_head (5 samples, 0.03%)</title><rect x="864.7" y="405" width="0.3" height="15.0" fill="rgb(205,68,5)" rx="2" ry="2" />
<text  x="867.72" y="415.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (166 samples, 0.84%)</title><rect x="131.0" y="885" width="9.9" height="15.0" fill="rgb(234,83,19)" rx="2" ry="2" />
<text  x="134.05" y="895.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="170.6" y="517" width="0.3" height="15.0" fill="rgb(208,206,16)" rx="2" ry="2" />
<text  x="173.64" y="527.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.05%)</title><rect x="1023.5" y="645" width="0.6" height="15.0" fill="rgb(235,88,39)" rx="2" ry="2" />
<text  x="1026.52" y="655.5" ></text>
</g>
<g >
<title>unmap_region (3 samples, 0.02%)</title><rect x="646.9" y="517" width="0.1" height="15.0" fill="rgb(237,192,6)" rx="2" ry="2" />
<text  x="649.86" y="527.5" ></text>
</g>
<g >
<title>Game_Screen::GetTone (2 samples, 0.01%)</title><rect x="32.6" y="997" width="0.1" height="15.0" fill="rgb(242,155,20)" rx="2" ry="2" />
<text  x="35.63" y="1007.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (15 samples, 0.08%)</title><rect x="1173.9" y="741" width="0.9" height="15.0" fill="rgb(220,94,54)" rx="2" ry="2" />
<text  x="1176.92" y="751.5" ></text>
</g>
<g >
<title>dequeue_task_fair (2 samples, 0.01%)</title><rect x="17.0" y="853" width="0.1" height="15.0" fill="rgb(222,59,35)" rx="2" ry="2" />
<text  x="20.03" y="863.5" ></text>
</g>
<g >
<title>[easyrpg-player] (4 samples, 0.02%)</title><rect x="128.7" y="1013" width="0.3" height="15.0" fill="rgb(233,151,11)" rx="2" ry="2" />
<text  x="131.73" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;Input::UiSource::Update()::{lambda(int)#1}&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (3 samples, 0.02%)</title><rect x="332.4" y="789" width="0.2" height="15.0" fill="rgb(228,152,23)" rx="2" ry="2" />
<text  x="335.42" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (28 samples, 0.14%)</title><rect x="116.9" y="997" width="1.6" height="15.0" fill="rgb(228,182,47)" rx="2" ry="2" />
<text  x="119.88" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (26 samples, 0.13%)</title><rect x="259.9" y="373" width="1.5" height="15.0" fill="rgb(221,131,18)" rx="2" ry="2" />
<text  x="262.90" y="383.5" ></text>
</g>
<g >
<title>std::forward&lt;int&amp;&gt; (2 samples, 0.01%)</title><rect x="828.5" y="453" width="0.1" height="15.0" fill="rgb(240,188,36)" rx="2" ry="2" />
<text  x="831.52" y="463.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::~__allocated_ptr (2 samples, 0.01%)</title><rect x="75.9" y="997" width="0.1" height="15.0" fill="rgb(251,172,45)" rx="2" ry="2" />
<text  x="78.91" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;Drawable* const&gt;::_Iter_equals_val (2 samples, 0.01%)</title><rect x="894.1" y="405" width="0.2" height="15.0" fill="rgb(206,0,32)" rx="2" ry="2" />
<text  x="897.14" y="415.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (102 samples, 0.51%)</title><rect x="144.7" y="933" width="6.1" height="15.0" fill="rgb(205,11,32)" rx="2" ry="2" />
<text  x="147.68" y="943.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (10 samples, 0.05%)</title><rect x="851.6" y="437" width="0.6" height="15.0" fill="rgb(209,201,36)" rx="2" ry="2" />
<text  x="854.62" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (6 samples, 0.03%)</title><rect x="852.2" y="437" width="0.4" height="15.0" fill="rgb(241,161,50)" rx="2" ry="2" />
<text  x="855.22" y="447.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (35 samples, 0.18%)</title><rect x="267.8" y="549" width="2.0" height="15.0" fill="rgb(217,170,24)" rx="2" ry="2" />
<text  x="270.76" y="559.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.01%)</title><rect x="964.2" y="437" width="0.1" height="15.0" fill="rgb(226,169,29)" rx="2" ry="2" />
<text  x="967.16" y="447.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (2 samples, 0.01%)</title><rect x="309.4" y="293" width="0.2" height="15.0" fill="rgb(206,75,41)" rx="2" ry="2" />
<text  x="312.44" y="303.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (102 samples, 0.51%)</title><rect x="144.7" y="805" width="6.1" height="15.0" fill="rgb(227,132,40)" rx="2" ry="2" />
<text  x="147.68" y="815.5" ></text>
</g>
<g >
<title>min&lt;int&gt; (2 samples, 0.01%)</title><rect x="1004.8" y="693" width="0.1" height="15.0" fill="rgb(214,192,17)" rx="2" ry="2" />
<text  x="1007.77" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*, std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt; &gt; (4 samples, 0.02%)</title><rect x="720.8" y="677" width="0.2" height="15.0" fill="rgb(249,19,30)" rx="2" ry="2" />
<text  x="723.75" y="687.5" ></text>
</g>
<g >
<title>Scene_Map::Update (20 samples, 0.10%)</title><rect x="237.0" y="949" width="1.2" height="15.0" fill="rgb(208,31,36)" rx="2" ry="2" />
<text  x="239.97" y="959.5" ></text>
</g>
<g >
<title>Sprite::SetX (14 samples, 0.07%)</title><rect x="1168.0" y="805" width="0.8" height="15.0" fill="rgb(207,17,28)" rx="2" ry="2" />
<text  x="1170.97" y="815.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (13 samples, 0.07%)</title><rect x="1177.7" y="805" width="0.8" height="15.0" fill="rgb(251,131,42)" rx="2" ry="2" />
<text  x="1180.73" y="815.5" ></text>
</g>
<g >
<title>__handle_mm_fault (8 samples, 0.04%)</title><rect x="136.6" y="357" width="0.5" height="15.0" fill="rgb(240,125,34)" rx="2" ry="2" />
<text  x="139.65" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (17 samples, 0.09%)</title><rect x="111.0" y="997" width="1.0" height="15.0" fill="rgb(209,91,16)" rx="2" ry="2" />
<text  x="113.98" y="1007.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="646.7" y="501" width="0.2" height="15.0" fill="rgb(241,23,54)" rx="2" ry="2" />
<text  x="649.74" y="511.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (10 samples, 0.05%)</title><rect x="759.0" y="485" width="0.6" height="15.0" fill="rgb(232,55,33)" rx="2" ry="2" />
<text  x="761.98" y="495.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (2 samples, 0.01%)</title><rect x="1032.6" y="693" width="0.1" height="15.0" fill="rgb(210,167,15)" rx="2" ry="2" />
<text  x="1035.57" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt;::end (11 samples, 0.06%)</title><rect x="945.9" y="405" width="0.7" height="15.0" fill="rgb(231,90,11)" rx="2" ry="2" />
<text  x="948.94" y="415.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::_Mem_fn_base (3 samples, 0.02%)</title><rect x="711.7" y="677" width="0.2" height="15.0" fill="rgb(214,23,51)" rx="2" ry="2" />
<text  x="714.70" y="687.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (21 samples, 0.11%)</title><rect x="1181.1" y="613" width="1.3" height="15.0" fill="rgb(238,16,25)" rx="2" ry="2" />
<text  x="1184.13" y="623.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (3 samples, 0.02%)</title><rect x="1148.1" y="773" width="0.2" height="15.0" fill="rgb(217,179,28)" rx="2" ry="2" />
<text  x="1151.14" y="783.5" ></text>
</g>
<g >
<title>Sprite::Flash (15 samples, 0.08%)</title><rect x="1166.0" y="805" width="0.9" height="15.0" fill="rgb(234,16,19)" rx="2" ry="2" />
<text  x="1169.00" y="815.5" ></text>
</g>
<g >
<title>std::bitset&lt;36ul&gt;::_M_copy_to_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (4 samples, 0.02%)</title><rect x="332.8" y="869" width="0.2" height="15.0" fill="rgb(250,93,33)" rx="2" ry="2" />
<text  x="335.78" y="879.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (14 samples, 0.07%)</title><rect x="154.7" y="597" width="0.9" height="15.0" fill="rgb(222,227,6)" rx="2" ry="2" />
<text  x="157.75" y="607.5" ></text>
</g>
<g >
<title>Tone::Tone (7 samples, 0.04%)</title><rect x="1007.1" y="725" width="0.5" height="15.0" fill="rgb(234,180,33)" rx="2" ry="2" />
<text  x="1010.15" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (8 samples, 0.04%)</title><rect x="979.9" y="501" width="0.5" height="15.0" fill="rgb(227,115,35)" rx="2" ry="2" />
<text  x="982.94" y="511.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (185 samples, 0.93%)</title><rect x="247.8" y="309" width="11.0" height="15.0" fill="rgb(212,129,34)" rx="2" ry="2" />
<text  x="250.81" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (20 samples, 0.10%)</title><rect x="737.4" y="453" width="1.2" height="15.0" fill="rgb(242,147,18)" rx="2" ry="2" />
<text  x="740.36" y="463.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (265 samples, 1.34%)</title><rect x="269.8" y="581" width="15.8" height="15.0" fill="rgb(249,41,8)" rx="2" ry="2" />
<text  x="272.84" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_M_lower_bound (36 samples, 0.18%)</title><rect x="159.6" y="597" width="2.2" height="15.0" fill="rgb(219,43,10)" rx="2" ry="2" />
<text  x="162.63" y="607.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::deallocate (8 samples, 0.04%)</title><rect x="953.0" y="357" width="0.4" height="15.0" fill="rgb(248,157,2)" rx="2" ry="2" />
<text  x="955.96" y="367.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (5 samples, 0.03%)</title><rect x="292.6" y="949" width="0.3" height="15.0" fill="rgb(213,19,12)" rx="2" ry="2" />
<text  x="295.65" y="959.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (44 samples, 0.22%)</title><rect x="258.8" y="885" width="2.6" height="15.0" fill="rgb(223,103,13)" rx="2" ry="2" />
<text  x="261.83" y="895.5" ></text>
</g>
<g >
<title>Game_Picture::ShowParams::ShowParams (8 samples, 0.04%)</title><rect x="1017.3" y="757" width="0.4" height="15.0" fill="rgb(249,66,43)" rx="2" ry="2" />
<text  x="1020.27" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator++ (30 samples, 0.15%)</title><rect x="745.3" y="453" width="1.8" height="15.0" fill="rgb(220,111,4)" rx="2" ry="2" />
<text  x="748.34" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (2 samples, 0.01%)</title><rect x="93.1" y="997" width="0.1" height="15.0" fill="rgb(223,76,45)" rx="2" ry="2" />
<text  x="96.12" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="327.0" y="981" width="0.1" height="15.0" fill="rgb(208,47,53)" rx="2" ry="2" />
<text  x="330.00" y="991.5" ></text>
</g>
<g >
<title>std::default_delete&lt;Sprite&gt;::operator() (2 samples, 0.01%)</title><rect x="884.7" y="517" width="0.1" height="15.0" fill="rgb(238,55,9)" rx="2" ry="2" />
<text  x="887.67" y="527.5" ></text>
</g>
<g >
<title>__sys_recvmsg (2 samples, 0.01%)</title><rect x="1180.3" y="613" width="0.1" height="15.0" fill="rgb(236,145,2)" rx="2" ry="2" />
<text  x="1183.29" y="623.5" ></text>
</g>
<g >
<title>__gthread_active_p (2 samples, 0.01%)</title><rect x="1016.4" y="661" width="0.2" height="15.0" fill="rgb(235,204,9)" rx="2" ry="2" />
<text  x="1019.44" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (41 samples, 0.21%)</title><rect x="148.3" y="469" width="2.5" height="15.0" fill="rgb(229,37,34)" rx="2" ry="2" />
<text  x="151.32" y="479.5" ></text>
</g>
<g >
<title>Game_Picture::Show (515 samples, 2.60%)</title><rect x="294.8" y="757" width="30.7" height="15.0" fill="rgb(239,68,24)" rx="2" ry="2" />
<text  x="297.79" y="767.5" >Ga..</text>
</g>
<g >
<title>Bitmap::Bitmap (49 samples, 0.25%)</title><rect x="264.4" y="453" width="2.9" height="15.0" fill="rgb(252,72,11)" rx="2" ry="2" />
<text  x="267.36" y="463.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (102 samples, 0.51%)</title><rect x="144.7" y="517" width="6.1" height="15.0" fill="rgb(224,196,46)" rx="2" ry="2" />
<text  x="147.68" y="527.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (211 samples, 1.06%)</title><rect x="827.6" y="485" width="12.6" height="15.0" fill="rgb(253,66,43)" rx="2" ry="2" />
<text  x="830.63" y="495.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_weak_release (4 samples, 0.02%)</title><rect x="70.0" y="997" width="0.3" height="15.0" fill="rgb(209,79,25)" rx="2" ry="2" />
<text  x="73.02" y="1007.5" ></text>
</g>
<g >
<title>std::forward&lt;int&amp;&gt; (5 samples, 0.03%)</title><rect x="95.1" y="997" width="0.3" height="15.0" fill="rgb(228,228,41)" rx="2" ry="2" />
<text  x="98.09" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::end (5 samples, 0.03%)</title><rect x="762.3" y="485" width="0.3" height="15.0" fill="rgb(227,183,27)" rx="2" ry="2" />
<text  x="765.31" y="495.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned (2 samples, 0.01%)</title><rect x="154.9" y="533" width="0.1" height="15.0" fill="rgb(235,146,50)" rx="2" ry="2" />
<text  x="157.92" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (127 samples, 0.64%)</title><rect x="1025.9" y="757" width="7.6" height="15.0" fill="rgb(227,120,47)" rx="2" ry="2" />
<text  x="1028.90" y="767.5" ></text>
</g>
<g >
<title>pixman_image_unref (2 samples, 0.01%)</title><rect x="125.0" y="997" width="0.1" height="15.0" fill="rgb(230,105,22)" rx="2" ry="2" />
<text  x="127.98" y="1007.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::operator= (2 samples, 0.01%)</title><rect x="679.8" y="613" width="0.2" height="15.0" fill="rgb(215,134,38)" rx="2" ry="2" />
<text  x="682.85" y="623.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (3 samples, 0.02%)</title><rect x="1003.7" y="709" width="0.2" height="15.0" fill="rgb(210,146,18)" rx="2" ry="2" />
<text  x="1006.69" y="719.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (2 samples, 0.01%)</title><rect x="600.5" y="741" width="0.1" height="15.0" fill="rgb(248,90,30)" rx="2" ry="2" />
<text  x="603.48" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (25 samples, 0.13%)</title><rect x="578.9" y="741" width="1.5" height="15.0" fill="rgb(230,128,27)" rx="2" ry="2" />
<text  x="581.92" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (62 samples, 0.31%)</title><rect x="388.2" y="757" width="3.7" height="15.0" fill="rgb(211,156,41)" rx="2" ry="2" />
<text  x="391.21" y="767.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (58 samples, 0.29%)</title><rect x="141.1" y="837" width="3.4" height="15.0" fill="rgb(220,104,1)" rx="2" ry="2" />
<text  x="144.05" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;::__normal_iterator (5 samples, 0.03%)</title><rect x="938.7" y="421" width="0.3" height="15.0" fill="rgb(234,2,27)" rx="2" ry="2" />
<text  x="941.73" y="431.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Tuple_impl&lt;1ul, std::_Placeholder&lt;1&gt; &gt;&amp;&gt; (2 samples, 0.01%)</title><rect x="702.2" y="613" width="0.1" height="15.0" fill="rgb(236,31,42)" rx="2" ry="2" />
<text  x="705.17" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (9 samples, 0.05%)</title><rect x="1183.2" y="1013" width="0.5" height="15.0" fill="rgb(217,227,7)" rx="2" ry="2" />
<text  x="1186.21" y="1023.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_destroy (116 samples, 0.59%)</title><rect x="988.8" y="645" width="6.9" height="15.0" fill="rgb(220,13,5)" rx="2" ry="2" />
<text  x="991.81" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::CommonEvent, std::allocator&lt;RPG::CommonEvent&gt; &gt;::operator[] (4 samples, 0.02%)</title><rect x="1151.5" y="757" width="0.2" height="15.0" fill="rgb(246,167,46)" rx="2" ry="2" />
<text  x="1154.48" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt;::construct&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (64 samples, 0.32%)</title><rect x="681.9" y="645" width="3.8" height="15.0" fill="rgb(250,106,47)" rx="2" ry="2" />
<text  x="684.93" y="655.5" ></text>
</g>
<g >
<title>pixman_image_get_stride@plt (6 samples, 0.03%)</title><rect x="826.3" y="469" width="0.3" height="15.0" fill="rgb(234,157,4)" rx="2" ry="2" />
<text  x="829.26" y="479.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (238 samples, 1.20%)</title><rect x="244.7" y="709" width="14.1" height="15.0" fill="rgb(211,50,14)" rx="2" ry="2" />
<text  x="247.65" y="719.5" ></text>
</g>
<g >
<title>Game_Picture::ShowParams::~ShowParams (50 samples, 0.25%)</title><rect x="1017.7" y="757" width="3.0" height="15.0" fill="rgb(206,123,19)" rx="2" ry="2" />
<text  x="1020.75" y="767.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (102 samples, 0.51%)</title><rect x="144.7" y="837" width="6.1" height="15.0" fill="rgb(240,184,15)" rx="2" ry="2" />
<text  x="147.68" y="847.5" ></text>
</g>
<g >
<title>aa_file_perm (2 samples, 0.01%)</title><rect x="21.0" y="869" width="0.1" height="15.0" fill="rgb(250,152,24)" rx="2" ry="2" />
<text  x="23.96" y="879.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (4 samples, 0.02%)</title><rect x="331.0" y="773" width="0.3" height="15.0" fill="rgb(206,210,54)" rx="2" ry="2" />
<text  x="334.05" y="783.5" ></text>
</g>
<g >
<title>Bitmap::GetRect (7 samples, 0.04%)</title><rect x="850.4" y="485" width="0.4" height="15.0" fill="rgb(245,121,25)" rx="2" ry="2" />
<text  x="853.43" y="495.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (5 samples, 0.03%)</title><rect x="292.6" y="821" width="0.3" height="15.0" fill="rgb(219,25,5)" rx="2" ry="2" />
<text  x="295.65" y="831.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (102 samples, 0.51%)</title><rect x="144.7" y="581" width="6.1" height="15.0" fill="rgb(209,60,10)" rx="2" ry="2" />
<text  x="147.68" y="591.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (389 samples, 1.96%)</title><rect x="802.4" y="485" width="23.1" height="15.0" fill="rgb(243,128,52)" rx="2" ry="2" />
<text  x="805.38" y="495.5" >p..</text>
</g>
<g >
<title>zap_page_range (2 samples, 0.01%)</title><rect x="646.7" y="533" width="0.2" height="15.0" fill="rgb(242,22,42)" rx="2" ry="2" />
<text  x="649.74" y="543.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (3 samples, 0.02%)</title><rect x="1173.5" y="757" width="0.2" height="15.0" fill="rgb(215,229,49)" rx="2" ry="2" />
<text  x="1176.51" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;Bitmap&gt;::_M_ptr (2 samples, 0.01%)</title><rect x="43.1" y="997" width="0.1" height="15.0" fill="rgb(209,59,22)" rx="2" ry="2" />
<text  x="46.11" y="1007.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="646.9" y="469" width="0.1" height="15.0" fill="rgb(250,185,30)" rx="2" ry="2" />
<text  x="649.86" y="479.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::reset (64 samples, 0.32%)</title><rect x="1012.7" y="741" width="3.9" height="15.0" fill="rgb(207,92,25)" rx="2" ry="2" />
<text  x="1015.74" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (13 samples, 0.07%)</title><rect x="610.9" y="725" width="0.8" height="15.0" fill="rgb(214,5,46)" rx="2" ry="2" />
<text  x="613.90" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::get (15 samples, 0.08%)</title><rect x="859.8" y="485" width="0.9" height="15.0" fill="rgb(218,42,16)" rx="2" ry="2" />
<text  x="862.78" y="495.5" ></text>
</g>
<g >
<title>unmap_single_vma (4 samples, 0.02%)</title><rect x="257.3" y="149" width="0.3" height="15.0" fill="rgb(225,217,25)" rx="2" ry="2" />
<text  x="260.34" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (8 samples, 0.04%)</title><rect x="511.5" y="757" width="0.5" height="15.0" fill="rgb(250,89,7)" rx="2" ry="2" />
<text  x="514.52" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (29 samples, 0.15%)</title><rect x="981.9" y="725" width="1.7" height="15.0" fill="rgb(232,144,13)" rx="2" ry="2" />
<text  x="984.90" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt;::erase (153 samples, 0.77%)</title><rect x="939.0" y="437" width="9.1" height="15.0" fill="rgb(213,118,5)" rx="2" ry="2" />
<text  x="942.03" y="447.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (39 samples, 0.20%)</title><rect x="722.7" y="613" width="2.3" height="15.0" fill="rgb(205,123,3)" rx="2" ry="2" />
<text  x="725.72" y="623.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;int&gt;, int&gt; (157 samples, 0.79%)</title><rect x="671.3" y="645" width="9.4" height="15.0" fill="rgb(253,98,26)" rx="2" ry="2" />
<text  x="674.33" y="655.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (3,976 samples, 20.06%)</title><rect x="729.4" y="549" width="236.7" height="15.0" fill="rgb(211,39,51)" rx="2" ry="2" />
<text  x="732.38" y="559.5" >std::__invoke_impl&lt;void, void (..</text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (8 samples, 0.04%)</title><rect x="128.0" y="997" width="0.4" height="15.0" fill="rgb(224,11,8)" rx="2" ry="2" />
<text  x="130.95" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="309.4" y="309" width="0.2" height="15.0" fill="rgb(243,207,18)" rx="2" ry="2" />
<text  x="312.44" y="319.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Scene, (__gnu_cxx::_Lock_policy)2&gt;::get (2 samples, 0.01%)</title><rect x="1133.6" y="789" width="0.1" height="15.0" fill="rgb(227,150,43)" rx="2" ry="2" />
<text  x="1136.55" y="799.5" ></text>
</g>
<g >
<title>operator new@plt (4 samples, 0.02%)</title><rect x="838.6" y="357" width="0.3" height="15.0" fill="rgb(206,195,20)" rx="2" ry="2" />
<text  x="841.64" y="367.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (40 samples, 0.20%)</title><rect x="141.1" y="501" width="2.3" height="15.0" fill="rgb(238,55,36)" rx="2" ry="2" />
<text  x="144.05" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_M_begin (14 samples, 0.07%)</title><rect x="763.3" y="469" width="0.9" height="15.0" fill="rgb(216,121,32)" rx="2" ry="2" />
<text  x="766.32" y="479.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (36 samples, 0.18%)</title><rect x="159.6" y="565" width="2.2" height="15.0" fill="rgb(248,29,39)" rx="2" ry="2" />
<text  x="162.63" y="575.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (76 samples, 0.38%)</title><rect x="38.2" y="997" width="4.5" height="15.0" fill="rgb(213,37,13)" rx="2" ry="2" />
<text  x="41.22" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (78 samples, 0.39%)</title><rect x="636.8" y="677" width="4.6" height="15.0" fill="rgb(225,21,25)" rx="2" ry="2" />
<text  x="639.80" y="687.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (102 samples, 0.51%)</title><rect x="144.7" y="645" width="6.1" height="15.0" fill="rgb(210,225,24)" rx="2" ry="2" />
<text  x="147.68" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::end (2 samples, 0.01%)</title><rect x="647.6" y="693" width="0.2" height="15.0" fill="rgb(205,201,21)" rx="2" ry="2" />
<text  x="650.63" y="703.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (65 samples, 0.33%)</title><rect x="150.8" y="629" width="3.8" height="15.0" fill="rgb(209,116,13)" rx="2" ry="2" />
<text  x="153.76" y="639.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (6 samples, 0.03%)</title><rect x="100.0" y="997" width="0.4" height="15.0" fill="rgb(226,125,43)" rx="2" ry="2" />
<text  x="103.03" y="1007.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (4 samples, 0.02%)</title><rect x="326.2" y="901" width="0.3" height="15.0" fill="rgb(232,227,49)" rx="2" ry="2" />
<text  x="329.23" y="911.5" ></text>
</g>
<g >
<title>std::default_delete&lt;Sprite&gt;::operator() (3 samples, 0.02%)</title><rect x="267.3" y="597" width="0.2" height="15.0" fill="rgb(220,121,40)" rx="2" ry="2" />
<text  x="270.28" y="607.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (2 samples, 0.01%)</title><rect x="758.4" y="501" width="0.1" height="15.0" fill="rgb(214,76,13)" rx="2" ry="2" />
<text  x="761.38" y="511.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (4 samples, 0.02%)</title><rect x="878.2" y="485" width="0.3" height="15.0" fill="rgb(215,53,50)" rx="2" ry="2" />
<text  x="881.24" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_valptr (4 samples, 0.02%)</title><rect x="69.3" y="997" width="0.2" height="15.0" fill="rgb(249,160,15)" rx="2" ry="2" />
<text  x="72.30" y="1007.5" ></text>
</g>
<g >
<title>Game_Picture::Show (5 samples, 0.03%)</title><rect x="31.8" y="997" width="0.3" height="15.0" fill="rgb(207,68,2)" rx="2" ry="2" />
<text  x="34.79" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (38 samples, 0.19%)</title><rect x="122.0" y="997" width="2.3" height="15.0" fill="rgb(213,43,38)" rx="2" ry="2" />
<text  x="125.00" y="1007.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="784.0" y="421" width="0.1" height="15.0" fill="rgb(229,127,2)" rx="2" ry="2" />
<text  x="786.98" y="431.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="757.4" y="437" width="0.1" height="15.0" fill="rgb(253,0,24)" rx="2" ry="2" />
<text  x="760.37" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (13 samples, 0.07%)</title><rect x="114.5" y="997" width="0.8" height="15.0" fill="rgb(233,162,29)" rx="2" ry="2" />
<text  x="117.50" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt;@plt (2 samples, 0.01%)</title><rect x="981.8" y="725" width="0.1" height="15.0" fill="rgb(236,111,50)" rx="2" ry="2" />
<text  x="984.78" y="735.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (96 samples, 0.48%)</title><rect x="238.9" y="453" width="5.7" height="15.0" fill="rgb(240,24,50)" rx="2" ry="2" />
<text  x="241.88" y="463.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (44 samples, 0.22%)</title><rect x="258.8" y="869" width="2.6" height="15.0" fill="rgb(225,139,28)" rx="2" ry="2" />
<text  x="261.83" y="879.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (2 samples, 0.01%)</title><rect x="792.1" y="437" width="0.2" height="15.0" fill="rgb(233,195,13)" rx="2" ry="2" />
<text  x="795.14" y="447.5" ></text>
</g>
<g >
<title>Drawable::GetPriorityForMapLayer (2 samples, 0.01%)</title><rect x="25.8" y="997" width="0.2" height="15.0" fill="rgb(216,25,47)" rx="2" ry="2" />
<text  x="28.84" y="1007.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::swap (52 samples, 0.26%)</title><rect x="682.3" y="597" width="3.1" height="15.0" fill="rgb(234,183,18)" rx="2" ry="2" />
<text  x="685.29" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (75 samples, 0.38%)</title><rect x="620.1" y="677" width="4.5" height="15.0" fill="rgb(249,210,49)" rx="2" ry="2" />
<text  x="623.13" y="687.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (102 samples, 0.51%)</title><rect x="144.7" y="661" width="6.1" height="15.0" fill="rgb(224,170,28)" rx="2" ry="2" />
<text  x="147.68" y="671.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="75.4" y="997" width="0.1" height="15.0" fill="rgb(231,75,19)" rx="2" ry="2" />
<text  x="78.38" y="1007.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (260 samples, 1.31%)</title><rect x="309.2" y="405" width="15.5" height="15.0" fill="rgb(253,89,44)" rx="2" ry="2" />
<text  x="312.20" y="415.5" ></text>
</g>
<g >
<title>read_tsc (6 samples, 0.03%)</title><rect x="281.6" y="453" width="0.3" height="15.0" fill="rgb(235,153,27)" rx="2" ry="2" />
<text  x="284.57" y="463.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::_Bind&lt;Game_Picture*&amp;, std::_Placeholder&lt;1&gt; const&amp;&gt; (24 samples, 0.12%)</title><rect x="687.9" y="693" width="1.4" height="15.0" fill="rgb(210,4,23)" rx="2" ry="2" />
<text  x="690.88" y="703.5" ></text>
</g>
<g >
<title>__gthread_active_p (2 samples, 0.01%)</title><rect x="686.8" y="613" width="0.1" height="15.0" fill="rgb(216,6,46)" rx="2" ry="2" />
<text  x="689.75" y="623.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (5 samples, 0.03%)</title><rect x="121.3" y="997" width="0.3" height="15.0" fill="rgb(205,199,24)" rx="2" ry="2" />
<text  x="124.34" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::base (2 samples, 0.01%)</title><rect x="1150.8" y="821" width="0.1" height="15.0" fill="rgb(211,135,21)" rx="2" ry="2" />
<text  x="1153.76" y="831.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.01%)</title><rect x="258.1" y="133" width="0.1" height="15.0" fill="rgb(222,54,51)" rx="2" ry="2" />
<text  x="261.11" y="143.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;2ul, bool&gt; (3 samples, 0.02%)</title><rect x="80.0" y="997" width="0.2" height="15.0" fill="rgb(239,6,37)" rx="2" ry="2" />
<text  x="83.02" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (178 samples, 0.90%)</title><rect x="310.4" y="277" width="10.6" height="15.0" fill="rgb(241,219,42)" rx="2" ry="2" />
<text  x="313.39" y="287.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__weak_ptr (16 samples, 0.08%)</title><rect x="669.1" y="645" width="1.0" height="15.0" fill="rgb(235,67,21)" rx="2" ry="2" />
<text  x="672.13" y="655.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (3 samples, 0.02%)</title><rect x="1147.5" y="757" width="0.2" height="15.0" fill="rgb(236,28,34)" rx="2" ry="2" />
<text  x="1150.49" y="767.5" ></text>
</g>
<g >
<title>std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;::_Mem_fn_base (14 samples, 0.07%)</title><rect x="711.0" y="693" width="0.9" height="15.0" fill="rgb(246,53,14)" rx="2" ry="2" />
<text  x="714.05" y="703.5" ></text>
</g>
<g >
<title>handle_mm_fault (4 samples, 0.02%)</title><rect x="137.7" y="405" width="0.3" height="15.0" fill="rgb(239,53,48)" rx="2" ry="2" />
<text  x="140.72" y="415.5" ></text>
</g>
<g >
<title>min&lt;int&gt; (3 samples, 0.02%)</title><rect x="59.1" y="997" width="0.2" height="15.0" fill="rgb(213,89,9)" rx="2" ry="2" />
<text  x="62.12" y="1007.5" ></text>
</g>
<g >
<title>Bitmap::Create (9 samples, 0.05%)</title><rect x="130.5" y="661" width="0.5" height="15.0" fill="rgb(208,229,23)" rx="2" ry="2" />
<text  x="133.51" y="671.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (2 samples, 0.01%)</title><rect x="851.1" y="469" width="0.1" height="15.0" fill="rgb(217,82,26)" rx="2" ry="2" />
<text  x="854.09" y="479.5" ></text>
</g>
<g >
<title>Bitmap::ZoomOpacityBlit (3 samples, 0.02%)</title><rect x="331.3" y="789" width="0.2" height="15.0" fill="rgb(207,81,24)" rx="2" ry="2" />
<text  x="334.35" y="799.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (725 samples, 3.66%)</title><rect x="616.9" y="725" width="43.2" height="15.0" fill="rgb(206,126,36)" rx="2" ry="2" />
<text  x="619.91" y="735.5" >Asyn..</text>
</g>
<g >
<title>__fdget (5 samples, 0.03%)</title><rect x="16.3" y="949" width="0.3" height="15.0" fill="rgb(227,8,30)" rx="2" ry="2" />
<text  x="19.31" y="959.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (7 samples, 0.04%)</title><rect x="327.2" y="997" width="0.4" height="15.0" fill="rgb(213,48,17)" rx="2" ry="2" />
<text  x="330.18" y="1007.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::reset (4 samples, 0.02%)</title><rect x="326.2" y="533" width="0.3" height="15.0" fill="rgb(209,8,41)" rx="2" ry="2" />
<text  x="329.23" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (2 samples, 0.01%)</title><rect x="1163.6" y="757" width="0.1" height="15.0" fill="rgb(225,25,7)" rx="2" ry="2" />
<text  x="1166.62" y="767.5" ></text>
</g>
<g >
<title>Scene::MainFunction (109 samples, 0.55%)</title><rect x="238.2" y="965" width="6.5" height="15.0" fill="rgb(219,149,5)" rx="2" ry="2" />
<text  x="241.16" y="975.5" ></text>
</g>
<g >
<title>Game_Player::UpdateSelfMovement (19 samples, 0.10%)</title><rect x="1151.0" y="821" width="1.1" height="15.0" fill="rgb(239,191,1)" rx="2" ry="2" />
<text  x="1154.00" y="831.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (4 samples, 0.02%)</title><rect x="1009.4" y="709" width="0.2" height="15.0" fill="rgb(220,199,36)" rx="2" ry="2" />
<text  x="1012.41" y="719.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (109 samples, 0.55%)</title><rect x="238.2" y="581" width="6.5" height="15.0" fill="rgb(227,112,48)" rx="2" ry="2" />
<text  x="241.16" y="591.5" ></text>
</g>
<g >
<title>Bitmap::~Bitmap (9 samples, 0.05%)</title><rect x="237.6" y="389" width="0.6" height="15.0" fill="rgb(239,133,30)" rx="2" ry="2" />
<text  x="240.63" y="399.5" ></text>
</g>
<g >
<title>Bitmap::find_format (15 samples, 0.08%)</title><rect x="308.3" y="341" width="0.9" height="15.0" fill="rgb(237,56,0)" rx="2" ry="2" />
<text  x="311.30" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (6 samples, 0.03%)</title><rect x="597.6" y="725" width="0.4" height="15.0" fill="rgb(212,106,33)" rx="2" ry="2" />
<text  x="600.62" y="735.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (32 samples, 0.16%)</title><rect x="242.7" y="309" width="1.9" height="15.0" fill="rgb(248,175,48)" rx="2" ry="2" />
<text  x="245.69" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (126 samples, 0.64%)</title><rect x="1025.9" y="741" width="7.5" height="15.0" fill="rgb(221,90,12)" rx="2" ry="2" />
<text  x="1028.90" y="751.5" ></text>
</g>
<g >
<title>pixman_image_get_height (11 samples, 0.06%)</title><rect x="866.6" y="469" width="0.6" height="15.0" fill="rgb(215,25,39)" rx="2" ry="2" />
<text  x="869.57" y="479.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (180 samples, 0.91%)</title><rect x="829.2" y="437" width="10.7" height="15.0" fill="rgb(229,162,38)" rx="2" ry="2" />
<text  x="832.18" y="447.5" ></text>
</g>
<g >
<title>Sprite::~Sprite (26 samples, 0.13%)</title><rect x="259.9" y="533" width="1.5" height="15.0" fill="rgb(214,190,53)" rx="2" ry="2" />
<text  x="262.90" y="543.5" ></text>
</g>
<g >
<title>std::swap&lt;Bitmap*&gt; (9 samples, 0.05%)</title><rect x="1013.8" y="709" width="0.5" height="15.0" fill="rgb(211,211,30)" rx="2" ry="2" />
<text  x="1016.76" y="719.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (2 samples, 0.01%)</title><rect x="86.4" y="997" width="0.1" height="15.0" fill="rgb(254,76,18)" rx="2" ry="2" />
<text  x="89.39" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (28 samples, 0.14%)</title><rect x="962.5" y="437" width="1.7" height="15.0" fill="rgb(226,93,10)" rx="2" ry="2" />
<text  x="965.49" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Drawable*&gt;::construct&lt;Drawable*, Drawable* const&amp;&gt; (16 samples, 0.08%)</title><rect x="875.9" y="453" width="0.9" height="15.0" fill="rgb(245,78,19)" rx="2" ry="2" />
<text  x="878.86" y="463.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (18 samples, 0.09%)</title><rect x="143.4" y="485" width="1.1" height="15.0" fill="rgb(224,15,49)" rx="2" ry="2" />
<text  x="146.43" y="495.5" ></text>
</g>
<g >
<title>ktime_get_raw_ts64 (19 samples, 0.10%)</title><rect x="280.8" y="469" width="1.1" height="15.0" fill="rgb(244,126,14)" rx="2" ry="2" />
<text  x="283.80" y="479.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (43 samples, 0.22%)</title><rect x="238.9" y="341" width="2.5" height="15.0" fill="rgb(239,35,41)" rx="2" ry="2" />
<text  x="241.88" y="351.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (58 samples, 0.29%)</title><rect x="141.1" y="741" width="3.4" height="15.0" fill="rgb(251,186,35)" rx="2" ry="2" />
<text  x="144.05" y="751.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (3 samples, 0.02%)</title><rect x="27.0" y="997" width="0.1" height="15.0" fill="rgb(219,101,2)" rx="2" ry="2" />
<text  x="29.97" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (2 samples, 0.01%)</title><rect x="997.2" y="693" width="0.1" height="15.0" fill="rgb(250,69,13)" rx="2" ry="2" />
<text  x="1000.20" y="703.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::operator bool (9 samples, 0.05%)</title><rect x="1147.1" y="821" width="0.6" height="15.0" fill="rgb(234,163,25)" rx="2" ry="2" />
<text  x="1150.13" y="831.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (9 samples, 0.05%)</title><rect x="130.5" y="949" width="0.5" height="15.0" fill="rgb(217,190,24)" rx="2" ry="2" />
<text  x="133.51" y="959.5" ></text>
</g>
<g >
<title>Game_Picture::SyncCurrentToFinish (14 samples, 0.07%)</title><rect x="1154.2" y="821" width="0.8" height="15.0" fill="rgb(213,58,44)" rx="2" ry="2" />
<text  x="1157.22" y="831.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::_M_ptr (4 samples, 0.02%)</title><rect x="89.2" y="997" width="0.2" height="15.0" fill="rgb(253,49,6)" rx="2" ry="2" />
<text  x="92.19" y="1007.5" ></text>
</g>
<g >
<title>page_fault (4 samples, 0.02%)</title><rect x="138.3" y="469" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="141.31" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator (2 samples, 0.01%)</title><rect x="647.4" y="709" width="0.1" height="15.0" fill="rgb(206,146,12)" rx="2" ry="2" />
<text  x="650.40" y="719.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (61 samples, 0.31%)</title><rect x="17.0" y="917" width="3.6" height="15.0" fill="rgb(237,119,15)" rx="2" ry="2" />
<text  x="19.97" y="927.5" ></text>
</g>
<g >
<title>Cache::Picture (12 samples, 0.06%)</title><rect x="238.2" y="549" width="0.7" height="15.0" fill="rgb(238,148,11)" rx="2" ry="2" />
<text  x="241.16" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (75 samples, 0.38%)</title><rect x="880.2" y="485" width="4.5" height="15.0" fill="rgb(233,136,10)" rx="2" ry="2" />
<text  x="883.20" y="495.5" ></text>
</g>
<g >
<title>__vfs_write (6 samples, 0.03%)</title><rect x="21.1" y="933" width="0.3" height="15.0" fill="rgb(211,11,31)" rx="2" ry="2" />
<text  x="24.07" y="943.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (109 samples, 0.55%)</title><rect x="238.2" y="693" width="6.5" height="15.0" fill="rgb(243,207,37)" rx="2" ry="2" />
<text  x="241.16" y="703.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (4 samples, 0.02%)</title><rect x="326.2" y="437" width="0.3" height="15.0" fill="rgb(223,25,49)" rx="2" ry="2" />
<text  x="329.23" y="447.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (5 samples, 0.03%)</title><rect x="292.6" y="885" width="0.3" height="15.0" fill="rgb(227,4,4)" rx="2" ry="2" />
<text  x="295.65" y="895.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (63 samples, 0.32%)</title><rect x="1133.7" y="789" width="3.7" height="15.0" fill="rgb(215,135,16)" rx="2" ry="2" />
<text  x="1136.67" y="799.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt;::__normal_iterator (4 samples, 0.02%)</title><rect x="1120.3" y="789" width="0.3" height="15.0" fill="rgb(235,188,17)" rx="2" ry="2" />
<text  x="1123.34" y="799.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="1180.3" y="645" width="0.1" height="15.0" fill="rgb(211,206,23)" rx="2" ry="2" />
<text  x="1183.29" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::_M_ptr (5 samples, 0.03%)</title><rect x="87.8" y="997" width="0.3" height="15.0" fill="rgb(246,194,16)" rx="2" ry="2" />
<text  x="90.82" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_value (12 samples, 0.06%)</title><rect x="766.8" y="437" width="0.7" height="15.0" fill="rgb(231,51,4)" rx="2" ry="2" />
<text  x="769.78" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (40 samples, 0.20%)</title><rect x="141.1" y="549" width="2.3" height="15.0" fill="rgb(214,118,0)" rx="2" ry="2" />
<text  x="144.05" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt;::base (3 samples, 0.02%)</title><rect x="47.2" y="997" width="0.1" height="15.0" fill="rgb(249,96,28)" rx="2" ry="2" />
<text  x="50.15" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_addr (4 samples, 0.02%)</title><rect x="43.2" y="997" width="0.3" height="15.0" fill="rgb(245,45,4)" rx="2" ry="2" />
<text  x="46.22" y="1007.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::operator[] (8 samples, 0.04%)</title><rect x="101.3" y="997" width="0.5" height="15.0" fill="rgb(246,163,7)" rx="2" ry="2" />
<text  x="104.34" y="1007.5" ></text>
</g>
<g >
<title>Scene_Map::Update (44 samples, 0.22%)</title><rect x="258.8" y="965" width="2.6" height="15.0" fill="rgb(217,114,9)" rx="2" ry="2" />
<text  x="261.83" y="975.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (20 samples, 0.10%)</title><rect x="237.0" y="757" width="1.2" height="15.0" fill="rgb(225,160,51)" rx="2" ry="2" />
<text  x="239.97" y="767.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (102 samples, 0.51%)</title><rect x="144.7" y="853" width="6.1" height="15.0" fill="rgb(244,82,47)" rx="2" ry="2" />
<text  x="147.68" y="863.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (35 samples, 0.18%)</title><rect x="267.8" y="565" width="2.0" height="15.0" fill="rgb(223,147,49)" rx="2" ry="2" />
<text  x="270.76" y="575.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (238 samples, 1.20%)</title><rect x="244.7" y="869" width="14.1" height="15.0" fill="rgb(231,159,5)" rx="2" ry="2" />
<text  x="247.65" y="879.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator* (2 samples, 0.01%)</title><rect x="857.5" y="501" width="0.1" height="15.0" fill="rgb(253,157,8)" rx="2" ry="2" />
<text  x="860.46" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_M_begin (2 samples, 0.01%)</title><rect x="67.6" y="997" width="0.1" height="15.0" fill="rgb(253,15,29)" rx="2" ry="2" />
<text  x="70.58" y="1007.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (194 samples, 0.98%)</title><rect x="948.4" y="421" width="11.6" height="15.0" fill="rgb(209,199,52)" rx="2" ry="2" />
<text  x="951.44" y="431.5" ></text>
</g>
<g >
<title>std::move&lt;std::__weak_count&lt;(__gnu_cxx::_Lock_policy)2&gt;&amp;&gt; (2 samples, 0.01%)</title><rect x="670.0" y="629" width="0.1" height="15.0" fill="rgb(218,220,11)" rx="2" ry="2" />
<text  x="672.96" y="639.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (185 samples, 0.93%)</title><rect x="247.8" y="533" width="11.0" height="15.0" fill="rgb(210,130,0)" rx="2" ry="2" />
<text  x="250.81" y="543.5" ></text>
</g>
<g >
<title>Bitmap::find_format (29 samples, 0.15%)</title><rect x="286.6" y="453" width="1.7" height="15.0" fill="rgb(239,170,30)" rx="2" ry="2" />
<text  x="289.57" y="463.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (65 samples, 0.33%)</title><rect x="942.1" y="405" width="3.8" height="15.0" fill="rgb(226,91,52)" rx="2" ry="2" />
<text  x="945.07" y="415.5" ></text>
</g>
<g >
<title>poll_schedule_timeout.constprop.14 (62 samples, 0.31%)</title><rect x="16.9" y="949" width="3.7" height="15.0" fill="rgb(220,30,4)" rx="2" ry="2" />
<text  x="19.91" y="959.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::operator++ (4 samples, 0.02%)</title><rect x="1148.9" y="837" width="0.2" height="15.0" fill="rgb(223,161,20)" rx="2" ry="2" />
<text  x="1151.86" y="847.5" ></text>
</g>
<g >
<title>read_tsc (7 samples, 0.04%)</title><rect x="281.9" y="469" width="0.4" height="15.0" fill="rgb(231,107,54)" rx="2" ry="2" />
<text  x="284.93" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;::operator+ (6 samples, 0.03%)</title><rect x="939.6" y="421" width="0.3" height="15.0" fill="rgb(236,191,50)" rx="2" ry="2" />
<text  x="942.57" y="431.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (55 samples, 0.28%)</title><rect x="17.1" y="853" width="3.3" height="15.0" fill="rgb(245,100,29)" rx="2" ry="2" />
<text  x="20.15" y="863.5" ></text>
</g>
<g >
<title>generic_file_read_iter (2 samples, 0.01%)</title><rect x="20.8" y="885" width="0.1" height="15.0" fill="rgb(221,144,38)" rx="2" ry="2" />
<text  x="23.78" y="895.5" ></text>
</g>
<g >
<title>__interceptor_free (192 samples, 0.97%)</title><rect x="309.6" y="293" width="11.4" height="15.0" fill="rgb(227,69,1)" rx="2" ry="2" />
<text  x="312.55" y="303.5" ></text>
</g>
<g >
<title>memset@plt (5 samples, 0.03%)</title><rect x="827.0" y="485" width="0.3" height="15.0" fill="rgb(224,177,26)" rx="2" ry="2" />
<text  x="830.03" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;::__normal_iterator (7 samples, 0.04%)</title><rect x="946.2" y="389" width="0.4" height="15.0" fill="rgb(250,24,42)" rx="2" ry="2" />
<text  x="949.18" y="399.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (60 samples, 0.30%)</title><rect x="134.4" y="469" width="3.6" height="15.0" fill="rgb(253,100,13)" rx="2" ry="2" />
<text  x="137.44" y="479.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (101 samples, 0.51%)</title><rect x="261.4" y="885" width="6.1" height="15.0" fill="rgb(231,4,28)" rx="2" ry="2" />
<text  x="264.45" y="895.5" ></text>
</g>
<g >
<title>Tone::Tone (7 samples, 0.04%)</title><rect x="1004.5" y="709" width="0.4" height="15.0" fill="rgb(213,84,5)" rx="2" ry="2" />
<text  x="1007.47" y="719.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (44 samples, 0.22%)</title><rect x="258.8" y="901" width="2.6" height="15.0" fill="rgb(241,187,40)" rx="2" ry="2" />
<text  x="261.83" y="911.5" ></text>
</g>
<g >
<title>unmap_region (18 samples, 0.09%)</title><rect x="256.5" y="181" width="1.1" height="15.0" fill="rgb(243,190,34)" rx="2" ry="2" />
<text  x="259.50" y="191.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.02%)</title><rect x="826.9" y="485" width="0.1" height="15.0" fill="rgb(253,76,49)" rx="2" ry="2" />
<text  x="829.85" y="495.5" ></text>
</g>
<g >
<title>std::default_delete&lt;Sprite&gt;::operator() (273 samples, 1.38%)</title><rect x="309.2" y="501" width="16.3" height="15.0" fill="rgb(251,126,16)" rx="2" ry="2" />
<text  x="312.20" y="511.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (29 samples, 0.15%)</title><rect x="286.6" y="629" width="1.7" height="15.0" fill="rgb(208,121,6)" rx="2" ry="2" />
<text  x="289.57" y="639.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (256 samples, 1.29%)</title><rect x="270.4" y="565" width="15.2" height="15.0" fill="rgb(234,32,54)" rx="2" ry="2" />
<text  x="273.38" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (23 samples, 0.12%)</title><rect x="1137.5" y="805" width="1.4" height="15.0" fill="rgb(232,132,51)" rx="2" ry="2" />
<text  x="1140.48" y="815.5" ></text>
</g>
<g >
<title>Sprite::SetFlashEffect (6 samples, 0.03%)</title><rect x="1166.5" y="789" width="0.4" height="15.0" fill="rgb(236,40,9)" rx="2" ry="2" />
<text  x="1169.54" y="799.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.02%)</title><rect x="326.2" y="325" width="0.2" height="15.0" fill="rgb(247,198,15)" rx="2" ry="2" />
<text  x="329.23" y="335.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (102 samples, 0.51%)</title><rect x="144.7" y="549" width="6.1" height="15.0" fill="rgb(205,77,39)" rx="2" ry="2" />
<text  x="147.68" y="559.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (2 samples, 0.01%)</title><rect x="256.4" y="181" width="0.1" height="15.0" fill="rgb(212,108,21)" rx="2" ry="2" />
<text  x="259.38" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator (2 samples, 0.01%)</title><rect x="751.3" y="485" width="0.1" height="15.0" fill="rgb(232,125,26)" rx="2" ry="2" />
<text  x="754.30" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char&gt; (11 samples, 0.06%)</title><rect x="45.2" y="997" width="0.7" height="15.0" fill="rgb(248,144,30)" rx="2" ry="2" />
<text  x="48.25" y="1007.5" ></text>
</g>
<g >
<title>std::max&lt;int&gt; (4 samples, 0.02%)</title><rect x="583.1" y="757" width="0.3" height="15.0" fill="rgb(243,204,28)" rx="2" ry="2" />
<text  x="586.15" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_key (6 samples, 0.03%)</title><rect x="67.0" y="997" width="0.4" height="15.0" fill="rgb(241,129,49)" rx="2" ry="2" />
<text  x="70.04" y="1007.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (143 samples, 0.72%)</title><rect x="150.8" y="709" width="8.5" height="15.0" fill="rgb(227,228,8)" rx="2" ry="2" />
<text  x="153.76" y="719.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (45 samples, 0.23%)</title><rect x="245.1" y="469" width="2.7" height="15.0" fill="rgb(221,202,22)" rx="2" ry="2" />
<text  x="248.13" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (50 samples, 0.25%)</title><rect x="496.7" y="725" width="3.0" height="15.0" fill="rgb(254,154,22)" rx="2" ry="2" />
<text  x="499.69" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (12 samples, 0.06%)</title><rect x="441.5" y="789" width="0.7" height="15.0" fill="rgb(231,29,2)" rx="2" ry="2" />
<text  x="444.50" y="799.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (257 samples, 1.30%)</title><rect x="768.8" y="453" width="15.3" height="15.0" fill="rgb(236,64,7)" rx="2" ry="2" />
<text  x="771.80" y="463.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (30 samples, 0.15%)</title><rect x="789.0" y="501" width="1.8" height="15.0" fill="rgb(220,61,39)" rx="2" ry="2" />
<text  x="792.05" y="511.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (9 samples, 0.05%)</title><rect x="130.5" y="773" width="0.5" height="15.0" fill="rgb(227,62,43)" rx="2" ry="2" />
<text  x="133.51" y="783.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (20 samples, 0.10%)</title><rect x="789.5" y="469" width="1.2" height="15.0" fill="rgb(223,83,21)" rx="2" ry="2" />
<text  x="792.46" y="479.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (10 samples, 0.05%)</title><rect x="592.1" y="757" width="0.6" height="15.0" fill="rgb(210,108,36)" rx="2" ry="2" />
<text  x="595.08" y="767.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (80 samples, 0.40%)</title><rect x="674.8" y="549" width="4.8" height="15.0" fill="rgb(235,153,4)" rx="2" ry="2" />
<text  x="677.84" y="559.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;BaseUi, (__gnu_cxx::_Lock_policy)2&gt;::get (8 samples, 0.04%)</title><rect x="761.6" y="469" width="0.5" height="15.0" fill="rgb(230,217,39)" rx="2" ry="2" />
<text  x="764.60" y="479.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (49 samples, 0.25%)</title><rect x="264.4" y="581" width="2.9" height="15.0" fill="rgb(239,50,21)" rx="2" ry="2" />
<text  x="267.36" y="591.5" ></text>
</g>
<g >
<title>Rect::Rect (12 samples, 0.06%)</title><rect x="876.9" y="501" width="0.7" height="15.0" fill="rgb(253,30,50)" rx="2" ry="2" />
<text  x="879.87" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, bool&gt;::_Tuple_impl&lt;bool&amp;&gt; (10 samples, 0.05%)</title><rect x="793.7" y="453" width="0.6" height="15.0" fill="rgb(249,186,18)" rx="2" ry="2" />
<text  x="796.75" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (3 samples, 0.02%)</title><rect x="1189.6" y="1013" width="0.2" height="15.0" fill="rgb(244,200,31)" rx="2" ry="2" />
<text  x="1192.58" y="1023.5" ></text>
</g>
<g >
<title>Sprite::~Sprite (963 samples, 4.86%)</title><rect x="179.6" y="629" width="57.3" height="15.0" fill="rgb(254,107,35)" rx="2" ry="2" />
<text  x="182.58" y="639.5" >Sprite..</text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (101 samples, 0.51%)</title><rect x="261.4" y="661" width="6.1" height="15.0" fill="rgb(218,192,14)" rx="2" ry="2" />
<text  x="264.45" y="671.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (33 samples, 0.17%)</title><rect x="303.3" y="453" width="2.0" height="15.0" fill="rgb(235,91,35)" rx="2" ry="2" />
<text  x="306.30" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator* (2 samples, 0.01%)</title><rect x="618.3" y="693" width="0.2" height="15.0" fill="rgb(230,45,4)" rx="2" ry="2" />
<text  x="621.34" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (49 samples, 0.25%)</title><rect x="167.7" y="517" width="2.9" height="15.0" fill="rgb(209,7,39)" rx="2" ry="2" />
<text  x="170.73" y="527.5" ></text>
</g>
<g >
<title>Sprite::SetX (2 samples, 0.01%)</title><rect x="1006.7" y="725" width="0.1" height="15.0" fill="rgb(253,222,21)" rx="2" ry="2" />
<text  x="1009.67" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (11 samples, 0.06%)</title><rect x="56.0" y="997" width="0.6" height="15.0" fill="rgb(244,91,37)" rx="2" ry="2" />
<text  x="58.97" y="1007.5" ></text>
</g>
<g >
<title>Game_Picture::Show (143 samples, 0.72%)</title><rect x="150.8" y="885" width="8.5" height="15.0" fill="rgb(234,38,31)" rx="2" ry="2" />
<text  x="153.76" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (3 samples, 0.02%)</title><rect x="793.5" y="437" width="0.2" height="15.0" fill="rgb(231,206,9)" rx="2" ry="2" />
<text  x="796.51" y="447.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (58 samples, 0.29%)</title><rect x="141.1" y="821" width="3.4" height="15.0" fill="rgb(210,215,24)" rx="2" ry="2" />
<text  x="144.05" y="831.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (42 samples, 0.21%)</title><rect x="159.3" y="645" width="2.5" height="15.0" fill="rgb(219,170,7)" rx="2" ry="2" />
<text  x="162.27" y="655.5" ></text>
</g>
<g >
<title>__interceptor_ioctl (4 samples, 0.02%)</title><rect x="292.7" y="757" width="0.2" height="15.0" fill="rgb(205,67,54)" rx="2" ry="2" />
<text  x="295.70" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::substr (2 samples, 0.01%)</title><rect x="1025.1" y="741" width="0.1" height="15.0" fill="rgb(215,190,27)" rx="2" ry="2" />
<text  x="1028.07" y="751.5" ></text>
</g>
<g >
<title>Bitmap::StretchBlit (3 samples, 0.02%)</title><rect x="331.3" y="773" width="0.2" height="15.0" fill="rgb(232,219,51)" rx="2" ry="2" />
<text  x="334.35" y="783.5" ></text>
</g>
<g >
<title>Sdl2Ui::ProcessEvents (49 samples, 0.25%)</title><rect x="1180.1" y="901" width="2.9" height="15.0" fill="rgb(246,42,40)" rx="2" ry="2" />
<text  x="1183.12" y="911.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;int&gt;, int&gt; (5 samples, 0.03%)</title><rect x="83.8" y="997" width="0.3" height="15.0" fill="rgb(242,67,4)" rx="2" ry="2" />
<text  x="86.83" y="1007.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (515 samples, 2.60%)</title><rect x="294.8" y="805" width="30.7" height="15.0" fill="rgb(239,71,26)" rx="2" ry="2" />
<text  x="297.79" y="815.5" >Ga..</text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (100 samples, 0.50%)</title><rect x="161.8" y="549" width="5.9" height="15.0" fill="rgb(238,205,8)" rx="2" ry="2" />
<text  x="164.77" y="559.5" ></text>
</g>
<g >
<title>std::_Bit_const_iterator::_Bit_const_iterator (5 samples, 0.03%)</title><rect x="336.9" y="757" width="0.3" height="15.0" fill="rgb(225,92,18)" rx="2" ry="2" />
<text  x="339.88" y="767.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (8 samples, 0.04%)</title><rect x="170.6" y="581" width="0.5" height="15.0" fill="rgb(240,42,23)" rx="2" ry="2" />
<text  x="173.64" y="591.5" ></text>
</g>
<g >
<title>std::__stable_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (2 samples, 0.01%)</title><rect x="331.7" y="837" width="0.1" height="15.0" fill="rgb(242,166,42)" rx="2" ry="2" />
<text  x="334.70" y="847.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (50 samples, 0.25%)</title><rect x="1172.3" y="805" width="2.9" height="15.0" fill="rgb(211,18,37)" rx="2" ry="2" />
<text  x="1175.26" y="815.5" ></text>
</g>
<g >
<title>Graphics::UpdateZCallback (8 samples, 0.04%)</title><rect x="874.5" y="485" width="0.5" height="15.0" fill="rgb(245,53,28)" rx="2" ry="2" />
<text  x="877.55" y="495.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (4 samples, 0.02%)</title><rect x="85.0" y="997" width="0.2" height="15.0" fill="rgb(218,130,41)" rx="2" ry="2" />
<text  x="87.96" y="1007.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::get (2 samples, 0.01%)</title><rect x="1034.4" y="757" width="0.1" height="15.0" fill="rgb(248,152,46)" rx="2" ry="2" />
<text  x="1037.42" y="767.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;Bitmap&gt;&amp;&gt; (3 samples, 0.02%)</title><rect x="790.7" y="485" width="0.1" height="15.0" fill="rgb(234,71,33)" rx="2" ry="2" />
<text  x="793.65" y="495.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (109 samples, 0.55%)</title><rect x="238.2" y="597" width="6.5" height="15.0" fill="rgb(249,179,0)" rx="2" ry="2" />
<text  x="241.16" y="607.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_M_head (3 samples, 0.02%)</title><rect x="64.8" y="997" width="0.2" height="15.0" fill="rgb(241,88,34)" rx="2" ry="2" />
<text  x="67.84" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.03%)</title><rect x="159.3" y="549" width="0.3" height="15.0" fill="rgb(231,166,21)" rx="2" ry="2" />
<text  x="162.27" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (275 samples, 1.39%)</title><rect x="1080.0" y="773" width="16.4" height="15.0" fill="rgb(209,170,5)" rx="2" ry="2" />
<text  x="1083.03" y="783.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (40 samples, 0.20%)</title><rect x="141.1" y="581" width="2.3" height="15.0" fill="rgb(224,25,19)" rx="2" ry="2" />
<text  x="144.05" y="591.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (2 samples, 0.01%)</title><rect x="1179.9" y="693" width="0.1" height="15.0" fill="rgb(254,73,54)" rx="2" ry="2" />
<text  x="1182.88" y="703.5" ></text>
</g>
<g >
<title>memcmp (2 samples, 0.01%)</title><rect x="777.1" y="357" width="0.2" height="15.0" fill="rgb(244,94,24)" rx="2" ry="2" />
<text  x="780.14" y="367.5" ></text>
</g>
<g >
<title>memcpy (5 samples, 0.03%)</title><rect x="1027.1" y="725" width="0.3" height="15.0" fill="rgb(233,183,10)" rx="2" ry="2" />
<text  x="1030.09" y="735.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (166 samples, 0.84%)</title><rect x="131.0" y="613" width="9.9" height="15.0" fill="rgb(207,41,30)" rx="2" ry="2" />
<text  x="134.05" y="623.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;Drawable* const&gt; &gt; (728 samples, 3.67%)</title><rect x="894.3" y="421" width="43.3" height="15.0" fill="rgb(244,166,22)" rx="2" ry="2" />
<text  x="897.26" y="431.5" >std:..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt;::_M_head (5 samples, 0.03%)</title><rect x="72.8" y="997" width="0.3" height="15.0" fill="rgb(250,226,34)" rx="2" ry="2" />
<text  x="75.76" y="1007.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (44 samples, 0.22%)</title><rect x="258.8" y="645" width="2.6" height="15.0" fill="rgb(232,202,51)" rx="2" ry="2" />
<text  x="261.83" y="655.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (58 samples, 0.29%)</title><rect x="141.1" y="789" width="3.4" height="15.0" fill="rgb(218,110,6)" rx="2" ry="2" />
<text  x="144.05" y="799.5" ></text>
</g>
<g >
<title>free_unref_page_list (2 samples, 0.01%)</title><rect x="258.1" y="101" width="0.1" height="15.0" fill="rgb(206,171,16)" rx="2" ry="2" />
<text  x="261.11" y="111.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (36 samples, 0.18%)</title><rect x="159.6" y="613" width="2.2" height="15.0" fill="rgb(217,57,20)" rx="2" ry="2" />
<text  x="162.63" y="623.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Transition*, false&gt;::_M_head (4 samples, 0.02%)</title><rect x="64.1" y="997" width="0.3" height="15.0" fill="rgb(230,117,24)" rx="2" ry="2" />
<text  x="67.12" y="1007.5" ></text>
</g>
<g >
<title>pipe_write (4 samples, 0.02%)</title><rect x="21.2" y="901" width="0.2" height="15.0" fill="rgb(252,150,15)" rx="2" ry="2" />
<text  x="24.19" y="911.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_M_begin (4 samples, 0.02%)</title><rect x="66.7" y="997" width="0.3" height="15.0" fill="rgb(220,0,32)" rx="2" ry="2" />
<text  x="69.74" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator++ (32 samples, 0.16%)</title><rect x="634.9" y="677" width="1.9" height="15.0" fill="rgb(237,80,3)" rx="2" ry="2" />
<text  x="637.89" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_value (2 samples, 0.01%)</title><rect x="125.1" y="997" width="0.1" height="15.0" fill="rgb(211,17,47)" rx="2" ry="2" />
<text  x="128.09" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.03%)</title><rect x="776.8" y="357" width="0.3" height="15.0" fill="rgb(247,59,5)" rx="2" ry="2" />
<text  x="779.84" y="367.5" ></text>
</g>
<g >
<title>Bitmap::width (2 samples, 0.01%)</title><rect x="868.5" y="501" width="0.1" height="15.0" fill="rgb(237,147,7)" rx="2" ry="2" />
<text  x="871.47" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;Bitmap&gt;::~allocator (2 samples, 0.01%)</title><rect x="840.0" y="469" width="0.1" height="15.0" fill="rgb(238,213,2)" rx="2" ry="2" />
<text  x="843.01" y="479.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="325.2" y="373" width="0.2" height="15.0" fill="rgb(231,84,32)" rx="2" ry="2" />
<text  x="328.15" y="383.5" ></text>
</g>
<g >
<title>Color::Color (5 samples, 0.03%)</title><rect x="25.1" y="997" width="0.3" height="15.0" fill="rgb(234,21,44)" rx="2" ry="2" />
<text  x="28.06" y="1007.5" ></text>
</g>
<g >
<title>Game_Map::GetNeedRefresh (12 samples, 0.06%)</title><rect x="1115.3" y="805" width="0.7" height="15.0" fill="rgb(240,39,11)" rx="2" ry="2" />
<text  x="1118.28" y="815.5" ></text>
</g>
<g >
<title>Bitmap::Init (43 samples, 0.22%)</title><rect x="305.7" y="341" width="2.6" height="15.0" fill="rgb(210,157,30)" rx="2" ry="2" />
<text  x="308.74" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (2 samples, 0.01%)</title><rect x="601.1" y="757" width="0.2" height="15.0" fill="rgb(212,72,39)" rx="2" ry="2" />
<text  x="604.13" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (14 samples, 0.07%)</title><rect x="497.8" y="709" width="0.8" height="15.0" fill="rgb(243,226,42)" rx="2" ry="2" />
<text  x="500.77" y="719.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (2 samples, 0.01%)</title><rect x="328.5" y="997" width="0.1" height="15.0" fill="rgb(214,223,31)" rx="2" ry="2" />
<text  x="331.49" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator (2 samples, 0.01%)</title><rect x="68.9" y="997" width="0.1" height="15.0" fill="rgb(243,20,49)" rx="2" ry="2" />
<text  x="71.89" y="1007.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_not_empty_function&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt; (3 samples, 0.02%)</title><rect x="62.0" y="997" width="0.2" height="15.0" fill="rgb(228,175,42)" rx="2" ry="2" />
<text  x="64.98" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_ptr (6 samples, 0.03%)</title><rect x="651.0" y="613" width="0.4" height="15.0" fill="rgb(242,171,4)" rx="2" ry="2" />
<text  x="654.03" y="623.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (166 samples, 0.84%)</title><rect x="131.0" y="837" width="9.9" height="15.0" fill="rgb(230,208,36)" rx="2" ry="2" />
<text  x="134.05" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt;::~new_allocator (3 samples, 0.02%)</title><rect x="55.5" y="997" width="0.2" height="15.0" fill="rgb(218,228,42)" rx="2" ry="2" />
<text  x="58.55" y="1007.5" ></text>
</g>
<g >
<title>Cache::Picture (1,068 samples, 5.39%)</title><rect x="731.2" y="517" width="63.6" height="15.0" fill="rgb(211,79,17)" rx="2" ry="2" />
<text  x="734.23" y="527.5" >Cache:..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.03%)</title><rect x="241.1" y="325" width="0.3" height="15.0" fill="rgb(240,105,52)" rx="2" ry="2" />
<text  x="244.14" y="335.5" ></text>
</g>
<g >
<title>Sprite::Sprite (139 samples, 0.70%)</title><rect x="870.2" y="517" width="8.3" height="15.0" fill="rgb(217,205,31)" rx="2" ry="2" />
<text  x="873.20" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string@plt (2 samples, 0.01%)</title><rect x="983.6" y="725" width="0.1" height="15.0" fill="rgb(236,32,22)" rx="2" ry="2" />
<text  x="986.63" y="735.5" ></text>
</g>
<g >
<title>operator delete (43 samples, 0.22%)</title><rect x="238.9" y="357" width="2.5" height="15.0" fill="rgb(234,180,54)" rx="2" ry="2" />
<text  x="241.88" y="367.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (149 samples, 0.75%)</title><rect x="161.8" y="581" width="8.8" height="15.0" fill="rgb(250,212,23)" rx="2" ry="2" />
<text  x="164.77" y="591.5" ></text>
</g>
<g >
<title>Rect::Rect (11 samples, 0.06%)</title><rect x="867.8" y="485" width="0.6" height="15.0" fill="rgb(247,10,47)" rx="2" ry="2" />
<text  x="870.76" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;Drawable* const&gt; (8 samples, 0.04%)</title><rect x="893.8" y="421" width="0.5" height="15.0" fill="rgb(216,76,39)" rx="2" ry="2" />
<text  x="896.78" y="431.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (12 samples, 0.06%)</title><rect x="285.9" y="533" width="0.7" height="15.0" fill="rgb(251,227,43)" rx="2" ry="2" />
<text  x="288.86" y="543.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::~_Head_base (62 samples, 0.31%)</title><rect x="155.6" y="581" width="3.7" height="15.0" fill="rgb(218,111,25)" rx="2" ry="2" />
<text  x="158.58" y="591.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (102 samples, 0.51%)</title><rect x="144.7" y="869" width="6.1" height="15.0" fill="rgb(225,159,28)" rx="2" ry="2" />
<text  x="147.68" y="879.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="93.9" y="997" width="0.1" height="15.0" fill="rgb(208,209,17)" rx="2" ry="2" />
<text  x="96.89" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (5 samples, 0.03%)</title><rect x="1113.4" y="789" width="0.3" height="15.0" fill="rgb(252,35,0)" rx="2" ry="2" />
<text  x="1116.43" y="799.5" ></text>
</g>
<g >
<title>Opacity::IsTransparent (5 samples, 0.03%)</title><rect x="802.1" y="485" width="0.3" height="15.0" fill="rgb(213,24,30)" rx="2" ry="2" />
<text  x="805.08" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_key (26 samples, 0.13%)</title><rect x="649.9" y="661" width="1.5" height="15.0" fill="rgb(241,91,18)" rx="2" ry="2" />
<text  x="652.90" y="671.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (3 samples, 0.02%)</title><rect x="682.1" y="597" width="0.2" height="15.0" fill="rgb(216,32,32)" rx="2" ry="2" />
<text  x="685.11" y="607.5" ></text>
</g>
<g >
<title>std::move&lt;void (*&amp;)(std::_Any_data const&amp;, FileRequestResult*&amp;&amp;)&gt; (3 samples, 0.02%)</title><rect x="685.2" y="565" width="0.2" height="15.0" fill="rgb(222,19,43)" rx="2" ry="2" />
<text  x="688.20" y="575.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (49 samples, 0.25%)</title><rect x="261.4" y="565" width="3.0" height="15.0" fill="rgb(227,17,7)" rx="2" ry="2" />
<text  x="264.45" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (3 samples, 0.02%)</title><rect x="15.3" y="1013" width="0.2" height="15.0" fill="rgb(241,107,5)" rx="2" ry="2" />
<text  x="18.30" y="1023.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (166 samples, 0.84%)</title><rect x="131.0" y="901" width="9.9" height="15.0" fill="rgb(227,86,42)" rx="2" ry="2" />
<text  x="134.05" y="911.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.05%)</title><rect x="155.0" y="549" width="0.6" height="15.0" fill="rgb(207,146,25)" rx="2" ry="2" />
<text  x="158.04" y="559.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (29 samples, 0.15%)</title><rect x="286.6" y="597" width="1.7" height="15.0" fill="rgb(205,24,52)" rx="2" ry="2" />
<text  x="289.57" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (11 samples, 0.06%)</title><rect x="627.0" y="677" width="0.7" height="15.0" fill="rgb(212,156,7)" rx="2" ry="2" />
<text  x="630.03" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (18 samples, 0.09%)</title><rect x="143.4" y="549" width="1.1" height="15.0" fill="rgb(249,99,38)" rx="2" ry="2" />
<text  x="146.43" y="559.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (3 samples, 0.02%)</title><rect x="794.6" y="469" width="0.2" height="15.0" fill="rgb(224,120,26)" rx="2" ry="2" />
<text  x="797.64" y="479.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (32 samples, 0.16%)</title><rect x="283.7" y="533" width="1.9" height="15.0" fill="rgb(237,38,8)" rx="2" ry="2" />
<text  x="286.71" y="543.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (58 samples, 0.29%)</title><rect x="141.1" y="949" width="3.4" height="15.0" fill="rgb(211,196,44)" rx="2" ry="2" />
<text  x="144.05" y="959.5" ></text>
</g>
<g >
<title>__x64_sys_write (6 samples, 0.03%)</title><rect x="21.1" y="981" width="0.3" height="15.0" fill="rgb(246,229,48)" rx="2" ry="2" />
<text  x="24.07" y="991.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (4 samples, 0.02%)</title><rect x="331.0" y="757" width="0.3" height="15.0" fill="rgb(238,226,39)" rx="2" ry="2" />
<text  x="334.05" y="767.5" ></text>
</g>
<g >
<title>__tls_get_addr (4 samples, 0.02%)</title><rect x="824.7" y="437" width="0.2" height="15.0" fill="rgb(227,105,49)" rx="2" ry="2" />
<text  x="827.71" y="447.5" ></text>
</g>
<g >
<title>std::tuple&lt;Game_Picture*, std::_Placeholder&lt;1&gt; &gt;::tuple&lt;Game_Picture*&amp;, std::_Placeholder&lt;1&gt; const&amp;, true&gt; (3 samples, 0.02%)</title><rect x="107.9" y="997" width="0.2" height="15.0" fill="rgb(219,14,19)" rx="2" ry="2" />
<text  x="110.95" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::operator[] (19 samples, 0.10%)</title><rect x="1139.6" y="805" width="1.1" height="15.0" fill="rgb(236,28,32)" rx="2" ry="2" />
<text  x="1142.57" y="815.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (7 samples, 0.04%)</title><rect x="99.5" y="997" width="0.4" height="15.0" fill="rgb(236,45,6)" rx="2" ry="2" />
<text  x="102.49" y="1007.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (4 samples, 0.02%)</title><rect x="326.2" y="677" width="0.3" height="15.0" fill="rgb(249,51,32)" rx="2" ry="2" />
<text  x="329.23" y="687.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (4 samples, 0.02%)</title><rect x="31.2" y="997" width="0.2" height="15.0" fill="rgb(217,53,43)" rx="2" ry="2" />
<text  x="34.20" y="1007.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator bool (8 samples, 0.04%)</title><rect x="695.1" y="693" width="0.5" height="15.0" fill="rgb(229,24,5)" rx="2" ry="2" />
<text  x="698.09" y="703.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::~__allocated_ptr (3 samples, 0.02%)</title><rect x="326.2" y="389" width="0.2" height="15.0" fill="rgb(236,45,32)" rx="2" ry="2" />
<text  x="329.23" y="399.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (28 samples, 0.14%)</title><rect x="235.1" y="453" width="1.7" height="15.0" fill="rgb(254,123,36)" rx="2" ry="2" />
<text  x="238.13" y="463.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (4,057 samples, 20.47%)</title><rect x="726.7" y="661" width="241.6" height="15.0" fill="rgb(227,159,53)" rx="2" ry="2" />
<text  x="729.71" y="671.5" >std::_Function_handler&lt;void (Fil..</text>
</g>
<g >
<title>__GI___pthread_getspecific (2 samples, 0.01%)</title><rect x="241.3" y="309" width="0.1" height="15.0" fill="rgb(254,227,4)" rx="2" ry="2" />
<text  x="244.32" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt;::begin (5 samples, 0.03%)</title><rect x="946.6" y="421" width="0.3" height="15.0" fill="rgb(253,173,43)" rx="2" ry="2" />
<text  x="949.59" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (100 samples, 0.50%)</title><rect x="161.8" y="517" width="5.9" height="15.0" fill="rgb(225,218,14)" rx="2" ry="2" />
<text  x="164.77" y="527.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::get (2 samples, 0.01%)</title><rect x="82.7" y="997" width="0.1" height="15.0" fill="rgb(236,220,37)" rx="2" ry="2" />
<text  x="85.70" y="1007.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (58 samples, 0.29%)</title><rect x="141.1" y="645" width="3.4" height="15.0" fill="rgb(245,94,3)" rx="2" ry="2" />
<text  x="144.05" y="655.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (2 samples, 0.01%)</title><rect x="710.3" y="629" width="0.2" height="15.0" fill="rgb(208,96,17)" rx="2" ry="2" />
<text  x="713.33" y="639.5" ></text>
</g>
<g >
<title>native_write_msr (21 samples, 0.11%)</title><rect x="1181.1" y="597" width="1.3" height="15.0" fill="rgb(248,65,41)" rx="2" ry="2" />
<text  x="1184.13" y="607.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::end (4 samples, 0.02%)</title><rect x="751.5" y="485" width="0.3" height="15.0" fill="rgb(245,13,19)" rx="2" ry="2" />
<text  x="754.53" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (434 samples, 2.19%)</title><rect x="762.7" y="485" width="25.8" height="15.0" fill="rgb(205,46,20)" rx="2" ry="2" />
<text  x="765.67" y="495.5" >s..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (72 samples, 0.36%)</title><rect x="620.3" y="661" width="4.3" height="15.0" fill="rgb(225,129,20)" rx="2" ry="2" />
<text  x="623.30" y="671.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (44 samples, 0.22%)</title><rect x="258.8" y="661" width="2.6" height="15.0" fill="rgb(231,94,7)" rx="2" ry="2" />
<text  x="261.83" y="671.5" ></text>
</g>
<g >
<title>pixman_region32_extents (6 samples, 0.03%)</title><rect x="825.1" y="469" width="0.4" height="15.0" fill="rgb(206,217,33)" rx="2" ry="2" />
<text  x="828.13" y="479.5" ></text>
</g>
<g >
<title>Bitmap::Create (49 samples, 0.25%)</title><rect x="264.4" y="597" width="2.9" height="15.0" fill="rgb(247,45,36)" rx="2" ry="2" />
<text  x="267.36" y="607.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (20 samples, 0.10%)</title><rect x="1030.8" y="677" width="1.2" height="15.0" fill="rgb(234,150,29)" rx="2" ry="2" />
<text  x="1033.79" y="687.5" ></text>
</g>
<g >
<title>Graphics::UpdateZCallback (21 samples, 0.11%)</title><rect x="854.7" y="485" width="1.2" height="15.0" fill="rgb(223,192,25)" rx="2" ry="2" />
<text  x="857.66" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::operator== (5 samples, 0.03%)</title><rect x="246.6" y="389" width="0.3" height="15.0" fill="rgb(212,142,39)" rx="2" ry="2" />
<text  x="249.56" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (69 samples, 0.35%)</title><rect x="721.0" y="661" width="4.1" height="15.0" fill="rgb(235,212,22)" rx="2" ry="2" />
<text  x="723.99" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (3 samples, 0.02%)</title><rect x="598.0" y="757" width="0.2" height="15.0" fill="rgb(222,112,5)" rx="2" ry="2" />
<text  x="601.04" y="767.5" ></text>
</g>
<g >
<title>Cache::Picture (8 samples, 0.04%)</title><rect x="244.7" y="597" width="0.4" height="15.0" fill="rgb(205,162,49)" rx="2" ry="2" />
<text  x="247.65" y="607.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (1,304 samples, 6.58%)</title><rect x="159.3" y="997" width="77.6" height="15.0" fill="rgb(245,187,9)" rx="2" ry="2" />
<text  x="162.27" y="1007.5" >Game_Map..</text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (7 samples, 0.04%)</title><rect x="869.7" y="421" width="0.4" height="15.0" fill="rgb(214,167,9)" rx="2" ry="2" />
<text  x="872.66" y="431.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (110 samples, 0.56%)</title><rect x="751.8" y="485" width="6.5" height="15.0" fill="rgb(213,57,39)" rx="2" ry="2" />
<text  x="754.77" y="495.5" ></text>
</g>
<g >
<title>Scene_Map::Update (101 samples, 0.51%)</title><rect x="261.4" y="997" width="6.1" height="15.0" fill="rgb(229,124,27)" rx="2" ry="2" />
<text  x="264.45" y="1007.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.02%)</title><rect x="1182.6" y="693" width="0.2" height="15.0" fill="rgb(236,53,38)" rx="2" ry="2" />
<text  x="1185.62" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (58 samples, 0.29%)</title><rect x="305.7" y="373" width="3.5" height="15.0" fill="rgb(240,68,8)" rx="2" ry="2" />
<text  x="308.74" y="383.5" ></text>
</g>
<g >
<title>Sprite::SetY (2 samples, 0.01%)</title><rect x="1168.8" y="805" width="0.1" height="15.0" fill="rgb(224,213,30)" rx="2" ry="2" />
<text  x="1171.80" y="815.5" ></text>
</g>
<g >
<title>_XEventsQueued (5 samples, 0.03%)</title><rect x="1180.2" y="789" width="0.3" height="15.0" fill="rgb(240,103,45)" rx="2" ry="2" />
<text  x="1183.18" y="799.5" ></text>
</g>
<g >
<title>Scene::MainFunction (20 samples, 0.10%)</title><rect x="237.0" y="981" width="1.2" height="15.0" fill="rgb(210,70,14)" rx="2" ry="2" />
<text  x="239.97" y="991.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Sprite*, false&gt;::_M_head (3 samples, 0.02%)</title><rect x="1009.5" y="629" width="0.1" height="15.0" fill="rgb(206,75,47)" rx="2" ry="2" />
<text  x="1012.47" y="639.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (3 samples, 0.02%)</title><rect x="267.3" y="405" width="0.2" height="15.0" fill="rgb(247,33,4)" rx="2" ry="2" />
<text  x="270.28" y="415.5" ></text>
</g>
<g >
<title>Rect::Rect (8 samples, 0.04%)</title><rect x="35.1" y="997" width="0.4" height="15.0" fill="rgb(251,53,51)" rx="2" ry="2" />
<text  x="38.07" y="1007.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (9 samples, 0.05%)</title><rect x="788.5" y="501" width="0.5" height="15.0" fill="rgb(221,58,32)" rx="2" ry="2" />
<text  x="791.51" y="511.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (20 samples, 0.10%)</title><rect x="237.0" y="933" width="1.2" height="15.0" fill="rgb(212,68,18)" rx="2" ry="2" />
<text  x="239.97" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (4 samples, 0.02%)</title><rect x="442.0" y="773" width="0.2" height="15.0" fill="rgb(234,183,21)" rx="2" ry="2" />
<text  x="444.98" y="783.5" ></text>
</g>
<g >
<title>vfs_read (5 samples, 0.03%)</title><rect x="20.8" y="949" width="0.3" height="15.0" fill="rgb(240,204,16)" rx="2" ry="2" />
<text  x="23.78" y="959.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="324.3" y="277" width="0.2" height="15.0" fill="rgb(207,3,16)" rx="2" ry="2" />
<text  x="327.26" y="287.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&amp;&gt; (6 samples, 0.03%)</title><rect x="94.7" y="997" width="0.4" height="15.0" fill="rgb(240,6,39)" rx="2" ry="2" />
<text  x="97.73" y="1007.5" ></text>
</g>
<g >
<title>Scene_Map::Update (515 samples, 2.60%)</title><rect x="294.8" y="901" width="30.7" height="15.0" fill="rgb(235,178,9)" rx="2" ry="2" />
<text  x="297.79" y="911.5" >Sc..</text>
</g>
<g >
<title>std::get&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (5 samples, 0.03%)</title><rect x="98.3" y="997" width="0.3" height="15.0" fill="rgb(210,186,27)" rx="2" ry="2" />
<text  x="101.30" y="1007.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (5 samples, 0.03%)</title><rect x="87.5" y="997" width="0.3" height="15.0" fill="rgb(247,205,43)" rx="2" ry="2" />
<text  x="90.52" y="1007.5" ></text>
</g>
<g >
<title>__libc_recvmsg (3 samples, 0.02%)</title><rect x="1182.6" y="725" width="0.2" height="15.0" fill="rgb(215,0,37)" rx="2" ry="2" />
<text  x="1185.62" y="735.5" ></text>
</g>
<g >
<title>Scene::MainFunction (44 samples, 0.22%)</title><rect x="258.8" y="997" width="2.6" height="15.0" fill="rgb(214,46,25)" rx="2" ry="2" />
<text  x="261.83" y="1007.5" ></text>
</g>
<g >
<title>std::forward&lt;std::_Placeholder&lt;1&gt; &gt; (2 samples, 0.01%)</title><rect x="702.1" y="597" width="0.1" height="15.0" fill="rgb(254,172,16)" rx="2" ry="2" />
<text  x="705.05" y="607.5" ></text>
</g>
<g >
<title>Sdl2Ui::GetTicks (265 samples, 1.34%)</title><rect x="269.8" y="613" width="15.8" height="15.0" fill="rgb(207,0,0)" rx="2" ry="2" />
<text  x="272.84" y="623.5" ></text>
</g>
<g >
<title>std::map&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, (anonymous namespace)::CacheItem, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (2 samples, 0.01%)</title><rect x="101.9" y="997" width="0.2" height="15.0" fill="rgb(224,6,42)" rx="2" ry="2" />
<text  x="104.93" y="1007.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::get (3 samples, 0.02%)</title><rect x="679.7" y="613" width="0.1" height="15.0" fill="rgb(209,193,43)" rx="2" ry="2" />
<text  x="682.67" y="623.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (3 samples, 0.02%)</title><rect x="1148.1" y="757" width="0.2" height="15.0" fill="rgb(210,104,13)" rx="2" ry="2" />
<text  x="1151.14" y="767.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (2 samples, 0.01%)</title><rect x="64.7" y="997" width="0.1" height="15.0" fill="rgb(251,127,34)" rx="2" ry="2" />
<text  x="67.72" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (11 samples, 0.06%)</title><rect x="237.0" y="533" width="0.6" height="15.0" fill="rgb(252,127,48)" rx="2" ry="2" />
<text  x="239.97" y="543.5" ></text>
</g>
<g >
<title>std::allocator&lt;Bitmap&gt;::~allocator (6 samples, 0.03%)</title><rect x="90.5" y="997" width="0.4" height="15.0" fill="rgb(220,26,47)" rx="2" ry="2" />
<text  x="93.50" y="1007.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="646.7" y="565" width="0.2" height="15.0" fill="rgb(249,67,29)" rx="2" ry="2" />
<text  x="649.74" y="575.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::get (6 samples, 0.03%)</title><rect x="1170.4" y="773" width="0.4" height="15.0" fill="rgb(248,142,38)" rx="2" ry="2" />
<text  x="1173.41" y="783.5" ></text>
</g>
<g >
<title>__do_page_fault (4 samples, 0.02%)</title><rect x="138.3" y="437" width="0.3" height="15.0" fill="rgb(212,25,31)" rx="2" ry="2" />
<text  x="141.31" y="447.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (12 samples, 0.06%)</title><rect x="1180.2" y="821" width="0.7" height="15.0" fill="rgb(208,38,50)" rx="2" ry="2" />
<text  x="1183.18" y="831.5" ></text>
</g>
<g >
<title>__libc_recvmsg (3 samples, 0.02%)</title><rect x="1180.2" y="693" width="0.2" height="15.0" fill="rgb(235,200,41)" rx="2" ry="2" />
<text  x="1183.24" y="703.5" ></text>
</g>
<g >
<title>Sprite::~Sprite (4 samples, 0.02%)</title><rect x="326.2" y="501" width="0.3" height="15.0" fill="rgb(227,28,11)" rx="2" ry="2" />
<text  x="329.23" y="511.5" ></text>
</g>
<g >
<title>do_wp_page (3 samples, 0.02%)</title><rect x="138.4" y="389" width="0.2" height="15.0" fill="rgb(229,144,44)" rx="2" ry="2" />
<text  x="141.37" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (42 samples, 0.21%)</title><rect x="378.0" y="773" width="2.5" height="15.0" fill="rgb(251,100,42)" rx="2" ry="2" />
<text  x="381.03" y="783.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::~allocator (2 samples, 0.01%)</title><rect x="680.6" y="629" width="0.1" height="15.0" fill="rgb(249,66,6)" rx="2" ry="2" />
<text  x="683.56" y="639.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (26 samples, 0.13%)</title><rect x="677.8" y="517" width="1.6" height="15.0" fill="rgb(235,41,46)" rx="2" ry="2" />
<text  x="680.82" y="527.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (23 samples, 0.12%)</title><rect x="792.4" y="453" width="1.3" height="15.0" fill="rgb(222,206,53)" rx="2" ry="2" />
<text  x="795.38" y="463.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (78 samples, 0.39%)</title><rect x="171.1" y="597" width="4.7" height="15.0" fill="rgb(219,100,9)" rx="2" ry="2" />
<text  x="174.12" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (9 samples, 0.05%)</title><rect x="851.7" y="421" width="0.5" height="15.0" fill="rgb(238,70,6)" rx="2" ry="2" />
<text  x="854.68" y="431.5" ></text>
</g>
<g >
<title>Sprite::~Sprite (5 samples, 0.03%)</title><rect x="37.3" y="997" width="0.3" height="15.0" fill="rgb(205,39,40)" rx="2" ry="2" />
<text  x="40.27" y="1007.5" ></text>
</g>
<g >
<title>operator new (75 samples, 0.38%)</title><rect x="690.3" y="661" width="4.5" height="15.0" fill="rgb(249,38,19)" rx="2" ry="2" />
<text  x="693.32" y="671.5" ></text>
</g>
<g >
<title>operator!= (9 samples, 0.05%)</title><rect x="1005.1" y="693" width="0.6" height="15.0" fill="rgb(209,136,31)" rx="2" ry="2" />
<text  x="1008.12" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.05%)</title><rect x="138.6" y="485" width="0.5" height="15.0" fill="rgb(221,213,39)" rx="2" ry="2" />
<text  x="141.55" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (6 samples, 0.03%)</title><rect x="441.6" y="773" width="0.4" height="15.0" fill="rgb(205,143,53)" rx="2" ry="2" />
<text  x="444.62" y="783.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (9 samples, 0.05%)</title><rect x="237.6" y="469" width="0.6" height="15.0" fill="rgb(252,47,53)" rx="2" ry="2" />
<text  x="240.63" y="479.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (11,301 samples, 57.02%)</title><rect x="442.4" y="805" width="672.9" height="15.0" fill="rgb(236,176,47)" rx="2" ry="2" />
<text  x="445.39" y="815.5" >Game_Interpreter_Map::ExecuteCommand</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_value (2 samples, 0.01%)</title><rect x="658.6" y="661" width="0.1" height="15.0" fill="rgb(224,224,38)" rx="2" ry="2" />
<text  x="661.59" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (26 samples, 0.13%)</title><rect x="259.9" y="341" width="1.5" height="15.0" fill="rgb(241,193,18)" rx="2" ry="2" />
<text  x="262.90" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (61 samples, 0.31%)</title><rect x="481.7" y="741" width="3.6" height="15.0" fill="rgb(213,94,24)" rx="2" ry="2" />
<text  x="484.69" y="751.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::_Placeholder&lt;1&gt;, true&gt;::_Head_base&lt;std::_Placeholder&lt;1&gt; &gt; (3 samples, 0.02%)</title><rect x="64.5" y="997" width="0.2" height="15.0" fill="rgb(254,53,6)" rx="2" ry="2" />
<text  x="67.54" y="1007.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.06%)</title><rect x="135.9" y="421" width="0.6" height="15.0" fill="rgb(219,209,30)" rx="2" ry="2" />
<text  x="138.87" y="431.5" ></text>
</g>
<g >
<title>Sprite::~Sprite (1,232 samples, 6.22%)</title><rect x="890.9" y="485" width="73.4" height="15.0" fill="rgb(217,33,34)" rx="2" ry="2" />
<text  x="893.92" y="495.5" >Sprite::..</text>
</g>
<g >
<title>FileFinder::MakePath (6 samples, 0.03%)</title><rect x="159.3" y="629" width="0.3" height="15.0" fill="rgb(252,212,42)" rx="2" ry="2" />
<text  x="162.27" y="639.5" ></text>
</g>
<g >
<title>pixman_image_get_data@plt (2 samples, 0.01%)</title><rect x="826.7" y="469" width="0.2" height="15.0" fill="rgb(221,173,23)" rx="2" ry="2" />
<text  x="829.74" y="479.5" ></text>
</g>
<g >
<title>Sprite::~Sprite (273 samples, 1.38%)</title><rect x="309.2" y="485" width="16.3" height="15.0" fill="rgb(213,186,9)" rx="2" ry="2" />
<text  x="312.20" y="495.5" ></text>
</g>
<g >
<title>Tone::Tone (13 samples, 0.07%)</title><rect x="856.0" y="501" width="0.8" height="15.0" fill="rgb(239,209,27)" rx="2" ry="2" />
<text  x="859.03" y="511.5" ></text>
</g>
<g >
<title>__interceptor_free (3 samples, 0.02%)</title><rect x="267.3" y="389" width="0.2" height="15.0" fill="rgb(251,96,3)" rx="2" ry="2" />
<text  x="270.28" y="399.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (13 samples, 0.07%)</title><rect x="302.4" y="373" width="0.7" height="15.0" fill="rgb(217,95,32)" rx="2" ry="2" />
<text  x="305.35" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (42 samples, 0.21%)</title><rect x="576.4" y="741" width="2.5" height="15.0" fill="rgb(244,34,46)" rx="2" ry="2" />
<text  x="579.42" y="751.5" ></text>
</g>
<g >
<title>Sprite::SetZoomY (4 samples, 0.02%)</title><rect x="1169.3" y="805" width="0.3" height="15.0" fill="rgb(219,34,18)" rx="2" ry="2" />
<text  x="1172.34" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare@plt (3 samples, 0.02%)</title><rect x="783.4" y="389" width="0.2" height="15.0" fill="rgb(208,153,26)" rx="2" ry="2" />
<text  x="786.45" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_value (10 samples, 0.05%)</title><rect x="650.8" y="645" width="0.6" height="15.0" fill="rgb(207,44,50)" rx="2" ry="2" />
<text  x="653.79" y="655.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::~_Sp_counted_base (7 samples, 0.04%)</title><rect x="70.7" y="997" width="0.4" height="15.0" fill="rgb(205,93,14)" rx="2" ry="2" />
<text  x="73.67" y="1007.5" ></text>
</g>
<g >
<title>Player::IsRPG2k3 (6 samples, 0.03%)</title><rect x="582.7" y="757" width="0.3" height="15.0" fill="rgb(241,16,38)" rx="2" ry="2" />
<text  x="585.67" y="767.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (12 samples, 0.06%)</title><rect x="824.0" y="437" width="0.7" height="15.0" fill="rgb(221,19,6)" rx="2" ry="2" />
<text  x="827.00" y="447.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (29 samples, 0.15%)</title><rect x="286.6" y="581" width="1.7" height="15.0" fill="rgb(243,59,28)" rx="2" ry="2" />
<text  x="289.57" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.05%)</title><rect x="237.6" y="293" width="0.6" height="15.0" fill="rgb(211,160,9)" rx="2" ry="2" />
<text  x="240.63" y="303.5" ></text>
</g>
<g >
<title>Game_Map::IsAnyEventStarting (17 samples, 0.09%)</title><rect x="1151.1" y="805" width="1.0" height="15.0" fill="rgb(227,66,48)" rx="2" ry="2" />
<text  x="1154.06" y="815.5" ></text>
</g>
<g >
<title>operator delete (48 samples, 0.24%)</title><rect x="1017.8" y="741" width="2.9" height="15.0" fill="rgb(229,229,51)" rx="2" ry="2" />
<text  x="1020.81" y="751.5" ></text>
</g>
<g >
<title>Bitmap::~Bitmap (185 samples, 0.93%)</title><rect x="247.8" y="421" width="11.0" height="15.0" fill="rgb(234,73,43)" rx="2" ry="2" />
<text  x="250.81" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::reset (9 samples, 0.05%)</title><rect x="237.6" y="565" width="0.6" height="15.0" fill="rgb(222,18,10)" rx="2" ry="2" />
<text  x="240.63" y="575.5" ></text>
</g>
<g >
<title>schedule (61 samples, 0.31%)</title><rect x="17.0" y="901" width="3.6" height="15.0" fill="rgb(228,169,8)" rx="2" ry="2" />
<text  x="19.97" y="911.5" ></text>
</g>
<g >
<title>Bitmap::height (19 samples, 0.10%)</title><rect x="866.2" y="485" width="1.1" height="15.0" fill="rgb(226,50,44)" rx="2" ry="2" />
<text  x="869.21" y="495.5" ></text>
</g>
<g >
<title>Game_Map::SetNeedRefresh (3 samples, 0.02%)</title><rect x="536.3" y="757" width="0.2" height="15.0" fill="rgb(235,28,28)" rx="2" ry="2" />
<text  x="539.29" y="767.5" ></text>
</g>
<g >
<title>Drawable::Drawable (4 samples, 0.02%)</title><rect x="25.6" y="997" width="0.2" height="15.0" fill="rgb(246,139,15)" rx="2" ry="2" />
<text  x="28.60" y="1007.5" ></text>
</g>
<g >
<title>Graphics::RemoveDrawable (963 samples, 4.86%)</title><rect x="179.6" y="597" width="57.3" height="15.0" fill="rgb(226,97,37)" rx="2" ry="2" />
<text  x="182.58" y="607.5" >Graphi..</text>
</g>
<g >
<title>__GI_madvise (2 samples, 0.01%)</title><rect x="646.7" y="597" width="0.2" height="15.0" fill="rgb(235,91,4)" rx="2" ry="2" />
<text  x="649.74" y="607.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (3 samples, 0.02%)</title><rect x="794.6" y="485" width="0.2" height="15.0" fill="rgb(228,58,20)" rx="2" ry="2" />
<text  x="797.64" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.05%)</title><rect x="242.1" y="261" width="0.6" height="15.0" fill="rgb(238,1,5)" rx="2" ry="2" />
<text  x="245.09" y="271.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (5 samples, 0.03%)</title><rect x="367.7" y="805" width="0.3" height="15.0" fill="rgb(244,28,53)" rx="2" ry="2" />
<text  x="370.67" y="815.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (21 samples, 0.11%)</title><rect x="304.0" y="437" width="1.3" height="15.0" fill="rgb(211,116,16)" rx="2" ry="2" />
<text  x="307.02" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (5 samples, 0.03%)</title><rect x="402.3" y="789" width="0.3" height="15.0" fill="rgb(246,32,30)" rx="2" ry="2" />
<text  x="405.26" y="799.5" ></text>
</g>
<g >
<title>Bitmap::pixels (2 samples, 0.01%)</title><rect x="841.5" y="501" width="0.1" height="15.0" fill="rgb(238,145,53)" rx="2" ry="2" />
<text  x="844.50" y="511.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (24 samples, 0.12%)</title><rect x="693.2" y="597" width="1.5" height="15.0" fill="rgb(205,115,11)" rx="2" ry="2" />
<text  x="696.24" y="607.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (2 samples, 0.01%)</title><rect x="95.9" y="997" width="0.1" height="15.0" fill="rgb(208,227,15)" rx="2" ry="2" />
<text  x="98.92" y="1007.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (3 samples, 0.02%)</title><rect x="679.4" y="517" width="0.1" height="15.0" fill="rgb(230,46,3)" rx="2" ry="2" />
<text  x="682.37" y="527.5" ></text>
</g>
<g >
<title>_start (14,314 samples, 72.23%)</title><rect x="330.9" y="1013" width="852.3" height="15.0" fill="rgb(239,66,17)" rx="2" ry="2" />
<text  x="333.93" y="1023.5" >_start</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (22 samples, 0.11%)</title><rect x="1107.6" y="741" width="1.3" height="15.0" fill="rgb(218,23,44)" rx="2" ry="2" />
<text  x="1110.59" y="751.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="144.5" y="981" width="0.1" height="15.0" fill="rgb(231,44,10)" rx="2" ry="2" />
<text  x="147.50" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (3 samples, 0.02%)</title><rect x="52.2" y="997" width="0.1" height="15.0" fill="rgb(229,29,30)" rx="2" ry="2" />
<text  x="55.16" y="1007.5" ></text>
</g>
<g >
<title>Game_Switches_Class::Get (2 samples, 0.01%)</title><rect x="32.7" y="997" width="0.2" height="15.0" fill="rgb(206,149,31)" rx="2" ry="2" />
<text  x="35.74" y="1007.5" ></text>
</g>
<g >
<title>Color::Color (18 samples, 0.09%)</title><rect x="872.6" y="501" width="1.1" height="15.0" fill="rgb(230,3,48)" rx="2" ry="2" />
<text  x="875.64" y="511.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.04%)</title><rect x="238.2" y="517" width="0.4" height="15.0" fill="rgb(228,226,5)" rx="2" ry="2" />
<text  x="241.16" y="527.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::~__allocated_ptr (2 samples, 0.01%)</title><rect x="76.2" y="997" width="0.1" height="15.0" fill="rgb(227,222,26)" rx="2" ry="2" />
<text  x="79.21" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (4 samples, 0.02%)</title><rect x="441.1" y="789" width="0.3" height="15.0" fill="rgb(227,182,54)" rx="2" ry="2" />
<text  x="444.14" y="799.5" ></text>
</g>
<g >
<title>__fget (3 samples, 0.02%)</title><rect x="16.4" y="917" width="0.2" height="15.0" fill="rgb(205,140,7)" rx="2" ry="2" />
<text  x="19.43" y="927.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (185 samples, 0.93%)</title><rect x="247.8" y="517" width="11.0" height="15.0" fill="rgb(238,6,43)" rx="2" ry="2" />
<text  x="250.81" y="527.5" ></text>
</g>
<g >
<title>AsyncHandler::IsImportantFilePending (3 samples, 0.02%)</title><rect x="1179.2" y="837" width="0.2" height="15.0" fill="rgb(215,222,9)" rx="2" ry="2" />
<text  x="1182.22" y="847.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="1180.7" y="741" width="0.1" height="15.0" fill="rgb(209,177,27)" rx="2" ry="2" />
<text  x="1183.65" y="751.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (3 samples, 0.02%)</title><rect x="1009.5" y="661" width="0.1" height="15.0" fill="rgb(215,142,43)" rx="2" ry="2" />
<text  x="1012.47" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (13 samples, 0.07%)</title><rect x="324.7" y="421" width="0.8" height="15.0" fill="rgb(226,3,10)" rx="2" ry="2" />
<text  x="327.68" y="431.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (143 samples, 0.72%)</title><rect x="150.8" y="741" width="8.5" height="15.0" fill="rgb(244,81,33)" rx="2" ry="2" />
<text  x="153.76" y="751.5" ></text>
</g>
<g >
<title>pixman_image_unref (3 samples, 0.02%)</title><rect x="267.3" y="421" width="0.2" height="15.0" fill="rgb(235,111,8)" rx="2" ry="2" />
<text  x="270.28" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (15 samples, 0.08%)</title><rect x="500.7" y="709" width="0.9" height="15.0" fill="rgb(206,165,34)" rx="2" ry="2" />
<text  x="503.68" y="719.5" ></text>
</g>
<g >
<title>std::find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, Input::UiSource::Update()::{lambda(int)#1}&gt; (5 samples, 0.03%)</title><rect x="332.3" y="837" width="0.3" height="15.0" fill="rgb(219,89,42)" rx="2" ry="2" />
<text  x="335.30" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::deallocate (6 samples, 0.03%)</title><rect x="309.2" y="341" width="0.4" height="15.0" fill="rgb(233,200,28)" rx="2" ry="2" />
<text  x="312.20" y="351.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (1,304 samples, 6.58%)</title><rect x="159.3" y="709" width="77.6" height="15.0" fill="rgb(234,44,46)" rx="2" ry="2" />
<text  x="162.27" y="719.5" >std::__i..</text>
</g>
<g >
<title>std::tuple&lt;FileRequestResult*&amp;&amp;&gt;::tuple&lt;FileRequestResult*, true&gt; (9 samples, 0.05%)</title><rect x="967.3" y="613" width="0.5" height="15.0" fill="rgb(247,203,6)" rx="2" ry="2" />
<text  x="970.25" y="623.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator bool (2 samples, 0.01%)</title><rect x="702.5" y="709" width="0.2" height="15.0" fill="rgb(207,193,40)" rx="2" ry="2" />
<text  x="705.53" y="719.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_init_functor (2 samples, 0.01%)</title><rect x="61.6" y="997" width="0.1" height="15.0" fill="rgb(219,53,19)" rx="2" ry="2" />
<text  x="64.62" y="1007.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (9 samples, 0.05%)</title><rect x="786.5" y="405" width="0.6" height="15.0" fill="rgb(221,200,26)" rx="2" ry="2" />
<text  x="789.54" y="415.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.04%)</title><rect x="244.7" y="565" width="0.4" height="15.0" fill="rgb(228,122,41)" rx="2" ry="2" />
<text  x="247.65" y="575.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (27 samples, 0.14%)</title><rect x="299.8" y="357" width="1.7" height="15.0" fill="rgb(246,170,51)" rx="2" ry="2" />
<text  x="302.85" y="367.5" ></text>
</g>
<g >
<title>Color::Color (3 samples, 0.02%)</title><rect x="1003.2" y="725" width="0.1" height="15.0" fill="rgb(207,23,0)" rx="2" ry="2" />
<text  x="1006.16" y="735.5" ></text>
</g>
<g >
<title>Game_Picture::Show (9 samples, 0.05%)</title><rect x="130.5" y="917" width="0.5" height="15.0" fill="rgb(215,138,35)" rx="2" ry="2" />
<text  x="133.51" y="927.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (4 samples, 0.02%)</title><rect x="100.6" y="997" width="0.3" height="15.0" fill="rgb(226,134,13)" rx="2" ry="2" />
<text  x="103.62" y="1007.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (102 samples, 0.51%)</title><rect x="144.7" y="997" width="6.1" height="15.0" fill="rgb(223,182,22)" rx="2" ry="2" />
<text  x="147.68" y="1007.5" ></text>
</g>
<g >
<title>std::map&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, (anonymous namespace)::CacheItem, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::end (6 samples, 0.03%)</title><rect x="762.3" y="501" width="0.3" height="15.0" fill="rgb(232,71,33)" rx="2" ry="2" />
<text  x="765.25" y="511.5" ></text>
</g>
<g >
<title>std::swap&lt;void (*)(std::_Any_data const&amp;, FileRequestResult*&amp;&amp;)&gt; (10 samples, 0.05%)</title><rect x="684.8" y="581" width="0.6" height="15.0" fill="rgb(205,229,8)" rx="2" ry="2" />
<text  x="687.79" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.02%)</title><rect x="153.7" y="501" width="0.2" height="15.0" fill="rgb(247,11,37)" rx="2" ry="2" />
<text  x="156.73" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (10 samples, 0.05%)</title><rect x="1011.2" y="645" width="0.6" height="15.0" fill="rgb(216,83,0)" rx="2" ry="2" />
<text  x="1014.20" y="655.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (8 samples, 0.04%)</title><rect x="984.5" y="693" width="0.4" height="15.0" fill="rgb(206,108,19)" rx="2" ry="2" />
<text  x="987.46" y="703.5" ></text>
</g>
<g >
<title>DynamicFormat::DynamicFormat (8 samples, 0.04%)</title><rect x="836.1" y="341" width="0.5" height="15.0" fill="rgb(215,59,13)" rx="2" ry="2" />
<text  x="839.14" y="351.5" ></text>
</g>
<g >
<title>std::swap&lt;Bitmap*&gt; (8 samples, 0.04%)</title><rect x="858.6" y="453" width="0.5" height="15.0" fill="rgb(238,50,28)" rx="2" ry="2" />
<text  x="861.65" y="463.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (166 samples, 0.84%)</title><rect x="131.0" y="629" width="9.9" height="15.0" fill="rgb(217,176,16)" rx="2" ry="2" />
<text  x="134.05" y="639.5" ></text>
</g>
<g >
<title>Player::IsRPG2k3E (2 samples, 0.01%)</title><rect x="1076.2" y="773" width="0.1" height="15.0" fill="rgb(239,222,31)" rx="2" ry="2" />
<text  x="1079.16" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (9 samples, 0.05%)</title><rect x="502.8" y="693" width="0.6" height="15.0" fill="rgb(234,49,22)" rx="2" ry="2" />
<text  x="505.83" y="703.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (11 samples, 0.06%)</title><rect x="237.0" y="549" width="0.6" height="15.0" fill="rgb(229,194,53)" rx="2" ry="2" />
<text  x="239.97" y="559.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (2 samples, 0.01%)</title><rect x="1154.1" y="789" width="0.1" height="15.0" fill="rgb(240,203,7)" rx="2" ry="2" />
<text  x="1157.10" y="799.5" ></text>
</g>
<g >
<title>Color::Color (4 samples, 0.02%)</title><rect x="845.9" y="469" width="0.2" height="15.0" fill="rgb(252,15,29)" rx="2" ry="2" />
<text  x="848.91" y="479.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (20 samples, 0.10%)</title><rect x="237.0" y="709" width="1.2" height="15.0" fill="rgb(233,82,17)" rx="2" ry="2" />
<text  x="239.97" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (15 samples, 0.08%)</title><rect x="47.8" y="997" width="0.9" height="15.0" fill="rgb(217,100,53)" rx="2" ry="2" />
<text  x="50.81" y="1007.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (58 samples, 0.29%)</title><rect x="141.1" y="965" width="3.4" height="15.0" fill="rgb(239,33,53)" rx="2" ry="2" />
<text  x="144.05" y="975.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (55 samples, 0.28%)</title><rect x="716.9" y="645" width="3.3" height="15.0" fill="rgb(237,3,54)" rx="2" ry="2" />
<text  x="719.88" y="655.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (101 samples, 0.51%)</title><rect x="261.4" y="773" width="6.1" height="15.0" fill="rgb(218,179,50)" rx="2" ry="2" />
<text  x="264.45" y="783.5" ></text>
</g>
<g >
<title>handle_mm_fault (8 samples, 0.04%)</title><rect x="136.6" y="373" width="0.5" height="15.0" fill="rgb(212,33,46)" rx="2" ry="2" />
<text  x="139.65" y="383.5" ></text>
</g>
<g >
<title>__GI_madvise (9 samples, 0.05%)</title><rect x="257.9" y="277" width="0.5" height="15.0" fill="rgb(215,126,10)" rx="2" ry="2" />
<text  x="260.87" y="287.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (9 samples, 0.05%)</title><rect x="130.5" y="693" width="0.5" height="15.0" fill="rgb(216,156,51)" rx="2" ry="2" />
<text  x="133.51" y="703.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (185 samples, 0.93%)</title><rect x="247.8" y="469" width="11.0" height="15.0" fill="rgb(248,143,51)" rx="2" ry="2" />
<text  x="250.81" y="479.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (260 samples, 1.31%)</title><rect x="309.2" y="437" width="15.5" height="15.0" fill="rgb(226,22,16)" rx="2" ry="2" />
<text  x="312.20" y="447.5" ></text>
</g>
<g >
<title>Input::Update (16 samples, 0.08%)</title><rect x="332.1" y="901" width="0.9" height="15.0" fill="rgb(242,175,22)" rx="2" ry="2" />
<text  x="335.06" y="911.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (2 samples, 0.01%)</title><rect x="1178.0" y="789" width="0.1" height="15.0" fill="rgb(240,162,14)" rx="2" ry="2" />
<text  x="1180.97" y="799.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (3 samples, 0.02%)</title><rect x="977.6" y="469" width="0.2" height="15.0" fill="rgb(248,16,54)" rx="2" ry="2" />
<text  x="980.61" y="479.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (14 samples, 0.07%)</title><rect x="90.9" y="997" width="0.9" height="15.0" fill="rgb(213,56,41)" rx="2" ry="2" />
<text  x="93.92" y="1007.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_manager (149 samples, 0.75%)</title><rect x="970.8" y="533" width="8.9" height="15.0" fill="rgb(213,221,41)" rx="2" ry="2" />
<text  x="973.83" y="543.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.03%)</title><rect x="159.3" y="565" width="0.3" height="15.0" fill="rgb(225,162,25)" rx="2" ry="2" />
<text  x="162.27" y="575.5" ></text>
</g>
<g >
<title>Game_Picture::Show (109 samples, 0.55%)</title><rect x="238.2" y="789" width="6.5" height="15.0" fill="rgb(228,105,7)" rx="2" ry="2" />
<text  x="241.16" y="799.5" ></text>
</g>
<g >
<title>release_pages (11 samples, 0.06%)</title><rect x="256.6" y="85" width="0.7" height="15.0" fill="rgb(226,67,27)" rx="2" ry="2" />
<text  x="259.62" y="95.5" ></text>
</g>
<g >
<title>SDL_GetTicks (6 samples, 0.03%)</title><rect x="758.6" y="485" width="0.3" height="15.0" fill="rgb(224,21,10)" rx="2" ry="2" />
<text  x="761.56" y="495.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (118 samples, 0.60%)</title><rect x="478.3" y="757" width="7.0" height="15.0" fill="rgb(251,5,53)" rx="2" ry="2" />
<text  x="481.30" y="767.5" ></text>
</g>
<g >
<title>Cache::Picture (18 samples, 0.09%)</title><rect x="258.8" y="581" width="1.1" height="15.0" fill="rgb(244,204,15)" rx="2" ry="2" />
<text  x="261.83" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (25 samples, 0.13%)</title><rect x="1067.0" y="725" width="1.5" height="15.0" fill="rgb(211,140,35)" rx="2" ry="2" />
<text  x="1070.05" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (3 samples, 0.02%)</title><rect x="615.5" y="709" width="0.2" height="15.0" fill="rgb(217,21,43)" rx="2" ry="2" />
<text  x="618.54" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (30 samples, 0.15%)</title><rect x="501.6" y="709" width="1.8" height="15.0" fill="rgb(247,121,29)" rx="2" ry="2" />
<text  x="504.58" y="719.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (4 samples, 0.02%)</title><rect x="326.2" y="661" width="0.3" height="15.0" fill="rgb(238,76,43)" rx="2" ry="2" />
<text  x="329.23" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (4 samples, 0.02%)</title><rect x="154.0" y="581" width="0.3" height="15.0" fill="rgb(250,104,22)" rx="2" ry="2" />
<text  x="157.03" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;::__normal_iterator (3 samples, 0.02%)</title><rect x="941.5" y="389" width="0.2" height="15.0" fill="rgb(225,9,42)" rx="2" ry="2" />
<text  x="944.47" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (8 samples, 0.04%)</title><rect x="257.9" y="229" width="0.5" height="15.0" fill="rgb(217,227,27)" rx="2" ry="2" />
<text  x="260.93" y="239.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (265 samples, 1.34%)</title><rect x="269.8" y="597" width="15.8" height="15.0" fill="rgb(211,5,22)" rx="2" ry="2" />
<text  x="272.84" y="607.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.04%)</title><rect x="1023.6" y="613" width="0.5" height="15.0" fill="rgb(206,21,36)" rx="2" ry="2" />
<text  x="1026.64" y="623.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.01%)</title><rect x="646.9" y="453" width="0.1" height="15.0" fill="rgb(232,94,10)" rx="2" ry="2" />
<text  x="649.86" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt;::begin (4 samples, 0.02%)</title><rect x="112.5" y="997" width="0.3" height="15.0" fill="rgb(219,202,13)" rx="2" ry="2" />
<text  x="115.53" y="1007.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (586 samples, 2.96%)</title><rect x="1078.5" y="789" width="34.9" height="15.0" fill="rgb(226,74,40)" rx="2" ry="2" />
<text  x="1081.54" y="799.5" >Ga..</text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (143 samples, 0.72%)</title><rect x="150.8" y="901" width="8.5" height="15.0" fill="rgb(236,213,42)" rx="2" ry="2" />
<text  x="153.76" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator++ (3 samples, 0.02%)</title><rect x="50.2" y="997" width="0.2" height="15.0" fill="rgb(229,24,35)" rx="2" ry="2" />
<text  x="53.19" y="1007.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (64 samples, 0.32%)</title><rect x="861.4" y="501" width="3.9" height="15.0" fill="rgb(215,111,44)" rx="2" ry="2" />
<text  x="864.45" y="511.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="726.5" y="645" width="0.1" height="15.0" fill="rgb(237,215,13)" rx="2" ry="2" />
<text  x="729.53" y="655.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (515 samples, 2.60%)</title><rect x="294.8" y="885" width="30.7" height="15.0" fill="rgb(230,178,9)" rx="2" ry="2" />
<text  x="297.79" y="895.5" >Sc..</text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (101 samples, 0.51%)</title><rect x="261.4" y="837" width="6.1" height="15.0" fill="rgb(222,137,26)" rx="2" ry="2" />
<text  x="264.45" y="847.5" ></text>
</g>
<g >
<title>Sprite::SetOy (2 samples, 0.01%)</title><rect x="1167.1" y="805" width="0.1" height="15.0" fill="rgb(212,6,6)" rx="2" ry="2" />
<text  x="1170.08" y="815.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (5 samples, 0.03%)</title><rect x="773.3" y="373" width="0.3" height="15.0" fill="rgb(250,3,38)" rx="2" ry="2" />
<text  x="776.33" y="383.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (21 samples, 0.11%)</title><rect x="851.3" y="453" width="1.3" height="15.0" fill="rgb(234,212,3)" rx="2" ry="2" />
<text  x="854.33" y="463.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::get (2 samples, 0.01%)</title><rect x="76.1" y="997" width="0.1" height="15.0" fill="rgb(236,111,27)" rx="2" ry="2" />
<text  x="79.09" y="1007.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::operator= (6 samples, 0.03%)</title><rect x="84.1" y="997" width="0.4" height="15.0" fill="rgb(237,25,16)" rx="2" ry="2" />
<text  x="87.13" y="1007.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (3 samples, 0.02%)</title><rect x="860.5" y="469" width="0.2" height="15.0" fill="rgb(221,226,8)" rx="2" ry="2" />
<text  x="863.50" y="479.5" ></text>
</g>
<g >
<title>Sprite::SetOpacity (2 samples, 0.01%)</title><rect x="852.6" y="501" width="0.2" height="15.0" fill="rgb(240,157,50)" rx="2" ry="2" />
<text  x="855.64" y="511.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (4 samples, 0.02%)</title><rect x="326.2" y="645" width="0.3" height="15.0" fill="rgb(234,187,0)" rx="2" ry="2" />
<text  x="329.23" y="655.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (9 samples, 0.05%)</title><rect x="869.5" y="453" width="0.6" height="15.0" fill="rgb(229,91,28)" rx="2" ry="2" />
<text  x="872.55" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (6 samples, 0.03%)</title><rect x="154.3" y="597" width="0.3" height="15.0" fill="rgb(207,54,35)" rx="2" ry="2" />
<text  x="157.27" y="607.5" ></text>
</g>
<g >
<title>Bitmap::~Bitmap (3 samples, 0.02%)</title><rect x="267.3" y="437" width="0.2" height="15.0" fill="rgb(247,142,14)" rx="2" ry="2" />
<text  x="270.28" y="447.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.01%)</title><rect x="1023.9" y="597" width="0.2" height="15.0" fill="rgb(244,88,12)" rx="2" ry="2" />
<text  x="1026.94" y="607.5" ></text>
</g>
<g >
<title>__sched_text_start (61 samples, 0.31%)</title><rect x="17.0" y="885" width="3.6" height="15.0" fill="rgb(216,124,44)" rx="2" ry="2" />
<text  x="19.97" y="895.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::end (2 samples, 0.01%)</title><rect x="647.6" y="709" width="0.2" height="15.0" fill="rgb(219,61,8)" rx="2" ry="2" />
<text  x="650.63" y="719.5" ></text>
</g>
<g >
<title>Game_Map::Update (238 samples, 1.20%)</title><rect x="244.7" y="949" width="14.1" height="15.0" fill="rgb(236,101,16)" rx="2" ry="2" />
<text  x="247.65" y="959.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (2 samples, 0.01%)</title><rect x="1179.0" y="773" width="0.1" height="15.0" fill="rgb(237,97,54)" rx="2" ry="2" />
<text  x="1181.98" y="783.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (3 samples, 0.02%)</title><rect x="1025.2" y="725" width="0.2" height="15.0" fill="rgb(246,171,4)" rx="2" ry="2" />
<text  x="1028.25" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;::__normal_iterator (3 samples, 0.02%)</title><rect x="937.9" y="421" width="0.2" height="15.0" fill="rgb(210,51,11)" rx="2" ry="2" />
<text  x="940.90" y="431.5" ></text>
</g>
<g >
<title>operator new (50 samples, 0.25%)</title><rect x="621.4" y="645" width="3.0" height="15.0" fill="rgb(236,108,0)" rx="2" ry="2" />
<text  x="624.38" y="655.5" ></text>
</g>
<g >
<title>std::min&lt;int&gt; (8 samples, 0.04%)</title><rect x="103.0" y="997" width="0.5" height="15.0" fill="rgb(233,15,37)" rx="2" ry="2" />
<text  x="106.00" y="1007.5" ></text>
</g>
<g >
<title>Sprite::~Sprite (96 samples, 0.48%)</title><rect x="238.9" y="501" width="5.7" height="15.0" fill="rgb(205,211,27)" rx="2" ry="2" />
<text  x="241.88" y="511.5" ></text>
</g>
<g >
<title>eventfd_write (2 samples, 0.01%)</title><rect x="21.1" y="917" width="0.1" height="15.0" fill="rgb(221,148,38)" rx="2" ry="2" />
<text  x="24.07" y="927.5" ></text>
</g>
<g >
<title>std::__merge_sort_with_buffer&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (2 samples, 0.01%)</title><rect x="331.7" y="805" width="0.1" height="15.0" fill="rgb(232,74,40)" rx="2" ry="2" />
<text  x="334.70" y="815.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (18 samples, 0.09%)</title><rect x="258.8" y="533" width="1.1" height="15.0" fill="rgb(207,17,12)" rx="2" ry="2" />
<text  x="261.83" y="543.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;int&gt;::~weak_ptr (3 samples, 0.02%)</title><rect x="686.9" y="693" width="0.2" height="15.0" fill="rgb(253,218,53)" rx="2" ry="2" />
<text  x="689.87" y="703.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::operator() (3 samples, 0.02%)</title><rect x="288.1" y="357" width="0.1" height="15.0" fill="rgb(237,10,18)" rx="2" ry="2" />
<text  x="291.06" y="367.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.05%)</title><rect x="694.1" y="581" width="0.6" height="15.0" fill="rgb(236,80,4)" rx="2" ry="2" />
<text  x="697.08" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_addr (3 samples, 0.02%)</title><rect x="246.4" y="341" width="0.2" height="15.0" fill="rgb(233,82,3)" rx="2" ry="2" />
<text  x="249.38" y="351.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (6 samples, 0.03%)</title><rect x="965.5" y="469" width="0.3" height="15.0" fill="rgb(246,25,24)" rx="2" ry="2" />
<text  x="968.47" y="479.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (2 samples, 0.01%)</title><rect x="81.2" y="997" width="0.1" height="15.0" fill="rgb(249,30,36)" rx="2" ry="2" />
<text  x="84.21" y="1007.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (8 samples, 0.04%)</title><rect x="294.2" y="997" width="0.5" height="15.0" fill="rgb(248,161,51)" rx="2" ry="2" />
<text  x="297.19" y="1007.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (4 samples, 0.02%)</title><rect x="267.5" y="597" width="0.3" height="15.0" fill="rgb(221,126,53)" rx="2" ry="2" />
<text  x="270.52" y="607.5" ></text>
</g>
<g >
<title>ksys_read (7 samples, 0.04%)</title><rect x="20.7" y="965" width="0.4" height="15.0" fill="rgb(245,37,24)" rx="2" ry="2" />
<text  x="23.66" y="975.5" ></text>
</g>
<g >
<title>MakeFlashColor (3 samples, 0.02%)</title><rect x="1004.2" y="709" width="0.1" height="15.0" fill="rgb(239,59,43)" rx="2" ry="2" />
<text  x="1007.17" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (3 samples, 0.02%)</title><rect x="329.7" y="997" width="0.2" height="15.0" fill="rgb(233,224,4)" rx="2" ry="2" />
<text  x="332.68" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2 samples, 0.01%)</title><rect x="738.1" y="437" width="0.2" height="15.0" fill="rgb(248,224,0)" rx="2" ry="2" />
<text  x="741.14" y="447.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (5 samples, 0.03%)</title><rect x="878.2" y="501" width="0.3" height="15.0" fill="rgb(223,194,27)" rx="2" ry="2" />
<text  x="881.18" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Transition*, std::default_delete&lt;Transition&gt; &gt;::_M_head (2 samples, 0.01%)</title><rect x="73.5" y="997" width="0.1" height="15.0" fill="rgb(240,44,53)" rx="2" ry="2" />
<text  x="76.47" y="1007.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (2 samples, 0.01%)</title><rect x="868.8" y="485" width="0.1" height="15.0" fill="rgb(209,205,10)" rx="2" ry="2" />
<text  x="871.77" y="495.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (238 samples, 1.20%)</title><rect x="244.7" y="901" width="14.1" height="15.0" fill="rgb(229,225,6)" rx="2" ry="2" />
<text  x="247.65" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (86 samples, 0.43%)</title><rect x="1103.8" y="757" width="5.1" height="15.0" fill="rgb(238,49,46)" rx="2" ry="2" />
<text  x="1106.78" y="767.5" ></text>
</g>
<g >
<title>Bitmap::find_format (45 samples, 0.23%)</title><rect x="245.1" y="421" width="2.7" height="15.0" fill="rgb(242,181,25)" rx="2" ry="2" />
<text  x="248.13" y="431.5" ></text>
</g>
<g >
<title>Bitmap::find_format (8 samples, 0.04%)</title><rect x="835.4" y="341" width="0.4" height="15.0" fill="rgb(248,133,1)" rx="2" ry="2" />
<text  x="838.37" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::_Vector_base (2 samples, 0.01%)</title><rect x="129.3" y="997" width="0.1" height="15.0" fill="rgb(245,157,10)" rx="2" ry="2" />
<text  x="132.32" y="1007.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Graphics::State, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (10 samples, 0.05%)</title><rect x="855.1" y="453" width="0.6" height="15.0" fill="rgb(210,44,51)" rx="2" ry="2" />
<text  x="858.08" y="463.5" ></text>
</g>
<g >
<title>Sprite::SetY (3 samples, 0.02%)</title><rect x="1006.8" y="725" width="0.2" height="15.0" fill="rgb(249,39,20)" rx="2" ry="2" />
<text  x="1009.79" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_value (2 samples, 0.01%)</title><rect x="68.4" y="997" width="0.1" height="15.0" fill="rgb(231,170,4)" rx="2" ry="2" />
<text  x="71.41" y="1007.5" ></text>
</g>
<g >
<title>XFlush (8 samples, 0.04%)</title><rect x="1182.4" y="837" width="0.5" height="15.0" fill="rgb(209,27,33)" rx="2" ry="2" />
<text  x="1185.44" y="847.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (143 samples, 0.72%)</title><rect x="150.8" y="949" width="8.5" height="15.0" fill="rgb(234,18,27)" rx="2" ry="2" />
<text  x="153.76" y="959.5" ></text>
</g>
<g >
<title>Bitmap::Create (45 samples, 0.23%)</title><rect x="245.1" y="581" width="2.7" height="15.0" fill="rgb(226,48,3)" rx="2" ry="2" />
<text  x="248.13" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (4 samples, 0.02%)</title><rect x="1172.0" y="789" width="0.3" height="15.0" fill="rgb(238,14,31)" rx="2" ry="2" />
<text  x="1175.02" y="799.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (35 samples, 0.18%)</title><rect x="177.4" y="469" width="2.1" height="15.0" fill="rgb(209,94,32)" rx="2" ry="2" />
<text  x="180.43" y="479.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (3 samples, 0.02%)</title><rect x="21.4" y="1013" width="0.2" height="15.0" fill="rgb(214,78,16)" rx="2" ry="2" />
<text  x="24.43" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (2 samples, 0.01%)</title><rect x="442.2" y="773" width="0.1" height="15.0" fill="rgb(214,56,53)" rx="2" ry="2" />
<text  x="445.21" y="783.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (4 samples, 0.02%)</title><rect x="331.8" y="805" width="0.3" height="15.0" fill="rgb(224,200,50)" rx="2" ry="2" />
<text  x="334.82" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::max_size (8 samples, 0.04%)</title><rect x="54.6" y="997" width="0.5" height="15.0" fill="rgb(222,14,12)" rx="2" ry="2" />
<text  x="57.60" y="1007.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;Sprite&gt;&gt; (3 samples, 0.02%)</title><rect x="965.6" y="453" width="0.2" height="15.0" fill="rgb(235,104,3)" rx="2" ry="2" />
<text  x="968.65" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (6 samples, 0.03%)</title><rect x="791.9" y="453" width="0.4" height="15.0" fill="rgb(226,143,50)" rx="2" ry="2" />
<text  x="794.90" y="463.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="332.9" y="821" width="0.1" height="15.0" fill="rgb(227,29,42)" rx="2" ry="2" />
<text  x="335.90" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_is_local (3 samples, 0.02%)</title><rect x="1024.4" y="693" width="0.1" height="15.0" fill="rgb(228,96,25)" rx="2" ry="2" />
<text  x="1027.35" y="703.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate (7 samples, 0.04%)</title><rect x="838.5" y="389" width="0.4" height="15.0" fill="rgb(222,20,49)" rx="2" ry="2" />
<text  x="841.47" y="399.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (9 samples, 0.05%)</title><rect x="32.9" y="997" width="0.5" height="15.0" fill="rgb(216,212,21)" rx="2" ry="2" />
<text  x="35.86" y="1007.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (1,304 samples, 6.58%)</title><rect x="159.3" y="693" width="77.6" height="15.0" fill="rgb(219,144,37)" rx="2" ry="2" />
<text  x="162.27" y="703.5" >std::__i..</text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (21 samples, 0.11%)</title><rect x="241.4" y="341" width="1.3" height="15.0" fill="rgb(225,24,21)" rx="2" ry="2" />
<text  x="244.44" y="351.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*, std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="969.2" y="661" width="0.1" height="15.0" fill="rgb(214,137,20)" rx="2" ry="2" />
<text  x="972.22" y="671.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (5 samples, 0.03%)</title><rect x="860.2" y="437" width="0.3" height="15.0" fill="rgb(249,39,40)" rx="2" ry="2" />
<text  x="863.20" y="447.5" ></text>
</g>
<g >
<title>alloc_pages_vma (28 samples, 0.14%)</title><rect x="299.8" y="373" width="1.7" height="15.0" fill="rgb(227,221,32)" rx="2" ry="2" />
<text  x="302.79" y="383.5" ></text>
</g>
<g >
<title>Game_Map::Update (109 samples, 0.55%)</title><rect x="238.2" y="901" width="6.5" height="15.0" fill="rgb(207,78,4)" rx="2" ry="2" />
<text  x="241.16" y="911.5" ></text>
</g>
<g >
<title>operator delete (62 samples, 0.31%)</title><rect x="155.6" y="565" width="3.7" height="15.0" fill="rgb(252,75,35)" rx="2" ry="2" />
<text  x="158.58" y="575.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (115 samples, 0.58%)</title><rect x="496.6" y="741" width="6.9" height="15.0" fill="rgb(251,86,29)" rx="2" ry="2" />
<text  x="499.64" y="751.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (2 samples, 0.01%)</title><rect x="788.0" y="421" width="0.1" height="15.0" fill="rgb(246,226,31)" rx="2" ry="2" />
<text  x="790.97" y="431.5" ></text>
</g>
<g >
<title>__interceptor_free (9 samples, 0.05%)</title><rect x="237.6" y="341" width="0.6" height="15.0" fill="rgb(225,182,27)" rx="2" ry="2" />
<text  x="240.63" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (2 samples, 0.01%)</title><rect x="680.7" y="677" width="0.2" height="15.0" fill="rgb(220,53,47)" rx="2" ry="2" />
<text  x="683.74" y="687.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (62 samples, 0.31%)</title><rect x="155.6" y="597" width="3.7" height="15.0" fill="rgb(228,142,21)" rx="2" ry="2" />
<text  x="158.58" y="607.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (11 samples, 0.06%)</title><rect x="256.6" y="101" width="0.7" height="15.0" fill="rgb(219,204,41)" rx="2" ry="2" />
<text  x="259.62" y="111.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (43 samples, 0.22%)</title><rect x="305.7" y="309" width="2.6" height="15.0" fill="rgb(209,47,29)" rx="2" ry="2" />
<text  x="308.74" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::deallocate (43 samples, 0.22%)</title><rect x="238.9" y="389" width="2.5" height="15.0" fill="rgb(254,65,40)" rx="2" ry="2" />
<text  x="241.88" y="399.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_clone (87 samples, 0.44%)</title><rect x="663.8" y="629" width="5.1" height="15.0" fill="rgb(242,46,45)" rx="2" ry="2" />
<text  x="666.77" y="639.5" ></text>
</g>
<g >
<title>Sprite::~Sprite (97 samples, 0.49%)</title><rect x="238.9" y="517" width="5.8" height="15.0" fill="rgb(240,100,44)" rx="2" ry="2" />
<text  x="241.88" y="527.5" ></text>
</g>
<g >
<title>std::default_delete&lt;Sprite&gt;::operator() (97 samples, 0.49%)</title><rect x="238.9" y="533" width="5.8" height="15.0" fill="rgb(227,191,23)" rx="2" ry="2" />
<text  x="241.88" y="543.5" ></text>
</g>
<g >
<title>Bitmap::Create (102 samples, 0.51%)</title><rect x="144.7" y="693" width="6.1" height="15.0" fill="rgb(252,59,0)" rx="2" ry="2" />
<text  x="147.68" y="703.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (5 samples, 0.03%)</title><rect x="292.6" y="965" width="0.3" height="15.0" fill="rgb(230,185,3)" rx="2" ry="2" />
<text  x="295.65" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_left (8 samples, 0.04%)</title><rect x="754.7" y="437" width="0.5" height="15.0" fill="rgb(239,29,7)" rx="2" ry="2" />
<text  x="757.75" y="447.5" ></text>
</g>
<g >
<title>std::__weak_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__weak_count (2 samples, 0.01%)</title><rect x="681.0" y="645" width="0.2" height="15.0" fill="rgb(254,159,1)" rx="2" ry="2" />
<text  x="684.04" y="655.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::operator() (4 samples, 0.02%)</title><rect x="767.6" y="437" width="0.2" height="15.0" fill="rgb(239,103,9)" rx="2" ry="2" />
<text  x="770.61" y="447.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (109 samples, 0.55%)</title><rect x="238.2" y="773" width="6.5" height="15.0" fill="rgb(207,153,31)" rx="2" ry="2" />
<text  x="241.16" y="783.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (2 samples, 0.01%)</title><rect x="857.5" y="485" width="0.1" height="15.0" fill="rgb(208,218,47)" rx="2" ry="2" />
<text  x="860.46" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::end (8 samples, 0.04%)</title><rect x="658.9" y="677" width="0.5" height="15.0" fill="rgb(252,86,29)" rx="2" ry="2" />
<text  x="661.95" y="687.5" ></text>
</g>
<g >
<title>new_sync_read (2 samples, 0.01%)</title><rect x="20.8" y="917" width="0.1" height="15.0" fill="rgb(208,20,8)" rx="2" ry="2" />
<text  x="23.78" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (10 samples, 0.05%)</title><rect x="1083.7" y="757" width="0.6" height="15.0" fill="rgb(207,61,41)" rx="2" ry="2" />
<text  x="1086.72" y="767.5" ></text>
</g>
<g >
<title>Scene::GetRequestedScene (2 samples, 0.01%)</title><rect x="35.7" y="997" width="0.1" height="15.0" fill="rgb(229,104,41)" rx="2" ry="2" />
<text  x="38.66" y="1007.5" ></text>
</g>
<g >
<title>Player::MainLoop (20 samples, 0.10%)</title><rect x="237.0" y="997" width="1.2" height="15.0" fill="rgb(232,154,26)" rx="2" ry="2" />
<text  x="239.97" y="1007.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (143 samples, 0.72%)</title><rect x="150.8" y="661" width="8.5" height="15.0" fill="rgb(248,185,5)" rx="2" ry="2" />
<text  x="153.76" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (9 samples, 0.05%)</title><rect x="130.5" y="533" width="0.5" height="15.0" fill="rgb(214,127,13)" rx="2" ry="2" />
<text  x="133.51" y="543.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (4 samples, 0.02%)</title><rect x="1008.4" y="661" width="0.2" height="15.0" fill="rgb(211,71,38)" rx="2" ry="2" />
<text  x="1011.40" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (2 samples, 0.01%)</title><rect x="338.7" y="789" width="0.1" height="15.0" fill="rgb(235,50,13)" rx="2" ry="2" />
<text  x="341.73" y="799.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (27 samples, 0.14%)</title><rect x="789.0" y="485" width="1.7" height="15.0" fill="rgb(227,122,31)" rx="2" ry="2" />
<text  x="792.05" y="495.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (192 samples, 0.97%)</title><rect x="309.6" y="309" width="11.4" height="15.0" fill="rgb(214,181,10)" rx="2" ry="2" />
<text  x="312.55" y="319.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (37 samples, 0.19%)</title><rect x="1172.6" y="773" width="2.2" height="15.0" fill="rgb(218,201,40)" rx="2" ry="2" />
<text  x="1175.61" y="783.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (1,304 samples, 6.58%)</title><rect x="159.3" y="741" width="77.6" height="15.0" fill="rgb(250,162,47)" rx="2" ry="2" />
<text  x="162.27" y="751.5" >std::__i..</text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;Bitmap&gt;&amp;&gt; (3 samples, 0.02%)</title><rect x="104.2" y="997" width="0.2" height="15.0" fill="rgb(231,32,24)" rx="2" ry="2" />
<text  x="107.20" y="1007.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (166 samples, 0.84%)</title><rect x="131.0" y="789" width="9.9" height="15.0" fill="rgb(248,38,1)" rx="2" ry="2" />
<text  x="134.05" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (90 samples, 0.45%)</title><rect x="1091.0" y="757" width="5.4" height="15.0" fill="rgb(236,14,23)" rx="2" ry="2" />
<text  x="1094.04" y="767.5" ></text>
</g>
<g >
<title>std::any_of&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, Input::UiSource::Update()::{lambda(int)#1}&gt; (6 samples, 0.03%)</title><rect x="332.2" y="869" width="0.4" height="15.0" fill="rgb(216,172,32)" rx="2" ry="2" />
<text  x="335.24" y="879.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (185 samples, 0.93%)</title><rect x="247.8" y="501" width="11.0" height="15.0" fill="rgb(229,68,10)" rx="2" ry="2" />
<text  x="250.81" y="511.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (109 samples, 0.55%)</title><rect x="238.2" y="757" width="6.5" height="15.0" fill="rgb(254,174,12)" rx="2" ry="2" />
<text  x="241.16" y="767.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl (8 samples, 0.04%)</title><rect x="701.7" y="613" width="0.5" height="15.0" fill="rgb(220,190,31)" rx="2" ry="2" />
<text  x="704.70" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Drawable*&gt;::construct&lt;Drawable*, Drawable* const&amp;&gt; (4 samples, 0.02%)</title><rect x="52.7" y="997" width="0.2" height="15.0" fill="rgb(249,59,0)" rx="2" ry="2" />
<text  x="55.69" y="1007.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (143 samples, 0.72%)</title><rect x="150.8" y="981" width="8.5" height="15.0" fill="rgb(223,78,22)" rx="2" ry="2" />
<text  x="153.76" y="991.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (18 samples, 0.09%)</title><rect x="143.4" y="501" width="1.1" height="15.0" fill="rgb(233,39,29)" rx="2" ry="2" />
<text  x="146.43" y="511.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (238 samples, 1.20%)</title><rect x="244.7" y="805" width="14.1" height="15.0" fill="rgb(209,53,18)" rx="2" ry="2" />
<text  x="247.65" y="815.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (9 samples, 0.05%)</title><rect x="130.5" y="741" width="0.5" height="15.0" fill="rgb(211,222,43)" rx="2" ry="2" />
<text  x="133.51" y="751.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (58 samples, 0.29%)</title><rect x="141.1" y="709" width="3.4" height="15.0" fill="rgb(226,154,15)" rx="2" ry="2" />
<text  x="144.05" y="719.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (13,712 samples, 69.19%)</title><rect x="333.3" y="853" width="816.4" height="15.0" fill="rgb(216,190,23)" rx="2" ry="2" />
<text  x="336.25" y="863.5" >Game_Map::UpdateCommonEvents</text>
</g>
<g >
<title>Cache::System (3 samples, 0.02%)</title><rect x="1179.6" y="821" width="0.2" height="15.0" fill="rgb(220,81,48)" rx="2" ry="2" />
<text  x="1182.58" y="831.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (58 samples, 0.29%)</title><rect x="141.1" y="885" width="3.4" height="15.0" fill="rgb(234,116,5)" rx="2" ry="2" />
<text  x="144.05" y="895.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::_Placeholder&lt;1&gt;, true&gt;::_M_head (2 samples, 0.01%)</title><rect x="967.1" y="565" width="0.1" height="15.0" fill="rgb(205,186,1)" rx="2" ry="2" />
<text  x="970.08" y="575.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.05%)</title><rect x="130.5" y="485" width="0.5" height="15.0" fill="rgb(253,33,48)" rx="2" ry="2" />
<text  x="133.51" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (2 samples, 0.01%)</title><rect x="1009.6" y="709" width="0.2" height="15.0" fill="rgb(211,99,0)" rx="2" ry="2" />
<text  x="1012.65" y="719.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (5 samples, 0.03%)</title><rect x="984.6" y="677" width="0.3" height="15.0" fill="rgb(230,133,29)" rx="2" ry="2" />
<text  x="987.64" y="687.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*&gt; (177 samples, 0.89%)</title><rect x="970.0" y="613" width="10.5" height="15.0" fill="rgb(209,3,11)" rx="2" ry="2" />
<text  x="972.99" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (6 samples, 0.03%)</title><rect x="886.8" y="421" width="0.4" height="15.0" fill="rgb(251,101,1)" rx="2" ry="2" />
<text  x="889.81" y="431.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (39 samples, 0.20%)</title><rect x="1180.1" y="853" width="2.3" height="15.0" fill="rgb(246,190,5)" rx="2" ry="2" />
<text  x="1183.12" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (3 samples, 0.02%)</title><rect x="1153.5" y="789" width="0.2" height="15.0" fill="rgb(223,65,29)" rx="2" ry="2" />
<text  x="1156.50" y="799.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (2 samples, 0.01%)</title><rect x="302.8" y="341" width="0.1" height="15.0" fill="rgb(237,91,9)" rx="2" ry="2" />
<text  x="305.83" y="351.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (38 samples, 0.19%)</title><rect x="609.4" y="741" width="2.3" height="15.0" fill="rgb(239,203,36)" rx="2" ry="2" />
<text  x="612.41" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (5 samples, 0.03%)</title><rect x="370.3" y="789" width="0.3" height="15.0" fill="rgb(228,147,45)" rx="2" ry="2" />
<text  x="373.35" y="799.5" ></text>
</g>
<g >
<title>max&lt;int&gt; (8 samples, 0.04%)</title><rect x="58.3" y="997" width="0.5" height="15.0" fill="rgb(254,31,17)" rx="2" ry="2" />
<text  x="61.29" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::CommonEvent, std::allocator&lt;RPG::CommonEvent&gt; &gt;::size (4 samples, 0.02%)</title><rect x="337.8" y="789" width="0.3" height="15.0" fill="rgb(232,137,7)" rx="2" ry="2" />
<text  x="340.84" y="799.5" ></text>
</g>
<g >
<title>std::_Mu&lt;Game_Picture*, false, false&gt;::operator()&lt;Game_Picture*&amp;, std::tuple&lt;FileRequestResult*&amp;&amp;&gt; &gt; (2 samples, 0.01%)</title><rect x="728.0" y="613" width="0.1" height="15.0" fill="rgb(209,38,38)" rx="2" ry="2" />
<text  x="730.96" y="623.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;int&gt;::operator= (202 samples, 1.02%)</title><rect x="984.0" y="725" width="12.0" height="15.0" fill="rgb(236,118,32)" rx="2" ry="2" />
<text  x="986.99" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (4 samples, 0.02%)</title><rect x="170.9" y="549" width="0.2" height="15.0" fill="rgb(226,11,24)" rx="2" ry="2" />
<text  x="173.88" y="559.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (7 samples, 0.04%)</title><rect x="161.2" y="517" width="0.5" height="15.0" fill="rgb(226,169,15)" rx="2" ry="2" />
<text  x="164.24" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt;::erase (963 samples, 4.86%)</title><rect x="179.6" y="581" width="57.3" height="15.0" fill="rgb(251,135,4)" rx="2" ry="2" />
<text  x="182.58" y="591.5" >std::v..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.02%)</title><rect x="267.3" y="357" width="0.2" height="15.0" fill="rgb(232,58,35)" rx="2" ry="2" />
<text  x="270.28" y="367.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (13,558 samples, 68.41%)</title><rect x="339.3" y="821" width="807.3" height="15.0" fill="rgb(216,72,20)" rx="2" ry="2" />
<text  x="342.33" y="831.5" >Game_Interpreter::Update</text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (4 samples, 0.02%)</title><rect x="326.2" y="757" width="0.3" height="15.0" fill="rgb(211,118,6)" rx="2" ry="2" />
<text  x="329.23" y="767.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (9 samples, 0.05%)</title><rect x="130.5" y="645" width="0.5" height="15.0" fill="rgb(221,227,19)" rx="2" ry="2" />
<text  x="133.51" y="655.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (2 samples, 0.01%)</title><rect x="948.2" y="437" width="0.1" height="15.0" fill="rgb(252,196,4)" rx="2" ry="2" />
<text  x="951.20" y="447.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator() (4 samples, 0.02%)</title><rect x="754.5" y="421" width="0.2" height="15.0" fill="rgb(226,224,27)" rx="2" ry="2" />
<text  x="757.51" y="431.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;int&gt;::~weak_ptr (5 samples, 0.03%)</title><rect x="120.8" y="997" width="0.3" height="15.0" fill="rgb(236,75,53)" rx="2" ry="2" />
<text  x="123.81" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (16 samples, 0.08%)</title><rect x="756.3" y="405" width="0.9" height="15.0" fill="rgb(239,48,18)" rx="2" ry="2" />
<text  x="759.30" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_M_begin (3 samples, 0.02%)</title><rect x="752.2" y="453" width="0.2" height="15.0" fill="rgb(218,29,54)" rx="2" ry="2" />
<text  x="755.25" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (18 samples, 0.09%)</title><rect x="498.6" y="709" width="1.1" height="15.0" fill="rgb(218,175,11)" rx="2" ry="2" />
<text  x="501.60" y="719.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (349 samples, 1.76%)</title><rect x="267.5" y="773" width="20.8" height="15.0" fill="rgb(215,92,5)" rx="2" ry="2" />
<text  x="270.52" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::destroy&lt;Bitmap&gt; (53 samples, 0.27%)</title><rect x="241.4" y="389" width="3.2" height="15.0" fill="rgb(231,201,19)" rx="2" ry="2" />
<text  x="244.44" y="399.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (6 samples, 0.03%)</title><rect x="302.8" y="357" width="0.3" height="15.0" fill="rgb(229,224,47)" rx="2" ry="2" />
<text  x="305.77" y="367.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (4 samples, 0.02%)</title><rect x="326.2" y="565" width="0.3" height="15.0" fill="rgb(245,8,1)" rx="2" ry="2" />
<text  x="329.23" y="575.5" ></text>
</g>
<g >
<title>posix_get_monotonic_raw (26 samples, 0.13%)</title><rect x="280.8" y="485" width="1.5" height="15.0" fill="rgb(221,86,50)" rx="2" ry="2" />
<text  x="283.80" y="495.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (15 samples, 0.08%)</title><rect x="27.7" y="997" width="0.9" height="15.0" fill="rgb(222,65,14)" rx="2" ry="2" />
<text  x="30.68" y="1007.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (102 samples, 0.51%)</title><rect x="144.7" y="725" width="6.1" height="15.0" fill="rgb(217,95,48)" rx="2" ry="2" />
<text  x="147.68" y="735.5" ></text>
</g>
<g >
<title>Bitmap::width (15 samples, 0.08%)</title><rect x="840.6" y="485" width="0.9" height="15.0" fill="rgb(220,140,26)" rx="2" ry="2" />
<text  x="843.61" y="495.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandMovePicture (46 samples, 0.23%)</title><rect x="598.6" y="773" width="2.8" height="15.0" fill="rgb(252,56,23)" rx="2" ry="2" />
<text  x="601.63" y="783.5" ></text>
</g>
<g >
<title>Opacity::IsTransparent (3 samples, 0.02%)</title><rect x="33.9" y="997" width="0.2" height="15.0" fill="rgb(236,33,35)" rx="2" ry="2" />
<text  x="36.88" y="1007.5" ></text>
</g>
<g >
<title>operator== (9 samples, 0.05%)</title><rect x="1167.3" y="773" width="0.6" height="15.0" fill="rgb(219,23,32)" rx="2" ry="2" />
<text  x="1170.31" y="783.5" ></text>
</g>
<g >
<title>Game_Map::Update (4 samples, 0.02%)</title><rect x="326.2" y="885" width="0.3" height="15.0" fill="rgb(250,146,26)" rx="2" ry="2" />
<text  x="329.23" y="895.5" ></text>
</g>
<g >
<title>pollwake (2 samples, 0.01%)</title><rect x="21.1" y="869" width="0.1" height="15.0" fill="rgb(233,226,52)" rx="2" ry="2" />
<text  x="24.07" y="879.5" ></text>
</g>
<g >
<title>memmove (963 samples, 4.86%)</title><rect x="179.6" y="485" width="57.3" height="15.0" fill="rgb(209,116,26)" rx="2" ry="2" />
<text  x="182.58" y="495.5" >memmove</text>
</g>
<g >
<title>FileRequestAsync::Start (44 samples, 0.22%)</title><rect x="258.8" y="789" width="2.6" height="15.0" fill="rgb(214,210,22)" rx="2" ry="2" />
<text  x="261.83" y="799.5" ></text>
</g>
<g >
<title>__vm_munmap (23 samples, 0.12%)</title><rect x="256.2" y="213" width="1.4" height="15.0" fill="rgb(237,103,50)" rx="2" ry="2" />
<text  x="259.21" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data@plt (2 samples, 0.01%)</title><rect x="738.0" y="437" width="0.1" height="15.0" fill="rgb(205,123,36)" rx="2" ry="2" />
<text  x="741.02" y="447.5" ></text>
</g>
<g >
<title>Player::MainLoop (515 samples, 2.60%)</title><rect x="294.8" y="949" width="30.7" height="15.0" fill="rgb(251,72,19)" rx="2" ry="2" />
<text  x="297.79" y="959.5" >Pl..</text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (10 samples, 0.05%)</title><rect x="112.9" y="997" width="0.6" height="15.0" fill="rgb(214,200,39)" rx="2" ry="2" />
<text  x="115.89" y="1007.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (2 samples, 0.01%)</title><rect x="646.7" y="549" width="0.2" height="15.0" fill="rgb(231,105,4)" rx="2" ry="2" />
<text  x="649.74" y="559.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (166 samples, 0.84%)</title><rect x="131.0" y="821" width="9.9" height="15.0" fill="rgb(241,48,22)" rx="2" ry="2" />
<text  x="134.05" y="831.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (49 samples, 0.25%)</title><rect x="264.4" y="533" width="2.9" height="15.0" fill="rgb(237,104,27)" rx="2" ry="2" />
<text  x="267.36" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (4 samples, 0.02%)</title><rect x="1025.2" y="741" width="0.3" height="15.0" fill="rgb(234,50,6)" rx="2" ry="2" />
<text  x="1028.25" y="751.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (50 samples, 0.25%)</title><rect x="707.1" y="613" width="3.0" height="15.0" fill="rgb(247,150,2)" rx="2" ry="2" />
<text  x="710.12" y="623.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (3 samples, 0.02%)</title><rect x="267.3" y="517" width="0.2" height="15.0" fill="rgb(230,218,48)" rx="2" ry="2" />
<text  x="270.28" y="527.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="759.2" y="469" width="0.1" height="15.0" fill="rgb(249,26,21)" rx="2" ry="2" />
<text  x="762.16" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_S_key (8 samples, 0.04%)</title><rect x="265.0" y="357" width="0.5" height="15.0" fill="rgb(211,99,3)" rx="2" ry="2" />
<text  x="268.02" y="367.5" ></text>
</g>
<g >
<title>operator!= (4 samples, 0.02%)</title><rect x="1006.4" y="709" width="0.3" height="15.0" fill="rgb(251,82,32)" rx="2" ry="2" />
<text  x="1009.43" y="719.5" ></text>
</g>
<g >
<title>SDLAudioP2 (195 samples, 0.98%)</title><rect x="10.0" y="1029" width="11.6" height="15.0" fill="rgb(228,67,18)" rx="2" ry="2" />
<text  x="13.00" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator* (21 samples, 0.11%)</title><rect x="744.1" y="453" width="1.2" height="15.0" fill="rgb(216,171,6)" rx="2" ry="2" />
<text  x="747.09" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::destroy&lt;Bitmap&gt; (254 samples, 1.28%)</title><rect x="309.6" y="357" width="15.1" height="15.0" fill="rgb(241,182,13)" rx="2" ry="2" />
<text  x="312.55" y="367.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (8 samples, 0.04%)</title><rect x="170.6" y="597" width="0.5" height="15.0" fill="rgb(229,37,35)" rx="2" ry="2" />
<text  x="173.64" y="607.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (101 samples, 0.51%)</title><rect x="261.4" y="789" width="6.1" height="15.0" fill="rgb(215,202,43)" rx="2" ry="2" />
<text  x="264.45" y="799.5" ></text>
</g>
<g >
<title>Bitmap::GetTransparent (5 samples, 0.03%)</title><rect x="801.5" y="469" width="0.3" height="15.0" fill="rgb(238,131,14)" rx="2" ry="2" />
<text  x="804.49" y="479.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (8 samples, 0.04%)</title><rect x="170.2" y="501" width="0.4" height="15.0" fill="rgb(240,35,9)" rx="2" ry="2" />
<text  x="173.17" y="511.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (20 samples, 0.10%)</title><rect x="237.0" y="869" width="1.2" height="15.0" fill="rgb(207,188,27)" rx="2" ry="2" />
<text  x="239.97" y="879.5" ></text>
</g>
<g >
<title>Game_Picture::Show (102 samples, 0.51%)</title><rect x="144.7" y="949" width="6.1" height="15.0" fill="rgb(234,86,34)" rx="2" ry="2" />
<text  x="147.68" y="959.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (49 samples, 0.25%)</title><rect x="264.4" y="613" width="2.9" height="15.0" fill="rgb(227,184,41)" rx="2" ry="2" />
<text  x="267.36" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (3 samples, 0.02%)</title><rect x="761.2" y="501" width="0.2" height="15.0" fill="rgb(224,26,36)" rx="2" ry="2" />
<text  x="764.18" y="511.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.02%)</title><rect x="267.3" y="373" width="0.2" height="15.0" fill="rgb(216,58,17)" rx="2" ry="2" />
<text  x="270.28" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (36 samples, 0.18%)</title><rect x="1014.4" y="677" width="2.2" height="15.0" fill="rgb(231,17,35)" rx="2" ry="2" />
<text  x="1017.41" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator* (16 samples, 0.08%)</title><rect x="633.9" y="677" width="1.0" height="15.0" fill="rgb(243,224,14)" rx="2" ry="2" />
<text  x="636.94" y="687.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (44 samples, 0.22%)</title><rect x="258.8" y="629" width="2.6" height="15.0" fill="rgb(233,106,17)" rx="2" ry="2" />
<text  x="261.83" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (5 samples, 0.03%)</title><rect x="76.6" y="997" width="0.3" height="15.0" fill="rgb(213,188,27)" rx="2" ry="2" />
<text  x="79.63" y="1007.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipTo (29 samples, 0.15%)</title><rect x="1074.2" y="773" width="1.7" height="15.0" fill="rgb(237,23,26)" rx="2" ry="2" />
<text  x="1077.19" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (5 samples, 0.03%)</title><rect x="852.3" y="405" width="0.3" height="15.0" fill="rgb(209,106,1)" rx="2" ry="2" />
<text  x="855.28" y="415.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (21 samples, 0.11%)</title><rect x="756.1" y="421" width="1.3" height="15.0" fill="rgb(229,168,22)" rx="2" ry="2" />
<text  x="759.12" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (7 samples, 0.04%)</title><rect x="370.6" y="789" width="0.5" height="15.0" fill="rgb(210,139,20)" rx="2" ry="2" />
<text  x="373.64" y="799.5" ></text>
</g>
<g >
<title>__interceptor_free (21 samples, 0.11%)</title><rect x="241.4" y="325" width="1.3" height="15.0" fill="rgb(235,45,42)" rx="2" ry="2" />
<text  x="244.44" y="335.5" ></text>
</g>
<g >
<title>std::_Bit_reference::_Bit_reference (2 samples, 0.01%)</title><rect x="60.2" y="997" width="0.1" height="15.0" fill="rgb(219,162,47)" rx="2" ry="2" />
<text  x="63.19" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (64 samples, 0.32%)</title><rect x="437.3" y="757" width="3.8" height="15.0" fill="rgb(246,199,29)" rx="2" ry="2" />
<text  x="440.27" y="767.5" ></text>
</g>
<g >
<title>__do_page_fault (69 samples, 0.35%)</title><rect x="299.2" y="421" width="4.1" height="15.0" fill="rgb(252,66,18)" rx="2" ry="2" />
<text  x="302.19" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_M_begin (10 samples, 0.05%)</title><rect x="648.5" y="677" width="0.6" height="15.0" fill="rgb(248,147,38)" rx="2" ry="2" />
<text  x="651.47" y="687.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (5 samples, 0.03%)</title><rect x="292.6" y="917" width="0.3" height="15.0" fill="rgb(251,78,21)" rx="2" ry="2" />
<text  x="295.65" y="927.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (4 samples, 0.02%)</title><rect x="759.6" y="485" width="0.2" height="15.0" fill="rgb(242,165,6)" rx="2" ry="2" />
<text  x="762.57" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;::operator++ (20 samples, 0.10%)</title><rect x="894.9" y="405" width="1.1" height="15.0" fill="rgb(246,160,20)" rx="2" ry="2" />
<text  x="897.85" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (87 samples, 0.44%)</title><rect x="1063.4" y="741" width="5.1" height="15.0" fill="rgb(211,34,53)" rx="2" ry="2" />
<text  x="1066.35" y="751.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.03%)</title><rect x="326.6" y="981" width="0.3" height="15.0" fill="rgb(226,149,47)" rx="2" ry="2" />
<text  x="329.64" y="991.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandKeyInputProc (5 samples, 0.03%)</title><rect x="598.3" y="773" width="0.3" height="15.0" fill="rgb(224,132,50)" rx="2" ry="2" />
<text  x="601.33" y="783.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (2 samples, 0.01%)</title><rect x="1180.7" y="773" width="0.1" height="15.0" fill="rgb(232,24,27)" rx="2" ry="2" />
<text  x="1183.65" y="783.5" ></text>
</g>
<g >
<title>memcmp@plt (3 samples, 0.02%)</title><rect x="757.1" y="389" width="0.1" height="15.0" fill="rgb(207,222,2)" rx="2" ry="2" />
<text  x="760.07" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_valptr (2 samples, 0.01%)</title><rect x="658.6" y="645" width="0.1" height="15.0" fill="rgb(229,196,9)" rx="2" ry="2" />
<text  x="661.59" y="655.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.05%)</title><rect x="138.6" y="469" width="0.5" height="15.0" fill="rgb(247,88,53)" rx="2" ry="2" />
<text  x="141.55" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (100 samples, 0.50%)</title><rect x="15.5" y="1013" width="5.9" height="15.0" fill="rgb(241,204,31)" rx="2" ry="2" />
<text  x="18.48" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (4 samples, 0.02%)</title><rect x="1037.6" y="725" width="0.3" height="15.0" fill="rgb(236,151,27)" rx="2" ry="2" />
<text  x="1040.63" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::end (2 samples, 0.01%)</title><rect x="116.3" y="997" width="0.2" height="15.0" fill="rgb(227,43,7)" rx="2" ry="2" />
<text  x="119.34" y="1007.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (5 samples, 0.03%)</title><rect x="292.6" y="773" width="0.3" height="15.0" fill="rgb(220,98,27)" rx="2" ry="2" />
<text  x="295.65" y="783.5" ></text>
</g>
<g >
<title>do_nanosleep (26 samples, 0.13%)</title><rect x="1180.9" y="741" width="1.5" height="15.0" fill="rgb(212,46,53)" rx="2" ry="2" />
<text  x="1183.89" y="751.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (3 samples, 0.02%)</title><rect x="267.3" y="485" width="0.2" height="15.0" fill="rgb(225,117,32)" rx="2" ry="2" />
<text  x="270.28" y="495.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (36 samples, 0.18%)</title><rect x="159.6" y="581" width="2.2" height="15.0" fill="rgb(210,125,9)" rx="2" ry="2" />
<text  x="162.63" y="591.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (166 samples, 0.84%)</title><rect x="131.0" y="677" width="9.9" height="15.0" fill="rgb(225,108,9)" rx="2" ry="2" />
<text  x="134.05" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (9 samples, 0.05%)</title><rect x="481.2" y="709" width="0.5" height="15.0" fill="rgb(235,161,47)" rx="2" ry="2" />
<text  x="484.15" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (264 samples, 1.33%)</title><rect x="1040.6" y="757" width="15.7" height="15.0" fill="rgb(214,229,32)" rx="2" ry="2" />
<text  x="1043.61" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt;::push_back (27 samples, 0.14%)</title><rect x="875.3" y="485" width="1.6" height="15.0" fill="rgb(205,79,46)" rx="2" ry="2" />
<text  x="878.26" y="495.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (44 samples, 0.22%)</title><rect x="258.8" y="757" width="2.6" height="15.0" fill="rgb(213,210,44)" rx="2" ry="2" />
<text  x="261.83" y="767.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="788.5" y="469" width="0.1" height="15.0" fill="rgb(228,153,18)" rx="2" ry="2" />
<text  x="791.51" y="479.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (16 samples, 0.08%)</title><rect x="136.5" y="437" width="1.0" height="15.0" fill="rgb(218,192,45)" rx="2" ry="2" />
<text  x="139.53" y="447.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (514 samples, 2.59%)</title><rect x="294.8" y="661" width="30.7" height="15.0" fill="rgb(239,30,54)" rx="2" ry="2" />
<text  x="297.85" y="671.5" >st..</text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (515 samples, 2.60%)</title><rect x="294.8" y="773" width="30.7" height="15.0" fill="rgb(210,21,46)" rx="2" ry="2" />
<text  x="297.79" y="783.5" >Ga..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (8 samples, 0.04%)</title><rect x="861.4" y="485" width="0.5" height="15.0" fill="rgb(229,100,13)" rx="2" ry="2" />
<text  x="864.45" y="495.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (101 samples, 0.51%)</title><rect x="261.4" y="821" width="6.1" height="15.0" fill="rgb(217,109,6)" rx="2" ry="2" />
<text  x="264.45" y="831.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (101 samples, 0.51%)</title><rect x="261.4" y="901" width="6.1" height="15.0" fill="rgb(253,194,38)" rx="2" ry="2" />
<text  x="264.45" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::deallocate (43 samples, 0.22%)</title><rect x="238.9" y="373" width="2.5" height="15.0" fill="rgb(241,209,10)" rx="2" ry="2" />
<text  x="241.88" y="383.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (2 samples, 0.01%)</title><rect x="62.2" y="997" width="0.1" height="15.0" fill="rgb(252,181,40)" rx="2" ry="2" />
<text  x="65.22" y="1007.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (3 samples, 0.02%)</title><rect x="318.2" y="229" width="0.2" height="15.0" fill="rgb(241,114,46)" rx="2" ry="2" />
<text  x="321.19" y="239.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (109 samples, 0.55%)</title><rect x="238.2" y="869" width="6.5" height="15.0" fill="rgb(214,118,31)" rx="2" ry="2" />
<text  x="241.16" y="879.5" ></text>
</g>
<g >
<title>Bitmap::GetWidth (61 samples, 0.31%)</title><rect x="1158.0" y="805" width="3.6" height="15.0" fill="rgb(227,165,49)" rx="2" ry="2" />
<text  x="1160.97" y="815.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Graphics::State, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (2 samples, 0.01%)</title><rect x="874.8" y="453" width="0.2" height="15.0" fill="rgb(233,14,48)" rx="2" ry="2" />
<text  x="877.85" y="463.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2 samples, 0.01%)</title><rect x="282.8" y="469" width="0.1" height="15.0" fill="rgb(212,192,16)" rx="2" ry="2" />
<text  x="285.76" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string@plt (4 samples, 0.02%)</title><rect x="716.5" y="661" width="0.3" height="15.0" fill="rgb(235,107,54)" rx="2" ry="2" />
<text  x="719.52" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (4 samples, 0.02%)</title><rect x="1038.1" y="725" width="0.2" height="15.0" fill="rgb(212,141,15)" rx="2" ry="2" />
<text  x="1041.11" y="735.5" ></text>
</g>
<g >
<title>Scene::HasRequestedScene (4 samples, 0.02%)</title><rect x="35.8" y="997" width="0.2" height="15.0" fill="rgb(208,169,38)" rx="2" ry="2" />
<text  x="38.78" y="1007.5" ></text>
</g>
<g >
<title>Graphics::RemoveDrawable (949 samples, 4.79%)</title><rect x="891.6" y="453" width="56.5" height="15.0" fill="rgb(229,178,0)" rx="2" ry="2" />
<text  x="894.64" y="463.5" >Graph..</text>
</g>
<g >
<title>[easyrpg-player] (2 samples, 0.01%)</title><rect x="954.6" y="325" width="0.2" height="15.0" fill="rgb(225,127,47)" rx="2" ry="2" />
<text  x="957.63" y="335.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (2 samples, 0.01%)</title><rect x="106.8" y="997" width="0.1" height="15.0" fill="rgb(245,61,2)" rx="2" ry="2" />
<text  x="109.82" y="1007.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (350 samples, 1.77%)</title><rect x="267.5" y="901" width="20.8" height="15.0" fill="rgb(230,61,36)" rx="2" ry="2" />
<text  x="270.46" y="911.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.03%)</title><rect x="144.1" y="453" width="0.4" height="15.0" fill="rgb(233,189,5)" rx="2" ry="2" />
<text  x="147.15" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::deallocate (6 samples, 0.03%)</title><rect x="953.1" y="341" width="0.3" height="15.0" fill="rgb(242,20,34)" rx="2" ry="2" />
<text  x="956.08" y="351.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (29 samples, 0.15%)</title><rect x="977.8" y="469" width="1.7" height="15.0" fill="rgb(240,182,1)" rx="2" ry="2" />
<text  x="980.79" y="479.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (2 samples, 0.01%)</title><rect x="20.8" y="869" width="0.1" height="15.0" fill="rgb(234,224,54)" rx="2" ry="2" />
<text  x="23.78" y="879.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (64 samples, 0.32%)</title><rect x="175.8" y="613" width="3.8" height="15.0" fill="rgb(210,210,54)" rx="2" ry="2" />
<text  x="178.76" y="623.5" ></text>
</g>
<g >
<title>Bitmap::pixels (4 samples, 0.02%)</title><rect x="826.6" y="485" width="0.3" height="15.0" fill="rgb(219,65,8)" rx="2" ry="2" />
<text  x="829.62" y="495.5" ></text>
</g>
<g >
<title>Game_Map::Update (143 samples, 0.72%)</title><rect x="150.8" y="997" width="8.5" height="15.0" fill="rgb(229,24,2)" rx="2" ry="2" />
<text  x="153.76" y="1007.5" ></text>
</g>
<g >
<title>std::tuple&lt;Game_Picture*, std::_Placeholder&lt;1&gt; &gt;::tuple (22 samples, 0.11%)</title><rect x="701.0" y="645" width="1.3" height="15.0" fill="rgb(225,166,36)" rx="2" ry="2" />
<text  x="703.98" y="655.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (102 samples, 0.51%)</title><rect x="144.7" y="741" width="6.1" height="15.0" fill="rgb(212,149,34)" rx="2" ry="2" />
<text  x="147.68" y="751.5" ></text>
</g>
<g >
<title>pixman_image_get_width@plt (3 samples, 0.02%)</title><rect x="867.6" y="469" width="0.2" height="15.0" fill="rgb(254,98,15)" rx="2" ry="2" />
<text  x="870.58" y="479.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;int, std::allocator&lt;int&gt;, int&gt; (143 samples, 0.72%)</title><rect x="671.9" y="629" width="8.5" height="15.0" fill="rgb(218,168,11)" rx="2" ry="2" />
<text  x="674.87" y="639.5" ></text>
</g>
<g >
<title>operator delete (83 samples, 0.42%)</title><rect x="990.7" y="581" width="5.0" height="15.0" fill="rgb(217,201,43)" rx="2" ry="2" />
<text  x="993.71" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt; &gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="1177.4" y="837" width="0.1" height="15.0" fill="rgb(225,28,41)" rx="2" ry="2" />
<text  x="1180.38" y="847.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.13%)</title><rect x="1180.9" y="805" width="1.5" height="15.0" fill="rgb(253,178,21)" rx="2" ry="2" />
<text  x="1183.89" y="815.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (9 samples, 0.05%)</title><rect x="130.5" y="821" width="0.5" height="15.0" fill="rgb(206,26,17)" rx="2" ry="2" />
<text  x="133.51" y="831.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustShowParams (12 samples, 0.06%)</title><rect x="1022.4" y="757" width="0.7" height="15.0" fill="rgb(242,36,37)" rx="2" ry="2" />
<text  x="1025.39" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::end (4 samples, 0.02%)</title><rect x="980.7" y="677" width="0.2" height="15.0" fill="rgb(236,133,4)" rx="2" ry="2" />
<text  x="983.71" y="687.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::operator= (197 samples, 0.99%)</title><rect x="984.2" y="709" width="11.7" height="15.0" fill="rgb(251,101,26)" rx="2" ry="2" />
<text  x="987.16" y="719.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~tuple (3 samples, 0.02%)</title><rect x="794.6" y="501" width="0.2" height="15.0" fill="rgb(253,191,9)" rx="2" ry="2" />
<text  x="797.64" y="511.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (172 samples, 0.87%)</title><rect x="829.5" y="421" width="10.3" height="15.0" fill="rgb(211,144,9)" rx="2" ry="2" />
<text  x="832.53" y="431.5" ></text>
</g>
<g >
<title>[easyrpg-player] (2 samples, 0.01%)</title><rect x="716.8" y="661" width="0.1" height="15.0" fill="rgb(230,138,2)" rx="2" ry="2" />
<text  x="719.76" y="671.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (23 samples, 0.12%)</title><rect x="851.2" y="485" width="1.4" height="15.0" fill="rgb(214,105,33)" rx="2" ry="2" />
<text  x="854.21" y="495.5" ></text>
</g>
<g >
<title>Game_Interpreter::SetupWait (6 samples, 0.03%)</title><rect x="29.6" y="997" width="0.4" height="15.0" fill="rgb(235,119,11)" rx="2" ry="2" />
<text  x="32.65" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_S_value (12 samples, 0.06%)</title><rect x="287.3" y="357" width="0.7" height="15.0" fill="rgb(209,87,54)" rx="2" ry="2" />
<text  x="290.29" y="367.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (3 samples, 0.02%)</title><rect x="875.1" y="485" width="0.2" height="15.0" fill="rgb(208,102,19)" rx="2" ry="2" />
<text  x="878.08" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (70 samples, 0.35%)</title><rect x="747.1" y="453" width="4.2" height="15.0" fill="rgb(225,205,27)" rx="2" ry="2" />
<text  x="750.13" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (2 samples, 0.01%)</title><rect x="1177.5" y="837" width="0.1" height="15.0" fill="rgb(244,165,34)" rx="2" ry="2" />
<text  x="1180.50" y="847.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_value (3 samples, 0.02%)</title><rect x="784.5" y="453" width="0.2" height="15.0" fill="rgb(229,120,50)" rx="2" ry="2" />
<text  x="787.52" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (5 samples, 0.03%)</title><rect x="498.3" y="693" width="0.3" height="15.0" fill="rgb(220,190,51)" rx="2" ry="2" />
<text  x="501.30" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_value (4 samples, 0.02%)</title><rect x="755.7" y="437" width="0.2" height="15.0" fill="rgb(222,102,21)" rx="2" ry="2" />
<text  x="758.70" y="447.5" ></text>
</g>
<g >
<title>Sprite::SetWaverDepth (2 samples, 0.01%)</title><rect x="854.1" y="501" width="0.1" height="15.0" fill="rgb(226,32,31)" rx="2" ry="2" />
<text  x="857.12" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::capacity (5 samples, 0.03%)</title><rect x="1024.3" y="709" width="0.3" height="15.0" fill="rgb(217,64,19)" rx="2" ry="2" />
<text  x="1027.30" y="719.5" ></text>
</g>
<g >
<title>Game_Map::Update (14,210 samples, 71.70%)</title><rect x="333.1" y="869" width="846.1" height="15.0" fill="rgb(215,125,12)" rx="2" ry="2" />
<text  x="336.13" y="879.5" >Game_Map::Update</text>
</g>
<g >
<title>[libasan.so.5.0.0] (8 samples, 0.04%)</title><rect x="129.0" y="1013" width="0.4" height="15.0" fill="rgb(252,107,19)" rx="2" ry="2" />
<text  x="131.96" y="1023.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (514 samples, 2.59%)</title><rect x="294.8" y="597" width="30.7" height="15.0" fill="rgb(246,194,44)" rx="2" ry="2" />
<text  x="297.85" y="607.5" >st..</text>
</g>
<g >
<title>Bitmap::~Bitmap (254 samples, 1.28%)</title><rect x="309.6" y="341" width="15.1" height="15.0" fill="rgb(245,154,9)" rx="2" ry="2" />
<text  x="312.55" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (13 samples, 0.07%)</title><rect x="789.9" y="437" width="0.8" height="15.0" fill="rgb(241,119,12)" rx="2" ry="2" />
<text  x="792.88" y="447.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (5 samples, 0.03%)</title><rect x="860.2" y="453" width="0.3" height="15.0" fill="rgb(207,178,28)" rx="2" ry="2" />
<text  x="863.20" y="463.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (45 samples, 0.23%)</title><rect x="1018.0" y="725" width="2.7" height="15.0" fill="rgb(212,3,26)" rx="2" ry="2" />
<text  x="1020.98" y="735.5" ></text>
</g>
<g >
<title>__lru_cache_add (2 samples, 0.01%)</title><rect x="137.0" y="325" width="0.1" height="15.0" fill="rgb(224,219,24)" rx="2" ry="2" />
<text  x="140.00" y="335.5" ></text>
</g>
<g >
<title>main (515 samples, 2.60%)</title><rect x="294.8" y="981" width="30.7" height="15.0" fill="rgb(244,52,22)" rx="2" ry="2" />
<text  x="297.79" y="991.5" >main</text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_init_functor (108 samples, 0.54%)</title><rect x="695.9" y="693" width="6.4" height="15.0" fill="rgb(216,70,30)" rx="2" ry="2" />
<text  x="698.86" y="703.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (349 samples, 1.76%)</title><rect x="267.5" y="821" width="20.8" height="15.0" fill="rgb(220,84,48)" rx="2" ry="2" />
<text  x="270.52" y="831.5" ></text>
</g>
<g >
<title>Cache::Picture (277 samples, 1.40%)</title><rect x="159.3" y="661" width="16.5" height="15.0" fill="rgb(231,142,28)" rx="2" ry="2" />
<text  x="162.27" y="671.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_destroy (26 samples, 0.13%)</title><rect x="259.9" y="453" width="1.5" height="15.0" fill="rgb(231,175,40)" rx="2" ry="2" />
<text  x="262.90" y="463.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (5 samples, 0.03%)</title><rect x="599.9" y="741" width="0.3" height="15.0" fill="rgb(247,40,26)" rx="2" ry="2" />
<text  x="602.88" y="751.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::swap (9 samples, 0.05%)</title><rect x="858.6" y="469" width="0.5" height="15.0" fill="rgb(246,214,47)" rx="2" ry="2" />
<text  x="861.59" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::new_allocator (8 samples, 0.04%)</title><rect x="53.0" y="997" width="0.5" height="15.0" fill="rgb(251,80,33)" rx="2" ry="2" />
<text  x="56.05" y="1007.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::_Placeholder&lt;1&gt; &gt;::_M_head (3 samples, 0.02%)</title><rect x="967.0" y="581" width="0.2" height="15.0" fill="rgb(220,48,49)" rx="2" ry="2" />
<text  x="970.02" y="591.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (241 samples, 1.22%)</title><rect x="769.3" y="421" width="14.3" height="15.0" fill="rgb(208,152,24)" rx="2" ry="2" />
<text  x="772.28" y="431.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (3 samples, 0.02%)</title><rect x="82.5" y="997" width="0.2" height="15.0" fill="rgb(208,153,25)" rx="2" ry="2" />
<text  x="85.52" y="1007.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;BaseUi, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (8 samples, 0.04%)</title><rect x="761.6" y="485" width="0.5" height="15.0" fill="rgb(205,191,50)" rx="2" ry="2" />
<text  x="764.60" y="495.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (10 samples, 0.05%)</title><rect x="1182.4" y="885" width="0.6" height="15.0" fill="rgb(227,39,6)" rx="2" ry="2" />
<text  x="1185.44" y="895.5" ></text>
</g>
<g >
<title>std::allocator&lt;Bitmap&gt;::~allocator (9 samples, 0.05%)</title><rect x="952.0" y="325" width="0.5" height="15.0" fill="rgb(250,79,50)" rx="2" ry="2" />
<text  x="955.01" y="335.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (9 samples, 0.05%)</title><rect x="130.5" y="757" width="0.5" height="15.0" fill="rgb(241,98,9)" rx="2" ry="2" />
<text  x="133.51" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (2 samples, 0.01%)</title><rect x="113.7" y="997" width="0.1" height="15.0" fill="rgb(216,95,52)" rx="2" ry="2" />
<text  x="116.72" y="1007.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (64 samples, 0.32%)</title><rect x="175.8" y="661" width="3.8" height="15.0" fill="rgb(251,191,13)" rx="2" ry="2" />
<text  x="178.76" y="671.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (2 samples, 0.01%)</title><rect x="775.4" y="389" width="0.1" height="15.0" fill="rgb(218,184,34)" rx="2" ry="2" />
<text  x="778.35" y="399.5" ></text>
</g>
<g >
<title>perf_event_mmap (2 samples, 0.01%)</title><rect x="136.2" y="309" width="0.1" height="15.0" fill="rgb(208,132,47)" rx="2" ry="2" />
<text  x="139.23" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocator&lt;Bitmap&gt; (3 samples, 0.02%)</title><rect x="959.8" y="389" width="0.1" height="15.0" fill="rgb(226,168,45)" rx="2" ry="2" />
<text  x="962.75" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (5 samples, 0.03%)</title><rect x="592.7" y="757" width="0.3" height="15.0" fill="rgb(210,75,50)" rx="2" ry="2" />
<text  x="595.68" y="767.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.03%)</title><rect x="659.7" y="629" width="0.3" height="15.0" fill="rgb(252,64,6)" rx="2" ry="2" />
<text  x="662.72" y="639.5" ></text>
</g>
<g >
<title>Player::Update (238 samples, 1.20%)</title><rect x="244.7" y="997" width="14.1" height="15.0" fill="rgb(225,16,18)" rx="2" ry="2" />
<text  x="247.65" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Switch, std::allocator&lt;RPG::Switch&gt; &gt;::size (3 samples, 0.02%)</title><rect x="335.4" y="789" width="0.2" height="15.0" fill="rgb(211,84,49)" rx="2" ry="2" />
<text  x="338.40" y="799.5" ></text>
</g>
<g >
<title>Game_Screen::GetPicture (28 samples, 0.14%)</title><rect x="1020.7" y="757" width="1.7" height="15.0" fill="rgb(252,53,39)" rx="2" ry="2" />
<text  x="1023.72" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (3 samples, 0.02%)</title><rect x="1075.0" y="725" width="0.2" height="15.0" fill="rgb(242,225,48)" rx="2" ry="2" />
<text  x="1078.02" y="735.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (21 samples, 0.11%)</title><rect x="241.4" y="293" width="1.3" height="15.0" fill="rgb(212,126,23)" rx="2" ry="2" />
<text  x="244.44" y="303.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (20 samples, 0.10%)</title><rect x="237.0" y="741" width="1.2" height="15.0" fill="rgb(248,9,22)" rx="2" ry="2" />
<text  x="239.97" y="751.5" ></text>
</g>
<g >
<title>__do_page_fault (8 samples, 0.04%)</title><rect x="136.6" y="389" width="0.5" height="15.0" fill="rgb(240,36,20)" rx="2" ry="2" />
<text  x="139.65" y="399.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (164 samples, 0.83%)</title><rect x="986.1" y="693" width="9.8" height="15.0" fill="rgb(207,130,25)" rx="2" ry="2" />
<text  x="989.13" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;@plt (3 samples, 0.02%)</title><rect x="738.6" y="453" width="0.1" height="15.0" fill="rgb(212,136,50)" rx="2" ry="2" />
<text  x="741.55" y="463.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="624.1" y="565" width="0.2" height="15.0" fill="rgb(234,188,10)" rx="2" ry="2" />
<text  x="627.05" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (85 samples, 0.43%)</title><rect x="674.6" y="581" width="5.1" height="15.0" fill="rgb(218,211,51)" rx="2" ry="2" />
<text  x="677.61" y="591.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (12 samples, 0.06%)</title><rect x="81.8" y="997" width="0.7" height="15.0" fill="rgb(211,190,0)" rx="2" ry="2" />
<text  x="84.81" y="1007.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (43 samples, 0.22%)</title><rect x="305.7" y="325" width="2.6" height="15.0" fill="rgb(244,78,7)" rx="2" ry="2" />
<text  x="308.74" y="335.5" ></text>
</g>
<g >
<title>operator new (79 samples, 0.40%)</title><rect x="664.2" y="613" width="4.7" height="15.0" fill="rgb(248,61,4)" rx="2" ry="2" />
<text  x="667.25" y="623.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_M_head (2 samples, 0.01%)</title><rect x="787.9" y="373" width="0.1" height="15.0" fill="rgb(227,140,47)" rx="2" ry="2" />
<text  x="790.85" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::get (5 samples, 0.03%)</title><rect x="109.8" y="997" width="0.3" height="15.0" fill="rgb(238,223,47)" rx="2" ry="2" />
<text  x="112.79" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (40 samples, 0.20%)</title><rect x="975.1" y="453" width="2.3" height="15.0" fill="rgb(228,60,46)" rx="2" ry="2" />
<text  x="978.05" y="463.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (4 samples, 0.02%)</title><rect x="326.2" y="709" width="0.3" height="15.0" fill="rgb(231,105,7)" rx="2" ry="2" />
<text  x="329.23" y="719.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (48 samples, 0.24%)</title><rect x="151.2" y="533" width="2.8" height="15.0" fill="rgb(221,24,22)" rx="2" ry="2" />
<text  x="154.17" y="543.5" ></text>
</g>
<g >
<title>operator delete (55 samples, 0.28%)</title><rect x="716.9" y="661" width="3.3" height="15.0" fill="rgb(250,219,20)" rx="2" ry="2" />
<text  x="719.88" y="671.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (5 samples, 0.03%)</title><rect x="292.6" y="837" width="0.3" height="15.0" fill="rgb(214,171,28)" rx="2" ry="2" />
<text  x="295.65" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (281 samples, 1.42%)</title><rect x="1096.6" y="773" width="16.7" height="15.0" fill="rgb(241,156,15)" rx="2" ry="2" />
<text  x="1099.58" y="783.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (5 samples, 0.03%)</title><rect x="62.3" y="997" width="0.3" height="15.0" fill="rgb(206,100,15)" rx="2" ry="2" />
<text  x="65.34" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;Drawable* const&gt;::_Iter_equals_val (7 samples, 0.04%)</title><rect x="50.5" y="997" width="0.4" height="15.0" fill="rgb(244,15,25)" rx="2" ry="2" />
<text  x="53.49" y="1007.5" ></text>
</g>
<g >
<title>try_charge (3 samples, 0.02%)</title><rect x="302.9" y="341" width="0.2" height="15.0" fill="rgb(206,105,45)" rx="2" ry="2" />
<text  x="305.95" y="351.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (20 samples, 0.10%)</title><rect x="237.0" y="773" width="1.2" height="15.0" fill="rgb(220,143,33)" rx="2" ry="2" />
<text  x="239.97" y="783.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (4,048 samples, 20.43%)</title><rect x="726.8" y="645" width="241.0" height="15.0" fill="rgb(243,182,34)" rx="2" ry="2" />
<text  x="729.82" y="655.5" >std::_Bind&lt;std::_Mem_fn&lt;void (Ga..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (68 samples, 0.34%)</title><rect x="653.6" y="613" width="4.0" height="15.0" fill="rgb(249,23,51)" rx="2" ry="2" />
<text  x="656.59" y="623.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_M_head (2 samples, 0.01%)</title><rect x="64.4" y="997" width="0.1" height="15.0" fill="rgb(231,197,51)" rx="2" ry="2" />
<text  x="67.42" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.03%)</title><rect x="699.8" y="581" width="0.3" height="15.0" fill="rgb(223,150,4)" rx="2" ry="2" />
<text  x="702.79" y="591.5" ></text>
</g>
<g >
<title>Scene::IsAsyncPending (3 samples, 0.02%)</title><rect x="1183.0" y="917" width="0.2" height="15.0" fill="rgb(209,211,29)" rx="2" ry="2" />
<text  x="1186.03" y="927.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (4,075 samples, 20.56%)</title><rect x="725.6" y="677" width="242.7" height="15.0" fill="rgb(216,206,43)" rx="2" ry="2" />
<text  x="728.63" y="687.5" >std::function&lt;void (FileRequestR..</text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (4 samples, 0.02%)</title><rect x="1021.9" y="677" width="0.3" height="15.0" fill="rgb(252,219,50)" rx="2" ry="2" />
<text  x="1024.91" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (3 samples, 0.02%)</title><rect x="1034.5" y="757" width="0.2" height="15.0" fill="rgb(205,108,25)" rx="2" ry="2" />
<text  x="1037.54" y="767.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (101 samples, 0.51%)</title><rect x="261.4" y="645" width="6.1" height="15.0" fill="rgb(213,191,10)" rx="2" ry="2" />
<text  x="264.45" y="655.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (1,304 samples, 6.58%)</title><rect x="159.3" y="885" width="77.6" height="15.0" fill="rgb(243,152,42)" rx="2" ry="2" />
<text  x="162.27" y="895.5" >Game_Pic..</text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (49 samples, 0.25%)</title><rect x="264.4" y="549" width="2.9" height="15.0" fill="rgb(218,18,10)" rx="2" ry="2" />
<text  x="267.36" y="559.5" ></text>
</g>
<g >
<title>__interceptor_free (62 samples, 0.31%)</title><rect x="321.0" y="309" width="3.7" height="15.0" fill="rgb(214,52,37)" rx="2" ry="2" />
<text  x="323.99" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (9 samples, 0.05%)</title><rect x="1178.6" y="821" width="0.6" height="15.0" fill="rgb(210,6,10)" rx="2" ry="2" />
<text  x="1181.63" y="831.5" ></text>
</g>
<g >
<title>std::_Bit_iterator::operator* (4 samples, 0.02%)</title><rect x="335.8" y="773" width="0.3" height="15.0" fill="rgb(239,24,14)" rx="2" ry="2" />
<text  x="338.81" y="783.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (107 samples, 0.54%)</title><rect x="752.0" y="469" width="6.3" height="15.0" fill="rgb(242,93,34)" rx="2" ry="2" />
<text  x="754.95" y="479.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (143 samples, 0.72%)</title><rect x="150.8" y="933" width="8.5" height="15.0" fill="rgb(247,122,38)" rx="2" ry="2" />
<text  x="153.76" y="943.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_M_head (3 samples, 0.02%)</title><rect x="778.8" y="373" width="0.2" height="15.0" fill="rgb(215,197,31)" rx="2" ry="2" />
<text  x="781.80" y="383.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (24 samples, 0.12%)</title><rect x="677.9" y="501" width="1.4" height="15.0" fill="rgb(243,154,5)" rx="2" ry="2" />
<text  x="680.88" y="511.5" ></text>
</g>
<g >
<title>Scene_Map::Update (14,225 samples, 71.78%)</title><rect x="333.1" y="901" width="847.0" height="15.0" fill="rgb(227,142,23)" rx="2" ry="2" />
<text  x="336.07" y="911.5" >Scene_Map::Update</text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (3 samples, 0.02%)</title><rect x="81.5" y="997" width="0.1" height="15.0" fill="rgb(205,143,16)" rx="2" ry="2" />
<text  x="84.45" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (205 samples, 1.03%)</title><rect x="647.8" y="693" width="12.2" height="15.0" fill="rgb(206,109,8)" rx="2" ry="2" />
<text  x="650.81" y="703.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (35 samples, 0.18%)</title><rect x="1009.8" y="709" width="2.1" height="15.0" fill="rgb(253,28,9)" rx="2" ry="2" />
<text  x="1012.77" y="719.5" ></text>
</g>
<g >
<title>Bitmap::GetHeight (5 samples, 0.03%)</title><rect x="1002.3" y="725" width="0.3" height="15.0" fill="rgb(244,24,15)" rx="2" ry="2" />
<text  x="1005.26" y="735.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, FileRequestResult*&amp;&amp;&gt; (4 samples, 0.02%)</title><rect x="728.2" y="597" width="0.2" height="15.0" fill="rgb(242,56,31)" rx="2" ry="2" />
<text  x="731.19" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base (6 samples, 0.03%)</title><rect x="743.7" y="453" width="0.4" height="15.0" fill="rgb(224,104,19)" rx="2" ry="2" />
<text  x="746.73" y="463.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocator&lt;int&gt; (12 samples, 0.06%)</title><rect x="92.2" y="997" width="0.7" height="15.0" fill="rgb(207,219,18)" rx="2" ry="2" />
<text  x="95.17" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (104 samples, 0.52%)</title><rect x="704.0" y="629" width="6.2" height="15.0" fill="rgb(211,158,31)" rx="2" ry="2" />
<text  x="707.02" y="639.5" ></text>
</g>
<g >
<title>std::swap&lt;bool (*)(std::_Any_data&amp;, std::_Any_data const&amp;, std::_Manager_operation)&gt; (18 samples, 0.09%)</title><rect x="682.5" y="581" width="1.1" height="15.0" fill="rgb(232,1,54)" rx="2" ry="2" />
<text  x="685.52" y="591.5" ></text>
</g>
<g >
<title>copy_page_to_iter (2 samples, 0.01%)</title><rect x="20.8" y="853" width="0.1" height="15.0" fill="rgb(214,66,9)" rx="2" ry="2" />
<text  x="23.78" y="863.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (5 samples, 0.03%)</title><rect x="997.0" y="725" width="0.3" height="15.0" fill="rgb(219,67,39)" rx="2" ry="2" />
<text  x="1000.02" y="735.5" ></text>
</g>
<g >
<title>[unknown] (/tmp/.gl2vjlOE (2 samples, 0.01%)</title><rect x="130.0" y="1013" width="0.2" height="15.0" fill="rgb(224,137,12)" rx="2" ry="2" />
<text  x="133.04" y="1023.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (5 samples, 0.03%)</title><rect x="844.4" y="485" width="0.3" height="15.0" fill="rgb(217,119,3)" rx="2" ry="2" />
<text  x="847.36" y="495.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (15 samples, 0.08%)</title><rect x="789.8" y="453" width="0.9" height="15.0" fill="rgb(244,189,35)" rx="2" ry="2" />
<text  x="792.76" y="463.5" ></text>
</g>
<g >
<title>Drawable::GetPriorityForMapLayer (13 samples, 0.07%)</title><rect x="843.3" y="501" width="0.8" height="15.0" fill="rgb(247,57,25)" rx="2" ry="2" />
<text  x="846.35" y="511.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::function (55 samples, 0.28%)</title><rect x="682.1" y="613" width="3.3" height="15.0" fill="rgb(210,203,31)" rx="2" ry="2" />
<text  x="685.11" y="623.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (102 samples, 0.51%)</title><rect x="144.7" y="981" width="6.1" height="15.0" fill="rgb(237,216,8)" rx="2" ry="2" />
<text  x="147.68" y="991.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__weak_ptr (2 samples, 0.01%)</title><rect x="89.8" y="997" width="0.1" height="15.0" fill="rgb(210,117,7)" rx="2" ry="2" />
<text  x="92.79" y="1007.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (6 samples, 0.03%)</title><rect x="137.1" y="421" width="0.4" height="15.0" fill="rgb(243,18,20)" rx="2" ry="2" />
<text  x="140.12" y="431.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (20 samples, 0.10%)</title><rect x="237.0" y="597" width="1.2" height="15.0" fill="rgb(241,195,9)" rx="2" ry="2" />
<text  x="239.97" y="607.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="646.9" y="485" width="0.1" height="15.0" fill="rgb(239,181,31)" rx="2" ry="2" />
<text  x="649.86" y="495.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (1,304 samples, 6.58%)</title><rect x="159.3" y="853" width="77.6" height="15.0" fill="rgb(252,177,11)" rx="2" ry="2" />
<text  x="162.27" y="863.5" >FileRequ..</text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;Drawable* const*, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; (8 samples, 0.04%)</title><rect x="939.9" y="421" width="0.5" height="15.0" fill="rgb(233,160,32)" rx="2" ry="2" />
<text  x="942.92" y="431.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Graphics::State, (__gnu_cxx::_Lock_policy)2&gt;::get (2 samples, 0.01%)</title><rect x="874.8" y="437" width="0.2" height="15.0" fill="rgb(252,68,33)" rx="2" ry="2" />
<text  x="877.85" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (2 samples, 0.01%)</title><rect x="1037.5" y="725" width="0.1" height="15.0" fill="rgb(236,16,1)" rx="2" ry="2" />
<text  x="1040.51" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (41 samples, 0.21%)</title><rect x="781.0" y="389" width="2.4" height="15.0" fill="rgb(212,217,3)" rx="2" ry="2" />
<text  x="784.01" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::base (2 samples, 0.01%)</title><rect x="1149.3" y="821" width="0.2" height="15.0" fill="rgb(241,140,41)" rx="2" ry="2" />
<text  x="1152.33" y="831.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (3 samples, 0.02%)</title><rect x="1180.5" y="789" width="0.2" height="15.0" fill="rgb(210,57,51)" rx="2" ry="2" />
<text  x="1183.47" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (5 samples, 0.03%)</title><rect x="116.0" y="997" width="0.3" height="15.0" fill="rgb(228,168,50)" rx="2" ry="2" />
<text  x="119.04" y="1007.5" ></text>
</g>
<g >
<title>std::min&lt;int&gt; (3 samples, 0.02%)</title><rect x="601.0" y="757" width="0.1" height="15.0" fill="rgb(231,11,25)" rx="2" ry="2" />
<text  x="603.95" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (38 samples, 0.19%)</title><rect x="624.7" y="677" width="2.2" height="15.0" fill="rgb(250,25,22)" rx="2" ry="2" />
<text  x="627.65" y="687.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Game_Picture*, false&gt;::_Head_base&lt;Game_Picture*&amp;&gt; (7 samples, 0.04%)</title><rect x="688.7" y="645" width="0.4" height="15.0" fill="rgb(251,215,32)" rx="2" ry="2" />
<text  x="691.66" y="655.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (4 samples, 0.02%)</title><rect x="738.3" y="437" width="0.3" height="15.0" fill="rgb(253,51,50)" rx="2" ry="2" />
<text  x="741.32" y="447.5" ></text>
</g>
<g >
<title>std::min&lt;int&gt; (7 samples, 0.04%)</title><rect x="1033.9" y="757" width="0.5" height="15.0" fill="rgb(239,43,35)" rx="2" ry="2" />
<text  x="1036.94" y="767.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="286.2" y="517" width="0.2" height="15.0" fill="rgb(241,228,18)" rx="2" ry="2" />
<text  x="289.16" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::~_Vector_base (5 samples, 0.03%)</title><rect x="75.0" y="997" width="0.3" height="15.0" fill="rgb(226,33,8)" rx="2" ry="2" />
<text  x="78.02" y="1007.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (7 samples, 0.04%)</title><rect x="859.2" y="501" width="0.4" height="15.0" fill="rgb(248,170,40)" rx="2" ry="2" />
<text  x="862.19" y="511.5" ></text>
</g>
<g >
<title>Game_Screen::GetFlashColor (8 samples, 0.04%)</title><rect x="1003.9" y="725" width="0.4" height="15.0" fill="rgb(236,162,4)" rx="2" ry="2" />
<text  x="1006.87" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (5 samples, 0.03%)</title><rect x="499.4" y="693" width="0.3" height="15.0" fill="rgb(235,226,0)" rx="2" ry="2" />
<text  x="502.37" y="703.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.02%)</title><rect x="646.9" y="597" width="0.1" height="15.0" fill="rgb(207,161,1)" rx="2" ry="2" />
<text  x="649.86" y="607.5" ></text>
</g>
<g >
<title>Sprite::SetTone (19 samples, 0.10%)</title><rect x="853.0" y="501" width="1.1" height="15.0" fill="rgb(232,99,12)" rx="2" ry="2" />
<text  x="855.99" y="511.5" ></text>
</g>
<g >
<title>std::map&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, (anonymous namespace)::CacheItem, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (435 samples, 2.19%)</title><rect x="762.6" y="501" width="25.9" height="15.0" fill="rgb(252,122,37)" rx="2" ry="2" />
<text  x="765.61" y="511.5" >s..</text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::~function (157 samples, 0.79%)</title><rect x="970.4" y="565" width="9.3" height="15.0" fill="rgb(245,3,8)" rx="2" ry="2" />
<text  x="973.35" y="575.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (38 samples, 0.19%)</title><rect x="1014.3" y="725" width="2.3" height="15.0" fill="rgb(218,8,9)" rx="2" ry="2" />
<text  x="1017.29" y="735.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (102 samples, 0.51%)</title><rect x="144.7" y="917" width="6.1" height="15.0" fill="rgb(250,101,0)" rx="2" ry="2" />
<text  x="147.68" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (74 samples, 0.37%)</title><rect x="1108.9" y="757" width="4.4" height="15.0" fill="rgb(232,137,42)" rx="2" ry="2" />
<text  x="1111.90" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (39 samples, 0.20%)</title><rect x="1034.7" y="757" width="2.3" height="15.0" fill="rgb(251,36,41)" rx="2" ry="2" />
<text  x="1037.71" y="767.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.05%)</title><rect x="1019.9" y="677" width="0.6" height="15.0" fill="rgb(249,227,45)" rx="2" ry="2" />
<text  x="1022.95" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (2 samples, 0.01%)</title><rect x="844.5" y="469" width="0.2" height="15.0" fill="rgb(230,166,21)" rx="2" ry="2" />
<text  x="847.54" y="479.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;*, std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="959.2" y="309" width="0.1" height="15.0" fill="rgb(217,222,38)" rx="2" ry="2" />
<text  x="962.16" y="319.5" ></text>
</g>
<g >
<title>__vm_munmap (3 samples, 0.02%)</title><rect x="646.9" y="549" width="0.1" height="15.0" fill="rgb(215,183,39)" rx="2" ry="2" />
<text  x="649.86" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (2 samples, 0.01%)</title><rect x="861.3" y="485" width="0.1" height="15.0" fill="rgb(251,179,11)" rx="2" ry="2" />
<text  x="864.33" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (18 samples, 0.09%)</title><rect x="143.4" y="517" width="1.1" height="15.0" fill="rgb(226,188,33)" rx="2" ry="2" />
<text  x="146.43" y="527.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (4 samples, 0.02%)</title><rect x="1154.0" y="805" width="0.2" height="15.0" fill="rgb(221,228,20)" rx="2" ry="2" />
<text  x="1156.98" y="815.5" ></text>
</g>
<g >
<title>get_unmapped_area (5 samples, 0.03%)</title><rect x="135.9" y="325" width="0.3" height="15.0" fill="rgb(230,118,45)" rx="2" ry="2" />
<text  x="138.93" y="335.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (36 samples, 0.18%)</title><rect x="1014.4" y="693" width="2.2" height="15.0" fill="rgb(237,65,18)" rx="2" ry="2" />
<text  x="1017.41" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string@plt (2 samples, 0.01%)</title><rect x="739.0" y="453" width="0.1" height="15.0" fill="rgb(236,33,15)" rx="2" ry="2" />
<text  x="741.97" y="463.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__weak_ptr&lt;int, void&gt; (16 samples, 0.08%)</title><rect x="685.9" y="677" width="1.0" height="15.0" fill="rgb(219,216,23)" rx="2" ry="2" />
<text  x="688.92" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (4 samples, 0.02%)</title><rect x="737.1" y="437" width="0.2" height="15.0" fill="rgb(228,43,11)" rx="2" ry="2" />
<text  x="740.07" y="447.5" ></text>
</g>
<g >
<title>Sprite::BlitScreen (10 samples, 0.05%)</title><rect x="331.0" y="837" width="0.6" height="15.0" fill="rgb(249,8,28)" rx="2" ry="2" />
<text  x="334.05" y="847.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Game_Picture*, false&gt;::_M_head (14 samples, 0.07%)</title><rect x="62.9" y="997" width="0.8" height="15.0" fill="rgb(205,54,39)" rx="2" ry="2" />
<text  x="65.87" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (34 samples, 0.17%)</title><rect x="159.6" y="533" width="2.1" height="15.0" fill="rgb(231,192,44)" rx="2" ry="2" />
<text  x="162.63" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (7 samples, 0.04%)</title><rect x="1103.4" y="741" width="0.4" height="15.0" fill="rgb(242,229,51)" rx="2" ry="2" />
<text  x="1106.37" y="751.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (253 samples, 1.28%)</title><rect x="270.6" y="549" width="15.0" height="15.0" fill="rgb(241,141,28)" rx="2" ry="2" />
<text  x="273.56" y="559.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (260 samples, 1.31%)</title><rect x="309.2" y="453" width="15.5" height="15.0" fill="rgb(248,41,24)" rx="2" ry="2" />
<text  x="312.20" y="463.5" ></text>
</g>
<g >
<title>Game_Map::Update (350 samples, 1.77%)</title><rect x="267.5" y="981" width="20.8" height="15.0" fill="rgb(243,88,47)" rx="2" ry="2" />
<text  x="270.46" y="991.5" ></text>
</g>
<g >
<title>Player::Run (109 samples, 0.55%)</title><rect x="238.2" y="997" width="6.5" height="15.0" fill="rgb(208,143,19)" rx="2" ry="2" />
<text  x="241.16" y="1007.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (109 samples, 0.55%)</title><rect x="238.2" y="821" width="6.5" height="15.0" fill="rgb(232,58,5)" rx="2" ry="2" />
<text  x="241.16" y="831.5" ></text>
</g>
<g >
<title>Sprite::SetZoomY (2 samples, 0.01%)</title><rect x="1007.0" y="725" width="0.1" height="15.0" fill="rgb(228,49,4)" rx="2" ry="2" />
<text  x="1010.03" y="735.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (9 samples, 0.05%)</title><rect x="130.5" y="581" width="0.5" height="15.0" fill="rgb(241,59,8)" rx="2" ry="2" />
<text  x="133.51" y="591.5" ></text>
</g>
<g >
<title>operator delete (99 samples, 0.50%)</title><rect x="641.5" y="709" width="5.9" height="15.0" fill="rgb(225,146,44)" rx="2" ry="2" />
<text  x="644.50" y="719.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Game_Screen*, false&gt;::_M_head (4 samples, 0.02%)</title><rect x="63.7" y="997" width="0.2" height="15.0" fill="rgb(205,172,3)" rx="2" ry="2" />
<text  x="66.71" y="1007.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (3,994 samples, 20.15%)</title><rect x="728.7" y="581" width="237.8" height="15.0" fill="rgb(251,5,10)" rx="2" ry="2" />
<text  x="731.67" y="591.5" >std::_Mem_fn_base&lt;void (Game_Pi..</text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator++ (2 samples, 0.01%)</title><rect x="1179.3" y="805" width="0.1" height="15.0" fill="rgb(210,44,45)" rx="2" ry="2" />
<text  x="1182.28" y="815.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (238 samples, 1.20%)</title><rect x="244.7" y="725" width="14.1" height="15.0" fill="rgb(242,31,46)" rx="2" ry="2" />
<text  x="247.65" y="735.5" ></text>
</g>
<g >
<title>std::forward&lt;std::_Placeholder&lt;1&gt; &gt; (3 samples, 0.02%)</title><rect x="95.6" y="997" width="0.2" height="15.0" fill="rgb(236,4,25)" rx="2" ry="2" />
<text  x="98.62" y="1007.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (2 samples, 0.01%)</title><rect x="995.5" y="517" width="0.1" height="15.0" fill="rgb(205,33,17)" rx="2" ry="2" />
<text  x="998.48" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (103 samples, 0.52%)</title><rect x="412.7" y="773" width="6.1" height="15.0" fill="rgb(252,175,26)" rx="2" ry="2" />
<text  x="415.68" y="783.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;Drawable* const&gt; &gt; (695 samples, 3.51%)</title><rect x="896.2" y="405" width="41.3" height="15.0" fill="rgb(211,25,8)" rx="2" ry="2" />
<text  x="899.16" y="415.5" >std..</text>
</g>
<g >
<title>__x64_sys_nanosleep (26 samples, 0.13%)</title><rect x="1180.9" y="773" width="1.5" height="15.0" fill="rgb(251,33,45)" rx="2" ry="2" />
<text  x="1183.89" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator++ (4 samples, 0.02%)</title><rect x="736.3" y="469" width="0.2" height="15.0" fill="rgb(235,19,51)" rx="2" ry="2" />
<text  x="739.29" y="479.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*&gt; (4 samples, 0.02%)</title><rect x="60.7" y="997" width="0.3" height="15.0" fill="rgb(211,79,44)" rx="2" ry="2" />
<text  x="63.73" y="1007.5" ></text>
</g>
<g >
<title>arch_get_unmapped_area_topdown (5 samples, 0.03%)</title><rect x="135.9" y="309" width="0.3" height="15.0" fill="rgb(238,73,53)" rx="2" ry="2" />
<text  x="138.93" y="319.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Set (481 samples, 2.43%)</title><rect x="554.0" y="757" width="28.7" height="15.0" fill="rgb(206,88,36)" rx="2" ry="2" />
<text  x="557.03" y="767.5" >Ga..</text>
</g>
<g >
<title>__memcpy_sse2_unaligned (7 samples, 0.04%)</title><rect x="722.1" y="629" width="0.4" height="15.0" fill="rgb(243,18,44)" rx="2" ry="2" />
<text  x="725.12" y="639.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (101 samples, 0.51%)</title><rect x="261.4" y="869" width="6.1" height="15.0" fill="rgb(241,149,4)" rx="2" ry="2" />
<text  x="264.45" y="879.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (32 samples, 0.16%)</title><rect x="1014.5" y="661" width="1.9" height="15.0" fill="rgb(206,166,36)" rx="2" ry="2" />
<text  x="1017.53" y="671.5" ></text>
</g>
<g >
<title>Game_Picture::Show (238 samples, 1.20%)</title><rect x="244.7" y="837" width="14.1" height="15.0" fill="rgb(235,110,19)" rx="2" ry="2" />
<text  x="247.65" y="847.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (2 samples, 0.01%)</title><rect x="1179.3" y="789" width="0.1" height="15.0" fill="rgb(238,210,40)" rx="2" ry="2" />
<text  x="1182.28" y="799.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (349 samples, 1.76%)</title><rect x="267.5" y="661" width="20.8" height="15.0" fill="rgb(248,152,13)" rx="2" ry="2" />
<text  x="270.52" y="671.5" ></text>
</g>
<g >
<title>Sprite::SetY (2 samples, 0.01%)</title><rect x="854.3" y="501" width="0.1" height="15.0" fill="rgb(233,174,8)" rx="2" ry="2" />
<text  x="857.30" y="511.5" ></text>
</g>
<g >
<title>Color::Color (4 samples, 0.02%)</title><rect x="1162.7" y="805" width="0.2" height="15.0" fill="rgb(253,208,16)" rx="2" ry="2" />
<text  x="1165.67" y="815.5" ></text>
</g>
<g >
<title>page_fault (70 samples, 0.35%)</title><rect x="299.1" y="453" width="4.2" height="15.0" fill="rgb(222,86,21)" rx="2" ry="2" />
<text  x="302.14" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (17 samples, 0.09%)</title><rect x="338.3" y="805" width="1.0" height="15.0" fill="rgb(206,75,44)" rx="2" ry="2" />
<text  x="341.31" y="815.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt;::~_Sp_counted_ptr_inplace (5 samples, 0.03%)</title><rect x="71.8" y="997" width="0.3" height="15.0" fill="rgb(253,102,41)" rx="2" ry="2" />
<text  x="74.80" y="1007.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (9 samples, 0.05%)</title><rect x="1008.2" y="725" width="0.5" height="15.0" fill="rgb(228,78,54)" rx="2" ry="2" />
<text  x="1011.16" y="735.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::~__allocated_ptr (91 samples, 0.46%)</title><rect x="990.2" y="629" width="5.5" height="15.0" fill="rgb(216,20,30)" rx="2" ry="2" />
<text  x="993.24" y="639.5" ></text>
</g>
<g >
<title>Sdl2Ui::ProcessActiveEvent (39 samples, 0.20%)</title><rect x="1180.1" y="869" width="2.3" height="15.0" fill="rgb(245,105,14)" rx="2" ry="2" />
<text  x="1183.12" y="879.5" ></text>
</g>
<g >
<title>operator delete (13 samples, 0.07%)</title><rect x="324.7" y="469" width="0.8" height="15.0" fill="rgb(228,138,18)" rx="2" ry="2" />
<text  x="327.68" y="479.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (20 samples, 0.10%)</title><rect x="237.0" y="693" width="1.2" height="15.0" fill="rgb(239,164,6)" rx="2" ry="2" />
<text  x="239.97" y="703.5" ></text>
</g>
<g >
<title>operator delete (72 samples, 0.36%)</title><rect x="960.0" y="469" width="4.3" height="15.0" fill="rgb(207,132,46)" rx="2" ry="2" />
<text  x="962.99" y="479.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (58 samples, 0.29%)</title><rect x="305.7" y="421" width="3.5" height="15.0" fill="rgb(247,118,1)" rx="2" ry="2" />
<text  x="308.74" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (4 samples, 0.02%)</title><rect x="1021.1" y="709" width="0.2" height="15.0" fill="rgb(210,210,32)" rx="2" ry="2" />
<text  x="1024.08" y="719.5" ></text>
</g>
<g >
<title>page_fault (5 samples, 0.03%)</title><rect x="137.7" y="453" width="0.3" height="15.0" fill="rgb(209,14,9)" rx="2" ry="2" />
<text  x="140.66" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (49 samples, 0.25%)</title><rect x="264.4" y="389" width="2.9" height="15.0" fill="rgb(239,200,31)" rx="2" ry="2" />
<text  x="267.36" y="399.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (5 samples, 0.03%)</title><rect x="1021.9" y="693" width="0.3" height="15.0" fill="rgb(218,85,33)" rx="2" ry="2" />
<text  x="1024.85" y="703.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (2 samples, 0.01%)</title><rect x="128.5" y="981" width="0.2" height="15.0" fill="rgb(207,132,43)" rx="2" ry="2" />
<text  x="131.55" y="991.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_destroy (43 samples, 0.22%)</title><rect x="951.1" y="389" width="2.6" height="15.0" fill="rgb(240,156,40)" rx="2" ry="2" />
<text  x="954.12" y="399.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Impl::_Impl (2 samples, 0.01%)</title><rect x="674.0" y="597" width="0.1" height="15.0" fill="rgb(219,185,51)" rx="2" ry="2" />
<text  x="676.95" y="607.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (102 samples, 0.51%)</title><rect x="144.7" y="757" width="6.1" height="15.0" fill="rgb(216,99,1)" rx="2" ry="2" />
<text  x="147.68" y="767.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.02%)</title><rect x="159.4" y="501" width="0.2" height="15.0" fill="rgb(234,19,46)" rx="2" ry="2" />
<text  x="162.45" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::operator* (2 samples, 0.01%)</title><rect x="1148.7" y="837" width="0.2" height="15.0" fill="rgb(213,68,29)" rx="2" ry="2" />
<text  x="1151.74" y="847.5" ></text>
</g>
<g >
<title>finish_task_switch (56 samples, 0.28%)</title><rect x="17.1" y="869" width="3.4" height="15.0" fill="rgb(245,60,46)" rx="2" ry="2" />
<text  x="20.15" y="879.5" ></text>
</g>
<g >
<title>Bitmap::Init (23 samples, 0.12%)</title><rect x="834.0" y="341" width="1.4" height="15.0" fill="rgb(239,221,15)" rx="2" ry="2" />
<text  x="837.00" y="351.5" ></text>
</g>
<g >
<title>Blend (8 samples, 0.04%)</title><rect x="1002.7" y="725" width="0.5" height="15.0" fill="rgb(245,177,43)" rx="2" ry="2" />
<text  x="1005.68" y="735.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (20 samples, 0.10%)</title><rect x="237.0" y="645" width="1.2" height="15.0" fill="rgb(224,5,42)" rx="2" ry="2" />
<text  x="239.97" y="655.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (2 samples, 0.01%)</title><rect x="124.3" y="997" width="0.1" height="15.0" fill="rgb(233,27,10)" rx="2" ry="2" />
<text  x="127.26" y="1007.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (2 samples, 0.01%)</title><rect x="137.0" y="341" width="0.1" height="15.0" fill="rgb(239,208,14)" rx="2" ry="2" />
<text  x="140.00" y="351.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.03%)</title><rect x="326.6" y="997" width="0.4" height="15.0" fill="rgb(238,82,52)" rx="2" ry="2" />
<text  x="329.64" y="1007.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (166 samples, 0.84%)</title><rect x="131.0" y="661" width="9.9" height="15.0" fill="rgb(221,222,48)" rx="2" ry="2" />
<text  x="134.05" y="671.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Sprite*, false&gt;::_M_head (5 samples, 0.03%)</title><rect x="1174.5" y="709" width="0.3" height="15.0" fill="rgb(247,141,40)" rx="2" ry="2" />
<text  x="1177.52" y="719.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="646.7" y="485" width="0.2" height="15.0" fill="rgb(206,15,50)" rx="2" ry="2" />
<text  x="649.74" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (2 samples, 0.01%)</title><rect x="78.2" y="997" width="0.1" height="15.0" fill="rgb(214,49,23)" rx="2" ry="2" />
<text  x="81.18" y="1007.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_init_functor (103 samples, 0.52%)</title><rect x="696.2" y="677" width="6.1" height="15.0" fill="rgb(233,38,19)" rx="2" ry="2" />
<text  x="699.16" y="687.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (2 samples, 0.01%)</title><rect x="1076.0" y="773" width="0.1" height="15.0" fill="rgb(241,114,32)" rx="2" ry="2" />
<text  x="1078.98" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (6 samples, 0.03%)</title><rect x="787.1" y="389" width="0.3" height="15.0" fill="rgb(244,87,9)" rx="2" ry="2" />
<text  x="790.08" y="399.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (43 samples, 0.22%)</title><rect x="993.1" y="549" width="2.6" height="15.0" fill="rgb(224,164,53)" rx="2" ry="2" />
<text  x="996.10" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::operator[] (4 samples, 0.02%)</title><rect x="116.5" y="997" width="0.2" height="15.0" fill="rgb(244,97,52)" rx="2" ry="2" />
<text  x="119.46" y="1007.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (5 samples, 0.03%)</title><rect x="292.6" y="901" width="0.3" height="15.0" fill="rgb(247,109,15)" rx="2" ry="2" />
<text  x="295.65" y="911.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::~_Vector_base (2 samples, 0.01%)</title><rect x="958.9" y="325" width="0.1" height="15.0" fill="rgb(231,53,45)" rx="2" ry="2" />
<text  x="961.92" y="335.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::__allocated_ptr (4 samples, 0.02%)</title><rect x="990.0" y="629" width="0.2" height="15.0" fill="rgb(210,29,24)" rx="2" ry="2" />
<text  x="993.00" y="639.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Picture*, std::_Placeholder&lt;1&gt; &gt;::_M_head (2 samples, 0.01%)</title><rect x="966.7" y="581" width="0.1" height="15.0" fill="rgb(245,129,42)" rx="2" ry="2" />
<text  x="969.66" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="1180.7" y="725" width="0.1" height="15.0" fill="rgb(210,188,4)" rx="2" ry="2" />
<text  x="1183.65" y="735.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (8 samples, 0.04%)</title><rect x="823.4" y="453" width="0.5" height="15.0" fill="rgb(244,187,38)" rx="2" ry="2" />
<text  x="826.40" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::deallocate (26 samples, 0.13%)</title><rect x="259.9" y="421" width="1.5" height="15.0" fill="rgb(213,112,11)" rx="2" ry="2" />
<text  x="262.90" y="431.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_ptr (2 samples, 0.01%)</title><rect x="672.7" y="613" width="0.1" height="15.0" fill="rgb(233,111,8)" rx="2" ry="2" />
<text  x="675.70" y="623.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (58 samples, 0.29%)</title><rect x="141.1" y="693" width="3.4" height="15.0" fill="rgb(247,27,19)" rx="2" ry="2" />
<text  x="144.05" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_ptr (7 samples, 0.04%)</title><rect x="43.9" y="997" width="0.4" height="15.0" fill="rgb(252,44,52)" rx="2" ry="2" />
<text  x="46.88" y="1007.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandJumpToLabel (90 samples, 0.45%)</title><rect x="593.0" y="773" width="5.3" height="15.0" fill="rgb(249,88,15)" rx="2" ry="2" />
<text  x="595.97" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Drawable* const*, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;::__normal_iterator (7 samples, 0.04%)</title><rect x="45.9" y="997" width="0.4" height="15.0" fill="rgb(247,93,52)" rx="2" ry="2" />
<text  x="48.90" y="1007.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (5 samples, 0.03%)</title><rect x="1178.8" y="805" width="0.3" height="15.0" fill="rgb(218,191,6)" rx="2" ry="2" />
<text  x="1181.81" y="815.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (102 samples, 0.51%)</title><rect x="144.7" y="709" width="6.1" height="15.0" fill="rgb(245,222,52)" rx="2" ry="2" />
<text  x="147.68" y="719.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (9 samples, 0.05%)</title><rect x="834.5" y="325" width="0.5" height="15.0" fill="rgb(205,21,19)" rx="2" ry="2" />
<text  x="837.48" y="335.5" ></text>
</g>
<g >
<title>Sprite::~Sprite (4 samples, 0.02%)</title><rect x="326.2" y="485" width="0.3" height="15.0" fill="rgb(239,206,20)" rx="2" ry="2" />
<text  x="329.23" y="495.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;int&gt;::weak_ptr (16 samples, 0.08%)</title><rect x="669.1" y="661" width="1.0" height="15.0" fill="rgb(223,44,3)" rx="2" ry="2" />
<text  x="672.13" y="671.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (58 samples, 0.29%)</title><rect x="141.1" y="629" width="3.4" height="15.0" fill="rgb(236,0,46)" rx="2" ry="2" />
<text  x="144.05" y="639.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (7 samples, 0.04%)</title><rect x="1170.4" y="789" width="0.4" height="15.0" fill="rgb(226,122,7)" rx="2" ry="2" />
<text  x="1173.35" y="799.5" ></text>
</g>
<g >
<title>max&lt;int&gt; (5 samples, 0.03%)</title><rect x="856.4" y="485" width="0.3" height="15.0" fill="rgb(235,177,29)" rx="2" ry="2" />
<text  x="859.45" y="495.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Impl::~_Impl (11 samples, 0.06%)</title><rect x="952.0" y="357" width="0.6" height="15.0" fill="rgb(224,53,48)" rx="2" ry="2" />
<text  x="954.95" y="367.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (33 samples, 0.17%)</title><rect x="775.5" y="389" width="1.9" height="15.0" fill="rgb(246,94,40)" rx="2" ry="2" />
<text  x="778.47" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;Sprite&gt; &gt;::_M_head (2 samples, 0.01%)</title><rect x="965.5" y="453" width="0.1" height="15.0" fill="rgb(235,228,39)" rx="2" ry="2" />
<text  x="968.53" y="463.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (53 samples, 0.27%)</title><rect x="241.4" y="421" width="3.2" height="15.0" fill="rgb(243,61,12)" rx="2" ry="2" />
<text  x="244.44" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::operator[] (9 samples, 0.05%)</title><rect x="335.6" y="789" width="0.5" height="15.0" fill="rgb(248,62,16)" rx="2" ry="2" />
<text  x="338.57" y="799.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (3 samples, 0.02%)</title><rect x="985.1" y="677" width="0.2" height="15.0" fill="rgb(220,227,11)" rx="2" ry="2" />
<text  x="988.12" y="687.5" ></text>
</g>
<g >
<title>__lru_cache_add (10 samples, 0.05%)</title><rect x="301.5" y="357" width="0.6" height="15.0" fill="rgb(206,85,18)" rx="2" ry="2" />
<text  x="304.52" y="367.5" ></text>
</g>
<g >
<title>unmapped_area_topdown (5 samples, 0.03%)</title><rect x="135.9" y="293" width="0.3" height="15.0" fill="rgb(216,117,31)" rx="2" ry="2" />
<text  x="138.93" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (78 samples, 0.39%)</title><rect x="171.1" y="581" width="4.7" height="15.0" fill="rgb(209,5,3)" rx="2" ry="2" />
<text  x="174.12" y="591.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (7 samples, 0.04%)</title><rect x="1174.8" y="773" width="0.4" height="15.0" fill="rgb(252,120,22)" rx="2" ry="2" />
<text  x="1177.82" y="783.5" ></text>
</g>
<g >
<title>flush_tlb_func_common.constprop.9 (3 samples, 0.02%)</title><rect x="257.9" y="133" width="0.2" height="15.0" fill="rgb(207,186,54)" rx="2" ry="2" />
<text  x="260.93" y="143.5" ></text>
</g>
<g >
<title>Sprite::SetOy (2 samples, 0.01%)</title><rect x="852.9" y="501" width="0.1" height="15.0" fill="rgb(219,2,42)" rx="2" ry="2" />
<text  x="855.87" y="511.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (264 samples, 1.33%)</title><rect x="735.6" y="485" width="15.7" height="15.0" fill="rgb(223,68,8)" rx="2" ry="2" />
<text  x="738.58" y="495.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::__allocated_ptr (4 samples, 0.02%)</title><rect x="674.4" y="597" width="0.2" height="15.0" fill="rgb(246,177,40)" rx="2" ry="2" />
<text  x="677.37" y="607.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::~__weak_ptr (11 samples, 0.06%)</title><rect x="979.8" y="549" width="0.6" height="15.0" fill="rgb(207,154,51)" rx="2" ry="2" />
<text  x="982.76" y="559.5" ></text>
</g>
<g >
<title>operator== (9 samples, 0.05%)</title><rect x="849.4" y="453" width="0.5" height="15.0" fill="rgb(214,141,14)" rx="2" ry="2" />
<text  x="852.36" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (2 samples, 0.01%)</title><rect x="592.5" y="725" width="0.1" height="15.0" fill="rgb(247,211,47)" rx="2" ry="2" />
<text  x="595.50" y="735.5" ></text>
</g>
<g >
<title>_copy_to_user (4 samples, 0.02%)</title><rect x="280.2" y="485" width="0.2" height="15.0" fill="rgb(252,177,35)" rx="2" ry="2" />
<text  x="283.20" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (15 samples, 0.08%)</title><rect x="1021.3" y="725" width="0.9" height="15.0" fill="rgb(240,115,30)" rx="2" ry="2" />
<text  x="1024.32" y="735.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (13 samples, 0.07%)</title><rect x="158.4" y="501" width="0.8" height="15.0" fill="rgb(229,43,54)" rx="2" ry="2" />
<text  x="161.38" y="511.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (9 samples, 0.05%)</title><rect x="130.5" y="837" width="0.5" height="15.0" fill="rgb(206,199,38)" rx="2" ry="2" />
<text  x="133.51" y="847.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (9 samples, 0.05%)</title><rect x="791.8" y="469" width="0.5" height="15.0" fill="rgb(214,71,22)" rx="2" ry="2" />
<text  x="794.78" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::reset (26 samples, 0.13%)</title><rect x="259.9" y="581" width="1.5" height="15.0" fill="rgb(245,86,52)" rx="2" ry="2" />
<text  x="262.90" y="591.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (44 samples, 0.22%)</title><rect x="258.8" y="917" width="2.6" height="15.0" fill="rgb(210,65,22)" rx="2" ry="2" />
<text  x="261.83" y="927.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.03%)</title><rect x="309.2" y="325" width="0.4" height="15.0" fill="rgb(208,21,6)" rx="2" ry="2" />
<text  x="312.20" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (94 samples, 0.47%)</title><rect x="1050.7" y="741" width="5.6" height="15.0" fill="rgb(212,113,37)" rx="2" ry="2" />
<text  x="1053.73" y="751.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (7 samples, 0.04%)</title><rect x="329.1" y="997" width="0.5" height="15.0" fill="rgb(205,211,40)" rx="2" ry="2" />
<text  x="332.14" y="1007.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (4 samples, 0.02%)</title><rect x="855.7" y="469" width="0.2" height="15.0" fill="rgb(245,46,3)" rx="2" ry="2" />
<text  x="858.67" y="479.5" ></text>
</g>
<g >
<title>std::move&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;&amp;&gt; (2 samples, 0.01%)</title><rect x="681.3" y="677" width="0.1" height="15.0" fill="rgb(221,200,37)" rx="2" ry="2" />
<text  x="684.27" y="687.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Scene, (__gnu_cxx::_Lock_policy)2&gt;::get (3 samples, 0.02%)</title><rect x="893.1" y="405" width="0.1" height="15.0" fill="rgb(230,226,28)" rx="2" ry="2" />
<text  x="896.06" y="415.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (4 samples, 0.02%)</title><rect x="331.8" y="837" width="0.3" height="15.0" fill="rgb(249,15,3)" rx="2" ry="2" />
<text  x="334.82" y="847.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (109 samples, 0.55%)</title><rect x="238.2" y="853" width="6.5" height="15.0" fill="rgb(251,190,30)" rx="2" ry="2" />
<text  x="241.16" y="863.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (7 samples, 0.04%)</title><rect x="1180.5" y="805" width="0.4" height="15.0" fill="rgb(207,100,32)" rx="2" ry="2" />
<text  x="1183.47" y="815.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char32_t&gt; &gt;::allocate (9 samples, 0.05%)</title><rect x="1023.5" y="677" width="0.6" height="15.0" fill="rgb(220,189,30)" rx="2" ry="2" />
<text  x="1026.52" y="687.5" ></text>
</g>
<g >
<title>std::stable_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, bool (*)(Drawable const*, Drawable const*)&gt; (2 samples, 0.01%)</title><rect x="331.7" y="853" width="0.1" height="15.0" fill="rgb(252,34,3)" rx="2" ry="2" />
<text  x="334.70" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::end (3 samples, 0.02%)</title><rect x="67.4" y="997" width="0.2" height="15.0" fill="rgb(244,72,28)" rx="2" ry="2" />
<text  x="70.40" y="1007.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;BaseUi, (__gnu_cxx::_Lock_policy)2&gt;::get (3 samples, 0.02%)</title><rect x="81.6" y="997" width="0.2" height="15.0" fill="rgb(245,96,16)" rx="2" ry="2" />
<text  x="84.63" y="1007.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (20 samples, 0.10%)</title><rect x="237.0" y="677" width="1.2" height="15.0" fill="rgb(231,217,34)" rx="2" ry="2" />
<text  x="239.97" y="687.5" ></text>
</g>
<g >
<title>Component::Component (4 samples, 0.02%)</title><rect x="25.4" y="997" width="0.2" height="15.0" fill="rgb(232,38,50)" rx="2" ry="2" />
<text  x="28.36" y="1007.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;Sprite&gt;, true&gt;::_M_head (6 samples, 0.03%)</title><rect x="65.0" y="997" width="0.4" height="15.0" fill="rgb(222,228,6)" rx="2" ry="2" />
<text  x="68.02" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (8 samples, 0.04%)</title><rect x="736.8" y="453" width="0.5" height="15.0" fill="rgb(221,149,42)" rx="2" ry="2" />
<text  x="739.83" y="463.5" ></text>
</g>
<g >
<title>free_unref_page_list (10 samples, 0.05%)</title><rect x="256.7" y="69" width="0.6" height="15.0" fill="rgb(240,104,40)" rx="2" ry="2" />
<text  x="259.68" y="79.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (18 samples, 0.09%)</title><rect x="28.6" y="997" width="1.0" height="15.0" fill="rgb(245,70,5)" rx="2" ry="2" />
<text  x="31.58" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (16 samples, 0.08%)</title><rect x="268.9" y="533" width="0.9" height="15.0" fill="rgb(211,185,5)" rx="2" ry="2" />
<text  x="271.89" y="543.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator() (2 samples, 0.01%)</title><rect x="100.5" y="997" width="0.1" height="15.0" fill="rgb(219,228,49)" rx="2" ry="2" />
<text  x="103.50" y="1007.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (14 samples, 0.07%)</title><rect x="1021.3" y="709" width="0.9" height="15.0" fill="rgb(229,221,17)" rx="2" ry="2" />
<text  x="1024.32" y="719.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (44 samples, 0.22%)</title><rect x="258.8" y="741" width="2.6" height="15.0" fill="rgb(229,187,4)" rx="2" ry="2" />
<text  x="261.83" y="751.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (2 samples, 0.01%)</title><rect x="1179.3" y="821" width="0.1" height="15.0" fill="rgb(235,147,52)" rx="2" ry="2" />
<text  x="1182.28" y="831.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned@plt (2 samples, 0.01%)</title><rect x="236.8" y="469" width="0.1" height="15.0" fill="rgb(222,169,12)" rx="2" ry="2" />
<text  x="239.79" y="479.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (6 samples, 0.03%)</title><rect x="105.1" y="997" width="0.4" height="15.0" fill="rgb(237,104,27)" rx="2" ry="2" />
<text  x="108.15" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (15 samples, 0.08%)</title><rect x="1076.4" y="773" width="0.9" height="15.0" fill="rgb(210,114,25)" rx="2" ry="2" />
<text  x="1079.39" y="783.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (166 samples, 0.84%)</title><rect x="131.0" y="693" width="9.9" height="15.0" fill="rgb(221,52,2)" rx="2" ry="2" />
<text  x="134.05" y="703.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::_M_ptr (2 samples, 0.01%)</title><rect x="601.1" y="725" width="0.2" height="15.0" fill="rgb(231,129,54)" rx="2" ry="2" />
<text  x="604.13" y="735.5" ></text>
</g>
<g >
<title>memcmp (2 samples, 0.01%)</title><rect x="657.6" y="613" width="0.2" height="15.0" fill="rgb(252,105,9)" rx="2" ry="2" />
<text  x="660.64" y="623.5" ></text>
</g>
<g >
<title>Game_Interpreter::IsAsyncPending (3 samples, 0.02%)</title><rect x="338.1" y="821" width="0.2" height="15.0" fill="rgb(253,189,50)" rx="2" ry="2" />
<text  x="341.08" y="831.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator== (3 samples, 0.02%)</title><rect x="659.4" y="677" width="0.2" height="15.0" fill="rgb(254,4,16)" rx="2" ry="2" />
<text  x="662.42" y="687.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.01%)</title><rect x="646.7" y="437" width="0.2" height="15.0" fill="rgb(205,221,5)" rx="2" ry="2" />
<text  x="649.74" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base (13 samples, 0.07%)</title><rect x="640.7" y="661" width="0.7" height="15.0" fill="rgb(218,154,50)" rx="2" ry="2" />
<text  x="643.67" y="671.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (4 samples, 0.02%)</title><rect x="326.2" y="805" width="0.3" height="15.0" fill="rgb(209,197,10)" rx="2" ry="2" />
<text  x="329.23" y="815.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (20 samples, 0.10%)</title><rect x="237.0" y="853" width="1.2" height="15.0" fill="rgb(231,173,18)" rx="2" ry="2" />
<text  x="239.97" y="863.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (4,027 samples, 20.32%)</title><rect x="727.4" y="629" width="239.8" height="15.0" fill="rgb(228,222,50)" rx="2" ry="2" />
<text  x="730.42" y="639.5" >std::_Bind&lt;std::_Mem_fn&lt;void (G..</text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (4 samples, 0.02%)</title><rect x="170.9" y="565" width="0.2" height="15.0" fill="rgb(214,169,0)" rx="2" ry="2" />
<text  x="173.88" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get_deleter (2 samples, 0.01%)</title><rect x="887.3" y="517" width="0.1" height="15.0" fill="rgb(213,145,5)" rx="2" ry="2" />
<text  x="890.29" y="527.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocator&lt;Bitmap&gt; (5 samples, 0.03%)</title><rect x="91.9" y="997" width="0.3" height="15.0" fill="rgb(208,193,10)" rx="2" ry="2" />
<text  x="94.87" y="1007.5" ></text>
</g>
<g >
<title>Bitmap::width (7 samples, 0.04%)</title><rect x="867.3" y="485" width="0.5" height="15.0" fill="rgb(231,37,21)" rx="2" ry="2" />
<text  x="870.34" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (22 samples, 0.11%)</title><rect x="548.2" y="741" width="1.3" height="15.0" fill="rgb(214,11,52)" rx="2" ry="2" />
<text  x="551.20" y="751.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="1031.6" y="645" width="0.2" height="15.0" fill="rgb(225,129,35)" rx="2" ry="2" />
<text  x="1034.56" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (192 samples, 0.97%)</title><rect x="429.7" y="773" width="11.4" height="15.0" fill="rgb(220,227,19)" rx="2" ry="2" />
<text  x="432.71" y="783.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_get_pointer (5 samples, 0.03%)</title><rect x="967.8" y="645" width="0.3" height="15.0" fill="rgb(238,228,3)" rx="2" ry="2" />
<text  x="970.85" y="655.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (38 samples, 0.19%)</title><rect x="882.2" y="469" width="2.3" height="15.0" fill="rgb(222,195,44)" rx="2" ry="2" />
<text  x="885.23" y="479.5" ></text>
</g>
<g >
<title>Bitmap::width (5 samples, 0.03%)</title><rect x="24.4" y="997" width="0.3" height="15.0" fill="rgb(209,153,17)" rx="2" ry="2" />
<text  x="27.41" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (32 samples, 0.16%)</title><rect x="242.7" y="293" width="1.9" height="15.0" fill="rgb(234,75,47)" rx="2" ry="2" />
<text  x="245.69" y="303.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.02%)</title><rect x="128.7" y="997" width="0.2" height="15.0" fill="rgb(209,41,47)" rx="2" ry="2" />
<text  x="131.73" y="1007.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;*&gt; (4 samples, 0.02%)</title><rect x="710.2" y="645" width="0.3" height="15.0" fill="rgb(218,112,38)" rx="2" ry="2" />
<text  x="713.21" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_value (10 samples, 0.05%)</title><rect x="753.9" y="421" width="0.6" height="15.0" fill="rgb(221,189,20)" rx="2" ry="2" />
<text  x="756.92" y="431.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;int&gt;::~weak_ptr (12 samples, 0.06%)</title><rect x="979.7" y="565" width="0.7" height="15.0" fill="rgb(246,170,37)" rx="2" ry="2" />
<text  x="982.70" y="575.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (2 samples, 0.01%)</title><rect x="868.8" y="501" width="0.1" height="15.0" fill="rgb(239,133,7)" rx="2" ry="2" />
<text  x="871.77" y="511.5" ></text>
</g>
<g >
<title>memcmp (2 samples, 0.01%)</title><rect x="788.6" y="469" width="0.1" height="15.0" fill="rgb(249,47,44)" rx="2" ry="2" />
<text  x="791.63" y="479.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.02%)</title><rect x="267.3" y="325" width="0.2" height="15.0" fill="rgb(235,164,11)" rx="2" ry="2" />
<text  x="270.28" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::get (8 samples, 0.04%)</title><rect x="1170.9" y="789" width="0.5" height="15.0" fill="rgb(226,44,2)" rx="2" ry="2" />
<text  x="1173.89" y="799.5" ></text>
</g>
<g >
<title>Game_Picture::Move (11 samples, 0.06%)</title><rect x="599.8" y="757" width="0.6" height="15.0" fill="rgb(217,92,13)" rx="2" ry="2" />
<text  x="602.76" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (15 samples, 0.08%)</title><rect x="1011.9" y="741" width="0.8" height="15.0" fill="rgb(210,222,2)" rx="2" ry="2" />
<text  x="1014.85" y="751.5" ></text>
</g>
<g >
<title>do_syscall_64 (23 samples, 0.12%)</title><rect x="256.2" y="245" width="1.4" height="15.0" fill="rgb(239,200,12)" rx="2" ry="2" />
<text  x="259.21" y="255.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (101 samples, 0.51%)</title><rect x="261.4" y="677" width="6.1" height="15.0" fill="rgb(210,101,11)" rx="2" ry="2" />
<text  x="264.45" y="687.5" ></text>
</g>
<g >
<title>pthread_getspecific@plt (5 samples, 0.03%)</title><rect x="257.6" y="261" width="0.3" height="15.0" fill="rgb(248,61,2)" rx="2" ry="2" />
<text  x="260.57" y="271.5" ></text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt;, 36ul&gt; (4 samples, 0.02%)</title><rect x="332.8" y="885" width="0.2" height="15.0" fill="rgb(217,141,38)" rx="2" ry="2" />
<text  x="335.78" y="895.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::CommonEvent&gt; (6 samples, 0.03%)</title><rect x="337.7" y="805" width="0.4" height="15.0" fill="rgb(251,134,29)" rx="2" ry="2" />
<text  x="340.72" y="815.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (4 samples, 0.02%)</title><rect x="1147.4" y="773" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1150.43" y="783.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (24 samples, 0.12%)</title><rect x="755.9" y="437" width="1.5" height="15.0" fill="rgb(222,176,24)" rx="2" ry="2" />
<text  x="758.94" y="447.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_memcmp (6 samples, 0.03%)</title><rect x="325.8" y="997" width="0.3" height="15.0" fill="rgb(232,56,4)" rx="2" ry="2" />
<text  x="328.75" y="1007.5" ></text>
</g>
<g >
<title>Scene::MainFunction (14,314 samples, 72.23%)</title><rect x="330.9" y="933" width="852.3" height="15.0" fill="rgb(225,201,21)" rx="2" ry="2" />
<text  x="333.93" y="943.5" >Scene::MainFunction</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt;::new_allocator (3 samples, 0.02%)</title><rect x="55.4" y="997" width="0.1" height="15.0" fill="rgb(205,143,40)" rx="2" ry="2" />
<text  x="58.37" y="1007.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (6 samples, 0.03%)</title><rect x="1182.5" y="789" width="0.4" height="15.0" fill="rgb(215,63,22)" rx="2" ry="2" />
<text  x="1185.50" y="799.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (2 samples, 0.01%)</title><rect x="20.8" y="901" width="0.1" height="15.0" fill="rgb(221,61,39)" rx="2" ry="2" />
<text  x="23.78" y="911.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::function&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;, void, void&gt; (117 samples, 0.59%)</title><rect x="695.6" y="709" width="6.9" height="15.0" fill="rgb(232,90,22)" rx="2" ry="2" />
<text  x="698.56" y="719.5" ></text>
</g>
<g >
<title>Game_Interpreter::ValueOrVariable (2 samples, 0.01%)</title><rect x="30.1" y="997" width="0.1" height="15.0" fill="rgb(218,142,24)" rx="2" ry="2" />
<text  x="33.13" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (5 samples, 0.03%)</title><rect x="852.3" y="421" width="0.3" height="15.0" fill="rgb(207,48,33)" rx="2" ry="2" />
<text  x="855.28" y="431.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (515 samples, 2.60%)</title><rect x="294.8" y="853" width="30.7" height="15.0" fill="rgb(231,128,12)" rx="2" ry="2" />
<text  x="297.79" y="863.5" >Ga..</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;Input::UiSource::Update()::{lambda(int)#1}&gt; &gt; (3 samples, 0.02%)</title><rect x="332.4" y="821" width="0.2" height="15.0" fill="rgb(249,176,18)" rx="2" ry="2" />
<text  x="335.42" y="831.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (11 samples, 0.06%)</title><rect x="243.9" y="277" width="0.7" height="15.0" fill="rgb(243,169,14)" rx="2" ry="2" />
<text  x="246.94" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt;::base (3 samples, 0.02%)</title><rect x="1122.8" y="773" width="0.2" height="15.0" fill="rgb(234,200,18)" rx="2" ry="2" />
<text  x="1125.84" y="783.5" ></text>
</g>
<g >
<title>calloc (2 samples, 0.01%)</title><rect x="308.2" y="293" width="0.1" height="15.0" fill="rgb(209,219,22)" rx="2" ry="2" />
<text  x="311.19" y="303.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (3 samples, 0.02%)</title><rect x="794.9" y="501" width="0.2" height="15.0" fill="rgb(214,68,22)" rx="2" ry="2" />
<text  x="797.94" y="511.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (2 samples, 0.01%)</title><rect x="1179.9" y="709" width="0.1" height="15.0" fill="rgb(241,219,19)" rx="2" ry="2" />
<text  x="1182.88" y="719.5" ></text>
</g>
<g >
<title>Game_Picture::Show (44 samples, 0.22%)</title><rect x="258.8" y="821" width="2.6" height="15.0" fill="rgb(215,96,50)" rx="2" ry="2" />
<text  x="261.83" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (41 samples, 0.21%)</title><rect x="1053.9" y="725" width="2.4" height="15.0" fill="rgb(237,120,23)" rx="2" ry="2" />
<text  x="1056.89" y="735.5" ></text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;int&gt;, true&gt;::_S_get (2 samples, 0.01%)</title><rect x="995.7" y="613" width="0.1" height="15.0" fill="rgb(247,181,51)" rx="2" ry="2" />
<text  x="998.72" y="623.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (44 samples, 0.22%)</title><rect x="258.8" y="613" width="2.6" height="15.0" fill="rgb(235,21,40)" rx="2" ry="2" />
<text  x="261.83" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (54 samples, 0.27%)</title><rect x="644.1" y="677" width="3.2" height="15.0" fill="rgb(224,74,39)" rx="2" ry="2" />
<text  x="647.12" y="687.5" ></text>
</g>
<g >
<title>Sprite::Flash (22 samples, 0.11%)</title><rect x="848.6" y="501" width="1.4" height="15.0" fill="rgb(218,197,29)" rx="2" ry="2" />
<text  x="851.65" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::end (5 samples, 0.03%)</title><rect x="784.8" y="469" width="0.3" height="15.0" fill="rgb(248,166,34)" rx="2" ry="2" />
<text  x="787.82" y="479.5" ></text>
</g>
<g >
<title>sync_regs (2 samples, 0.01%)</title><rect x="305.3" y="453" width="0.1" height="15.0" fill="rgb(245,141,18)" rx="2" ry="2" />
<text  x="308.27" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (8 samples, 0.04%)</title><rect x="869.6" y="437" width="0.5" height="15.0" fill="rgb(252,157,52)" rx="2" ry="2" />
<text  x="872.61" y="447.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Game_Picture*, false&gt;::_M_head (2 samples, 0.01%)</title><rect x="966.7" y="565" width="0.1" height="15.0" fill="rgb(245,209,2)" rx="2" ry="2" />
<text  x="969.66" y="575.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::__allocated_ptr (5 samples, 0.03%)</title><rect x="838.2" y="389" width="0.3" height="15.0" fill="rgb(206,108,44)" rx="2" ry="2" />
<text  x="841.17" y="399.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (45 samples, 0.23%)</title><rect x="621.7" y="629" width="2.7" height="15.0" fill="rgb(232,41,27)" rx="2" ry="2" />
<text  x="624.67" y="639.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (6 samples, 0.03%)</title><rect x="1182.5" y="757" width="0.4" height="15.0" fill="rgb(248,87,31)" rx="2" ry="2" />
<text  x="1185.50" y="767.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (143 samples, 0.72%)</title><rect x="150.8" y="869" width="8.5" height="15.0" fill="rgb(208,42,38)" rx="2" ry="2" />
<text  x="153.76" y="879.5" ></text>
</g>
<g >
<title>Game_Picture::Update (418 samples, 2.11%)</title><rect x="1152.4" y="837" width="24.9" height="15.0" fill="rgb(232,81,21)" rx="2" ry="2" />
<text  x="1155.43" y="847.5" >G..</text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (102 samples, 0.51%)</title><rect x="144.7" y="501" width="6.1" height="15.0" fill="rgb(253,128,31)" rx="2" ry="2" />
<text  x="147.68" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (6 samples, 0.03%)</title><rect x="886.8" y="437" width="0.4" height="15.0" fill="rgb(229,15,25)" rx="2" ry="2" />
<text  x="889.81" y="447.5" ></text>
</g>
<g >
<title>Cache::Picture (143 samples, 0.72%)</title><rect x="150.8" y="645" width="8.5" height="15.0" fill="rgb(209,187,30)" rx="2" ry="2" />
<text  x="153.76" y="655.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.03%)</title><rect x="318.1" y="245" width="0.3" height="15.0" fill="rgb(221,175,10)" rx="2" ry="2" />
<text  x="321.07" y="255.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (166 samples, 0.84%)</title><rect x="131.0" y="757" width="9.9" height="15.0" fill="rgb(215,189,25)" rx="2" ry="2" />
<text  x="134.05" y="767.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (18 samples, 0.09%)</title><rect x="859.6" y="501" width="1.1" height="15.0" fill="rgb(222,103,19)" rx="2" ry="2" />
<text  x="862.60" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; (10 samples, 0.05%)</title><rect x="56.7" y="997" width="0.6" height="15.0" fill="rgb(252,21,3)" rx="2" ry="2" />
<text  x="59.68" y="1007.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (101 samples, 0.51%)</title><rect x="261.4" y="693" width="6.1" height="15.0" fill="rgb(207,92,39)" rx="2" ry="2" />
<text  x="264.45" y="703.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.01%)</title><rect x="21.1" y="837" width="0.1" height="15.0" fill="rgb(247,185,48)" rx="2" ry="2" />
<text  x="24.07" y="847.5" ></text>
</g>
<g >
<title>vfs_write (6 samples, 0.03%)</title><rect x="21.1" y="949" width="0.3" height="15.0" fill="rgb(238,97,0)" rx="2" ry="2" />
<text  x="24.07" y="959.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (136 samples, 0.69%)</title><rect x="131.0" y="533" width="8.1" height="15.0" fill="rgb(223,76,20)" rx="2" ry="2" />
<text  x="134.05" y="543.5" ></text>
</g>
<g >
<title>Game_Screen::GetTone (20 samples, 0.10%)</title><rect x="1164.8" y="805" width="1.2" height="15.0" fill="rgb(223,122,34)" rx="2" ry="2" />
<text  x="1167.81" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;Bitmap&gt;::_M_addr (5 samples, 0.03%)</title><rect x="42.8" y="997" width="0.3" height="15.0" fill="rgb(222,189,14)" rx="2" ry="2" />
<text  x="45.81" y="1007.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (78 samples, 0.39%)</title><rect x="171.1" y="629" width="4.7" height="15.0" fill="rgb(239,146,39)" rx="2" ry="2" />
<text  x="174.12" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (3 samples, 0.02%)</title><rect x="124.7" y="997" width="0.2" height="15.0" fill="rgb(215,152,54)" rx="2" ry="2" />
<text  x="127.68" y="1007.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandWait (3 samples, 0.02%)</title><rect x="27.5" y="997" width="0.2" height="15.0" fill="rgb(243,202,21)" rx="2" ry="2" />
<text  x="30.51" y="1007.5" ></text>
</g>
<g >
<title>variables (4 samples, 0.02%)</title><rect x="553.8" y="741" width="0.2" height="15.0" fill="rgb(230,88,4)" rx="2" ry="2" />
<text  x="556.80" y="751.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="1180.7" y="789" width="0.1" height="15.0" fill="rgb(242,168,7)" rx="2" ry="2" />
<text  x="1183.65" y="799.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_addr (3 samples, 0.02%)</title><rect x="767.3" y="389" width="0.2" height="15.0" fill="rgb(252,6,34)" rx="2" ry="2" />
<text  x="770.31" y="399.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*, std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="60.4" y="997" width="0.1" height="15.0" fill="rgb(205,188,23)" rx="2" ry="2" />
<text  x="63.37" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*, std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt; &gt;::operator* (4 samples, 0.02%)</title><rect x="720.4" y="677" width="0.2" height="15.0" fill="rgb(248,147,17)" rx="2" ry="2" />
<text  x="723.39" y="687.5" ></text>
</g>
<g >
<title>Game_Switches_Class::Get (47 samples, 0.24%)</title><rect x="334.9" y="805" width="2.8" height="15.0" fill="rgb(247,96,46)" rx="2" ry="2" />
<text  x="337.92" y="815.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (2 samples, 0.01%)</title><rect x="784.1" y="453" width="0.1" height="15.0" fill="rgb(218,192,53)" rx="2" ry="2" />
<text  x="787.10" y="463.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (3 samples, 0.02%)</title><rect x="1163.0" y="789" width="0.1" height="15.0" fill="rgb(237,150,37)" rx="2" ry="2" />
<text  x="1165.97" y="799.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned (3 samples, 0.02%)</title><rect x="621.1" y="629" width="0.2" height="15.0" fill="rgb(207,160,21)" rx="2" ry="2" />
<text  x="624.08" y="639.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (349 samples, 1.76%)</title><rect x="267.5" y="837" width="20.8" height="15.0" fill="rgb(225,199,25)" rx="2" ry="2" />
<text  x="270.52" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (92 samples, 0.46%)</title><rect x="1085.6" y="757" width="5.4" height="15.0" fill="rgb(233,50,18)" rx="2" ry="2" />
<text  x="1088.56" y="767.5" ></text>
</g>
<g >
<title>memcpy (2 samples, 0.01%)</title><rect x="737.8" y="437" width="0.2" height="15.0" fill="rgb(222,167,42)" rx="2" ry="2" />
<text  x="740.84" y="447.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (514 samples, 2.59%)</title><rect x="294.8" y="565" width="30.7" height="15.0" fill="rgb(239,98,21)" rx="2" ry="2" />
<text  x="297.85" y="575.5" >st..</text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (2 samples, 0.01%)</title><rect x="834.7" y="293" width="0.1" height="15.0" fill="rgb(252,62,29)" rx="2" ry="2" />
<text  x="837.65" y="303.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (514 samples, 2.59%)</title><rect x="294.8" y="581" width="30.7" height="15.0" fill="rgb(243,175,43)" rx="2" ry="2" />
<text  x="297.85" y="591.5" >st..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::_M_ptr (11 samples, 0.06%)</title><rect x="859.8" y="469" width="0.7" height="15.0" fill="rgb(217,79,42)" rx="2" ry="2" />
<text  x="862.84" y="479.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (28 samples, 0.14%)</title><rect x="656.0" y="597" width="1.6" height="15.0" fill="rgb(205,3,33)" rx="2" ry="2" />
<text  x="658.97" y="607.5" ></text>
</g>
<g >
<title>AsyncHandler::IsImportantFilePending (3 samples, 0.02%)</title><rect x="1183.0" y="901" width="0.2" height="15.0" fill="rgb(232,75,20)" rx="2" ry="2" />
<text  x="1186.03" y="911.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (40 samples, 0.20%)</title><rect x="141.1" y="565" width="2.3" height="15.0" fill="rgb(214,85,54)" rx="2" ry="2" />
<text  x="144.05" y="575.5" ></text>
</g>
<g >
<title>Bitmap::Clear (183 samples, 0.92%)</title><rect x="294.8" y="501" width="10.9" height="15.0" fill="rgb(235,164,7)" rx="2" ry="2" />
<text  x="297.85" y="511.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (102 samples, 0.51%)</title><rect x="144.7" y="629" width="6.1" height="15.0" fill="rgb(231,116,5)" rx="2" ry="2" />
<text  x="147.68" y="639.5" ></text>
</g>
<g >
<title>schedule (25 samples, 0.13%)</title><rect x="1180.9" y="725" width="1.5" height="15.0" fill="rgb(238,128,47)" rx="2" ry="2" />
<text  x="1183.95" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (2 samples, 0.01%)</title><rect x="1009.2" y="725" width="0.2" height="15.0" fill="rgb(205,117,4)" rx="2" ry="2" />
<text  x="1012.23" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator bool (15 samples, 0.08%)</title><rect x="1177.7" y="837" width="0.9" height="15.0" fill="rgb(226,4,3)" rx="2" ry="2" />
<text  x="1180.67" y="847.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (7 samples, 0.04%)</title><rect x="780.1" y="405" width="0.4" height="15.0" fill="rgb(246,206,19)" rx="2" ry="2" />
<text  x="783.11" y="415.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.05%)</title><rect x="627.1" y="661" width="0.5" height="15.0" fill="rgb(239,141,9)" rx="2" ry="2" />
<text  x="630.09" y="671.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (3 samples, 0.02%)</title><rect x="1182.6" y="629" width="0.2" height="15.0" fill="rgb(218,220,32)" rx="2" ry="2" />
<text  x="1185.62" y="639.5" ></text>
</g>
<g >
<title>memcmp@plt (7 samples, 0.04%)</title><rect x="657.8" y="613" width="0.4" height="15.0" fill="rgb(238,133,9)" rx="2" ry="2" />
<text  x="660.76" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (2 samples, 0.01%)</title><rect x="598.5" y="757" width="0.1" height="15.0" fill="rgb(226,153,53)" rx="2" ry="2" />
<text  x="601.51" y="767.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (185 samples, 0.93%)</title><rect x="247.8" y="325" width="11.0" height="15.0" fill="rgb(245,224,22)" rx="2" ry="2" />
<text  x="250.81" y="335.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (16 samples, 0.08%)</title><rect x="285.6" y="597" width="1.0" height="15.0" fill="rgb(208,149,19)" rx="2" ry="2" />
<text  x="288.62" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (4 samples, 0.02%)</title><rect x="788.2" y="405" width="0.2" height="15.0" fill="rgb(240,207,35)" rx="2" ry="2" />
<text  x="791.15" y="415.5" ></text>
</g>
<g >
<title>Game_Map::Refresh (223 samples, 1.13%)</title><rect x="1116.0" y="805" width="13.3" height="15.0" fill="rgb(248,76,3)" rx="2" ry="2" />
<text  x="1118.99" y="815.5" ></text>
</g>
<g >
<title>unmap_single_vma (3 samples, 0.02%)</title><rect x="258.2" y="197" width="0.2" height="15.0" fill="rgb(247,158,45)" rx="2" ry="2" />
<text  x="261.23" y="207.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.01%)</title><rect x="179.4" y="453" width="0.1" height="15.0" fill="rgb(237,118,8)" rx="2" ry="2" />
<text  x="182.40" y="463.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (350 samples, 1.77%)</title><rect x="267.5" y="949" width="20.8" height="15.0" fill="rgb(231,90,51)" rx="2" ry="2" />
<text  x="270.46" y="959.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::~_Head_base (16 samples, 0.08%)</title><rect x="285.6" y="565" width="1.0" height="15.0" fill="rgb(223,53,13)" rx="2" ry="2" />
<text  x="288.62" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_key (5 samples, 0.03%)</title><rect x="757.5" y="453" width="0.3" height="15.0" fill="rgb(232,61,9)" rx="2" ry="2" />
<text  x="760.49" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (3 samples, 0.02%)</title><rect x="610.7" y="725" width="0.2" height="15.0" fill="rgb(252,210,7)" rx="2" ry="2" />
<text  x="613.72" y="735.5" ></text>
</g>
<g >
<title>__gthread_active_p (4 samples, 0.02%)</title><rect x="57.6" y="997" width="0.3" height="15.0" fill="rgb(218,40,39)" rx="2" ry="2" />
<text  x="60.63" y="1007.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, FileRequestResult*&amp;&amp;&gt;::_Tuple_impl&lt;FileRequestResult*&gt; (6 samples, 0.03%)</title><rect x="967.4" y="597" width="0.4" height="15.0" fill="rgb(246,111,42)" rx="2" ry="2" />
<text  x="970.43" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base (8 samples, 0.04%)</title><rect x="49.2" y="997" width="0.5" height="15.0" fill="rgb(221,133,39)" rx="2" ry="2" />
<text  x="52.24" y="1007.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (5 samples, 0.03%)</title><rect x="794.8" y="517" width="0.3" height="15.0" fill="rgb(205,198,42)" rx="2" ry="2" />
<text  x="797.82" y="527.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (7 samples, 0.04%)</title><rect x="863.4" y="453" width="0.4" height="15.0" fill="rgb(229,207,49)" rx="2" ry="2" />
<text  x="866.35" y="463.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (74 samples, 0.37%)</title><rect x="254.0" y="293" width="4.4" height="15.0" fill="rgb(233,169,39)" rx="2" ry="2" />
<text  x="257.00" y="303.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (7 samples, 0.04%)</title><rect x="786.7" y="389" width="0.4" height="15.0" fill="rgb(214,80,3)" rx="2" ry="2" />
<text  x="789.66" y="399.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (38 samples, 0.19%)</title><rect x="1014.3" y="709" width="2.3" height="15.0" fill="rgb(231,227,22)" rx="2" ry="2" />
<text  x="1017.29" y="719.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (44 samples, 0.22%)</title><rect x="258.8" y="949" width="2.6" height="15.0" fill="rgb(233,10,22)" rx="2" ry="2" />
<text  x="261.83" y="959.5" ></text>
</g>
<g >
<title>Sprite::~Sprite (9 samples, 0.05%)</title><rect x="237.6" y="533" width="0.6" height="15.0" fill="rgb(226,68,37)" rx="2" ry="2" />
<text  x="240.63" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create@plt (10 samples, 0.05%)</title><rect x="1032.8" y="725" width="0.6" height="15.0" fill="rgb(227,95,32)" rx="2" ry="2" />
<text  x="1035.81" y="735.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (6 samples, 0.03%)</title><rect x="786.7" y="373" width="0.4" height="15.0" fill="rgb(239,24,18)" rx="2" ry="2" />
<text  x="789.72" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char32_t&gt;::deallocate (2 samples, 0.01%)</title><rect x="1024.1" y="645" width="0.1" height="15.0" fill="rgb(219,204,17)" rx="2" ry="2" />
<text  x="1027.12" y="655.5" ></text>
</g>
<g >
<title>std::min&lt;int&gt; (8 samples, 0.04%)</title><rect x="583.4" y="757" width="0.5" height="15.0" fill="rgb(250,76,33)" rx="2" ry="2" />
<text  x="586.39" y="767.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (20 samples, 0.10%)</title><rect x="683.6" y="581" width="1.2" height="15.0" fill="rgb(213,210,6)" rx="2" ry="2" />
<text  x="686.60" y="591.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (7 samples, 0.04%)</title><rect x="864.6" y="421" width="0.4" height="15.0" fill="rgb(222,73,23)" rx="2" ry="2" />
<text  x="867.60" y="431.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (238 samples, 1.20%)</title><rect x="244.7" y="677" width="14.1" height="15.0" fill="rgb(206,43,7)" rx="2" ry="2" />
<text  x="247.65" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_ptr (8 samples, 0.04%)</title><rect x="287.5" y="325" width="0.5" height="15.0" fill="rgb(207,49,4)" rx="2" ry="2" />
<text  x="290.52" y="335.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Impl::~_Impl (2 samples, 0.01%)</title><rect x="71.7" y="997" width="0.1" height="15.0" fill="rgb(248,47,10)" rx="2" ry="2" />
<text  x="74.69" y="1007.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (102 samples, 0.51%)</title><rect x="144.7" y="965" width="6.1" height="15.0" fill="rgb(207,82,21)" rx="2" ry="2" />
<text  x="147.68" y="975.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (22 samples, 0.11%)</title><rect x="1010.5" y="677" width="1.3" height="15.0" fill="rgb(236,49,5)" rx="2" ry="2" />
<text  x="1013.48" y="687.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (10 samples, 0.05%)</title><rect x="1032.0" y="677" width="0.6" height="15.0" fill="rgb(243,171,3)" rx="2" ry="2" />
<text  x="1034.98" y="687.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.02%)</title><rect x="326.5" y="997" width="0.1" height="15.0" fill="rgb(237,62,25)" rx="2" ry="2" />
<text  x="329.46" y="1007.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::swap (20 samples, 0.10%)</title><rect x="984.9" y="693" width="1.2" height="15.0" fill="rgb(223,179,46)" rx="2" ry="2" />
<text  x="987.94" y="703.5" ></text>
</g>
<g >
<title>memcpy (2 samples, 0.01%)</title><rect x="761.0" y="485" width="0.1" height="15.0" fill="rgb(251,140,28)" rx="2" ry="2" />
<text  x="764.00" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (20 samples, 0.10%)</title><rect x="484.1" y="725" width="1.2" height="15.0" fill="rgb(209,37,36)" rx="2" ry="2" />
<text  x="487.13" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (2 samples, 0.01%)</title><rect x="1113.3" y="773" width="0.1" height="15.0" fill="rgb(253,73,39)" rx="2" ry="2" />
<text  x="1116.31" y="783.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::get (6 samples, 0.03%)</title><rect x="713.5" y="677" width="0.3" height="15.0" fill="rgb(208,4,20)" rx="2" ry="2" />
<text  x="716.49" y="687.5" ></text>
</g>
<g >
<title>Scene::HasRequestedScene (61 samples, 0.31%)</title><rect x="1129.3" y="805" width="3.6" height="15.0" fill="rgb(212,38,4)" rx="2" ry="2" />
<text  x="1132.27" y="815.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (3 samples, 0.02%)</title><rect x="1183.0" y="885" width="0.2" height="15.0" fill="rgb(225,81,54)" rx="2" ry="2" />
<text  x="1186.03" y="895.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="154.0" y="565" width="0.3" height="15.0" fill="rgb(251,174,19)" rx="2" ry="2" />
<text  x="157.03" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="736.5" y="469" width="0.1" height="15.0" fill="rgb(245,51,44)" rx="2" ry="2" />
<text  x="739.53" y="479.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.05%)</title><rect x="237.6" y="309" width="0.6" height="15.0" fill="rgb(240,199,7)" rx="2" ry="2" />
<text  x="240.63" y="319.5" ></text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (8 samples, 0.04%)</title><rect x="844.7" y="501" width="0.4" height="15.0" fill="rgb(240,176,26)" rx="2" ry="2" />
<text  x="847.66" y="511.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (26 samples, 0.13%)</title><rect x="259.9" y="485" width="1.5" height="15.0" fill="rgb(252,35,31)" rx="2" ry="2" />
<text  x="262.90" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (14 samples, 0.07%)</title><rect x="154.7" y="565" width="0.9" height="15.0" fill="rgb(240,217,20)" rx="2" ry="2" />
<text  x="157.75" y="575.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (19 samples, 0.10%)</title><rect x="1173.7" y="757" width="1.1" height="15.0" fill="rgb(214,200,22)" rx="2" ry="2" />
<text  x="1176.69" y="767.5" ></text>
</g>
<g >
<title>__gthread_active_p (3 samples, 0.02%)</title><rect x="790.5" y="421" width="0.2" height="15.0" fill="rgb(223,116,20)" rx="2" ry="2" />
<text  x="793.47" y="431.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Any_data&amp;&gt; (5 samples, 0.03%)</title><rect x="684.5" y="565" width="0.3" height="15.0" fill="rgb(234,12,7)" rx="2" ry="2" />
<text  x="687.49" y="575.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (4 samples, 0.02%)</title><rect x="778.0" y="389" width="0.2" height="15.0" fill="rgb(217,216,25)" rx="2" ry="2" />
<text  x="780.97" y="399.5" ></text>
</g>
<g >
<title>Player::Update (14,311 samples, 72.21%)</title><rect x="330.9" y="917" width="852.1" height="15.0" fill="rgb(208,107,36)" rx="2" ry="2" />
<text  x="333.93" y="927.5" >Player::Update</text>
</g>
<g >
<title>Player::MainLoop (109 samples, 0.55%)</title><rect x="238.2" y="981" width="6.5" height="15.0" fill="rgb(220,68,5)" rx="2" ry="2" />
<text  x="241.16" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (4 samples, 0.02%)</title><rect x="113.5" y="997" width="0.2" height="15.0" fill="rgb(213,117,31)" rx="2" ry="2" />
<text  x="116.48" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_valptr (4 samples, 0.02%)</title><rect x="246.3" y="373" width="0.3" height="15.0" fill="rgb(214,214,4)" rx="2" ry="2" />
<text  x="249.32" y="383.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (9 samples, 0.05%)</title><rect x="130.5" y="709" width="0.5" height="15.0" fill="rgb(235,90,51)" rx="2" ry="2" />
<text  x="133.51" y="719.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingForegroundExecution (11 samples, 0.06%)</title><rect x="1151.1" y="789" width="0.6" height="15.0" fill="rgb(234,137,1)" rx="2" ry="2" />
<text  x="1154.06" y="799.5" ></text>
</g>
<g >
<title>__strlen_avx2 (2 samples, 0.01%)</title><rect x="238.8" y="501" width="0.1" height="15.0" fill="rgb(228,165,44)" rx="2" ry="2" />
<text  x="241.76" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator (2 samples, 0.01%)</title><rect x="109.5" y="997" width="0.1" height="15.0" fill="rgb(224,103,46)" rx="2" ry="2" />
<text  x="112.49" y="1007.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (349 samples, 1.76%)</title><rect x="267.5" y="677" width="20.8" height="15.0" fill="rgb(210,27,31)" rx="2" ry="2" />
<text  x="270.52" y="687.5" ></text>
</g>
<g >
<title>Player::Update (4 samples, 0.02%)</title><rect x="326.2" y="933" width="0.3" height="15.0" fill="rgb(234,62,7)" rx="2" ry="2" />
<text  x="329.23" y="943.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="328.5" y="981" width="0.1" height="15.0" fill="rgb(228,34,17)" rx="2" ry="2" />
<text  x="331.49" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (12 samples, 0.06%)</title><rect x="411.8" y="773" width="0.8" height="15.0" fill="rgb(241,139,46)" rx="2" ry="2" />
<text  x="414.85" y="783.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (2 samples, 0.01%)</title><rect x="1076.3" y="773" width="0.1" height="15.0" fill="rgb(210,47,25)" rx="2" ry="2" />
<text  x="1079.28" y="783.5" ></text>
</g>
<g >
<title>std::make_pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt;&amp;&gt; (121 samples, 0.61%)</title><rect x="662.9" y="693" width="7.2" height="15.0" fill="rgb(206,148,6)" rx="2" ry="2" />
<text  x="665.94" y="703.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_manager (127 samples, 0.64%)</title><rect x="702.9" y="677" width="7.6" height="15.0" fill="rgb(205,200,24)" rx="2" ry="2" />
<text  x="705.89" y="687.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (29 samples, 0.15%)</title><rect x="286.6" y="501" width="1.7" height="15.0" fill="rgb(249,84,16)" rx="2" ry="2" />
<text  x="289.57" y="511.5" ></text>
</g>
<g >
<title>__interceptor_free (185 samples, 0.93%)</title><rect x="247.8" y="373" width="11.0" height="15.0" fill="rgb(212,70,34)" rx="2" ry="2" />
<text  x="250.81" y="383.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (143 samples, 0.72%)</title><rect x="150.8" y="725" width="8.5" height="15.0" fill="rgb(231,14,0)" rx="2" ry="2" />
<text  x="153.76" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator* (4 samples, 0.02%)</title><rect x="736.1" y="469" width="0.2" height="15.0" fill="rgb(208,116,37)" rx="2" ry="2" />
<text  x="739.05" y="479.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="1179.9" y="677" width="0.1" height="15.0" fill="rgb(253,19,8)" rx="2" ry="2" />
<text  x="1182.88" y="687.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (6 samples, 0.03%)</title><rect x="886.8" y="453" width="0.4" height="15.0" fill="rgb(218,121,32)" rx="2" ry="2" />
<text  x="889.81" y="463.5" ></text>
</g>
<g >
<title>Tone::Tone (7 samples, 0.04%)</title><rect x="1165.6" y="789" width="0.4" height="15.0" fill="rgb(246,37,5)" rx="2" ry="2" />
<text  x="1168.59" y="799.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (19 samples, 0.10%)</title><rect x="667.7" y="549" width="1.1" height="15.0" fill="rgb(209,35,44)" rx="2" ry="2" />
<text  x="670.70" y="559.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (10 samples, 0.05%)</title><rect x="106.2" y="997" width="0.6" height="15.0" fill="rgb(238,103,13)" rx="2" ry="2" />
<text  x="109.22" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="332.9" y="805" width="0.1" height="15.0" fill="rgb(221,96,17)" rx="2" ry="2" />
<text  x="335.90" y="815.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (4 samples, 0.02%)</title><rect x="105.5" y="997" width="0.2" height="15.0" fill="rgb(233,164,39)" rx="2" ry="2" />
<text  x="108.51" y="1007.5" ></text>
</g>
<g >
<title>__libc_start_main (14,314 samples, 72.23%)</title><rect x="330.9" y="997" width="852.3" height="15.0" fill="rgb(225,217,30)" rx="2" ry="2" />
<text  x="333.93" y="1007.5" >__libc_start_main</text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::function (105 samples, 0.53%)</title><rect x="689.3" y="709" width="6.3" height="15.0" fill="rgb(234,156,20)" rx="2" ry="2" />
<text  x="692.31" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (2 samples, 0.01%)</title><rect x="1115.2" y="789" width="0.1" height="15.0" fill="rgb(236,14,5)" rx="2" ry="2" />
<text  x="1118.16" y="799.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (6 samples, 0.03%)</title><rect x="154.3" y="613" width="0.3" height="15.0" fill="rgb(230,31,23)" rx="2" ry="2" />
<text  x="157.27" y="623.5" ></text>
</g>
<g >
<title>mmap_region (3 samples, 0.02%)</title><rect x="136.2" y="325" width="0.2" height="15.0" fill="rgb(253,58,40)" rx="2" ry="2" />
<text  x="139.23" y="335.5" ></text>
</g>
<g >
<title>std::move&lt;bool (*&amp;)(std::_Any_data&amp;, std::_Any_data const&amp;, std::_Manager_operation)&gt; (3 samples, 0.02%)</title><rect x="683.4" y="565" width="0.2" height="15.0" fill="rgb(224,136,11)" rx="2" ry="2" />
<text  x="686.42" y="575.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (71 samples, 0.36%)</title><rect x="288.4" y="997" width="4.2" height="15.0" fill="rgb(227,99,4)" rx="2" ry="2" />
<text  x="291.42" y="1007.5" ></text>
</g>
<g >
<title>std::forward&lt;std::weak_ptr&lt;int&gt; &gt; (5 samples, 0.03%)</title><rect x="96.3" y="997" width="0.3" height="15.0" fill="rgb(243,110,50)" rx="2" ry="2" />
<text  x="99.34" y="1007.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (350 samples, 1.77%)</title><rect x="267.5" y="997" width="20.8" height="15.0" fill="rgb(238,190,41)" rx="2" ry="2" />
<text  x="270.46" y="1007.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (2 samples, 0.01%)</title><rect x="709.9" y="581" width="0.1" height="15.0" fill="rgb(212,72,7)" rx="2" ry="2" />
<text  x="712.91" y="591.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (45 samples, 0.23%)</title><rect x="245.1" y="533" width="2.7" height="15.0" fill="rgb(216,65,18)" rx="2" ry="2" />
<text  x="248.13" y="543.5" ></text>
</g>
<g >
<title>Sprite::SetFlashEffect (11 samples, 0.06%)</title><rect x="849.2" y="485" width="0.7" height="15.0" fill="rgb(229,128,27)" rx="2" ry="2" />
<text  x="852.24" y="495.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Scene, (__gnu_cxx::_Lock_policy)2&gt;::get (3 samples, 0.02%)</title><rect x="875.1" y="453" width="0.2" height="15.0" fill="rgb(239,2,20)" rx="2" ry="2" />
<text  x="878.08" y="463.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (11 samples, 0.06%)</title><rect x="256.6" y="117" width="0.7" height="15.0" fill="rgb(215,19,44)" rx="2" ry="2" />
<text  x="259.62" y="127.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (101 samples, 0.51%)</title><rect x="261.4" y="949" width="6.1" height="15.0" fill="rgb(206,201,44)" rx="2" ry="2" />
<text  x="264.45" y="959.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (4,472 samples, 22.57%)</title><rect x="714.7" y="693" width="266.2" height="15.0" fill="rgb(226,15,19)" rx="2" ry="2" />
<text  x="717.68" y="703.5" >FileRequestAsync::CallListeners</text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.03%)</title><rect x="1183.8" y="997" width="0.3" height="15.0" fill="rgb(248,124,16)" rx="2" ry="2" />
<text  x="1186.81" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (72 samples, 0.36%)</title><rect x="549.5" y="741" width="4.3" height="15.0" fill="rgb(248,97,11)" rx="2" ry="2" />
<text  x="552.51" y="751.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="646.9" y="501" width="0.1" height="15.0" fill="rgb(221,128,16)" rx="2" ry="2" />
<text  x="649.86" y="511.5" ></text>
</g>
<g >
<title>pixman_region32_init (8 samples, 0.04%)</title><rect x="307.7" y="277" width="0.5" height="15.0" fill="rgb(249,155,46)" rx="2" ry="2" />
<text  x="310.71" y="287.5" ></text>
</g>
<g >
<title>Game_Map::Update (515 samples, 2.60%)</title><rect x="294.8" y="869" width="30.7" height="15.0" fill="rgb(224,121,20)" rx="2" ry="2" />
<text  x="297.79" y="879.5" >Ga..</text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Sprite*, false&gt;::_M_head (2 samples, 0.01%)</title><rect x="889.0" y="437" width="0.1" height="15.0" fill="rgb(247,53,38)" rx="2" ry="2" />
<text  x="891.96" y="447.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="658.4" y="661" width="0.1" height="15.0" fill="rgb(214,107,41)" rx="2" ry="2" />
<text  x="661.41" y="671.5" ></text>
</g>
<g >
<title>operator delete (16 samples, 0.08%)</title><rect x="285.6" y="549" width="1.0" height="15.0" fill="rgb(208,129,18)" rx="2" ry="2" />
<text  x="288.62" y="559.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (14 samples, 0.07%)</title><rect x="85.5" y="997" width="0.8" height="15.0" fill="rgb(208,221,15)" rx="2" ry="2" />
<text  x="88.50" y="1007.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (143 samples, 0.72%)</title><rect x="150.8" y="757" width="8.5" height="15.0" fill="rgb(227,174,22)" rx="2" ry="2" />
<text  x="153.76" y="767.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandControlSwitches (2 samples, 0.01%)</title><rect x="513.8" y="773" width="0.2" height="15.0" fill="rgb(245,197,1)" rx="2" ry="2" />
<text  x="516.84" y="783.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (39 samples, 0.20%)</title><rect x="267.5" y="613" width="2.3" height="15.0" fill="rgb(251,114,40)" rx="2" ry="2" />
<text  x="270.52" y="623.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (2 samples, 0.01%)</title><rect x="137.4" y="405" width="0.1" height="15.0" fill="rgb(242,222,40)" rx="2" ry="2" />
<text  x="140.36" y="415.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (109 samples, 0.55%)</title><rect x="238.2" y="805" width="6.5" height="15.0" fill="rgb(222,43,30)" rx="2" ry="2" />
<text  x="241.16" y="815.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_value (2 samples, 0.01%)</title><rect x="757.7" y="437" width="0.1" height="15.0" fill="rgb(225,105,40)" rx="2" ry="2" />
<text  x="760.67" y="447.5" ></text>
</g>
<g >
<title>Graphics::IsTransitionErased (26 samples, 0.13%)</title><rect x="712.3" y="709" width="1.5" height="15.0" fill="rgb(212,40,38)" rx="2" ry="2" />
<text  x="715.30" y="719.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="724.6" y="565" width="0.3" height="15.0" fill="rgb(227,33,43)" rx="2" ry="2" />
<text  x="727.62" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_key (39 samples, 0.20%)</title><rect x="765.5" y="453" width="2.3" height="15.0" fill="rgb(221,168,29)" rx="2" ry="2" />
<text  x="768.53" y="463.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (295 samples, 1.49%)</title><rect x="536.5" y="757" width="17.5" height="15.0" fill="rgb(229,207,45)" rx="2" ry="2" />
<text  x="539.47" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (8 samples, 0.04%)</title><rect x="48.7" y="997" width="0.5" height="15.0" fill="rgb(224,115,4)" rx="2" ry="2" />
<text  x="51.70" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (5 samples, 0.03%)</title><rect x="610.4" y="725" width="0.3" height="15.0" fill="rgb(213,141,50)" rx="2" ry="2" />
<text  x="613.42" y="735.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::~allocator (2 samples, 0.01%)</title><rect x="680.1" y="613" width="0.2" height="15.0" fill="rgb(222,198,50)" rx="2" ry="2" />
<text  x="683.14" y="623.5" ></text>
</g>
<g >
<title>clear_page_erms (3 samples, 0.02%)</title><rect x="136.8" y="309" width="0.1" height="15.0" fill="rgb(207,83,23)" rx="2" ry="2" />
<text  x="139.76" y="319.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (4 samples, 0.02%)</title><rect x="170.6" y="549" width="0.3" height="15.0" fill="rgb(213,139,39)" rx="2" ry="2" />
<text  x="173.64" y="559.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (166 samples, 0.84%)</title><rect x="131.0" y="965" width="9.9" height="15.0" fill="rgb(253,169,53)" rx="2" ry="2" />
<text  x="134.05" y="975.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_manager (2 samples, 0.01%)</title><rect x="624.4" y="645" width="0.1" height="15.0" fill="rgb(209,182,45)" rx="2" ry="2" />
<text  x="627.41" y="655.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~tuple (62 samples, 0.31%)</title><rect x="155.6" y="629" width="3.7" height="15.0" fill="rgb(234,219,42)" rx="2" ry="2" />
<text  x="158.58" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_addr (2 samples, 0.01%)</title><rect x="287.9" y="309" width="0.1" height="15.0" fill="rgb(217,112,3)" rx="2" ry="2" />
<text  x="290.88" y="319.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (3 samples, 0.02%)</title><rect x="79.2" y="997" width="0.2" height="15.0" fill="rgb(229,95,28)" rx="2" ry="2" />
<text  x="82.19" y="1007.5" ></text>
</g>
<g >
<title>memmove (6 samples, 0.03%)</title><rect x="58.8" y="997" width="0.3" height="15.0" fill="rgb(229,154,38)" rx="2" ry="2" />
<text  x="61.76" y="1007.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (44 samples, 0.22%)</title><rect x="258.8" y="837" width="2.6" height="15.0" fill="rgb(252,80,46)" rx="2" ry="2" />
<text  x="261.83" y="847.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (166 samples, 0.84%)</title><rect x="131.0" y="949" width="9.9" height="15.0" fill="rgb(225,175,50)" rx="2" ry="2" />
<text  x="134.05" y="959.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (7 samples, 0.04%)</title><rect x="857.0" y="501" width="0.5" height="15.0" fill="rgb(215,115,20)" rx="2" ry="2" />
<text  x="860.04" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (58 samples, 0.29%)</title><rect x="1100.3" y="757" width="3.5" height="15.0" fill="rgb(215,176,43)" rx="2" ry="2" />
<text  x="1103.33" y="767.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (7 samples, 0.04%)</title><rect x="888.7" y="485" width="0.4" height="15.0" fill="rgb(209,134,5)" rx="2" ry="2" />
<text  x="891.66" y="495.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (49 samples, 0.25%)</title><rect x="264.4" y="501" width="2.9" height="15.0" fill="rgb(237,136,44)" rx="2" ry="2" />
<text  x="267.36" y="511.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (23 samples, 0.12%)</title><rect x="851.2" y="469" width="1.4" height="15.0" fill="rgb(230,118,14)" rx="2" ry="2" />
<text  x="854.21" y="479.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (44 samples, 0.22%)</title><rect x="144.9" y="453" width="2.6" height="15.0" fill="rgb(234,16,35)" rx="2" ry="2" />
<text  x="147.86" y="463.5" ></text>
</g>
<g >
<title>Input::UiSource::Update (7 samples, 0.04%)</title><rect x="332.2" y="885" width="0.4" height="15.0" fill="rgb(236,25,21)" rx="2" ry="2" />
<text  x="335.18" y="895.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustId (4 samples, 0.02%)</title><rect x="34.1" y="997" width="0.2" height="15.0" fill="rgb(217,184,8)" rx="2" ry="2" />
<text  x="37.05" y="1007.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (6 samples, 0.03%)</title><rect x="282.9" y="469" width="0.3" height="15.0" fill="rgb(225,79,33)" rx="2" ry="2" />
<text  x="285.88" y="479.5" ></text>
</g>
<g >
<title>Bitmap::Create (58 samples, 0.29%)</title><rect x="141.1" y="677" width="3.4" height="15.0" fill="rgb(240,18,33)" rx="2" ry="2" />
<text  x="144.05" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="624.4" y="629" width="0.1" height="15.0" fill="rgb(245,225,0)" rx="2" ry="2" />
<text  x="627.41" y="639.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::get (6 samples, 0.03%)</title><rect x="857.9" y="469" width="0.3" height="15.0" fill="rgb(210,84,28)" rx="2" ry="2" />
<text  x="860.88" y="479.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandConditionalBranch (2 samples, 0.01%)</title><rect x="461.7" y="789" width="0.1" height="15.0" fill="rgb(214,102,27)" rx="2" ry="2" />
<text  x="464.68" y="799.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (3 samples, 0.02%)</title><rect x="1154.9" y="789" width="0.1" height="15.0" fill="rgb(214,5,36)" rx="2" ry="2" />
<text  x="1157.87" y="799.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Impl::_M_alloc (2 samples, 0.01%)</title><rect x="995.7" y="629" width="0.1" height="15.0" fill="rgb(247,125,45)" rx="2" ry="2" />
<text  x="998.72" y="639.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::swap (2 samples, 0.01%)</title><rect x="97.6" y="997" width="0.1" height="15.0" fill="rgb(239,28,44)" rx="2" ry="2" />
<text  x="100.59" y="1007.5" ></text>
</g>
<g >
<title>new_sync_write (4 samples, 0.02%)</title><rect x="21.2" y="917" width="0.2" height="15.0" fill="rgb(246,134,44)" rx="2" ry="2" />
<text  x="24.19" y="927.5" ></text>
</g>
<g >
<title>__strlen_avx2 (8 samples, 0.04%)</title><rect x="237.2" y="501" width="0.4" height="15.0" fill="rgb(244,104,15)" rx="2" ry="2" />
<text  x="240.15" y="511.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.03%)</title><rect x="325.0" y="389" width="0.4" height="15.0" fill="rgb(219,87,3)" rx="2" ry="2" />
<text  x="328.04" y="399.5" ></text>
</g>
</g>
</svg>
