<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="838" onload="init(evt)" viewBox="0 0 1200 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="838.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="821" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="821" > </text>
<g id="frames">
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (2 samples, 0.03%)</title><rect x="837.4" y="357" width="0.4" height="15.0" fill="rgb(228,166,51)" rx="2" ry="2" />
<text  x="840.43" y="367.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (2 samples, 0.03%)</title><rect x="971.8" y="517" width="0.4" height="15.0" fill="rgb(251,219,17)" rx="2" ry="2" />
<text  x="974.81" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (1 samples, 0.02%)</title><rect x="552.9" y="293" width="0.2" height="15.0" fill="rgb(228,107,14)" rx="2" ry="2" />
<text  x="555.89" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (3 samples, 0.05%)</title><rect x="494.2" y="389" width="0.5" height="15.0" fill="rgb(222,171,42)" rx="2" ry="2" />
<text  x="497.15" y="399.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (4 samples, 0.06%)</title><rect x="990.0" y="517" width="0.8" height="15.0" fill="rgb(245,123,23)" rx="2" ry="2" />
<text  x="993.02" y="527.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (95 samples, 1.50%)</title><rect x="490.3" y="501" width="17.6" height="15.0" fill="rgb(210,125,18)" rx="2" ry="2" />
<text  x="493.25" y="511.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="546.0" y="213" width="0.4" height="15.0" fill="rgb(245,167,14)" rx="2" ry="2" />
<text  x="549.01" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (18 samples, 0.28%)</title><rect x="532.6" y="309" width="3.4" height="15.0" fill="rgb(224,30,41)" rx="2" ry="2" />
<text  x="535.63" y="319.5" ></text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.03%)</title><rect x="34.7" y="693" width="0.4" height="15.0" fill="rgb(223,184,8)" rx="2" ry="2" />
<text  x="37.72" y="703.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (3,098 samples, 48.80%)</title><rect x="358.5" y="581" width="575.8" height="15.0" fill="rgb(244,149,33)" rx="2" ry="2" />
<text  x="361.48" y="591.5" >Game_CommonEvent::Update</text>
</g>
<g >
<title>__exchange_and_add (5 samples, 0.08%)</title><rect x="834.3" y="277" width="0.9" height="15.0" fill="rgb(233,150,8)" rx="2" ry="2" />
<text  x="837.27" y="287.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (55 samples, 0.87%)</title><rect x="977.8" y="405" width="10.2" height="15.0" fill="rgb(247,80,32)" rx="2" ry="2" />
<text  x="980.75" y="415.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (2 samples, 0.03%)</title><rect x="1131.5" y="533" width="0.3" height="15.0" fill="rgb(235,180,5)" rx="2" ry="2" />
<text  x="1134.46" y="543.5" ></text>
</g>
<g >
<title>std::replace&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (18 samples, 0.28%)</title><rect x="494.7" y="469" width="3.4" height="15.0" fill="rgb(228,203,17)" rx="2" ry="2" />
<text  x="497.71" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.06%)</title><rect x="990.0" y="437" width="0.8" height="15.0" fill="rgb(242,190,8)" rx="2" ry="2" />
<text  x="993.02" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (9 samples, 0.14%)</title><rect x="448.8" y="517" width="1.7" height="15.0" fill="rgb(254,5,30)" rx="2" ry="2" />
<text  x="451.81" y="527.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (2 samples, 0.03%)</title><rect x="353.6" y="517" width="0.4" height="15.0" fill="rgb(232,193,47)" rx="2" ry="2" />
<text  x="356.65" y="527.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="445.3" y="501" width="0.2" height="15.0" fill="rgb(208,181,50)" rx="2" ry="2" />
<text  x="448.27" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (3 samples, 0.05%)</title><rect x="115.0" y="693" width="0.6" height="15.0" fill="rgb(234,150,53)" rx="2" ry="2" />
<text  x="118.01" y="703.5" ></text>
</g>
<g >
<title>__update_load_avg_se (1 samples, 0.02%)</title><rect x="1124.6" y="405" width="0.2" height="15.0" fill="rgb(221,24,34)" rx="2" ry="2" />
<text  x="1127.58" y="415.5" ></text>
</g>
<g >
<title>[easyrpg-player] (1 samples, 0.02%)</title><rect x="515.3" y="453" width="0.2" height="15.0" fill="rgb(235,192,23)" rx="2" ry="2" />
<text  x="518.34" y="463.5" ></text>
</g>
<g >
<title>Game_Interpreter::IsAsyncPending (2 samples, 0.03%)</title><rect x="362.8" y="565" width="0.3" height="15.0" fill="rgb(237,220,42)" rx="2" ry="2" />
<text  x="365.75" y="575.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (7 samples, 0.11%)</title><rect x="556.0" y="373" width="1.3" height="15.0" fill="rgb(222,178,6)" rx="2" ry="2" />
<text  x="559.05" y="383.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (4 samples, 0.06%)</title><rect x="333.9" y="549" width="0.8" height="15.0" fill="rgb(229,203,54)" rx="2" ry="2" />
<text  x="336.95" y="559.5" ></text>
</g>
<g >
<title>update_process_times (2 samples, 0.03%)</title><rect x="1124.4" y="453" width="0.4" height="15.0" fill="rgb(252,113,12)" rx="2" ry="2" />
<text  x="1127.39" y="463.5" ></text>
</g>
<g >
<title>Window_Base::Update (3 samples, 0.05%)</title><rect x="959.7" y="565" width="0.6" height="15.0" fill="rgb(224,105,52)" rx="2" ry="2" />
<text  x="962.72" y="575.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_manager (2 samples, 0.03%)</title><rect x="104.8" y="741" width="0.4" height="15.0" fill="rgb(224,53,41)" rx="2" ry="2" />
<text  x="107.79" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_compare (1 samples, 0.02%)</title><rect x="533.0" y="293" width="0.2" height="15.0" fill="rgb(239,216,18)" rx="2" ry="2" />
<text  x="536.00" y="303.5" ></text>
</g>
<g >
<title>std::__unguarded_linear_insert&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Val_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (4 samples, 0.06%)</title><rect x="351.4" y="501" width="0.8" height="15.0" fill="rgb(221,194,21)" rx="2" ry="2" />
<text  x="354.42" y="511.5" ></text>
</g>
<g >
<title>easyrpg-player (5,967 samples, 93.98%)</title><rect x="81.0" y="773" width="1109.0" height="15.0" fill="rgb(248,72,16)" rx="2" ry="2" />
<text  x="84.00" y="783.5" >easyrpg-player</text>
</g>
<g >
<title>__sched_text_start (107 samples, 1.69%)</title><rect x="46.4" y="629" width="19.9" height="15.0" fill="rgb(228,92,26)" rx="2" ry="2" />
<text  x="49.43" y="639.5" ></text>
</g>
<g >
<title>pixman_transform_point_3d (1 samples, 0.02%)</title><rect x="94.4" y="741" width="0.2" height="15.0" fill="rgb(250,21,34)" rx="2" ry="2" />
<text  x="97.38" y="751.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (8 samples, 0.13%)</title><rect x="393.2" y="533" width="1.5" height="15.0" fill="rgb(220,55,16)" rx="2" ry="2" />
<text  x="396.24" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.02%)</title><rect x="869.4" y="533" width="0.2" height="15.0" fill="rgb(239,201,33)" rx="2" ry="2" />
<text  x="872.40" y="543.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="45.3" y="613" width="0.2" height="15.0" fill="rgb(251,105,49)" rx="2" ry="2" />
<text  x="48.31" y="623.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="180.1" y="501" width="0.1" height="15.0" fill="rgb(231,124,35)" rx="2" ry="2" />
<text  x="183.06" y="511.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.03%)</title><rect x="156.1" y="741" width="0.4" height="15.0" fill="rgb(206,29,16)" rx="2" ry="2" />
<text  x="159.08" y="751.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="990.9" y="501" width="0.2" height="15.0" fill="rgb(206,22,41)" rx="2" ry="2" />
<text  x="993.95" y="511.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (18 samples, 0.28%)</title><rect x="859.5" y="453" width="3.4" height="15.0" fill="rgb(239,49,53)" rx="2" ry="2" />
<text  x="862.55" y="463.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (5 samples, 0.08%)</title><rect x="1154.9" y="517" width="0.9" height="15.0" fill="rgb(223,133,52)" rx="2" ry="2" />
<text  x="1157.87" y="527.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (26 samples, 0.41%)</title><rect x="771.8" y="437" width="4.9" height="15.0" fill="rgb(235,156,33)" rx="2" ry="2" />
<text  x="774.82" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (1 samples, 0.02%)</title><rect x="865.5" y="517" width="0.2" height="15.0" fill="rgb(247,167,30)" rx="2" ry="2" />
<text  x="868.50" y="527.5" ></text>
</g>
<g >
<title>pixman_region32_fini (2 samples, 0.03%)</title><rect x="729.3" y="405" width="0.3" height="15.0" fill="rgb(206,86,13)" rx="2" ry="2" />
<text  x="732.26" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (3 samples, 0.05%)</title><rect x="508.1" y="309" width="0.6" height="15.0" fill="rgb(220,190,28)" rx="2" ry="2" />
<text  x="511.09" y="319.5" ></text>
</g>
<g >
<title>pthread_self (1 samples, 0.02%)</title><rect x="115.8" y="741" width="0.1" height="15.0" fill="rgb(216,64,28)" rx="2" ry="2" />
<text  x="118.75" y="751.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (1 samples, 0.02%)</title><rect x="114.6" y="709" width="0.2" height="15.0" fill="rgb(245,182,44)" rx="2" ry="2" />
<text  x="117.64" y="719.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (2 samples, 0.03%)</title><rect x="865.7" y="485" width="0.4" height="15.0" fill="rgb(226,222,40)" rx="2" ry="2" />
<text  x="868.68" y="495.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (1 samples, 0.02%)</title><rect x="967.9" y="453" width="0.2" height="15.0" fill="rgb(218,68,52)" rx="2" ry="2" />
<text  x="970.90" y="463.5" ></text>
</g>
<g >
<title>posix_get_monotonic_raw (8 samples, 0.13%)</title><rect x="612.4" y="341" width="1.4" height="15.0" fill="rgb(213,218,41)" rx="2" ry="2" />
<text  x="615.36" y="351.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1189.4" y="709" width="0.2" height="15.0" fill="rgb(253,133,17)" rx="2" ry="2" />
<text  x="1192.44" y="719.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="445.3" y="389" width="0.2" height="15.0" fill="rgb(209,212,15)" rx="2" ry="2" />
<text  x="448.27" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="970.9" y="501" width="0.9" height="15.0" fill="rgb(223,216,16)" rx="2" ry="2" />
<text  x="973.88" y="511.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (7 samples, 0.11%)</title><rect x="339.9" y="533" width="1.3" height="15.0" fill="rgb(245,16,29)" rx="2" ry="2" />
<text  x="342.89" y="543.5" ></text>
</g>
<g >
<title>file_update_time (4 samples, 0.06%)</title><rect x="77.3" y="629" width="0.7" height="15.0" fill="rgb(208,24,19)" rx="2" ry="2" />
<text  x="80.28" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="991.3" y="517" width="0.4" height="15.0" fill="rgb(216,75,35)" rx="2" ry="2" />
<text  x="994.32" y="527.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.02%)</title><rect x="960.1" y="437" width="0.2" height="15.0" fill="rgb(230,26,26)" rx="2" ry="2" />
<text  x="963.10" y="447.5" ></text>
</g>
<g >
<title>ReplaceName (8 samples, 0.13%)</title><rect x="864.8" y="533" width="1.4" height="15.0" fill="rgb(243,3,28)" rx="2" ry="2" />
<text  x="867.75" y="543.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (8 samples, 0.13%)</title><rect x="967.7" y="533" width="1.5" height="15.0" fill="rgb(235,4,53)" rx="2" ry="2" />
<text  x="970.72" y="543.5" ></text>
</g>
<g >
<title>Game_Map::UpdateForegroundEvents (5 samples, 0.08%)</title><rect x="934.3" y="597" width="0.9" height="15.0" fill="rgb(238,72,52)" rx="2" ry="2" />
<text  x="937.26" y="607.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="115.6" y="725" width="0.2" height="15.0" fill="rgb(251,73,40)" rx="2" ry="2" />
<text  x="118.57" y="735.5" ></text>
</g>
<g >
<title>tcache_put (1 samples, 0.02%)</title><rect x="863.3" y="421" width="0.2" height="15.0" fill="rgb(226,161,50)" rx="2" ry="2" />
<text  x="866.27" y="431.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.02%)</title><rect x="865.3" y="453" width="0.2" height="15.0" fill="rgb(252,107,20)" rx="2" ry="2" />
<text  x="868.31" y="463.5" ></text>
</g>
<g >
<title>__libc_recvmsg (12 samples, 0.19%)</title><rect x="963.1" y="437" width="2.2" height="15.0" fill="rgb(248,88,35)" rx="2" ry="2" />
<text  x="966.07" y="447.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (1 samples, 0.02%)</title><rect x="846.9" y="485" width="0.2" height="15.0" fill="rgb(222,11,54)" rx="2" ry="2" />
<text  x="849.91" y="495.5" ></text>
</g>
<g >
<title>put_timespec64 (1 samples, 0.02%)</title><rect x="78.0" y="725" width="0.2" height="15.0" fill="rgb(235,46,6)" rx="2" ry="2" />
<text  x="81.02" y="735.5" ></text>
</g>
<g >
<title>pixman_transform_point_31_16 (1 samples, 0.02%)</title><rect x="104.6" y="741" width="0.2" height="15.0" fill="rgb(224,82,40)" rx="2" ry="2" />
<text  x="107.60" y="751.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="293.8" y="501" width="0.2" height="15.0" fill="rgb(212,118,35)" rx="2" ry="2" />
<text  x="296.80" y="511.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1189.4" y="661" width="0.2" height="15.0" fill="rgb(251,97,20)" rx="2" ry="2" />
<text  x="1192.44" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_poll (1 samples, 0.02%)</title><rect x="968.8" y="453" width="0.2" height="15.0" fill="rgb(227,55,4)" rx="2" ry="2" />
<text  x="971.83" y="463.5" ></text>
</g>
<g >
<title>pixman_image_set_transform (1 samples, 0.02%)</title><rect x="104.4" y="741" width="0.2" height="15.0" fill="rgb(207,160,48)" rx="2" ry="2" />
<text  x="107.41" y="751.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2 samples, 0.03%)</title><rect x="492.9" y="389" width="0.3" height="15.0" fill="rgb(234,157,2)" rx="2" ry="2" />
<text  x="495.85" y="399.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="963.8" y="341" width="0.2" height="15.0" fill="rgb(253,76,48)" rx="2" ry="2" />
<text  x="966.81" y="351.5" ></text>
</g>
<g >
<title>Bitmap::height (1 samples, 0.02%)</title><rect x="730.2" y="405" width="0.2" height="15.0" fill="rgb(251,96,36)" rx="2" ry="2" />
<text  x="733.19" y="415.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;int, std::allocator&lt;int&gt;, int&gt; (3 samples, 0.05%)</title><rect x="508.1" y="389" width="0.6" height="15.0" fill="rgb(209,116,17)" rx="2" ry="2" />
<text  x="511.09" y="399.5" ></text>
</g>
<g >
<title>activate_task (1 samples, 0.02%)</title><rect x="801.4" y="245" width="0.2" height="15.0" fill="rgb(224,66,34)" rx="2" ry="2" />
<text  x="804.38" y="255.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (8 samples, 0.13%)</title><rect x="349.9" y="485" width="1.5" height="15.0" fill="rgb(226,189,51)" rx="2" ry="2" />
<text  x="352.93" y="495.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (83 samples, 1.31%)</title><rect x="974.0" y="501" width="15.5" height="15.0" fill="rgb(253,43,2)" rx="2" ry="2" />
<text  x="977.04" y="511.5" ></text>
</g>
<g >
<title>finish_task_switch (7 samples, 0.11%)</title><rect x="1161.7" y="485" width="1.4" height="15.0" fill="rgb(217,25,13)" rx="2" ry="2" />
<text  x="1164.75" y="495.5" ></text>
</g>
<g >
<title>std::set&lt;short, std::less&lt;short&gt;, std::allocator&lt;short&gt; &gt;::find (1 samples, 0.02%)</title><rect x="344.5" y="581" width="0.2" height="15.0" fill="rgb(248,81,24)" rx="2" ry="2" />
<text  x="347.54" y="591.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="898.2" y="517" width="0.2" height="15.0" fill="rgb(243,159,3)" rx="2" ry="2" />
<text  x="901.21" y="527.5" ></text>
</g>
<g >
<title>_int_free (4 samples, 0.06%)</title><rect x="833.2" y="277" width="0.7" height="15.0" fill="rgb(219,186,41)" rx="2" ry="2" />
<text  x="836.16" y="287.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;int, std::allocator&lt;int&gt;, int&gt; (3 samples, 0.05%)</title><rect x="508.1" y="437" width="0.6" height="15.0" fill="rgb(238,170,2)" rx="2" ry="2" />
<text  x="511.09" y="447.5" ></text>
</g>
<g >
<title>Game_Screen::GetFlashColor (3 samples, 0.05%)</title><rect x="948.9" y="549" width="0.6" height="15.0" fill="rgb(248,140,10)" rx="2" ry="2" />
<text  x="951.94" y="559.5" ></text>
</g>
<g >
<title>ctx_sched_out (1 samples, 0.02%)</title><rect x="1189.1" y="613" width="0.2" height="15.0" fill="rgb(236,31,41)" rx="2" ry="2" />
<text  x="1192.07" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (1 samples, 0.02%)</title><rect x="865.5" y="421" width="0.2" height="15.0" fill="rgb(240,149,33)" rx="2" ry="2" />
<text  x="868.50" y="431.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (32 samples, 0.50%)</title><rect x="966.6" y="549" width="5.9" height="15.0" fill="rgb(253,63,13)" rx="2" ry="2" />
<text  x="969.60" y="559.5" ></text>
</g>
<g >
<title>Game_Map::Update (3,232 samples, 50.91%)</title><rect x="357.9" y="613" width="600.7" height="15.0" fill="rgb(205,224,32)" rx="2" ry="2" />
<text  x="360.92" y="623.5" >Game_Map::Update</text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::operator[] (17 samples, 0.27%)</title><rect x="762.7" y="261" width="3.2" height="15.0" fill="rgb(245,45,40)" rx="2" ry="2" />
<text  x="765.72" y="271.5" ></text>
</g>
<g >
<title>_int_free (5 samples, 0.08%)</title><rect x="557.3" y="261" width="1.0" height="15.0" fill="rgb(226,227,25)" rx="2" ry="2" />
<text  x="560.35" y="271.5" ></text>
</g>
<g >
<title>Bitmap::Blit (506 samples, 7.97%)</title><rect x="636.0" y="437" width="94.0" height="15.0" fill="rgb(212,56,54)" rx="2" ry="2" />
<text  x="638.96" y="447.5" >Bitmap::Blit</text>
</g>
<g >
<title>AdjustMoveParams (1 samples, 0.02%)</title><rect x="479.1" y="533" width="0.2" height="15.0" fill="rgb(207,11,1)" rx="2" ry="2" />
<text  x="482.10" y="543.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (13 samples, 0.20%)</title><rect x="962.9" y="469" width="2.4" height="15.0" fill="rgb(222,17,36)" rx="2" ry="2" />
<text  x="965.88" y="479.5" ></text>
</g>
<g >
<title>operator== (3 samples, 0.05%)</title><rect x="337.7" y="549" width="0.5" height="15.0" fill="rgb(231,51,17)" rx="2" ry="2" />
<text  x="340.66" y="559.5" ></text>
</g>
<g >
<title>__update_idle_core (1 samples, 0.02%)</title><rect x="967.9" y="261" width="0.2" height="15.0" fill="rgb(250,205,23)" rx="2" ry="2" />
<text  x="970.90" y="271.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (757 samples, 11.92%)</title><rect x="992.1" y="613" width="140.7" height="15.0" fill="rgb(207,150,4)" rx="2" ry="2" />
<text  x="995.06" y="623.5" >[libSDL2-2.0.so.0..</text>
</g>
<g >
<title>do_nanosleep (2 samples, 0.03%)</title><rect x="1189.1" y="693" width="0.3" height="15.0" fill="rgb(217,158,28)" rx="2" ry="2" />
<text  x="1192.07" y="703.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (6 samples, 0.09%)</title><rect x="774.4" y="357" width="1.1" height="15.0" fill="rgb(221,148,1)" rx="2" ry="2" />
<text  x="777.43" y="367.5" ></text>
</g>
<g >
<title>std::__merge_sort_loop&lt;Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (8 samples, 0.13%)</title><rect x="352.2" y="533" width="1.4" height="15.0" fill="rgb(232,123,3)" rx="2" ry="2" />
<text  x="355.16" y="543.5" ></text>
</g>
<g >
<title>pixman_image_get_width@plt (1 samples, 0.02%)</title><rect x="773.7" y="389" width="0.2" height="15.0" fill="rgb(247,220,51)" rx="2" ry="2" />
<text  x="776.68" y="399.5" ></text>
</g>
<g >
<title>Sprite::SetFlashEffect (1 samples, 0.02%)</title><rect x="950.6" y="533" width="0.2" height="15.0" fill="rgb(249,81,34)" rx="2" ry="2" />
<text  x="953.62" y="543.5" ></text>
</g>
<g >
<title>SDL_GetTicks@plt (2 samples, 0.03%)</title><rect x="558.3" y="421" width="0.3" height="15.0" fill="rgb(243,180,1)" rx="2" ry="2" />
<text  x="561.28" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::~vector (2 samples, 0.03%)</title><rect x="833.9" y="293" width="0.4" height="15.0" fill="rgb(234,53,5)" rx="2" ry="2" />
<text  x="836.90" y="303.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="967.9" y="309" width="0.2" height="15.0" fill="rgb(209,142,21)" rx="2" ry="2" />
<text  x="970.90" y="319.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (2 samples, 0.03%)</title><rect x="837.4" y="453" width="0.4" height="15.0" fill="rgb(237,134,6)" rx="2" ry="2" />
<text  x="840.43" y="463.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (3 samples, 0.05%)</title><rect x="63.9" y="597" width="0.6" height="15.0" fill="rgb(243,66,5)" rx="2" ry="2" />
<text  x="66.90" y="607.5" ></text>
</g>
<g >
<title>std::__merge_sort_with_buffer&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (35 samples, 0.55%)</title><rect x="349.6" y="549" width="6.5" height="15.0" fill="rgb(207,47,19)" rx="2" ry="2" />
<text  x="352.56" y="559.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="64.3" y="565" width="0.2" height="15.0" fill="rgb(244,14,53)" rx="2" ry="2" />
<text  x="67.27" y="575.5" ></text>
</g>
<g >
<title>XQueryPointer (1 samples, 0.02%)</title><rect x="968.1" y="501" width="0.2" height="15.0" fill="rgb(221,144,5)" rx="2" ry="2" />
<text  x="971.09" y="511.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (2 samples, 0.03%)</title><rect x="155.0" y="741" width="0.3" height="15.0" fill="rgb(236,41,21)" rx="2" ry="2" />
<text  x="157.97" y="751.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (1 samples, 0.02%)</title><rect x="965.7" y="405" width="0.2" height="15.0" fill="rgb(225,209,26)" rx="2" ry="2" />
<text  x="968.67" y="415.5" ></text>
</g>
<g >
<title>pixman_transform_point (32 samples, 0.50%)</title><rect x="323.4" y="469" width="5.9" height="15.0" fill="rgb(248,131,24)" rx="2" ry="2" />
<text  x="326.35" y="479.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::function (8 samples, 0.13%)</title><rect x="512.2" y="485" width="1.5" height="15.0" fill="rgb(224,10,42)" rx="2" ry="2" />
<text  x="515.18" y="495.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="757.1" y="165" width="0.2" height="15.0" fill="rgb(235,227,51)" rx="2" ry="2" />
<text  x="760.14" y="175.5" ></text>
</g>
<g >
<title>update_blocked_averages (3 samples, 0.05%)</title><rect x="988.5" y="421" width="0.6" height="15.0" fill="rgb(248,209,21)" rx="2" ry="2" />
<text  x="991.53" y="431.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (55 samples, 0.87%)</title><rect x="807.5" y="341" width="10.2" height="15.0" fill="rgb(223,65,30)" rx="2" ry="2" />
<text  x="810.51" y="351.5" ></text>
</g>
<g >
<title>task_ctx_sched_out (1 samples, 0.02%)</title><rect x="1189.1" y="629" width="0.2" height="15.0" fill="rgb(205,197,36)" rx="2" ry="2" />
<text  x="1192.07" y="639.5" ></text>
</g>
<g >
<title>std::__insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (1 samples, 0.02%)</title><rect x="183.0" y="549" width="0.2" height="15.0" fill="rgb(251,136,4)" rx="2" ry="2" />
<text  x="186.03" y="559.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (3,101 samples, 48.84%)</title><rect x="357.9" y="597" width="576.4" height="15.0" fill="rgb(231,45,11)" rx="2" ry="2" />
<text  x="360.92" y="607.5" >Game_Map::UpdateCommonEvents</text>
</g>
<g >
<title>operator() (1 samples, 0.02%)</title><rect x="959.0" y="581" width="0.2" height="15.0" fill="rgb(217,176,36)" rx="2" ry="2" />
<text  x="961.98" y="591.5" ></text>
</g>
<g >
<title>import_iovec (1 samples, 0.02%)</title><rect x="965.7" y="341" width="0.2" height="15.0" fill="rgb(241,4,18)" rx="2" ry="2" />
<text  x="968.67" y="351.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="835.4" y="277" width="0.2" height="15.0" fill="rgb(251,55,49)" rx="2" ry="2" />
<text  x="838.39" y="287.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="294.0" y="517" width="0.2" height="15.0" fill="rgb(243,212,43)" rx="2" ry="2" />
<text  x="296.99" y="527.5" ></text>
</g>
<g >
<title>xcb_poll_for_reply64 (3 samples, 0.05%)</title><rect x="965.7" y="501" width="0.5" height="15.0" fill="rgb(226,36,26)" rx="2" ry="2" />
<text  x="968.67" y="511.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (1 samples, 0.02%)</title><rect x="968.1" y="453" width="0.2" height="15.0" fill="rgb(242,142,8)" rx="2" ry="2" />
<text  x="971.09" y="463.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (1 samples, 0.02%)</title><rect x="339.7" y="533" width="0.2" height="15.0" fill="rgb(232,111,32)" rx="2" ry="2" />
<text  x="342.71" y="543.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="1189.3" y="549" width="0.1" height="15.0" fill="rgb(228,85,27)" rx="2" ry="2" />
<text  x="1192.26" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (86 samples, 1.35%)</title><rect x="973.5" y="533" width="16.0" height="15.0" fill="rgb(210,146,49)" rx="2" ry="2" />
<text  x="976.48" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::_M_deallocate (1 samples, 0.02%)</title><rect x="879.1" y="437" width="0.1" height="15.0" fill="rgb(245,133,6)" rx="2" ry="2" />
<text  x="882.06" y="447.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (88 samples, 1.39%)</title><rect x="941.9" y="565" width="16.3" height="15.0" fill="rgb(249,161,24)" rx="2" ry="2" />
<text  x="944.88" y="575.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (107 samples, 1.69%)</title><rect x="430.6" y="533" width="19.9" height="15.0" fill="rgb(215,87,22)" rx="2" ry="2" />
<text  x="433.59" y="543.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.02%)</title><rect x="535.6" y="197" width="0.2" height="15.0" fill="rgb(245,126,14)" rx="2" ry="2" />
<text  x="538.60" y="207.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.03%)</title><rect x="1124.4" y="501" width="0.4" height="15.0" fill="rgb(217,156,7)" rx="2" ry="2" />
<text  x="1127.39" y="511.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="67.4" y="709" width="0.2" height="15.0" fill="rgb(217,39,29)" rx="2" ry="2" />
<text  x="70.43" y="719.5" ></text>
</g>
<g >
<title>update_blocked_averages (3 samples, 0.05%)</title><rect x="65.2" y="533" width="0.6" height="15.0" fill="rgb(253,59,48)" rx="2" ry="2" />
<text  x="68.20" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_compare (1 samples, 0.02%)</title><rect x="538.6" y="261" width="0.2" height="15.0" fill="rgb(230,96,23)" rx="2" ry="2" />
<text  x="541.57" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Drawable*&gt;::construct&lt;Drawable*, Drawable* const&amp;&gt; (2 samples, 0.03%)</title><rect x="793.8" y="389" width="0.3" height="15.0" fill="rgb(249,32,9)" rx="2" ry="2" />
<text  x="796.75" y="399.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="66.1" y="581" width="0.2" height="15.0" fill="rgb(231,72,46)" rx="2" ry="2" />
<text  x="69.13" y="591.5" ></text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.03%)</title><rect x="1124.4" y="485" width="0.4" height="15.0" fill="rgb(245,199,27)" rx="2" ry="2" />
<text  x="1127.39" y="495.5" ></text>
</g>
<g >
<title>Cache::System (3 samples, 0.05%)</title><rect x="959.7" y="517" width="0.6" height="15.0" fill="rgb(218,181,39)" rx="2" ry="2" />
<text  x="962.72" y="527.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::CommonEvent&gt; (7 samples, 0.11%)</title><rect x="936.5" y="517" width="1.3" height="15.0" fill="rgb(240,22,2)" rx="2" ry="2" />
<text  x="939.49" y="527.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.02%)</title><rect x="63.9" y="453" width="0.2" height="15.0" fill="rgb(209,192,3)" rx="2" ry="2" />
<text  x="66.90" y="463.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (1,709 samples, 26.92%)</title><rect x="519.8" y="469" width="317.6" height="15.0" fill="rgb(224,162,54)" rx="2" ry="2" />
<text  x="522.80" y="479.5" >Game_Picture::OnPictureSpriteReady</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2 samples, 0.03%)</title><rect x="529.3" y="293" width="0.4" height="15.0" fill="rgb(217,28,2)" rx="2" ry="2" />
<text  x="532.28" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (4 samples, 0.06%)</title><rect x="494.0" y="405" width="0.7" height="15.0" fill="rgb(226,184,51)" rx="2" ry="2" />
<text  x="496.97" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (9 samples, 0.14%)</title><rect x="963.6" y="389" width="1.7" height="15.0" fill="rgb(215,68,35)" rx="2" ry="2" />
<text  x="966.63" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (1 samples, 0.02%)</title><rect x="528.5" y="357" width="0.2" height="15.0" fill="rgb(245,213,21)" rx="2" ry="2" />
<text  x="531.54" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.02%)</title><rect x="869.8" y="533" width="0.2" height="15.0" fill="rgb(225,124,45)" rx="2" ry="2" />
<text  x="872.77" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="114.6" y="725" width="1.0" height="15.0" fill="rgb(210,135,51)" rx="2" ry="2" />
<text  x="117.64" y="735.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.02%)</title><rect x="64.5" y="485" width="0.1" height="15.0" fill="rgb(249,39,22)" rx="2" ry="2" />
<text  x="67.46" y="495.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (6 samples, 0.09%)</title><rect x="526.5" y="309" width="1.1" height="15.0" fill="rgb(227,110,2)" rx="2" ry="2" />
<text  x="529.49" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (5 samples, 0.08%)</title><rect x="528.7" y="341" width="1.0" height="15.0" fill="rgb(232,157,51)" rx="2" ry="2" />
<text  x="531.72" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1 samples, 0.02%)</title><rect x="106.3" y="741" width="0.2" height="15.0" fill="rgb(207,185,11)" rx="2" ry="2" />
<text  x="109.27" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (2 samples, 0.03%)</title><rect x="529.3" y="309" width="0.4" height="15.0" fill="rgb(224,154,38)" rx="2" ry="2" />
<text  x="532.28" y="319.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (2 samples, 0.03%)</title><rect x="341.2" y="549" width="0.4" height="15.0" fill="rgb(241,212,51)" rx="2" ry="2" />
<text  x="344.20" y="559.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.02%)</title><rect x="555.7" y="245" width="0.2" height="15.0" fill="rgb(241,49,46)" rx="2" ry="2" />
<text  x="558.67" y="255.5" ></text>
</g>
<g >
<title>__wake_up_common (12 samples, 0.19%)</title><rect x="74.3" y="629" width="2.2" height="15.0" fill="rgb(217,83,10)" rx="2" ry="2" />
<text  x="77.31" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (2 samples, 0.03%)</title><rect x="105.9" y="741" width="0.4" height="15.0" fill="rgb(230,30,34)" rx="2" ry="2" />
<text  x="108.90" y="751.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (1 samples, 0.02%)</title><rect x="974.8" y="469" width="0.2" height="15.0" fill="rgb(230,199,50)" rx="2" ry="2" />
<text  x="977.78" y="479.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.03%)</title><rect x="34.7" y="709" width="0.4" height="15.0" fill="rgb(237,210,0)" rx="2" ry="2" />
<text  x="37.72" y="719.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="1168.3" y="517" width="0.1" height="15.0" fill="rgb(213,126,19)" rx="2" ry="2" />
<text  x="1171.25" y="527.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (26 samples, 0.41%)</title><rect x="546.6" y="309" width="4.8" height="15.0" fill="rgb(212,109,54)" rx="2" ry="2" />
<text  x="549.57" y="319.5" ></text>
</g>
<g >
<title>find (1 samples, 0.02%)</title><rect x="959.7" y="453" width="0.2" height="15.0" fill="rgb(254,161,47)" rx="2" ry="2" />
<text  x="962.72" y="463.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (19 samples, 0.30%)</title><rect x="491.2" y="469" width="3.5" height="15.0" fill="rgb(248,176,44)" rx="2" ry="2" />
<text  x="494.18" y="479.5" ></text>
</g>
<g >
<title>@plt (2 samples, 0.03%)</title><rect x="965.3" y="453" width="0.4" height="15.0" fill="rgb(231,4,7)" rx="2" ry="2" />
<text  x="968.30" y="463.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_manager (11 samples, 0.17%)</title><rect x="515.5" y="453" width="2.1" height="15.0" fill="rgb(237,40,6)" rx="2" ry="2" />
<text  x="518.53" y="463.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (2 samples, 0.03%)</title><rect x="76.5" y="613" width="0.4" height="15.0" fill="rgb(215,51,29)" rx="2" ry="2" />
<text  x="79.54" y="623.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (1 samples, 0.02%)</title><rect x="445.3" y="325" width="0.2" height="15.0" fill="rgb(206,112,39)" rx="2" ry="2" />
<text  x="448.27" y="335.5" ></text>
</g>
<g >
<title>FileRequestAsync::SetGraphicFile (1 samples, 0.02%)</title><rect x="839.8" y="501" width="0.2" height="15.0" fill="rgb(218,7,4)" rx="2" ry="2" />
<text  x="842.85" y="511.5" ></text>
</g>
<g >
<title>__fdget (4 samples, 0.06%)</title><rect x="964.6" y="341" width="0.7" height="15.0" fill="rgb(253,101,42)" rx="2" ry="2" />
<text  x="967.56" y="351.5" ></text>
</g>
<g >
<title>remove_wait_queue (4 samples, 0.06%)</title><rect x="44.8" y="677" width="0.7" height="15.0" fill="rgb(207,121,32)" rx="2" ry="2" />
<text  x="47.76" y="687.5" ></text>
</g>
<g >
<title>posix_get_monotonic_raw (2 samples, 0.03%)</title><rect x="1153.6" y="533" width="0.3" height="15.0" fill="rgb(210,40,0)" rx="2" ry="2" />
<text  x="1156.57" y="543.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (1 samples, 0.02%)</title><rect x="84.5" y="757" width="0.2" height="15.0" fill="rgb(238,33,34)" rx="2" ry="2" />
<text  x="87.53" y="767.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1168.3" y="597" width="0.1" height="15.0" fill="rgb(253,207,39)" rx="2" ry="2" />
<text  x="1171.25" y="607.5" ></text>
</g>
<g >
<title>LoadBitmap (114 samples, 1.80%)</title><rect x="537.1" y="421" width="21.2" height="15.0" fill="rgb(217,147,3)" rx="2" ry="2" />
<text  x="540.09" y="431.5" ></text>
</g>
<g >
<title>Sprite::SetOpacity (2 samples, 0.03%)</title><rect x="856.8" y="501" width="0.3" height="15.0" fill="rgb(205,155,11)" rx="2" ry="2" />
<text  x="859.76" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (3 samples, 0.05%)</title><rect x="555.5" y="309" width="0.5" height="15.0" fill="rgb(240,142,47)" rx="2" ry="2" />
<text  x="558.49" y="319.5" ></text>
</g>
<g >
<title>generic_update_time (2 samples, 0.03%)</title><rect x="77.7" y="613" width="0.3" height="15.0" fill="rgb(226,162,1)" rx="2" ry="2" />
<text  x="80.65" y="623.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="536.7" y="325" width="0.2" height="15.0" fill="rgb(242,18,4)" rx="2" ry="2" />
<text  x="539.72" y="335.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="115.0" y="645" width="0.2" height="15.0" fill="rgb(230,204,29)" rx="2" ry="2" />
<text  x="118.01" y="655.5" ></text>
</g>
<g >
<title>__libc_calloc (2 samples, 0.03%)</title><rect x="965.3" y="469" width="0.4" height="15.0" fill="rgb(209,57,37)" rx="2" ry="2" />
<text  x="968.30" y="479.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="962.0" y="421" width="0.1" height="15.0" fill="rgb(212,116,33)" rx="2" ry="2" />
<text  x="964.95" y="431.5" ></text>
</g>
<g >
<title>std::find&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable*&gt; (30 samples, 0.47%)</title><rect x="801.6" y="373" width="5.5" height="15.0" fill="rgb(252,29,47)" rx="2" ry="2" />
<text  x="804.56" y="383.5" ></text>
</g>
<g >
<title>Window_NumberInput::Update (1 samples, 0.02%)</title><rect x="959.5" y="581" width="0.2" height="15.0" fill="rgb(240,59,54)" rx="2" ry="2" />
<text  x="962.54" y="591.5" ></text>
</g>
<g >
<title>__GI___getpid (1 samples, 0.02%)</title><rect x="1163.4" y="565" width="0.2" height="15.0" fill="rgb(217,62,18)" rx="2" ry="2" />
<text  x="1166.42" y="575.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (21 samples, 0.33%)</title><rect x="1127.6" y="469" width="3.9" height="15.0" fill="rgb(248,86,2)" rx="2" ry="2" />
<text  x="1130.55" y="479.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="101.4" y="741" width="0.2" height="15.0" fill="rgb(224,85,44)" rx="2" ry="2" />
<text  x="104.44" y="751.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::reset (1 samples, 0.02%)</title><rect x="339.7" y="565" width="0.2" height="15.0" fill="rgb(226,211,4)" rx="2" ry="2" />
<text  x="342.71" y="575.5" ></text>
</g>
<g >
<title>Window_NumberInput::UpdateCursorRect (1 samples, 0.02%)</title><rect x="959.5" y="565" width="0.2" height="15.0" fill="rgb(227,138,45)" rx="2" ry="2" />
<text  x="962.54" y="575.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="65.0" y="533" width="0.2" height="15.0" fill="rgb(211,95,15)" rx="2" ry="2" />
<text  x="68.01" y="543.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.05%)</title><rect x="513.7" y="437" width="0.5" height="15.0" fill="rgb(247,176,11)" rx="2" ry="2" />
<text  x="516.67" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="357.0" y="549" width="0.2" height="15.0" fill="rgb(211,107,38)" rx="2" ry="2" />
<text  x="359.99" y="559.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (186 samples, 2.93%)</title><rect x="731.7" y="357" width="34.5" height="15.0" fill="rgb(212,13,24)" rx="2" ry="2" />
<text  x="734.68" y="367.5" >st..</text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::function&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;, void, void&gt; (9 samples, 0.14%)</title><rect x="513.7" y="485" width="1.6" height="15.0" fill="rgb(214,194,32)" rx="2" ry="2" />
<text  x="516.67" y="495.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (10 samples, 0.16%)</title><rect x="989.8" y="581" width="1.9" height="15.0" fill="rgb(235,7,21)" rx="2" ry="2" />
<text  x="992.83" y="591.5" ></text>
</g>
<g >
<title>Scene::HasRequestedScene (4 samples, 0.06%)</title><rect x="917.9" y="549" width="0.8" height="15.0" fill="rgb(221,31,11)" rx="2" ry="2" />
<text  x="920.91" y="559.5" ></text>
</g>
<g >
<title>ktime_get_raw_ts64 (2 samples, 0.03%)</title><rect x="1153.6" y="517" width="0.3" height="15.0" fill="rgb(225,4,50)" rx="2" ry="2" />
<text  x="1156.57" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (12 samples, 0.19%)</title><rect x="467.9" y="517" width="2.3" height="15.0" fill="rgb(245,56,44)" rx="2" ry="2" />
<text  x="470.95" y="527.5" ></text>
</g>
<g >
<title>Sprite::SetOpacity (1 samples, 0.02%)</title><rect x="776.7" y="437" width="0.1" height="15.0" fill="rgb(241,160,54)" rx="2" ry="2" />
<text  x="779.66" y="447.5" ></text>
</g>
<g >
<title>std::stable_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, bool (*)(Drawable const*, Drawable const*)&gt; (47 samples, 0.74%)</title><rect x="348.3" y="597" width="8.7" height="15.0" fill="rgb(247,72,49)" rx="2" ry="2" />
<text  x="351.26" y="607.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="787.4" y="421" width="0.2" height="15.0" fill="rgb(208,147,18)" rx="2" ry="2" />
<text  x="790.44" y="431.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (9 samples, 0.14%)</title><rect x="332.3" y="549" width="1.6" height="15.0" fill="rgb(211,112,43)" rx="2" ry="2" />
<text  x="335.27" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (4 samples, 0.06%)</title><rect x="536.2" y="373" width="0.7" height="15.0" fill="rgb(242,165,36)" rx="2" ry="2" />
<text  x="539.16" y="383.5" ></text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (2 samples, 0.03%)</title><rect x="940.4" y="565" width="0.4" height="15.0" fill="rgb(239,162,48)" rx="2" ry="2" />
<text  x="943.40" y="575.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (2 samples, 0.03%)</title><rect x="1132.8" y="597" width="0.3" height="15.0" fill="rgb(245,91,47)" rx="2" ry="2" />
<text  x="1135.76" y="607.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.02%)</title><rect x="967.9" y="373" width="0.2" height="15.0" fill="rgb(210,200,23)" rx="2" ry="2" />
<text  x="970.90" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (3 samples, 0.05%)</title><rect x="862.9" y="485" width="0.6" height="15.0" fill="rgb(232,25,14)" rx="2" ry="2" />
<text  x="865.89" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**&gt; (5 samples, 0.08%)</title><rect x="348.4" y="517" width="1.0" height="15.0" fill="rgb(228,46,28)" rx="2" ry="2" />
<text  x="351.44" y="527.5" ></text>
</g>
<g >
<title>std::move&lt;Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="353.5" y="501" width="0.1" height="15.0" fill="rgb(215,198,45)" rx="2" ry="2" />
<text  x="356.46" y="511.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="864.2" y="453" width="0.2" height="15.0" fill="rgb(215,223,6)" rx="2" ry="2" />
<text  x="867.19" y="463.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (1 samples, 0.02%)</title><rect x="968.1" y="437" width="0.2" height="15.0" fill="rgb(242,3,22)" rx="2" ry="2" />
<text  x="971.09" y="447.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*, std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (11 samples, 0.17%)</title><rect x="837.8" y="453" width="2.0" height="15.0" fill="rgb(231,98,28)" rx="2" ry="2" />
<text  x="840.80" y="463.5" ></text>
</g>
<g >
<title>__libc_start_main (5,498 samples, 86.60%)</title><rect x="160.9" y="741" width="1021.9" height="15.0" fill="rgb(244,217,25)" rx="2" ry="2" />
<text  x="163.92" y="751.5" >__libc_start_main</text>
</g>
<g >
<title>psi_task_change (5 samples, 0.08%)</title><rect x="49.0" y="597" width="1.0" height="15.0" fill="rgb(213,100,50)" rx="2" ry="2" />
<text  x="52.03" y="607.5" ></text>
</g>
<g >
<title>handle_edge_irq (2 samples, 0.03%)</title><rect x="78.2" y="709" width="0.4" height="15.0" fill="rgb(238,207,24)" rx="2" ry="2" />
<text  x="81.21" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="879.1" y="469" width="0.1" height="15.0" fill="rgb(244,8,49)" rx="2" ry="2" />
<text  x="882.06" y="479.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (36 samples, 0.57%)</title><rect x="840.2" y="437" width="6.7" height="15.0" fill="rgb(233,26,36)" rx="2" ry="2" />
<text  x="843.22" y="447.5" ></text>
</g>
<g >
<title>__accumulate_pelt_segments (1 samples, 0.02%)</title><rect x="1168.3" y="485" width="0.1" height="15.0" fill="rgb(223,93,26)" rx="2" ry="2" />
<text  x="1171.25" y="495.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (152 samples, 2.39%)</title><rect x="733.7" y="245" width="28.3" height="15.0" fill="rgb(228,181,54)" rx="2" ry="2" />
<text  x="736.72" y="255.5" >[..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (3 samples, 0.05%)</title><rect x="623.3" y="341" width="0.6" height="15.0" fill="rgb(233,6,0)" rx="2" ry="2" />
<text  x="626.32" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.02%)</title><rect x="115.9" y="725" width="0.2" height="15.0" fill="rgb(207,88,25)" rx="2" ry="2" />
<text  x="118.94" y="735.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (3 samples, 0.05%)</title><rect x="623.3" y="309" width="0.6" height="15.0" fill="rgb(244,44,3)" rx="2" ry="2" />
<text  x="626.32" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (7 samples, 0.11%)</title><rect x="622.6" y="373" width="1.3" height="15.0" fill="rgb(212,64,47)" rx="2" ry="2" />
<text  x="625.58" y="383.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.02%)</title><rect x="864.9" y="485" width="0.2" height="15.0" fill="rgb(237,136,22)" rx="2" ry="2" />
<text  x="867.94" y="495.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (13 samples, 0.20%)</title><rect x="78.6" y="757" width="2.4" height="15.0" fill="rgb(212,49,16)" rx="2" ry="2" />
<text  x="81.58" y="767.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (40 samples, 0.63%)</title><rect x="539.1" y="261" width="7.5" height="15.0" fill="rgb(218,185,45)" rx="2" ry="2" />
<text  x="542.13" y="271.5" ></text>
</g>
<g >
<title>__atomic_add (4 samples, 0.06%)</title><rect x="791.5" y="357" width="0.8" height="15.0" fill="rgb(209,209,47)" rx="2" ry="2" />
<text  x="794.52" y="367.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (1 samples, 0.02%)</title><rect x="853.6" y="469" width="0.2" height="15.0" fill="rgb(232,37,27)" rx="2" ry="2" />
<text  x="856.60" y="479.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (35 samples, 0.55%)</title><rect x="1125.0" y="565" width="6.5" height="15.0" fill="rgb(226,95,25)" rx="2" ry="2" />
<text  x="1127.95" y="575.5" ></text>
</g>
<g >
<title>Blend (6 samples, 0.09%)</title><rect x="852.5" y="501" width="1.1" height="15.0" fill="rgb(234,167,23)" rx="2" ry="2" />
<text  x="855.49" y="511.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.02%)</title><rect x="864.8" y="437" width="0.1" height="15.0" fill="rgb(231,49,25)" rx="2" ry="2" />
<text  x="867.75" y="447.5" ></text>
</g>
<g >
<title>AdjustShowParams (2 samples, 0.03%)</title><rect x="483.9" y="533" width="0.4" height="15.0" fill="rgb(252,22,5)" rx="2" ry="2" />
<text  x="486.93" y="543.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="835.2" y="293" width="0.2" height="15.0" fill="rgb(222,202,31)" rx="2" ry="2" />
<text  x="838.20" y="303.5" ></text>
</g>
<g >
<title>Opacity::IsTransparent (1 samples, 0.02%)</title><rect x="636.1" y="421" width="0.2" height="15.0" fill="rgb(229,133,28)" rx="2" ry="2" />
<text  x="639.15" y="431.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (1 samples, 0.02%)</title><rect x="853.6" y="485" width="0.2" height="15.0" fill="rgb(214,155,23)" rx="2" ry="2" />
<text  x="856.60" y="495.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (4 samples, 0.06%)</title><rect x="878.1" y="549" width="0.8" height="15.0" fill="rgb(215,60,22)" rx="2" ry="2" />
<text  x="881.13" y="559.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.02%)</title><rect x="864.4" y="437" width="0.2" height="15.0" fill="rgb(225,145,0)" rx="2" ry="2" />
<text  x="867.38" y="447.5" ></text>
</g>
<g >
<title>_int_free (5 samples, 0.08%)</title><rect x="92.9" y="741" width="0.9" height="15.0" fill="rgb(205,89,7)" rx="2" ry="2" />
<text  x="95.89" y="751.5" ></text>
</g>
<g >
<title>Game_Map::Refresh (4 samples, 0.06%)</title><rect x="147.3" y="741" width="0.8" height="15.0" fill="rgb(253,79,22)" rx="2" ry="2" />
<text  x="150.35" y="751.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="773.9" y="373" width="0.2" height="15.0" fill="rgb(246,120,9)" rx="2" ry="2" />
<text  x="776.87" y="383.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (11 samples, 0.17%)</title><rect x="989.6" y="613" width="2.1" height="15.0" fill="rgb(238,122,11)" rx="2" ry="2" />
<text  x="992.65" y="623.5" ></text>
</g>
<g >
<title>find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int&gt; &gt;, Input::UiSource::Update()::&lt;lambda(int)&gt; &gt; (1 samples, 0.02%)</title><rect x="357.2" y="565" width="0.2" height="15.0" fill="rgb(242,121,43)" rx="2" ry="2" />
<text  x="360.18" y="575.5" ></text>
</g>
<g >
<title>memcmp@plt (2 samples, 0.03%)</title><rect x="551.0" y="261" width="0.4" height="15.0" fill="rgb(243,166,5)" rx="2" ry="2" />
<text  x="554.03" y="271.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (45 samples, 0.71%)</title><rect x="523.9" y="405" width="8.4" height="15.0" fill="rgb(211,203,14)" rx="2" ry="2" />
<text  x="526.89" y="415.5" ></text>
</g>
<g >
<title>operator new@plt (3 samples, 0.05%)</title><rect x="868.5" y="485" width="0.5" height="15.0" fill="rgb(241,177,8)" rx="2" ry="2" />
<text  x="871.47" y="495.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (8 samples, 0.13%)</title><rect x="352.2" y="517" width="1.4" height="15.0" fill="rgb(211,225,0)" rx="2" ry="2" />
<text  x="355.16" y="527.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (5 samples, 0.08%)</title><rect x="838.9" y="293" width="0.9" height="15.0" fill="rgb(230,227,3)" rx="2" ry="2" />
<text  x="841.92" y="303.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.05%)</title><rect x="508.1" y="325" width="0.6" height="15.0" fill="rgb(224,53,29)" rx="2" ry="2" />
<text  x="511.09" y="335.5" ></text>
</g>
<g >
<title>pixman_transform_point_31_16_3d (1 samples, 0.02%)</title><rect x="159.8" y="741" width="0.2" height="15.0" fill="rgb(236,57,36)" rx="2" ry="2" />
<text  x="162.80" y="751.5" ></text>
</g>
<g >
<title>tick_sched_handle (2 samples, 0.03%)</title><rect x="1124.4" y="469" width="0.4" height="15.0" fill="rgb(252,142,28)" rx="2" ry="2" />
<text  x="1127.39" y="479.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (4 samples, 0.06%)</title><rect x="333.9" y="533" width="0.8" height="15.0" fill="rgb(205,177,35)" rx="2" ry="2" />
<text  x="336.95" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (2 samples, 0.03%)</title><rect x="863.8" y="501" width="0.4" height="15.0" fill="rgb(220,116,24)" rx="2" ry="2" />
<text  x="866.82" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.06%)</title><rect x="968.3" y="469" width="0.7" height="15.0" fill="rgb(243,193,42)" rx="2" ry="2" />
<text  x="971.27" y="479.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (4 samples, 0.06%)</title><rect x="489.5" y="517" width="0.8" height="15.0" fill="rgb(224,125,43)" rx="2" ry="2" />
<text  x="492.51" y="527.5" ></text>
</g>
<g >
<title>default_wake_function (11 samples, 0.17%)</title><rect x="74.5" y="597" width="2.0" height="15.0" fill="rgb(233,132,22)" rx="2" ry="2" />
<text  x="77.49" y="607.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="835.2" y="213" width="0.2" height="15.0" fill="rgb(206,219,14)" rx="2" ry="2" />
<text  x="838.20" y="223.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;BaseUi, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (2 samples, 0.03%)</title><rect x="553.6" y="405" width="0.4" height="15.0" fill="rgb(205,222,44)" rx="2" ry="2" />
<text  x="556.63" y="415.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="865.9" y="437" width="0.2" height="15.0" fill="rgb(233,177,53)" rx="2" ry="2" />
<text  x="868.87" y="447.5" ></text>
</g>
<g >
<title>fsnotify (1 samples, 0.02%)</title><rect x="73.0" y="645" width="0.2" height="15.0" fill="rgb(217,228,40)" rx="2" ry="2" />
<text  x="76.01" y="655.5" ></text>
</g>
<g >
<title>__sched_text_start (2 samples, 0.03%)</title><rect x="1189.1" y="661" width="0.3" height="15.0" fill="rgb(221,74,15)" rx="2" ry="2" />
<text  x="1192.07" y="671.5" ></text>
</g>
<g >
<title>Graphics::Draw (936 samples, 14.74%)</title><rect x="183.0" y="629" width="174.0" height="15.0" fill="rgb(246,228,23)" rx="2" ry="2" />
<text  x="186.03" y="639.5" >Graphics::Draw</text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="773.9" y="357" width="0.2" height="15.0" fill="rgb(222,116,14)" rx="2" ry="2" />
<text  x="776.87" y="367.5" ></text>
</g>
<g >
<title>Bitmap::StretchBlit (1 samples, 0.02%)</title><rect x="145.7" y="741" width="0.2" height="15.0" fill="rgb(224,33,20)" rx="2" ry="2" />
<text  x="148.67" y="751.5" ></text>
</g>
<g >
<title>tick_sched_handle (2 samples, 0.03%)</title><rect x="34.7" y="677" width="0.4" height="15.0" fill="rgb(246,88,29)" rx="2" ry="2" />
<text  x="37.72" y="687.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipTo (103 samples, 1.62%)</title><rect x="879.2" y="549" width="19.2" height="15.0" fill="rgb(220,208,42)" rx="2" ry="2" />
<text  x="882.25" y="559.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_weak_add_ref (11 samples, 0.17%)</title><rect x="510.1" y="421" width="2.1" height="15.0" fill="rgb(240,72,48)" rx="2" ry="2" />
<text  x="513.14" y="431.5" ></text>
</g>
<g >
<title>___sys_recvmsg (2 samples, 0.03%)</title><rect x="990.2" y="373" width="0.4" height="15.0" fill="rgb(227,180,24)" rx="2" ry="2" />
<text  x="993.20" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (6 samples, 0.09%)</title><rect x="528.7" y="373" width="1.1" height="15.0" fill="rgb(210,160,2)" rx="2" ry="2" />
<text  x="531.72" y="383.5" ></text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="865.7" y="517" width="0.5" height="15.0" fill="rgb(240,87,54)" rx="2" ry="2" />
<text  x="868.68" y="527.5" ></text>
</g>
<g >
<title>__next_timer_interrupt (1 samples, 0.02%)</title><rect x="546.2" y="149" width="0.2" height="15.0" fill="rgb(244,201,52)" rx="2" ry="2" />
<text  x="549.19" y="159.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (9 samples, 0.14%)</title><rect x="1161.6" y="549" width="1.6" height="15.0" fill="rgb(213,97,33)" rx="2" ry="2" />
<text  x="1164.56" y="559.5" ></text>
</g>
<g >
<title>Bitmap::initialize_formats (1 samples, 0.02%)</title><rect x="762.5" y="261" width="0.2" height="15.0" fill="rgb(230,178,26)" rx="2" ry="2" />
<text  x="765.53" y="271.5" ></text>
</g>
<g >
<title>update_min_vruntime (1 samples, 0.02%)</title><rect x="48.7" y="565" width="0.1" height="15.0" fill="rgb(249,21,8)" rx="2" ry="2" />
<text  x="51.66" y="575.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (43 samples, 0.68%)</title><rect x="321.3" y="485" width="8.0" height="15.0" fill="rgb(218,25,13)" rx="2" ry="2" />
<text  x="324.31" y="495.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (2 samples, 0.03%)</title><rect x="974.2" y="453" width="0.4" height="15.0" fill="rgb(251,47,5)" rx="2" ry="2" />
<text  x="977.22" y="463.5" ></text>
</g>
<g >
<title>__atomic_add (11 samples, 0.17%)</title><rect x="510.1" y="389" width="2.1" height="15.0" fill="rgb(236,107,0)" rx="2" ry="2" />
<text  x="513.14" y="399.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.03%)</title><rect x="509.0" y="373" width="0.4" height="15.0" fill="rgb(205,54,46)" rx="2" ry="2" />
<text  x="512.02" y="383.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (7 samples, 0.11%)</title><rect x="339.9" y="565" width="1.3" height="15.0" fill="rgb(210,8,27)" rx="2" ry="2" />
<text  x="342.89" y="575.5" ></text>
</g>
<g >
<title>irq_exit (4 samples, 0.06%)</title><rect x="1134.1" y="549" width="0.7" height="15.0" fill="rgb(227,110,17)" rx="2" ry="2" />
<text  x="1137.06" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::CommonEvent, std::allocator&lt;RPG::CommonEvent&gt; &gt;::size (1 samples, 0.02%)</title><rect x="937.6" y="501" width="0.2" height="15.0" fill="rgb(242,47,45)" rx="2" ry="2" />
<text  x="940.61" y="511.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="156.5" y="741" width="0.1" height="15.0" fill="rgb(249,83,44)" rx="2" ry="2" />
<text  x="159.45" y="751.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (55 samples, 0.87%)</title><rect x="562.6" y="373" width="10.2" height="15.0" fill="rgb(209,36,47)" rx="2" ry="2" />
<text  x="565.55" y="383.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (74 samples, 1.17%)</title><rect x="537.6" y="357" width="13.8" height="15.0" fill="rgb(250,142,13)" rx="2" ry="2" />
<text  x="540.65" y="367.5" ></text>
</g>
<g >
<title>Player::Update (5,278 samples, 83.13%)</title><rect x="182.8" y="645" width="981.0" height="15.0" fill="rgb(244,95,10)" rx="2" ry="2" />
<text  x="185.85" y="655.5" >Player::Update</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::replace (1 samples, 0.02%)</title><rect x="865.5" y="469" width="0.2" height="15.0" fill="rgb(231,110,21)" rx="2" ry="2" />
<text  x="868.50" y="479.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (2 samples, 0.03%)</title><rect x="940.4" y="549" width="0.4" height="15.0" fill="rgb(225,90,48)" rx="2" ry="2" />
<text  x="943.40" y="559.5" ></text>
</g>
<g >
<title>put_prev_task_fair (1 samples, 0.02%)</title><rect x="989.3" y="421" width="0.2" height="15.0" fill="rgb(214,12,20)" rx="2" ry="2" />
<text  x="992.28" y="431.5" ></text>
</g>
<g >
<title>Spriteset_Map::Update (4 samples, 0.06%)</title><rect x="960.3" y="613" width="0.7" height="15.0" fill="rgb(236,67,49)" rx="2" ry="2" />
<text  x="963.28" y="623.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="959.9" y="469" width="0.2" height="15.0" fill="rgb(254,218,21)" rx="2" ry="2" />
<text  x="962.91" y="479.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, Drawable**, Drawable**&gt; (1 samples, 0.02%)</title><rect x="353.5" y="469" width="0.1" height="15.0" fill="rgb(222,88,15)" rx="2" ry="2" />
<text  x="356.46" y="479.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (32 samples, 0.50%)</title><rect x="540.4" y="245" width="6.0" height="15.0" fill="rgb(207,140,5)" rx="2" ry="2" />
<text  x="543.43" y="255.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (2 samples, 0.03%)</title><rect x="958.6" y="581" width="0.4" height="15.0" fill="rgb(210,155,9)" rx="2" ry="2" />
<text  x="961.61" y="591.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;int&gt;::~weak_ptr (5 samples, 0.08%)</title><rect x="838.9" y="373" width="0.9" height="15.0" fill="rgb(251,196,0)" rx="2" ry="2" />
<text  x="841.92" y="383.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (882 samples, 13.89%)</title><rect x="625.6" y="453" width="163.9" height="15.0" fill="rgb(243,134,36)" rx="2" ry="2" />
<text  x="628.56" y="463.5" >Game_Picture::UpdateS..</text>
</g>
<g >
<title>__exchange_and_add_dispatch (8 samples, 0.13%)</title><rect x="818.7" y="309" width="1.4" height="15.0" fill="rgb(225,38,49)" rx="2" ry="2" />
<text  x="821.66" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (38 samples, 0.60%)</title><rect x="499.2" y="389" width="7.0" height="15.0" fill="rgb(247,52,44)" rx="2" ry="2" />
<text  x="502.17" y="399.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (2 samples, 0.03%)</title><rect x="87.5" y="725" width="0.4" height="15.0" fill="rgb(218,199,0)" rx="2" ry="2" />
<text  x="90.50" y="735.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (5 samples, 0.08%)</title><rect x="69.7" y="645" width="0.9" height="15.0" fill="rgb(234,94,29)" rx="2" ry="2" />
<text  x="72.66" y="655.5" ></text>
</g>
<g >
<title>Window_Selectable::Update (3 samples, 0.05%)</title><rect x="959.7" y="581" width="0.6" height="15.0" fill="rgb(211,194,15)" rx="2" ry="2" />
<text  x="962.72" y="591.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="962.0" y="501" width="0.1" height="15.0" fill="rgb(219,197,43)" rx="2" ry="2" />
<text  x="964.95" y="511.5" ></text>
</g>
<g >
<title>FileRequestAsync::Bind (22 samples, 0.35%)</title><rect x="508.1" y="485" width="4.1" height="15.0" fill="rgb(223,70,23)" rx="2" ry="2" />
<text  x="511.09" y="495.5" ></text>
</g>
<g >
<title>Game_Map::GetNeedRefresh (8 samples, 0.13%)</title><rect x="145.9" y="741" width="1.4" height="15.0" fill="rgb(223,16,40)" rx="2" ry="2" />
<text  x="148.86" y="751.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (4 samples, 0.06%)</title><rect x="796.0" y="389" width="0.7" height="15.0" fill="rgb(230,52,3)" rx="2" ry="2" />
<text  x="798.99" y="399.5" ></text>
</g>
<g >
<title>find (1 samples, 0.02%)</title><rect x="959.7" y="469" width="0.2" height="15.0" fill="rgb(214,46,20)" rx="2" ry="2" />
<text  x="962.72" y="479.5" ></text>
</g>
<g >
<title>Sprite::GetZ (1 samples, 0.02%)</title><rect x="349.2" y="485" width="0.2" height="15.0" fill="rgb(206,159,31)" rx="2" ry="2" />
<text  x="352.19" y="495.5" ></text>
</g>
<g >
<title>__exchange_and_add (8 samples, 0.13%)</title><rect x="818.7" y="293" width="1.4" height="15.0" fill="rgb(212,137,27)" rx="2" ry="2" />
<text  x="821.66" y="303.5" ></text>
</g>
<g >
<title>Input::UiSource::Update (1 samples, 0.02%)</title><rect x="357.2" y="613" width="0.2" height="15.0" fill="rgb(218,57,6)" rx="2" ry="2" />
<text  x="360.18" y="623.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (21 samples, 0.33%)</title><rect x="1127.6" y="485" width="3.9" height="15.0" fill="rgb(240,12,53)" rx="2" ry="2" />
<text  x="1130.55" y="495.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (74 samples, 1.17%)</title><rect x="523.1" y="421" width="13.8" height="15.0" fill="rgb(232,183,30)" rx="2" ry="2" />
<text  x="526.15" y="431.5" ></text>
</g>
<g >
<title>Sprite::SetAngle (1 samples, 0.02%)</title><rect x="99.8" y="741" width="0.2" height="15.0" fill="rgb(222,168,5)" rx="2" ry="2" />
<text  x="102.77" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (5 samples, 0.08%)</title><rect x="181.7" y="629" width="1.0" height="15.0" fill="rgb(223,43,18)" rx="2" ry="2" />
<text  x="184.73" y="639.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandMovePicture (13 samples, 0.20%)</title><rect x="478.5" y="549" width="2.5" height="15.0" fill="rgb(214,44,21)" rx="2" ry="2" />
<text  x="481.54" y="559.5" ></text>
</g>
<g >
<title>unix_poll (1 samples, 0.02%)</title><rect x="991.3" y="453" width="0.2" height="15.0" fill="rgb(232,51,40)" rx="2" ry="2" />
<text  x="994.32" y="463.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (151 samples, 2.38%)</title><rect x="1133.3" y="597" width="28.1" height="15.0" fill="rgb(253,11,11)" rx="2" ry="2" />
<text  x="1136.31" y="607.5" >_..</text>
</g>
<g >
<title>Scene::MainFunction (5,378 samples, 84.71%)</title><rect x="182.7" y="661" width="999.5" height="15.0" fill="rgb(218,121,15)" rx="2" ry="2" />
<text  x="185.66" y="671.5" >Scene::MainFunction</text>
</g>
<g >
<title>__update_load_avg_se (1 samples, 0.02%)</title><rect x="801.4" y="181" width="0.2" height="15.0" fill="rgb(242,219,40)" rx="2" ry="2" />
<text  x="804.38" y="191.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (1 samples, 0.02%)</title><rect x="965.7" y="357" width="0.2" height="15.0" fill="rgb(225,226,14)" rx="2" ry="2" />
<text  x="968.67" y="367.5" ></text>
</g>
<g >
<title>find (89 samples, 1.40%)</title><rect x="537.1" y="405" width="16.5" height="15.0" fill="rgb(252,164,29)" rx="2" ry="2" />
<text  x="540.09" y="415.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="157.2" y="741" width="0.2" height="15.0" fill="rgb(225,77,36)" rx="2" ry="2" />
<text  x="160.20" y="751.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::reset (21 samples, 0.33%)</title><rect x="859.0" y="517" width="3.9" height="15.0" fill="rgb(209,57,4)" rx="2" ry="2" />
<text  x="861.99" y="527.5" ></text>
</g>
<g >
<title>Sprite::SetOpacity (1 samples, 0.02%)</title><rect x="950.8" y="549" width="0.2" height="15.0" fill="rgb(242,110,36)" rx="2" ry="2" />
<text  x="953.80" y="559.5" ></text>
</g>
<g >
<title>ctx_sched_out (1 samples, 0.02%)</title><rect x="47.0" y="581" width="0.2" height="15.0" fill="rgb(239,67,54)" rx="2" ry="2" />
<text  x="49.99" y="591.5" ></text>
</g>
<g >
<title>__vfs_read (10 samples, 0.16%)</title><rect x="69.3" y="677" width="1.8" height="15.0" fill="rgb(212,31,32)" rx="2" ry="2" />
<text  x="72.29" y="687.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (81 samples, 1.28%)</title><rect x="742.3" y="213" width="15.0" height="15.0" fill="rgb(253,116,7)" rx="2" ry="2" />
<text  x="745.27" y="223.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (5 samples, 0.08%)</title><rect x="838.9" y="309" width="0.9" height="15.0" fill="rgb(228,127,7)" rx="2" ry="2" />
<text  x="841.92" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="958.2" y="533" width="0.2" height="15.0" fill="rgb(222,20,3)" rx="2" ry="2" />
<text  x="961.24" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="116.1" y="725" width="0.2" height="15.0" fill="rgb(239,181,47)" rx="2" ry="2" />
<text  x="119.12" y="735.5" ></text>
</g>
<g >
<title>operator== (1 samples, 0.02%)</title><rect x="950.6" y="501" width="0.2" height="15.0" fill="rgb(235,82,10)" rx="2" ry="2" />
<text  x="953.62" y="511.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustParams (1 samples, 0.02%)</title><rect x="85.8" y="741" width="0.2" height="15.0" fill="rgb(205,39,48)" rx="2" ry="2" />
<text  x="88.83" y="751.5" ></text>
</g>
<g >
<title>find_busiest_group (4 samples, 0.06%)</title><rect x="65.0" y="581" width="0.8" height="15.0" fill="rgb(232,29,15)" rx="2" ry="2" />
<text  x="68.01" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="958.2" y="501" width="0.2" height="15.0" fill="rgb(248,123,34)" rx="2" ry="2" />
<text  x="961.24" y="511.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.02%)</title><rect x="990.6" y="325" width="0.2" height="15.0" fill="rgb(251,131,40)" rx="2" ry="2" />
<text  x="993.58" y="335.5" ></text>
</g>
<g >
<title>unix_poll (1 samples, 0.02%)</title><rect x="991.5" y="469" width="0.2" height="15.0" fill="rgb(208,178,9)" rx="2" ry="2" />
<text  x="994.51" y="479.5" ></text>
</g>
<g >
<title>dequeue_task_fair (7 samples, 0.11%)</title><rect x="975.5" y="421" width="1.3" height="15.0" fill="rgb(212,175,22)" rx="2" ry="2" />
<text  x="978.52" y="431.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="729.1" y="341" width="0.2" height="15.0" fill="rgb(214,194,45)" rx="2" ry="2" />
<text  x="732.08" y="351.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="761.8" y="229" width="0.2" height="15.0" fill="rgb(229,210,20)" rx="2" ry="2" />
<text  x="764.79" y="239.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (14 samples, 0.22%)</title><rect x="533.2" y="277" width="2.6" height="15.0" fill="rgb(228,79,31)" rx="2" ry="2" />
<text  x="536.18" y="287.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (8 samples, 0.13%)</title><rect x="554.0" y="341" width="1.5" height="15.0" fill="rgb(225,140,16)" rx="2" ry="2" />
<text  x="557.00" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign&lt;char*, void&gt; (1 samples, 0.02%)</title><rect x="865.5" y="485" width="0.2" height="15.0" fill="rgb(231,187,39)" rx="2" ry="2" />
<text  x="868.50" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char32_t&gt;::deallocate (1 samples, 0.02%)</title><rect x="864.8" y="453" width="0.1" height="15.0" fill="rgb(232,52,17)" rx="2" ry="2" />
<text  x="867.75" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (3 samples, 0.05%)</title><rect x="972.9" y="549" width="0.6" height="15.0" fill="rgb(248,220,51)" rx="2" ry="2" />
<text  x="975.92" y="559.5" ></text>
</g>
<g >
<title>Cache::System (1 samples, 0.02%)</title><rect x="959.0" y="517" width="0.2" height="15.0" fill="rgb(243,213,44)" rx="2" ry="2" />
<text  x="961.98" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (10 samples, 0.16%)</title><rect x="1161.4" y="581" width="1.8" height="15.0" fill="rgb(246,56,7)" rx="2" ry="2" />
<text  x="1164.38" y="591.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="536.0" y="341" width="0.2" height="15.0" fill="rgb(220,180,52)" rx="2" ry="2" />
<text  x="538.97" y="351.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.02%)</title><rect x="866.6" y="485" width="0.2" height="15.0" fill="rgb(230,71,28)" rx="2" ry="2" />
<text  x="869.61" y="495.5" ></text>
</g>
<g >
<title>aa_file_perm (1 samples, 0.02%)</title><rect x="72.8" y="613" width="0.2" height="15.0" fill="rgb(214,87,35)" rx="2" ry="2" />
<text  x="75.82" y="623.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="63.9" y="469" width="0.2" height="15.0" fill="rgb(211,171,20)" rx="2" ry="2" />
<text  x="66.90" y="479.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (1 samples, 0.02%)</title><rect x="1189.1" y="645" width="0.2" height="15.0" fill="rgb(223,60,2)" rx="2" ry="2" />
<text  x="1192.07" y="655.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="773.9" y="421" width="0.2" height="15.0" fill="rgb(226,219,4)" rx="2" ry="2" />
<text  x="776.87" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (1 samples, 0.02%)</title><rect x="940.2" y="533" width="0.2" height="15.0" fill="rgb(254,177,34)" rx="2" ry="2" />
<text  x="943.21" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::push_back (2 samples, 0.03%)</title><rect x="509.6" y="469" width="0.4" height="15.0" fill="rgb(212,109,43)" rx="2" ry="2" />
<text  x="512.58" y="479.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::swap (3 samples, 0.05%)</title><rect x="859.0" y="501" width="0.5" height="15.0" fill="rgb(210,198,23)" rx="2" ry="2" />
<text  x="861.99" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (9 samples, 0.14%)</title><rect x="1161.6" y="565" width="1.6" height="15.0" fill="rgb(234,54,17)" rx="2" ry="2" />
<text  x="1164.56" y="575.5" ></text>
</g>
<g >
<title>deactivate_task (14 samples, 0.22%)</title><rect x="47.4" y="613" width="2.6" height="15.0" fill="rgb(235,100,29)" rx="2" ry="2" />
<text  x="50.36" y="623.5" ></text>
</g>
<g >
<title>std::__weak_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__weak_count (11 samples, 0.17%)</title><rect x="510.1" y="437" width="2.1" height="15.0" fill="rgb(220,182,24)" rx="2" ry="2" />
<text  x="513.14" y="447.5" ></text>
</g>
<g >
<title>pipe_read (2 samples, 0.03%)</title><rect x="70.8" y="645" width="0.3" height="15.0" fill="rgb(242,135,25)" rx="2" ry="2" />
<text  x="73.77" y="655.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="64.5" y="581" width="0.1" height="15.0" fill="rgb(221,133,42)" rx="2" ry="2" />
<text  x="67.46" y="591.5" ></text>
</g>
<g >
<title>Game_Character::IsJumping (1 samples, 0.02%)</title><rect x="935.4" y="565" width="0.2" height="15.0" fill="rgb(253,45,49)" rx="2" ry="2" />
<text  x="938.38" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::~basic_string (1 samples, 0.02%)</title><rect x="864.8" y="517" width="0.1" height="15.0" fill="rgb(222,97,16)" rx="2" ry="2" />
<text  x="867.75" y="527.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="44.8" y="661" width="0.3" height="15.0" fill="rgb(246,201,34)" rx="2" ry="2" />
<text  x="47.76" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt;::_M_erase (1 samples, 0.02%)</title><rect x="835.4" y="309" width="0.2" height="15.0" fill="rgb(231,184,22)" rx="2" ry="2" />
<text  x="838.39" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (8 samples, 0.13%)</title><rect x="622.4" y="389" width="1.5" height="15.0" fill="rgb(227,24,54)" rx="2" ry="2" />
<text  x="625.40" y="399.5" ></text>
</g>
<g >
<title>[libpthread-2.29.so] (1 samples, 0.02%)</title><rect x="777.4" y="437" width="0.2" height="15.0" fill="rgb(240,147,18)" rx="2" ry="2" />
<text  x="780.40" y="447.5" ></text>
</g>
<g >
<title>Player::IsRPG2k3 (15 samples, 0.24%)</title><rect x="462.7" y="517" width="2.8" height="15.0" fill="rgb(217,21,23)" rx="2" ry="2" />
<text  x="465.75" y="527.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="865.9" y="421" width="0.2" height="15.0" fill="rgb(213,33,21)" rx="2" ry="2" />
<text  x="868.87" y="431.5" ></text>
</g>
<g >
<title>copy_page_to_iter (4 samples, 0.06%)</title><rect x="69.7" y="597" width="0.7" height="15.0" fill="rgb(244,89,32)" rx="2" ry="2" />
<text  x="72.66" y="607.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::operator= (37 samples, 0.58%)</title><rect x="840.0" y="485" width="6.9" height="15.0" fill="rgb(210,208,17)" rx="2" ry="2" />
<text  x="843.03" y="495.5" ></text>
</g>
<g >
<title>Game_Picture::Move (9 samples, 0.14%)</title><rect x="479.3" y="533" width="1.7" height="15.0" fill="rgb(219,227,35)" rx="2" ry="2" />
<text  x="482.29" y="543.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="74.1" y="661" width="0.2" height="15.0" fill="rgb(245,103,32)" rx="2" ry="2" />
<text  x="77.12" y="671.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::function (2 samples, 0.03%)</title><rect x="509.6" y="389" width="0.4" height="15.0" fill="rgb(214,81,0)" rx="2" ry="2" />
<text  x="512.58" y="399.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="294.0" y="421" width="0.2" height="15.0" fill="rgb(227,132,19)" rx="2" ry="2" />
<text  x="296.99" y="431.5" ></text>
</g>
<g >
<title>poll@plt (1 samples, 0.02%)</title><rect x="972.2" y="533" width="0.2" height="15.0" fill="rgb(238,141,14)" rx="2" ry="2" />
<text  x="975.18" y="543.5" ></text>
</g>
<g >
<title>Transition::IsActive (2 samples, 0.03%)</title><rect x="1182.2" y="677" width="0.4" height="15.0" fill="rgb(219,115,41)" rx="2" ry="2" />
<text  x="1185.19" y="687.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (4 samples, 0.06%)</title><rect x="356.2" y="517" width="0.8" height="15.0" fill="rgb(239,106,51)" rx="2" ry="2" />
<text  x="359.25" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (1 samples, 0.02%)</title><rect x="551.8" y="277" width="0.2" height="15.0" fill="rgb(246,10,20)" rx="2" ry="2" />
<text  x="554.77" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.02%)</title><rect x="331.0" y="501" width="0.2" height="15.0" fill="rgb(231,164,14)" rx="2" ry="2" />
<text  x="333.97" y="511.5" ></text>
</g>
<g >
<title>XFlush (25 samples, 0.39%)</title><rect x="962.0" y="549" width="4.6" height="15.0" fill="rgb(235,45,19)" rx="2" ry="2" />
<text  x="964.95" y="559.5" ></text>
</g>
<g >
<title>account_entity_enqueue (1 samples, 0.02%)</title><rect x="63.9" y="437" width="0.2" height="15.0" fill="rgb(220,147,35)" rx="2" ry="2" />
<text  x="66.90" y="447.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="968.8" y="421" width="0.2" height="15.0" fill="rgb(218,59,18)" rx="2" ry="2" />
<text  x="971.83" y="431.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1189.4" y="677" width="0.2" height="15.0" fill="rgb(249,90,44)" rx="2" ry="2" />
<text  x="1192.44" y="687.5" ></text>
</g>
<g >
<title>do_nanosleep (9 samples, 0.14%)</title><rect x="1161.6" y="533" width="1.6" height="15.0" fill="rgb(215,27,4)" rx="2" ry="2" />
<text  x="1164.56" y="543.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (1 samples, 0.02%)</title><rect x="480.8" y="501" width="0.2" height="15.0" fill="rgb(230,210,28)" rx="2" ry="2" />
<text  x="483.77" y="511.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="507.2" y="341" width="0.2" height="15.0" fill="rgb(246,183,18)" rx="2" ry="2" />
<text  x="510.16" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (1 samples, 0.02%)</title><rect x="393.0" y="517" width="0.2" height="15.0" fill="rgb(207,48,1)" rx="2" ry="2" />
<text  x="396.05" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;Drawable**, Drawable**&gt; (5 samples, 0.08%)</title><rect x="356.1" y="533" width="0.9" height="15.0" fill="rgb(225,16,21)" rx="2" ry="2" />
<text  x="359.06" y="543.5" ></text>
</g>
<g >
<title>update_curr (3 samples, 0.05%)</title><rect x="975.7" y="389" width="0.6" height="15.0" fill="rgb(248,70,28)" rx="2" ry="2" />
<text  x="978.71" y="399.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="787.4" y="437" width="0.2" height="15.0" fill="rgb(253,66,26)" rx="2" ry="2" />
<text  x="790.44" y="447.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.09%)</title><rect x="526.5" y="325" width="1.1" height="15.0" fill="rgb(237,121,26)" rx="2" ry="2" />
<text  x="529.49" y="335.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (3 samples, 0.05%)</title><rect x="610.5" y="309" width="0.6" height="15.0" fill="rgb(233,156,15)" rx="2" ry="2" />
<text  x="613.50" y="319.5" ></text>
</g>
<g >
<title>sock_poll (2 samples, 0.03%)</title><rect x="971.4" y="469" width="0.4" height="15.0" fill="rgb(226,112,52)" rx="2" ry="2" />
<text  x="974.43" y="479.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="64.5" y="533" width="0.1" height="15.0" fill="rgb(238,128,17)" rx="2" ry="2" />
<text  x="67.46" y="543.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.03%)</title><rect x="1124.4" y="517" width="0.4" height="15.0" fill="rgb(226,223,48)" rx="2" ry="2" />
<text  x="1127.39" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (4 samples, 0.06%)</title><rect x="494.0" y="437" width="0.7" height="15.0" fill="rgb(217,43,32)" rx="2" ry="2" />
<text  x="496.97" y="447.5" ></text>
</g>
<g >
<title>[[stack]] (72 samples, 1.13%)</title><rect x="94.9" y="757" width="13.4" height="15.0" fill="rgb(245,8,46)" rx="2" ry="2" />
<text  x="97.94" y="767.5" ></text>
</g>
<g >
<title>x86_pmu_enable (71 samples, 1.12%)</title><rect x="50.7" y="565" width="13.2" height="15.0" fill="rgb(228,123,15)" rx="2" ry="2" />
<text  x="53.70" y="575.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.02%)</title><rect x="801.4" y="229" width="0.2" height="15.0" fill="rgb(243,118,24)" rx="2" ry="2" />
<text  x="804.38" y="239.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="1189.4" y="597" width="0.2" height="15.0" fill="rgb(231,69,3)" rx="2" ry="2" />
<text  x="1192.44" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (3 samples, 0.05%)</title><rect x="494.2" y="357" width="0.5" height="15.0" fill="rgb(233,211,2)" rx="2" ry="2" />
<text  x="497.15" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.02%)</title><rect x="36.4" y="741" width="0.2" height="15.0" fill="rgb(212,85,44)" rx="2" ry="2" />
<text  x="39.39" y="751.5" ></text>
</g>
<g >
<title>unlink_chunk (1 samples, 0.02%)</title><rect x="879.1" y="373" width="0.1" height="15.0" fill="rgb(248,115,25)" rx="2" ry="2" />
<text  x="882.06" y="383.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="45.3" y="565" width="0.2" height="15.0" fill="rgb(218,63,33)" rx="2" ry="2" />
<text  x="48.31" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (3 samples, 0.05%)</title><rect x="625.0" y="405" width="0.6" height="15.0" fill="rgb(250,40,53)" rx="2" ry="2" />
<text  x="628.00" y="415.5" ></text>
</g>
<g >
<title>_copy_to_user (2 samples, 0.03%)</title><rect x="602.7" y="325" width="0.4" height="15.0" fill="rgb(214,19,1)" rx="2" ry="2" />
<text  x="605.69" y="335.5" ></text>
</g>
<g >
<title>iov_iter_init (1 samples, 0.02%)</title><rect x="70.6" y="645" width="0.2" height="15.0" fill="rgb(220,18,54)" rx="2" ry="2" />
<text  x="73.59" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="349.4" y="517" width="0.2" height="15.0" fill="rgb(247,63,21)" rx="2" ry="2" />
<text  x="352.37" y="527.5" ></text>
</g>
<g >
<title>Game_Screen::GetFlashColor (7 samples, 0.11%)</title><rect x="853.8" y="501" width="1.3" height="15.0" fill="rgb(246,111,8)" rx="2" ry="2" />
<text  x="856.79" y="511.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (749 samples, 11.80%)</title><rect x="992.2" y="581" width="139.3" height="15.0" fill="rgb(225,2,4)" rx="2" ry="2" />
<text  x="995.25" y="591.5" >[libSDL2-2.0.so.0..</text>
</g>
<g >
<title>Tone::Tone (2 samples, 0.03%)</title><rect x="771.3" y="421" width="0.3" height="15.0" fill="rgb(221,89,46)" rx="2" ry="2" />
<text  x="774.27" y="431.5" ></text>
</g>
<g >
<title>__libc_recvmsg (4 samples, 0.06%)</title><rect x="91.6" y="741" width="0.7" height="15.0" fill="rgb(254,50,34)" rx="2" ry="2" />
<text  x="94.59" y="751.5" ></text>
</g>
<g >
<title>finish_task_switch (58 samples, 0.91%)</title><rect x="977.4" y="437" width="10.8" height="15.0" fill="rgb(250,145,37)" rx="2" ry="2" />
<text  x="980.38" y="447.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (12 samples, 0.19%)</title><rect x="737.1" y="229" width="2.2" height="15.0" fill="rgb(215,102,34)" rx="2" ry="2" />
<text  x="740.07" y="239.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1153.2" y="485" width="0.2" height="15.0" fill="rgb(221,228,41)" rx="2" ry="2" />
<text  x="1156.20" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;short, short, std::_Identity&lt;short&gt;, std::less&lt;short&gt;, std::allocator&lt;short&gt; &gt;::_M_lower_bound (1 samples, 0.02%)</title><rect x="344.5" y="549" width="0.2" height="15.0" fill="rgb(239,126,54)" rx="2" ry="2" />
<text  x="347.54" y="559.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="45.3" y="581" width="0.2" height="15.0" fill="rgb(205,94,22)" rx="2" ry="2" />
<text  x="48.31" y="591.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (5 samples, 0.08%)</title><rect x="113.2" y="645" width="0.9" height="15.0" fill="rgb(221,225,23)" rx="2" ry="2" />
<text  x="116.15" y="655.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (1 samples, 0.02%)</title><rect x="940.2" y="565" width="0.2" height="15.0" fill="rgb(228,154,13)" rx="2" ry="2" />
<text  x="943.21" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_poll (4 samples, 0.06%)</title><rect x="971.1" y="485" width="0.7" height="15.0" fill="rgb(211,115,22)" rx="2" ry="2" />
<text  x="974.06" y="495.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (8 samples, 0.13%)</title><rect x="1167.0" y="613" width="1.4" height="15.0" fill="rgb(215,161,48)" rx="2" ry="2" />
<text  x="1169.95" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create@plt (1 samples, 0.02%)</title><rect x="869.0" y="485" width="0.2" height="15.0" fill="rgb(244,201,21)" rx="2" ry="2" />
<text  x="872.03" y="495.5" ></text>
</g>
<g >
<title>[anon] (5 samples, 0.08%)</title><rect x="108.3" y="757" width="0.9" height="15.0" fill="rgb(211,149,45)" rx="2" ry="2" />
<text  x="111.32" y="767.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (5 samples, 0.08%)</title><rect x="834.3" y="309" width="0.9" height="15.0" fill="rgb(231,122,3)" rx="2" ry="2" />
<text  x="837.27" y="319.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (752 samples, 11.84%)</title><rect x="992.1" y="597" width="139.7" height="15.0" fill="rgb(250,49,32)" rx="2" ry="2" />
<text  x="995.06" y="607.5" >[libSDL2-2.0.so.0..</text>
</g>
<g >
<title>Bitmap::EffectsBlit (2 samples, 0.03%)</title><rect x="96.1" y="741" width="0.3" height="15.0" fill="rgb(228,106,31)" rx="2" ry="2" />
<text  x="99.05" y="751.5" ></text>
</g>
<g >
<title>pixman_image_get_width (4 samples, 0.06%)</title><rect x="788.0" y="437" width="0.7" height="15.0" fill="rgb(251,37,17)" rx="2" ry="2" />
<text  x="790.99" y="447.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char32_t&gt;::copy (1 samples, 0.02%)</title><rect x="864.4" y="453" width="0.2" height="15.0" fill="rgb(244,14,29)" rx="2" ry="2" />
<text  x="867.38" y="463.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.02%)</title><rect x="513.3" y="389" width="0.2" height="15.0" fill="rgb(223,167,50)" rx="2" ry="2" />
<text  x="516.30" y="399.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*&gt; (11 samples, 0.17%)</title><rect x="837.8" y="437" width="2.0" height="15.0" fill="rgb(207,105,20)" rx="2" ry="2" />
<text  x="840.80" y="447.5" ></text>
</g>
<g >
<title>Sprite_Timer::Update (2 samples, 0.03%)</title><rect x="960.7" y="597" width="0.3" height="15.0" fill="rgb(235,139,48)" rx="2" ry="2" />
<text  x="963.65" y="607.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (1 samples, 0.02%)</title><rect x="990.2" y="341" width="0.2" height="15.0" fill="rgb(229,206,9)" rx="2" ry="2" />
<text  x="993.20" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (17 samples, 0.27%)</title><rect x="866.2" y="533" width="3.2" height="15.0" fill="rgb(245,123,19)" rx="2" ry="2" />
<text  x="869.24" y="543.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_manager (1 samples, 0.02%)</title><rect x="1189.4" y="757" width="0.2" height="15.0" fill="rgb(220,56,35)" rx="2" ry="2" />
<text  x="1192.44" y="767.5" ></text>
</g>
<g >
<title>__sys_recvmsg (1 samples, 0.02%)</title><rect x="965.7" y="389" width="0.2" height="15.0" fill="rgb(228,215,40)" rx="2" ry="2" />
<text  x="968.67" y="399.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.03%)</title><rect x="115.0" y="661" width="0.4" height="15.0" fill="rgb(225,198,9)" rx="2" ry="2" />
<text  x="118.01" y="671.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="1161.6" y="437" width="0.1" height="15.0" fill="rgb(217,91,50)" rx="2" ry="2" />
<text  x="1164.56" y="447.5" ></text>
</g>
<g >
<title>do_sched_yield (2 samples, 0.03%)</title><rect x="115.0" y="677" width="0.4" height="15.0" fill="rgb(214,12,6)" rx="2" ry="2" />
<text  x="118.01" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (4 samples, 0.06%)</title><rect x="877.2" y="517" width="0.7" height="15.0" fill="rgb(235,58,31)" rx="2" ry="2" />
<text  x="880.20" y="527.5" ></text>
</g>
<g >
<title>tick_sched_handle (2 samples, 0.03%)</title><rect x="63.9" y="517" width="0.4" height="15.0" fill="rgb(227,32,4)" rx="2" ry="2" />
<text  x="66.90" y="527.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="546.0" y="229" width="0.4" height="15.0" fill="rgb(217,123,13)" rx="2" ry="2" />
<text  x="549.01" y="239.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="868.3" y="469" width="0.2" height="15.0" fill="rgb(234,146,52)" rx="2" ry="2" />
<text  x="871.28" y="479.5" ></text>
</g>
<g >
<title>Sdl2Ui::ProcessActiveEvent (154 samples, 2.43%)</title><rect x="961.0" y="613" width="28.6" height="15.0" fill="rgb(252,159,5)" rx="2" ry="2" />
<text  x="964.03" y="623.5" >Sd..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="965.7" y="421" width="0.2" height="15.0" fill="rgb(237,221,11)" rx="2" ry="2" />
<text  x="968.67" y="431.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.03%)</title><rect x="492.9" y="405" width="0.3" height="15.0" fill="rgb(223,119,22)" rx="2" ry="2" />
<text  x="495.85" y="415.5" ></text>
</g>
<g >
<title>Bitmap::Clear (3 samples, 0.05%)</title><rect x="730.2" y="421" width="0.5" height="15.0" fill="rgb(219,66,42)" rx="2" ry="2" />
<text  x="733.19" y="431.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.02%)</title><rect x="518.7" y="389" width="0.2" height="15.0" fill="rgb(211,54,40)" rx="2" ry="2" />
<text  x="521.69" y="399.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="729.1" y="389" width="0.2" height="15.0" fill="rgb(225,74,20)" rx="2" ry="2" />
<text  x="732.08" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (16 samples, 0.25%)</title><rect x="866.2" y="501" width="3.0" height="15.0" fill="rgb(242,197,40)" rx="2" ry="2" />
<text  x="869.24" y="511.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (2 samples, 0.03%)</title><rect x="148.6" y="741" width="0.4" height="15.0" fill="rgb(237,185,30)" rx="2" ry="2" />
<text  x="151.65" y="751.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (21 samples, 0.33%)</title><rect x="962.3" y="517" width="3.9" height="15.0" fill="rgb(239,78,17)" rx="2" ry="2" />
<text  x="965.33" y="527.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (5 samples, 0.08%)</title><rect x="69.7" y="613" width="0.9" height="15.0" fill="rgb(246,83,4)" rx="2" ry="2" />
<text  x="72.66" y="623.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="445.3" y="421" width="0.2" height="15.0" fill="rgb(210,107,41)" rx="2" ry="2" />
<text  x="448.27" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (2 samples, 0.03%)</title><rect x="765.9" y="309" width="0.3" height="15.0" fill="rgb(221,57,40)" rx="2" ry="2" />
<text  x="768.88" y="319.5" ></text>
</g>
<g >
<title>pixman_image_set_transform (1 samples, 0.02%)</title><rect x="145.7" y="725" width="0.2" height="15.0" fill="rgb(217,8,37)" rx="2" ry="2" />
<text  x="148.67" y="735.5" ></text>
</g>
<g >
<title>_M_lower_bound (1 samples, 0.02%)</title><rect x="959.7" y="437" width="0.2" height="15.0" fill="rgb(226,58,14)" rx="2" ry="2" />
<text  x="962.72" y="447.5" ></text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (1 samples, 0.02%)</title><rect x="853.6" y="501" width="0.2" height="15.0" fill="rgb(222,6,21)" rx="2" ry="2" />
<text  x="856.60" y="511.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (2 samples, 0.03%)</title><rect x="965.9" y="437" width="0.3" height="15.0" fill="rgb(241,228,10)" rx="2" ry="2" />
<text  x="968.86" y="447.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="71.0" y="629" width="0.1" height="15.0" fill="rgb(212,124,35)" rx="2" ry="2" />
<text  x="73.96" y="639.5" ></text>
</g>
<g >
<title>ttwu_do_activate (8 samples, 0.13%)</title><rect x="74.9" y="565" width="1.5" height="15.0" fill="rgb(251,205,7)" rx="2" ry="2" />
<text  x="77.86" y="575.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (164 samples, 2.58%)</title><rect x="1133.1" y="629" width="30.5" height="15.0" fill="rgb(215,228,4)" rx="2" ry="2" />
<text  x="1136.13" y="639.5" >[l..</text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="507.2" y="293" width="0.2" height="15.0" fill="rgb(225,220,11)" rx="2" ry="2" />
<text  x="510.16" y="303.5" ></text>
</g>
<g >
<title>Game_Character::GetSpriteX (1 samples, 0.02%)</title><rect x="935.2" y="581" width="0.2" height="15.0" fill="rgb(210,146,9)" rx="2" ry="2" />
<text  x="938.19" y="591.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (1 samples, 0.02%)</title><rect x="108.3" y="741" width="0.2" height="15.0" fill="rgb(252,186,11)" rx="2" ry="2" />
<text  x="111.32" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (18 samples, 0.28%)</title><rect x="445.5" y="517" width="3.3" height="15.0" fill="rgb(253,142,23)" rx="2" ry="2" />
<text  x="448.46" y="527.5" ></text>
</g>
<g >
<title>Bitmap::height (1 samples, 0.02%)</title><rect x="773.5" y="405" width="0.2" height="15.0" fill="rgb(216,169,27)" rx="2" ry="2" />
<text  x="776.50" y="415.5" ></text>
</g>
<g >
<title>__fsnotify_parent (3 samples, 0.05%)</title><rect x="71.9" y="645" width="0.5" height="15.0" fill="rgb(245,109,1)" rx="2" ry="2" />
<text  x="74.89" y="655.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_manager (5 samples, 0.08%)</title><rect x="838.0" y="341" width="0.9" height="15.0" fill="rgb(214,174,35)" rx="2" ry="2" />
<text  x="840.99" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="959.7" y="357" width="0.2" height="15.0" fill="rgb(242,190,36)" rx="2" ry="2" />
<text  x="962.72" y="367.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="78.4" y="677" width="0.2" height="15.0" fill="rgb(209,65,26)" rx="2" ry="2" />
<text  x="81.40" y="687.5" ></text>
</g>
<g >
<title>Bitmap::Create (2 samples, 0.03%)</title><rect x="95.7" y="741" width="0.4" height="15.0" fill="rgb(207,199,45)" rx="2" ry="2" />
<text  x="98.68" y="751.5" ></text>
</g>
<g >
<title>Game_Interpreter::OnFinishStackFrame (2 samples, 0.03%)</title><rect x="878.9" y="549" width="0.3" height="15.0" fill="rgb(244,101,15)" rx="2" ry="2" />
<text  x="881.88" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_poll (2 samples, 0.03%)</title><rect x="991.3" y="501" width="0.4" height="15.0" fill="rgb(252,180,6)" rx="2" ry="2" />
<text  x="994.32" y="511.5" ></text>
</g>
<g >
<title>std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;::~pair (11 samples, 0.17%)</title><rect x="837.8" y="389" width="2.0" height="15.0" fill="rgb(244,89,28)" rx="2" ry="2" />
<text  x="840.80" y="399.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="45.3" y="597" width="0.2" height="15.0" fill="rgb(245,129,15)" rx="2" ry="2" />
<text  x="48.31" y="607.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (4 samples, 0.06%)</title><rect x="791.5" y="389" width="0.8" height="15.0" fill="rgb(216,0,6)" rx="2" ry="2" />
<text  x="794.52" y="399.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="507.2" y="325" width="0.2" height="15.0" fill="rgb(217,108,27)" rx="2" ry="2" />
<text  x="510.16" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (3 samples, 0.05%)</title><rect x="623.3" y="325" width="0.6" height="15.0" fill="rgb(209,123,6)" rx="2" ry="2" />
<text  x="626.32" y="335.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (1 samples, 0.02%)</title><rect x="1189.3" y="613" width="0.1" height="15.0" fill="rgb(250,89,30)" rx="2" ry="2" />
<text  x="1192.26" y="623.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="34.9" y="645" width="0.2" height="15.0" fill="rgb(253,36,6)" rx="2" ry="2" />
<text  x="37.90" y="655.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (94 samples, 1.48%)</title><rect x="1164.2" y="629" width="17.4" height="15.0" fill="rgb(225,142,9)" rx="2" ry="2" />
<text  x="1167.17" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;RPG::SaveEventExecFrame&gt;::destroy&lt;RPG::SaveEventExecFrame&gt; (1 samples, 0.02%)</title><rect x="879.1" y="501" width="0.1" height="15.0" fill="rgb(232,26,12)" rx="2" ry="2" />
<text  x="882.06" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (7 samples, 0.11%)</title><rect x="857.7" y="501" width="1.3" height="15.0" fill="rgb(210,28,11)" rx="2" ry="2" />
<text  x="860.69" y="511.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateSceneCalling (1 samples, 0.02%)</title><rect x="959.0" y="565" width="0.2" height="15.0" fill="rgb(220,22,50)" rx="2" ry="2" />
<text  x="961.98" y="575.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="115.2" y="645" width="0.2" height="15.0" fill="rgb(208,166,34)" rx="2" ry="2" />
<text  x="118.19" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.02%)</title><rect x="94.6" y="741" width="0.2" height="15.0" fill="rgb(232,197,17)" rx="2" ry="2" />
<text  x="97.56" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (8 samples, 0.13%)</title><rect x="622.4" y="405" width="1.5" height="15.0" fill="rgb(215,15,16)" rx="2" ry="2" />
<text  x="625.40" y="415.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (1 samples, 0.02%)</title><rect x="1189.3" y="581" width="0.1" height="15.0" fill="rgb(207,70,29)" rx="2" ry="2" />
<text  x="1192.26" y="591.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (11 samples, 0.17%)</title><rect x="989.6" y="597" width="2.1" height="15.0" fill="rgb(252,134,40)" rx="2" ry="2" />
<text  x="992.65" y="607.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (91 samples, 1.43%)</title><rect x="818.7" y="341" width="16.9" height="15.0" fill="rgb(230,217,10)" rx="2" ry="2" />
<text  x="821.66" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="357.0" y="565" width="0.2" height="15.0" fill="rgb(217,126,32)" rx="2" ry="2" />
<text  x="359.99" y="575.5" ></text>
</g>
<g >
<title>schedule (78 samples, 1.23%)</title><rect x="975.0" y="469" width="14.5" height="15.0" fill="rgb(222,79,21)" rx="2" ry="2" />
<text  x="977.96" y="479.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (4 samples, 0.06%)</title><rect x="1134.1" y="565" width="0.7" height="15.0" fill="rgb(208,216,21)" rx="2" ry="2" />
<text  x="1137.06" y="575.5" ></text>
</g>
<g >
<title>memcmp@plt (3 samples, 0.05%)</title><rect x="505.7" y="357" width="0.5" height="15.0" fill="rgb(248,44,48)" rx="2" ry="2" />
<text  x="508.68" y="367.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (4 samples, 0.06%)</title><rect x="552.0" y="277" width="0.7" height="15.0" fill="rgb(238,152,34)" rx="2" ry="2" />
<text  x="554.96" y="287.5" ></text>
</g>
<g >
<title>do_nanosleep (83 samples, 1.31%)</title><rect x="974.0" y="485" width="15.5" height="15.0" fill="rgb(232,82,23)" rx="2" ry="2" />
<text  x="977.04" y="495.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="45.7" y="661" width="0.2" height="15.0" fill="rgb(236,120,15)" rx="2" ry="2" />
<text  x="48.68" y="671.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.02%)</title><rect x="838.7" y="309" width="0.2" height="15.0" fill="rgb(226,88,16)" rx="2" ry="2" />
<text  x="841.73" y="319.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="773.9" y="405" width="0.2" height="15.0" fill="rgb(208,167,32)" rx="2" ry="2" />
<text  x="776.87" y="415.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (38 samples, 0.60%)</title><rect x="499.2" y="421" width="7.0" height="15.0" fill="rgb(212,63,1)" rx="2" ry="2" />
<text  x="502.17" y="431.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="445.3" y="517" width="0.2" height="15.0" fill="rgb(231,134,1)" rx="2" ry="2" />
<text  x="448.27" y="527.5" ></text>
</g>
<g >
<title>udev_monitor_get_fd (1 samples, 0.02%)</title><rect x="94.8" y="741" width="0.1" height="15.0" fill="rgb(215,160,50)" rx="2" ry="2" />
<text  x="97.75" y="751.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.02%)</title><rect x="835.6" y="405" width="0.2" height="15.0" fill="rgb(254,102,1)" rx="2" ry="2" />
<text  x="838.57" y="415.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::swap (1 samples, 0.02%)</title><rect x="840.0" y="469" width="0.2" height="15.0" fill="rgb(230,145,32)" rx="2" ry="2" />
<text  x="843.03" y="479.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;int&gt;, int&gt; (3 samples, 0.05%)</title><rect x="508.1" y="405" width="0.6" height="15.0" fill="rgb(214,209,11)" rx="2" ry="2" />
<text  x="511.09" y="415.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (4 samples, 0.06%)</title><rect x="117.2" y="757" width="0.8" height="15.0" fill="rgb(236,205,48)" rx="2" ry="2" />
<text  x="120.24" y="767.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (3 samples, 0.05%)</title><rect x="788.9" y="421" width="0.6" height="15.0" fill="rgb(211,193,51)" rx="2" ry="2" />
<text  x="791.92" y="431.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="836.9" y="421" width="0.2" height="15.0" fill="rgb(206,100,32)" rx="2" ry="2" />
<text  x="839.87" y="431.5" ></text>
</g>
<g >
<title>common_file_perm (3 samples, 0.05%)</title><rect x="72.4" y="629" width="0.6" height="15.0" fill="rgb(223,103,52)" rx="2" ry="2" />
<text  x="75.45" y="639.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_manager (5 samples, 0.08%)</title><rect x="512.7" y="453" width="1.0" height="15.0" fill="rgb(241,91,38)" rx="2" ry="2" />
<text  x="515.74" y="463.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::~_Head_base (5 samples, 0.08%)</title><rect x="557.3" y="357" width="1.0" height="15.0" fill="rgb(207,149,35)" rx="2" ry="2" />
<text  x="560.35" y="367.5" ></text>
</g>
<g >
<title>[[heap]] (54 samples, 0.85%)</title><rect x="84.9" y="757" width="10.0" height="15.0" fill="rgb(214,122,22)" rx="2" ry="2" />
<text  x="87.90" y="767.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1153.2" y="533" width="0.2" height="15.0" fill="rgb(232,187,29)" rx="2" ry="2" />
<text  x="1156.20" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (90 samples, 1.42%)</title><rect x="1140.0" y="581" width="16.7" height="15.0" fill="rgb(252,100,49)" rx="2" ry="2" />
<text  x="1143.00" y="591.5" ></text>
</g>
<g >
<title>read_tsc (2 samples, 0.03%)</title><rect x="609.2" y="309" width="0.4" height="15.0" fill="rgb(237,209,7)" rx="2" ry="2" />
<text  x="612.20" y="319.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="34.7" y="741" width="0.4" height="15.0" fill="rgb(217,53,16)" rx="2" ry="2" />
<text  x="37.72" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (5 samples, 0.08%)</title><rect x="507.0" y="469" width="0.9" height="15.0" fill="rgb(228,20,9)" rx="2" ry="2" />
<text  x="509.98" y="479.5" ></text>
</g>
<g >
<title>Cache::System (3 samples, 0.05%)</title><rect x="959.7" y="533" width="0.6" height="15.0" fill="rgb(236,16,19)" rx="2" ry="2" />
<text  x="962.72" y="543.5" ></text>
</g>
<g >
<title>pipe_poll (1 samples, 0.02%)</title><rect x="44.4" y="693" width="0.2" height="15.0" fill="rgb(229,25,35)" rx="2" ry="2" />
<text  x="47.38" y="703.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (3 samples, 0.05%)</title><rect x="788.9" y="389" width="0.6" height="15.0" fill="rgb(236,39,11)" rx="2" ry="2" />
<text  x="791.92" y="399.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="179.9" y="597" width="0.3" height="15.0" fill="rgb(222,141,41)" rx="2" ry="2" />
<text  x="182.87" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.16%)</title><rect x="1161.4" y="597" width="1.8" height="15.0" fill="rgb(247,103,20)" rx="2" ry="2" />
<text  x="1164.38" y="607.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (2 samples, 0.03%)</title><rect x="1189.1" y="709" width="0.3" height="15.0" fill="rgb(251,177,19)" rx="2" ry="2" />
<text  x="1192.07" y="719.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (6 samples, 0.09%)</title><rect x="969.4" y="517" width="1.1" height="15.0" fill="rgb(224,59,9)" rx="2" ry="2" />
<text  x="972.39" y="527.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (1 samples, 0.02%)</title><rect x="958.6" y="565" width="0.2" height="15.0" fill="rgb(214,25,29)" rx="2" ry="2" />
<text  x="961.61" y="575.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (5 samples, 0.08%)</title><rect x="90.5" y="741" width="0.9" height="15.0" fill="rgb(251,90,31)" rx="2" ry="2" />
<text  x="93.48" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_destroy (1 samples, 0.02%)</title><rect x="864.8" y="485" width="0.1" height="15.0" fill="rgb(250,166,18)" rx="2" ry="2" />
<text  x="867.75" y="495.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_manager (3 samples, 0.05%)</title><rect x="508.8" y="421" width="0.6" height="15.0" fill="rgb(210,157,19)" rx="2" ry="2" />
<text  x="511.84" y="431.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (151 samples, 2.38%)</title><rect x="1133.3" y="613" width="28.1" height="15.0" fill="rgb(220,152,30)" rx="2" ry="2" />
<text  x="1136.31" y="623.5" >_..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (21 samples, 0.33%)</title><rect x="532.3" y="373" width="3.9" height="15.0" fill="rgb(253,135,9)" rx="2" ry="2" />
<text  x="535.26" y="383.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (2 samples, 0.03%)</title><rect x="343.1" y="533" width="0.3" height="15.0" fill="rgb(240,67,47)" rx="2" ry="2" />
<text  x="346.05" y="543.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (18 samples, 0.28%)</title><rect x="859.5" y="485" width="3.4" height="15.0" fill="rgb(217,125,7)" rx="2" ry="2" />
<text  x="862.55" y="495.5" ></text>
</g>
<g >
<title>Bitmap::GetRect (6 samples, 0.09%)</title><rect x="789.9" y="437" width="1.1" height="15.0" fill="rgb(218,137,2)" rx="2" ry="2" />
<text  x="792.85" y="447.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.02%)</title><rect x="527.4" y="293" width="0.2" height="15.0" fill="rgb(209,6,49)" rx="2" ry="2" />
<text  x="530.42" y="303.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (154 samples, 2.43%)</title><rect x="961.0" y="597" width="28.6" height="15.0" fill="rgb(217,187,40)" rx="2" ry="2" />
<text  x="964.03" y="607.5" >[l..</text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="625.0" y="421" width="0.6" height="15.0" fill="rgb(209,110,0)" rx="2" ry="2" />
<text  x="628.00" y="431.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (339 samples, 5.34%)</title><rect x="559.4" y="405" width="63.0" height="15.0" fill="rgb(228,45,22)" rx="2" ry="2" />
<text  x="562.39" y="415.5" >__GI__..</text>
</g>
<g >
<title>__GI___libc_malloc (2 samples, 0.03%)</title><rect x="331.2" y="501" width="0.3" height="15.0" fill="rgb(225,222,28)" rx="2" ry="2" />
<text  x="334.16" y="511.5" ></text>
</g>
<g >
<title>Rect::GetSubRect (2 samples, 0.03%)</title><rect x="185.8" y="581" width="0.4" height="15.0" fill="rgb(231,202,7)" rx="2" ry="2" />
<text  x="188.82" y="591.5" ></text>
</g>
<g >
<title>ksys_read (26 samples, 0.41%)</title><rect x="68.4" y="709" width="4.8" height="15.0" fill="rgb(207,163,19)" rx="2" ry="2" />
<text  x="71.36" y="719.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (95 samples, 1.50%)</title><rect x="817.9" y="373" width="17.7" height="15.0" fill="rgb(223,132,10)" rx="2" ry="2" />
<text  x="820.92" y="383.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;Drawable*&gt; (1 samples, 0.02%)</title><rect x="353.5" y="453" width="0.1" height="15.0" fill="rgb(235,56,16)" rx="2" ry="2" />
<text  x="356.46" y="463.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (1 samples, 0.02%)</title><rect x="959.9" y="421" width="0.2" height="15.0" fill="rgb(222,151,37)" rx="2" ry="2" />
<text  x="962.91" y="431.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="45.3" y="645" width="0.2" height="15.0" fill="rgb(217,178,36)" rx="2" ry="2" />
<text  x="48.31" y="655.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_destroy (1 samples, 0.02%)</title><rect x="1189.4" y="741" width="0.2" height="15.0" fill="rgb(222,90,20)" rx="2" ry="2" />
<text  x="1192.44" y="751.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="34.9" y="613" width="0.2" height="15.0" fill="rgb(216,190,51)" rx="2" ry="2" />
<text  x="37.90" y="623.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="865.3" y="437" width="0.2" height="15.0" fill="rgb(249,105,24)" rx="2" ry="2" />
<text  x="868.31" y="447.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (6 samples, 0.09%)</title><rect x="795.6" y="437" width="1.1" height="15.0" fill="rgb(205,118,28)" rx="2" ry="2" />
<text  x="798.61" y="447.5" ></text>
</g>
<g >
<title>Bitmap::EffectsBlit (784 samples, 12.35%)</title><rect x="186.6" y="565" width="145.7" height="15.0" fill="rgb(247,88,15)" rx="2" ry="2" />
<text  x="189.56" y="575.5" >Bitmap::EffectsBlit</text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (3 samples, 0.05%)</title><rect x="508.1" y="373" width="0.6" height="15.0" fill="rgb(231,165,47)" rx="2" ry="2" />
<text  x="511.09" y="383.5" ></text>
</g>
<g >
<title>posix_get_monotonic_raw (1 samples, 0.02%)</title><rect x="970.3" y="469" width="0.2" height="15.0" fill="rgb(210,171,20)" rx="2" ry="2" />
<text  x="973.32" y="479.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="78.4" y="693" width="0.2" height="15.0" fill="rgb(217,101,15)" rx="2" ry="2" />
<text  x="81.40" y="703.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Scene&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="1163.6" y="629" width="0.2" height="15.0" fill="rgb(210,210,13)" rx="2" ry="2" />
<text  x="1166.61" y="639.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandConditionalBranch (65 samples, 1.02%)</title><rect x="382.6" y="549" width="12.1" height="15.0" fill="rgb(215,229,41)" rx="2" ry="2" />
<text  x="385.64" y="559.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (29 samples, 0.46%)</title><rect x="1126.1" y="533" width="5.4" height="15.0" fill="rgb(214,57,3)" rx="2" ry="2" />
<text  x="1129.07" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (14 samples, 0.22%)</title><rect x="491.2" y="453" width="2.6" height="15.0" fill="rgb(241,158,44)" rx="2" ry="2" />
<text  x="494.18" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::emplace_back&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (2 samples, 0.03%)</title><rect x="509.6" y="453" width="0.4" height="15.0" fill="rgb(226,221,1)" rx="2" ry="2" />
<text  x="512.58" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (1 samples, 0.02%)</title><rect x="898.0" y="517" width="0.2" height="15.0" fill="rgb(215,35,12)" rx="2" ry="2" />
<text  x="901.02" y="527.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="64.3" y="517" width="0.2" height="15.0" fill="rgb(251,128,54)" rx="2" ry="2" />
<text  x="67.27" y="527.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (1 samples, 0.02%)</title><rect x="989.8" y="549" width="0.2" height="15.0" fill="rgb(253,209,3)" rx="2" ry="2" />
<text  x="992.83" y="559.5" ></text>
</g>
<g >
<title>copy_page_from_iter (2 samples, 0.03%)</title><rect x="76.9" y="629" width="0.4" height="15.0" fill="rgb(212,94,21)" rx="2" ry="2" />
<text  x="79.91" y="639.5" ></text>
</g>
<g >
<title>_int_free (2 samples, 0.03%)</title><rect x="846.5" y="405" width="0.4" height="15.0" fill="rgb(209,21,10)" rx="2" ry="2" />
<text  x="849.54" y="415.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, Drawable**, Drawable**&gt; (1 samples, 0.02%)</title><rect x="835.4" y="261" width="0.2" height="15.0" fill="rgb(244,177,2)" rx="2" ry="2" />
<text  x="838.39" y="271.5" ></text>
</g>
<g >
<title>Graphics::IsTransitionErased (1 samples, 0.02%)</title><rect x="839.8" y="485" width="0.2" height="15.0" fill="rgb(240,20,24)" rx="2" ry="2" />
<text  x="842.85" y="495.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (2 samples, 0.03%)</title><rect x="837.4" y="469" width="0.4" height="15.0" fill="rgb(228,87,7)" rx="2" ry="2" />
<text  x="840.43" y="479.5" ></text>
</g>
<g >
<title>SDL_GetTicks (2 samples, 0.03%)</title><rect x="357.6" y="629" width="0.3" height="15.0" fill="rgb(227,142,31)" rx="2" ry="2" />
<text  x="360.55" y="639.5" ></text>
</g>
<g >
<title>activate_task (6 samples, 0.09%)</title><rect x="74.9" y="549" width="1.1" height="15.0" fill="rgb(248,223,20)" rx="2" ry="2" />
<text  x="77.86" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (2 samples, 0.03%)</title><rect x="1140.2" y="565" width="0.4" height="15.0" fill="rgb(209,80,31)" rx="2" ry="2" />
<text  x="1143.19" y="575.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="773.9" y="341" width="0.2" height="15.0" fill="rgb(216,68,19)" rx="2" ry="2" />
<text  x="776.87" y="351.5" ></text>
</g>
<g >
<title>__GI___nanosleep (91 samples, 1.43%)</title><rect x="972.7" y="565" width="16.9" height="15.0" fill="rgb(247,217,19)" rx="2" ry="2" />
<text  x="975.73" y="575.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (10 samples, 0.16%)</title><rect x="485.2" y="517" width="1.9" height="15.0" fill="rgb(248,101,5)" rx="2" ry="2" />
<text  x="488.23" y="527.5" ></text>
</g>
<g >
<title>unlink_chunk (3 samples, 0.05%)</title><rect x="831.7" y="245" width="0.5" height="15.0" fill="rgb(228,52,21)" rx="2" ry="2" />
<text  x="834.67" y="255.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipTo (2 samples, 0.03%)</title><rect x="97.2" y="741" width="0.3" height="15.0" fill="rgb(216,143,29)" rx="2" ry="2" />
<text  x="100.17" y="751.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.02%)</title><rect x="515.3" y="437" width="0.2" height="15.0" fill="rgb(211,184,31)" rx="2" ry="2" />
<text  x="518.34" y="447.5" ></text>
</g>
<g >
<title>all (6,349 samples, 100%)</title><rect x="10.0" y="789" width="1180.0" height="15.0" fill="rgb(237,54,40)" rx="2" ry="2" />
<text  x="13.00" y="799.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (225 samples, 3.54%)</title><rect x="36.4" y="757" width="41.8" height="15.0" fill="rgb(235,141,54)" rx="2" ry="2" />
<text  x="39.39" y="767.5" >ent..</text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="1168.3" y="501" width="0.1" height="15.0" fill="rgb(221,161,25)" rx="2" ry="2" />
<text  x="1171.25" y="511.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.02%)</title><rect x="73.7" y="661" width="0.2" height="15.0" fill="rgb(221,87,47)" rx="2" ry="2" />
<text  x="76.75" y="671.5" ></text>
</g>
<g >
<title>Sdl2Ui::ProcessEvents (165 samples, 2.60%)</title><rect x="961.0" y="629" width="30.7" height="15.0" fill="rgb(226,86,10)" rx="2" ry="2" />
<text  x="964.03" y="639.5" >Sd..</text>
</g>
<g >
<title>std::_Function_base::~_Function_base (12 samples, 0.19%)</title><rect x="515.3" y="469" width="2.3" height="15.0" fill="rgb(251,40,14)" rx="2" ry="2" />
<text  x="518.34" y="479.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="43.6" y="693" width="0.2" height="15.0" fill="rgb(243,74,47)" rx="2" ry="2" />
<text  x="46.64" y="703.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (1 samples, 0.02%)</title><rect x="840.0" y="453" width="0.2" height="15.0" fill="rgb(249,128,54)" rx="2" ry="2" />
<text  x="843.03" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_ppoll (142 samples, 2.24%)</title><rect x="42.0" y="725" width="26.4" height="15.0" fill="rgb(230,22,43)" rx="2" ry="2" />
<text  x="44.97" y="735.5" >_..</text>
</g>
<g >
<title>Input::Update (2 samples, 0.03%)</title><rect x="357.2" y="629" width="0.4" height="15.0" fill="rgb(214,164,46)" rx="2" ry="2" />
<text  x="360.18" y="639.5" ></text>
</g>
<g >
<title>Game_Map::Refresh (9 samples, 0.14%)</title><rect x="915.1" y="549" width="1.7" height="15.0" fill="rgb(244,168,50)" rx="2" ry="2" />
<text  x="918.12" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (5 samples, 0.08%)</title><rect x="486.0" y="501" width="0.9" height="15.0" fill="rgb(250,107,19)" rx="2" ry="2" />
<text  x="488.98" y="511.5" ></text>
</g>
<g >
<title>FileRequestAsync::Bind&lt;Game_Picture&gt; (52 samples, 0.82%)</title><rect x="507.9" y="501" width="9.7" height="15.0" fill="rgb(210,188,54)" rx="2" ry="2" />
<text  x="510.91" y="511.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="864.9" y="469" width="0.2" height="15.0" fill="rgb(208,104,53)" rx="2" ry="2" />
<text  x="867.94" y="479.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.03%)</title><rect x="34.7" y="725" width="0.4" height="15.0" fill="rgb(207,56,16)" rx="2" ry="2" />
<text  x="37.72" y="735.5" ></text>
</g>
<g >
<title>Blend (3 samples, 0.05%)</title><rect x="947.8" y="549" width="0.6" height="15.0" fill="rgb(216,209,50)" rx="2" ry="2" />
<text  x="950.83" y="559.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="64.5" y="549" width="0.1" height="15.0" fill="rgb(247,54,45)" rx="2" ry="2" />
<text  x="67.46" y="559.5" ></text>
</g>
<g >
<title>_XEventsQueued (5 samples, 0.08%)</title><rect x="990.0" y="549" width="0.9" height="15.0" fill="rgb(238,112,44)" rx="2" ry="2" />
<text  x="993.02" y="559.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="48.8" y="581" width="0.2" height="15.0" fill="rgb(219,62,4)" rx="2" ry="2" />
<text  x="51.84" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (5 samples, 0.08%)</title><rect x="557.3" y="341" width="1.0" height="15.0" fill="rgb(248,216,51)" rx="2" ry="2" />
<text  x="560.35" y="351.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.02%)</title><rect x="864.2" y="437" width="0.2" height="15.0" fill="rgb(214,146,3)" rx="2" ry="2" />
<text  x="867.19" y="447.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::swap (2 samples, 0.03%)</title><rect x="509.6" y="373" width="0.4" height="15.0" fill="rgb(224,45,3)" rx="2" ry="2" />
<text  x="512.58" y="383.5" ></text>
</g>
<g >
<title>Sprite::SetZ (1 samples, 0.02%)</title><rect x="776.8" y="437" width="0.2" height="15.0" fill="rgb(209,121,50)" rx="2" ry="2" />
<text  x="779.84" y="447.5" ></text>
</g>
<g >
<title>poll_schedule_timeout.constprop.14 (114 samples, 1.80%)</title><rect x="45.5" y="693" width="21.2" height="15.0" fill="rgb(223,198,13)" rx="2" ry="2" />
<text  x="48.50" y="703.5" ></text>
</g>
<g >
<title>__GI___poll (9 samples, 0.14%)</title><rect x="970.5" y="533" width="1.7" height="15.0" fill="rgb(208,166,46)" rx="2" ry="2" />
<text  x="973.50" y="543.5" ></text>
</g>
<g >
<title>Sprite::GetZ (2 samples, 0.03%)</title><rect x="351.8" y="453" width="0.4" height="15.0" fill="rgb(207,28,24)" rx="2" ry="2" />
<text  x="354.79" y="463.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (1 samples, 0.02%)</title><rect x="107.8" y="741" width="0.1" height="15.0" fill="rgb(217,36,54)" rx="2" ry="2" />
<text  x="110.76" y="751.5" ></text>
</g>
<g >
<title>operator() (6 samples, 0.09%)</title><rect x="343.4" y="581" width="1.1" height="15.0" fill="rgb(231,188,53)" rx="2" ry="2" />
<text  x="346.43" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="927.4" y="549" width="0.2" height="15.0" fill="rgb(243,75,42)" rx="2" ry="2" />
<text  x="930.39" y="559.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="1168.3" y="533" width="0.1" height="15.0" fill="rgb(207,51,45)" rx="2" ry="2" />
<text  x="1171.25" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (1 samples, 0.02%)</title><rect x="865.5" y="501" width="0.2" height="15.0" fill="rgb(208,31,29)" rx="2" ry="2" />
<text  x="868.50" y="511.5" ></text>
</g>
<g >
<title>Utils::DecodeUTF32 (2 samples, 0.03%)</title><rect x="864.2" y="517" width="0.4" height="15.0" fill="rgb(241,76,35)" rx="2" ry="2" />
<text  x="867.19" y="527.5" ></text>
</g>
<g >
<title>Transform::Transform (1 samples, 0.02%)</title><rect x="295.1" y="501" width="0.2" height="15.0" fill="rgb(233,182,31)" rx="2" ry="2" />
<text  x="298.10" y="511.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="115.0" y="629" width="0.2" height="15.0" fill="rgb(249,166,42)" rx="2" ry="2" />
<text  x="118.01" y="639.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1189.4" y="645" width="0.2" height="15.0" fill="rgb(216,35,50)" rx="2" ry="2" />
<text  x="1192.44" y="655.5" ></text>
</g>
<g >
<title>pixman_image_get_height (7 samples, 0.11%)</title><rect x="338.2" y="565" width="1.3" height="15.0" fill="rgb(242,218,22)" rx="2" ry="2" />
<text  x="341.22" y="575.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.02%)</title><rect x="75.0" y="517" width="0.2" height="15.0" fill="rgb(245,177,54)" rx="2" ry="2" />
<text  x="78.05" y="527.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.02%)</title><rect x="1189.3" y="597" width="0.1" height="15.0" fill="rgb(212,206,3)" rx="2" ry="2" />
<text  x="1192.26" y="607.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (1 samples, 0.02%)</title><rect x="846.9" y="469" width="0.2" height="15.0" fill="rgb(212,160,48)" rx="2" ry="2" />
<text  x="849.91" y="479.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (1 samples, 0.02%)</title><rect x="445.3" y="373" width="0.2" height="15.0" fill="rgb(238,10,28)" rx="2" ry="2" />
<text  x="448.27" y="383.5" ></text>
</g>
<g >
<title>RPG::SavePicture::SavePicture (1 samples, 0.02%)</title><rect x="958.2" y="565" width="0.2" height="15.0" fill="rgb(230,172,12)" rx="2" ry="2" />
<text  x="961.24" y="575.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (7 samples, 0.11%)</title><rect x="551.4" y="309" width="1.3" height="15.0" fill="rgb(246,200,21)" rx="2" ry="2" />
<text  x="554.40" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="294.0" y="469" width="0.2" height="15.0" fill="rgb(218,26,35)" rx="2" ry="2" />
<text  x="296.99" y="479.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (4 samples, 0.06%)</title><rect x="1132.0" y="581" width="0.8" height="15.0" fill="rgb(250,172,37)" rx="2" ry="2" />
<text  x="1135.01" y="591.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.02%)</title><rect x="967.5" y="501" width="0.2" height="15.0" fill="rgb(213,216,37)" rx="2" ry="2" />
<text  x="970.53" y="511.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (1 samples, 0.02%)</title><rect x="1131.6" y="517" width="0.2" height="15.0" fill="rgb(233,169,23)" rx="2" ry="2" />
<text  x="1134.64" y="527.5" ></text>
</g>
<g >
<title>pixman_image_create_solid_fill (2 samples, 0.03%)</title><rect x="158.7" y="741" width="0.4" height="15.0" fill="rgb(224,167,33)" rx="2" ry="2" />
<text  x="161.68" y="751.5" ></text>
</g>
<g >
<title>Game_Picture::Show (2,022 samples, 31.85%)</title><rect x="487.1" y="533" width="375.8" height="15.0" fill="rgb(212,55,20)" rx="2" ry="2" />
<text  x="490.09" y="543.5" >Game_Picture::Show</text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="729.1" y="293" width="0.2" height="15.0" fill="rgb(240,60,27)" rx="2" ry="2" />
<text  x="732.08" y="303.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (9 samples, 0.14%)</title><rect x="332.3" y="533" width="1.6" height="15.0" fill="rgb(237,65,17)" rx="2" ry="2" />
<text  x="335.27" y="543.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (4 samples, 0.06%)</title><rect x="333.9" y="501" width="0.8" height="15.0" fill="rgb(222,198,52)" rx="2" ry="2" />
<text  x="336.95" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (6 samples, 0.09%)</title><rect x="556.2" y="309" width="1.1" height="15.0" fill="rgb(211,73,1)" rx="2" ry="2" />
<text  x="559.23" y="319.5" ></text>
</g>
<g >
<title>native_write_msr (7 samples, 0.11%)</title><rect x="1161.7" y="389" width="1.4" height="15.0" fill="rgb(214,120,37)" rx="2" ry="2" />
<text  x="1164.75" y="399.5" ></text>
</g>
<g >
<title>std::_Bit_reference::operator bool (4 samples, 0.06%)</title><rect x="933.5" y="549" width="0.8" height="15.0" fill="rgb(217,185,27)" rx="2" ry="2" />
<text  x="936.52" y="559.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Scene, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (1 samples, 0.02%)</title><rect x="1163.6" y="613" width="0.2" height="15.0" fill="rgb(216,104,46)" rx="2" ry="2" />
<text  x="1166.61" y="623.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (1 samples, 0.02%)</title><rect x="536.0" y="309" width="0.2" height="15.0" fill="rgb(242,174,42)" rx="2" ry="2" />
<text  x="538.97" y="319.5" ></text>
</g>
<g >
<title>__sys_recvmsg (9 samples, 0.14%)</title><rect x="963.6" y="373" width="1.7" height="15.0" fill="rgb(206,168,11)" rx="2" ry="2" />
<text  x="966.63" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator++ (71 samples, 1.12%)</title><rect x="1168.4" y="613" width="13.2" height="15.0" fill="rgb(236,40,19)" rx="2" ry="2" />
<text  x="1171.44" y="623.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.02%)</title><rect x="516.3" y="421" width="0.2" height="15.0" fill="rgb(251,143,46)" rx="2" ry="2" />
<text  x="519.27" y="431.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="972.5" y="533" width="0.2" height="15.0" fill="rgb(227,165,21)" rx="2" ry="2" />
<text  x="975.55" y="543.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (72 samples, 1.13%)</title><rect x="50.5" y="597" width="13.4" height="15.0" fill="rgb(237,77,33)" rx="2" ry="2" />
<text  x="53.52" y="607.5" ></text>
</g>
<g >
<title>place_entity (1 samples, 0.02%)</title><rect x="75.0" y="501" width="0.2" height="15.0" fill="rgb(252,106,20)" rx="2" ry="2" />
<text  x="78.05" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (4 samples, 0.06%)</title><rect x="519.1" y="469" width="0.7" height="15.0" fill="rgb(249,147,29)" rx="2" ry="2" />
<text  x="522.06" y="479.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_manager (2 samples, 0.03%)</title><rect x="109.2" y="741" width="0.4" height="15.0" fill="rgb(245,85,24)" rx="2" ry="2" />
<text  x="112.25" y="751.5" ></text>
</g>
<g >
<title>pixman_transform_point_31_16 (25 samples, 0.39%)</title><rect x="324.7" y="453" width="4.6" height="15.0" fill="rgb(249,229,27)" rx="2" ry="2" />
<text  x="327.65" y="463.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="445.3" y="485" width="0.2" height="15.0" fill="rgb(234,165,35)" rx="2" ry="2" />
<text  x="448.27" y="495.5" ></text>
</g>
<g >
<title>Bitmap::GetWidth (17 samples, 0.27%)</title><rect x="944.7" y="549" width="3.1" height="15.0" fill="rgb(246,94,14)" rx="2" ry="2" />
<text  x="947.67" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (3 samples, 0.05%)</title><rect x="494.2" y="373" width="0.5" height="15.0" fill="rgb(220,127,54)" rx="2" ry="2" />
<text  x="497.15" y="383.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="294.0" y="485" width="0.2" height="15.0" fill="rgb(243,10,35)" rx="2" ry="2" />
<text  x="296.99" y="495.5" ></text>
</g>
<g >
<title>pixman_transform_point (1 samples, 0.02%)</title><rect x="159.1" y="741" width="0.1" height="15.0" fill="rgb(213,206,12)" rx="2" ry="2" />
<text  x="162.06" y="751.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (9 samples, 0.14%)</title><rect x="931.8" y="565" width="1.7" height="15.0" fill="rgb(220,126,0)" rx="2" ry="2" />
<text  x="934.85" y="575.5" ></text>
</g>
<g >
<title>rw_verify_area (9 samples, 0.14%)</title><rect x="71.5" y="677" width="1.7" height="15.0" fill="rgb(207,12,12)" rx="2" ry="2" />
<text  x="74.52" y="687.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="835.2" y="309" width="0.2" height="15.0" fill="rgb(247,167,21)" rx="2" ry="2" />
<text  x="838.20" y="319.5" ></text>
</g>
<g >
<title>[libGLX.so.0.0.0] (2 samples, 0.03%)</title><rect x="1163.2" y="581" width="0.4" height="15.0" fill="rgb(227,39,29)" rx="2" ry="2" />
<text  x="1166.24" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (17 samples, 0.27%)</title><rect x="1152.6" y="549" width="3.2" height="15.0" fill="rgb(248,153,2)" rx="2" ry="2" />
<text  x="1155.64" y="559.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (1 samples, 0.02%)</title><rect x="95.1" y="741" width="0.2" height="15.0" fill="rgb(236,103,26)" rx="2" ry="2" />
<text  x="98.12" y="751.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.02%)</title><rect x="34.7" y="645" width="0.2" height="15.0" fill="rgb(234,137,3)" rx="2" ry="2" />
<text  x="37.72" y="655.5" ></text>
</g>
<g >
<title>put_timespec64 (2 samples, 0.03%)</title><rect x="969.9" y="453" width="0.4" height="15.0" fill="rgb(232,50,2)" rx="2" ry="2" />
<text  x="972.95" y="463.5" ></text>
</g>
<g >
<title>read_tsc (7 samples, 0.11%)</title><rect x="607.9" y="293" width="1.3" height="15.0" fill="rgb(234,182,46)" rx="2" ry="2" />
<text  x="610.90" y="303.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (7 samples, 0.11%)</title><rect x="339.9" y="501" width="1.3" height="15.0" fill="rgb(222,79,13)" rx="2" ry="2" />
<text  x="342.89" y="511.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (18 samples, 0.28%)</title><rect x="110.9" y="741" width="3.4" height="15.0" fill="rgb(227,142,18)" rx="2" ry="2" />
<text  x="113.92" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (4 samples, 0.06%)</title><rect x="536.2" y="405" width="0.7" height="15.0" fill="rgb(213,203,20)" rx="2" ry="2" />
<text  x="539.16" y="415.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="546.0" y="149" width="0.2" height="15.0" fill="rgb(224,52,1)" rx="2" ry="2" />
<text  x="549.01" y="159.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="529.5" y="245" width="0.2" height="15.0" fill="rgb(225,201,25)" rx="2" ry="2" />
<text  x="532.47" y="255.5" ></text>
</g>
<g >
<title>LoadBitmap&lt;(&lt;unnamed&gt;::Material::Type)9&gt; (1 samples, 0.02%)</title><rect x="959.0" y="485" width="0.2" height="15.0" fill="rgb(211,90,52)" rx="2" ry="2" />
<text  x="961.98" y="495.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (83 samples, 1.31%)</title><rect x="820.1" y="325" width="15.5" height="15.0" fill="rgb(228,54,32)" rx="2" ry="2" />
<text  x="823.15" y="335.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="865.5" y="405" width="0.2" height="15.0" fill="rgb(222,202,18)" rx="2" ry="2" />
<text  x="868.50" y="415.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (109 samples, 1.72%)</title><rect x="161.3" y="645" width="20.2" height="15.0" fill="rgb(210,24,42)" rx="2" ry="2" />
<text  x="164.29" y="655.5" ></text>
</g>
<g >
<title>Game_Picture::SetNonEffectParams (1 samples, 0.02%)</title><rect x="480.8" y="517" width="0.2" height="15.0" fill="rgb(214,82,50)" rx="2" ry="2" />
<text  x="483.77" y="527.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="73.9" y="693" width="0.2" height="15.0" fill="rgb(236,228,21)" rx="2" ry="2" />
<text  x="76.93" y="703.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (1 samples, 0.02%)</title><rect x="555.9" y="293" width="0.1" height="15.0" fill="rgb(247,54,20)" rx="2" ry="2" />
<text  x="558.86" y="303.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="64.5" y="501" width="0.1" height="15.0" fill="rgb(232,44,32)" rx="2" ry="2" />
<text  x="67.46" y="511.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="757.1" y="133" width="0.2" height="15.0" fill="rgb(221,213,26)" rx="2" ry="2" />
<text  x="760.14" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt;::push_back (4 samples, 0.06%)</title><rect x="793.4" y="421" width="0.7" height="15.0" fill="rgb(233,43,50)" rx="2" ry="2" />
<text  x="796.38" y="431.5" ></text>
</g>
<g >
<title>dequeue_entity (2 samples, 0.03%)</title><rect x="975.2" y="421" width="0.3" height="15.0" fill="rgb(240,110,18)" rx="2" ry="2" />
<text  x="978.15" y="431.5" ></text>
</g>
<g >
<title>std::stable_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, bool (*)(Drawable const*, Drawable const*)&gt; (1 samples, 0.02%)</title><rect x="183.0" y="597" width="0.2" height="15.0" fill="rgb(214,97,39)" rx="2" ry="2" />
<text  x="186.03" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (4 samples, 0.06%)</title><rect x="536.2" y="389" width="0.7" height="15.0" fill="rgb(224,24,13)" rx="2" ry="2" />
<text  x="539.16" y="399.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::swap (2 samples, 0.03%)</title><rect x="795.6" y="421" width="0.4" height="15.0" fill="rgb(241,28,33)" rx="2" ry="2" />
<text  x="798.61" y="431.5" ></text>
</g>
<g >
<title>__libc_recvmsg (3 samples, 0.05%)</title><rect x="965.7" y="469" width="0.5" height="15.0" fill="rgb(206,153,10)" rx="2" ry="2" />
<text  x="968.67" y="479.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="757.1" y="197" width="0.2" height="15.0" fill="rgb(250,219,5)" rx="2" ry="2" />
<text  x="760.14" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (2 samples, 0.03%)</title><rect x="518.7" y="421" width="0.4" height="15.0" fill="rgb(252,70,52)" rx="2" ry="2" />
<text  x="521.69" y="431.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (9 samples, 0.14%)</title><rect x="551.4" y="373" width="1.7" height="15.0" fill="rgb(241,168,36)" rx="2" ry="2" />
<text  x="554.40" y="383.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.02%)</title><rect x="1189.4" y="725" width="0.2" height="15.0" fill="rgb(211,191,37)" rx="2" ry="2" />
<text  x="1192.44" y="735.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (6 samples, 0.09%)</title><rect x="623.9" y="405" width="1.1" height="15.0" fill="rgb(216,214,31)" rx="2" ry="2" />
<text  x="626.88" y="415.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.02%)</title><rect x="864.9" y="501" width="0.2" height="15.0" fill="rgb(207,16,8)" rx="2" ry="2" />
<text  x="867.94" y="511.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="348.3" y="517" width="0.1" height="15.0" fill="rgb(236,162,35)" rx="2" ry="2" />
<text  x="351.26" y="527.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="180.1" y="549" width="0.1" height="15.0" fill="rgb(231,53,54)" rx="2" ry="2" />
<text  x="183.06" y="559.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::swap (3 samples, 0.05%)</title><rect x="788.9" y="405" width="0.6" height="15.0" fill="rgb(221,27,11)" rx="2" ry="2" />
<text  x="791.92" y="415.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (9 samples, 0.14%)</title><rect x="958.6" y="613" width="1.7" height="15.0" fill="rgb(222,154,13)" rx="2" ry="2" />
<text  x="961.61" y="623.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (3 samples, 0.05%)</title><rect x="480.2" y="517" width="0.6" height="15.0" fill="rgb(241,54,44)" rx="2" ry="2" />
<text  x="483.22" y="527.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (3 samples, 0.05%)</title><rect x="555.5" y="373" width="0.5" height="15.0" fill="rgb(208,85,2)" rx="2" ry="2" />
<text  x="558.49" y="383.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="835.2" y="277" width="0.2" height="15.0" fill="rgb(254,82,28)" rx="2" ry="2" />
<text  x="838.20" y="287.5" ></text>
</g>
<g >
<title>ktime_get_raw_ts64 (1 samples, 0.02%)</title><rect x="1153.4" y="533" width="0.2" height="15.0" fill="rgb(212,67,12)" rx="2" ry="2" />
<text  x="1156.39" y="543.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="1132.9" y="549" width="0.2" height="15.0" fill="rgb(213,138,11)" rx="2" ry="2" />
<text  x="1135.94" y="559.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (2 samples, 0.03%)</title><rect x="341.2" y="581" width="0.4" height="15.0" fill="rgb(254,207,5)" rx="2" ry="2" />
<text  x="344.20" y="591.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="835.4" y="293" width="0.2" height="15.0" fill="rgb(244,227,41)" rx="2" ry="2" />
<text  x="838.39" y="303.5" ></text>
</g>
<g >
<title>scheduler_tick (2 samples, 0.03%)</title><rect x="1124.4" y="437" width="0.4" height="15.0" fill="rgb(220,23,48)" rx="2" ry="2" />
<text  x="1127.39" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="839.8" y="437" width="0.2" height="15.0" fill="rgb(227,76,12)" rx="2" ry="2" />
<text  x="842.85" y="447.5" ></text>
</g>
<g >
<title>Bitmap::GetWidth (1 samples, 0.02%)</title><rect x="767.0" y="437" width="0.2" height="15.0" fill="rgb(230,123,51)" rx="2" ry="2" />
<text  x="769.99" y="447.5" ></text>
</g>
<g >
<title>_int_free (3 samples, 0.05%)</title><rect x="507.4" y="405" width="0.5" height="15.0" fill="rgb(237,189,35)" rx="2" ry="2" />
<text  x="510.35" y="415.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (1 samples, 0.02%)</title><rect x="97.5" y="741" width="0.2" height="15.0" fill="rgb(217,184,30)" rx="2" ry="2" />
<text  x="100.54" y="751.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (17 samples, 0.27%)</title><rect x="548.2" y="277" width="3.2" height="15.0" fill="rgb(209,191,18)" rx="2" ry="2" />
<text  x="551.24" y="287.5" ></text>
</g>
<g >
<title>Player::Run (5,498 samples, 86.60%)</title><rect x="160.9" y="709" width="1021.9" height="15.0" fill="rgb(236,156,53)" rx="2" ry="2" />
<text  x="163.92" y="719.5" >Player::Run</text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (4 samples, 0.06%)</title><rect x="990.9" y="565" width="0.8" height="15.0" fill="rgb(215,182,41)" rx="2" ry="2" />
<text  x="993.95" y="575.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (1 samples, 0.02%)</title><rect x="990.4" y="341" width="0.2" height="15.0" fill="rgb(211,44,41)" rx="2" ry="2" />
<text  x="993.39" y="351.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.02%)</title><rect x="535.6" y="181" width="0.2" height="15.0" fill="rgb(245,198,32)" rx="2" ry="2" />
<text  x="538.60" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (2 samples, 0.03%)</title><rect x="105.3" y="741" width="0.4" height="15.0" fill="rgb(237,178,49)" rx="2" ry="2" />
<text  x="108.34" y="751.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="835.2" y="229" width="0.2" height="15.0" fill="rgb(222,36,37)" rx="2" ry="2" />
<text  x="838.20" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (3 samples, 0.05%)</title><rect x="862.9" y="517" width="0.6" height="15.0" fill="rgb(218,123,20)" rx="2" ry="2" />
<text  x="865.89" y="527.5" ></text>
</g>
<g >
<title>Sdl2Ui::ProcessEvents (1 samples, 0.02%)</title><rect x="99.6" y="741" width="0.2" height="15.0" fill="rgb(220,195,28)" rx="2" ry="2" />
<text  x="102.58" y="751.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (2 samples, 0.03%)</title><rect x="1189.6" y="757" width="0.4" height="15.0" fill="rgb(250,92,6)" rx="2" ry="2" />
<text  x="1192.63" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (2 samples, 0.03%)</title><rect x="518.7" y="405" width="0.4" height="15.0" fill="rgb(252,225,51)" rx="2" ry="2" />
<text  x="521.69" y="415.5" ></text>
</g>
<g >
<title>Bitmap::height (1 samples, 0.02%)</title><rect x="944.5" y="533" width="0.2" height="15.0" fill="rgb(210,221,19)" rx="2" ry="2" />
<text  x="947.48" y="543.5" ></text>
</g>
<g >
<title>Game_Screen::Update (112 samples, 1.76%)</title><rect x="937.8" y="597" width="20.8" height="15.0" fill="rgb(231,40,10)" rx="2" ry="2" />
<text  x="940.79" y="607.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (8 samples, 0.13%)</title><rect x="818.7" y="325" width="1.4" height="15.0" fill="rgb(214,12,38)" rx="2" ry="2" />
<text  x="821.66" y="335.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (11 samples, 0.17%)</title><rect x="837.8" y="405" width="2.0" height="15.0" fill="rgb(222,103,5)" rx="2" ry="2" />
<text  x="840.80" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_M_lower_bound (17 samples, 0.27%)</title><rect x="762.7" y="213" width="3.2" height="15.0" fill="rgb(231,111,11)" rx="2" ry="2" />
<text  x="765.72" y="223.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="180.1" y="533" width="0.1" height="15.0" fill="rgb(238,163,40)" rx="2" ry="2" />
<text  x="183.06" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (9 samples, 0.14%)</title><rect x="349.7" y="501" width="1.7" height="15.0" fill="rgb(245,2,33)" rx="2" ry="2" />
<text  x="352.74" y="511.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (55 samples, 0.87%)</title><rect x="977.8" y="373" width="10.2" height="15.0" fill="rgb(220,134,37)" rx="2" ry="2" />
<text  x="980.75" y="383.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.02%)</title><rect x="968.8" y="389" width="0.2" height="15.0" fill="rgb(210,80,21)" rx="2" ry="2" />
<text  x="971.83" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="76.5" y="597" width="0.4" height="15.0" fill="rgb(246,116,50)" rx="2" ry="2" />
<text  x="79.54" y="607.5" ></text>
</g>
<g >
<title>pixman_image_unref (1 samples, 0.02%)</title><rect x="332.1" y="517" width="0.2" height="15.0" fill="rgb(248,178,2)" rx="2" ry="2" />
<text  x="335.09" y="527.5" ></text>
</g>
<g >
<title>update_sd_lb_stats (1 samples, 0.02%)</title><rect x="988.3" y="389" width="0.2" height="15.0" fill="rgb(225,196,29)" rx="2" ry="2" />
<text  x="991.35" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (7 samples, 0.11%)</title><rect x="867.0" y="469" width="1.3" height="15.0" fill="rgb(237,173,1)" rx="2" ry="2" />
<text  x="869.98" y="479.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="1132.8" y="485" width="0.1" height="15.0" fill="rgb(232,175,9)" rx="2" ry="2" />
<text  x="1135.76" y="495.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1168.3" y="565" width="0.1" height="15.0" fill="rgb(206,69,25)" rx="2" ry="2" />
<text  x="1171.25" y="575.5" ></text>
</g>
<g >
<title>scheduler_tick (2 samples, 0.03%)</title><rect x="63.9" y="485" width="0.4" height="15.0" fill="rgb(221,103,2)" rx="2" ry="2" />
<text  x="66.90" y="495.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.03%)</title><rect x="519.4" y="437" width="0.4" height="15.0" fill="rgb(206,199,18)" rx="2" ry="2" />
<text  x="522.43" y="447.5" ></text>
</g>
<g >
<title>put_timespec64 (1 samples, 0.02%)</title><rect x="1156.5" y="549" width="0.2" height="15.0" fill="rgb(234,130,4)" rx="2" ry="2" />
<text  x="1159.55" y="559.5" ></text>
</g>
<g >
<title>__exchange_and_add (5 samples, 0.08%)</title><rect x="838.9" y="277" width="0.9" height="15.0" fill="rgb(209,144,48)" rx="2" ry="2" />
<text  x="841.92" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (2 samples, 0.03%)</title><rect x="518.7" y="437" width="0.4" height="15.0" fill="rgb(231,207,16)" rx="2" ry="2" />
<text  x="521.69" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_free (3 samples, 0.05%)</title><rect x="844.9" y="405" width="0.5" height="15.0" fill="rgb(237,34,51)" rx="2" ry="2" />
<text  x="847.87" y="415.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (1 samples, 0.02%)</title><rect x="990.9" y="533" width="0.2" height="15.0" fill="rgb(220,7,9)" rx="2" ry="2" />
<text  x="993.95" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.02%)</title><rect x="557.2" y="277" width="0.1" height="15.0" fill="rgb(248,98,13)" rx="2" ry="2" />
<text  x="560.16" y="287.5" ></text>
</g>
<g >
<title>SDLAudioP2 (382 samples, 6.02%)</title><rect x="10.0" y="773" width="71.0" height="15.0" fill="rgb(232,116,21)" rx="2" ry="2" />
<text  x="13.00" y="783.5" >SDLAudioP2</text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (1 samples, 0.02%)</title><rect x="990.9" y="549" width="0.2" height="15.0" fill="rgb(242,138,16)" rx="2" ry="2" />
<text  x="993.95" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (4 samples, 0.06%)</title><rect x="536.2" y="341" width="0.7" height="15.0" fill="rgb(212,49,2)" rx="2" ry="2" />
<text  x="539.16" y="351.5" ></text>
</g>
<g >
<title>pixman_image_get_data@plt (1 samples, 0.02%)</title><rect x="730.9" y="405" width="0.2" height="15.0" fill="rgb(219,221,5)" rx="2" ry="2" />
<text  x="733.94" y="415.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (8 samples, 0.13%)</title><rect x="332.5" y="517" width="1.4" height="15.0" fill="rgb(214,150,21)" rx="2" ry="2" />
<text  x="335.46" y="527.5" ></text>
</g>
<g >
<title>__calc_delta (1 samples, 0.02%)</title><rect x="757.1" y="37" width="0.2" height="15.0" fill="rgb(246,23,50)" rx="2" ry="2" />
<text  x="760.14" y="47.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (5 samples, 0.08%)</title><rect x="356.1" y="549" width="0.9" height="15.0" fill="rgb(238,135,40)" rx="2" ry="2" />
<text  x="359.06" y="559.5" ></text>
</g>
<g >
<title>__GI___libc_free (2 samples, 0.03%)</title><rect x="155.3" y="741" width="0.4" height="15.0" fill="rgb(247,65,28)" rx="2" ry="2" />
<text  x="158.34" y="751.5" ></text>
</g>
<g >
<title>none_of&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int&gt; &gt;, Input::UiSource::Update()::&lt;lambda(int)&gt; &gt; (1 samples, 0.02%)</title><rect x="357.2" y="581" width="0.2" height="15.0" fill="rgb(245,220,54)" rx="2" ry="2" />
<text  x="360.18" y="591.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (71 samples, 1.12%)</title><rect x="50.7" y="581" width="13.2" height="15.0" fill="rgb(235,219,42)" rx="2" ry="2" />
<text  x="53.70" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (30 samples, 0.47%)</title><rect x="1182.8" y="757" width="5.5" height="15.0" fill="rgb(216,196,47)" rx="2" ry="2" />
<text  x="1185.75" y="767.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (1 samples, 0.02%)</title><rect x="342.9" y="549" width="0.2" height="15.0" fill="rgb(209,97,6)" rx="2" ry="2" />
<text  x="345.87" y="559.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.05%)</title><rect x="556.6" y="277" width="0.6" height="15.0" fill="rgb(223,29,13)" rx="2" ry="2" />
<text  x="559.60" y="287.5" ></text>
</g>
<g >
<title>Game_Player::Update (14 samples, 0.22%)</title><rect x="935.2" y="597" width="2.6" height="15.0" fill="rgb(213,133,15)" rx="2" ry="2" />
<text  x="938.19" y="607.5" ></text>
</g>
<g >
<title>pixman_image_get_stride (1 samples, 0.02%)</title><rect x="730.4" y="389" width="0.2" height="15.0" fill="rgb(228,47,26)" rx="2" ry="2" />
<text  x="733.38" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="962.9" y="453" width="0.2" height="15.0" fill="rgb(205,135,1)" rx="2" ry="2" />
<text  x="965.88" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;::operator++ (1 samples, 0.02%)</title><rect x="807.0" y="325" width="0.1" height="15.0" fill="rgb(241,192,31)" rx="2" ry="2" />
<text  x="809.95" y="335.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="558.5" y="357" width="0.1" height="15.0" fill="rgb(244,15,14)" rx="2" ry="2" />
<text  x="561.46" y="367.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (1 samples, 0.02%)</title><rect x="990.8" y="501" width="0.1" height="15.0" fill="rgb(239,188,51)" rx="2" ry="2" />
<text  x="993.76" y="511.5" ></text>
</g>
<g >
<title>pixman_image_create_solid_fill (1 samples, 0.02%)</title><rect x="103.9" y="741" width="0.1" height="15.0" fill="rgb(212,202,29)" rx="2" ry="2" />
<text  x="106.86" y="751.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (113 samples, 1.78%)</title><rect x="45.7" y="677" width="21.0" height="15.0" fill="rgb(233,26,15)" rx="2" ry="2" />
<text  x="48.68" y="687.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="757.1" y="101" width="0.2" height="15.0" fill="rgb(217,199,32)" rx="2" ry="2" />
<text  x="760.14" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.02%)</title><rect x="486.9" y="501" width="0.2" height="15.0" fill="rgb(217,146,6)" rx="2" ry="2" />
<text  x="489.91" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (1 samples, 0.02%)</title><rect x="107.4" y="741" width="0.2" height="15.0" fill="rgb(221,214,50)" rx="2" ry="2" />
<text  x="110.39" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="877.9" y="533" width="0.2" height="15.0" fill="rgb(252,24,2)" rx="2" ry="2" />
<text  x="880.95" y="543.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_weak_release (5 samples, 0.08%)</title><rect x="838.9" y="325" width="0.9" height="15.0" fill="rgb(245,27,13)" rx="2" ry="2" />
<text  x="841.92" y="335.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (1 samples, 0.02%)</title><rect x="1163.6" y="565" width="0.2" height="15.0" fill="rgb(252,114,16)" rx="2" ry="2" />
<text  x="1166.61" y="575.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (3 samples, 0.05%)</title><rect x="63.9" y="581" width="0.6" height="15.0" fill="rgb(235,118,39)" rx="2" ry="2" />
<text  x="66.90" y="591.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="835.2" y="245" width="0.2" height="15.0" fill="rgb(235,113,46)" rx="2" ry="2" />
<text  x="838.20" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate (2 samples, 0.03%)</title><rect x="765.9" y="325" width="0.3" height="15.0" fill="rgb(249,159,33)" rx="2" ry="2" />
<text  x="768.88" y="335.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (19 samples, 0.30%)</title><rect x="151.3" y="741" width="3.5" height="15.0" fill="rgb(205,93,14)" rx="2" ry="2" />
<text  x="154.25" y="751.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="293.8" y="437" width="0.2" height="15.0" fill="rgb(223,14,45)" rx="2" ry="2" />
<text  x="296.80" y="447.5" ></text>
</g>
<g >
<title>operator!= (3 samples, 0.05%)</title><rect x="337.7" y="565" width="0.5" height="15.0" fill="rgb(210,110,50)" rx="2" ry="2" />
<text  x="340.66" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (1 samples, 0.02%)</title><rect x="357.4" y="565" width="0.2" height="15.0" fill="rgb(214,227,0)" rx="2" ry="2" />
<text  x="360.36" y="575.5" ></text>
</g>
<g >
<title>dequeue_entity (4 samples, 0.06%)</title><rect x="48.1" y="581" width="0.7" height="15.0" fill="rgb(221,11,8)" rx="2" ry="2" />
<text  x="51.10" y="591.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="47.2" y="613" width="0.2" height="15.0" fill="rgb(206,112,46)" rx="2" ry="2" />
<text  x="50.17" y="623.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="968.1" y="389" width="0.2" height="15.0" fill="rgb(234,22,42)" rx="2" ry="2" />
<text  x="971.09" y="399.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (3 samples, 0.05%)</title><rect x="767.9" y="405" width="0.6" height="15.0" fill="rgb(252,116,22)" rx="2" ry="2" />
<text  x="770.92" y="415.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="959.7" y="373" width="0.2" height="15.0" fill="rgb(241,166,10)" rx="2" ry="2" />
<text  x="962.72" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::_M_erase_at_end (11 samples, 0.17%)</title><rect x="837.8" y="469" width="2.0" height="15.0" fill="rgb(244,122,7)" rx="2" ry="2" />
<text  x="840.80" y="479.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (66 samples, 1.04%)</title><rect x="820.9" y="277" width="12.3" height="15.0" fill="rgb(249,214,54)" rx="2" ry="2" />
<text  x="823.89" y="287.5" ></text>
</g>
<g >
<title>unlink_chunk (1 samples, 0.02%)</title><rect x="761.4" y="197" width="0.2" height="15.0" fill="rgb(228,19,14)" rx="2" ry="2" />
<text  x="764.42" y="207.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="64.5" y="517" width="0.1" height="15.0" fill="rgb(220,220,35)" rx="2" ry="2" />
<text  x="67.46" y="527.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.02%)</title><rect x="968.8" y="437" width="0.2" height="15.0" fill="rgb(230,218,50)" rx="2" ry="2" />
<text  x="971.83" y="447.5" ></text>
</g>
<g >
<title>Tone::Tone (3 samples, 0.05%)</title><rect x="856.0" y="485" width="0.6" height="15.0" fill="rgb(208,104,47)" rx="2" ry="2" />
<text  x="859.02" y="495.5" ></text>
</g>
<g >
<title>pixman_transform_point_3d (6 samples, 0.09%)</title><rect x="329.3" y="485" width="1.1" height="15.0" fill="rgb(222,44,10)" rx="2" ry="2" />
<text  x="332.30" y="495.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (4 samples, 0.06%)</title><rect x="990.0" y="485" width="0.8" height="15.0" fill="rgb(223,115,23)" rx="2" ry="2" />
<text  x="993.02" y="495.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1189.4" y="629" width="0.2" height="15.0" fill="rgb(210,92,39)" rx="2" ry="2" />
<text  x="1192.44" y="639.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::_Bind (6 samples, 0.09%)</title><rect x="514.2" y="437" width="1.1" height="15.0" fill="rgb(215,224,7)" rx="2" ry="2" />
<text  x="517.23" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="858.6" y="469" width="0.4" height="15.0" fill="rgb(210,102,51)" rx="2" ry="2" />
<text  x="861.62" y="479.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (3 samples, 0.05%)</title><rect x="1154.3" y="517" width="0.6" height="15.0" fill="rgb(244,83,7)" rx="2" ry="2" />
<text  x="1157.32" y="527.5" ></text>
</g>
<g >
<title>tcache_put (1 samples, 0.02%)</title><rect x="864.8" y="421" width="0.1" height="15.0" fill="rgb(214,36,28)" rx="2" ry="2" />
<text  x="867.75" y="431.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="179.9" y="581" width="0.3" height="15.0" fill="rgb(212,161,18)" rx="2" ry="2" />
<text  x="182.87" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.06%)</title><rect x="1188.7" y="741" width="0.7" height="15.0" fill="rgb(240,180,16)" rx="2" ry="2" />
<text  x="1191.70" y="751.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (5 samples, 0.08%)</title><rect x="877.0" y="533" width="0.9" height="15.0" fill="rgb(243,151,2)" rx="2" ry="2" />
<text  x="880.02" y="543.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4 samples, 0.06%)</title><rect x="108.5" y="741" width="0.7" height="15.0" fill="rgb(210,197,37)" rx="2" ry="2" />
<text  x="111.50" y="751.5" ></text>
</g>
<g >
<title>__GI___libc_free (9 samples, 0.14%)</title><rect x="824.4" y="261" width="1.7" height="15.0" fill="rgb(209,212,44)" rx="2" ry="2" />
<text  x="827.42" y="271.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="294.0" y="501" width="0.2" height="15.0" fill="rgb(240,58,0)" rx="2" ry="2" />
<text  x="296.99" y="511.5" ></text>
</g>
<g >
<title>Bitmap::find_format (18 samples, 0.28%)</title><rect x="762.5" y="277" width="3.4" height="15.0" fill="rgb(235,37,12)" rx="2" ry="2" />
<text  x="765.53" y="287.5" ></text>
</g>
<g >
<title>Sprite::BlitScreen (842 samples, 13.26%)</title><rect x="185.1" y="597" width="156.5" height="15.0" fill="rgb(254,36,16)" rx="2" ry="2" />
<text  x="188.08" y="607.5" >Sprite::BlitScreen</text>
</g>
<g >
<title>__exchange_and_add_dispatch (2 samples, 0.03%)</title><rect x="341.2" y="501" width="0.4" height="15.0" fill="rgb(213,135,46)" rx="2" ry="2" />
<text  x="344.20" y="511.5" ></text>
</g>
<g >
<title>ksys_write (26 samples, 0.41%)</title><rect x="73.2" y="709" width="4.8" height="15.0" fill="rgb(210,24,54)" rx="2" ry="2" />
<text  x="76.19" y="719.5" ></text>
</g>
<g >
<title>_XReply (1 samples, 0.02%)</title><rect x="967.9" y="501" width="0.2" height="15.0" fill="rgb(219,44,32)" rx="2" ry="2" />
<text  x="970.90" y="511.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="445.3" y="453" width="0.2" height="15.0" fill="rgb(235,168,22)" rx="2" ry="2" />
<text  x="448.27" y="463.5" ></text>
</g>
<g >
<title>psi_task_change (4 samples, 0.06%)</title><rect x="75.2" y="533" width="0.8" height="15.0" fill="rgb(254,129,18)" rx="2" ry="2" />
<text  x="78.24" y="543.5" ></text>
</g>
<g >
<title>pixman_image_get_height@plt (1 samples, 0.02%)</title><rect x="954.1" y="549" width="0.2" height="15.0" fill="rgb(252,73,54)" rx="2" ry="2" />
<text  x="957.15" y="559.5" ></text>
</g>
<g >
<title>pixman_image_get_height (1 samples, 0.02%)</title><rect x="790.8" y="405" width="0.2" height="15.0" fill="rgb(251,79,54)" rx="2" ry="2" />
<text  x="793.78" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (3 samples, 0.05%)</title><rect x="990.2" y="405" width="0.6" height="15.0" fill="rgb(243,19,47)" rx="2" ry="2" />
<text  x="993.20" y="415.5" ></text>
</g>
<g >
<title>pixman_image_unref (71 samples, 1.12%)</title><rect x="820.7" y="293" width="13.2" height="15.0" fill="rgb(229,118,16)" rx="2" ry="2" />
<text  x="823.70" y="303.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (4 samples, 0.06%)</title><rect x="1132.0" y="565" width="0.8" height="15.0" fill="rgb(240,116,1)" rx="2" ry="2" />
<text  x="1135.01" y="575.5" ></text>
</g>
<g >
<title>[libGLX.so.0.0.0] (2 samples, 0.03%)</title><rect x="1163.2" y="597" width="0.4" height="15.0" fill="rgb(216,46,30)" rx="2" ry="2" />
<text  x="1166.24" y="607.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="558.5" y="373" width="0.1" height="15.0" fill="rgb(237,91,43)" rx="2" ry="2" />
<text  x="561.46" y="383.5" ></text>
</g>
<g >
<title>TilemapLayer::DrawTile (3 samples, 0.05%)</title><rect x="342.9" y="581" width="0.5" height="15.0" fill="rgb(249,225,33)" rx="2" ry="2" />
<text  x="345.87" y="591.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (13 samples, 0.20%)</title><rect x="774.2" y="389" width="2.5" height="15.0" fill="rgb(243,16,43)" rx="2" ry="2" />
<text  x="777.24" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="839.8" y="469" width="0.2" height="15.0" fill="rgb(214,154,10)" rx="2" ry="2" />
<text  x="842.85" y="479.5" ></text>
</g>
<g >
<title>Bitmap::Create (1 samples, 0.02%)</title><rect x="84.9" y="741" width="0.2" height="15.0" fill="rgb(235,20,45)" rx="2" ry="2" />
<text  x="87.90" y="751.5" ></text>
</g>
<g >
<title>__strlen_avx2 (3 samples, 0.05%)</title><rect x="624.1" y="389" width="0.5" height="15.0" fill="rgb(252,101,6)" rx="2" ry="2" />
<text  x="627.07" y="399.5" ></text>
</g>
<g >
<title>std::__merge_sort_loop&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (13 samples, 0.20%)</title><rect x="353.6" y="533" width="2.5" height="15.0" fill="rgb(208,63,24)" rx="2" ry="2" />
<text  x="356.65" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.02%)</title><rect x="958.2" y="517" width="0.2" height="15.0" fill="rgb(232,7,11)" rx="2" ry="2" />
<text  x="961.24" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (2 samples, 0.03%)</title><rect x="518.7" y="453" width="0.4" height="15.0" fill="rgb(243,30,33)" rx="2" ry="2" />
<text  x="521.69" y="463.5" ></text>
</g>
<g >
<title>Game_Interpreter::ValueOrVariable (15 samples, 0.24%)</title><rect x="484.3" y="533" width="2.8" height="15.0" fill="rgb(214,169,30)" rx="2" ry="2" />
<text  x="487.30" y="543.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="445.3" y="405" width="0.2" height="15.0" fill="rgb(242,176,2)" rx="2" ry="2" />
<text  x="448.27" y="415.5" ></text>
</g>
<g >
<title>__libc_calloc (1 samples, 0.02%)</title><rect x="155.9" y="741" width="0.2" height="15.0" fill="rgb(214,226,44)" rx="2" ry="2" />
<text  x="158.90" y="751.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (9 samples, 0.14%)</title><rect x="163.9" y="629" width="1.7" height="15.0" fill="rgb(237,19,1)" rx="2" ry="2" />
<text  x="166.89" y="639.5" ></text>
</g>
<g >
<title>__update_load_avg_se (1 samples, 0.02%)</title><rect x="1189.4" y="565" width="0.2" height="15.0" fill="rgb(250,164,51)" rx="2" ry="2" />
<text  x="1192.44" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_getpid (4 samples, 0.06%)</title><rect x="41.2" y="725" width="0.8" height="15.0" fill="rgb(226,66,15)" rx="2" ry="2" />
<text  x="44.22" y="735.5" ></text>
</g>
<g >
<title>task_ctx_sched_out (1 samples, 0.02%)</title><rect x="47.0" y="597" width="0.2" height="15.0" fill="rgb(231,78,34)" rx="2" ry="2" />
<text  x="49.99" y="607.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_manager (3 samples, 0.05%)</title><rect x="508.8" y="405" width="0.6" height="15.0" fill="rgb(221,4,26)" rx="2" ry="2" />
<text  x="511.84" y="415.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="65.4" y="517" width="0.2" height="15.0" fill="rgb(247,8,19)" rx="2" ry="2" />
<text  x="68.39" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2 samples, 0.03%)</title><rect x="114.3" y="725" width="0.3" height="15.0" fill="rgb(208,178,10)" rx="2" ry="2" />
<text  x="117.27" y="735.5" ></text>
</g>
<g >
<title>unlink_chunk (1 samples, 0.02%)</title><rect x="160.7" y="741" width="0.2" height="15.0" fill="rgb(205,201,47)" rx="2" ry="2" />
<text  x="163.73" y="751.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, Drawable**, Drawable**&gt; (55 samples, 0.87%)</title><rect x="807.5" y="309" width="10.2" height="15.0" fill="rgb(245,180,46)" rx="2" ry="2" />
<text  x="810.51" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (4 samples, 0.06%)</title><rect x="536.2" y="357" width="0.7" height="15.0" fill="rgb(220,204,38)" rx="2" ry="2" />
<text  x="539.16" y="367.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustParams (1 samples, 0.02%)</title><rect x="479.1" y="517" width="0.2" height="15.0" fill="rgb(240,216,36)" rx="2" ry="2" />
<text  x="482.10" y="527.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (14 samples, 0.22%)</title><rect x="1128.9" y="437" width="2.6" height="15.0" fill="rgb(247,41,41)" rx="2" ry="2" />
<text  x="1131.85" y="447.5" ></text>
</g>
<g >
<title>pixman_image_get_height (2 samples, 0.03%)</title><rect x="94.0" y="741" width="0.4" height="15.0" fill="rgb(216,80,20)" rx="2" ry="2" />
<text  x="97.01" y="751.5" ></text>
</g>
<g >
<title>__libc_recvmsg (4 samples, 0.06%)</title><rect x="990.0" y="453" width="0.8" height="15.0" fill="rgb(224,41,16)" rx="2" ry="2" />
<text  x="993.02" y="463.5" ></text>
</g>
<g >
<title>Bitmap::width (2 samples, 0.03%)</title><rect x="336.5" y="549" width="0.4" height="15.0" fill="rgb(253,174,14)" rx="2" ry="2" />
<text  x="339.55" y="559.5" ></text>
</g>
<g >
<title>Drawable::IsGlobal (1 samples, 0.02%)</title><rect x="801.2" y="373" width="0.2" height="15.0" fill="rgb(220,33,11)" rx="2" ry="2" />
<text  x="804.19" y="383.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (5 samples, 0.08%)</title><rect x="968.1" y="517" width="0.9" height="15.0" fill="rgb(234,40,54)" rx="2" ry="2" />
<text  x="971.09" y="527.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (7 samples, 0.11%)</title><rect x="339.9" y="549" width="1.3" height="15.0" fill="rgb(243,1,24)" rx="2" ry="2" />
<text  x="342.89" y="559.5" ></text>
</g>
<g >
<title>__fdget (4 samples, 0.06%)</title><rect x="42.9" y="693" width="0.7" height="15.0" fill="rgb(249,71,20)" rx="2" ry="2" />
<text  x="45.90" y="703.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="864.2" y="469" width="0.2" height="15.0" fill="rgb(231,195,48)" rx="2" ry="2" />
<text  x="867.19" y="479.5" ></text>
</g>
<g >
<title>[libGLX_nvidia.so.390.116] (36 samples, 0.57%)</title><rect x="109.6" y="757" width="6.7" height="15.0" fill="rgb(231,33,10)" rx="2" ry="2" />
<text  x="112.62" y="767.5" ></text>
</g>
<g >
<title>std::make_shared&lt;int, int&gt; (3 samples, 0.05%)</title><rect x="508.1" y="453" width="0.6" height="15.0" fill="rgb(228,67,39)" rx="2" ry="2" />
<text  x="511.09" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (20 samples, 0.32%)</title><rect x="524.8" y="357" width="3.7" height="15.0" fill="rgb(228,153,0)" rx="2" ry="2" />
<text  x="527.82" y="367.5" ></text>
</g>
<g >
<title>Bitmap::Create (2 samples, 0.03%)</title><rect x="520.2" y="453" width="0.3" height="15.0" fill="rgb(216,167,48)" rx="2" ry="2" />
<text  x="523.17" y="463.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (14 samples, 0.22%)</title><rect x="962.7" y="485" width="2.6" height="15.0" fill="rgb(211,73,48)" rx="2" ry="2" />
<text  x="965.70" y="495.5" ></text>
</g>
<g >
<title>pixman_region32_init (2 samples, 0.03%)</title><rect x="738.9" y="213" width="0.4" height="15.0" fill="rgb(225,26,3)" rx="2" ry="2" />
<text  x="741.93" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.03%)</title><rect x="63.9" y="549" width="0.4" height="15.0" fill="rgb(240,205,35)" rx="2" ry="2" />
<text  x="66.90" y="559.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (7 samples, 0.11%)</title><rect x="1161.7" y="405" width="1.4" height="15.0" fill="rgb(229,17,5)" rx="2" ry="2" />
<text  x="1164.75" y="415.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (7 samples, 0.11%)</title><rect x="969.2" y="533" width="1.3" height="15.0" fill="rgb(213,118,35)" rx="2" ry="2" />
<text  x="972.20" y="543.5" ></text>
</g>
<g >
<title>rcu_check_callbacks (1 samples, 0.02%)</title><rect x="835.2" y="197" width="0.2" height="15.0" fill="rgb(251,15,32)" rx="2" ry="2" />
<text  x="838.20" y="207.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="801.4" y="341" width="0.2" height="15.0" fill="rgb(232,105,8)" rx="2" ry="2" />
<text  x="804.38" y="351.5" ></text>
</g>
<g >
<title>Scene::GetGraphicsState (1 samples, 0.02%)</title><rect x="99.4" y="741" width="0.2" height="15.0" fill="rgb(252,15,36)" rx="2" ry="2" />
<text  x="102.40" y="751.5" ></text>
</g>
<g >
<title>__libc_recvmsg (1 samples, 0.02%)</title><rect x="101.8" y="741" width="0.2" height="15.0" fill="rgb(225,95,11)" rx="2" ry="2" />
<text  x="104.81" y="751.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__weak_ptr (1 samples, 0.02%)</title><rect x="509.4" y="421" width="0.2" height="15.0" fill="rgb(234,79,43)" rx="2" ry="2" />
<text  x="512.40" y="431.5" ></text>
</g>
<g >
<title>Tone::Tone (3 samples, 0.05%)</title><rect x="853.0" y="485" width="0.6" height="15.0" fill="rgb(207,20,53)" rx="2" ry="2" />
<text  x="856.04" y="495.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (71 samples, 1.12%)</title><rect x="50.7" y="533" width="13.2" height="15.0" fill="rgb(236,91,49)" rx="2" ry="2" />
<text  x="53.70" y="543.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::CommonEvent&gt; (2 samples, 0.03%)</title><rect x="360.7" y="549" width="0.4" height="15.0" fill="rgb(242,182,26)" rx="2" ry="2" />
<text  x="363.71" y="559.5" ></text>
</g>
<g >
<title>new_sync_read (1 samples, 0.02%)</title><rect x="71.3" y="677" width="0.2" height="15.0" fill="rgb(238,40,13)" rx="2" ry="2" />
<text  x="74.33" y="687.5" ></text>
</g>
<g >
<title>Player::IsRPG2k3 (4 samples, 0.06%)</title><rect x="149.4" y="741" width="0.7" height="15.0" fill="rgb(207,78,26)" rx="2" ry="2" />
<text  x="152.39" y="751.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (1 samples, 0.02%)</title><rect x="393.0" y="533" width="0.2" height="15.0" fill="rgb(250,217,31)" rx="2" ry="2" />
<text  x="396.05" y="543.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (338 samples, 5.32%)</title><rect x="559.6" y="389" width="62.8" height="15.0" fill="rgb(218,65,19)" rx="2" ry="2" />
<text  x="562.58" y="399.5" >__vdso..</text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="990.6" y="373" width="0.2" height="15.0" fill="rgb(220,57,24)" rx="2" ry="2" />
<text  x="993.58" y="383.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.02%)</title><rect x="967.9" y="325" width="0.2" height="15.0" fill="rgb(214,223,23)" rx="2" ry="2" />
<text  x="970.90" y="335.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (14 samples, 0.22%)</title><rect x="962.7" y="501" width="2.6" height="15.0" fill="rgb(252,82,1)" rx="2" ry="2" />
<text  x="965.70" y="511.5" ></text>
</g>
<g >
<title>Sprite::Sprite (13 samples, 0.20%)</title><rect x="792.3" y="453" width="2.4" height="15.0" fill="rgb(254,211,39)" rx="2" ry="2" />
<text  x="795.27" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;RPG::EventCommand&gt; &gt;::deallocate (1 samples, 0.02%)</title><rect x="879.1" y="421" width="0.1" height="15.0" fill="rgb(245,3,14)" rx="2" ry="2" />
<text  x="882.06" y="431.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.02%)</title><rect x="78.4" y="629" width="0.2" height="15.0" fill="rgb(250,103,17)" rx="2" ry="2" />
<text  x="81.40" y="639.5" ></text>
</g>
<g >
<title>put_timespec64 (15 samples, 0.24%)</title><rect x="609.6" y="325" width="2.8" height="15.0" fill="rgb(235,168,32)" rx="2" ry="2" />
<text  x="612.57" y="335.5" ></text>
</g>
<g >
<title>tcache_get (2 samples, 0.03%)</title><rect x="509.0" y="341" width="0.4" height="15.0" fill="rgb(239,204,15)" rx="2" ry="2" />
<text  x="512.02" y="351.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.02%)</title><rect x="357.4" y="517" width="0.2" height="15.0" fill="rgb(239,221,34)" rx="2" ry="2" />
<text  x="360.36" y="527.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (7 samples, 0.11%)</title><rect x="339.9" y="517" width="1.3" height="15.0" fill="rgb(232,147,13)" rx="2" ry="2" />
<text  x="342.89" y="527.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (6 samples, 0.09%)</title><rect x="775.5" y="357" width="1.2" height="15.0" fill="rgb(237,166,13)" rx="2" ry="2" />
<text  x="778.54" y="367.5" ></text>
</g>
<g >
<title>Scene::IsAsyncPending (115 samples, 1.81%)</title><rect x="161.3" y="661" width="21.4" height="15.0" fill="rgb(225,30,18)" rx="2" ry="2" />
<text  x="164.29" y="671.5" >S..</text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (18 samples, 0.28%)</title><rect x="859.5" y="501" width="3.4" height="15.0" fill="rgb(216,97,17)" rx="2" ry="2" />
<text  x="862.55" y="511.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;int&gt;::weak_ptr (1 samples, 0.02%)</title><rect x="509.4" y="437" width="0.2" height="15.0" fill="rgb(243,112,0)" rx="2" ry="2" />
<text  x="512.40" y="447.5" ></text>
</g>
<g >
<title>tcache_put (2 samples, 0.03%)</title><rect x="557.9" y="245" width="0.4" height="15.0" fill="rgb(205,147,54)" rx="2" ry="2" />
<text  x="560.90" y="255.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (1 samples, 0.02%)</title><rect x="975.9" y="373" width="0.2" height="15.0" fill="rgb(243,55,10)" rx="2" ry="2" />
<text  x="978.89" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (28 samples, 0.44%)</title><rect x="1134.8" y="581" width="5.2" height="15.0" fill="rgb(235,79,38)" rx="2" ry="2" />
<text  x="1137.80" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.02%)</title><rect x="959.0" y="421" width="0.2" height="15.0" fill="rgb(252,176,25)" rx="2" ry="2" />
<text  x="961.98" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.02%)</title><rect x="145.7" y="709" width="0.2" height="15.0" fill="rgb(244,172,27)" rx="2" ry="2" />
<text  x="148.67" y="719.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="864.9" y="453" width="0.2" height="15.0" fill="rgb(253,17,18)" rx="2" ry="2" />
<text  x="867.94" y="463.5" ></text>
</g>
<g >
<title>std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;::pair (2 samples, 0.03%)</title><rect x="509.6" y="405" width="0.4" height="15.0" fill="rgb(217,65,5)" rx="2" ry="2" />
<text  x="512.58" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.02%)</title><rect x="102.2" y="725" width="0.2" height="15.0" fill="rgb(217,23,53)" rx="2" ry="2" />
<text  x="105.18" y="735.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (95 samples, 1.50%)</title><rect x="817.9" y="389" width="17.7" height="15.0" fill="rgb(206,87,21)" rx="2" ry="2" />
<text  x="820.92" y="399.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="757.1" y="117" width="0.2" height="15.0" fill="rgb(237,187,46)" rx="2" ry="2" />
<text  x="760.14" y="127.5" ></text>
</g>
<g >
<title>Transform::Scale (2 samples, 0.03%)</title><rect x="295.1" y="517" width="0.4" height="15.0" fill="rgb(207,38,54)" rx="2" ry="2" />
<text  x="298.10" y="527.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="962.0" y="405" width="0.1" height="15.0" fill="rgb(207,134,28)" rx="2" ry="2" />
<text  x="964.95" y="415.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (17 samples, 0.27%)</title><rect x="762.7" y="245" width="3.2" height="15.0" fill="rgb(231,146,40)" rx="2" ry="2" />
<text  x="765.72" y="255.5" ></text>
</g>
<g >
<title>_int_free (8 samples, 0.13%)</title><rect x="102.4" y="741" width="1.5" height="15.0" fill="rgb(254,94,23)" rx="2" ry="2" />
<text  x="105.37" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::CommonEvent, std::allocator&lt;RPG::CommonEvent&gt; &gt;::operator[] (2 samples, 0.03%)</title><rect x="937.2" y="501" width="0.4" height="15.0" fill="rgb(250,20,50)" rx="2" ry="2" />
<text  x="940.24" y="511.5" ></text>
</g>
<g >
<title>CreatePending (3 samples, 0.05%)</title><rect x="508.1" y="469" width="0.6" height="15.0" fill="rgb(244,46,44)" rx="2" ry="2" />
<text  x="511.09" y="479.5" ></text>
</g>
<g >
<title>Blend (4 samples, 0.06%)</title><rect x="767.2" y="437" width="0.7" height="15.0" fill="rgb(225,182,28)" rx="2" ry="2" />
<text  x="770.18" y="447.5" ></text>
</g>
<g >
<title>std::__weak_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__weak_count (5 samples, 0.08%)</title><rect x="838.9" y="341" width="0.9" height="15.0" fill="rgb(247,197,8)" rx="2" ry="2" />
<text  x="841.92" y="351.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.03%)</title><rect x="73.6" y="677" width="0.3" height="15.0" fill="rgb(225,62,39)" rx="2" ry="2" />
<text  x="76.56" y="687.5" ></text>
</g>
<g >
<title>Game_Player::GetScreenZ (1 samples, 0.02%)</title><rect x="97.7" y="741" width="0.2" height="15.0" fill="rgb(252,197,24)" rx="2" ry="2" />
<text  x="100.72" y="751.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (5 samples, 0.08%)</title><rect x="990.0" y="533" width="0.9" height="15.0" fill="rgb(233,160,5)" rx="2" ry="2" />
<text  x="993.02" y="543.5" ></text>
</g>
<g >
<title>pixman_image_get_height@plt (1 samples, 0.02%)</title><rect x="787.8" y="437" width="0.2" height="15.0" fill="rgb(241,124,29)" rx="2" ry="2" />
<text  x="790.81" y="447.5" ></text>
</g>
<g >
<title>Player::IsMajorUpdatedVersion (1 samples, 0.02%)</title><rect x="86.0" y="741" width="0.2" height="15.0" fill="rgb(230,227,52)" rx="2" ry="2" />
<text  x="89.02" y="751.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (5 samples, 0.08%)</title><rect x="557.3" y="293" width="1.0" height="15.0" fill="rgb(220,140,3)" rx="2" ry="2" />
<text  x="560.35" y="303.5" ></text>
</g>
<g >
<title>pixman_image_set_transform (7 samples, 0.11%)</title><rect x="330.6" y="517" width="1.3" height="15.0" fill="rgb(208,132,9)" rx="2" ry="2" />
<text  x="333.60" y="527.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (1 samples, 0.02%)</title><rect x="1131.3" y="405" width="0.2" height="15.0" fill="rgb(219,41,23)" rx="2" ry="2" />
<text  x="1134.27" y="415.5" ></text>
</g>
<g >
<title>deactivate_task (12 samples, 0.19%)</title><rect x="975.2" y="437" width="2.2" height="15.0" fill="rgb(205,190,3)" rx="2" ry="2" />
<text  x="978.15" y="447.5" ></text>
</g>
<g >
<title>pixman_image_get_height (1 samples, 0.02%)</title><rect x="787.6" y="437" width="0.2" height="15.0" fill="rgb(224,14,1)" rx="2" ry="2" />
<text  x="790.62" y="447.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (6 samples, 0.09%)</title><rect x="791.2" y="405" width="1.1" height="15.0" fill="rgb(205,198,51)" rx="2" ry="2" />
<text  x="794.15" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="967.9" y="421" width="0.2" height="15.0" fill="rgb(232,91,48)" rx="2" ry="2" />
<text  x="970.90" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.02%)</title><rect x="357.4" y="581" width="0.2" height="15.0" fill="rgb(211,46,53)" rx="2" ry="2" />
<text  x="360.36" y="591.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (14 samples, 0.22%)</title><rect x="789.7" y="453" width="2.6" height="15.0" fill="rgb(237,215,53)" rx="2" ry="2" />
<text  x="792.67" y="463.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="546.0" y="197" width="0.4" height="15.0" fill="rgb(227,21,13)" rx="2" ry="2" />
<text  x="549.01" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (2 samples, 0.03%)</title><rect x="941.5" y="517" width="0.4" height="15.0" fill="rgb(226,147,26)" rx="2" ry="2" />
<text  x="944.51" y="527.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (2 samples, 0.03%)</title><rect x="728.5" y="389" width="0.4" height="15.0" fill="rgb(244,133,37)" rx="2" ry="2" />
<text  x="731.52" y="399.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_clone (5 samples, 0.08%)</title><rect x="512.7" y="437" width="1.0" height="15.0" fill="rgb(219,217,26)" rx="2" ry="2" />
<text  x="515.74" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (5 samples, 0.08%)</title><rect x="557.3" y="277" width="1.0" height="15.0" fill="rgb(213,219,42)" rx="2" ry="2" />
<text  x="560.35" y="287.5" ></text>
</g>
<g >
<title>update_nohz_stats (4 samples, 0.06%)</title><rect x="65.0" y="549" width="0.8" height="15.0" fill="rgb(208,68,32)" rx="2" ry="2" />
<text  x="68.01" y="559.5" ></text>
</g>
<g >
<title>Player::Update (1 samples, 0.02%)</title><rect x="150.1" y="741" width="0.2" height="15.0" fill="rgb(210,69,30)" rx="2" ry="2" />
<text  x="153.14" y="751.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="757.1" y="53" width="0.2" height="15.0" fill="rgb(217,106,18)" rx="2" ry="2" />
<text  x="760.14" y="63.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment@plt (7 samples, 0.11%)</title><rect x="180.2" y="613" width="1.3" height="15.0" fill="rgb(230,118,16)" rx="2" ry="2" />
<text  x="183.24" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (26 samples, 0.41%)</title><rect x="546.6" y="293" width="4.8" height="15.0" fill="rgb(228,80,5)" rx="2" ry="2" />
<text  x="549.57" y="303.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="757.1" y="85" width="0.2" height="15.0" fill="rgb(206,158,38)" rx="2" ry="2" />
<text  x="760.14" y="95.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="353.5" y="437" width="0.1" height="15.0" fill="rgb(241,129,28)" rx="2" ry="2" />
<text  x="356.46" y="447.5" ></text>
</g>
<g >
<title>new_sync_write (8 samples, 0.13%)</title><rect x="76.5" y="661" width="1.5" height="15.0" fill="rgb(254,0,33)" rx="2" ry="2" />
<text  x="79.54" y="671.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, true&gt; (10 samples, 0.16%)</title><rect x="555.5" y="405" width="1.8" height="15.0" fill="rgb(216,149,39)" rx="2" ry="2" />
<text  x="558.49" y="415.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (38 samples, 0.60%)</title><rect x="499.2" y="405" width="7.0" height="15.0" fill="rgb(230,90,52)" rx="2" ry="2" />
<text  x="502.17" y="415.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (186 samples, 2.93%)</title><rect x="731.7" y="405" width="34.5" height="15.0" fill="rgb(216,116,50)" rx="2" ry="2" />
<text  x="734.68" y="415.5" >st..</text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="801.4" y="197" width="0.2" height="15.0" fill="rgb(228,226,10)" rx="2" ry="2" />
<text  x="804.38" y="207.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="155.7" y="741" width="0.2" height="15.0" fill="rgb(248,97,44)" rx="2" ry="2" />
<text  x="158.71" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (54 samples, 0.85%)</title><rect x="1170.1" y="597" width="10.0" height="15.0" fill="rgb(248,126,10)" rx="2" ry="2" />
<text  x="1173.11" y="607.5" ></text>
</g>
<g >
<title>update_cfs_rq_h_load (1 samples, 0.02%)</title><rect x="76.4" y="565" width="0.1" height="15.0" fill="rgb(221,151,11)" rx="2" ry="2" />
<text  x="79.35" y="575.5" ></text>
</g>
<g >
<title>Window::Draw (1 samples, 0.02%)</title><rect x="344.9" y="597" width="0.2" height="15.0" fill="rgb(227,122,49)" rx="2" ry="2" />
<text  x="347.91" y="607.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="801.4" y="325" width="0.2" height="15.0" fill="rgb(238,142,33)" rx="2" ry="2" />
<text  x="804.38" y="335.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_destroy (9 samples, 0.14%)</title><rect x="515.9" y="437" width="1.7" height="15.0" fill="rgb(237,21,2)" rx="2" ry="2" />
<text  x="518.90" y="447.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (11 samples, 0.17%)</title><rect x="112.2" y="677" width="2.1" height="15.0" fill="rgb(242,88,32)" rx="2" ry="2" />
<text  x="115.22" y="687.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.02%)</title><rect x="991.1" y="533" width="0.2" height="15.0" fill="rgb(227,135,26)" rx="2" ry="2" />
<text  x="994.13" y="543.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (3 samples, 0.05%)</title><rect x="859.0" y="485" width="0.5" height="15.0" fill="rgb(254,132,3)" rx="2" ry="2" />
<text  x="861.99" y="495.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (183 samples, 2.88%)</title><rect x="296.4" y="501" width="34.0" height="15.0" fill="rgb(244,183,4)" rx="2" ry="2" />
<text  x="299.40" y="511.5" >[l..</text>
</g>
<g >
<title>pixman_image_get_height (1 samples, 0.02%)</title><rect x="104.0" y="741" width="0.2" height="15.0" fill="rgb(232,221,1)" rx="2" ry="2" />
<text  x="107.04" y="751.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (181 samples, 2.85%)</title><rect x="732.2" y="293" width="33.7" height="15.0" fill="rgb(205,15,38)" rx="2" ry="2" />
<text  x="735.24" y="303.5" >Bi..</text>
</g>
<g >
<title>copy_user_generic_unrolled (7 samples, 0.11%)</title><rect x="611.1" y="309" width="1.3" height="15.0" fill="rgb(219,74,4)" rx="2" ry="2" />
<text  x="614.06" y="319.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="962.0" y="437" width="0.1" height="15.0" fill="rgb(210,199,52)" rx="2" ry="2" />
<text  x="964.95" y="447.5" ></text>
</g>
<g >
<title>Game_Player::UpdateSelfMovement (12 samples, 0.19%)</title><rect x="935.6" y="565" width="2.2" height="15.0" fill="rgb(215,183,8)" rx="2" ry="2" />
<text  x="938.56" y="575.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (1 samples, 0.02%)</title><rect x="898.0" y="533" width="0.2" height="15.0" fill="rgb(212,228,16)" rx="2" ry="2" />
<text  x="901.02" y="543.5" ></text>
</g>
<g >
<title>Graphics::LocalDraw (935 samples, 14.73%)</title><rect x="183.2" y="613" width="173.8" height="15.0" fill="rgb(234,20,46)" rx="2" ry="2" />
<text  x="186.22" y="623.5" >Graphics::LocalDraw</text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.02%)</title><rect x="865.3" y="469" width="0.2" height="15.0" fill="rgb(211,211,22)" rx="2" ry="2" />
<text  x="868.31" y="479.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="967.9" y="293" width="0.2" height="15.0" fill="rgb(233,0,27)" rx="2" ry="2" />
<text  x="970.90" y="303.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="64.5" y="597" width="0.1" height="15.0" fill="rgb(241,128,3)" rx="2" ry="2" />
<text  x="67.46" y="607.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="1163.4" y="549" width="0.2" height="15.0" fill="rgb(226,167,29)" rx="2" ry="2" />
<text  x="1166.42" y="559.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (7 samples, 0.11%)</title><rect x="556.0" y="357" width="1.3" height="15.0" fill="rgb(239,88,23)" rx="2" ry="2" />
<text  x="559.05" y="367.5" ></text>
</g>
<g >
<title>Graphics::UpdateZCallback (1 samples, 0.02%)</title><rect x="776.8" y="421" width="0.2" height="15.0" fill="rgb(254,7,9)" rx="2" ry="2" />
<text  x="779.84" y="431.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (1 samples, 0.02%)</title><rect x="960.1" y="453" width="0.2" height="15.0" fill="rgb(222,71,46)" rx="2" ry="2" />
<text  x="963.10" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;Drawable**, Drawable**&gt; (6 samples, 0.09%)</title><rect x="352.3" y="501" width="1.2" height="15.0" fill="rgb(237,82,38)" rx="2" ry="2" />
<text  x="355.35" y="511.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (2 samples, 0.03%)</title><rect x="863.8" y="485" width="0.4" height="15.0" fill="rgb(211,154,52)" rx="2" ry="2" />
<text  x="866.82" y="495.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.03%)</title><rect x="1189.1" y="677" width="0.3" height="15.0" fill="rgb(225,90,27)" rx="2" ry="2" />
<text  x="1192.07" y="687.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="507.2" y="389" width="0.2" height="15.0" fill="rgb(206,98,7)" rx="2" ry="2" />
<text  x="510.16" y="399.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="1124.4" y="549" width="0.4" height="15.0" fill="rgb(251,71,32)" rx="2" ry="2" />
<text  x="1127.39" y="559.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (1 samples, 0.02%)</title><rect x="959.0" y="469" width="0.2" height="15.0" fill="rgb(248,77,9)" rx="2" ry="2" />
<text  x="961.98" y="479.5" ></text>
</g>
<g >
<title>Game_Picture::SyncCurrentToFinish (2 samples, 0.03%)</title><rect x="847.1" y="517" width="0.4" height="15.0" fill="rgb(239,12,52)" rx="2" ry="2" />
<text  x="850.10" y="527.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="1189.4" y="581" width="0.2" height="15.0" fill="rgb(236,152,41)" rx="2" ry="2" />
<text  x="1192.44" y="591.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (3,060 samples, 48.20%)</title><rect x="363.1" y="565" width="568.7" height="15.0" fill="rgb(241,46,0)" rx="2" ry="2" />
<text  x="366.13" y="575.5" >Game_Interpreter::Update</text>
</g>
<g >
<title>__exchange_and_add (6 samples, 0.09%)</title><rect x="775.5" y="325" width="1.2" height="15.0" fill="rgb(220,228,10)" rx="2" ry="2" />
<text  x="778.54" y="335.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (1 samples, 0.02%)</title><rect x="1189.3" y="629" width="0.1" height="15.0" fill="rgb(237,144,31)" rx="2" ry="2" />
<text  x="1192.26" y="639.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (1 samples, 0.02%)</title><rect x="959.7" y="421" width="0.2" height="15.0" fill="rgb(219,7,12)" rx="2" ry="2" />
<text  x="962.72" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.02%)</title><rect x="555.7" y="261" width="0.2" height="15.0" fill="rgb(241,165,45)" rx="2" ry="2" />
<text  x="558.67" y="271.5" ></text>
</g>
<g >
<title>tcache_put (1 samples, 0.02%)</title><rect x="833.7" y="261" width="0.2" height="15.0" fill="rgb(238,118,9)" rx="2" ry="2" />
<text  x="836.71" y="271.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="989.5" y="549" width="0.1" height="15.0" fill="rgb(223,220,21)" rx="2" ry="2" />
<text  x="992.46" y="559.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="294.0" y="453" width="0.2" height="15.0" fill="rgb(237,33,12)" rx="2" ry="2" />
<text  x="296.99" y="463.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;int&gt;::weak_ptr&lt;int, void&gt; (12 samples, 0.19%)</title><rect x="510.0" y="469" width="2.2" height="15.0" fill="rgb(247,9,21)" rx="2" ry="2" />
<text  x="512.95" y="479.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.02%)</title><rect x="77.8" y="597" width="0.2" height="15.0" fill="rgb(248,25,14)" rx="2" ry="2" />
<text  x="80.84" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (3 samples, 0.05%)</title><rect x="555.5" y="325" width="0.5" height="15.0" fill="rgb(242,179,33)" rx="2" ry="2" />
<text  x="558.49" y="335.5" ></text>
</g>
<g >
<title>_copy_to_user (1 samples, 0.02%)</title><rect x="610.3" y="309" width="0.2" height="15.0" fill="rgb(235,27,24)" rx="2" ry="2" />
<text  x="613.32" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (14 samples, 0.22%)</title><rect x="622.4" y="421" width="2.6" height="15.0" fill="rgb(237,195,42)" rx="2" ry="2" />
<text  x="625.40" y="431.5" ></text>
</g>
<g >
<title>pixman_region32_fini (5 samples, 0.08%)</title><rect x="832.2" y="261" width="1.0" height="15.0" fill="rgb(215,208,53)" rx="2" ry="2" />
<text  x="835.23" y="271.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="101.6" y="741" width="0.2" height="15.0" fill="rgb(205,224,20)" rx="2" ry="2" />
<text  x="104.63" y="751.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (152 samples, 2.39%)</title><rect x="961.4" y="581" width="28.2" height="15.0" fill="rgb(243,152,44)" rx="2" ry="2" />
<text  x="964.40" y="591.5" >[..</text>
</g>
<g >
<title>Game_Screen::GetTone (6 samples, 0.09%)</title><rect x="949.5" y="549" width="1.1" height="15.0" fill="rgb(231,104,7)" rx="2" ry="2" />
<text  x="952.50" y="559.5" ></text>
</g>
<g >
<title>Sprite::Draw (1 samples, 0.02%)</title><rect x="341.6" y="581" width="0.2" height="15.0" fill="rgb(214,29,46)" rx="2" ry="2" />
<text  x="344.57" y="591.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*&gt; (11 samples, 0.17%)</title><rect x="837.8" y="421" width="2.0" height="15.0" fill="rgb(221,87,43)" rx="2" ry="2" />
<text  x="840.80" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (10 samples, 0.16%)</title><rect x="491.7" y="421" width="1.9" height="15.0" fill="rgb(229,119,19)" rx="2" ry="2" />
<text  x="494.74" y="431.5" ></text>
</g>
<g >
<title>Bitmap::GetHeight (1 samples, 0.02%)</title><rect x="944.5" y="549" width="0.2" height="15.0" fill="rgb(240,108,42)" rx="2" ry="2" />
<text  x="947.48" y="559.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (14 samples, 0.22%)</title><rect x="774.1" y="421" width="2.6" height="15.0" fill="rgb(228,7,50)" rx="2" ry="2" />
<text  x="777.05" y="431.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1153.2" y="517" width="0.2" height="15.0" fill="rgb(219,139,18)" rx="2" ry="2" />
<text  x="1156.20" y="527.5" ></text>
</g>
<g >
<title>Bitmap::GetHeight (1 samples, 0.02%)</title><rect x="336.4" y="565" width="0.1" height="15.0" fill="rgb(232,197,31)" rx="2" ry="2" />
<text  x="339.36" y="575.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::~__weak_ptr (5 samples, 0.08%)</title><rect x="838.9" y="357" width="0.9" height="15.0" fill="rgb(214,37,20)" rx="2" ry="2" />
<text  x="841.92" y="367.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (4 samples, 0.06%)</title><rect x="333.9" y="517" width="0.8" height="15.0" fill="rgb(220,154,4)" rx="2" ry="2" />
<text  x="336.95" y="527.5" ></text>
</g>
<g >
<title>GetRequest (21 samples, 0.33%)</title><rect x="532.3" y="405" width="3.9" height="15.0" fill="rgb(248,30,42)" rx="2" ry="2" />
<text  x="535.26" y="415.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="959.0" y="437" width="0.2" height="15.0" fill="rgb(212,190,49)" rx="2" ry="2" />
<text  x="961.98" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (10 samples, 0.16%)</title><rect x="573.5" y="357" width="1.9" height="15.0" fill="rgb(216,7,11)" rx="2" ry="2" />
<text  x="576.52" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_free (2 samples, 0.03%)</title><rect x="862.9" y="437" width="0.4" height="15.0" fill="rgb(242,9,36)" rx="2" ry="2" />
<text  x="865.89" y="447.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (1 samples, 0.02%)</title><rect x="794.5" y="421" width="0.2" height="15.0" fill="rgb(205,207,27)" rx="2" ry="2" />
<text  x="797.50" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (8 samples, 0.13%)</title><rect x="354.4" y="501" width="1.5" height="15.0" fill="rgb(211,207,32)" rx="2" ry="2" />
<text  x="357.39" y="511.5" ></text>
</g>
<g >
<title>__hrtimer_get_next_event (1 samples, 0.02%)</title><rect x="179.9" y="549" width="0.2" height="15.0" fill="rgb(250,26,51)" rx="2" ry="2" />
<text  x="182.87" y="559.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (1 samples, 0.02%)</title><rect x="445.3" y="341" width="0.2" height="15.0" fill="rgb(220,191,36)" rx="2" ry="2" />
<text  x="448.27" y="351.5" ></text>
</g>
<g >
<title>tcache_get (2 samples, 0.03%)</title><rect x="492.9" y="373" width="0.3" height="15.0" fill="rgb(233,211,30)" rx="2" ry="2" />
<text  x="495.85" y="383.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1124.8" y="549" width="0.2" height="15.0" fill="rgb(241,61,15)" rx="2" ry="2" />
<text  x="1127.76" y="559.5" ></text>
</g>
<g >
<title>Rect::IsOutOfBounds (3 samples, 0.05%)</title><rect x="336.9" y="565" width="0.6" height="15.0" fill="rgb(224,139,31)" rx="2" ry="2" />
<text  x="339.92" y="575.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.02%)</title><rect x="801.4" y="293" width="0.2" height="15.0" fill="rgb(226,133,54)" rx="2" ry="2" />
<text  x="804.38" y="303.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (3 samples, 0.05%)</title><rect x="948.4" y="533" width="0.5" height="15.0" fill="rgb(252,100,21)" rx="2" ry="2" />
<text  x="951.39" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="991.3" y="533" width="0.4" height="15.0" fill="rgb(233,91,14)" rx="2" ry="2" />
<text  x="994.32" y="543.5" ></text>
</g>
<g >
<title>alloc_perturb (2 samples, 0.03%)</title><rect x="761.0" y="197" width="0.4" height="15.0" fill="rgb(210,94,33)" rx="2" ry="2" />
<text  x="764.04" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (1 samples, 0.02%)</title><rect x="948.8" y="517" width="0.1" height="15.0" fill="rgb(251,58,8)" rx="2" ry="2" />
<text  x="951.76" y="527.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.02%)</title><rect x="48.5" y="565" width="0.2" height="15.0" fill="rgb(209,210,7)" rx="2" ry="2" />
<text  x="51.47" y="575.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.02%)</title><rect x="65.8" y="581" width="0.1" height="15.0" fill="rgb(240,229,53)" rx="2" ry="2" />
<text  x="68.76" y="591.5" ></text>
</g>
<g >
<title>Game_Map::SetNeedRefresh (2 samples, 0.03%)</title><rect x="430.2" y="533" width="0.4" height="15.0" fill="rgb(219,166,49)" rx="2" ry="2" />
<text  x="433.22" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (2 samples, 0.03%)</title><rect x="552.7" y="309" width="0.4" height="15.0" fill="rgb(247,7,31)" rx="2" ry="2" />
<text  x="555.70" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator++ (86 samples, 1.35%)</title><rect x="165.6" y="629" width="15.9" height="15.0" fill="rgb(214,200,2)" rx="2" ry="2" />
<text  x="168.56" y="639.5" ></text>
</g>
<g >
<title>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;::basic_istream (2 samples, 0.03%)</title><rect x="865.1" y="485" width="0.4" height="15.0" fill="rgb(224,166,13)" rx="2" ry="2" />
<text  x="868.12" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append@plt (1 samples, 0.02%)</title><rect x="493.6" y="437" width="0.2" height="15.0" fill="rgb(246,222,38)" rx="2" ry="2" />
<text  x="496.60" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::reset (219 samples, 3.45%)</title><rect x="796.7" y="453" width="40.7" height="15.0" fill="rgb(251,221,38)" rx="2" ry="2" />
<text  x="799.73" y="463.5" >std..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="558.5" y="389" width="0.1" height="15.0" fill="rgb(254,59,43)" rx="2" ry="2" />
<text  x="561.46" y="399.5" ></text>
</g>
<g >
<title>Bitmap::GetRect (4 samples, 0.06%)</title><rect x="773.1" y="421" width="0.8" height="15.0" fill="rgb(220,68,34)" rx="2" ry="2" />
<text  x="776.12" y="431.5" ></text>
</g>
<g >
<title>GetRequest (48 samples, 0.76%)</title><rect x="498.1" y="485" width="8.9" height="15.0" fill="rgb(213,149,22)" rx="2" ry="2" />
<text  x="501.06" y="495.5" ></text>
</g>
<g >
<title>strlen@plt (2 samples, 0.03%)</title><rect x="624.6" y="389" width="0.4" height="15.0" fill="rgb(240,86,8)" rx="2" ry="2" />
<text  x="627.63" y="399.5" ></text>
</g>
<g >
<title>try_to_wake_up (11 samples, 0.17%)</title><rect x="74.5" y="581" width="2.0" height="15.0" fill="rgb(221,80,14)" rx="2" ry="2" />
<text  x="77.49" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (4 samples, 0.06%)</title><rect x="912.7" y="517" width="0.7" height="15.0" fill="rgb(245,113,44)" rx="2" ry="2" />
<text  x="915.70" y="527.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="293.6" y="501" width="0.2" height="15.0" fill="rgb(245,37,44)" rx="2" ry="2" />
<text  x="296.62" y="511.5" ></text>
</g>
<g >
<title>__task_pid_nr_ns (4 samples, 0.06%)</title><rect x="41.2" y="709" width="0.8" height="15.0" fill="rgb(243,78,24)" rx="2" ry="2" />
<text  x="44.22" y="719.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="988.3" y="357" width="0.2" height="15.0" fill="rgb(251,27,6)" rx="2" ry="2" />
<text  x="991.35" y="367.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (3 samples, 0.05%)</title><rect x="965.7" y="485" width="0.5" height="15.0" fill="rgb(230,203,51)" rx="2" ry="2" />
<text  x="968.67" y="495.5" ></text>
</g>
<g >
<title>pipe_write (8 samples, 0.13%)</title><rect x="76.5" y="645" width="1.5" height="15.0" fill="rgb(219,203,54)" rx="2" ry="2" />
<text  x="79.54" y="655.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (4 samples, 0.06%)</title><rect x="990.0" y="501" width="0.8" height="15.0" fill="rgb(213,151,25)" rx="2" ry="2" />
<text  x="993.02" y="511.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (1 samples, 0.02%)</title><rect x="940.2" y="549" width="0.2" height="15.0" fill="rgb(229,83,37)" rx="2" ry="2" />
<text  x="943.21" y="559.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="48.3" y="565" width="0.2" height="15.0" fill="rgb(217,110,25)" rx="2" ry="2" />
<text  x="51.29" y="575.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (36 samples, 0.57%)</title><rect x="840.2" y="453" width="6.7" height="15.0" fill="rgb(248,80,36)" rx="2" ry="2" />
<text  x="843.22" y="463.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="507.2" y="309" width="0.2" height="15.0" fill="rgb(221,163,18)" rx="2" ry="2" />
<text  x="510.16" y="319.5" ></text>
</g>
<g >
<title>_XEnq (2 samples, 0.03%)</title><rect x="965.3" y="501" width="0.4" height="15.0" fill="rgb(215,127,17)" rx="2" ry="2" />
<text  x="968.30" y="511.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="801.4" y="373" width="0.2" height="15.0" fill="rgb(230,89,4)" rx="2" ry="2" />
<text  x="804.38" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="65.6" y="517" width="0.2" height="15.0" fill="rgb(221,225,53)" rx="2" ry="2" />
<text  x="68.57" y="527.5" ></text>
</g>
<g >
<title>eventfd_write (12 samples, 0.19%)</title><rect x="74.3" y="661" width="2.2" height="15.0" fill="rgb(227,2,38)" rx="2" ry="2" />
<text  x="77.31" y="671.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (1 samples, 0.02%)</title><rect x="959.9" y="437" width="0.2" height="15.0" fill="rgb(233,5,25)" rx="2" ry="2" />
<text  x="962.91" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.02%)</title><rect x="958.2" y="469" width="0.2" height="15.0" fill="rgb(212,85,0)" rx="2" ry="2" />
<text  x="961.24" y="479.5" ></text>
</g>
<g >
<title>_int_free (3 samples, 0.05%)</title><rect x="835.8" y="405" width="0.5" height="15.0" fill="rgb(231,2,46)" rx="2" ry="2" />
<text  x="838.76" y="415.5" ></text>
</g>
<g >
<title>Tone::Tone (2 samples, 0.03%)</title><rect x="777.0" y="437" width="0.4" height="15.0" fill="rgb(222,172,41)" rx="2" ry="2" />
<text  x="780.03" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::end (1 samples, 0.02%)</title><rect x="524.4" y="389" width="0.2" height="15.0" fill="rgb(219,194,37)" rx="2" ry="2" />
<text  x="527.45" y="399.5" ></text>
</g>
<g >
<title>Sprite::~Sprite (192 samples, 3.02%)</title><rect x="800.6" y="421" width="35.7" height="15.0" fill="rgb(224,124,12)" rx="2" ry="2" />
<text  x="803.63" y="431.5" >Spr..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (6 samples, 0.09%)</title><rect x="556.2" y="325" width="1.1" height="15.0" fill="rgb(215,72,52)" rx="2" ry="2" />
<text  x="559.23" y="335.5" ></text>
</g>
<g >
<title>Game_Screen::GetTone (8 samples, 0.13%)</title><rect x="855.1" y="501" width="1.5" height="15.0" fill="rgb(241,210,50)" rx="2" ry="2" />
<text  x="858.09" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (3 samples, 0.05%)</title><rect x="553.1" y="389" width="0.5" height="15.0" fill="rgb(244,207,38)" rx="2" ry="2" />
<text  x="556.07" y="399.5" ></text>
</g>
<g >
<title>Window_Message::Update (6 samples, 0.09%)</title><rect x="959.2" y="597" width="1.1" height="15.0" fill="rgb(209,28,19)" rx="2" ry="2" />
<text  x="962.17" y="607.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="976.5" y="373" width="0.1" height="15.0" fill="rgb(234,58,41)" rx="2" ry="2" />
<text  x="979.45" y="383.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (343 samples, 5.40%)</title><rect x="558.6" y="421" width="63.8" height="15.0" fill="rgb(253,98,23)" rx="2" ry="2" />
<text  x="561.65" y="431.5" >[libSDL..</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (2 samples, 0.03%)</title><rect x="529.3" y="261" width="0.4" height="15.0" fill="rgb(252,121,39)" rx="2" ry="2" />
<text  x="532.28" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::~_Vector_base (1 samples, 0.02%)</title><rect x="879.1" y="453" width="0.1" height="15.0" fill="rgb(240,30,12)" rx="2" ry="2" />
<text  x="882.06" y="463.5" ></text>
</g>
<g >
<title>Game_Character::UpdateMovement (13 samples, 0.20%)</title><rect x="935.4" y="581" width="2.4" height="15.0" fill="rgb(209,60,37)" rx="2" ry="2" />
<text  x="938.38" y="591.5" ></text>
</g>
<g >
<title>Opacity::IsSplit (1 samples, 0.02%)</title><rect x="636.1" y="405" width="0.2" height="15.0" fill="rgb(254,154,49)" rx="2" ry="2" />
<text  x="639.15" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (83 samples, 1.31%)</title><rect x="974.0" y="517" width="15.5" height="15.0" fill="rgb(237,211,32)" rx="2" ry="2" />
<text  x="977.04" y="527.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="546.0" y="165" width="0.2" height="15.0" fill="rgb(232,86,40)" rx="2" ry="2" />
<text  x="549.01" y="175.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (17 samples, 0.27%)</title><rect x="1128.3" y="453" width="3.2" height="15.0" fill="rgb(217,178,37)" rx="2" ry="2" />
<text  x="1131.30" y="463.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="773.9" y="389" width="0.2" height="15.0" fill="rgb(217,8,40)" rx="2" ry="2" />
<text  x="776.87" y="399.5" ></text>
</g>
<g >
<title>Graphics::Update (1 samples, 0.02%)</title><rect x="357.0" y="629" width="0.2" height="15.0" fill="rgb(228,117,39)" rx="2" ry="2" />
<text  x="359.99" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (5 samples, 0.08%)</title><rect x="557.3" y="309" width="1.0" height="15.0" fill="rgb(228,227,36)" rx="2" ry="2" />
<text  x="560.35" y="319.5" ></text>
</g>
<g >
<title>pixman_region32_rectangles (1 samples, 0.02%)</title><rect x="294.5" y="517" width="0.2" height="15.0" fill="rgb(222,59,38)" rx="2" ry="2" />
<text  x="297.55" y="527.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="728.9" y="389" width="0.2" height="15.0" fill="rgb(242,1,25)" rx="2" ry="2" />
<text  x="731.89" y="399.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (186 samples, 2.93%)</title><rect x="731.7" y="421" width="34.5" height="15.0" fill="rgb(224,216,42)" rx="2" ry="2" />
<text  x="734.68" y="431.5" >st..</text>
</g>
<g >
<title>__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int&gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;Input::UiSource::Update()::&lt;lambda(int)&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="357.2" y="533" width="0.2" height="15.0" fill="rgb(209,123,54)" rx="2" ry="2" />
<text  x="360.18" y="543.5" ></text>
</g>
<g >
<title>std::__insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (14 samples, 0.22%)</title><rect x="349.6" y="517" width="2.6" height="15.0" fill="rgb(225,165,51)" rx="2" ry="2" />
<text  x="352.56" y="527.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (1 samples, 0.02%)</title><rect x="959.0" y="453" width="0.2" height="15.0" fill="rgb(250,100,22)" rx="2" ry="2" />
<text  x="961.98" y="463.5" ></text>
</g>
<g >
<title>Sprite::~Sprite (187 samples, 2.95%)</title><rect x="800.8" y="405" width="34.8" height="15.0" fill="rgb(247,60,43)" rx="2" ry="2" />
<text  x="803.82" y="415.5" >Sp..</text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (74 samples, 1.17%)</title><rect x="537.6" y="325" width="13.8" height="15.0" fill="rgb(235,83,46)" rx="2" ry="2" />
<text  x="540.65" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (1 samples, 0.02%)</title><rect x="105.2" y="741" width="0.1" height="15.0" fill="rgb(239,81,4)" rx="2" ry="2" />
<text  x="108.16" y="751.5" ></text>
</g>
<g >
<title>Bitmap::Blit (1 samples, 0.02%)</title><rect x="145.5" y="741" width="0.2" height="15.0" fill="rgb(209,5,29)" rx="2" ry="2" />
<text  x="148.49" y="751.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.02%)</title><rect x="1161.6" y="469" width="0.1" height="15.0" fill="rgb(249,215,36)" rx="2" ry="2" />
<text  x="1164.56" y="479.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (2 samples, 0.03%)</title><rect x="623.0" y="341" width="0.3" height="15.0" fill="rgb(232,81,50)" rx="2" ry="2" />
<text  x="625.95" y="351.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (1 samples, 0.02%)</title><rect x="967.9" y="469" width="0.2" height="15.0" fill="rgb(222,189,41)" rx="2" ry="2" />
<text  x="970.90" y="479.5" ></text>
</g>
<g >
<title>__exchange_and_add (2 samples, 0.03%)</title><rect x="341.2" y="485" width="0.4" height="15.0" fill="rgb(231,203,30)" rx="2" ry="2" />
<text  x="344.20" y="495.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (2 samples, 0.03%)</title><rect x="341.2" y="517" width="0.4" height="15.0" fill="rgb(218,226,37)" rx="2" ry="2" />
<text  x="344.20" y="527.5" ></text>
</g>
<g >
<title>__GI___poll (1 samples, 0.02%)</title><rect x="967.9" y="437" width="0.2" height="15.0" fill="rgb(212,23,37)" rx="2" ry="2" />
<text  x="970.90" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (1 samples, 0.02%)</title><rect x="1132.8" y="517" width="0.1" height="15.0" fill="rgb(253,106,12)" rx="2" ry="2" />
<text  x="1135.76" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::destroy&lt;RPG::SaveEventExecFrame&gt; (1 samples, 0.02%)</title><rect x="879.1" y="517" width="0.1" height="15.0" fill="rgb(243,11,31)" rx="2" ry="2" />
<text  x="882.06" y="527.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="65.6" y="501" width="0.2" height="15.0" fill="rgb(238,152,0)" rx="2" ry="2" />
<text  x="68.57" y="511.5" ></text>
</g>
<g >
<title>find (85 samples, 1.34%)</title><rect x="537.3" y="389" width="15.8" height="15.0" fill="rgb(226,187,25)" rx="2" ry="2" />
<text  x="540.27" y="399.5" ></text>
</g>
<g >
<title>memcmp@plt (1 samples, 0.02%)</title><rect x="535.8" y="277" width="0.2" height="15.0" fill="rgb(253,194,2)" rx="2" ry="2" />
<text  x="538.79" y="287.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (4 samples, 0.06%)</title><rect x="88.1" y="741" width="0.7" height="15.0" fill="rgb(252,89,22)" rx="2" ry="2" />
<text  x="91.06" y="751.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (3 samples, 0.05%)</title><rect x="113.5" y="629" width="0.6" height="15.0" fill="rgb(231,83,33)" rx="2" ry="2" />
<text  x="116.52" y="639.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (8 samples, 0.13%)</title><rect x="332.5" y="501" width="1.4" height="15.0" fill="rgb(221,156,12)" rx="2" ry="2" />
<text  x="335.46" y="511.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (1 samples, 0.02%)</title><rect x="87.9" y="741" width="0.2" height="15.0" fill="rgb(232,226,20)" rx="2" ry="2" />
<text  x="90.87" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt;::construct&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (2 samples, 0.03%)</title><rect x="509.6" y="421" width="0.4" height="15.0" fill="rgb(213,80,43)" rx="2" ry="2" />
<text  x="512.58" y="431.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;BaseUi, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (2 samples, 0.03%)</title><rect x="553.6" y="389" width="0.4" height="15.0" fill="rgb(240,18,28)" rx="2" ry="2" />
<text  x="556.63" y="399.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="78.2" y="741" width="0.4" height="15.0" fill="rgb(226,15,11)" rx="2" ry="2" />
<text  x="81.21" y="751.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.02%)</title><rect x="1161.6" y="453" width="0.1" height="15.0" fill="rgb(237,174,20)" rx="2" ry="2" />
<text  x="1164.56" y="463.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (1 samples, 0.02%)</title><rect x="536.9" y="421" width="0.2" height="15.0" fill="rgb(239,19,26)" rx="2" ry="2" />
<text  x="539.90" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (3 samples, 0.05%)</title><rect x="512.9" y="405" width="0.6" height="15.0" fill="rgb(227,68,52)" rx="2" ry="2" />
<text  x="515.93" y="415.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="353.5" y="485" width="0.1" height="15.0" fill="rgb(252,221,24)" rx="2" ry="2" />
<text  x="356.46" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (7 samples, 0.11%)</title><rect x="551.4" y="293" width="1.3" height="15.0" fill="rgb(244,129,52)" rx="2" ry="2" />
<text  x="554.40" y="303.5" ></text>
</g>
<g >
<title>pixman_image_get_width (1 samples, 0.02%)</title><rect x="104.2" y="741" width="0.2" height="15.0" fill="rgb(234,19,42)" rx="2" ry="2" />
<text  x="107.23" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (5 samples, 0.08%)</title><rect x="507.0" y="421" width="0.9" height="15.0" fill="rgb(213,140,41)" rx="2" ry="2" />
<text  x="509.98" y="431.5" ></text>
</g>
<g >
<title>pollwake (11 samples, 0.17%)</title><rect x="74.5" y="613" width="2.0" height="15.0" fill="rgb(233,151,42)" rx="2" ry="2" />
<text  x="77.49" y="623.5" ></text>
</g>
<g >
<title>load_balance (5 samples, 0.08%)</title><rect x="65.0" y="597" width="0.9" height="15.0" fill="rgb(220,54,1)" rx="2" ry="2" />
<text  x="68.01" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (47 samples, 0.74%)</title><rect x="498.2" y="453" width="8.8" height="15.0" fill="rgb(211,193,15)" rx="2" ry="2" />
<text  x="501.24" y="463.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (8 samples, 0.13%)</title><rect x="554.0" y="405" width="1.5" height="15.0" fill="rgb(215,146,33)" rx="2" ry="2" />
<text  x="557.00" y="415.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1124.8" y="533" width="0.2" height="15.0" fill="rgb(220,202,5)" rx="2" ry="2" />
<text  x="1127.76" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2 samples, 0.03%)</title><rect x="623.0" y="357" width="0.3" height="15.0" fill="rgb(214,145,52)" rx="2" ry="2" />
<text  x="625.95" y="367.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (9 samples, 0.14%)</title><rect x="332.3" y="565" width="1.6" height="15.0" fill="rgb(239,160,47)" rx="2" ry="2" />
<text  x="335.27" y="575.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="1189.3" y="645" width="0.1" height="15.0" fill="rgb(242,137,53)" rx="2" ry="2" />
<text  x="1192.26" y="655.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (5 samples, 0.08%)</title><rect x="507.0" y="437" width="0.9" height="15.0" fill="rgb(233,11,35)" rx="2" ry="2" />
<text  x="509.98" y="447.5" ></text>
</g>
<g >
<title>Game_Screen::GetTone (13 samples, 0.20%)</title><rect x="769.2" y="437" width="2.4" height="15.0" fill="rgb(207,185,32)" rx="2" ry="2" />
<text  x="772.22" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2 samples, 0.03%)</title><rect x="556.8" y="261" width="0.4" height="15.0" fill="rgb(207,224,23)" rx="2" ry="2" />
<text  x="559.79" y="271.5" ></text>
</g>
<g >
<title>do_sys_poll (137 samples, 2.16%)</title><rect x="42.0" y="709" width="25.4" height="15.0" fill="rgb(231,160,9)" rx="2" ry="2" />
<text  x="44.97" y="719.5" >d..</text>
</g>
<g >
<title>Game_Interpreter::CommandControlVariables (4 samples, 0.06%)</title><rect x="361.1" y="565" width="0.7" height="15.0" fill="rgb(247,157,1)" rx="2" ry="2" />
<text  x="364.08" y="575.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="180.1" y="517" width="0.1" height="15.0" fill="rgb(230,209,41)" rx="2" ry="2" />
<text  x="183.06" y="527.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.05%)</title><rect x="512.9" y="421" width="0.6" height="15.0" fill="rgb(239,83,27)" rx="2" ry="2" />
<text  x="515.93" y="431.5" ></text>
</g>
<g >
<title>Bitmap::Blit (581 samples, 9.15%)</title><rect x="186.7" y="549" width="108.0" height="15.0" fill="rgb(235,59,20)" rx="2" ry="2" />
<text  x="189.75" y="559.5" >Bitmap::Blit</text>
</g>
<g >
<title>Bitmap::Create (189 samples, 2.98%)</title><rect x="731.1" y="437" width="35.1" height="15.0" fill="rgb(212,141,18)" rx="2" ry="2" />
<text  x="734.12" y="447.5" >Bi..</text>
</g>
<g >
<title>__x64_sys_clock_gettime (1 samples, 0.02%)</title><rect x="1188.9" y="725" width="0.2" height="15.0" fill="rgb(228,158,5)" rx="2" ry="2" />
<text  x="1191.88" y="735.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.02%)</title><rect x="64.5" y="469" width="0.1" height="15.0" fill="rgb(240,13,7)" rx="2" ry="2" />
<text  x="67.46" y="479.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (5 samples, 0.08%)</title><rect x="916.8" y="549" width="0.9" height="15.0" fill="rgb(243,194,23)" rx="2" ry="2" />
<text  x="919.79" y="559.5" ></text>
</g>
<g >
<title>__fdget_pos (2 samples, 0.03%)</title><rect x="68.4" y="693" width="0.3" height="15.0" fill="rgb(227,113,6)" rx="2" ry="2" />
<text  x="71.36" y="703.5" ></text>
</g>
<g >
<title>Cache::Picture (565 samples, 8.90%)</title><rect x="520.5" y="453" width="105.1" height="15.0" fill="rgb(249,90,35)" rx="2" ry="2" />
<text  x="523.55" y="463.5" >Cache::Picture</text>
</g>
<g >
<title>_int_free (1 samples, 0.02%)</title><rect x="536.5" y="325" width="0.2" height="15.0" fill="rgb(221,27,0)" rx="2" ry="2" />
<text  x="539.53" y="335.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (6 samples, 0.09%)</title><rect x="775.5" y="373" width="1.2" height="15.0" fill="rgb(222,83,13)" rx="2" ry="2" />
<text  x="778.54" y="383.5" ></text>
</g>
<g >
<title>vfs_read (21 samples, 0.33%)</title><rect x="69.3" y="693" width="3.9" height="15.0" fill="rgb(215,146,4)" rx="2" ry="2" />
<text  x="72.29" y="703.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (2 samples, 0.03%)</title><rect x="95.3" y="741" width="0.4" height="15.0" fill="rgb(231,89,37)" rx="2" ry="2" />
<text  x="98.31" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;::operator+ (1 samples, 0.02%)</title><rect x="807.3" y="341" width="0.2" height="15.0" fill="rgb(224,93,13)" rx="2" ry="2" />
<text  x="810.32" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (224 samples, 3.53%)</title><rect x="36.6" y="741" width="41.6" height="15.0" fill="rgb(226,52,30)" rx="2" ry="2" />
<text  x="39.58" y="751.5" >do_..</text>
</g>
<g >
<title>__libc_recvmsg (12 samples, 0.19%)</title><rect x="963.1" y="453" width="2.2" height="15.0" fill="rgb(218,225,24)" rx="2" ry="2" />
<text  x="966.07" y="463.5" ></text>
</g>
<g >
<title>Bitmap::StretchBlit (201 samples, 3.17%)</title><rect x="294.9" y="533" width="37.4" height="15.0" fill="rgb(245,54,15)" rx="2" ry="2" />
<text  x="297.92" y="543.5" >Bit..</text>
</g>
<g >
<title>Game_Variables_Class::Set (4 samples, 0.06%)</title><rect x="98.7" y="741" width="0.7" height="15.0" fill="rgb(247,20,18)" rx="2" ry="2" />
<text  x="101.65" y="751.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="64.5" y="565" width="0.1" height="15.0" fill="rgb(226,3,24)" rx="2" ry="2" />
<text  x="67.46" y="575.5" ></text>
</g>
<g >
<title>SdlMixerAudio::Update (2 samples, 0.03%)</title><rect x="1132.8" y="613" width="0.3" height="15.0" fill="rgb(244,199,40)" rx="2" ry="2" />
<text  x="1135.76" y="623.5" ></text>
</g>
<g >
<title>unix_poll (1 samples, 0.02%)</title><rect x="971.2" y="453" width="0.2" height="15.0" fill="rgb(212,94,49)" rx="2" ry="2" />
<text  x="974.25" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (11 samples, 0.17%)</title><rect x="963.3" y="405" width="2.0" height="15.0" fill="rgb(222,64,46)" rx="2" ry="2" />
<text  x="966.26" y="415.5" ></text>
</g>
<g >
<title>Sprite::Draw (1 samples, 0.02%)</title><rect x="341.6" y="597" width="0.2" height="15.0" fill="rgb(224,29,29)" rx="2" ry="2" />
<text  x="344.57" y="607.5" ></text>
</g>
<g >
<title>trigger_load_balance (1 samples, 0.02%)</title><rect x="64.1" y="469" width="0.2" height="15.0" fill="rgb(220,178,52)" rx="2" ry="2" />
<text  x="67.08" y="479.5" ></text>
</g>
<g >
<title>std::basic_iostream&lt;char, std::char_traits&lt;char&gt; &gt;::basic_iostream (2 samples, 0.03%)</title><rect x="865.1" y="501" width="0.4" height="15.0" fill="rgb(243,194,37)" rx="2" ry="2" />
<text  x="868.12" y="511.5" ></text>
</g>
<g >
<title>std::__stable_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (47 samples, 0.74%)</title><rect x="348.3" y="581" width="8.7" height="15.0" fill="rgb(236,49,5)" rx="2" ry="2" />
<text  x="351.26" y="591.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (1 samples, 0.02%)</title><rect x="959.7" y="405" width="0.2" height="15.0" fill="rgb(238,141,48)" rx="2" ry="2" />
<text  x="962.72" y="415.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;Drawable*&gt; (55 samples, 0.87%)</title><rect x="807.5" y="293" width="10.2" height="15.0" fill="rgb(217,13,15)" rx="2" ry="2" />
<text  x="810.51" y="303.5" ></text>
</g>
<g >
<title>Game_Screen::GetTone (1 samples, 0.02%)</title><rect x="857.5" y="517" width="0.2" height="15.0" fill="rgb(227,186,1)" rx="2" ry="2" />
<text  x="860.50" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Drawable*&gt; &gt;::construct&lt;Drawable*, Drawable* const&amp;&gt; (2 samples, 0.03%)</title><rect x="793.8" y="405" width="0.3" height="15.0" fill="rgb(226,149,0)" rx="2" ry="2" />
<text  x="796.75" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (4 samples, 0.06%)</title><rect x="794.7" y="437" width="0.7" height="15.0" fill="rgb(238,13,9)" rx="2" ry="2" />
<text  x="797.68" y="447.5" ></text>
</g>
<g >
<title>update_nohz_stats (1 samples, 0.02%)</title><rect x="988.3" y="373" width="0.2" height="15.0" fill="rgb(241,1,0)" rx="2" ry="2" />
<text  x="991.35" y="383.5" ></text>
</g>
<g >
<title>tcache_put (1 samples, 0.02%)</title><rect x="357.4" y="501" width="0.2" height="15.0" fill="rgb(231,172,3)" rx="2" ry="2" />
<text  x="360.36" y="511.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (2 samples, 0.03%)</title><rect x="509.6" y="357" width="0.4" height="15.0" fill="rgb(236,222,54)" rx="2" ry="2" />
<text  x="512.58" y="367.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="357.0" y="581" width="0.2" height="15.0" fill="rgb(213,51,46)" rx="2" ry="2" />
<text  x="359.99" y="591.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::~_Vector_base (1 samples, 0.02%)</title><rect x="834.1" y="277" width="0.2" height="15.0" fill="rgb(244,163,50)" rx="2" ry="2" />
<text  x="837.09" y="287.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.02%)</title><rect x="48.1" y="565" width="0.2" height="15.0" fill="rgb(228,30,50)" rx="2" ry="2" />
<text  x="51.10" y="575.5" ></text>
</g>
<g >
<title>xcb_wait_for_reply64 (1 samples, 0.02%)</title><rect x="967.9" y="485" width="0.2" height="15.0" fill="rgb(240,202,26)" rx="2" ry="2" />
<text  x="970.90" y="495.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.03%)</title><rect x="765.9" y="293" width="0.3" height="15.0" fill="rgb(209,43,23)" rx="2" ry="2" />
<text  x="768.88" y="303.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (5 samples, 0.08%)</title><rect x="557.3" y="389" width="1.0" height="15.0" fill="rgb(244,187,29)" rx="2" ry="2" />
<text  x="560.35" y="399.5" ></text>
</g>
<g >
<title>tcache_get (2 samples, 0.03%)</title><rect x="867.9" y="453" width="0.4" height="15.0" fill="rgb(220,23,45)" rx="2" ry="2" />
<text  x="870.91" y="463.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (6 samples, 0.09%)</title><rect x="352.3" y="485" width="1.2" height="15.0" fill="rgb(214,152,27)" rx="2" ry="2" />
<text  x="355.35" y="495.5" ></text>
</g>
<g >
<title>_start (5,498 samples, 86.60%)</title><rect x="160.9" y="757" width="1021.9" height="15.0" fill="rgb(213,48,5)" rx="2" ry="2" />
<text  x="163.92" y="767.5" >_start</text>
</g>
<g >
<title>[libXi.so.6.1.0] (2 samples, 0.03%)</title><rect x="965.3" y="485" width="0.4" height="15.0" fill="rgb(218,197,6)" rx="2" ry="2" />
<text  x="968.30" y="495.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="115.0" y="613" width="0.2" height="15.0" fill="rgb(206,227,12)" rx="2" ry="2" />
<text  x="118.01" y="623.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.09%)</title><rect x="969.4" y="485" width="1.1" height="15.0" fill="rgb(229,184,54)" rx="2" ry="2" />
<text  x="972.39" y="495.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (7 samples, 0.11%)</title><rect x="1161.7" y="453" width="1.4" height="15.0" fill="rgb(206,59,26)" rx="2" ry="2" />
<text  x="1164.75" y="463.5" ></text>
</g>
<g >
<title>sock_poll (1 samples, 0.02%)</title><rect x="991.3" y="469" width="0.2" height="15.0" fill="rgb(245,44,17)" rx="2" ry="2" />
<text  x="994.32" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.02%)</title><rect x="555.7" y="277" width="0.2" height="15.0" fill="rgb(212,123,37)" rx="2" ry="2" />
<text  x="558.67" y="287.5" ></text>
</g>
<g >
<title>Cache::SystemOrBlack (3 samples, 0.05%)</title><rect x="959.7" y="549" width="0.6" height="15.0" fill="rgb(254,76,0)" rx="2" ry="2" />
<text  x="962.72" y="559.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (1 samples, 0.02%)</title><rect x="107.6" y="741" width="0.2" height="15.0" fill="rgb(227,18,31)" rx="2" ry="2" />
<text  x="110.57" y="751.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char32_t&gt; &gt;::deallocate (1 samples, 0.02%)</title><rect x="864.8" y="469" width="0.1" height="15.0" fill="rgb(235,7,9)" rx="2" ry="2" />
<text  x="867.75" y="479.5" ></text>
</g>
<g >
<title>sock_recvmsg (2 samples, 0.03%)</title><rect x="990.2" y="357" width="0.4" height="15.0" fill="rgb(223,188,33)" rx="2" ry="2" />
<text  x="993.20" y="367.5" ></text>
</g>
<g >
<title>tcache_put (1 samples, 0.02%)</title><rect x="517.2" y="405" width="0.2" height="15.0" fill="rgb(221,59,40)" rx="2" ry="2" />
<text  x="520.20" y="415.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (504 samples, 7.94%)</title><rect x="636.3" y="421" width="93.7" height="15.0" fill="rgb(228,83,16)" rx="2" ry="2" />
<text  x="639.33" y="431.5" >pixman_imag..</text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="777.4" y="421" width="0.2" height="15.0" fill="rgb(250,140,52)" rx="2" ry="2" />
<text  x="780.40" y="431.5" ></text>
</g>
<g >
<title>Sprite::SetWaverPhase (2 samples, 0.03%)</title><rect x="951.2" y="549" width="0.3" height="15.0" fill="rgb(209,137,12)" rx="2" ry="2" />
<text  x="954.17" y="559.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (4 samples, 0.06%)</title><rect x="796.0" y="421" width="0.7" height="15.0" fill="rgb(234,84,12)" rx="2" ry="2" />
<text  x="798.99" y="431.5" ></text>
</g>
<g >
<title>Bitmap::pixels (1 samples, 0.02%)</title><rect x="991.7" y="613" width="0.2" height="15.0" fill="rgb(229,4,19)" rx="2" ry="2" />
<text  x="994.69" y="623.5" ></text>
</g>
<g >
<title>posix_get_monotonic_raw (4 samples, 0.06%)</title><rect x="1155.8" y="549" width="0.7" height="15.0" fill="rgb(237,18,54)" rx="2" ry="2" />
<text  x="1158.80" y="559.5" ></text>
</g>
<g >
<title>update_min_vruntime (1 samples, 0.02%)</title><rect x="976.1" y="373" width="0.2" height="15.0" fill="rgb(247,142,25)" rx="2" ry="2" />
<text  x="979.08" y="383.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (4 samples, 0.06%)</title><rect x="506.2" y="437" width="0.8" height="15.0" fill="rgb(231,134,46)" rx="2" ry="2" />
<text  x="509.24" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="940.4" y="517" width="0.2" height="15.0" fill="rgb(241,183,31)" rx="2" ry="2" />
<text  x="943.40" y="527.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (4 samples, 0.06%)</title><rect x="786.7" y="437" width="0.7" height="15.0" fill="rgb(208,23,47)" rx="2" ry="2" />
<text  x="789.69" y="447.5" ></text>
</g>
<g >
<title>sock_recvmsg (1 samples, 0.02%)</title><rect x="964.4" y="341" width="0.2" height="15.0" fill="rgb(230,98,44)" rx="2" ry="2" />
<text  x="967.37" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_free (2 samples, 0.03%)</title><rect x="507.0" y="405" width="0.4" height="15.0" fill="rgb(228,148,53)" rx="2" ry="2" />
<text  x="509.98" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (22 samples, 0.35%)</title><rect x="524.6" y="373" width="4.1" height="15.0" fill="rgb(237,153,41)" rx="2" ry="2" />
<text  x="527.64" y="383.5" ></text>
</g>
<g >
<title>Sprite::SetWaverDepth (1 samples, 0.02%)</title><rect x="951.0" y="549" width="0.2" height="15.0" fill="rgb(229,76,26)" rx="2" ry="2" />
<text  x="953.99" y="559.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (1 samples, 0.02%)</title><rect x="91.4" y="741" width="0.2" height="15.0" fill="rgb(235,214,10)" rx="2" ry="2" />
<text  x="94.40" y="751.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.06%)</title><rect x="968.3" y="485" width="0.7" height="15.0" fill="rgb(225,64,47)" rx="2" ry="2" />
<text  x="971.27" y="495.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="494.3" y="325" width="0.4" height="15.0" fill="rgb(245,11,29)" rx="2" ry="2" />
<text  x="497.34" y="335.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="293.8" y="453" width="0.2" height="15.0" fill="rgb(230,65,8)" rx="2" ry="2" />
<text  x="296.80" y="463.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="1124.4" y="533" width="0.4" height="15.0" fill="rgb(219,78,33)" rx="2" ry="2" />
<text  x="1127.39" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate (3 samples, 0.05%)</title><rect x="508.1" y="357" width="0.6" height="15.0" fill="rgb(233,90,30)" rx="2" ry="2" />
<text  x="511.09" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (86 samples, 1.35%)</title><rect x="1140.7" y="565" width="16.0" height="15.0" fill="rgb(228,39,36)" rx="2" ry="2" />
<text  x="1143.75" y="575.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (6 samples, 0.09%)</title><rect x="775.5" y="341" width="1.2" height="15.0" fill="rgb(220,198,26)" rx="2" ry="2" />
<text  x="778.54" y="351.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="294.0" y="437" width="0.2" height="15.0" fill="rgb(236,75,47)" rx="2" ry="2" />
<text  x="296.99" y="447.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.02%)</title><rect x="78.4" y="645" width="0.2" height="15.0" fill="rgb(254,130,6)" rx="2" ry="2" />
<text  x="81.40" y="655.5" ></text>
</g>
<g >
<title>___sys_recvmsg (5 samples, 0.08%)</title><rect x="963.6" y="357" width="1.0" height="15.0" fill="rgb(250,202,8)" rx="2" ry="2" />
<text  x="966.63" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="968.1" y="405" width="0.2" height="15.0" fill="rgb(205,140,6)" rx="2" ry="2" />
<text  x="971.09" y="415.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.06%)</title><rect x="794.7" y="453" width="0.7" height="15.0" fill="rgb(227,146,48)" rx="2" ry="2" />
<text  x="797.68" y="463.5" ></text>
</g>
<g >
<title>pixman_image_get_width (1 samples, 0.02%)</title><rect x="339.5" y="565" width="0.2" height="15.0" fill="rgb(222,148,50)" rx="2" ry="2" />
<text  x="342.52" y="575.5" ></text>
</g>
<g >
<title>Sprite::GetZ (1 samples, 0.02%)</title><rect x="355.7" y="469" width="0.2" height="15.0" fill="rgb(227,106,22)" rx="2" ry="2" />
<text  x="358.69" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1 samples, 0.02%)</title><rect x="865.5" y="437" width="0.2" height="15.0" fill="rgb(245,39,0)" rx="2" ry="2" />
<text  x="868.50" y="447.5" ></text>
</g>
<g >
<title>timerqueue_add (2 samples, 0.03%)</title><rect x="974.2" y="437" width="0.4" height="15.0" fill="rgb(248,89,46)" rx="2" ry="2" />
<text  x="977.22" y="447.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="966.4" y="517" width="0.2" height="15.0" fill="rgb(224,157,18)" rx="2" ry="2" />
<text  x="969.42" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="116.1" y="709" width="0.2" height="15.0" fill="rgb(228,69,54)" rx="2" ry="2" />
<text  x="119.12" y="719.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (3 samples, 0.05%)</title><rect x="862.9" y="469" width="0.6" height="15.0" fill="rgb(205,187,7)" rx="2" ry="2" />
<text  x="865.89" y="479.5" ></text>
</g>
<g >
<title>__libc_recvmsg (1 samples, 0.02%)</title><rect x="990.8" y="485" width="0.1" height="15.0" fill="rgb(235,144,17)" rx="2" ry="2" />
<text  x="993.76" y="495.5" ></text>
</g>
<g >
<title>pixman_image_get_height (1 samples, 0.02%)</title><rect x="773.5" y="389" width="0.2" height="15.0" fill="rgb(224,209,17)" rx="2" ry="2" />
<text  x="776.50" y="399.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="552.7" y="325" width="0.4" height="15.0" fill="rgb(206,56,36)" rx="2" ry="2" />
<text  x="555.70" y="335.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.02%)</title><rect x="863.3" y="437" width="0.2" height="15.0" fill="rgb(246,107,1)" rx="2" ry="2" />
<text  x="866.27" y="447.5" ></text>
</g>
<g >
<title>ktime_get_raw_ts64 (1 samples, 0.02%)</title><rect x="1188.9" y="709" width="0.2" height="15.0" fill="rgb(225,132,53)" rx="2" ry="2" />
<text  x="1191.88" y="719.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="729.1" y="325" width="0.2" height="15.0" fill="rgb(233,69,12)" rx="2" ry="2" />
<text  x="732.08" y="335.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.03%)</title><rect x="65.9" y="597" width="0.4" height="15.0" fill="rgb(236,221,1)" rx="2" ry="2" />
<text  x="68.94" y="607.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="558.5" y="325" width="0.1" height="15.0" fill="rgb(206,192,32)" rx="2" ry="2" />
<text  x="561.46" y="335.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (2 samples, 0.03%)</title><rect x="113.7" y="613" width="0.4" height="15.0" fill="rgb(211,192,54)" rx="2" ry="2" />
<text  x="116.71" y="623.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="546.0" y="181" width="0.4" height="15.0" fill="rgb(209,113,5)" rx="2" ry="2" />
<text  x="549.01" y="191.5" ></text>
</g>
<g >
<title>Sprite::Refresh (35 samples, 0.55%)</title><rect x="334.7" y="581" width="6.5" height="15.0" fill="rgb(241,225,38)" rx="2" ry="2" />
<text  x="337.69" y="591.5" ></text>
</g>
<g >
<title>Game_Character::GetX (1 samples, 0.02%)</title><rect x="935.2" y="565" width="0.2" height="15.0" fill="rgb(247,15,49)" rx="2" ry="2" />
<text  x="938.19" y="575.5" ></text>
</g>
<g >
<title>__GI___poll (1 samples, 0.02%)</title><rect x="990.9" y="517" width="0.2" height="15.0" fill="rgb(219,160,45)" rx="2" ry="2" />
<text  x="993.95" y="527.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.02%)</title><rect x="988.3" y="405" width="0.2" height="15.0" fill="rgb(237,180,43)" rx="2" ry="2" />
<text  x="991.35" y="415.5" ></text>
</g>
<g >
<title>memcmp@plt (1 samples, 0.02%)</title><rect x="546.4" y="245" width="0.2" height="15.0" fill="rgb(235,90,16)" rx="2" ry="2" />
<text  x="549.38" y="255.5" ></text>
</g>
<g >
<title>x86_pmu_enable (7 samples, 0.11%)</title><rect x="1161.7" y="437" width="1.4" height="15.0" fill="rgb(237,211,38)" rx="2" ry="2" />
<text  x="1164.75" y="447.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="1153.8" y="501" width="0.1" height="15.0" fill="rgb(210,103,2)" rx="2" ry="2" />
<text  x="1156.76" y="511.5" ></text>
</g>
<g >
<title>Sprite::GetWidth (1 samples, 0.02%)</title><rect x="337.5" y="565" width="0.2" height="15.0" fill="rgb(210,170,3)" rx="2" ry="2" />
<text  x="340.48" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.02%)</title><rect x="357.4" y="597" width="0.2" height="15.0" fill="rgb(216,137,39)" rx="2" ry="2" />
<text  x="360.36" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (17 samples, 0.27%)</title><rect x="866.2" y="517" width="3.2" height="15.0" fill="rgb(240,205,49)" rx="2" ry="2" />
<text  x="869.24" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::_M_deallocate (1 samples, 0.02%)</title><rect x="834.1" y="261" width="0.2" height="15.0" fill="rgb(215,93,41)" rx="2" ry="2" />
<text  x="837.09" y="271.5" ></text>
</g>
<g >
<title>Sprite::GetZ (1 samples, 0.02%)</title><rect x="349.4" y="485" width="0.2" height="15.0" fill="rgb(249,185,36)" rx="2" ry="2" />
<text  x="352.37" y="495.5" ></text>
</g>
<g >
<title>_int_free (5 samples, 0.08%)</title><rect x="516.5" y="421" width="0.9" height="15.0" fill="rgb(242,229,30)" rx="2" ry="2" />
<text  x="519.46" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (4 samples, 0.06%)</title><rect x="519.1" y="485" width="0.7" height="15.0" fill="rgb(222,157,53)" rx="2" ry="2" />
<text  x="522.06" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;::__normal_iterator (1 samples, 0.02%)</title><rect x="817.7" y="325" width="0.2" height="15.0" fill="rgb(236,124,46)" rx="2" ry="2" />
<text  x="820.73" y="335.5" ></text>
</g>
<g >
<title>__sched_text_start (8 samples, 0.13%)</title><rect x="1161.6" y="501" width="1.5" height="15.0" fill="rgb(237,149,15)" rx="2" ry="2" />
<text  x="1164.56" y="511.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="507.2" y="357" width="0.2" height="15.0" fill="rgb(231,105,17)" rx="2" ry="2" />
<text  x="510.16" y="367.5" ></text>
</g>
<g >
<title>Bitmap::pixels (2 samples, 0.03%)</title><rect x="730.7" y="421" width="0.4" height="15.0" fill="rgb(213,41,42)" rx="2" ry="2" />
<text  x="733.75" y="431.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (1 samples, 0.02%)</title><rect x="1163.6" y="597" width="0.2" height="15.0" fill="rgb(224,211,42)" rx="2" ry="2" />
<text  x="1166.61" y="607.5" ></text>
</g>
<g >
<title>tcache_get (2 samples, 0.03%)</title><rect x="795.1" y="421" width="0.3" height="15.0" fill="rgb(220,60,31)" rx="2" ry="2" />
<text  x="798.06" y="431.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (2 samples, 0.03%)</title><rect x="940.4" y="533" width="0.4" height="15.0" fill="rgb(223,169,36)" rx="2" ry="2" />
<text  x="943.40" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment@plt (8 samples, 0.13%)</title><rect x="1180.1" y="597" width="1.5" height="15.0" fill="rgb(228,219,37)" rx="2" ry="2" />
<text  x="1183.15" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.02%)</title><rect x="529.7" y="357" width="0.1" height="15.0" fill="rgb(232,25,7)" rx="2" ry="2" />
<text  x="532.65" y="367.5" ></text>
</g>
<g >
<title>__strlen_avx2 (2 samples, 0.03%)</title><rect x="625.2" y="389" width="0.4" height="15.0" fill="rgb(216,52,19)" rx="2" ry="2" />
<text  x="628.18" y="399.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (1 samples, 0.02%)</title><rect x="1163.6" y="581" width="0.2" height="15.0" fill="rgb(245,101,31)" rx="2" ry="2" />
<text  x="1166.61" y="591.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (74 samples, 1.17%)</title><rect x="537.6" y="341" width="13.8" height="15.0" fill="rgb(207,121,2)" rx="2" ry="2" />
<text  x="540.65" y="351.5" ></text>
</g>
<g >
<title>Game_Interpreter::KeyInputState::CheckInput (1 samples, 0.02%)</title><rect x="97.0" y="741" width="0.2" height="15.0" fill="rgb(232,83,45)" rx="2" ry="2" />
<text  x="99.98" y="751.5" ></text>
</g>
<g >
<title>iov_iter_init (1 samples, 0.02%)</title><rect x="964.2" y="325" width="0.2" height="15.0" fill="rgb(205,98,39)" rx="2" ry="2" />
<text  x="967.18" y="335.5" ></text>
</g>
<g >
<title>pick_next_task_fair (5 samples, 0.08%)</title><rect x="988.2" y="437" width="0.9" height="15.0" fill="rgb(233,185,30)" rx="2" ry="2" />
<text  x="991.16" y="447.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="513.5" y="421" width="0.2" height="15.0" fill="rgb(205,212,46)" rx="2" ry="2" />
<text  x="516.48" y="431.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (1 samples, 0.02%)</title><rect x="339.7" y="549" width="0.2" height="15.0" fill="rgb(236,206,12)" rx="2" ry="2" />
<text  x="342.71" y="559.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="558.5" y="341" width="0.1" height="15.0" fill="rgb(228,66,17)" rx="2" ry="2" />
<text  x="561.46" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (4 samples, 0.06%)</title><rect x="470.2" y="517" width="0.7" height="15.0" fill="rgb(220,171,10)" rx="2" ry="2" />
<text  x="473.18" y="527.5" ></text>
</g>
<g >
<title>Game_Screen::GetTone (1 samples, 0.02%)</title><rect x="960.5" y="597" width="0.2" height="15.0" fill="rgb(240,85,13)" rx="2" ry="2" />
<text  x="963.47" y="607.5" ></text>
</g>
<g >
<title>XFreeEventData (1 samples, 0.02%)</title><rect x="967.5" y="533" width="0.2" height="15.0" fill="rgb(212,86,10)" rx="2" ry="2" />
<text  x="970.53" y="543.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (4 samples, 0.06%)</title><rect x="1134.1" y="581" width="0.7" height="15.0" fill="rgb(208,11,2)" rx="2" ry="2" />
<text  x="1137.06" y="591.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.02%)</title><rect x="739.3" y="213" width="0.2" height="15.0" fill="rgb(238,109,31)" rx="2" ry="2" />
<text  x="742.30" y="223.5" ></text>
</g>
<g >
<title>Graphics::RemoveDrawable (91 samples, 1.43%)</title><rect x="801.0" y="389" width="16.9" height="15.0" fill="rgb(232,3,11)" rx="2" ry="2" />
<text  x="804.00" y="399.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (2 samples, 0.03%)</title><rect x="837.4" y="437" width="0.4" height="15.0" fill="rgb(210,184,8)" rx="2" ry="2" />
<text  x="840.43" y="447.5" ></text>
</g>
<g >
<title>Tone::Tone (1 samples, 0.02%)</title><rect x="948.2" y="533" width="0.2" height="15.0" fill="rgb(216,130,3)" rx="2" ry="2" />
<text  x="951.20" y="543.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (36 samples, 0.57%)</title><rect x="840.2" y="469" width="6.7" height="15.0" fill="rgb(241,86,6)" rx="2" ry="2" />
<text  x="843.22" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (2 samples, 0.03%)</title><rect x="538.8" y="261" width="0.3" height="15.0" fill="rgb(210,130,11)" rx="2" ry="2" />
<text  x="541.76" y="271.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::~function (12 samples, 0.19%)</title><rect x="515.3" y="485" width="2.3" height="15.0" fill="rgb(234,17,31)" rx="2" ry="2" />
<text  x="518.34" y="495.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (9 samples, 0.14%)</title><rect x="757.3" y="213" width="1.7" height="15.0" fill="rgb(215,7,12)" rx="2" ry="2" />
<text  x="760.33" y="223.5" ></text>
</g>
<g >
<title>xcb_wait_for_reply64 (1 samples, 0.02%)</title><rect x="968.1" y="469" width="0.2" height="15.0" fill="rgb(243,150,29)" rx="2" ry="2" />
<text  x="971.09" y="479.5" ></text>
</g>
<g >
<title>record_times (1 samples, 0.02%)</title><rect x="49.8" y="581" width="0.2" height="15.0" fill="rgb(235,29,1)" rx="2" ry="2" />
<text  x="52.77" y="591.5" ></text>
</g>
<g >
<title>Scene::IsAsyncPending (99 samples, 1.56%)</title><rect x="1163.8" y="645" width="18.4" height="15.0" fill="rgb(252,61,8)" rx="2" ry="2" />
<text  x="1166.79" y="655.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;int&gt;::operator= (37 samples, 0.58%)</title><rect x="840.0" y="501" width="6.9" height="15.0" fill="rgb(242,129,26)" rx="2" ry="2" />
<text  x="843.03" y="511.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (2 samples, 0.03%)</title><rect x="343.1" y="549" width="0.3" height="15.0" fill="rgb(220,177,51)" rx="2" ry="2" />
<text  x="346.05" y="559.5" ></text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.03%)</title><rect x="63.9" y="533" width="0.4" height="15.0" fill="rgb(219,104,40)" rx="2" ry="2" />
<text  x="66.90" y="543.5" ></text>
</g>
<g >
<title>pixman_image_create_solid_fill (1 samples, 0.02%)</title><rect x="330.4" y="517" width="0.2" height="15.0" fill="rgb(243,82,3)" rx="2" ry="2" />
<text  x="333.42" y="527.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Set (1 samples, 0.02%)</title><rect x="917.7" y="549" width="0.2" height="15.0" fill="rgb(250,110,28)" rx="2" ry="2" />
<text  x="920.72" y="559.5" ></text>
</g>
<g >
<title>__GI___poll (3 samples, 0.05%)</title><rect x="991.1" y="549" width="0.6" height="15.0" fill="rgb(217,136,36)" rx="2" ry="2" />
<text  x="994.13" y="559.5" ></text>
</g>
<g >
<title>eventfd_read (1 samples, 0.02%)</title><rect x="71.1" y="677" width="0.2" height="15.0" fill="rgb(250,131,39)" rx="2" ry="2" />
<text  x="74.15" y="687.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (15 samples, 0.24%)</title><rect x="533.2" y="293" width="2.8" height="15.0" fill="rgb(223,22,53)" rx="2" ry="2" />
<text  x="536.18" y="303.5" ></text>
</g>
<g >
<title>Game_Map::IsAnyEventStarting (12 samples, 0.19%)</title><rect x="935.6" y="549" width="2.2" height="15.0" fill="rgb(232,184,21)" rx="2" ry="2" />
<text  x="938.56" y="559.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (566 samples, 8.91%)</title><rect x="188.8" y="517" width="105.2" height="15.0" fill="rgb(242,111,25)" rx="2" ry="2" />
<text  x="191.79" y="527.5" >[libpixman-1..</text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (1 samples, 0.02%)</title><rect x="342.9" y="533" width="0.2" height="15.0" fill="rgb(210,24,38)" rx="2" ry="2" />
<text  x="345.87" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_M_lower_bound (39 samples, 0.61%)</title><rect x="499.0" y="437" width="7.2" height="15.0" fill="rgb(236,87,39)" rx="2" ry="2" />
<text  x="501.99" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="795.4" y="453" width="0.2" height="15.0" fill="rgb(243,226,9)" rx="2" ry="2" />
<text  x="798.43" y="463.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="348.3" y="533" width="0.1" height="15.0" fill="rgb(227,74,6)" rx="2" ry="2" />
<text  x="351.26" y="543.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="445.3" y="469" width="0.2" height="15.0" fill="rgb(218,213,49)" rx="2" ry="2" />
<text  x="448.27" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;short, short, std::_Identity&lt;short&gt;, std::less&lt;short&gt;, std::allocator&lt;short&gt; &gt;::find (1 samples, 0.02%)</title><rect x="344.5" y="565" width="0.2" height="15.0" fill="rgb(222,54,31)" rx="2" ry="2" />
<text  x="347.54" y="575.5" ></text>
</g>
<g >
<title>Sprite::SetOx (1 samples, 0.02%)</title><rect x="100.1" y="741" width="0.2" height="15.0" fill="rgb(233,2,9)" rx="2" ry="2" />
<text  x="103.14" y="751.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="330.4" y="485" width="0.2" height="15.0" fill="rgb(206,62,28)" rx="2" ry="2" />
<text  x="333.42" y="495.5" ></text>
</g>
<g >
<title>_M_lower_bound (76 samples, 1.20%)</title><rect x="537.3" y="373" width="14.1" height="15.0" fill="rgb(217,161,17)" rx="2" ry="2" />
<text  x="540.27" y="383.5" ></text>
</g>
<g >
<title>run_rebalance_domains (4 samples, 0.06%)</title><rect x="1134.1" y="517" width="0.7" height="15.0" fill="rgb(234,41,32)" rx="2" ry="2" />
<text  x="1137.06" y="527.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="558.5" y="405" width="0.1" height="15.0" fill="rgb(237,54,18)" rx="2" ry="2" />
<text  x="561.46" y="415.5" ></text>
</g>
<g >
<title>Color::Color (1 samples, 0.02%)</title><rect x="96.4" y="741" width="0.2" height="15.0" fill="rgb(249,87,39)" rx="2" ry="2" />
<text  x="99.42" y="751.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.03%)</title><rect x="68.4" y="677" width="0.3" height="15.0" fill="rgb(247,75,14)" rx="2" ry="2" />
<text  x="71.36" y="687.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (7 samples, 0.11%)</title><rect x="551.4" y="325" width="1.3" height="15.0" fill="rgb(215,152,15)" rx="2" ry="2" />
<text  x="554.40" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (2 samples, 0.03%)</title><rect x="865.7" y="469" width="0.4" height="15.0" fill="rgb(224,21,1)" rx="2" ry="2" />
<text  x="868.68" y="479.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="729.1" y="357" width="0.2" height="15.0" fill="rgb(254,37,23)" rx="2" ry="2" />
<text  x="732.08" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::pop_back (1 samples, 0.02%)</title><rect x="879.1" y="533" width="0.1" height="15.0" fill="rgb(241,36,39)" rx="2" ry="2" />
<text  x="882.06" y="543.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (2 samples, 0.03%)</title><rect x="341.2" y="533" width="0.4" height="15.0" fill="rgb(219,3,9)" rx="2" ry="2" />
<text  x="344.20" y="543.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="990.6" y="357" width="0.2" height="15.0" fill="rgb(250,114,53)" rx="2" ry="2" />
<text  x="993.58" y="367.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="535.6" y="261" width="0.2" height="15.0" fill="rgb(254,75,5)" rx="2" ry="2" />
<text  x="538.60" y="271.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**&gt; (1 samples, 0.02%)</title><rect x="355.9" y="501" width="0.2" height="15.0" fill="rgb(209,98,10)" rx="2" ry="2" />
<text  x="358.88" y="511.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="517.4" y="421" width="0.2" height="15.0" fill="rgb(254,201,31)" rx="2" ry="2" />
<text  x="520.39" y="431.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (182 samples, 2.87%)</title><rect x="732.1" y="341" width="33.8" height="15.0" fill="rgb(225,197,33)" rx="2" ry="2" />
<text  x="735.05" y="351.5" >st..</text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="729.1" y="309" width="0.2" height="15.0" fill="rgb(211,153,11)" rx="2" ry="2" />
<text  x="732.08" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (3 samples, 0.05%)</title><rect x="862.9" y="501" width="0.6" height="15.0" fill="rgb(220,217,49)" rx="2" ry="2" />
<text  x="865.89" y="511.5" ></text>
</g>
<g >
<title>Bitmap::height (4 samples, 0.06%)</title><rect x="766.2" y="421" width="0.8" height="15.0" fill="rgb(246,72,6)" rx="2" ry="2" />
<text  x="769.25" y="431.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.02%)</title><rect x="492.7" y="405" width="0.2" height="15.0" fill="rgb(230,178,45)" rx="2" ry="2" />
<text  x="495.67" y="415.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, Drawable**, Drawable**&gt; (1 samples, 0.02%)</title><rect x="355.9" y="469" width="0.2" height="15.0" fill="rgb(228,136,7)" rx="2" ry="2" />
<text  x="358.88" y="479.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__weak_ptr&lt;int, void&gt; (12 samples, 0.19%)</title><rect x="510.0" y="453" width="2.2" height="15.0" fill="rgb(213,31,46)" rx="2" ry="2" />
<text  x="512.95" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="972.5" y="549" width="0.2" height="15.0" fill="rgb(206,147,40)" rx="2" ry="2" />
<text  x="975.55" y="559.5" ></text>
</g>
<g >
<title>psi_task_change (3 samples, 0.05%)</title><rect x="976.8" y="421" width="0.6" height="15.0" fill="rgb(211,2,43)" rx="2" ry="2" />
<text  x="979.82" y="431.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandConditionalBranch (1 samples, 0.02%)</title><rect x="96.8" y="741" width="0.2" height="15.0" fill="rgb(208,73,47)" rx="2" ry="2" />
<text  x="99.79" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (2 samples, 0.03%)</title><rect x="878.5" y="533" width="0.4" height="15.0" fill="rgb(249,223,39)" rx="2" ry="2" />
<text  x="881.51" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (17 samples, 0.27%)</title><rect x="762.7" y="229" width="3.2" height="15.0" fill="rgb(236,46,19)" rx="2" ry="2" />
<text  x="765.72" y="239.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="507.2" y="373" width="0.2" height="15.0" fill="rgb(223,37,44)" rx="2" ry="2" />
<text  x="510.16" y="383.5" ></text>
</g>
<g >
<title>std::replace&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (13 samples, 0.20%)</title><rect x="529.8" y="389" width="2.5" height="15.0" fill="rgb(211,16,40)" rx="2" ry="2" />
<text  x="532.84" y="399.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="102.0" y="741" width="0.4" height="15.0" fill="rgb(208,159,0)" rx="2" ry="2" />
<text  x="105.00" y="751.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (10 samples, 0.16%)</title><rect x="549.2" y="261" width="1.8" height="15.0" fill="rgb(211,96,13)" rx="2" ry="2" />
<text  x="552.17" y="271.5" ></text>
</g>
<g >
<title>SDL_UpdateTexture (1 samples, 0.02%)</title><rect x="991.9" y="613" width="0.2" height="15.0" fill="rgb(211,19,35)" rx="2" ry="2" />
<text  x="994.88" y="623.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1153.2" y="501" width="0.2" height="15.0" fill="rgb(253,58,29)" rx="2" ry="2" />
<text  x="1156.20" y="511.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="990.6" y="341" width="0.2" height="15.0" fill="rgb(249,192,42)" rx="2" ry="2" />
<text  x="993.58" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;::operator++ (1 samples, 0.02%)</title><rect x="354.2" y="501" width="0.2" height="15.0" fill="rgb(218,123,21)" rx="2" ry="2" />
<text  x="357.21" y="511.5" ></text>
</g>
<g >
<title>update_load_avg (2 samples, 0.03%)</title><rect x="976.3" y="389" width="0.3" height="15.0" fill="rgb(215,66,32)" rx="2" ry="2" />
<text  x="979.27" y="399.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (2 samples, 0.03%)</title><rect x="765.9" y="341" width="0.3" height="15.0" fill="rgb(244,152,46)" rx="2" ry="2" />
<text  x="768.88" y="351.5" ></text>
</g>
<g >
<title>std::default_delete&lt;Sprite&gt;::operator() (217 samples, 3.42%)</title><rect x="796.7" y="437" width="40.4" height="15.0" fill="rgb(222,36,30)" rx="2" ry="2" />
<text  x="799.73" y="447.5" >std..</text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (14 samples, 0.22%)</title><rect x="111.7" y="693" width="2.6" height="15.0" fill="rgb(208,104,48)" rx="2" ry="2" />
<text  x="114.66" y="703.5" ></text>
</g>
<g >
<title>std::min&lt;int&gt; (13 samples, 0.20%)</title><rect x="465.5" y="517" width="2.4" height="15.0" fill="rgb(224,210,16)" rx="2" ry="2" />
<text  x="468.53" y="527.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="42.7" y="693" width="0.2" height="15.0" fill="rgb(212,148,38)" rx="2" ry="2" />
<text  x="45.71" y="703.5" ></text>
</g>
<g >
<title>fput (2 samples, 0.03%)</title><rect x="44.0" y="693" width="0.4" height="15.0" fill="rgb(242,103,50)" rx="2" ry="2" />
<text  x="47.01" y="703.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.02%)</title><rect x="967.9" y="277" width="0.2" height="15.0" fill="rgb(253,142,23)" rx="2" ry="2" />
<text  x="970.90" y="287.5" ></text>
</g>
<g >
<title>Bitmap::width (17 samples, 0.27%)</title><rect x="944.7" y="533" width="3.1" height="15.0" fill="rgb(238,187,26)" rx="2" ry="2" />
<text  x="947.67" y="543.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (71 samples, 1.12%)</title><rect x="50.7" y="549" width="13.2" height="15.0" fill="rgb(225,19,43)" rx="2" ry="2" />
<text  x="53.70" y="559.5" ></text>
</g>
<g >
<title>put_prev_entity (1 samples, 0.02%)</title><rect x="989.1" y="421" width="0.2" height="15.0" fill="rgb(212,145,6)" rx="2" ry="2" />
<text  x="992.09" y="431.5" ></text>
</g>
<g >
<title>apparmor_file_permission (3 samples, 0.05%)</title><rect x="72.4" y="645" width="0.6" height="15.0" fill="rgb(222,170,28)" rx="2" ry="2" />
<text  x="75.45" y="655.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;Drawable*&gt; (1 samples, 0.02%)</title><rect x="835.4" y="245" width="0.2" height="15.0" fill="rgb(216,99,11)" rx="2" ry="2" />
<text  x="838.39" y="255.5" ></text>
</g>
<g >
<title>std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt;&amp;, true&gt; (5 samples, 0.08%)</title><rect x="508.7" y="453" width="0.9" height="15.0" fill="rgb(209,14,7)" rx="2" ry="2" />
<text  x="511.65" y="463.5" ></text>
</g>
<g >
<title>__GI___poll (1 samples, 0.02%)</title><rect x="968.1" y="421" width="0.2" height="15.0" fill="rgb(223,23,49)" rx="2" ry="2" />
<text  x="971.09" y="431.5" ></text>
</g>
<g >
<title>Tone::Tone (2 samples, 0.03%)</title><rect x="794.1" y="437" width="0.4" height="15.0" fill="rgb(211,61,36)" rx="2" ry="2" />
<text  x="797.13" y="447.5" ></text>
</g>
<g >
<title>posix_get_monotonic_raw (27 samples, 0.43%)</title><rect x="604.6" y="325" width="5.0" height="15.0" fill="rgb(214,69,47)" rx="2" ry="2" />
<text  x="607.55" y="335.5" ></text>
</g>
<g >
<title>update_min_vruntime (1 samples, 0.02%)</title><rect x="1161.6" y="421" width="0.1" height="15.0" fill="rgb(208,171,10)" rx="2" ry="2" />
<text  x="1164.56" y="431.5" ></text>
</g>
<g >
<title>Sprite::SetAngle (1 samples, 0.02%)</title><rect x="771.6" y="437" width="0.2" height="15.0" fill="rgb(217,138,38)" rx="2" ry="2" />
<text  x="774.64" y="447.5" ></text>
</g>
<g >
<title>operator()&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="357.2" y="517" width="0.2" height="15.0" fill="rgb(206,19,27)" rx="2" ry="2" />
<text  x="360.18" y="527.5" ></text>
</g>
<g >
<title>Bitmap::height (1 samples, 0.02%)</title><rect x="336.4" y="549" width="0.1" height="15.0" fill="rgb(252,168,44)" rx="2" ry="2" />
<text  x="339.36" y="559.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (26 samples, 0.41%)</title><rect x="1126.6" y="501" width="4.9" height="15.0" fill="rgb(207,5,36)" rx="2" ry="2" />
<text  x="1129.62" y="511.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (8 samples, 0.13%)</title><rect x="912.0" y="533" width="1.4" height="15.0" fill="rgb(211,112,6)" rx="2" ry="2" />
<text  x="914.96" y="543.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (1 samples, 0.02%)</title><rect x="93.8" y="741" width="0.2" height="15.0" fill="rgb(214,161,50)" rx="2" ry="2" />
<text  x="96.82" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.02%)</title><rect x="555.7" y="293" width="0.2" height="15.0" fill="rgb(237,23,27)" rx="2" ry="2" />
<text  x="558.67" y="303.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (8 samples, 0.13%)</title><rect x="554.0" y="389" width="1.5" height="15.0" fill="rgb(206,144,41)" rx="2" ry="2" />
<text  x="557.00" y="399.5" ></text>
</g>
<g >
<title>Game_Picture::SyncCurrentToFinish (6 samples, 0.09%)</title><rect x="940.8" y="565" width="1.1" height="15.0" fill="rgb(206,183,46)" rx="2" ry="2" />
<text  x="943.77" y="575.5" ></text>
</g>
<g >
<title>handle_irq (2 samples, 0.03%)</title><rect x="78.2" y="725" width="0.4" height="15.0" fill="rgb(209,41,3)" rx="2" ry="2" />
<text  x="81.21" y="735.5" ></text>
</g>
<g >
<title>ktime_get_raw_ts64 (25 samples, 0.39%)</title><rect x="604.6" y="309" width="4.6" height="15.0" fill="rgb(218,185,33)" rx="2" ry="2" />
<text  x="607.55" y="319.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (7 samples, 0.11%)</title><rect x="791.0" y="437" width="1.3" height="15.0" fill="rgb(250,29,27)" rx="2" ry="2" />
<text  x="793.97" y="447.5" ></text>
</g>
<g >
<title>std::get_temporary_buffer&lt;Drawable*&gt; (1 samples, 0.02%)</title><rect x="348.3" y="549" width="0.1" height="15.0" fill="rgb(227,194,6)" rx="2" ry="2" />
<text  x="351.26" y="559.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (3 samples, 0.05%)</title><rect x="100.9" y="741" width="0.5" height="15.0" fill="rgb(241,117,28)" rx="2" ry="2" />
<text  x="103.88" y="751.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="967.9" y="405" width="0.2" height="15.0" fill="rgb(250,131,36)" rx="2" ry="2" />
<text  x="970.90" y="415.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (21 samples, 0.33%)</title><rect x="532.3" y="389" width="3.9" height="15.0" fill="rgb(229,126,19)" rx="2" ry="2" />
<text  x="535.26" y="399.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (46 samples, 0.72%)</title><rect x="613.8" y="373" width="8.6" height="15.0" fill="rgb(231,170,21)" rx="2" ry="2" />
<text  x="616.85" y="383.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (5 samples, 0.08%)</title><rect x="557.3" y="373" width="1.0" height="15.0" fill="rgb(227,220,14)" rx="2" ry="2" />
<text  x="560.35" y="383.5" ></text>
</g>
<g >
<title>__mnt_want_write_file (1 samples, 0.02%)</title><rect x="77.5" y="613" width="0.2" height="15.0" fill="rgb(209,138,18)" rx="2" ry="2" />
<text  x="80.47" y="623.5" ></text>
</g>
<g >
<title>Game_Map::GetDisplayX (2 samples, 0.03%)</title><rect x="489.1" y="517" width="0.4" height="15.0" fill="rgb(224,75,40)" rx="2" ry="2" />
<text  x="492.14" y="527.5" ></text>
</g>
<g >
<title>Bitmap::width (1 samples, 0.02%)</title><rect x="773.7" y="405" width="0.2" height="15.0" fill="rgb(234,136,4)" rx="2" ry="2" />
<text  x="776.68" y="415.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (54 samples, 0.85%)</title><rect x="847.5" y="517" width="10.0" height="15.0" fill="rgb(249,42,43)" rx="2" ry="2" />
<text  x="850.47" y="527.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="42.7" y="677" width="0.2" height="15.0" fill="rgb(236,65,28)" rx="2" ry="2" />
<text  x="45.71" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (1 samples, 0.02%)</title><rect x="940.6" y="517" width="0.2" height="15.0" fill="rgb(241,61,7)" rx="2" ry="2" />
<text  x="943.58" y="527.5" ></text>
</g>
<g >
<title>Sprite::SetX (1 samples, 0.02%)</title><rect x="951.5" y="549" width="0.2" height="15.0" fill="rgb(238,184,53)" rx="2" ry="2" />
<text  x="954.55" y="559.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandJumpToLabel (39 samples, 0.61%)</title><rect x="471.3" y="549" width="7.2" height="15.0" fill="rgb(226,156,37)" rx="2" ry="2" />
<text  x="474.29" y="559.5" ></text>
</g>
<g >
<title>update_process_times (2 samples, 0.03%)</title><rect x="63.9" y="501" width="0.4" height="15.0" fill="rgb(229,156,37)" rx="2" ry="2" />
<text  x="66.90" y="511.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="535.6" y="245" width="0.2" height="15.0" fill="rgb(235,221,11)" rx="2" ry="2" />
<text  x="538.60" y="255.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (7 samples, 0.11%)</title><rect x="1161.7" y="421" width="1.4" height="15.0" fill="rgb(253,56,52)" rx="2" ry="2" />
<text  x="1164.75" y="431.5" ></text>
</g>
<g >
<title>memset (1 samples, 0.02%)</title><rect x="730.6" y="405" width="0.1" height="15.0" fill="rgb(231,22,15)" rx="2" ry="2" />
<text  x="733.56" y="415.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="757.1" y="181" width="0.2" height="15.0" fill="rgb(239,187,48)" rx="2" ry="2" />
<text  x="760.14" y="191.5" ></text>
</g>
<g >
<title>Graphics::GlobalDraw (1 samples, 0.02%)</title><rect x="183.0" y="613" width="0.2" height="15.0" fill="rgb(217,33,17)" rx="2" ry="2" />
<text  x="186.03" y="623.5" ></text>
</g>
<g >
<title>__fget (3 samples, 0.05%)</title><rect x="43.1" y="661" width="0.5" height="15.0" fill="rgb(231,7,10)" rx="2" ry="2" />
<text  x="46.08" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (7 samples, 0.11%)</title><rect x="857.7" y="517" width="1.3" height="15.0" fill="rgb(206,14,39)" rx="2" ry="2" />
<text  x="860.69" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::clear (11 samples, 0.17%)</title><rect x="837.8" y="485" width="2.0" height="15.0" fill="rgb(214,67,22)" rx="2" ry="2" />
<text  x="840.80" y="495.5" ></text>
</g>
<g >
<title>MakeFlashColor (1 samples, 0.02%)</title><rect x="949.3" y="533" width="0.2" height="15.0" fill="rgb(209,39,0)" rx="2" ry="2" />
<text  x="952.32" y="543.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="64.3" y="549" width="0.2" height="15.0" fill="rgb(221,13,49)" rx="2" ry="2" />
<text  x="67.27" y="559.5" ></text>
</g>
<g >
<title>__fget (2 samples, 0.03%)</title><rect x="68.4" y="661" width="0.3" height="15.0" fill="rgb(229,62,52)" rx="2" ry="2" />
<text  x="71.36" y="671.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="293.8" y="485" width="0.2" height="15.0" fill="rgb(212,48,6)" rx="2" ry="2" />
<text  x="296.80" y="495.5" ></text>
</g>
<g >
<title>LoadBitmap&lt;(&lt;unnamed&gt;::Material::Type)9&gt; (1 samples, 0.02%)</title><rect x="960.1" y="485" width="0.2" height="15.0" fill="rgb(213,69,36)" rx="2" ry="2" />
<text  x="963.10" y="495.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="34.7" y="757" width="0.4" height="15.0" fill="rgb(254,102,28)" rx="2" ry="2" />
<text  x="37.72" y="767.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (711 samples, 11.20%)</title><rect x="992.8" y="565" width="132.2" height="15.0" fill="rgb(219,62,45)" rx="2" ry="2" />
<text  x="995.81" y="575.5" >[libSDL2-2.0.so...</text>
</g>
<g >
<title>pixman_image_create_bits (3 samples, 0.05%)</title><rect x="762.0" y="261" width="0.5" height="15.0" fill="rgb(205,106,51)" rx="2" ry="2" />
<text  x="764.97" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::size (23 samples, 0.36%)</title><rect x="927.6" y="549" width="4.2" height="15.0" fill="rgb(206,115,45)" rx="2" ry="2" />
<text  x="930.57" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (4 samples, 0.06%)</title><rect x="506.2" y="405" width="0.8" height="15.0" fill="rgb(219,47,6)" rx="2" ry="2" />
<text  x="509.24" y="415.5" ></text>
</g>
<g >
<title>copyout (1 samples, 0.02%)</title><rect x="70.4" y="597" width="0.2" height="15.0" fill="rgb(247,48,26)" rx="2" ry="2" />
<text  x="73.40" y="607.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;Drawable* const&gt; &gt; (30 samples, 0.47%)</title><rect x="801.6" y="357" width="5.5" height="15.0" fill="rgb(252,94,44)" rx="2" ry="2" />
<text  x="804.56" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (6 samples, 0.09%)</title><rect x="556.2" y="293" width="1.1" height="15.0" fill="rgb(215,55,27)" rx="2" ry="2" />
<text  x="559.23" y="303.5" ></text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt;, 36ul&gt; (1 samples, 0.02%)</title><rect x="357.4" y="613" width="0.2" height="15.0" fill="rgb(206,118,33)" rx="2" ry="2" />
<text  x="360.36" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (47 samples, 0.74%)</title><rect x="918.7" y="549" width="8.7" height="15.0" fill="rgb(222,216,44)" rx="2" ry="2" />
<text  x="921.65" y="559.5" ></text>
</g>
<g >
<title>XFlush (6 samples, 0.09%)</title><rect x="989.8" y="565" width="1.1" height="15.0" fill="rgb(216,74,13)" rx="2" ry="2" />
<text  x="992.83" y="575.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (3 samples, 0.05%)</title><rect x="974.2" y="469" width="0.6" height="15.0" fill="rgb(254,76,34)" rx="2" ry="2" />
<text  x="977.22" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (5 samples, 0.08%)</title><rect x="528.7" y="357" width="1.0" height="15.0" fill="rgb(209,121,0)" rx="2" ry="2" />
<text  x="531.72" y="367.5" ></text>
</g>
<g >
<title>Cache::SystemOrBlack (1 samples, 0.02%)</title><rect x="959.0" y="533" width="0.2" height="15.0" fill="rgb(213,2,40)" rx="2" ry="2" />
<text  x="961.98" y="543.5" ></text>
</g>
<g >
<title>operator() (1 samples, 0.02%)</title><rect x="958.4" y="565" width="0.2" height="15.0" fill="rgb(209,118,42)" rx="2" ry="2" />
<text  x="961.42" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (3 samples, 0.05%)</title><rect x="508.1" y="341" width="0.6" height="15.0" fill="rgb(247,17,8)" rx="2" ry="2" />
<text  x="511.09" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_S_copy (1 samples, 0.02%)</title><rect x="864.4" y="469" width="0.2" height="15.0" fill="rgb(245,168,25)" rx="2" ry="2" />
<text  x="867.38" y="479.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (2 samples, 0.03%)</title><rect x="341.2" y="565" width="0.4" height="15.0" fill="rgb(239,81,27)" rx="2" ry="2" />
<text  x="344.20" y="575.5" ></text>
</g>
<g >
<title>dequeue_task_fair (6 samples, 0.09%)</title><rect x="47.9" y="597" width="1.1" height="15.0" fill="rgb(226,0,37)" rx="2" ry="2" />
<text  x="50.91" y="607.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (11 samples, 0.17%)</title><rect x="354.0" y="517" width="2.1" height="15.0" fill="rgb(249,187,41)" rx="2" ry="2" />
<text  x="357.02" y="527.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (1 samples, 0.02%)</title><rect x="357.0" y="597" width="0.2" height="15.0" fill="rgb(206,187,46)" rx="2" ry="2" />
<text  x="359.99" y="607.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (1 samples, 0.02%)</title><rect x="357.0" y="613" width="0.2" height="15.0" fill="rgb(220,60,28)" rx="2" ry="2" />
<text  x="359.99" y="623.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (61 samples, 0.96%)</title><rect x="961.4" y="565" width="11.3" height="15.0" fill="rgb(222,47,31)" rx="2" ry="2" />
<text  x="964.40" y="575.5" ></text>
</g>
<g >
<title>std::make_pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt;&amp;&gt; (5 samples, 0.08%)</title><rect x="508.7" y="469" width="0.9" height="15.0" fill="rgb(248,145,24)" rx="2" ry="2" />
<text  x="511.65" y="479.5" ></text>
</g>
<g >
<title>udev_monitor_get_fd (1 samples, 0.02%)</title><rect x="969.0" y="517" width="0.2" height="15.0" fill="rgb(247,198,51)" rx="2" ry="2" />
<text  x="972.02" y="527.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (1 samples, 0.02%)</title><rect x="160.0" y="741" width="0.2" height="15.0" fill="rgb(219,145,39)" rx="2" ry="2" />
<text  x="162.99" y="751.5" ></text>
</g>
<g >
<title>std::__stable_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (1 samples, 0.02%)</title><rect x="183.0" y="581" width="0.2" height="15.0" fill="rgb(208,41,12)" rx="2" ry="2" />
<text  x="186.03" y="591.5" ></text>
</g>
<g >
<title>Bitmap::Clear (6 samples, 0.09%)</title><rect x="730.0" y="437" width="1.1" height="15.0" fill="rgb(228,218,42)" rx="2" ry="2" />
<text  x="733.01" y="447.5" ></text>
</g>
<g >
<title>__exchange_and_add (4 samples, 0.06%)</title><rect x="333.9" y="469" width="0.8" height="15.0" fill="rgb(250,194,53)" rx="2" ry="2" />
<text  x="336.95" y="479.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (8 samples, 0.13%)</title><rect x="88.8" y="741" width="1.5" height="15.0" fill="rgb(232,141,47)" rx="2" ry="2" />
<text  x="91.80" y="751.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (18 samples, 0.28%)</title><rect x="532.6" y="341" width="3.4" height="15.0" fill="rgb(208,97,18)" rx="2" ry="2" />
<text  x="535.63" y="351.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="794.5" y="437" width="0.2" height="15.0" fill="rgb(244,124,48)" rx="2" ry="2" />
<text  x="797.50" y="447.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (3,245 samples, 51.11%)</title><rect x="357.9" y="629" width="603.1" height="15.0" fill="rgb(213,80,28)" rx="2" ry="2" />
<text  x="360.92" y="639.5" >Scene_Map::UpdateStage1</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1132.8" y="549" width="0.1" height="15.0" fill="rgb(233,72,12)" rx="2" ry="2" />
<text  x="1135.76" y="559.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustId (1 samples, 0.02%)</title><rect x="85.6" y="741" width="0.2" height="15.0" fill="rgb(230,141,11)" rx="2" ry="2" />
<text  x="88.64" y="751.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="801.4" y="277" width="0.2" height="15.0" fill="rgb(252,69,52)" rx="2" ry="2" />
<text  x="804.38" y="287.5" ></text>
</g>
<g >
<title>__fdget_pos (2 samples, 0.03%)</title><rect x="73.6" y="693" width="0.3" height="15.0" fill="rgb(232,141,11)" rx="2" ry="2" />
<text  x="76.56" y="703.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandControlVariables (410 samples, 6.46%)</title><rect x="394.7" y="549" width="76.2" height="15.0" fill="rgb(233,160,43)" rx="2" ry="2" />
<text  x="397.72" y="559.5" >Game_Int..</text>
</g>
<g >
<title>__update_load_avg_cfs_rq (2 samples, 0.03%)</title><rect x="1134.4" y="485" width="0.4" height="15.0" fill="rgb(205,223,23)" rx="2" ry="2" />
<text  x="1137.43" y="495.5" ></text>
</g>
<g >
<title>pixman_transform_init_scale@plt (1 samples, 0.02%)</title><rect x="295.3" y="501" width="0.2" height="15.0" fill="rgb(209,179,20)" rx="2" ry="2" />
<text  x="298.29" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.02%)</title><rect x="556.0" y="325" width="0.2" height="15.0" fill="rgb(232,165,17)" rx="2" ry="2" />
<text  x="559.05" y="335.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="492.5" y="405" width="0.2" height="15.0" fill="rgb(222,165,46)" rx="2" ry="2" />
<text  x="495.48" y="415.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (9 samples, 0.14%)</title><rect x="551.4" y="357" width="1.7" height="15.0" fill="rgb(227,16,50)" rx="2" ry="2" />
<text  x="554.40" y="367.5" ></text>
</g>
<g >
<title>AsyncHandler::IsImportantFilePending (1 samples, 0.02%)</title><rect x="181.5" y="645" width="0.2" height="15.0" fill="rgb(247,162,48)" rx="2" ry="2" />
<text  x="184.55" y="655.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (4 samples, 0.06%)</title><rect x="69.7" y="581" width="0.7" height="15.0" fill="rgb(239,89,48)" rx="2" ry="2" />
<text  x="72.66" y="591.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (5 samples, 0.08%)</title><rect x="150.3" y="741" width="1.0" height="15.0" fill="rgb(206,194,49)" rx="2" ry="2" />
<text  x="153.32" y="751.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="34.9" y="629" width="0.2" height="15.0" fill="rgb(253,176,28)" rx="2" ry="2" />
<text  x="37.90" y="639.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="962.0" y="485" width="0.1" height="15.0" fill="rgb(218,153,52)" rx="2" ry="2" />
<text  x="964.95" y="495.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (3 samples, 0.05%)</title><rect x="351.6" y="469" width="0.6" height="15.0" fill="rgb(242,83,36)" rx="2" ry="2" />
<text  x="354.60" y="479.5" ></text>
</g>
<g >
<title>Scene::MainFunction (5,494 samples, 86.53%)</title><rect x="161.1" y="677" width="1021.1" height="15.0" fill="rgb(211,104,1)" rx="2" ry="2" />
<text  x="164.10" y="687.5" >Scene::MainFunction</text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (17 samples, 0.27%)</title><rect x="111.1" y="725" width="3.2" height="15.0" fill="rgb(215,69,10)" rx="2" ry="2" />
<text  x="114.11" y="735.5" ></text>
</g>
<g >
<title>dequeue_entity (6 samples, 0.09%)</title><rect x="975.5" y="405" width="1.1" height="15.0" fill="rgb(236,61,47)" rx="2" ry="2" />
<text  x="978.52" y="415.5" ></text>
</g>
<g >
<title>__exchange_and_add (18 samples, 0.28%)</title><rect x="859.5" y="421" width="3.4" height="15.0" fill="rgb(249,21,27)" rx="2" ry="2" />
<text  x="862.55" y="431.5" ></text>
</g>
<g >
<title>std::ostream::sentry::~sentry (1 samples, 0.02%)</title><rect x="866.1" y="485" width="0.1" height="15.0" fill="rgb(222,65,46)" rx="2" ry="2" />
<text  x="869.05" y="495.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="78.4" y="661" width="0.2" height="15.0" fill="rgb(233,38,52)" rx="2" ry="2" />
<text  x="81.40" y="671.5" ></text>
</g>
<g >
<title>Sprite::SetZ (13 samples, 0.20%)</title><rect x="951.7" y="549" width="2.4" height="15.0" fill="rgb(216,175,13)" rx="2" ry="2" />
<text  x="954.73" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (4 samples, 0.06%)</title><rect x="519.1" y="453" width="0.7" height="15.0" fill="rgb(246,52,16)" rx="2" ry="2" />
<text  x="522.06" y="463.5" ></text>
</g>
<g >
<title>LoadBitmap&lt;(&lt;unnamed&gt;::Material::Type)8&gt; (564 samples, 8.88%)</title><rect x="520.7" y="437" width="104.9" height="15.0" fill="rgb(241,23,37)" rx="2" ry="2" />
<text  x="523.73" y="447.5" >LoadBitmap&lt;(..</text>
</g>
<g >
<title>[libpthread-2.29.so] (5 samples, 0.08%)</title><rect x="181.7" y="645" width="1.0" height="15.0" fill="rgb(245,28,51)" rx="2" ry="2" />
<text  x="184.73" y="655.5" ></text>
</g>
<g >
<title>Sprite::SetOy (1 samples, 0.02%)</title><rect x="86.8" y="741" width="0.1" height="15.0" fill="rgb(233,129,36)" rx="2" ry="2" />
<text  x="89.76" y="751.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (1 samples, 0.02%)</title><rect x="330.4" y="501" width="0.2" height="15.0" fill="rgb(233,73,29)" rx="2" ry="2" />
<text  x="333.42" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.02%)</title><rect x="958.2" y="485" width="0.2" height="15.0" fill="rgb(230,166,4)" rx="2" ry="2" />
<text  x="961.24" y="495.5" ></text>
</g>
<g >
<title>Utils::GetRandomNumber (1 samples, 0.02%)</title><rect x="100.5" y="741" width="0.2" height="15.0" fill="rgb(209,6,10)" rx="2" ry="2" />
<text  x="103.51" y="751.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator bool (2 samples, 0.03%)</title><rect x="863.8" y="517" width="0.4" height="15.0" fill="rgb(228,122,11)" rx="2" ry="2" />
<text  x="866.82" y="527.5" ></text>
</g>
<g >
<title>_int_free (3 samples, 0.05%)</title><rect x="836.3" y="421" width="0.6" height="15.0" fill="rgb(245,17,9)" rx="2" ry="2" />
<text  x="839.32" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (75 samples, 1.18%)</title><rect x="166.3" y="613" width="13.9" height="15.0" fill="rgb(219,51,44)" rx="2" ry="2" />
<text  x="169.30" y="623.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (1 samples, 0.02%)</title><rect x="154.8" y="741" width="0.2" height="15.0" fill="rgb(219,28,53)" rx="2" ry="2" />
<text  x="157.78" y="751.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.02%)</title><rect x="71.5" y="661" width="0.2" height="15.0" fill="rgb(216,0,7)" rx="2" ry="2" />
<text  x="74.52" y="671.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (1 samples, 0.02%)</title><rect x="959.9" y="405" width="0.2" height="15.0" fill="rgb(225,211,25)" rx="2" ry="2" />
<text  x="962.91" y="415.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_manager (7 samples, 0.11%)</title><rect x="512.4" y="469" width="1.3" height="15.0" fill="rgb(223,203,2)" rx="2" ry="2" />
<text  x="515.37" y="479.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (2 samples, 0.03%)</title><rect x="837.4" y="421" width="0.4" height="15.0" fill="rgb(211,17,38)" rx="2" ry="2" />
<text  x="840.43" y="431.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (1 samples, 0.02%)</title><rect x="118.0" y="757" width="0.2" height="15.0" fill="rgb(224,4,45)" rx="2" ry="2" />
<text  x="120.98" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (2 samples, 0.03%)</title><rect x="493.2" y="405" width="0.4" height="15.0" fill="rgb(246,193,6)" rx="2" ry="2" />
<text  x="496.23" y="415.5" ></text>
</g>
<g >
<title>Sprite::BlitScreenIntern (799 samples, 12.58%)</title><rect x="186.2" y="581" width="148.5" height="15.0" fill="rgb(231,25,15)" rx="2" ry="2" />
<text  x="189.19" y="591.5" >Sprite::BlitScreen..</text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.02%)</title><rect x="623.7" y="293" width="0.2" height="15.0" fill="rgb(239,217,28)" rx="2" ry="2" />
<text  x="626.70" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (3 samples, 0.05%)</title><rect x="513.7" y="421" width="0.5" height="15.0" fill="rgb(208,181,33)" rx="2" ry="2" />
<text  x="516.67" y="431.5" ></text>
</g>
<g >
<title>pixman_image_get_width (21 samples, 0.33%)</title><rect x="954.3" y="549" width="3.9" height="15.0" fill="rgb(235,119,8)" rx="2" ry="2" />
<text  x="957.33" y="559.5" ></text>
</g>
<g >
<title>__GI___libc_free (2 samples, 0.03%)</title><rect x="536.2" y="325" width="0.3" height="15.0" fill="rgb(248,42,20)" rx="2" ry="2" />
<text  x="539.16" y="335.5" ></text>
</g>
<g >
<title>_int_free (33 samples, 0.52%)</title><rect x="826.1" y="261" width="6.1" height="15.0" fill="rgb(222,134,8)" rx="2" ry="2" />
<text  x="829.09" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt;::_M_erase (58 samples, 0.91%)</title><rect x="807.1" y="357" width="10.8" height="15.0" fill="rgb(250,37,18)" rx="2" ry="2" />
<text  x="810.14" y="367.5" ></text>
</g>
<g >
<title>std::__chunk_insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (14 samples, 0.22%)</title><rect x="349.6" y="533" width="2.6" height="15.0" fill="rgb(247,99,3)" rx="2" ry="2" />
<text  x="352.56" y="543.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.02%)</title><rect x="801.4" y="213" width="0.2" height="15.0" fill="rgb(211,56,16)" rx="2" ry="2" />
<text  x="804.38" y="223.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (3 samples, 0.05%)</title><rect x="46.6" y="613" width="0.6" height="15.0" fill="rgb(225,196,37)" rx="2" ry="2" />
<text  x="49.61" y="623.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (46 samples, 0.72%)</title><rect x="348.4" y="565" width="8.6" height="15.0" fill="rgb(254,184,8)" rx="2" ry="2" />
<text  x="351.44" y="575.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (1 samples, 0.02%)</title><rect x="100.7" y="741" width="0.2" height="15.0" fill="rgb(207,174,5)" rx="2" ry="2" />
<text  x="103.70" y="751.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::CommonEvent&gt; (1 samples, 0.02%)</title><rect x="935.0" y="565" width="0.2" height="15.0" fill="rgb(247,213,12)" rx="2" ry="2" />
<text  x="938.01" y="575.5" ></text>
</g>
<g >
<title>[easyrpg-player] (2 samples, 0.03%)</title><rect x="109.2" y="757" width="0.4" height="15.0" fill="rgb(216,108,31)" rx="2" ry="2" />
<text  x="112.25" y="767.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (1,734 samples, 27.31%)</title><rect x="517.6" y="501" width="322.2" height="15.0" fill="rgb(246,146,54)" rx="2" ry="2" />
<text  x="520.57" y="511.5" >FileRequestAsync::CallListeners</text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="835.2" y="261" width="0.2" height="15.0" fill="rgb(244,205,29)" rx="2" ry="2" />
<text  x="838.20" y="271.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (55 samples, 0.87%)</title><rect x="977.8" y="357" width="10.2" height="15.0" fill="rgb(241,12,46)" rx="2" ry="2" />
<text  x="980.75" y="367.5" ></text>
</g>
<g >
<title>finish_task_switch (79 samples, 1.24%)</title><rect x="50.0" y="613" width="14.6" height="15.0" fill="rgb(223,222,34)" rx="2" ry="2" />
<text  x="52.96" y="623.5" ></text>
</g>
<g >
<title>pixman_transform_point_31_16 (3 samples, 0.05%)</title><rect x="159.2" y="741" width="0.6" height="15.0" fill="rgb(244,86,54)" rx="2" ry="2" />
<text  x="162.24" y="751.5" ></text>
</g>
<g >
<title>Bitmap::find_format (1 samples, 0.02%)</title><rect x="85.1" y="741" width="0.2" height="15.0" fill="rgb(236,10,34)" rx="2" ry="2" />
<text  x="88.09" y="751.5" ></text>
</g>
<g >
<title>vfs_write (21 samples, 0.33%)</title><rect x="74.1" y="693" width="3.9" height="15.0" fill="rgb(216,93,44)" rx="2" ry="2" />
<text  x="77.12" y="703.5" ></text>
</g>
<g >
<title>__calc_delta (1 samples, 0.02%)</title><rect x="975.7" y="373" width="0.2" height="15.0" fill="rgb(233,104,14)" rx="2" ry="2" />
<text  x="978.71" y="383.5" ></text>
</g>
<g >
<title>pixman_image_get_width@plt (1 samples, 0.02%)</title><rect x="788.7" y="437" width="0.2" height="15.0" fill="rgb(237,118,19)" rx="2" ry="2" />
<text  x="791.74" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.17%)</title><rect x="963.3" y="421" width="2.0" height="15.0" fill="rgb(208,81,15)" rx="2" ry="2" />
<text  x="966.26" y="431.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (1 samples, 0.02%)</title><rect x="1189.3" y="565" width="0.1" height="15.0" fill="rgb(232,155,26)" rx="2" ry="2" />
<text  x="1192.26" y="575.5" ></text>
</g>
<g >
<title>Game_Map::SetNeedRefresh (3 samples, 0.05%)</title><rect x="148.1" y="741" width="0.5" height="15.0" fill="rgb(217,75,42)" rx="2" ry="2" />
<text  x="151.09" y="751.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (14 samples, 0.22%)</title><rect x="774.1" y="405" width="2.6" height="15.0" fill="rgb(225,125,15)" rx="2" ry="2" />
<text  x="777.05" y="415.5" ></text>
</g>
<g >
<title>__atomic_add (5 samples, 0.08%)</title><rect x="774.6" y="341" width="0.9" height="15.0" fill="rgb(229,170,16)" rx="2" ry="2" />
<text  x="777.61" y="351.5" ></text>
</g>
<g >
<title>__libc_recvmsg (4 samples, 0.06%)</title><rect x="91.6" y="725" width="0.7" height="15.0" fill="rgb(253,205,8)" rx="2" ry="2" />
<text  x="94.59" y="735.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (48 samples, 0.76%)</title><rect x="537.6" y="309" width="9.0" height="15.0" fill="rgb(215,78,20)" rx="2" ry="2" />
<text  x="540.65" y="319.5" ></text>
</g>
<g >
<title>account_user_time (1 samples, 0.02%)</title><rect x="34.7" y="629" width="0.2" height="15.0" fill="rgb(252,34,46)" rx="2" ry="2" />
<text  x="37.72" y="639.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="77.1" y="613" width="0.2" height="15.0" fill="rgb(212,97,5)" rx="2" ry="2" />
<text  x="80.09" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (2 samples, 0.03%)</title><rect x="768.1" y="389" width="0.4" height="15.0" fill="rgb(241,86,48)" rx="2" ry="2" />
<text  x="771.11" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (7 samples, 0.11%)</title><rect x="35.1" y="757" width="1.3" height="15.0" fill="rgb(237,228,38)" rx="2" ry="2" />
<text  x="38.09" y="767.5" ></text>
</g>
<g >
<title>LoadBitmap (2 samples, 0.03%)</title><rect x="959.7" y="485" width="0.4" height="15.0" fill="rgb(211,8,25)" rx="2" ry="2" />
<text  x="962.72" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="45.1" y="661" width="0.4" height="15.0" fill="rgb(241,104,28)" rx="2" ry="2" />
<text  x="48.13" y="671.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="1140.6" y="565" width="0.1" height="15.0" fill="rgb(218,219,28)" rx="2" ry="2" />
<text  x="1143.56" y="575.5" ></text>
</g>
<g >
<title>XFree (1 samples, 0.02%)</title><rect x="967.5" y="517" width="0.2" height="15.0" fill="rgb(244,35,38)" rx="2" ry="2" />
<text  x="970.53" y="527.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (3 samples, 0.05%)</title><rect x="941.3" y="533" width="0.6" height="15.0" fill="rgb(210,29,31)" rx="2" ry="2" />
<text  x="944.32" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;Scene&gt;, std::allocator&lt;std::shared_ptr&lt;Scene&gt; &gt; &gt;::clear (1 samples, 0.02%)</title><rect x="1182.6" y="677" width="0.2" height="15.0" fill="rgb(225,196,20)" rx="2" ry="2" />
<text  x="1185.57" y="687.5" ></text>
</g>
<g >
<title>__sys_recvmsg (1 samples, 0.02%)</title><rect x="963.4" y="389" width="0.2" height="15.0" fill="rgb(241,191,17)" rx="2" ry="2" />
<text  x="966.44" y="399.5" ></text>
</g>
<g >
<title>sock_poll (4 samples, 0.06%)</title><rect x="66.7" y="693" width="0.7" height="15.0" fill="rgb(213,43,53)" rx="2" ry="2" />
<text  x="69.69" y="703.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (2 samples, 0.03%)</title><rect x="1131.5" y="581" width="0.3" height="15.0" fill="rgb(240,178,19)" rx="2" ry="2" />
<text  x="1134.46" y="591.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (17 samples, 0.27%)</title><rect x="345.1" y="597" width="3.2" height="15.0" fill="rgb(243,210,28)" rx="2" ry="2" />
<text  x="348.10" y="607.5" ></text>
</g>
<g >
<title>__fget (4 samples, 0.06%)</title><rect x="964.6" y="309" width="0.7" height="15.0" fill="rgb(251,148,31)" rx="2" ry="2" />
<text  x="967.56" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (5 samples, 0.08%)</title><rect x="557.3" y="325" width="1.0" height="15.0" fill="rgb(244,86,46)" rx="2" ry="2" />
<text  x="560.35" y="335.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1189.4" y="613" width="0.2" height="15.0" fill="rgb(218,6,47)" rx="2" ry="2" />
<text  x="1192.44" y="623.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (9 samples, 0.14%)</title><rect x="551.4" y="341" width="1.7" height="15.0" fill="rgb(209,71,39)" rx="2" ry="2" />
<text  x="554.40" y="351.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (8 samples, 0.13%)</title><rect x="554.0" y="357" width="1.5" height="15.0" fill="rgb(238,229,28)" rx="2" ry="2" />
<text  x="557.00" y="367.5" ></text>
</g>
<g >
<title>___sys_recvmsg (1 samples, 0.02%)</title><rect x="965.7" y="373" width="0.2" height="15.0" fill="rgb(222,195,39)" rx="2" ry="2" />
<text  x="968.67" y="383.5" ></text>
</g>
<g >
<title>__GI___poll (2 samples, 0.03%)</title><rect x="87.5" y="693" width="0.4" height="15.0" fill="rgb(242,83,54)" rx="2" ry="2" />
<text  x="90.50" y="703.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (3 samples, 0.05%)</title><rect x="969.8" y="469" width="0.5" height="15.0" fill="rgb(205,63,11)" rx="2" ry="2" />
<text  x="972.76" y="479.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (2 samples, 0.03%)</title><rect x="795.6" y="405" width="0.4" height="15.0" fill="rgb(240,222,12)" rx="2" ry="2" />
<text  x="798.61" y="415.5" ></text>
</g>
<g >
<title>std::__move_merge_adaptive&lt;Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (5 samples, 0.08%)</title><rect x="348.4" y="533" width="1.0" height="15.0" fill="rgb(243,132,37)" rx="2" ry="2" />
<text  x="351.44" y="543.5" ></text>
</g>
<g >
<title>check_preempt_curr (2 samples, 0.03%)</title><rect x="76.0" y="533" width="0.4" height="15.0" fill="rgb(241,73,52)" rx="2" ry="2" />
<text  x="78.98" y="543.5" ></text>
</g>
<g >
<title>@plt (3 samples, 0.05%)</title><rect x="741.7" y="213" width="0.6" height="15.0" fill="rgb(222,206,0)" rx="2" ry="2" />
<text  x="744.72" y="223.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (1,920 samples, 30.24%)</title><rect x="490.3" y="517" width="356.8" height="15.0" fill="rgb(254,29,3)" rx="2" ry="2" />
<text  x="493.25" y="527.5" >Game_Picture::RequestPictureSprite</text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (2 samples, 0.03%)</title><rect x="837.4" y="405" width="0.4" height="15.0" fill="rgb(227,211,29)" rx="2" ry="2" />
<text  x="840.43" y="415.5" ></text>
</g>
<g >
<title>Player::IsRPG2k (1 samples, 0.02%)</title><rect x="864.6" y="533" width="0.2" height="15.0" fill="rgb(216,87,43)" rx="2" ry="2" />
<text  x="867.57" y="543.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;int&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="846.9" y="501" width="0.2" height="15.0" fill="rgb(214,56,49)" rx="2" ry="2" />
<text  x="849.91" y="511.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (28 samples, 0.44%)</title><rect x="500.5" y="357" width="5.2" height="15.0" fill="rgb(251,97,24)" rx="2" ry="2" />
<text  x="503.47" y="367.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~tuple (5 samples, 0.08%)</title><rect x="557.3" y="405" width="1.0" height="15.0" fill="rgb(246,51,27)" rx="2" ry="2" />
<text  x="560.35" y="415.5" ></text>
</g>
<g >
<title>[unknown] (83 samples, 1.31%)</title><rect x="145.5" y="757" width="15.4" height="15.0" fill="rgb(220,80,47)" rx="2" ry="2" />
<text  x="148.49" y="767.5" ></text>
</g>
<g >
<title>do_sys_poll (2 samples, 0.03%)</title><rect x="991.3" y="485" width="0.4" height="15.0" fill="rgb(244,162,23)" rx="2" ry="2" />
<text  x="994.32" y="495.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.02%)</title><rect x="179.9" y="533" width="0.2" height="15.0" fill="rgb(231,116,0)" rx="2" ry="2" />
<text  x="182.87" y="543.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.02%)</title><rect x="879.1" y="389" width="0.1" height="15.0" fill="rgb(230,27,53)" rx="2" ry="2" />
<text  x="882.06" y="399.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (6 samples, 0.09%)</title><rect x="774.4" y="373" width="1.1" height="15.0" fill="rgb(208,213,32)" rx="2" ry="2" />
<text  x="777.43" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (3 samples, 0.05%)</title><rect x="555.5" y="357" width="0.5" height="15.0" fill="rgb(243,111,3)" rx="2" ry="2" />
<text  x="558.49" y="367.5" ></text>
</g>
<g >
<title>update_min_vruntime (1 samples, 0.02%)</title><rect x="976.6" y="405" width="0.2" height="15.0" fill="rgb(247,7,47)" rx="2" ry="2" />
<text  x="979.64" y="415.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="445.3" y="437" width="0.2" height="15.0" fill="rgb(237,209,12)" rx="2" ry="2" />
<text  x="448.27" y="447.5" ></text>
</g>
<g >
<title>yield_task_fair (1 samples, 0.02%)</title><rect x="115.4" y="677" width="0.2" height="15.0" fill="rgb(247,5,8)" rx="2" ry="2" />
<text  x="118.38" y="687.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (2 samples, 0.03%)</title><rect x="837.4" y="389" width="0.4" height="15.0" fill="rgb(213,68,41)" rx="2" ry="2" />
<text  x="840.43" y="399.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (1 samples, 0.02%)</title><rect x="959.7" y="389" width="0.2" height="15.0" fill="rgb(209,183,31)" rx="2" ry="2" />
<text  x="962.72" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (8 samples, 0.13%)</title><rect x="913.4" y="533" width="1.5" height="15.0" fill="rgb(251,80,5)" rx="2" ry="2" />
<text  x="916.45" y="543.5" ></text>
</g>
<g >
<title>pixman_image_get_height (2 samples, 0.03%)</title><rect x="857.1" y="501" width="0.4" height="15.0" fill="rgb(217,78,26)" rx="2" ry="2" />
<text  x="860.13" y="511.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (18 samples, 0.28%)</title><rect x="859.5" y="469" width="3.4" height="15.0" fill="rgb(224,227,14)" rx="2" ry="2" />
<text  x="862.55" y="479.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.02%)</title><rect x="1163.1" y="501" width="0.1" height="15.0" fill="rgb(253,172,32)" rx="2" ry="2" />
<text  x="1166.05" y="511.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="729.1" y="373" width="0.2" height="15.0" fill="rgb(219,159,52)" rx="2" ry="2" />
<text  x="732.08" y="383.5" ></text>
</g>
<g >
<title>Color::Color (1 samples, 0.02%)</title><rect x="85.3" y="741" width="0.2" height="15.0" fill="rgb(224,84,35)" rx="2" ry="2" />
<text  x="88.27" y="751.5" ></text>
</g>
<g >
<title>poll_freewait (5 samples, 0.08%)</title><rect x="44.6" y="693" width="0.9" height="15.0" fill="rgb(215,54,30)" rx="2" ry="2" />
<text  x="47.57" y="703.5" ></text>
</g>
<g >
<title>_copy_to_user (1 samples, 0.02%)</title><rect x="1154.1" y="517" width="0.2" height="15.0" fill="rgb(210,56,53)" rx="2" ry="2" />
<text  x="1157.13" y="527.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (27 samples, 0.43%)</title><rect x="1126.4" y="517" width="5.1" height="15.0" fill="rgb(240,55,40)" rx="2" ry="2" />
<text  x="1129.44" y="527.5" ></text>
</g>
<g >
<title>__libc_recvmsg (3 samples, 0.05%)</title><rect x="965.7" y="453" width="0.5" height="15.0" fill="rgb(225,70,52)" rx="2" ry="2" />
<text  x="968.67" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_dispose (1 samples, 0.02%)</title><rect x="864.8" y="501" width="0.1" height="15.0" fill="rgb(246,188,18)" rx="2" ry="2" />
<text  x="867.75" y="511.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (3 samples, 0.05%)</title><rect x="1132.2" y="549" width="0.6" height="15.0" fill="rgb(208,108,33)" rx="2" ry="2" />
<text  x="1135.20" y="559.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.02%)</title><rect x="514.0" y="405" width="0.2" height="15.0" fill="rgb(217,7,30)" rx="2" ry="2" />
<text  x="517.04" y="415.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="179.9" y="565" width="0.2" height="15.0" fill="rgb(230,133,39)" rx="2" ry="2" />
<text  x="182.87" y="575.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (10 samples, 0.16%)</title><rect x="555.5" y="389" width="1.8" height="15.0" fill="rgb(208,31,4)" rx="2" ry="2" />
<text  x="558.49" y="399.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.02%)</title><rect x="75.0" y="533" width="0.2" height="15.0" fill="rgb(208,205,17)" rx="2" ry="2" />
<text  x="78.05" y="543.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.02%)</title><rect x="332.1" y="501" width="0.2" height="15.0" fill="rgb(252,6,49)" rx="2" ry="2" />
<text  x="335.09" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (2 samples, 0.03%)</title><rect x="518.7" y="469" width="0.4" height="15.0" fill="rgb(231,33,20)" rx="2" ry="2" />
<text  x="521.69" y="479.5" ></text>
</g>
<g >
<title>Bitmap::Init (161 samples, 2.54%)</title><rect x="732.6" y="277" width="29.9" height="15.0" fill="rgb(218,127,17)" rx="2" ry="2" />
<text  x="735.61" y="287.5" >Bi..</text>
</g>
<g >
<title>Game_Switches_Class::Get (4 samples, 0.06%)</title><rect x="933.5" y="565" width="0.8" height="15.0" fill="rgb(226,146,43)" rx="2" ry="2" />
<text  x="936.52" y="575.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="865.5" y="389" width="0.2" height="15.0" fill="rgb(205,105,22)" rx="2" ry="2" />
<text  x="868.50" y="399.5" ></text>
</g>
<g >
<title>glXSwapBuffers (2 samples, 0.03%)</title><rect x="1163.2" y="613" width="0.4" height="15.0" fill="rgb(240,217,25)" rx="2" ry="2" />
<text  x="1166.24" y="623.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (25 samples, 0.39%)</title><rect x="1156.7" y="581" width="4.7" height="15.0" fill="rgb(205,140,30)" rx="2" ry="2" />
<text  x="1159.73" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (1 samples, 0.02%)</title><rect x="357.4" y="533" width="0.2" height="15.0" fill="rgb(218,120,22)" rx="2" ry="2" />
<text  x="360.36" y="543.5" ></text>
</g>
<g >
<title>std::__move_merge_adaptive_backward&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (1 samples, 0.02%)</title><rect x="349.4" y="533" width="0.2" height="15.0" fill="rgb(252,133,48)" rx="2" ry="2" />
<text  x="352.37" y="543.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="78.2" y="757" width="0.4" height="15.0" fill="rgb(220,82,15)" rx="2" ry="2" />
<text  x="81.21" y="767.5" ></text>
</g>
<g >
<title>std::swap&lt;Sprite*&gt; (2 samples, 0.03%)</title><rect x="837.1" y="437" width="0.3" height="15.0" fill="rgb(205,49,16)" rx="2" ry="2" />
<text  x="840.06" y="447.5" ></text>
</g>
<g >
<title>Bitmap::Blit (1 samples, 0.02%)</title><rect x="342.9" y="565" width="0.2" height="15.0" fill="rgb(212,37,37)" rx="2" ry="2" />
<text  x="345.87" y="575.5" ></text>
</g>
<g >
<title>update_sd_lb_stats (4 samples, 0.06%)</title><rect x="65.0" y="565" width="0.8" height="15.0" fill="rgb(218,215,13)" rx="2" ry="2" />
<text  x="68.01" y="575.5" ></text>
</g>
<g >
<title>PicPointerPatch::ReplaceName (2 samples, 0.03%)</title><rect x="864.2" y="533" width="0.4" height="15.0" fill="rgb(214,23,30)" rx="2" ry="2" />
<text  x="867.19" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_compare (3 samples, 0.05%)</title><rect x="547.7" y="277" width="0.5" height="15.0" fill="rgb(230,116,29)" rx="2" ry="2" />
<text  x="550.68" y="287.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (89 samples, 1.40%)</title><rect x="898.4" y="549" width="16.5" height="15.0" fill="rgb(219,136,54)" rx="2" ry="2" />
<text  x="901.39" y="559.5" ></text>
</g>
<g >
<title>eventfd_poll (1 samples, 0.02%)</title><rect x="43.8" y="693" width="0.2" height="15.0" fill="rgb(238,34,46)" rx="2" ry="2" />
<text  x="46.83" y="703.5" ></text>
</g>
<g >
<title>poll_schedule_timeout.constprop.14 (1 samples, 0.02%)</title><rect x="967.9" y="357" width="0.2" height="15.0" fill="rgb(224,181,53)" rx="2" ry="2" />
<text  x="970.90" y="367.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (4 samples, 0.06%)</title><rect x="796.0" y="405" width="0.7" height="15.0" fill="rgb(238,15,0)" rx="2" ry="2" />
<text  x="798.99" y="415.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.02%)</title><rect x="962.9" y="437" width="0.2" height="15.0" fill="rgb(243,189,46)" rx="2" ry="2" />
<text  x="965.88" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;RPG::EventCommand&gt;::deallocate (1 samples, 0.02%)</title><rect x="879.1" y="405" width="0.1" height="15.0" fill="rgb(254,214,44)" rx="2" ry="2" />
<text  x="882.06" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (181 samples, 2.85%)</title><rect x="732.2" y="309" width="33.7" height="15.0" fill="rgb(214,9,45)" rx="2" ry="2" />
<text  x="735.24" y="319.5" >__..</text>
</g>
<g >
<title>__atomic_add (1 samples, 0.02%)</title><rect x="959.9" y="389" width="0.2" height="15.0" fill="rgb(253,106,10)" rx="2" ry="2" />
<text  x="962.91" y="399.5" ></text>
</g>
<g >
<title>[libpthread-2.29.so] (3 samples, 0.05%)</title><rect x="1181.6" y="629" width="0.6" height="15.0" fill="rgb(244,101,14)" rx="2" ry="2" />
<text  x="1184.64" y="639.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (186 samples, 2.93%)</title><rect x="731.7" y="373" width="34.5" height="15.0" fill="rgb(238,52,42)" rx="2" ry="2" />
<text  x="734.68" y="383.5" >st..</text>
</g>
<g >
<title>__wake_up_locked_key (12 samples, 0.19%)</title><rect x="74.3" y="645" width="2.2" height="15.0" fill="rgb(219,58,34)" rx="2" ry="2" />
<text  x="77.31" y="655.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (1 samples, 0.02%)</title><rect x="536.0" y="357" width="0.2" height="15.0" fill="rgb(241,166,48)" rx="2" ry="2" />
<text  x="538.97" y="367.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="180.1" y="565" width="0.1" height="15.0" fill="rgb(219,36,33)" rx="2" ry="2" />
<text  x="183.06" y="575.5" ></text>
</g>
<g >
<title>Game_Screen::GetFlashColor (4 samples, 0.06%)</title><rect x="768.5" y="437" width="0.7" height="15.0" fill="rgb(230,10,19)" rx="2" ry="2" />
<text  x="771.48" y="447.5" ></text>
</g>
<g >
<title>std::__distance&lt;char*&gt; (1 samples, 0.02%)</title><rect x="555.9" y="277" width="0.1" height="15.0" fill="rgb(225,45,6)" rx="2" ry="2" />
<text  x="558.86" y="287.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (15 samples, 0.24%)</title><rect x="111.5" y="709" width="2.8" height="15.0" fill="rgb(239,114,14)" rx="2" ry="2" />
<text  x="114.48" y="719.5" ></text>
</g>
<g >
<title>__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int&gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;Input::UiSource::Update()::&lt;lambda(int)&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="357.2" y="549" width="0.2" height="15.0" fill="rgb(213,174,4)" rx="2" ry="2" />
<text  x="360.18" y="559.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;Drawable*&gt; (1 samples, 0.02%)</title><rect x="355.9" y="453" width="0.2" height="15.0" fill="rgb(213,222,45)" rx="2" ry="2" />
<text  x="358.88" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (3 samples, 0.05%)</title><rect x="1181.6" y="613" width="0.6" height="15.0" fill="rgb(223,120,45)" rx="2" ry="2" />
<text  x="1184.64" y="623.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2 samples, 0.03%)</title><rect x="509.0" y="357" width="0.4" height="15.0" fill="rgb(223,84,15)" rx="2" ry="2" />
<text  x="512.02" y="367.5" ></text>
</g>
<g >
<title>__atomic_add (8 samples, 0.13%)</title><rect x="332.5" y="485" width="1.4" height="15.0" fill="rgb(243,220,38)" rx="2" ry="2" />
<text  x="335.46" y="495.5" ></text>
</g>
<g >
<title>eventfd_read (1 samples, 0.02%)</title><rect x="69.3" y="661" width="0.2" height="15.0" fill="rgb(205,76,25)" rx="2" ry="2" />
<text  x="72.29" y="671.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.02%)</title><rect x="958.2" y="437" width="0.2" height="15.0" fill="rgb(252,170,8)" rx="2" ry="2" />
<text  x="961.24" y="447.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="968.8" y="405" width="0.2" height="15.0" fill="rgb(205,140,6)" rx="2" ry="2" />
<text  x="971.83" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::push_back (2 samples, 0.03%)</title><rect x="864.2" y="501" width="0.4" height="15.0" fill="rgb(205,26,12)" rx="2" ry="2" />
<text  x="867.19" y="511.5" ></text>
</g>
<g >
<title>task_tick_fair (2 samples, 0.03%)</title><rect x="1124.4" y="421" width="0.4" height="15.0" fill="rgb(220,119,25)" rx="2" ry="2" />
<text  x="1127.39" y="431.5" ></text>
</g>
<g >
<title>XEventsQueued (1 samples, 0.02%)</title><rect x="86.9" y="741" width="0.2" height="15.0" fill="rgb(223,9,38)" rx="2" ry="2" />
<text  x="89.94" y="751.5" ></text>
</g>
<g >
<title>Sprite::Flash (1 samples, 0.02%)</title><rect x="856.6" y="501" width="0.2" height="15.0" fill="rgb(224,161,31)" rx="2" ry="2" />
<text  x="859.57" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.02%)</title><rect x="105.7" y="741" width="0.2" height="15.0" fill="rgb(209,163,34)" rx="2" ry="2" />
<text  x="108.72" y="751.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (2 samples, 0.03%)</title><rect x="1131.5" y="549" width="0.3" height="15.0" fill="rgb(207,132,49)" rx="2" ry="2" />
<text  x="1134.46" y="559.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="865.3" y="421" width="0.2" height="15.0" fill="rgb(208,57,17)" rx="2" ry="2" />
<text  x="868.31" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2 samples, 0.03%)</title><rect x="765.9" y="277" width="0.3" height="15.0" fill="rgb(250,193,29)" rx="2" ry="2" />
<text  x="768.88" y="287.5" ></text>
</g>
<g >
<title>do_sys_poll (2 samples, 0.03%)</title><rect x="971.1" y="469" width="0.3" height="15.0" fill="rgb(239,62,32)" rx="2" ry="2" />
<text  x="974.06" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::replace (1 samples, 0.02%)</title><rect x="865.5" y="453" width="0.2" height="15.0" fill="rgb(250,189,19)" rx="2" ry="2" />
<text  x="868.50" y="463.5" ></text>
</g>
<g >
<title>account_user_time (1 samples, 0.02%)</title><rect x="294.0" y="389" width="0.2" height="15.0" fill="rgb(238,172,15)" rx="2" ry="2" />
<text  x="296.99" y="399.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustParams (2 samples, 0.03%)</title><rect x="483.9" y="517" width="0.4" height="15.0" fill="rgb(238,27,15)" rx="2" ry="2" />
<text  x="486.93" y="527.5" ></text>
</g>
<g >
<title>Sprite::GetZ (2 samples, 0.03%)</title><rect x="86.4" y="741" width="0.4" height="15.0" fill="rgb(219,199,3)" rx="2" ry="2" />
<text  x="89.39" y="751.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (10 samples, 0.16%)</title><rect x="1129.6" y="421" width="1.9" height="15.0" fill="rgb(252,28,26)" rx="2" ry="2" />
<text  x="1132.60" y="431.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (6 samples, 0.09%)</title><rect x="845.4" y="405" width="1.1" height="15.0" fill="rgb(224,125,18)" rx="2" ry="2" />
<text  x="848.42" y="415.5" ></text>
</g>
<g >
<title>Game_Screen::GetPicture (4 samples, 0.06%)</title><rect x="863.5" y="533" width="0.7" height="15.0" fill="rgb(236,32,45)" rx="2" ry="2" />
<text  x="866.45" y="543.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_init_functor (9 samples, 0.14%)</title><rect x="513.7" y="453" width="1.6" height="15.0" fill="rgb(211,56,1)" rx="2" ry="2" />
<text  x="516.67" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate@plt (1 samples, 0.02%)</title><rect x="528.4" y="341" width="0.1" height="15.0" fill="rgb(217,158,39)" rx="2" ry="2" />
<text  x="531.35" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (181 samples, 2.85%)</title><rect x="732.2" y="325" width="33.7" height="15.0" fill="rgb(242,177,42)" rx="2" ry="2" />
<text  x="735.24" y="335.5" >st..</text>
</g>
<g >
<title>put_timespec64 (10 samples, 0.16%)</title><rect x="1153.9" y="533" width="1.9" height="15.0" fill="rgb(205,43,27)" rx="2" ry="2" />
<text  x="1156.94" y="543.5" ></text>
</g>
<g >
<title>operator!= (1 samples, 0.02%)</title><rect x="950.6" y="517" width="0.2" height="15.0" fill="rgb(227,100,34)" rx="2" ry="2" />
<text  x="953.62" y="527.5" ></text>
</g>
<g >
<title>Bitmap::ZoomOpacityBlit (202 samples, 3.18%)</title><rect x="294.7" y="549" width="37.6" height="15.0" fill="rgb(241,50,37)" rx="2" ry="2" />
<text  x="297.73" y="559.5" >Bit..</text>
</g>
<g >
<title>__exchange_and_add_dispatch (4 samples, 0.06%)</title><rect x="333.9" y="485" width="0.8" height="15.0" fill="rgb(242,104,5)" rx="2" ry="2" />
<text  x="336.95" y="495.5" ></text>
</g>
<g >
<title>LoadBitmap&lt;(&lt;unnamed&gt;::Material::Type)9&gt; (3 samples, 0.05%)</title><rect x="959.7" y="501" width="0.6" height="15.0" fill="rgb(215,130,1)" rx="2" ry="2" />
<text  x="962.72" y="511.5" ></text>
</g>
<g >
<title>__sys_recvmsg (3 samples, 0.05%)</title><rect x="990.2" y="389" width="0.6" height="15.0" fill="rgb(205,151,48)" rx="2" ry="2" />
<text  x="993.20" y="399.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="348.3" y="501" width="0.1" height="15.0" fill="rgb(232,50,5)" rx="2" ry="2" />
<text  x="351.26" y="511.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (5 samples, 0.08%)</title><rect x="834.3" y="293" width="0.9" height="15.0" fill="rgb(244,161,1)" rx="2" ry="2" />
<text  x="837.27" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.06%)</title><rect x="990.0" y="421" width="0.8" height="15.0" fill="rgb(237,45,45)" rx="2" ry="2" />
<text  x="993.02" y="431.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (3 samples, 0.05%)</title><rect x="788.9" y="437" width="0.6" height="15.0" fill="rgb(217,99,23)" rx="2" ry="2" />
<text  x="791.92" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="69.3" y="645" width="0.2" height="15.0" fill="rgb(208,87,5)" rx="2" ry="2" />
<text  x="72.29" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (86 samples, 1.35%)</title><rect x="973.5" y="549" width="16.0" height="15.0" fill="rgb(219,198,22)" rx="2" ry="2" />
<text  x="976.48" y="559.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="293.8" y="469" width="0.2" height="15.0" fill="rgb(228,203,26)" rx="2" ry="2" />
<text  x="296.80" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (3 samples, 0.05%)</title><rect x="862.9" y="453" width="0.6" height="15.0" fill="rgb(230,65,5)" rx="2" ry="2" />
<text  x="865.89" y="463.5" ></text>
</g>
<g >
<title>pick_next_task_idle (2 samples, 0.03%)</title><rect x="989.1" y="437" width="0.4" height="15.0" fill="rgb(206,17,18)" rx="2" ry="2" />
<text  x="992.09" y="447.5" ></text>
</g>
<g >
<title>sock_poll (4 samples, 0.06%)</title><rect x="67.6" y="709" width="0.8" height="15.0" fill="rgb(219,107,18)" rx="2" ry="2" />
<text  x="70.62" y="719.5" ></text>
</g>
<g >
<title>__fget_light (4 samples, 0.06%)</title><rect x="42.9" y="677" width="0.7" height="15.0" fill="rgb(211,137,8)" rx="2" ry="2" />
<text  x="45.90" y="687.5" ></text>
</g>
<g >
<title>pick_next_task_idle (2 samples, 0.03%)</title><rect x="66.3" y="629" width="0.4" height="15.0" fill="rgb(245,179,48)" rx="2" ry="2" />
<text  x="69.31" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="183.0" y="533" width="0.2" height="15.0" fill="rgb(230,188,11)" rx="2" ry="2" />
<text  x="186.03" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (7 samples, 0.11%)</title><rect x="556.0" y="341" width="1.3" height="15.0" fill="rgb(214,72,47)" rx="2" ry="2" />
<text  x="559.05" y="351.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (18 samples, 0.28%)</title><rect x="532.6" y="325" width="3.4" height="15.0" fill="rgb(235,123,45)" rx="2" ry="2" />
<text  x="535.63" y="335.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (1 samples, 0.02%)</title><rect x="183.0" y="565" width="0.2" height="15.0" fill="rgb(219,220,24)" rx="2" ry="2" />
<text  x="186.03" y="575.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.02%)</title><rect x="968.1" y="357" width="0.2" height="15.0" fill="rgb(216,150,21)" rx="2" ry="2" />
<text  x="971.09" y="367.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="988.9" y="405" width="0.2" height="15.0" fill="rgb(221,188,34)" rx="2" ry="2" />
<text  x="991.90" y="415.5" ></text>
</g>
<g >
<title>__GI___sched_yield (8 samples, 0.13%)</title><rect x="114.3" y="741" width="1.5" height="15.0" fill="rgb(241,148,49)" rx="2" ry="2" />
<text  x="117.27" y="751.5" ></text>
</g>
<g >
<title>_int_malloc (14 samples, 0.22%)</title><rect x="759.0" y="213" width="2.6" height="15.0" fill="rgb(229,156,25)" rx="2" ry="2" />
<text  x="762.00" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (2 samples, 0.03%)</title><rect x="509.6" y="437" width="0.4" height="15.0" fill="rgb(215,168,44)" rx="2" ry="2" />
<text  x="512.58" y="447.5" ></text>
</g>
<g >
<title>native_write_msr (55 samples, 0.87%)</title><rect x="977.8" y="341" width="10.2" height="15.0" fill="rgb(229,217,24)" rx="2" ry="2" />
<text  x="980.75" y="351.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="108.1" y="741" width="0.2" height="15.0" fill="rgb(213,52,11)" rx="2" ry="2" />
<text  x="111.13" y="751.5" ></text>
</g>
<g >
<title>[unknown] (/tmp/.gl8dtneX (147 samples, 2.32%)</title><rect x="118.2" y="757" width="27.3" height="15.0" fill="rgb(240,171,0)" rx="2" ry="2" />
<text  x="121.17" y="767.5" >[..</text>
</g>
<g >
<title>Game_Picture::GetData (3 samples, 0.05%)</title><rect x="948.4" y="549" width="0.5" height="15.0" fill="rgb(213,171,6)" rx="2" ry="2" />
<text  x="951.39" y="559.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (7 samples, 0.11%)</title><rect x="354.6" y="485" width="1.3" height="15.0" fill="rgb(223,104,40)" rx="2" ry="2" />
<text  x="357.58" y="495.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (5 samples, 0.08%)</title><rect x="361.8" y="565" width="1.0" height="15.0" fill="rgb(213,75,47)" rx="2" ry="2" />
<text  x="364.83" y="575.5" ></text>
</g>
<g >
<title>__sched_text_start (78 samples, 1.23%)</title><rect x="975.0" y="453" width="14.5" height="15.0" fill="rgb(241,228,13)" rx="2" ry="2" />
<text  x="977.96" y="463.5" ></text>
</g>
<g >
<title>Graphics::RegisterDrawable (1 samples, 0.02%)</title><rect x="789.5" y="453" width="0.2" height="15.0" fill="rgb(233,201,3)" rx="2" ry="2" />
<text  x="792.48" y="463.5" ></text>
</g>
<g >
<title>tcache_put (1 samples, 0.02%)</title><rect x="836.7" y="405" width="0.2" height="15.0" fill="rgb(205,88,26)" rx="2" ry="2" />
<text  x="839.69" y="415.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (4 samples, 0.06%)</title><rect x="506.2" y="421" width="0.8" height="15.0" fill="rgb(205,188,32)" rx="2" ry="2" />
<text  x="509.24" y="431.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (4 samples, 0.06%)</title><rect x="791.5" y="373" width="0.8" height="15.0" fill="rgb(250,205,36)" rx="2" ry="2" />
<text  x="794.52" y="383.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (40 samples, 0.63%)</title><rect x="490.6" y="485" width="7.5" height="15.0" fill="rgb(232,11,11)" rx="2" ry="2" />
<text  x="493.62" y="495.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.05%)</title><rect x="92.3" y="741" width="0.6" height="15.0" fill="rgb(241,229,33)" rx="2" ry="2" />
<text  x="95.33" y="751.5" ></text>
</g>
<g >
<title>__atomic_add (7 samples, 0.11%)</title><rect x="554.2" y="325" width="1.3" height="15.0" fill="rgb(224,177,19)" rx="2" ry="2" />
<text  x="557.19" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.09%)</title><rect x="969.4" y="501" width="1.1" height="15.0" fill="rgb(242,10,48)" rx="2" ry="2" />
<text  x="972.39" y="511.5" ></text>
</g>
<g >
<title>std::_Temporary_buffer&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable*&gt;::_Temporary_buffer (1 samples, 0.02%)</title><rect x="348.3" y="565" width="0.1" height="15.0" fill="rgb(227,215,44)" rx="2" ry="2" />
<text  x="351.26" y="575.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (3 samples, 0.05%)</title><rect x="767.9" y="421" width="0.6" height="15.0" fill="rgb(246,163,45)" rx="2" ry="2" />
<text  x="770.92" y="431.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.14%)</title><rect x="866.8" y="485" width="1.7" height="15.0" fill="rgb(252,87,46)" rx="2" ry="2" />
<text  x="869.80" y="495.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="966.4" y="533" width="0.2" height="15.0" fill="rgb(253,80,24)" rx="2" ry="2" />
<text  x="969.42" y="543.5" ></text>
</g>
<g >
<title>import_iovec (1 samples, 0.02%)</title><rect x="964.0" y="325" width="0.2" height="15.0" fill="rgb(214,131,4)" rx="2" ry="2" />
<text  x="967.00" y="335.5" ></text>
</g>
<g >
<title>AsyncNext&lt;Scene_Map::UpdateStage1(MapUpdateAsyncContext)::&lt;lambda()&gt; &gt; (3 samples, 0.05%)</title><rect x="958.6" y="597" width="0.6" height="15.0" fill="rgb(252,195,25)" rx="2" ry="2" />
<text  x="961.61" y="607.5" ></text>
</g>
<g >
<title>Drawable::IsGlobal (1 samples, 0.02%)</title><rect x="96.6" y="741" width="0.2" height="15.0" fill="rgb(233,189,49)" rx="2" ry="2" />
<text  x="99.61" y="751.5" ></text>
</g>
<g >
<title>pick_next_task_fair (9 samples, 0.14%)</title><rect x="64.6" y="613" width="1.7" height="15.0" fill="rgb(249,51,31)" rx="2" ry="2" />
<text  x="67.64" y="623.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (7 samples, 0.11%)</title><rect x="157.4" y="741" width="1.3" height="15.0" fill="rgb(212,217,11)" rx="2" ry="2" />
<text  x="160.38" y="751.5" ></text>
</g>
<g >
<title>xcb_poll_for_reply64 (1 samples, 0.02%)</title><rect x="990.8" y="517" width="0.1" height="15.0" fill="rgb(217,82,34)" rx="2" ry="2" />
<text  x="993.76" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Val_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;Drawable*, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (3 samples, 0.05%)</title><rect x="351.6" y="485" width="0.6" height="15.0" fill="rgb(218,44,2)" rx="2" ry="2" />
<text  x="354.60" y="495.5" ></text>
</g>
<g >
<title>FileRequestResult::~FileRequestResult (2 samples, 0.03%)</title><rect x="518.7" y="485" width="0.4" height="15.0" fill="rgb(237,163,25)" rx="2" ry="2" />
<text  x="521.69" y="495.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1168.3" y="549" width="0.1" height="15.0" fill="rgb(216,4,39)" rx="2" ry="2" />
<text  x="1171.25" y="559.5" ></text>
</g>
<g >
<title>Sprite::Flash (1 samples, 0.02%)</title><rect x="950.6" y="549" width="0.2" height="15.0" fill="rgb(215,13,4)" rx="2" ry="2" />
<text  x="953.62" y="559.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandConditionalBranch (1 samples, 0.02%)</title><rect x="84.5" y="741" width="0.2" height="15.0" fill="rgb(253,53,41)" rx="2" ry="2" />
<text  x="87.53" y="751.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.02%)</title><rect x="801.4" y="309" width="0.2" height="15.0" fill="rgb(236,1,36)" rx="2" ry="2" />
<text  x="804.38" y="319.5" ></text>
</g>
<g >
<title>any_of&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int&gt; &gt;, Input::UiSource::Update()::&lt;lambda(int)&gt; &gt; (1 samples, 0.02%)</title><rect x="357.2" y="597" width="0.2" height="15.0" fill="rgb(205,53,23)" rx="2" ry="2" />
<text  x="360.18" y="607.5" ></text>
</g>
<g >
<title>Plane::GetZ (1 samples, 0.02%)</title><rect x="351.2" y="469" width="0.2" height="15.0" fill="rgb(231,43,19)" rx="2" ry="2" />
<text  x="354.23" y="479.5" ></text>
</g>
<g >
<title>__libc_recvmsg (4 samples, 0.06%)</title><rect x="990.0" y="469" width="0.8" height="15.0" fill="rgb(220,110,9)" rx="2" ry="2" />
<text  x="993.02" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_compare (1 samples, 0.02%)</title><rect x="552.7" y="293" width="0.2" height="15.0" fill="rgb(215,1,44)" rx="2" ry="2" />
<text  x="555.70" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (13 samples, 0.20%)</title><rect x="491.2" y="437" width="2.4" height="15.0" fill="rgb(224,5,1)" rx="2" ry="2" />
<text  x="494.18" y="447.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="45.3" y="629" width="0.2" height="15.0" fill="rgb(213,45,15)" rx="2" ry="2" />
<text  x="48.31" y="639.5" ></text>
</g>
<g >
<title>pixman_image_set_transform@plt (1 samples, 0.02%)</title><rect x="331.9" y="517" width="0.2" height="15.0" fill="rgb(229,38,17)" rx="2" ry="2" />
<text  x="334.90" y="527.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.03%)</title><rect x="68.7" y="693" width="0.4" height="15.0" fill="rgb(253,125,43)" rx="2" ry="2" />
<text  x="71.73" y="703.5" ></text>
</g>
<g >
<title>__mnt_want_write (1 samples, 0.02%)</title><rect x="77.5" y="597" width="0.2" height="15.0" fill="rgb(227,87,1)" rx="2" ry="2" />
<text  x="80.47" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect x="958.2" y="549" width="0.2" height="15.0" fill="rgb(210,192,16)" rx="2" ry="2" />
<text  x="961.24" y="559.5" ></text>
</g>
<g >
<title>check_cfs_rq_runtime (1 samples, 0.02%)</title><rect x="989.3" y="405" width="0.2" height="15.0" fill="rgb(210,58,7)" rx="2" ry="2" />
<text  x="992.28" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_read (26 samples, 0.41%)</title><rect x="68.4" y="725" width="4.8" height="15.0" fill="rgb(221,94,51)" rx="2" ry="2" />
<text  x="71.36" y="735.5" ></text>
</g>
<g >
<title>Sprite::SetOpacity (1 samples, 0.02%)</title><rect x="100.0" y="741" width="0.1" height="15.0" fill="rgb(250,81,3)" rx="2" ry="2" />
<text  x="102.95" y="751.5" ></text>
</g>
<g >
<title>Sdl2Ui::UpdateDisplay (759 samples, 11.95%)</title><rect x="991.7" y="629" width="141.1" height="15.0" fill="rgb(239,33,50)" rx="2" ry="2" />
<text  x="994.69" y="639.5" >Sdl2Ui::UpdateDis..</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (35 samples, 0.55%)</title><rect x="499.7" y="373" width="6.5" height="15.0" fill="rgb(249,29,43)" rx="2" ry="2" />
<text  x="502.73" y="383.5" ></text>
</g>
<g >
<title>Bitmap::pitch (1 samples, 0.02%)</title><rect x="730.4" y="405" width="0.2" height="15.0" fill="rgb(236,118,45)" rx="2" ry="2" />
<text  x="733.38" y="415.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (4 samples, 0.06%)</title><rect x="333.9" y="565" width="0.8" height="15.0" fill="rgb(212,15,12)" rx="2" ry="2" />
<text  x="336.95" y="575.5" ></text>
</g>
<g >
<title>__atomic_add (7 samples, 0.11%)</title><rect x="339.9" y="485" width="1.3" height="15.0" fill="rgb(217,117,33)" rx="2" ry="2" />
<text  x="342.89" y="495.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (48 samples, 0.76%)</title><rect x="537.6" y="293" width="9.0" height="15.0" fill="rgb(253,42,8)" rx="2" ry="2" />
<text  x="540.65" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (221 samples, 3.48%)</title><rect x="572.8" y="373" width="41.0" height="15.0" fill="rgb(208,213,50)" rx="2" ry="2" />
<text  x="575.77" y="383.5" >ent..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1132.8" y="533" width="0.1" height="15.0" fill="rgb(232,59,22)" rx="2" ry="2" />
<text  x="1135.76" y="543.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="898.2" y="501" width="0.2" height="15.0" fill="rgb(214,137,16)" rx="2" ry="2" />
<text  x="901.21" y="511.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1168.3" y="581" width="0.1" height="15.0" fill="rgb(247,70,28)" rx="2" ry="2" />
<text  x="1171.25" y="591.5" ></text>
</g>
<g >
<title>_int_free (2 samples, 0.03%)</title><rect x="331.5" y="501" width="0.4" height="15.0" fill="rgb(251,221,35)" rx="2" ry="2" />
<text  x="334.53" y="511.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (9 samples, 0.14%)</title><rect x="112.6" y="661" width="1.7" height="15.0" fill="rgb(222,206,54)" rx="2" ry="2" />
<text  x="115.59" y="671.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (8 samples, 0.13%)</title><rect x="554.0" y="373" width="1.5" height="15.0" fill="rgb(219,89,7)" rx="2" ry="2" />
<text  x="557.00" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_poll (1 samples, 0.02%)</title><rect x="968.1" y="373" width="0.2" height="15.0" fill="rgb(249,220,15)" rx="2" ry="2" />
<text  x="971.09" y="383.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (18 samples, 0.28%)</title><rect x="859.5" y="437" width="3.4" height="15.0" fill="rgb(208,21,24)" rx="2" ry="2" />
<text  x="862.55" y="447.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="293.8" y="421" width="0.2" height="15.0" fill="rgb(230,90,3)" rx="2" ry="2" />
<text  x="296.80" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (2 samples, 0.03%)</title><rect x="1189.1" y="725" width="0.3" height="15.0" fill="rgb(251,209,42)" rx="2" ry="2" />
<text  x="1192.07" y="735.5" ></text>
</g>
<g >
<title>_int_free (3 samples, 0.05%)</title><rect x="156.6" y="741" width="0.6" height="15.0" fill="rgb(252,118,1)" rx="2" ry="2" />
<text  x="159.64" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt;::erase (58 samples, 0.91%)</title><rect x="807.1" y="373" width="10.8" height="15.0" fill="rgb(230,204,25)" rx="2" ry="2" />
<text  x="810.14" y="383.5" ></text>
</g>
<g >
<title>Window_Base::Update (1 samples, 0.02%)</title><rect x="959.0" y="549" width="0.2" height="15.0" fill="rgb(229,181,53)" rx="2" ry="2" />
<text  x="961.98" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (1 samples, 0.02%)</title><rect x="865.9" y="453" width="0.2" height="15.0" fill="rgb(229,169,54)" rx="2" ry="2" />
<text  x="868.87" y="463.5" ></text>
</g>
<g >
<title>ktime_get_raw_ts64 (8 samples, 0.13%)</title><rect x="603.1" y="325" width="1.5" height="15.0" fill="rgb(250,138,43)" rx="2" ry="2" />
<text  x="606.07" y="335.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (12 samples, 0.19%)</title><rect x="844.7" y="421" width="2.2" height="15.0" fill="rgb(217,67,7)" rx="2" ry="2" />
<text  x="847.68" y="431.5" ></text>
</g>
<g >
<title>__GI___poll (4 samples, 0.06%)</title><rect x="968.3" y="501" width="0.7" height="15.0" fill="rgb(248,58,12)" rx="2" ry="2" />
<text  x="971.27" y="511.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (1 samples, 0.02%)</title><rect x="349.4" y="501" width="0.2" height="15.0" fill="rgb(215,172,24)" rx="2" ry="2" />
<text  x="352.37" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (3 samples, 0.05%)</title><rect x="555.5" y="341" width="0.5" height="15.0" fill="rgb(205,102,52)" rx="2" ry="2" />
<text  x="558.49" y="351.5" ></text>
</g>
<g >
<title>xcb_connection_has_error@plt (1 samples, 0.02%)</title><rect x="966.2" y="517" width="0.2" height="15.0" fill="rgb(252,156,4)" rx="2" ry="2" />
<text  x="969.23" y="527.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Set (110 samples, 1.73%)</title><rect x="450.5" y="533" width="20.4" height="15.0" fill="rgb(231,221,12)" rx="2" ry="2" />
<text  x="453.48" y="543.5" ></text>
</g>
<g >
<title>rcu_check_callbacks (1 samples, 0.02%)</title><rect x="962.0" y="389" width="0.1" height="15.0" fill="rgb(233,166,41)" rx="2" ry="2" />
<text  x="964.95" y="399.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (2 samples, 0.03%)</title><rect x="962.0" y="533" width="0.3" height="15.0" fill="rgb(240,118,24)" rx="2" ry="2" />
<text  x="964.95" y="543.5" ></text>
</g>
<g >
<title>_XEventsQueued (22 samples, 0.35%)</title><rect x="962.3" y="533" width="4.1" height="15.0" fill="rgb(220,146,1)" rx="2" ry="2" />
<text  x="965.33" y="543.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (6 samples, 0.09%)</title><rect x="837.8" y="357" width="1.1" height="15.0" fill="rgb(230,48,5)" rx="2" ry="2" />
<text  x="840.80" y="367.5" ></text>
</g>
<g >
<title>Game_Map::GetNeedRefresh (1 samples, 0.02%)</title><rect x="914.9" y="549" width="0.2" height="15.0" fill="rgb(227,158,43)" rx="2" ry="2" />
<text  x="917.93" y="559.5" ></text>
</g>
<g >
<title>new_sync_read (9 samples, 0.14%)</title><rect x="69.5" y="661" width="1.6" height="15.0" fill="rgb(214,188,4)" rx="2" ry="2" />
<text  x="72.47" y="671.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (1 samples, 0.02%)</title><rect x="635.8" y="437" width="0.2" height="15.0" fill="rgb(221,25,33)" rx="2" ry="2" />
<text  x="638.78" y="447.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;Drawable* const&gt; &gt; (30 samples, 0.47%)</title><rect x="801.6" y="341" width="5.5" height="15.0" fill="rgb(205,91,5)" rx="2" ry="2" />
<text  x="804.56" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_compare (2 samples, 0.03%)</title><rect x="506.6" y="389" width="0.4" height="15.0" fill="rgb(251,207,53)" rx="2" ry="2" />
<text  x="509.61" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (2 samples, 0.03%)</title><rect x="160.2" y="741" width="0.3" height="15.0" fill="rgb(205,174,23)" rx="2" ry="2" />
<text  x="163.17" y="751.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.02%)</title><rect x="975.5" y="389" width="0.2" height="15.0" fill="rgb(231,68,3)" rx="2" ry="2" />
<text  x="978.52" y="399.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="969.9" y="437" width="0.4" height="15.0" fill="rgb(225,25,22)" rx="2" ry="2" />
<text  x="972.95" y="447.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (1 samples, 0.02%)</title><rect x="962.1" y="517" width="0.2" height="15.0" fill="rgb(235,188,14)" rx="2" ry="2" />
<text  x="965.14" y="527.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;int&gt;::shared_ptr&lt;std::allocator&lt;int&gt;, int&gt; (3 samples, 0.05%)</title><rect x="508.1" y="421" width="0.6" height="15.0" fill="rgb(231,53,13)" rx="2" ry="2" />
<text  x="511.09" y="431.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="898.2" y="533" width="0.2" height="15.0" fill="rgb(234,54,50)" rx="2" ry="2" />
<text  x="901.21" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.02%)</title><rect x="156.5" y="725" width="0.1" height="15.0" fill="rgb(209,218,33)" rx="2" ry="2" />
<text  x="159.45" y="735.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2 samples, 0.03%)</title><rect x="87.5" y="677" width="0.4" height="15.0" fill="rgb(231,11,11)" rx="2" ry="2" />
<text  x="90.50" y="687.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (1 samples, 0.02%)</title><rect x="85.5" y="741" width="0.1" height="15.0" fill="rgb(243,226,17)" rx="2" ry="2" />
<text  x="88.46" y="751.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2 samples, 0.03%)</title><rect x="519.4" y="421" width="0.4" height="15.0" fill="rgb(210,22,45)" rx="2" ry="2" />
<text  x="522.43" y="431.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (1 samples, 0.02%)</title><rect x="972.4" y="533" width="0.1" height="15.0" fill="rgb(238,180,10)" rx="2" ry="2" />
<text  x="975.36" y="543.5" ></text>
</g>
<g >
<title>pixman_transform_point_31_16_3d (5 samples, 0.08%)</title><rect x="329.5" y="469" width="0.9" height="15.0" fill="rgb(208,226,28)" rx="2" ry="2" />
<text  x="332.49" y="479.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="757.1" y="149" width="0.2" height="15.0" fill="rgb(245,12,45)" rx="2" ry="2" />
<text  x="760.14" y="159.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1189.4" y="693" width="0.2" height="15.0" fill="rgb(223,173,4)" rx="2" ry="2" />
<text  x="1192.44" y="703.5" ></text>
</g>
<g >
<title>perf_pmu_disable.part.103 (1 samples, 0.02%)</title><rect x="47.0" y="565" width="0.2" height="15.0" fill="rgb(230,128,39)" rx="2" ry="2" />
<text  x="49.99" y="575.5" ></text>
</g>
<g >
<title>[libGLdispatch.so.0.0.0] (3 samples, 0.05%)</title><rect x="116.3" y="757" width="0.6" height="15.0" fill="rgb(210,9,30)" rx="2" ry="2" />
<text  x="119.31" y="767.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (2 samples, 0.03%)</title><rect x="116.9" y="757" width="0.3" height="15.0" fill="rgb(250,216,42)" rx="2" ry="2" />
<text  x="119.87" y="767.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="535.6" y="229" width="0.2" height="15.0" fill="rgb(242,113,22)" rx="2" ry="2" />
<text  x="538.60" y="239.5" ></text>
</g>
<g >
<title>RPG::SaveEventExecFrame::~SaveEventExecFrame (1 samples, 0.02%)</title><rect x="879.1" y="485" width="0.1" height="15.0" fill="rgb(209,157,34)" rx="2" ry="2" />
<text  x="882.06" y="495.5" ></text>
</g>
<g >
<title>Game_Picture::ShowParams::~ShowParams (3 samples, 0.05%)</title><rect x="862.9" y="533" width="0.6" height="15.0" fill="rgb(247,6,31)" rx="2" ry="2" />
<text  x="865.89" y="543.5" ></text>
</g>
<g >
<title>pixman_region32_fini (2 samples, 0.03%)</title><rect x="294.2" y="517" width="0.3" height="15.0" fill="rgb(226,165,38)" rx="2" ry="2" />
<text  x="297.17" y="527.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (55 samples, 0.87%)</title><rect x="807.5" y="325" width="10.2" height="15.0" fill="rgb(216,69,2)" rx="2" ry="2" />
<text  x="810.51" y="335.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (1 samples, 0.02%)</title><rect x="847.3" y="485" width="0.2" height="15.0" fill="rgb(219,130,49)" rx="2" ry="2" />
<text  x="850.28" y="495.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="535.6" y="213" width="0.2" height="15.0" fill="rgb(246,3,14)" rx="2" ry="2" />
<text  x="538.60" y="223.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (1 samples, 0.02%)</title><rect x="988.0" y="421" width="0.2" height="15.0" fill="rgb(217,4,27)" rx="2" ry="2" />
<text  x="990.97" y="431.5" ></text>
</g>
<g >
<title>Bitmap::GetHeight (4 samples, 0.06%)</title><rect x="766.2" y="437" width="0.8" height="15.0" fill="rgb(217,77,50)" rx="2" ry="2" />
<text  x="769.25" y="447.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (2 samples, 0.03%)</title><rect x="76.0" y="549" width="0.4" height="15.0" fill="rgb(215,130,13)" rx="2" ry="2" />
<text  x="78.98" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="970.9" y="517" width="0.9" height="15.0" fill="rgb(237,10,26)" rx="2" ry="2" />
<text  x="973.88" y="527.5" ></text>
</g>
<g >
<title>__libc_enable_asynccancel (1 samples, 0.02%)</title><rect x="970.7" y="517" width="0.2" height="15.0" fill="rgb(254,191,37)" rx="2" ry="2" />
<text  x="973.69" y="527.5" ></text>
</g>
<g >
<title>pixman_image_get_height (1 samples, 0.02%)</title><rect x="730.2" y="389" width="0.2" height="15.0" fill="rgb(220,207,21)" rx="2" ry="2" />
<text  x="733.19" y="399.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (4 samples, 0.06%)</title><rect x="97.9" y="741" width="0.8" height="15.0" fill="rgb(232,67,37)" rx="2" ry="2" />
<text  x="100.91" y="751.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="962.0" y="453" width="0.1" height="15.0" fill="rgb(220,34,7)" rx="2" ry="2" />
<text  x="964.95" y="463.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (2 samples, 0.03%)</title><rect x="87.5" y="709" width="0.4" height="15.0" fill="rgb(249,122,54)" rx="2" ry="2" />
<text  x="90.50" y="719.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (5 samples, 0.08%)</title><rect x="348.4" y="501" width="1.0" height="15.0" fill="rgb(208,167,54)" rx="2" ry="2" />
<text  x="351.44" y="511.5" ></text>
</g>
<g >
<title>Sprite::Sprite (1 samples, 0.02%)</title><rect x="100.3" y="741" width="0.2" height="15.0" fill="rgb(208,54,44)" rx="2" ry="2" />
<text  x="103.33" y="751.5" ></text>
</g>
<g >
<title>Bitmap::GetWidth (2 samples, 0.03%)</title><rect x="336.5" y="565" width="0.4" height="15.0" fill="rgb(220,77,50)" rx="2" ry="2" />
<text  x="339.55" y="575.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (1 samples, 0.02%)</title><rect x="107.9" y="741" width="0.2" height="15.0" fill="rgb(214,74,26)" rx="2" ry="2" />
<text  x="110.95" y="751.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="114.1" y="645" width="0.2" height="15.0" fill="rgb(249,35,33)" rx="2" ry="2" />
<text  x="117.08" y="655.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_clone (3 samples, 0.05%)</title><rect x="508.8" y="389" width="0.6" height="15.0" fill="rgb(232,17,7)" rx="2" ry="2" />
<text  x="511.84" y="399.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**&gt; (1 samples, 0.02%)</title><rect x="355.9" y="485" width="0.2" height="15.0" fill="rgb(208,171,9)" rx="2" ry="2" />
<text  x="358.88" y="495.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (7 samples, 0.11%)</title><rect x="1161.7" y="469" width="1.4" height="15.0" fill="rgb(230,130,35)" rx="2" ry="2" />
<text  x="1164.75" y="479.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.02%)</title><rect x="988.3" y="421" width="0.2" height="15.0" fill="rgb(225,201,48)" rx="2" ry="2" />
<text  x="991.35" y="431.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (4 samples, 0.06%)</title><rect x="87.1" y="741" width="0.8" height="15.0" fill="rgb(227,25,35)" rx="2" ry="2" />
<text  x="90.13" y="751.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="518.9" y="389" width="0.2" height="15.0" fill="rgb(251,59,27)" rx="2" ry="2" />
<text  x="521.87" y="399.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (11 samples, 0.17%)</title><rect x="510.1" y="405" width="2.1" height="15.0" fill="rgb(229,141,26)" rx="2" ry="2" />
<text  x="513.14" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.02%)</title><rect x="958.2" y="453" width="0.2" height="15.0" fill="rgb(240,181,25)" rx="2" ry="2" />
<text  x="961.24" y="463.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="526.1" y="325" width="0.4" height="15.0" fill="rgb(248,39,19)" rx="2" ry="2" />
<text  x="529.12" y="335.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4 samples, 0.06%)</title><rect x="552.0" y="261" width="0.7" height="15.0" fill="rgb(236,73,8)" rx="2" ry="2" />
<text  x="554.96" y="271.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_init_functor (9 samples, 0.14%)</title><rect x="513.7" y="469" width="1.6" height="15.0" fill="rgb(243,73,25)" rx="2" ry="2" />
<text  x="516.67" y="479.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (112 samples, 1.76%)</title><rect x="45.9" y="661" width="20.8" height="15.0" fill="rgb(213,43,44)" rx="2" ry="2" />
<text  x="48.87" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_write (26 samples, 0.41%)</title><rect x="73.2" y="725" width="4.8" height="15.0" fill="rgb(243,181,49)" rx="2" ry="2" />
<text  x="76.19" y="735.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (1 samples, 0.02%)</title><rect x="965.7" y="325" width="0.2" height="15.0" fill="rgb(232,163,27)" rx="2" ry="2" />
<text  x="968.67" y="335.5" ></text>
</g>
<g >
<title>schedule (110 samples, 1.73%)</title><rect x="46.2" y="645" width="20.5" height="15.0" fill="rgb(227,45,6)" rx="2" ry="2" />
<text  x="49.24" y="655.5" ></text>
</g>
<g >
<title>migrate_task_rq_fair (1 samples, 0.02%)</title><rect x="74.5" y="565" width="0.2" height="15.0" fill="rgb(242,50,36)" rx="2" ry="2" />
<text  x="77.49" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (15 samples, 0.24%)</title><rect x="525.6" y="341" width="2.8" height="15.0" fill="rgb(251,38,19)" rx="2" ry="2" />
<text  x="528.56" y="351.5" ></text>
</g>
<g >
<title>Player::MainLoop (5,498 samples, 86.60%)</title><rect x="160.9" y="693" width="1021.9" height="15.0" fill="rgb(222,206,2)" rx="2" ry="2" />
<text  x="163.92" y="703.5" >Player::MainLoop</text>
</g>
<g >
<title>deactivate_task (1 samples, 0.02%)</title><rect x="1161.6" y="485" width="0.1" height="15.0" fill="rgb(241,117,44)" rx="2" ry="2" />
<text  x="1164.56" y="495.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Set (1 samples, 0.02%)</title><rect x="149.0" y="741" width="0.2" height="15.0" fill="rgb(224,8,53)" rx="2" ry="2" />
<text  x="152.02" y="751.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.03%)</title><rect x="115.9" y="741" width="0.4" height="15.0" fill="rgb(228,155,10)" rx="2" ry="2" />
<text  x="118.94" y="751.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (3 samples, 0.05%)</title><rect x="941.3" y="549" width="0.6" height="15.0" fill="rgb(220,163,24)" rx="2" ry="2" />
<text  x="944.32" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (5 samples, 0.08%)</title><rect x="507.0" y="453" width="0.9" height="15.0" fill="rgb(233,142,24)" rx="2" ry="2" />
<text  x="509.98" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (7 samples, 0.11%)</title><rect x="857.7" y="485" width="1.3" height="15.0" fill="rgb(238,17,43)" rx="2" ry="2" />
<text  x="860.69" y="495.5" ></text>
</g>
<g >
<title>intel_pmu_disable_all (1 samples, 0.02%)</title><rect x="47.0" y="549" width="0.2" height="15.0" fill="rgb(207,215,38)" rx="2" ry="2" />
<text  x="49.99" y="559.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="968.1" y="341" width="0.2" height="15.0" fill="rgb(245,98,6)" rx="2" ry="2" />
<text  x="971.09" y="351.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (1,711 samples, 26.95%)</title><rect x="519.8" y="485" width="318.0" height="15.0" fill="rgb(227,68,8)" rx="2" ry="2" />
<text  x="522.80" y="495.5" >std::function&lt;void (FileRequestResult*)&gt;::..</text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="445.3" y="309" width="0.2" height="15.0" fill="rgb(253,47,26)" rx="2" ry="2" />
<text  x="448.27" y="319.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (1 samples, 0.02%)</title><rect x="480.8" y="485" width="0.2" height="15.0" fill="rgb(217,65,8)" rx="2" ry="2" />
<text  x="483.77" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="536.0" y="325" width="0.2" height="15.0" fill="rgb(226,166,54)" rx="2" ry="2" />
<text  x="538.97" y="335.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (3 samples, 0.05%)</title><rect x="494.2" y="341" width="0.5" height="15.0" fill="rgb(252,160,29)" rx="2" ry="2" />
<text  x="497.15" y="351.5" ></text>
</g>
<g >
<title>main (5,498 samples, 86.60%)</title><rect x="160.9" y="725" width="1021.9" height="15.0" fill="rgb(213,34,11)" rx="2" ry="2" />
<text  x="163.92" y="735.5" >main</text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="865.7" y="501" width="0.5" height="15.0" fill="rgb(243,144,17)" rx="2" ry="2" />
<text  x="868.68" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="160.5" y="741" width="0.2" height="15.0" fill="rgb(212,170,10)" rx="2" ry="2" />
<text  x="163.54" y="751.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.02%)</title><rect x="294.0" y="405" width="0.2" height="15.0" fill="rgb(230,118,39)" rx="2" ry="2" />
<text  x="296.99" y="415.5" ></text>
</g>
<g >
<title>XGetWindowProperty (1 samples, 0.02%)</title><rect x="967.9" y="517" width="0.2" height="15.0" fill="rgb(251,168,29)" rx="2" ry="2" />
<text  x="970.90" y="527.5" ></text>
</g>
<g >
<title>schedule (9 samples, 0.14%)</title><rect x="1161.6" y="517" width="1.6" height="15.0" fill="rgb(211,3,27)" rx="2" ry="2" />
<text  x="1164.56" y="527.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (579 samples, 9.12%)</title><rect x="187.1" y="533" width="107.6" height="15.0" fill="rgb(249,34,24)" rx="2" ry="2" />
<text  x="190.12" y="543.5" >pixman_image_..</text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (490 samples, 7.72%)</title><rect x="638.2" y="405" width="91.1" height="15.0" fill="rgb(232,84,53)" rx="2" ry="2" />
<text  x="641.19" y="415.5" >[libpixman..</text>
</g>
<g >
<title>apparmor_socket_recvmsg (1 samples, 0.02%)</title><rect x="964.4" y="325" width="0.2" height="15.0" fill="rgb(241,227,53)" rx="2" ry="2" />
<text  x="967.37" y="335.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (7 samples, 0.11%)</title><rect x="791.0" y="421" width="1.3" height="15.0" fill="rgb(239,178,12)" rx="2" ry="2" />
<text  x="793.97" y="431.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="1132.8" y="565" width="0.3" height="15.0" fill="rgb(248,50,8)" rx="2" ry="2" />
<text  x="1135.76" y="575.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.02%)</title><rect x="967.9" y="341" width="0.2" height="15.0" fill="rgb(227,102,48)" rx="2" ry="2" />
<text  x="970.90" y="351.5" ></text>
</g>
<g >
<title>put_timespec64 (1 samples, 0.02%)</title><rect x="1132.8" y="501" width="0.1" height="15.0" fill="rgb(223,216,40)" rx="2" ry="2" />
<text  x="1135.76" y="511.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (188 samples, 2.96%)</title><rect x="295.5" y="517" width="34.9" height="15.0" fill="rgb(223,188,20)" rx="2" ry="2" />
<text  x="298.47" y="527.5" >pi..</text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.03%)</title><rect x="63.9" y="565" width="0.4" height="15.0" fill="rgb(212,136,42)" rx="2" ry="2" />
<text  x="66.90" y="575.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.06%)</title><rect x="1134.1" y="533" width="0.7" height="15.0" fill="rgb(212,217,13)" rx="2" ry="2" />
<text  x="1137.06" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_poll (1 samples, 0.02%)</title><rect x="967.9" y="389" width="0.2" height="15.0" fill="rgb(251,74,48)" rx="2" ry="2" />
<text  x="970.90" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="739.3" y="229" width="0.2" height="15.0" fill="rgb(217,28,42)" rx="2" ry="2" />
<text  x="742.30" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.02%)</title><rect x="90.3" y="741" width="0.2" height="15.0" fill="rgb(251,155,41)" rx="2" ry="2" />
<text  x="93.29" y="751.5" ></text>
</g>
<g >
<title>native_write_msr (70 samples, 1.10%)</title><rect x="50.9" y="517" width="13.0" height="15.0" fill="rgb(225,140,27)" rx="2" ry="2" />
<text  x="53.89" y="527.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="64.3" y="533" width="0.2" height="15.0" fill="rgb(246,123,19)" rx="2" ry="2" />
<text  x="67.27" y="543.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.02%)</title><rect x="445.3" y="357" width="0.2" height="15.0" fill="rgb(247,157,36)" rx="2" ry="2" />
<text  x="448.27" y="367.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="958.2" y="421" width="0.2" height="15.0" fill="rgb(215,24,17)" rx="2" ry="2" />
<text  x="961.24" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (5 samples, 0.08%)</title><rect x="507.0" y="485" width="0.9" height="15.0" fill="rgb(249,187,34)" rx="2" ry="2" />
<text  x="509.98" y="495.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="787.4" y="405" width="0.2" height="15.0" fill="rgb(213,152,2)" rx="2" ry="2" />
<text  x="790.44" y="415.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::~function (6 samples, 0.09%)</title><rect x="837.8" y="373" width="1.1" height="15.0" fill="rgb(233,178,40)" rx="2" ry="2" />
<text  x="840.80" y="383.5" ></text>
</g>
<g >
<title>Window_Message::UpdateCursorRect (1 samples, 0.02%)</title><rect x="959.4" y="581" width="0.1" height="15.0" fill="rgb(254,151,53)" rx="2" ry="2" />
<text  x="962.35" y="591.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (4 samples, 0.06%)</title><rect x="964.6" y="357" width="0.7" height="15.0" fill="rgb(225,6,33)" rx="2" ry="2" />
<text  x="967.56" y="367.5" ></text>
</g>
<g >
<title>TilemapSubLayer::Draw (1 samples, 0.02%)</title><rect x="344.7" y="597" width="0.2" height="15.0" fill="rgb(247,22,46)" rx="2" ry="2" />
<text  x="347.73" y="607.5" ></text>
</g>
<g >
<title>unix_poll (1 samples, 0.02%)</title><rect x="67.2" y="677" width="0.2" height="15.0" fill="rgb(254,112,51)" rx="2" ry="2" />
<text  x="70.24" y="687.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::function (4 samples, 0.06%)</title><rect x="508.7" y="437" width="0.7" height="15.0" fill="rgb(216,195,0)" rx="2" ry="2" />
<text  x="511.65" y="447.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (95 samples, 1.50%)</title><rect x="817.9" y="357" width="17.7" height="15.0" fill="rgb(248,157,17)" rx="2" ry="2" />
<text  x="820.92" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (4 samples, 0.06%)</title><rect x="494.0" y="421" width="0.7" height="15.0" fill="rgb(210,179,33)" rx="2" ry="2" />
<text  x="496.97" y="431.5" ></text>
</g>
<g >
<title>Bitmap::height (1 samples, 0.02%)</title><rect x="790.8" y="421" width="0.2" height="15.0" fill="rgb(208,168,26)" rx="2" ry="2" />
<text  x="793.78" y="431.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="962.0" y="517" width="0.1" height="15.0" fill="rgb(232,166,34)" rx="2" ry="2" />
<text  x="964.95" y="527.5" ></text>
</g>
<g >
<title>TilemapLayer::Draw (16 samples, 0.25%)</title><rect x="341.8" y="597" width="2.9" height="15.0" fill="rgb(206,58,1)" rx="2" ry="2" />
<text  x="344.75" y="607.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="757.1" y="69" width="0.2" height="15.0" fill="rgb(224,217,36)" rx="2" ry="2" />
<text  x="760.14" y="79.5" ></text>
</g>
<g >
<title>SdlMixerAudio::Update (2 samples, 0.03%)</title><rect x="1132.8" y="629" width="0.3" height="15.0" fill="rgb(237,146,46)" rx="2" ry="2" />
<text  x="1135.76" y="639.5" ></text>
</g>
<g >
<title>Bitmap::~Bitmap (75 samples, 1.18%)</title><rect x="820.3" y="309" width="14.0" height="15.0" fill="rgb(231,5,47)" rx="2" ry="2" />
<text  x="823.33" y="319.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (155 samples, 2.44%)</title><rect x="733.2" y="261" width="28.8" height="15.0" fill="rgb(254,111,11)" rx="2" ry="2" />
<text  x="736.17" y="271.5" >[l..</text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (48 samples, 0.76%)</title><rect x="498.1" y="469" width="8.9" height="15.0" fill="rgb(236,113,4)" rx="2" ry="2" />
<text  x="501.06" y="479.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (2 samples, 0.03%)</title><rect x="76.5" y="629" width="0.4" height="15.0" fill="rgb(222,56,42)" rx="2" ry="2" />
<text  x="79.54" y="639.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (5 samples, 0.08%)</title><rect x="1131.8" y="597" width="1.0" height="15.0" fill="rgb(209,177,44)" rx="2" ry="2" />
<text  x="1134.83" y="607.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.02%)</title><rect x="835.4" y="229" width="0.2" height="15.0" fill="rgb(242,96,33)" rx="2" ry="2" />
<text  x="838.39" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (5 samples, 0.08%)</title><rect x="106.5" y="741" width="0.9" height="15.0" fill="rgb(214,47,38)" rx="2" ry="2" />
<text  x="109.46" y="751.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (1 samples, 0.02%)</title><rect x="357.4" y="549" width="0.2" height="15.0" fill="rgb(235,152,11)" rx="2" ry="2" />
<text  x="360.36" y="559.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (2 samples, 0.03%)</title><rect x="1131.5" y="565" width="0.3" height="15.0" fill="rgb(240,50,7)" rx="2" ry="2" />
<text  x="1134.46" y="575.5" ></text>
</g>
<g >
<title>_XReply (1 samples, 0.02%)</title><rect x="968.1" y="485" width="0.2" height="15.0" fill="rgb(235,181,1)" rx="2" ry="2" />
<text  x="971.09" y="495.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="963.1" y="421" width="0.2" height="15.0" fill="rgb(234,206,38)" rx="2" ry="2" />
<text  x="966.07" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (207 samples, 3.26%)</title><rect x="575.4" y="357" width="38.4" height="15.0" fill="rgb(220,7,0)" rx="2" ry="2" />
<text  x="578.37" y="367.5" >do_..</text>
</g>
<g >
<title>pixman_region32_rectangles (2 samples, 0.03%)</title><rect x="729.6" y="405" width="0.4" height="15.0" fill="rgb(245,199,38)" rx="2" ry="2" />
<text  x="732.63" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_free (3 samples, 0.05%)</title><rect x="838.2" y="309" width="0.5" height="15.0" fill="rgb(208,197,7)" rx="2" ry="2" />
<text  x="841.17" y="319.5" ></text>
</g>
<g >
<title>Graphics::RegisterDrawable (6 samples, 0.09%)</title><rect x="793.0" y="437" width="1.1" height="15.0" fill="rgb(215,204,22)" rx="2" ry="2" />
<text  x="796.01" y="447.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (28 samples, 0.44%)</title><rect x="524.6" y="389" width="5.2" height="15.0" fill="rgb(220,216,49)" rx="2" ry="2" />
<text  x="527.64" y="399.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="962.0" y="469" width="0.1" height="15.0" fill="rgb(227,131,32)" rx="2" ry="2" />
<text  x="964.95" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2 samples, 0.03%)</title><rect x="529.3" y="277" width="0.4" height="15.0" fill="rgb(234,26,8)" rx="2" ry="2" />
<text  x="532.28" y="287.5" ></text>
</g>
<g >
<title>security_file_permission (8 samples, 0.13%)</title><rect x="71.7" y="661" width="1.5" height="15.0" fill="rgb(251,70,36)" rx="2" ry="2" />
<text  x="74.70" y="671.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (49 samples, 0.77%)</title><rect x="777.6" y="437" width="9.1" height="15.0" fill="rgb(208,200,28)" rx="2" ry="2" />
<text  x="780.59" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator++ (1 samples, 0.02%)</title><rect x="958.8" y="565" width="0.2" height="15.0" fill="rgb(206,111,5)" rx="2" ry="2" />
<text  x="961.80" y="575.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="69.1" y="693" width="0.2" height="15.0" fill="rgb(229,106,24)" rx="2" ry="2" />
<text  x="72.10" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.06%)</title><rect x="114.8" y="709" width="0.8" height="15.0" fill="rgb(214,53,22)" rx="2" ry="2" />
<text  x="117.82" y="719.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (2 samples, 0.03%)</title><rect x="1132.8" y="581" width="0.3" height="15.0" fill="rgb(225,165,52)" rx="2" ry="2" />
<text  x="1135.76" y="591.5" ></text>
</g>
<g >
<title>Sprite::GetZ (1 samples, 0.02%)</title><rect x="356.8" y="501" width="0.2" height="15.0" fill="rgb(227,106,6)" rx="2" ry="2" />
<text  x="359.81" y="511.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (1 samples, 0.02%)</title><rect x="847.3" y="501" width="0.2" height="15.0" fill="rgb(226,59,25)" rx="2" ry="2" />
<text  x="850.28" y="511.5" ></text>
</g>
<g >
<title>calloc@plt (1 samples, 0.02%)</title><rect x="761.6" y="229" width="0.2" height="15.0" fill="rgb(226,93,35)" rx="2" ry="2" />
<text  x="764.60" y="239.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="45.3" y="549" width="0.2" height="15.0" fill="rgb(224,217,2)" rx="2" ry="2" />
<text  x="48.31" y="559.5" ></text>
</g>
<g >
<title>Bitmap::BlitFast (2 samples, 0.03%)</title><rect x="343.1" y="565" width="0.3" height="15.0" fill="rgb(213,70,28)" rx="2" ry="2" />
<text  x="346.05" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (48 samples, 0.76%)</title><rect x="537.6" y="277" width="9.0" height="15.0" fill="rgb(251,31,17)" rx="2" ry="2" />
<text  x="540.65" y="287.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="972.7" y="549" width="0.2" height="15.0" fill="rgb(214,204,48)" rx="2" ry="2" />
<text  x="975.73" y="559.5" ></text>
</g>
<g >
<title>tcache_get (3 samples, 0.05%)</title><rect x="508.1" y="293" width="0.6" height="15.0" fill="rgb(216,188,16)" rx="2" ry="2" />
<text  x="511.09" y="303.5" ></text>
</g>
<g >
<title>x86_pmu_enable (55 samples, 0.87%)</title><rect x="977.8" y="389" width="10.2" height="15.0" fill="rgb(226,125,31)" rx="2" ry="2" />
<text  x="980.75" y="399.5" ></text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (3 samples, 0.05%)</title><rect x="767.9" y="437" width="0.6" height="15.0" fill="rgb(244,155,17)" rx="2" ry="2" />
<text  x="770.92" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.09%)</title><rect x="1188.3" y="757" width="1.1" height="15.0" fill="rgb(235,146,30)" rx="2" ry="2" />
<text  x="1191.33" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_mutate (2 samples, 0.03%)</title><rect x="864.2" y="485" width="0.4" height="15.0" fill="rgb(217,5,18)" rx="2" ry="2" />
<text  x="867.19" y="495.5" ></text>
</g>
<g >
<title>Rect::Rect (1 samples, 0.02%)</title><rect x="86.2" y="741" width="0.2" height="15.0" fill="rgb(220,38,26)" rx="2" ry="2" />
<text  x="89.20" y="751.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (1 samples, 0.02%)</title><rect x="794.5" y="405" width="0.2" height="15.0" fill="rgb(226,195,35)" rx="2" ry="2" />
<text  x="797.50" y="415.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="546.2" y="165" width="0.2" height="15.0" fill="rgb(238,104,25)" rx="2" ry="2" />
<text  x="549.19" y="175.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="801.4" y="261" width="0.2" height="15.0" fill="rgb(208,117,37)" rx="2" ry="2" />
<text  x="804.38" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (4 samples, 0.06%)</title><rect x="91.6" y="709" width="0.7" height="15.0" fill="rgb(209,58,54)" rx="2" ry="2" />
<text  x="94.59" y="719.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (55 samples, 0.87%)</title><rect x="807.5" y="277" width="10.2" height="15.0" fill="rgb(240,126,40)" rx="2" ry="2" />
<text  x="810.51" y="287.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (1 samples, 0.02%)</title><rect x="959.9" y="453" width="0.2" height="15.0" fill="rgb(219,116,14)" rx="2" ry="2" />
<text  x="962.91" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign@plt (1 samples, 0.02%)</title><rect x="869.2" y="501" width="0.2" height="15.0" fill="rgb(235,128,41)" rx="2" ry="2" />
<text  x="872.21" y="511.5" ></text>
</g>
<g >
<title>Player::IsRPG2k (1 samples, 0.02%)</title><rect x="149.2" y="741" width="0.2" height="15.0" fill="rgb(248,227,9)" rx="2" ry="2" />
<text  x="152.21" y="751.5" ></text>
</g>
<g >
<title>generic_file_read_iter (5 samples, 0.08%)</title><rect x="69.7" y="629" width="0.9" height="15.0" fill="rgb(222,153,23)" rx="2" ry="2" />
<text  x="72.66" y="639.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (2,091 samples, 32.93%)</title><rect x="481.0" y="549" width="388.6" height="15.0" fill="rgb(245,119,29)" rx="2" ry="2" />
<text  x="483.96" y="559.5" >Game_Interpreter::CommandShowPicture</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_M_lower_bound (19 samples, 0.30%)</title><rect x="532.4" y="357" width="3.6" height="15.0" fill="rgb(229,108,2)" rx="2" ry="2" />
<text  x="535.44" y="367.5" ></text>
</g>
<g >
<title>Sprite::GetZ (1 samples, 0.02%)</title><rect x="353.3" y="469" width="0.2" height="15.0" fill="rgb(227,227,38)" rx="2" ry="2" />
<text  x="356.28" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (3 samples, 0.05%)</title><rect x="623.3" y="357" width="0.6" height="15.0" fill="rgb(214,186,54)" rx="2" ry="2" />
<text  x="626.32" y="367.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_destroy (5 samples, 0.08%)</title><rect x="838.0" y="325" width="0.9" height="15.0" fill="rgb(222,110,24)" rx="2" ry="2" />
<text  x="840.99" y="335.5" ></text>
</g>
<g >
<title>update_process_times (2 samples, 0.03%)</title><rect x="34.7" y="661" width="0.4" height="15.0" fill="rgb(226,133,15)" rx="2" ry="2" />
<text  x="37.72" y="671.5" ></text>
</g>
<g >
<title>__vfs_write (21 samples, 0.33%)</title><rect x="74.1" y="677" width="3.9" height="15.0" fill="rgb(241,178,45)" rx="2" ry="2" />
<text  x="77.12" y="687.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingForegroundExecution (5 samples, 0.08%)</title><rect x="934.3" y="581" width="0.9" height="15.0" fill="rgb(248,22,50)" rx="2" ry="2" />
<text  x="937.26" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (2 samples, 0.03%)</title><rect x="527.6" y="325" width="0.4" height="15.0" fill="rgb(253,213,40)" rx="2" ry="2" />
<text  x="530.61" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (3 samples, 0.05%)</title><rect x="864.9" y="517" width="0.6" height="15.0" fill="rgb(208,33,14)" rx="2" ry="2" />
<text  x="867.94" y="527.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (33 samples, 0.52%)</title><rect x="1125.3" y="549" width="6.2" height="15.0" fill="rgb(205,64,25)" rx="2" ry="2" />
<text  x="1128.32" y="559.5" ></text>
</g>
<g >
<title>std::__merge_adaptive&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, long, Drawable**, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (6 samples, 0.09%)</title><rect x="348.4" y="549" width="1.2" height="15.0" fill="rgb(247,106,2)" rx="2" ry="2" />
<text  x="351.44" y="559.5" ></text>
</g>
<g >
<title>__fget_light (4 samples, 0.06%)</title><rect x="964.6" y="325" width="0.7" height="15.0" fill="rgb(243,45,4)" rx="2" ry="2" />
<text  x="967.56" y="335.5" ></text>
</g>
<g >
<title>Game_Map::SetNeedRefresh (1 samples, 0.02%)</title><rect x="84.7" y="757" width="0.2" height="15.0" fill="rgb(239,153,17)" rx="2" ry="2" />
<text  x="87.71" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create@plt (2 samples, 0.03%)</title><rect x="528.0" y="325" width="0.4" height="15.0" fill="rgb(246,228,0)" rx="2" ry="2" />
<text  x="530.98" y="335.5" ></text>
</g>
<g >
<title>update_blocked_averages (4 samples, 0.06%)</title><rect x="1134.1" y="501" width="0.7" height="15.0" fill="rgb(214,116,41)" rx="2" ry="2" />
<text  x="1137.06" y="511.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="801.4" y="357" width="0.2" height="15.0" fill="rgb(229,218,52)" rx="2" ry="2" />
<text  x="804.38" y="367.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingBackgroundExecution (10 samples, 0.16%)</title><rect x="359.2" y="565" width="1.9" height="15.0" fill="rgb(248,55,9)" rx="2" ry="2" />
<text  x="362.22" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::get (1 samples, 0.02%)</title><rect x="839.8" y="453" width="0.2" height="15.0" fill="rgb(233,105,30)" rx="2" ry="2" />
<text  x="842.85" y="463.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (44 samples, 0.69%)</title><rect x="870.0" y="549" width="8.1" height="15.0" fill="rgb(218,17,46)" rx="2" ry="2" />
<text  x="872.96" y="559.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (186 samples, 2.93%)</title><rect x="731.7" y="389" width="34.5" height="15.0" fill="rgb(239,54,33)" rx="2" ry="2" />
<text  x="734.68" y="399.5" >st..</text>
</g>
<g >
<title>__libc_calloc (119 samples, 1.87%)</title><rect x="739.5" y="229" width="22.1" height="15.0" fill="rgb(226,19,8)" rx="2" ry="2" />
<text  x="742.48" y="239.5" >_..</text>
</g>
<g >
<title>__libc_recvmsg (1 samples, 0.02%)</title><rect x="990.8" y="469" width="0.1" height="15.0" fill="rgb(229,211,4)" rx="2" ry="2" />
<text  x="993.76" y="479.5" ></text>
</g>
<g >
<title>__GI___nanosleep (10 samples, 0.16%)</title><rect x="1161.4" y="613" width="1.8" height="15.0" fill="rgb(230,12,54)" rx="2" ry="2" />
<text  x="1164.38" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (5 samples, 0.08%)</title><rect x="493.8" y="453" width="0.9" height="15.0" fill="rgb(216,221,51)" rx="2" ry="2" />
<text  x="496.78" y="463.5" ></text>
</g>
<g >
<title>Game_Interpreter::ValueOrVariable (1 samples, 0.02%)</title><rect x="485.0" y="517" width="0.2" height="15.0" fill="rgb(238,193,49)" rx="2" ry="2" />
<text  x="488.05" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt;::end (1 samples, 0.02%)</title><rect x="817.7" y="341" width="0.2" height="15.0" fill="rgb(238,44,11)" rx="2" ry="2" />
<text  x="820.73" y="351.5" ></text>
</g>
<g >
<title>tcache_put (1 samples, 0.02%)</title><rect x="507.7" y="389" width="0.2" height="15.0" fill="rgb(214,16,7)" rx="2" ry="2" />
<text  x="510.72" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (5 samples, 0.08%)</title><rect x="528.7" y="325" width="1.0" height="15.0" fill="rgb(232,12,10)" rx="2" ry="2" />
<text  x="531.72" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (53 samples, 0.83%)</title><rect x="602.5" y="341" width="9.9" height="15.0" fill="rgb(215,182,43)" rx="2" ry="2" />
<text  x="605.51" y="351.5" ></text>
</g>
<g >
<title>__exchange_and_add (6 samples, 0.09%)</title><rect x="845.4" y="373" width="1.1" height="15.0" fill="rgb(246,134,15)" rx="2" ry="2" />
<text  x="848.42" y="383.5" ></text>
</g>
<g >
<title>select_task_rq_fair (1 samples, 0.02%)</title><rect x="74.7" y="565" width="0.2" height="15.0" fill="rgb(241,191,27)" rx="2" ry="2" />
<text  x="77.68" y="575.5" ></text>
</g>
<g >
<title>Cache::System (1 samples, 0.02%)</title><rect x="959.0" y="501" width="0.2" height="15.0" fill="rgb(225,190,9)" rx="2" ry="2" />
<text  x="961.98" y="511.5" ></text>
</g>
<g >
<title>Game_Picture::Update (112 samples, 1.76%)</title><rect x="937.8" y="581" width="20.8" height="15.0" fill="rgb(234,39,1)" rx="2" ry="2" />
<text  x="940.79" y="591.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (6 samples, 0.09%)</title><rect x="795.6" y="453" width="1.1" height="15.0" fill="rgb(230,131,39)" rx="2" ry="2" />
<text  x="798.61" y="463.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingForegroundExecution (11 samples, 0.17%)</title><rect x="935.7" y="533" width="2.1" height="15.0" fill="rgb(218,107,49)" rx="2" ry="2" />
<text  x="938.75" y="543.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (6 samples, 0.09%)</title><rect x="845.4" y="389" width="1.1" height="15.0" fill="rgb(254,170,6)" rx="2" ry="2" />
<text  x="848.42" y="399.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandWait (2 samples, 0.03%)</title><rect x="869.6" y="549" width="0.4" height="15.0" fill="rgb(242,38,7)" rx="2" ry="2" />
<text  x="872.58" y="559.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (2 samples, 0.03%)</title><rect x="837.4" y="373" width="0.4" height="15.0" fill="rgb(240,52,5)" rx="2" ry="2" />
<text  x="840.43" y="383.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandEndLoop (2 samples, 0.03%)</title><rect x="470.9" y="549" width="0.4" height="15.0" fill="rgb(239,1,35)" rx="2" ry="2" />
<text  x="473.92" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="965.7" y="437" width="0.2" height="15.0" fill="rgb(212,96,20)" rx="2" ry="2" />
<text  x="968.67" y="447.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="974.6" y="453" width="0.2" height="15.0" fill="rgb(219,213,30)" rx="2" ry="2" />
<text  x="977.59" y="463.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (2 samples, 0.03%)</title><rect x="964.0" y="341" width="0.4" height="15.0" fill="rgb(242,24,42)" rx="2" ry="2" />
<text  x="967.00" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (1 samples, 0.02%)</title><rect x="958.8" y="549" width="0.2" height="15.0" fill="rgb(221,83,46)" rx="2" ry="2" />
<text  x="961.80" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect x="960.1" y="469" width="0.2" height="15.0" fill="rgb(213,15,37)" rx="2" ry="2" />
<text  x="963.10" y="479.5" ></text>
</g>
<g >
<title>Bitmap::width (1 samples, 0.02%)</title><rect x="767.0" y="421" width="0.2" height="15.0" fill="rgb(207,189,48)" rx="2" ry="2" />
<text  x="769.99" y="431.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (56 samples, 0.88%)</title><rect x="977.6" y="421" width="10.4" height="15.0" fill="rgb(230,24,1)" rx="2" ry="2" />
<text  x="980.57" y="431.5" ></text>
</g>
</g>
</svg>
