<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1014.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="997" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="997" > </text>
<g id="frames">
<g >
<title>put_timespec64 (11 samples, 0.22%)</title><rect x="1105.1" y="709" width="2.6" height="15.0" fill="rgb(232,187,49)" rx="2" ry="2" />
<text  x="1108.08" y="719.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="308.3" y="661" width="0.2" height="15.0" fill="rgb(247,103,13)" rx="2" ry="2" />
<text  x="311.31" y="671.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (3 samples, 0.06%)</title><rect x="1041.3" y="677" width="0.7" height="15.0" fill="rgb(223,66,12)" rx="2" ry="2" />
<text  x="1044.33" y="687.5" ></text>
</g>
<g >
<title>cpuacct_charge (1 samples, 0.02%)</title><rect x="115.1" y="741" width="0.3" height="15.0" fill="rgb(243,79,34)" rx="2" ry="2" />
<text  x="118.13" y="751.5" ></text>
</g>
<g >
<title>Game_Interpreter::KeyInputState::CheckInput (1 samples, 0.02%)</title><rect x="150.0" y="917" width="0.3" height="15.0" fill="rgb(251,213,12)" rx="2" ry="2" />
<text  x="153.01" y="927.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (1 samples, 0.02%)</title><rect x="552.7" y="565" width="0.3" height="15.0" fill="rgb(228,49,54)" rx="2" ry="2" />
<text  x="555.73" y="575.5" ></text>
</g>
<g >
<title>Weather::GetZ (1 samples, 0.02%)</title><rect x="480.3" y="677" width="0.3" height="15.0" fill="rgb(228,180,2)" rx="2" ry="2" />
<text  x="483.32" y="687.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="155.3" y="917" width="0.2" height="15.0" fill="rgb(211,47,38)" rx="2" ry="2" />
<text  x="158.30" y="927.5" ></text>
</g>
<g >
<title>std::__merge_adaptive&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, long, Drawable**, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (2 samples, 0.04%)</title><rect x="478.2" y="725" width="0.4" height="15.0" fill="rgb(242,93,9)" rx="2" ry="2" />
<text  x="481.15" y="735.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1182.5" y="693" width="0.3" height="15.0" fill="rgb(227,132,34)" rx="2" ry="2" />
<text  x="1185.54" y="703.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="468.8" y="725" width="0.2" height="15.0" fill="rgb(249,145,0)" rx="2" ry="2" />
<text  x="471.77" y="735.5" ></text>
</g>
<g >
<title>Scene::IsAsyncPending (142 samples, 2.90%)</title><rect x="257.5" y="837" width="34.2" height="15.0" fill="rgb(228,167,31)" rx="2" ry="2" />
<text  x="260.55" y="847.5" >Sc..</text>
</g>
<g >
<title>__update_load_avg_blocked_se (1 samples, 0.02%)</title><rect x="1140.2" y="629" width="0.2" height="15.0" fill="rgb(224,113,6)" rx="2" ry="2" />
<text  x="1143.20" y="639.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="670.8" y="357" width="0.3" height="15.0" fill="rgb(221,152,10)" rx="2" ry="2" />
<text  x="673.85" y="367.5" ></text>
</g>
<g >
<title>new_sync_read (1 samples, 0.02%)</title><rect x="548.4" y="405" width="0.2" height="15.0" fill="rgb(235,138,25)" rx="2" ry="2" />
<text  x="551.40" y="415.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1046.9" y="693" width="0.2" height="15.0" fill="rgb(243,194,23)" rx="2" ry="2" />
<text  x="1049.86" y="703.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (32 samples, 0.65%)</title><rect x="660.5" y="757" width="7.7" height="15.0" fill="rgb(234,43,3)" rx="2" ry="2" />
<text  x="663.50" y="767.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="168.3" y="901" width="0.2" height="15.0" fill="rgb(246,149,29)" rx="2" ry="2" />
<text  x="171.30" y="911.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="574.4" y="709" width="0.2" height="15.0" fill="rgb(219,134,13)" rx="2" ry="2" />
<text  x="577.38" y="719.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (1 samples, 0.02%)</title><rect x="545.0" y="645" width="0.3" height="15.0" fill="rgb(230,133,52)" rx="2" ry="2" />
<text  x="548.03" y="655.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.02%)</title><rect x="529.2" y="485" width="0.2" height="15.0" fill="rgb(246,103,8)" rx="2" ry="2" />
<text  x="532.15" y="495.5" ></text>
</g>
<g >
<title>__gconv_transform_utf8_internal (1 samples, 0.02%)</title><rect x="480.6" y="709" width="0.2" height="15.0" fill="rgb(254,190,27)" rx="2" ry="2" />
<text  x="483.56" y="719.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_get_use_count (1 samples, 0.02%)</title><rect x="558.7" y="549" width="0.3" height="15.0" fill="rgb(250,54,27)" rx="2" ry="2" />
<text  x="561.74" y="559.5" ></text>
</g>
<g >
<title>std::locale::locale (1 samples, 0.02%)</title><rect x="481.5" y="757" width="0.3" height="15.0" fill="rgb(251,8,23)" rx="2" ry="2" />
<text  x="484.52" y="767.5" ></text>
</g>
<g >
<title>Game_Map::IsAnyEventStarting (1 samples, 0.02%)</title><rect x="654.0" y="725" width="0.2" height="15.0" fill="rgb(253,211,43)" rx="2" ry="2" />
<text  x="657.01" y="735.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (4 samples, 0.08%)</title><rect x="442.3" y="677" width="1.0" height="15.0" fill="rgb(210,142,9)" rx="2" ry="2" />
<text  x="445.31" y="687.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.02%)</title><rect x="560.2" y="421" width="0.2" height="15.0" fill="rgb(249,166,22)" rx="2" ry="2" />
<text  x="563.19" y="431.5" ></text>
</g>
<g >
<title>update_nohz_stats (1 samples, 0.02%)</title><rect x="136.5" y="725" width="0.3" height="15.0" fill="rgb(250,170,9)" rx="2" ry="2" />
<text  x="139.54" y="735.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (3 samples, 0.06%)</title><rect x="309.5" y="677" width="0.7" height="15.0" fill="rgb(219,91,29)" rx="2" ry="2" />
<text  x="312.51" y="687.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="544.8" y="677" width="0.2" height="15.0" fill="rgb(225,223,25)" rx="2" ry="2" />
<text  x="547.79" y="687.5" ></text>
</g>
<g >
<title>usb_hcd_submit_urb (1 samples, 0.02%)</title><rect x="468.8" y="469" width="0.2" height="15.0" fill="rgb(234,61,40)" rx="2" ry="2" />
<text  x="471.77" y="479.5" ></text>
</g>
<g >
<title>SdlMixerAudio::SE_Play (4 samples, 0.08%)</title><rect x="548.4" y="645" width="1.0" height="15.0" fill="rgb(250,114,54)" rx="2" ry="2" />
<text  x="551.40" y="655.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="289.3" y="773" width="0.2" height="15.0" fill="rgb(236,74,39)" rx="2" ry="2" />
<text  x="292.30" y="783.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.02%)</title><rect x="544.8" y="565" width="0.2" height="15.0" fill="rgb(242,167,18)" rx="2" ry="2" />
<text  x="547.79" y="575.5" ></text>
</g>
<g >
<title>Cache::Picture (43 samples, 0.88%)</title><rect x="552.0" y="629" width="10.4" height="15.0" fill="rgb(243,118,43)" rx="2" ry="2" />
<text  x="555.01" y="639.5" ></text>
</g>
<g >
<title>run_rebalance_domains (3 samples, 0.06%)</title><rect x="241.2" y="853" width="0.7" height="15.0" fill="rgb(230,52,35)" rx="2" ry="2" />
<text  x="244.19" y="863.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="134.6" y="725" width="0.3" height="15.0" fill="rgb(210,127,7)" rx="2" ry="2" />
<text  x="137.62" y="735.5" ></text>
</g>
<g >
<title>FileRequestAsync::Bind&lt;Game_Picture&gt; (5 samples, 0.10%)</title><rect x="550.6" y="677" width="1.2" height="15.0" fill="rgb(206,136,6)" rx="2" ry="2" />
<text  x="553.56" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="547.9" y="661" width="0.3" height="15.0" fill="rgb(218,31,21)" rx="2" ry="2" />
<text  x="550.92" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.10%)</title><rect x="669.2" y="613" width="1.2" height="15.0" fill="rgb(214,70,23)" rx="2" ry="2" />
<text  x="672.16" y="623.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.04%)</title><rect x="564.0" y="629" width="0.5" height="15.0" fill="rgb(239,79,4)" rx="2" ry="2" />
<text  x="567.03" y="639.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="553.9" y="373" width="0.3" height="15.0" fill="rgb(239,98,48)" rx="2" ry="2" />
<text  x="556.93" y="383.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (1 samples, 0.02%)</title><rect x="553.4" y="389" width="0.3" height="15.0" fill="rgb(208,5,41)" rx="2" ry="2" />
<text  x="556.45" y="399.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="671.6" y="709" width="0.2" height="15.0" fill="rgb(223,131,12)" rx="2" ry="2" />
<text  x="674.57" y="719.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (1 samples, 0.02%)</title><rect x="554.2" y="421" width="0.2" height="15.0" fill="rgb(229,118,25)" rx="2" ry="2" />
<text  x="557.17" y="431.5" ></text>
</g>
<g >
<title>kick_ilb (1 samples, 0.02%)</title><rect x="108.2" y="789" width="0.2" height="15.0" fill="rgb(232,215,0)" rx="2" ry="2" />
<text  x="111.15" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (95 samples, 1.94%)</title><rect x="264.5" y="789" width="22.9" height="15.0" fill="rgb(237,94,31)" rx="2" ry="2" />
<text  x="267.52" y="799.5" >s..</text>
</g>
<g >
<title>_start (3,850 samples, 78.49%)</title><rect x="257.3" y="933" width="926.2" height="15.0" fill="rgb(248,98,1)" rx="2" ry="2" />
<text  x="260.31" y="943.5" >_start</text>
</g>
<g >
<title>snd_usb_pcm_delay.part.14 (2 samples, 0.04%)</title><rect x="1045.7" y="453" width="0.4" height="15.0" fill="rgb(217,196,1)" rx="2" ry="2" />
<text  x="1048.66" y="463.5" ></text>
</g>
<g >
<title>Graphics::IsTransitionPending (1 samples, 0.02%)</title><rect x="1182.8" y="789" width="0.2" height="15.0" fill="rgb(231,145,54)" rx="2" ry="2" />
<text  x="1185.78" y="799.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.02%)</title><rect x="1133.5" y="661" width="0.2" height="15.0" fill="rgb(244,36,4)" rx="2" ry="2" />
<text  x="1136.47" y="671.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (1,630 samples, 33.23%)</title><rect x="673.3" y="757" width="392.1" height="15.0" fill="rgb(231,228,36)" rx="2" ry="2" />
<text  x="676.25" y="767.5" >[libSDL2-2.0.so.0.9.0]</text>
</g>
<g >
<title>__update_load_avg_se (1 samples, 0.02%)</title><rect x="1119.5" y="613" width="0.3" height="15.0" fill="rgb(229,2,13)" rx="2" ry="2" />
<text  x="1122.51" y="623.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (2 samples, 0.04%)</title><rect x="143.0" y="757" width="0.5" height="15.0" fill="rgb(209,181,21)" rx="2" ry="2" />
<text  x="146.04" y="767.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="548.4" y="501" width="0.2" height="15.0" fill="rgb(214,85,42)" rx="2" ry="2" />
<text  x="551.40" y="511.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="670.8" y="421" width="0.3" height="15.0" fill="rgb(244,194,26)" rx="2" ry="2" />
<text  x="673.85" y="431.5" ></text>
</g>
<g >
<title>ktime_get_raw_ts64 (1 samples, 0.02%)</title><rect x="1100.0" y="709" width="0.3" height="15.0" fill="rgb(209,94,19)" rx="2" ry="2" />
<text  x="1103.03" y="719.5" ></text>
</g>
<g >
<title>do_writev (1 samples, 0.02%)</title><rect x="662.9" y="517" width="0.2" height="15.0" fill="rgb(237,214,5)" rx="2" ry="2" />
<text  x="665.91" y="527.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.02%)</title><rect x="1109.2" y="597" width="0.2" height="15.0" fill="rgb(239,131,13)" rx="2" ry="2" />
<text  x="1112.17" y="607.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.06%)</title><rect x="255.1" y="917" width="0.8" height="15.0" fill="rgb(239,197,8)" rx="2" ry="2" />
<text  x="258.14" y="927.5" ></text>
</g>
<g >
<title>Bitmap::Blit (2 samples, 0.04%)</title><rect x="553.2" y="421" width="0.5" height="15.0" fill="rgb(243,58,9)" rx="2" ry="2" />
<text  x="556.21" y="431.5" ></text>
</g>
<g >
<title>Bitmap::MultiplyAlpha (2 samples, 0.04%)</title><rect x="553.7" y="421" width="0.5" height="15.0" fill="rgb(237,49,53)" rx="2" ry="2" />
<text  x="556.69" y="431.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="529.2" y="629" width="0.2" height="15.0" fill="rgb(217,166,50)" rx="2" ry="2" />
<text  x="532.15" y="639.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (2 samples, 0.04%)</title><rect x="634.5" y="629" width="0.5" height="15.0" fill="rgb(216,77,19)" rx="2" ry="2" />
<text  x="637.52" y="639.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.02%)</title><rect x="468.8" y="613" width="0.2" height="15.0" fill="rgb(241,117,37)" rx="2" ry="2" />
<text  x="471.77" y="623.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (19 samples, 0.39%)</title><rect x="160.6" y="853" width="4.6" height="15.0" fill="rgb(212,150,14)" rx="2" ry="2" />
<text  x="163.60" y="863.5" ></text>
</g>
<g >
<title>finish_task_switch (53 samples, 1.08%)</title><rect x="1120.0" y="661" width="12.7" height="15.0" fill="rgb(218,224,4)" rx="2" ry="2" />
<text  x="1122.99" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.10%)</title><rect x="669.2" y="597" width="1.2" height="15.0" fill="rgb(220,11,22)" rx="2" ry="2" />
<text  x="672.16" y="607.5" ></text>
</g>
<g >
<title>__GI___poll (1 samples, 0.02%)</title><rect x="672.3" y="741" width="0.2" height="15.0" fill="rgb(209,182,38)" rx="2" ry="2" />
<text  x="675.29" y="751.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.02%)</title><rect x="1140.0" y="613" width="0.2" height="15.0" fill="rgb(226,160,13)" rx="2" ry="2" />
<text  x="1142.96" y="623.5" ></text>
</g>
<g >
<title>sock_recvmsg (1 samples, 0.02%)</title><rect x="662.2" y="533" width="0.2" height="15.0" fill="rgb(225,6,18)" rx="2" ry="2" />
<text  x="665.19" y="543.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.02%)</title><rect x="1042.0" y="581" width="0.3" height="15.0" fill="rgb(243,73,3)" rx="2" ry="2" />
<text  x="1045.05" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.02%)</title><rect x="560.2" y="501" width="0.2" height="15.0" fill="rgb(253,196,53)" rx="2" ry="2" />
<text  x="563.19" y="511.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="134.6" y="693" width="0.3" height="15.0" fill="rgb(228,68,14)" rx="2" ry="2" />
<text  x="137.62" y="703.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (5 samples, 0.10%)</title><rect x="1165.0" y="773" width="1.2" height="15.0" fill="rgb(221,51,10)" rx="2" ry="2" />
<text  x="1167.98" y="783.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="553.9" y="309" width="0.3" height="15.0" fill="rgb(215,218,48)" rx="2" ry="2" />
<text  x="556.93" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (63 samples, 1.28%)</title><rect x="1118.6" y="741" width="15.1" height="15.0" fill="rgb(213,149,2)" rx="2" ry="2" />
<text  x="1121.55" y="751.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (1 samples, 0.02%)</title><rect x="1064.2" y="581" width="0.2" height="15.0" fill="rgb(234,210,8)" rx="2" ry="2" />
<text  x="1067.18" y="591.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (18 samples, 0.37%)</title><rect x="668.2" y="789" width="4.3" height="15.0" fill="rgb(232,121,54)" rx="2" ry="2" />
<text  x="671.20" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::CommonEvent, std::allocator&lt;RPG::CommonEvent&gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="653.3" y="725" width="0.2" height="15.0" fill="rgb(251,33,38)" rx="2" ry="2" />
<text  x="656.29" y="735.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.02%)</title><rect x="672.1" y="613" width="0.2" height="15.0" fill="rgb(248,44,36)" rx="2" ry="2" />
<text  x="675.05" y="623.5" ></text>
</g>
<g >
<title>finish_td (2 samples, 0.04%)</title><rect x="143.0" y="773" width="0.5" height="15.0" fill="rgb(214,36,49)" rx="2" ry="2" />
<text  x="146.04" y="783.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.02%)</title><rect x="405.0" y="565" width="0.3" height="15.0" fill="rgb(205,10,20)" rx="2" ry="2" />
<text  x="408.02" y="575.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="476.7" y="741" width="0.2" height="15.0" fill="rgb(212,126,27)" rx="2" ry="2" />
<text  x="479.71" y="751.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="443.3" y="677" width="0.2" height="15.0" fill="rgb(234,88,0)" rx="2" ry="2" />
<text  x="446.27" y="687.5" ></text>
</g>
<g >
<title>find (3 samples, 0.06%)</title><rect x="659.1" y="645" width="0.7" height="15.0" fill="rgb(211,114,2)" rx="2" ry="2" />
<text  x="662.06" y="655.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandControlVariables (94 samples, 1.92%)</title><rect x="506.8" y="725" width="22.6" height="15.0" fill="rgb(207,217,26)" rx="2" ry="2" />
<text  x="509.78" y="735.5" >G..</text>
</g>
<g >
<title>__GI___writev (1 samples, 0.02%)</title><rect x="662.9" y="581" width="0.2" height="15.0" fill="rgb(228,48,46)" rx="2" ry="2" />
<text  x="665.91" y="591.5" ></text>
</g>
<g >
<title>std::get_temporary_buffer&lt;Drawable*&gt; (1 samples, 0.02%)</title><rect x="477.9" y="725" width="0.3" height="15.0" fill="rgb(212,19,9)" rx="2" ry="2" />
<text  x="480.91" y="735.5" ></text>
</g>
<g >
<title>pixman_transform_point (2 samples, 0.04%)</title><rect x="309.8" y="661" width="0.4" height="15.0" fill="rgb(248,217,24)" rx="2" ry="2" />
<text  x="312.75" y="671.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1109.2" y="693" width="0.2" height="15.0" fill="rgb(226,219,18)" rx="2" ry="2" />
<text  x="1112.17" y="703.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1107.5" y="677" width="0.2" height="15.0" fill="rgb(221,198,45)" rx="2" ry="2" />
<text  x="1110.48" y="687.5" ></text>
</g>
<g >
<title>do_syscall_64 (120 samples, 2.45%)</title><rect x="1080.5" y="741" width="28.9" height="15.0" fill="rgb(238,20,24)" rx="2" ry="2" />
<text  x="1083.54" y="751.5" >do..</text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (66 samples, 1.35%)</title><rect x="549.4" y="725" width="15.8" height="15.0" fill="rgb(253,22,48)" rx="2" ry="2" />
<text  x="552.36" y="735.5" ></text>
</g>
<g >
<title>[[heap]] (13 samples, 0.27%)</title><rect x="145.7" y="933" width="3.1" height="15.0" fill="rgb(238,167,22)" rx="2" ry="2" />
<text  x="148.68" y="943.5" ></text>
</g>
<g >
<title>ret_from_intr (10 samples, 0.20%)</title><rect x="1044.2" y="725" width="2.4" height="15.0" fill="rgb(238,214,33)" rx="2" ry="2" />
<text  x="1047.21" y="735.5" ></text>
</g>
<g >
<title>Graphics::RegisterDrawable (1 samples, 0.02%)</title><rect x="151.5" y="917" width="0.2" height="15.0" fill="rgb(213,53,32)" rx="2" ry="2" />
<text  x="154.46" y="927.5" ></text>
</g>
<g >
<title>__fdget_pos (1 samples, 0.02%)</title><rect x="140.4" y="869" width="0.2" height="15.0" fill="rgb(225,125,22)" rx="2" ry="2" />
<text  x="143.39" y="879.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1140.0" y="757" width="0.2" height="15.0" fill="rgb(237,62,14)" rx="2" ry="2" />
<text  x="1142.96" y="767.5" ></text>
</g>
<g >
<title>__x64_sys_ppoll (107 samples, 2.18%)</title><rect x="112.0" y="901" width="25.7" height="15.0" fill="rgb(213,116,31)" rx="2" ry="2" />
<text  x="115.00" y="911.5" >_..</text>
</g>
<g >
<title>Game_Variables_Class::Get (4 samples, 0.08%)</title><rect x="505.8" y="709" width="1.0" height="15.0" fill="rgb(216,122,10)" rx="2" ry="2" />
<text  x="508.82" y="719.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::get (1 samples, 0.02%)</title><rect x="289.8" y="789" width="0.2" height="15.0" fill="rgb(247,66,29)" rx="2" ry="2" />
<text  x="292.78" y="799.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1132.5" y="645" width="0.2" height="15.0" fill="rgb(251,20,16)" rx="2" ry="2" />
<text  x="1135.50" y="655.5" ></text>
</g>
<g >
<title>std::__stable_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (2 samples, 0.04%)</title><rect x="293.4" y="757" width="0.5" height="15.0" fill="rgb(248,69,39)" rx="2" ry="2" />
<text  x="296.39" y="767.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="545.3" y="661" width="0.2" height="15.0" fill="rgb(241,49,54)" rx="2" ry="2" />
<text  x="548.27" y="671.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::operator= (1 samples, 0.02%)</title><rect x="545.0" y="677" width="0.3" height="15.0" fill="rgb(230,80,38)" rx="2" ry="2" />
<text  x="548.03" y="687.5" ></text>
</g>
<g >
<title>usb_submit_urb (1 samples, 0.02%)</title><rect x="143.3" y="677" width="0.2" height="15.0" fill="rgb(233,176,39)" rx="2" ry="2" />
<text  x="146.28" y="687.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="406.2" y="677" width="0.3" height="15.0" fill="rgb(251,121,38)" rx="2" ry="2" />
<text  x="409.22" y="687.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="405.5" y="645" width="0.5" height="15.0" fill="rgb(253,115,30)" rx="2" ry="2" />
<text  x="408.50" y="655.5" ></text>
</g>
<g >
<title>__libc_recvmsg (2 samples, 0.04%)</title><rect x="661.2" y="613" width="0.5" height="15.0" fill="rgb(251,15,27)" rx="2" ry="2" />
<text  x="664.23" y="623.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (1 samples, 0.02%)</title><rect x="658.3" y="517" width="0.3" height="15.0" fill="rgb(206,3,7)" rx="2" ry="2" />
<text  x="661.34" y="527.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.02%)</title><rect x="544.8" y="597" width="0.2" height="15.0" fill="rgb(225,22,19)" rx="2" ry="2" />
<text  x="547.79" y="607.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.02%)</title><rect x="529.2" y="501" width="0.2" height="15.0" fill="rgb(241,112,1)" rx="2" ry="2" />
<text  x="532.15" y="511.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.02%)</title><rect x="165.2" y="709" width="0.2" height="15.0" fill="rgb(233,17,0)" rx="2" ry="2" />
<text  x="168.17" y="719.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="663.4" y="661" width="0.2" height="15.0" fill="rgb(219,174,10)" rx="2" ry="2" />
<text  x="666.39" y="671.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (1 samples, 0.02%)</title><rect x="671.3" y="597" width="0.3" height="15.0" fill="rgb(252,211,18)" rx="2" ry="2" />
<text  x="674.33" y="607.5" ></text>
</g>
<g >
<title>snd_usb_endpoint_next_packet_size (1 samples, 0.02%)</title><rect x="634.8" y="421" width="0.2" height="15.0" fill="rgb(209,229,9)" rx="2" ry="2" />
<text  x="637.76" y="431.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="544.8" y="693" width="0.2" height="15.0" fill="rgb(243,23,52)" rx="2" ry="2" />
<text  x="547.79" y="703.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.02%)</title><rect x="549.1" y="597" width="0.3" height="15.0" fill="rgb(251,69,45)" rx="2" ry="2" />
<text  x="552.12" y="607.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.02%)</title><rect x="548.4" y="437" width="0.2" height="15.0" fill="rgb(223,42,14)" rx="2" ry="2" />
<text  x="551.40" y="447.5" ></text>
</g>
<g >
<title>operator() (1 samples, 0.02%)</title><rect x="656.9" y="741" width="0.2" height="15.0" fill="rgb(206,163,11)" rx="2" ry="2" />
<text  x="659.90" y="751.5" ></text>
</g>
<g >
<title>Game_Party::UpdateTimers (1 samples, 0.02%)</title><rect x="244.6" y="917" width="0.2" height="15.0" fill="rgb(205,95,47)" rx="2" ry="2" />
<text  x="247.56" y="927.5" ></text>
</g>
<g >
<title>BaseUi::GetDisplaySurface (1 samples, 0.02%)</title><rect x="148.8" y="917" width="0.2" height="15.0" fill="rgb(238,27,24)" rx="2" ry="2" />
<text  x="151.81" y="927.5" ></text>
</g>
<g >
<title>Bitmap::height (1 samples, 0.02%)</title><rect x="563.8" y="597" width="0.2" height="15.0" fill="rgb(231,72,15)" rx="2" ry="2" />
<text  x="566.79" y="607.5" ></text>
</g>
<g >
<title>handle_irq_event (5 samples, 0.10%)</title><rect x="142.3" y="869" width="1.2" height="15.0" fill="rgb(217,71,34)" rx="2" ry="2" />
<text  x="145.31" y="879.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.02%)</title><rect x="404.8" y="469" width="0.2" height="15.0" fill="rgb(246,72,5)" rx="2" ry="2" />
<text  x="407.78" y="479.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="1064.7" y="549" width="0.2" height="15.0" fill="rgb(217,77,36)" rx="2" ry="2" />
<text  x="1067.66" y="559.5" ></text>
</g>
<g >
<title>vfs_read (11 samples, 0.22%)</title><rect x="137.7" y="869" width="2.7" height="15.0" fill="rgb(228,89,21)" rx="2" ry="2" />
<text  x="140.74" y="879.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="661.2" y="597" width="0.5" height="15.0" fill="rgb(213,57,34)" rx="2" ry="2" />
<text  x="664.23" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::end (1 samples, 0.02%)</title><rect x="549.4" y="645" width="0.2" height="15.0" fill="rgb(247,141,21)" rx="2" ry="2" />
<text  x="552.36" y="655.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="1140.0" y="709" width="0.2" height="15.0" fill="rgb(233,179,30)" rx="2" ry="2" />
<text  x="1142.96" y="719.5" ></text>
</g>
<g >
<title>AsyncNext&lt;Scene_Map::UpdateStage1(MapUpdateAsyncContext)::&lt;lambda()&gt; &gt; (1 samples, 0.02%)</title><rect x="657.4" y="773" width="0.2" height="15.0" fill="rgb(230,55,14)" rx="2" ry="2" />
<text  x="660.38" y="783.5" ></text>
</g>
<g >
<title>std::__merge_sort_loop&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (1 samples, 0.02%)</title><rect x="479.8" y="709" width="0.3" height="15.0" fill="rgb(241,225,36)" rx="2" ry="2" />
<text  x="482.83" y="719.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (97 samples, 1.98%)</title><rect x="113.9" y="853" width="23.4" height="15.0" fill="rgb(251,199,6)" rx="2" ry="2" />
<text  x="116.93" y="863.5" >s..</text>
</g>
<g >
<title>__exchange_and_add (1 samples, 0.02%)</title><rect x="408.4" y="661" width="0.2" height="15.0" fill="rgb(226,39,15)" rx="2" ry="2" />
<text  x="411.39" y="671.5" ></text>
</g>
<g >
<title>Bitmap::Create (24 samples, 0.49%)</title><rect x="553.0" y="597" width="5.7" height="15.0" fill="rgb(233,111,40)" rx="2" ry="2" />
<text  x="555.97" y="607.5" ></text>
</g>
<g >
<title>Game_Map::SetNeedRefresh (1 samples, 0.02%)</title><rect x="150.5" y="917" width="0.2" height="15.0" fill="rgb(229,68,49)" rx="2" ry="2" />
<text  x="153.49" y="927.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (52 samples, 1.06%)</title><rect x="296.0" y="693" width="12.5" height="15.0" fill="rgb(234,144,13)" rx="2" ry="2" />
<text  x="299.04" y="703.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (1 samples, 0.02%)</title><rect x="406.7" y="709" width="0.2" height="15.0" fill="rgb(226,212,28)" rx="2" ry="2" />
<text  x="409.70" y="719.5" ></text>
</g>
<g >
<title>irq_exit (4 samples, 0.08%)</title><rect x="241.2" y="885" width="1.0" height="15.0" fill="rgb(214,21,46)" rx="2" ry="2" />
<text  x="244.19" y="895.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (54 samples, 1.10%)</title><rect x="1051.9" y="613" width="13.0" height="15.0" fill="rgb(242,89,53)" rx="2" ry="2" />
<text  x="1054.91" y="623.5" ></text>
</g>
<g >
<title>LoadBitmap (3 samples, 0.06%)</title><rect x="659.1" y="661" width="0.7" height="15.0" fill="rgb(216,82,14)" rx="2" ry="2" />
<text  x="662.06" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (1 samples, 0.02%)</title><rect x="154.8" y="917" width="0.3" height="15.0" fill="rgb(236,35,38)" rx="2" ry="2" />
<text  x="157.82" y="927.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.06%)</title><rect x="661.7" y="597" width="0.7" height="15.0" fill="rgb(217,124,17)" rx="2" ry="2" />
<text  x="664.71" y="607.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="405.7" y="597" width="0.3" height="15.0" fill="rgb(246,19,0)" rx="2" ry="2" />
<text  x="408.74" y="607.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.02%)</title><rect x="254.9" y="917" width="0.2" height="15.0" fill="rgb(230,114,29)" rx="2" ry="2" />
<text  x="257.90" y="927.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (17 samples, 0.35%)</title><rect x="472.6" y="741" width="4.1" height="15.0" fill="rgb(216,35,15)" rx="2" ry="2" />
<text  x="475.62" y="751.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (18 samples, 0.37%)</title><rect x="668.2" y="773" width="4.3" height="15.0" fill="rgb(214,151,29)" rx="2" ry="2" />
<text  x="671.20" y="783.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (1 samples, 0.02%)</title><rect x="559.9" y="549" width="0.3" height="15.0" fill="rgb(205,69,9)" rx="2" ry="2" />
<text  x="562.94" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (10 samples, 0.20%)</title><rect x="665.8" y="693" width="2.4" height="15.0" fill="rgb(247,156,21)" rx="2" ry="2" />
<text  x="668.80" y="703.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="476.7" y="757" width="0.2" height="15.0" fill="rgb(211,6,28)" rx="2" ry="2" />
<text  x="479.71" y="767.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="574.4" y="693" width="0.2" height="15.0" fill="rgb(227,158,8)" rx="2" ry="2" />
<text  x="577.38" y="703.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1064.7" y="517" width="0.2" height="15.0" fill="rgb(208,209,1)" rx="2" ry="2" />
<text  x="1067.66" y="527.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.02%)</title><rect x="113.7" y="869" width="0.2" height="15.0" fill="rgb(219,59,32)" rx="2" ry="2" />
<text  x="116.69" y="879.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.02%)</title><rect x="1041.3" y="613" width="0.3" height="15.0" fill="rgb(245,109,20)" rx="2" ry="2" />
<text  x="1044.33" y="623.5" ></text>
</g>
<g >
<title>Sprite::SetZ (1 samples, 0.02%)</title><rect x="655.9" y="725" width="0.3" height="15.0" fill="rgb(223,78,43)" rx="2" ry="2" />
<text  x="658.93" y="735.5" ></text>
</g>
<g >
<title>pixman_image_get_width@plt (1 samples, 0.02%)</title><rect x="407.7" y="741" width="0.2" height="15.0" fill="rgb(218,167,22)" rx="2" ry="2" />
<text  x="410.66" y="751.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (15 samples, 0.31%)</title><rect x="469.0" y="693" width="3.6" height="15.0" fill="rgb(221,188,38)" rx="2" ry="2" />
<text  x="472.01" y="703.5" ></text>
</g>
<g >
<title>_XStoreEventCookie (1 samples, 0.02%)</title><rect x="662.7" y="693" width="0.2" height="15.0" fill="rgb(242,14,53)" rx="2" ry="2" />
<text  x="665.67" y="703.5" ></text>
</g>
<g >
<title>run_rebalance_domains (2 samples, 0.04%)</title><rect x="468.3" y="677" width="0.5" height="15.0" fill="rgb(253,146,17)" rx="2" ry="2" />
<text  x="471.29" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (1 samples, 0.02%)</title><rect x="545.3" y="677" width="0.2" height="15.0" fill="rgb(236,24,40)" rx="2" ry="2" />
<text  x="548.27" y="687.5" ></text>
</g>
<g >
<title>Bitmap::StretchBlit (399 samples, 8.13%)</title><rect x="310.5" y="709" width="96.0" height="15.0" fill="rgb(205,225,49)" rx="2" ry="2" />
<text  x="313.47" y="719.5" >Bitmap::Str..</text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="574.4" y="645" width="0.2" height="15.0" fill="rgb(231,202,0)" rx="2" ry="2" />
<text  x="577.38" y="655.5" ></text>
</g>
<g >
<title>Game_Player::GetScreenZ (1 samples, 0.02%)</title><rect x="660.3" y="757" width="0.2" height="15.0" fill="rgb(237,167,17)" rx="2" ry="2" />
<text  x="663.26" y="767.5" ></text>
</g>
<g >
<title>select_idle_sibling (1 samples, 0.02%)</title><rect x="134.9" y="565" width="0.2" height="15.0" fill="rgb(236,117,46)" rx="2" ry="2" />
<text  x="137.86" y="575.5" ></text>
</g>
<g >
<title>xhci_get_frame (1 samples, 0.02%)</title><rect x="143.0" y="613" width="0.3" height="15.0" fill="rgb(235,202,35)" rx="2" ry="2" />
<text  x="146.04" y="623.5" ></text>
</g>
<g >
<title>common_file_perm (1 samples, 0.02%)</title><rect x="139.7" y="821" width="0.2" height="15.0" fill="rgb(213,100,28)" rx="2" ry="2" />
<text  x="142.67" y="831.5" ></text>
</g>
<g >
<title>Game_Picture::SetNonEffectParams (1 samples, 0.02%)</title><rect x="548.2" y="693" width="0.2" height="15.0" fill="rgb(212,203,14)" rx="2" ry="2" />
<text  x="551.16" y="703.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1155.6" y="677" width="0.2" height="15.0" fill="rgb(222,155,3)" rx="2" ry="2" />
<text  x="1158.60" y="687.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (2 samples, 0.04%)</title><rect x="669.2" y="533" width="0.4" height="15.0" fill="rgb(238,59,45)" rx="2" ry="2" />
<text  x="672.16" y="543.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="1133.0" y="645" width="0.2" height="15.0" fill="rgb(231,204,33)" rx="2" ry="2" />
<text  x="1135.98" y="655.5" ></text>
</g>
<g >
<title>Scene::MainFunction (3,705 samples, 75.54%)</title><rect x="291.7" y="837" width="891.3" height="15.0" fill="rgb(208,13,38)" rx="2" ry="2" />
<text  x="294.71" y="847.5" >Scene::MainFunction</text>
</g>
<g >
<title>std::_Rb_tree_increment (7 samples, 0.14%)</title><rect x="290.0" y="805" width="1.7" height="15.0" fill="rgb(231,142,4)" rx="2" ry="2" />
<text  x="293.02" y="815.5" ></text>
</g>
<g >
<title>__mnt_want_write_file (1 samples, 0.02%)</title><rect x="141.8" y="789" width="0.3" height="15.0" fill="rgb(232,104,22)" rx="2" ry="2" />
<text  x="144.83" y="799.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="562.1" y="597" width="0.3" height="15.0" fill="rgb(250,161,1)" rx="2" ry="2" />
<text  x="565.11" y="607.5" ></text>
</g>
<g >
<title>apparmor_file_permission (2 samples, 0.04%)</title><rect x="139.2" y="821" width="0.5" height="15.0" fill="rgb(253,118,31)" rx="2" ry="2" />
<text  x="142.19" y="831.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (1 samples, 0.02%)</title><rect x="1041.1" y="725" width="0.2" height="15.0" fill="rgb(236,69,46)" rx="2" ry="2" />
<text  x="1044.09" y="735.5" ></text>
</g>
<g >
<title>XFindOnExtensionList (1 samples, 0.02%)</title><rect x="157.7" y="917" width="0.3" height="15.0" fill="rgb(227,12,30)" rx="2" ry="2" />
<text  x="160.71" y="927.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.02%)</title><rect x="242.2" y="805" width="0.2" height="15.0" fill="rgb(253,71,31)" rx="2" ry="2" />
<text  x="245.15" y="815.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (11 samples, 0.22%)</title><rect x="1041.3" y="725" width="2.7" height="15.0" fill="rgb(245,76,4)" rx="2" ry="2" />
<text  x="1044.33" y="735.5" ></text>
</g>
<g >
<title>read_pages (1 samples, 0.02%)</title><rect x="558.5" y="133" width="0.2" height="15.0" fill="rgb(247,102,25)" rx="2" ry="2" />
<text  x="561.50" y="143.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (37 samples, 0.75%)</title><rect x="566.2" y="725" width="8.9" height="15.0" fill="rgb(220,176,42)" rx="2" ry="2" />
<text  x="569.20" y="735.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.02%)</title><rect x="1135.4" y="597" width="0.2" height="15.0" fill="rgb(251,134,46)" rx="2" ry="2" />
<text  x="1138.39" y="607.5" ></text>
</g>
<g >
<title>SDLAudioP2 (559 samples, 11.40%)</title><rect x="10.0" y="949" width="134.5" height="15.0" fill="rgb(221,165,13)" rx="2" ry="2" />
<text  x="13.00" y="959.5" >SDLAudioP2</text>
</g>
<g >
<title>irq_work_run_list (2 samples, 0.04%)</title><rect x="1132.0" y="597" width="0.5" height="15.0" fill="rgb(246,79,53)" rx="2" ry="2" />
<text  x="1135.02" y="607.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (6 samples, 0.12%)</title><rect x="669.2" y="693" width="1.4" height="15.0" fill="rgb(238,162,26)" rx="2" ry="2" />
<text  x="672.16" y="703.5" ></text>
</g>
<g >
<title>Game_Player::UpdateSelfMovement (1 samples, 0.02%)</title><rect x="150.7" y="917" width="0.3" height="15.0" fill="rgb(236,200,26)" rx="2" ry="2" />
<text  x="153.73" y="927.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (17 samples, 0.35%)</title><rect x="472.6" y="677" width="4.1" height="15.0" fill="rgb(229,120,2)" rx="2" ry="2" />
<text  x="475.62" y="687.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (4 samples, 0.08%)</title><rect x="143.5" y="933" width="1.0" height="15.0" fill="rgb(226,124,54)" rx="2" ry="2" />
<text  x="146.52" y="943.5" ></text>
</g>
<g >
<title>Game_Picture::Move (6 samples, 0.12%)</title><rect x="547.0" y="709" width="1.4" height="15.0" fill="rgb(211,10,37)" rx="2" ry="2" />
<text  x="549.95" y="719.5" ></text>
</g>
<g >
<title>LoadBitmap&lt;(&lt;unnamed&gt;::Material::Type)8&gt; (43 samples, 0.88%)</title><rect x="552.0" y="613" width="10.4" height="15.0" fill="rgb(232,30,4)" rx="2" ry="2" />
<text  x="555.01" y="623.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (1 samples, 0.02%)</title><rect x="669.4" y="501" width="0.2" height="15.0" fill="rgb(214,182,54)" rx="2" ry="2" />
<text  x="672.40" y="511.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (1 samples, 0.02%)</title><rect x="408.4" y="725" width="0.2" height="15.0" fill="rgb(252,214,38)" rx="2" ry="2" />
<text  x="411.39" y="735.5" ></text>
</g>
<g >
<title>Window_Selectable::Update (6 samples, 0.12%)</title><rect x="658.6" y="757" width="1.4" height="15.0" fill="rgb(208,126,19)" rx="2" ry="2" />
<text  x="661.58" y="767.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (2 samples, 0.04%)</title><rect x="407.9" y="693" width="0.5" height="15.0" fill="rgb(219,75,5)" rx="2" ry="2" />
<text  x="410.90" y="703.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**&gt; (1 samples, 0.02%)</title><rect x="293.6" y="693" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="296.63" y="703.5" ></text>
</g>
<g >
<title>file_update_time (1 samples, 0.02%)</title><rect x="141.8" y="805" width="0.3" height="15.0" fill="rgb(222,229,27)" rx="2" ry="2" />
<text  x="144.83" y="815.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="1155.6" y="709" width="0.2" height="15.0" fill="rgb(243,220,14)" rx="2" ry="2" />
<text  x="1158.60" y="719.5" ></text>
</g>
<g >
<title>std::ios_base::getloc (1 samples, 0.02%)</title><rect x="481.5" y="773" width="0.3" height="15.0" fill="rgb(217,105,19)" rx="2" ry="2" />
<text  x="484.52" y="783.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.08%)</title><rect x="165.6" y="885" width="1.0" height="15.0" fill="rgb(234,100,13)" rx="2" ry="2" />
<text  x="168.65" y="895.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1155.6" y="757" width="0.2" height="15.0" fill="rgb(206,148,22)" rx="2" ry="2" />
<text  x="1158.60" y="767.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="1067.1" y="661" width="0.2" height="15.0" fill="rgb(236,206,20)" rx="2" ry="2" />
<text  x="1070.07" y="671.5" ></text>
</g>
<g >
<title>Bitmap::GetWidth (1 samples, 0.02%)</title><rect x="655.2" y="725" width="0.3" height="15.0" fill="rgb(228,220,50)" rx="2" ry="2" />
<text  x="658.21" y="735.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (2 samples, 0.04%)</title><rect x="1042.0" y="661" width="0.5" height="15.0" fill="rgb(217,26,1)" rx="2" ry="2" />
<text  x="1045.05" y="671.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="661.5" y="469" width="0.2" height="15.0" fill="rgb(244,14,30)" rx="2" ry="2" />
<text  x="664.47" y="479.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.02%)</title><rect x="1109.2" y="613" width="0.2" height="15.0" fill="rgb(208,74,49)" rx="2" ry="2" />
<text  x="1112.17" y="623.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (4 samples, 0.08%)</title><rect x="549.6" y="645" width="1.0" height="15.0" fill="rgb(232,7,11)" rx="2" ry="2" />
<text  x="552.60" y="655.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="443.7" y="661" width="0.3" height="15.0" fill="rgb(218,75,21)" rx="2" ry="2" />
<text  x="446.75" y="671.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="1132.3" y="517" width="0.2" height="15.0" fill="rgb(238,13,10)" rx="2" ry="2" />
<text  x="1135.26" y="527.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1064.7" y="501" width="0.2" height="15.0" fill="rgb(215,181,47)" rx="2" ry="2" />
<text  x="1067.66" y="511.5" ></text>
</g>
<g >
<title>Game_Picture::Show (65 samples, 1.33%)</title><rect x="549.4" y="709" width="15.6" height="15.0" fill="rgb(240,48,15)" rx="2" ry="2" />
<text  x="552.36" y="719.5" ></text>
</g>
<g >
<title>Window_NumberInput::UpdateCursorRect (1 samples, 0.02%)</title><rect x="658.1" y="741" width="0.2" height="15.0" fill="rgb(228,56,34)" rx="2" ry="2" />
<text  x="661.10" y="751.5" ></text>
</g>
<g >
<title>x86_pmu_enable (9 samples, 0.18%)</title><rect x="556.1" y="85" width="2.2" height="15.0" fill="rgb(218,17,16)" rx="2" ry="2" />
<text  x="559.10" y="95.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::swap (1 samples, 0.02%)</title><rect x="545.0" y="661" width="0.3" height="15.0" fill="rgb(205,165,1)" rx="2" ry="2" />
<text  x="548.03" y="671.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="165.2" y="773" width="0.2" height="15.0" fill="rgb(240,171,32)" rx="2" ry="2" />
<text  x="168.17" y="783.5" ></text>
</g>
<g >
<title>__sched_text_start (3 samples, 0.06%)</title><rect x="165.9" y="821" width="0.7" height="15.0" fill="rgb(234,183,34)" rx="2" ry="2" />
<text  x="168.89" y="831.5" ></text>
</g>
<g >
<title>syscall (8 samples, 0.16%)</title><rect x="166.6" y="917" width="1.9" height="15.0" fill="rgb(215,96,24)" rx="2" ry="2" />
<text  x="169.61" y="927.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (2 samples, 0.04%)</title><rect x="255.9" y="917" width="0.4" height="15.0" fill="rgb(254,101,21)" rx="2" ry="2" />
<text  x="258.86" y="927.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.06%)</title><rect x="549.6" y="581" width="0.7" height="15.0" fill="rgb(216,119,2)" rx="2" ry="2" />
<text  x="552.60" y="591.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="664.8" y="709" width="0.3" height="15.0" fill="rgb(237,171,23)" rx="2" ry="2" />
<text  x="667.83" y="719.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="443.0" y="613" width="0.3" height="15.0" fill="rgb(226,91,45)" rx="2" ry="2" />
<text  x="446.03" y="623.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.02%)</title><rect x="242.2" y="789" width="0.2" height="15.0" fill="rgb(221,73,49)" rx="2" ry="2" />
<text  x="245.15" y="799.5" ></text>
</g>
<g >
<title>fread (1 samples, 0.02%)</title><rect x="548.4" y="597" width="0.2" height="15.0" fill="rgb(230,94,49)" rx="2" ry="2" />
<text  x="551.40" y="607.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.02%)</title><rect x="634.8" y="469" width="0.2" height="15.0" fill="rgb(248,44,52)" rx="2" ry="2" />
<text  x="637.76" y="479.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="242.6" y="901" width="0.3" height="15.0" fill="rgb(208,181,28)" rx="2" ry="2" />
<text  x="245.63" y="911.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (3 samples, 0.06%)</title><rect x="478.9" y="661" width="0.7" height="15.0" fill="rgb(208,64,48)" rx="2" ry="2" />
<text  x="481.87" y="671.5" ></text>
</g>
<g >
<title>pixman_image_get_height (1 samples, 0.02%)</title><rect x="563.8" y="581" width="0.2" height="15.0" fill="rgb(233,38,49)" rx="2" ry="2" />
<text  x="566.79" y="591.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (3 samples, 0.06%)</title><rect x="559.0" y="501" width="0.7" height="15.0" fill="rgb(207,201,35)" rx="2" ry="2" />
<text  x="561.98" y="511.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (9 samples, 0.18%)</title><rect x="556.1" y="53" width="2.2" height="15.0" fill="rgb(237,1,42)" rx="2" ry="2" />
<text  x="559.10" y="63.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.06%)</title><rect x="1187.1" y="917" width="0.7" height="15.0" fill="rgb(229,176,15)" rx="2" ry="2" />
<text  x="1190.11" y="927.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="443.3" y="645" width="0.2" height="15.0" fill="rgb(224,188,36)" rx="2" ry="2" />
<text  x="446.27" y="655.5" ></text>
</g>
<g >
<title>Bitmap::Blit (124 samples, 2.53%)</title><rect x="414.4" y="741" width="29.8" height="15.0" fill="rgb(244,39,6)" rx="2" ry="2" />
<text  x="417.40" y="751.5" >Bi..</text>
</g>
<g >
<title>__hrtimer_get_next_event (1 samples, 0.02%)</title><rect x="443.5" y="661" width="0.2" height="15.0" fill="rgb(206,132,5)" rx="2" ry="2" />
<text  x="446.51" y="671.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (50 samples, 1.02%)</title><rect x="1120.0" y="597" width="12.0" height="15.0" fill="rgb(209,222,16)" rx="2" ry="2" />
<text  x="1122.99" y="607.5" ></text>
</g>
<g >
<title>Game_Picture::Update (11 samples, 0.22%)</title><rect x="654.5" y="757" width="2.6" height="15.0" fill="rgb(225,30,28)" rx="2" ry="2" />
<text  x="657.49" y="767.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (54 samples, 1.10%)</title><rect x="551.8" y="677" width="13.0" height="15.0" fill="rgb(209,149,13)" rx="2" ry="2" />
<text  x="554.77" y="687.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_clone (1 samples, 0.02%)</title><rect x="551.0" y="565" width="0.3" height="15.0" fill="rgb(205,122,31)" rx="2" ry="2" />
<text  x="554.04" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="656.7" y="725" width="0.2" height="15.0" fill="rgb(235,193,42)" rx="2" ry="2" />
<text  x="659.65" y="735.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (75 samples, 1.53%)</title><rect x="1047.3" y="693" width="18.1" height="15.0" fill="rgb(249,160,54)" rx="2" ry="2" />
<text  x="1050.34" y="703.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (5 samples, 0.10%)</title><rect x="549.4" y="677" width="1.2" height="15.0" fill="rgb(240,112,29)" rx="2" ry="2" />
<text  x="552.36" y="687.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="476.7" y="661" width="0.2" height="15.0" fill="rgb(251,175,7)" rx="2" ry="2" />
<text  x="479.71" y="671.5" ></text>
</g>
<g >
<title>Rect::Adjust (1 samples, 0.02%)</title><rect x="406.9" y="741" width="0.3" height="15.0" fill="rgb(206,35,44)" rx="2" ry="2" />
<text  x="409.94" y="751.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.04%)</title><rect x="466.6" y="661" width="0.5" height="15.0" fill="rgb(221,177,22)" rx="2" ry="2" />
<text  x="469.60" y="671.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="468.8" y="741" width="0.2" height="15.0" fill="rgb(232,58,26)" rx="2" ry="2" />
<text  x="471.77" y="751.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (2 samples, 0.04%)</title><rect x="307.8" y="677" width="0.5" height="15.0" fill="rgb(207,197,54)" rx="2" ry="2" />
<text  x="310.83" y="687.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="647.0" y="661" width="0.3" height="15.0" fill="rgb(238,88,20)" rx="2" ry="2" />
<text  x="650.03" y="671.5" ></text>
</g>
<g >
<title>handle_edge_irq (3 samples, 0.06%)</title><rect x="634.5" y="661" width="0.7" height="15.0" fill="rgb(213,62,24)" rx="2" ry="2" />
<text  x="637.52" y="671.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.02%)</title><rect x="669.4" y="485" width="0.2" height="15.0" fill="rgb(211,54,9)" rx="2" ry="2" />
<text  x="672.40" y="495.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (1 samples, 0.02%)</title><rect x="408.4" y="693" width="0.2" height="15.0" fill="rgb(225,38,15)" rx="2" ry="2" />
<text  x="411.39" y="703.5" ></text>
</g>
<g >
<title>smp_irq_work_interrupt (1 samples, 0.02%)</title><rect x="134.9" y="757" width="0.2" height="15.0" fill="rgb(254,65,34)" rx="2" ry="2" />
<text  x="137.86" y="767.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1 samples, 0.02%)</title><rect x="555.9" y="181" width="0.2" height="15.0" fill="rgb(240,39,19)" rx="2" ry="2" />
<text  x="558.86" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="670.8" y="597" width="0.3" height="15.0" fill="rgb(240,124,46)" rx="2" ry="2" />
<text  x="673.85" y="607.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipTo (245 samples, 4.99%)</title><rect x="576.5" y="725" width="59.0" height="15.0" fill="rgb(244,220,11)" rx="2" ry="2" />
<text  x="579.54" y="735.5" >Game_I..</text>
</g>
<g >
<title>tcache_get (1 samples, 0.02%)</title><rect x="662.7" y="661" width="0.2" height="15.0" fill="rgb(252,224,54)" rx="2" ry="2" />
<text  x="665.67" y="671.5" ></text>
</g>
<g >
<title>ret_from_intr (4 samples, 0.08%)</title><rect x="404.5" y="661" width="1.0" height="15.0" fill="rgb(208,100,7)" rx="2" ry="2" />
<text  x="407.54" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="671.6" y="693" width="0.2" height="15.0" fill="rgb(210,132,8)" rx="2" ry="2" />
<text  x="674.57" y="703.5" ></text>
</g>
<g >
<title>usb_hcd_get_frame_number (1 samples, 0.02%)</title><rect x="404.8" y="357" width="0.2" height="15.0" fill="rgb(213,223,26)" rx="2" ry="2" />
<text  x="407.78" y="367.5" ></text>
</g>
<g >
<title>iconv (1 samples, 0.02%)</title><rect x="480.6" y="741" width="0.2" height="15.0" fill="rgb(225,76,53)" rx="2" ry="2" />
<text  x="483.56" y="751.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (1 samples, 0.02%)</title><rect x="658.3" y="565" width="0.3" height="15.0" fill="rgb(217,168,53)" rx="2" ry="2" />
<text  x="661.34" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.02%)</title><rect x="560.2" y="453" width="0.2" height="15.0" fill="rgb(247,133,24)" rx="2" ry="2" />
<text  x="563.19" y="463.5" ></text>
</g>
<g >
<title>ext4_data_block_valid (1 samples, 0.02%)</title><rect x="558.5" y="53" width="0.2" height="15.0" fill="rgb(210,108,45)" rx="2" ry="2" />
<text  x="561.50" y="63.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (1 samples, 0.02%)</title><rect x="479.8" y="693" width="0.3" height="15.0" fill="rgb(207,198,50)" rx="2" ry="2" />
<text  x="482.83" y="703.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (1,554 samples, 31.68%)</title><rect x="673.3" y="741" width="373.8" height="15.0" fill="rgb(234,179,29)" rx="2" ry="2" />
<text  x="676.25" y="751.5" >[libSDL2-2.0.so.0.9.0]</text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator++ (109 samples, 2.22%)</title><rect x="263.3" y="805" width="26.2" height="15.0" fill="rgb(243,213,46)" rx="2" ry="2" />
<text  x="266.32" y="815.5" >s..</text>
</g>
<g >
<title>FpsOverlay::GetZ (1 samples, 0.02%)</title><rect x="293.4" y="661" width="0.2" height="15.0" fill="rgb(221,38,11)" rx="2" ry="2" />
<text  x="296.39" y="671.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (2 samples, 0.04%)</title><rect x="1189.5" y="933" width="0.5" height="15.0" fill="rgb(212,30,34)" rx="2" ry="2" />
<text  x="1192.52" y="943.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (2 samples, 0.04%)</title><rect x="634.5" y="613" width="0.5" height="15.0" fill="rgb(237,158,46)" rx="2" ry="2" />
<text  x="637.52" y="623.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.04%)</title><rect x="669.9" y="517" width="0.5" height="15.0" fill="rgb(207,90,35)" rx="2" ry="2" />
<text  x="672.89" y="527.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.02%)</title><rect x="140.4" y="837" width="0.2" height="15.0" fill="rgb(235,107,1)" rx="2" ry="2" />
<text  x="143.39" y="847.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="405.7" y="629" width="0.3" height="15.0" fill="rgb(235,181,11)" rx="2" ry="2" />
<text  x="408.74" y="639.5" ></text>
</g>
<g >
<title>Window_NumberInput::Update (2 samples, 0.04%)</title><rect x="658.1" y="757" width="0.5" height="15.0" fill="rgb(223,196,14)" rx="2" ry="2" />
<text  x="661.10" y="767.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="529.2" y="709" width="0.2" height="15.0" fill="rgb(253,120,42)" rx="2" ry="2" />
<text  x="532.15" y="719.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="481.0" y="741" width="0.3" height="15.0" fill="rgb(244,214,38)" rx="2" ry="2" />
<text  x="484.04" y="751.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.02%)</title><rect x="1132.5" y="453" width="0.2" height="15.0" fill="rgb(250,156,45)" rx="2" ry="2" />
<text  x="1135.50" y="463.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="443.7" y="613" width="0.3" height="15.0" fill="rgb(214,164,41)" rx="2" ry="2" />
<text  x="446.75" y="623.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="672.1" y="629" width="0.2" height="15.0" fill="rgb(212,45,27)" rx="2" ry="2" />
<text  x="675.05" y="639.5" ></text>
</g>
<g >
<title>do_nanosleep (10 samples, 0.20%)</title><rect x="665.8" y="661" width="2.4" height="15.0" fill="rgb(211,32,16)" rx="2" ry="2" />
<text  x="668.80" y="671.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1135.4" y="773" width="0.2" height="15.0" fill="rgb(236,131,8)" rx="2" ry="2" />
<text  x="1138.39" y="783.5" ></text>
</g>
<g >
<title>_copy_to_user (1 samples, 0.02%)</title><rect x="1105.3" y="693" width="0.3" height="15.0" fill="rgb(230,88,12)" rx="2" ry="2" />
<text  x="1108.32" y="703.5" ></text>
</g>
<g >
<title>__GI___nanosleep (66 samples, 1.35%)</title><rect x="1118.1" y="789" width="15.8" height="15.0" fill="rgb(245,156,4)" rx="2" ry="2" />
<text  x="1121.07" y="799.5" ></text>
</g>
<g >
<title>rcu_check_callbacks (2 samples, 0.04%)</title><rect x="1041.6" y="613" width="0.4" height="15.0" fill="rgb(223,166,7)" rx="2" ry="2" />
<text  x="1044.57" y="623.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="1064.4" y="533" width="0.3" height="15.0" fill="rgb(245,191,29)" rx="2" ry="2" />
<text  x="1067.42" y="543.5" ></text>
</g>
<g >
<title>__update_load_avg_se (1 samples, 0.02%)</title><rect x="1182.5" y="597" width="0.3" height="15.0" fill="rgb(250,219,42)" rx="2" ry="2" />
<text  x="1185.54" y="607.5" ></text>
</g>
<g >
<title>Cache::System (5 samples, 0.10%)</title><rect x="658.6" y="709" width="1.2" height="15.0" fill="rgb(248,89,28)" rx="2" ry="2" />
<text  x="661.58" y="719.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="647.0" y="645" width="0.3" height="15.0" fill="rgb(253,128,32)" rx="2" ry="2" />
<text  x="650.03" y="655.5" ></text>
</g>
<g >
<title>___sys_recvmsg (3 samples, 0.06%)</title><rect x="669.2" y="549" width="0.7" height="15.0" fill="rgb(237,149,25)" rx="2" ry="2" />
<text  x="672.16" y="559.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="468.8" y="709" width="0.2" height="15.0" fill="rgb(249,30,6)" rx="2" ry="2" />
<text  x="471.77" y="719.5" ></text>
</g>
<g >
<title>std::__move_merge_adaptive_backward&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (1 samples, 0.02%)</title><rect x="293.4" y="709" width="0.2" height="15.0" fill="rgb(236,210,14)" rx="2" ry="2" />
<text  x="296.39" y="719.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.02%)</title><rect x="1119.5" y="645" width="0.3" height="15.0" fill="rgb(246,185,22)" rx="2" ry="2" />
<text  x="1122.51" y="655.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1155.6" y="661" width="0.2" height="15.0" fill="rgb(215,134,33)" rx="2" ry="2" />
<text  x="1158.60" y="671.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (1 samples, 0.02%)</title><rect x="559.9" y="533" width="0.3" height="15.0" fill="rgb(239,53,0)" rx="2" ry="2" />
<text  x="562.94" y="543.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1109.4" y="757" width="0.2" height="15.0" fill="rgb(243,82,26)" rx="2" ry="2" />
<text  x="1112.41" y="767.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.02%)</title><rect x="564.3" y="597" width="0.2" height="15.0" fill="rgb(251,56,24)" rx="2" ry="2" />
<text  x="567.28" y="607.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.02%)</title><rect x="1140.0" y="629" width="0.2" height="15.0" fill="rgb(243,41,1)" rx="2" ry="2" />
<text  x="1142.96" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2 samples, 0.04%)</title><rect x="256.8" y="901" width="0.5" height="15.0" fill="rgb(232,91,25)" rx="2" ry="2" />
<text  x="259.83" y="911.5" ></text>
</g>
<g >
<title>anon_pipe_buf_release (1 samples, 0.02%)</title><rect x="138.0" y="821" width="0.2" height="15.0" fill="rgb(246,19,52)" rx="2" ry="2" />
<text  x="140.98" y="831.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="108.2" y="853" width="0.2" height="15.0" fill="rgb(220,3,6)" rx="2" ry="2" />
<text  x="111.15" y="863.5" ></text>
</g>
<g >
<title>handle_irq (3 samples, 0.06%)</title><rect x="404.5" y="629" width="0.8" height="15.0" fill="rgb(252,115,17)" rx="2" ry="2" />
<text  x="407.54" y="639.5" ></text>
</g>
<g >
<title>Spriteset_Map::Update (2 samples, 0.04%)</title><rect x="660.0" y="789" width="0.5" height="15.0" fill="rgb(240,48,2)" rx="2" ry="2" />
<text  x="663.02" y="799.5" ></text>
</g>
<g >
<title>available_idle_cpu (1 samples, 0.02%)</title><rect x="134.9" y="549" width="0.2" height="15.0" fill="rgb(205,173,34)" rx="2" ry="2" />
<text  x="137.86" y="559.5" ></text>
</g>
<g >
<title>xhci_queue_isoc_tx_prepare (1 samples, 0.02%)</title><rect x="1046.1" y="421" width="0.3" height="15.0" fill="rgb(210,90,4)" rx="2" ry="2" />
<text  x="1049.14" y="431.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1140.2" y="757" width="0.2" height="15.0" fill="rgb(240,188,14)" rx="2" ry="2" />
<text  x="1143.20" y="767.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.02%)</title><rect x="574.4" y="581" width="0.2" height="15.0" fill="rgb(226,21,34)" rx="2" ry="2" />
<text  x="577.38" y="591.5" ></text>
</g>
<g >
<title>std::stable_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, bool (*)(Drawable const*, Drawable const*)&gt; (11 samples, 0.22%)</title><rect x="477.9" y="773" width="2.7" height="15.0" fill="rgb(211,50,53)" rx="2" ry="2" />
<text  x="480.91" y="783.5" ></text>
</g>
<g >
<title>Transition::IsActive (2 samples, 0.04%)</title><rect x="1183.0" y="853" width="0.5" height="15.0" fill="rgb(209,8,12)" rx="2" ry="2" />
<text  x="1186.02" y="863.5" ></text>
</g>
<g >
<title>Bitmap::GetOperator (1 samples, 0.02%)</title><rect x="415.8" y="709" width="0.3" height="15.0" fill="rgb(220,169,49)" rx="2" ry="2" />
<text  x="418.84" y="719.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1132.5" y="613" width="0.2" height="15.0" fill="rgb(245,169,5)" rx="2" ry="2" />
<text  x="1135.50" y="623.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.02%)</title><rect x="137.0" y="789" width="0.3" height="15.0" fill="rgb(211,95,40)" rx="2" ry="2" />
<text  x="140.02" y="799.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1107.5" y="629" width="0.2" height="15.0" fill="rgb(249,69,36)" rx="2" ry="2" />
<text  x="1110.48" y="639.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.04%)</title><rect x="468.3" y="725" width="0.5" height="15.0" fill="rgb(242,200,3)" rx="2" ry="2" />
<text  x="471.29" y="735.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (15 samples, 0.31%)</title><rect x="469.0" y="677" width="3.6" height="15.0" fill="rgb(244,111,25)" rx="2" ry="2" />
<text  x="472.01" y="687.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (7 samples, 0.14%)</title><rect x="666.0" y="597" width="1.7" height="15.0" fill="rgb(220,98,2)" rx="2" ry="2" />
<text  x="669.04" y="607.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (1 samples, 0.02%)</title><rect x="156.3" y="917" width="0.2" height="15.0" fill="rgb(206,209,8)" rx="2" ry="2" />
<text  x="159.27" y="927.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (4 samples, 0.08%)</title><rect x="152.7" y="917" width="0.9" height="15.0" fill="rgb(222,144,19)" rx="2" ry="2" />
<text  x="155.66" y="927.5" ></text>
</g>
<g >
<title>Player::MainLoop (3,849 samples, 78.47%)</title><rect x="257.5" y="869" width="926.0" height="15.0" fill="rgb(210,111,24)" rx="2" ry="2" />
<text  x="260.55" y="879.5" >Player::MainLoop</text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="555.4" y="309" width="0.2" height="15.0" fill="rgb(226,115,16)" rx="2" ry="2" />
<text  x="558.37" y="319.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (63 samples, 1.28%)</title><rect x="1050.2" y="645" width="15.2" height="15.0" fill="rgb(219,86,45)" rx="2" ry="2" />
<text  x="1053.23" y="655.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="1133.5" y="629" width="0.2" height="15.0" fill="rgb(249,61,0)" rx="2" ry="2" />
<text  x="1136.47" y="639.5" ></text>
</g>
<g >
<title>Graphics::IsTransitionPending (1 samples, 0.02%)</title><rect x="1157.5" y="805" width="0.3" height="15.0" fill="rgb(250,147,12)" rx="2" ry="2" />
<text  x="1160.52" y="815.5" ></text>
</g>
<g >
<title>__sched_text_start (10 samples, 0.20%)</title><rect x="665.8" y="629" width="2.4" height="15.0" fill="rgb(233,102,28)" rx="2" ry="2" />
<text  x="668.80" y="639.5" ></text>
</g>
<g >
<title>find (4 samples, 0.08%)</title><rect x="559.0" y="565" width="0.9" height="15.0" fill="rgb(239,104,35)" rx="2" ry="2" />
<text  x="561.98" y="575.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="165.2" y="789" width="0.2" height="15.0" fill="rgb(245,8,4)" rx="2" ry="2" />
<text  x="168.17" y="799.5" ></text>
</g>
<g >
<title>usb_hcd_get_frame_number (1 samples, 0.02%)</title><rect x="143.0" y="629" width="0.3" height="15.0" fill="rgb(240,100,7)" rx="2" ry="2" />
<text  x="146.04" y="639.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.02%)</title><rect x="443.3" y="581" width="0.2" height="15.0" fill="rgb(232,101,51)" rx="2" ry="2" />
<text  x="446.27" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (3 samples, 0.06%)</title><rect x="1079.6" y="741" width="0.7" height="15.0" fill="rgb(226,30,4)" rx="2" ry="2" />
<text  x="1082.58" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (1 samples, 0.02%)</title><rect x="154.6" y="917" width="0.2" height="15.0" fill="rgb(226,122,50)" rx="2" ry="2" />
<text  x="157.58" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Val_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;Drawable*, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="479.6" y="661" width="0.2" height="15.0" fill="rgb(206,168,35)" rx="2" ry="2" />
<text  x="482.59" y="671.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.02%)</title><rect x="154.3" y="917" width="0.3" height="15.0" fill="rgb(237,196,38)" rx="2" ry="2" />
<text  x="157.34" y="927.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (15 samples, 0.31%)</title><rect x="469.0" y="709" width="3.6" height="15.0" fill="rgb(224,23,46)" rx="2" ry="2" />
<text  x="472.01" y="719.5" ></text>
</g>
<g >
<title>Scene::IsAsyncPending (1 samples, 0.02%)</title><rect x="151.7" y="917" width="0.2" height="15.0" fill="rgb(215,32,9)" rx="2" ry="2" />
<text  x="154.70" y="927.5" ></text>
</g>
<g >
<title>do_syscall_64 (134 samples, 2.73%)</title><rect x="109.8" y="917" width="32.3" height="15.0" fill="rgb(213,134,18)" rx="2" ry="2" />
<text  x="112.84" y="927.5" >do..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1134.7" y="725" width="0.2" height="15.0" fill="rgb(254,91,3)" rx="2" ry="2" />
<text  x="1137.67" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (8 samples, 0.16%)</title><rect x="1157.8" y="789" width="1.9" height="15.0" fill="rgb(246,167,31)" rx="2" ry="2" />
<text  x="1160.76" y="799.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (6 samples, 0.12%)</title><rect x="240.7" y="917" width="1.5" height="15.0" fill="rgb(252,194,37)" rx="2" ry="2" />
<text  x="243.71" y="927.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="544.8" y="645" width="0.2" height="15.0" fill="rgb(220,41,19)" rx="2" ry="2" />
<text  x="547.79" y="655.5" ></text>
</g>
<g >
<title>smp_irq_work_interrupt (2 samples, 0.04%)</title><rect x="1132.0" y="629" width="0.5" height="15.0" fill="rgb(236,178,29)" rx="2" ry="2" />
<text  x="1135.02" y="639.5" ></text>
</g>
<g >
<title>schedule (59 samples, 1.20%)</title><rect x="1119.5" y="693" width="14.2" height="15.0" fill="rgb(234,26,19)" rx="2" ry="2" />
<text  x="1122.51" y="703.5" ></text>
</g>
<g >
<title>__check_block_validity.constprop.85 (1 samples, 0.02%)</title><rect x="558.5" y="69" width="0.2" height="15.0" fill="rgb(252,214,37)" rx="2" ry="2" />
<text  x="561.50" y="79.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (8 samples, 0.16%)</title><rect x="1042.0" y="677" width="2.0" height="15.0" fill="rgb(252,125,16)" rx="2" ry="2" />
<text  x="1045.05" y="687.5" ></text>
</g>
<g >
<title>select_task_rq_fair (1 samples, 0.02%)</title><rect x="1042.0" y="549" width="0.3" height="15.0" fill="rgb(210,198,13)" rx="2" ry="2" />
<text  x="1045.05" y="559.5" ></text>
</g>
<g >
<title>memcpy_erms (1 samples, 0.02%)</title><rect x="165.2" y="565" width="0.2" height="15.0" fill="rgb(245,66,20)" rx="2" ry="2" />
<text  x="168.17" y="575.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (9 samples, 0.18%)</title><rect x="556.1" y="69" width="2.2" height="15.0" fill="rgb(205,61,28)" rx="2" ry="2" />
<text  x="559.10" y="79.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="1132.5" y="597" width="0.2" height="15.0" fill="rgb(212,150,47)" rx="2" ry="2" />
<text  x="1135.50" y="607.5" ></text>
</g>
<g >
<title>__GI__IO_fread (1 samples, 0.02%)</title><rect x="548.4" y="581" width="0.2" height="15.0" fill="rgb(206,8,23)" rx="2" ry="2" />
<text  x="551.40" y="591.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingForegroundExecution (1 samples, 0.02%)</title><rect x="654.0" y="709" width="0.2" height="15.0" fill="rgb(210,100,26)" rx="2" ry="2" />
<text  x="657.01" y="719.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="635.2" y="677" width="0.3" height="15.0" fill="rgb(209,78,14)" rx="2" ry="2" />
<text  x="638.24" y="687.5" ></text>
</g>
<g >
<title>Player::IncFrame (1 samples, 0.02%)</title><rect x="1159.9" y="805" width="0.3" height="15.0" fill="rgb(248,137,1)" rx="2" ry="2" />
<text  x="1162.93" y="815.5" ></text>
</g>
<g >
<title>usb_hcd_submit_urb (1 samples, 0.02%)</title><rect x="1046.1" y="453" width="0.3" height="15.0" fill="rgb(242,129,3)" rx="2" ry="2" />
<text  x="1049.14" y="463.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1135.4" y="789" width="0.2" height="15.0" fill="rgb(221,163,53)" rx="2" ry="2" />
<text  x="1138.39" y="799.5" ></text>
</g>
<g >
<title>ImageBMP::ReadBMP (3 samples, 0.06%)</title><rect x="554.7" y="421" width="0.7" height="15.0" fill="rgb(215,55,37)" rx="2" ry="2" />
<text  x="557.65" y="431.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.02%)</title><rect x="551.0" y="517" width="0.3" height="15.0" fill="rgb(242,188,48)" rx="2" ry="2" />
<text  x="554.04" y="527.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="1046.6" y="725" width="0.5" height="15.0" fill="rgb(241,73,31)" rx="2" ry="2" />
<text  x="1049.62" y="735.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="1046.9" y="597" width="0.2" height="15.0" fill="rgb(240,38,17)" rx="2" ry="2" />
<text  x="1049.86" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_poll (1 samples, 0.02%)</title><rect x="672.1" y="677" width="0.2" height="15.0" fill="rgb(217,134,7)" rx="2" ry="2" />
<text  x="675.05" y="687.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (76 samples, 1.55%)</title><rect x="1047.1" y="725" width="18.3" height="15.0" fill="rgb(240,208,46)" rx="2" ry="2" />
<text  x="1050.10" y="735.5" ></text>
</g>
<g >
<title>read_tsc (5 samples, 0.10%)</title><rect x="1101.7" y="677" width="1.2" height="15.0" fill="rgb(214,124,15)" rx="2" ry="2" />
<text  x="1104.71" y="687.5" ></text>
</g>
<g >
<title>do_writev (1 samples, 0.02%)</title><rect x="670.8" y="565" width="0.3" height="15.0" fill="rgb(239,180,41)" rx="2" ry="2" />
<text  x="673.85" y="575.5" ></text>
</g>
<g >
<title>_XEventsQueued (6 samples, 0.12%)</title><rect x="661.0" y="709" width="1.4" height="15.0" fill="rgb(229,165,49)" rx="2" ry="2" />
<text  x="663.98" y="719.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (1 samples, 0.02%)</title><rect x="660.7" y="709" width="0.3" height="15.0" fill="rgb(241,120,5)" rx="2" ry="2" />
<text  x="663.74" y="719.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (1 samples, 0.02%)</title><rect x="564.8" y="597" width="0.2" height="15.0" fill="rgb(222,136,7)" rx="2" ry="2" />
<text  x="567.76" y="607.5" ></text>
</g>
<g >
<title>__fget (3 samples, 0.06%)</title><rect x="112.2" y="837" width="0.8" height="15.0" fill="rgb(236,131,7)" rx="2" ry="2" />
<text  x="115.24" y="847.5" ></text>
</g>
<g >
<title>update_sd_lb_stats (1 samples, 0.02%)</title><rect x="1132.7" y="613" width="0.3" height="15.0" fill="rgb(236,64,53)" rx="2" ry="2" />
<text  x="1135.74" y="623.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="443.5" y="677" width="0.2" height="15.0" fill="rgb(233,100,27)" rx="2" ry="2" />
<text  x="446.51" y="687.5" ></text>
</g>
<g >
<title>_XFlush (1 samples, 0.02%)</title><rect x="662.9" y="677" width="0.2" height="15.0" fill="rgb(237,130,27)" rx="2" ry="2" />
<text  x="665.91" y="687.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.02%)</title><rect x="529.2" y="581" width="0.2" height="15.0" fill="rgb(236,78,31)" rx="2" ry="2" />
<text  x="532.15" y="591.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="1182.5" y="629" width="0.3" height="15.0" fill="rgb(237,91,19)" rx="2" ry="2" />
<text  x="1185.54" y="639.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.04%)</title><rect x="256.8" y="917" width="0.5" height="15.0" fill="rgb(220,36,19)" rx="2" ry="2" />
<text  x="259.83" y="927.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1064.7" y="565" width="0.2" height="15.0" fill="rgb(208,79,25)" rx="2" ry="2" />
<text  x="1067.66" y="575.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="442.5" y="645" width="0.3" height="15.0" fill="rgb(231,135,50)" rx="2" ry="2" />
<text  x="445.55" y="655.5" ></text>
</g>
<g >
<title>std::ostream::sentry::~sentry (1 samples, 0.02%)</title><rect x="482.0" y="741" width="0.2" height="15.0" fill="rgb(212,151,27)" rx="2" ry="2" />
<text  x="485.00" y="751.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2 samples, 0.04%)</title><rect x="108.9" y="933" width="0.5" height="15.0" fill="rgb(237,50,18)" rx="2" ry="2" />
<text  x="111.87" y="943.5" ></text>
</g>
<g >
<title>pipe_poll (1 samples, 0.02%)</title><rect x="137.3" y="885" width="0.2" height="15.0" fill="rgb(233,77,26)" rx="2" ry="2" />
<text  x="140.26" y="895.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="560.2" y="405" width="0.2" height="15.0" fill="rgb(253,186,30)" rx="2" ry="2" />
<text  x="563.19" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="551.0" y="533" width="0.3" height="15.0" fill="rgb(230,14,17)" rx="2" ry="2" />
<text  x="554.04" y="543.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.04%)</title><rect x="1070.4" y="725" width="0.5" height="15.0" fill="rgb(223,97,14)" rx="2" ry="2" />
<text  x="1073.44" y="735.5" ></text>
</g>
<g >
<title>AudioSeCache::Decode (3 samples, 0.06%)</title><rect x="548.6" y="629" width="0.8" height="15.0" fill="rgb(224,164,9)" rx="2" ry="2" />
<text  x="551.64" y="639.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (50 samples, 1.02%)</title><rect x="1120.0" y="645" width="12.0" height="15.0" fill="rgb(233,47,10)" rx="2" ry="2" />
<text  x="1122.99" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (3 samples, 0.06%)</title><rect x="165.9" y="869" width="0.7" height="15.0" fill="rgb(240,99,23)" rx="2" ry="2" />
<text  x="168.89" y="879.5" ></text>
</g>
<g >
<title>pixman_image_composite32@plt (1 samples, 0.02%)</title><rect x="444.0" y="725" width="0.2" height="15.0" fill="rgb(231,85,50)" rx="2" ry="2" />
<text  x="446.99" y="735.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (9 samples, 0.18%)</title><rect x="556.1" y="101" width="2.2" height="15.0" fill="rgb(248,222,32)" rx="2" ry="2" />
<text  x="559.10" y="111.5" ></text>
</g>
<g >
<title>vfs_writev (1 samples, 0.02%)</title><rect x="662.9" y="501" width="0.2" height="15.0" fill="rgb(252,170,5)" rx="2" ry="2" />
<text  x="665.91" y="511.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (2 samples, 0.04%)</title><rect x="407.9" y="709" width="0.5" height="15.0" fill="rgb(217,72,26)" rx="2" ry="2" />
<text  x="410.90" y="719.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="468.3" y="661" width="0.2" height="15.0" fill="rgb(238,197,54)" rx="2" ry="2" />
<text  x="471.29" y="671.5" ></text>
</g>
<g >
<title>pick_next_task_rt (1 samples, 0.02%)</title><rect x="635.2" y="629" width="0.3" height="15.0" fill="rgb(235,98,37)" rx="2" ry="2" />
<text  x="638.24" y="639.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (1 samples, 0.02%)</title><rect x="657.4" y="757" width="0.2" height="15.0" fill="rgb(250,130,15)" rx="2" ry="2" />
<text  x="660.38" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (4 samples, 0.08%)</title><rect x="549.6" y="629" width="1.0" height="15.0" fill="rgb(246,158,49)" rx="2" ry="2" />
<text  x="552.60" y="639.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="647.0" y="677" width="0.3" height="15.0" fill="rgb(217,79,40)" rx="2" ry="2" />
<text  x="650.03" y="687.5" ></text>
</g>
<g >
<title>Game_Map::GetTerrainTag (1 samples, 0.02%)</title><rect x="565.5" y="709" width="0.2" height="15.0" fill="rgb(249,46,42)" rx="2" ry="2" />
<text  x="568.48" y="719.5" ></text>
</g>
<g >
<title>xhci_urb_enqueue (1 samples, 0.02%)</title><rect x="1046.1" y="437" width="0.3" height="15.0" fill="rgb(249,15,19)" rx="2" ry="2" />
<text  x="1049.14" y="447.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingForegroundExecution (1 samples, 0.02%)</title><rect x="653.3" y="757" width="0.2" height="15.0" fill="rgb(254,150,8)" rx="2" ry="2" />
<text  x="656.29" y="767.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (1 samples, 0.02%)</title><rect x="663.4" y="645" width="0.2" height="15.0" fill="rgb(220,212,37)" rx="2" ry="2" />
<text  x="666.39" y="655.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (16 samples, 0.33%)</title><rect x="161.3" y="837" width="3.9" height="15.0" fill="rgb(226,148,30)" rx="2" ry="2" />
<text  x="164.32" y="847.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="443.7" y="677" width="0.3" height="15.0" fill="rgb(211,105,28)" rx="2" ry="2" />
<text  x="446.75" y="687.5" ></text>
</g>
<g >
<title>__GI__IO_fread (13 samples, 0.27%)</title><rect x="555.6" y="421" width="3.1" height="15.0" fill="rgb(218,185,20)" rx="2" ry="2" />
<text  x="558.61" y="431.5" ></text>
</g>
<g >
<title>operator!= (1 samples, 0.02%)</title><rect x="407.2" y="741" width="0.2" height="15.0" fill="rgb(227,122,21)" rx="2" ry="2" />
<text  x="410.18" y="751.5" ></text>
</g>
<g >
<title>SdlMixerAudio::Update (2 samples, 0.04%)</title><rect x="1066.8" y="805" width="0.5" height="15.0" fill="rgb(222,132,31)" rx="2" ry="2" />
<text  x="1069.83" y="815.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (1 samples, 0.02%)</title><rect x="560.2" y="565" width="0.2" height="15.0" fill="rgb(222,104,47)" rx="2" ry="2" />
<text  x="563.19" y="575.5" ></text>
</g>
<g >
<title>__sys_recvmsg (1 samples, 0.02%)</title><rect x="662.2" y="565" width="0.2" height="15.0" fill="rgb(239,87,47)" rx="2" ry="2" />
<text  x="665.19" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (1 samples, 0.02%)</title><rect x="656.7" y="709" width="0.2" height="15.0" fill="rgb(250,89,43)" rx="2" ry="2" />
<text  x="659.65" y="719.5" ></text>
</g>
<g >
<title>handle_irq (10 samples, 0.20%)</title><rect x="1044.2" y="693" width="2.4" height="15.0" fill="rgb(247,120,35)" rx="2" ry="2" />
<text  x="1047.21" y="703.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.02%)</title><rect x="548.4" y="469" width="0.2" height="15.0" fill="rgb(239,194,17)" rx="2" ry="2" />
<text  x="551.40" y="479.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (7 samples, 0.14%)</title><rect x="560.4" y="581" width="1.7" height="15.0" fill="rgb(213,55,6)" rx="2" ry="2" />
<text  x="563.43" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="545.3" y="693" width="0.2" height="15.0" fill="rgb(225,88,9)" rx="2" ry="2" />
<text  x="548.27" y="703.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.02%)</title><rect x="529.2" y="533" width="0.2" height="15.0" fill="rgb(241,61,44)" rx="2" ry="2" />
<text  x="532.15" y="543.5" ></text>
</g>
<g >
<title>xhci_msi_irq (2 samples, 0.04%)</title><rect x="634.5" y="597" width="0.5" height="15.0" fill="rgb(213,167,18)" rx="2" ry="2" />
<text  x="637.52" y="607.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (2 samples, 0.04%)</title><rect x="480.6" y="757" width="0.4" height="15.0" fill="rgb(252,148,30)" rx="2" ry="2" />
<text  x="483.56" y="767.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (7 samples, 0.14%)</title><rect x="560.4" y="565" width="1.7" height="15.0" fill="rgb(212,70,15)" rx="2" ry="2" />
<text  x="563.43" y="575.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="443.5" y="693" width="0.2" height="15.0" fill="rgb(212,5,31)" rx="2" ry="2" />
<text  x="446.51" y="703.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="1064.4" y="517" width="0.3" height="15.0" fill="rgb(239,60,52)" rx="2" ry="2" />
<text  x="1067.42" y="527.5" ></text>
</g>
<g >
<title>Game_Map::LoopVertical (1 samples, 0.02%)</title><rect x="412.5" y="757" width="0.2" height="15.0" fill="rgb(216,188,24)" rx="2" ry="2" />
<text  x="415.48" y="767.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="553.9" y="357" width="0.3" height="15.0" fill="rgb(211,184,38)" rx="2" ry="2" />
<text  x="556.93" y="367.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (5 samples, 0.10%)</title><rect x="142.3" y="837" width="1.2" height="15.0" fill="rgb(213,227,21)" rx="2" ry="2" />
<text  x="145.31" y="847.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (1 samples, 0.02%)</title><rect x="145.7" y="885" width="0.2" height="15.0" fill="rgb(246,91,38)" rx="2" ry="2" />
<text  x="148.68" y="895.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="287.1" y="741" width="0.3" height="15.0" fill="rgb(237,151,40)" rx="2" ry="2" />
<text  x="290.14" y="751.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.02%)</title><rect x="529.2" y="517" width="0.2" height="15.0" fill="rgb(245,133,43)" rx="2" ry="2" />
<text  x="532.15" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (1 samples, 0.02%)</title><rect x="662.2" y="581" width="0.2" height="15.0" fill="rgb(245,203,51)" rx="2" ry="2" />
<text  x="665.19" y="591.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="574.4" y="677" width="0.2" height="15.0" fill="rgb(230,89,14)" rx="2" ry="2" />
<text  x="577.38" y="687.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (1 samples, 0.02%)</title><rect x="671.3" y="725" width="0.3" height="15.0" fill="rgb(233,91,11)" rx="2" ry="2" />
<text  x="674.33" y="735.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.02%)</title><rect x="165.2" y="661" width="0.2" height="15.0" fill="rgb(253,115,42)" rx="2" ry="2" />
<text  x="168.17" y="671.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (17 samples, 0.35%)</title><rect x="472.6" y="725" width="4.1" height="15.0" fill="rgb(218,104,50)" rx="2" ry="2" />
<text  x="475.62" y="735.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (1 samples, 0.02%)</title><rect x="253.7" y="869" width="0.2" height="15.0" fill="rgb(206,79,51)" rx="2" ry="2" />
<text  x="256.70" y="879.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (1 samples, 0.02%)</title><rect x="635.2" y="549" width="0.3" height="15.0" fill="rgb(215,27,15)" rx="2" ry="2" />
<text  x="638.24" y="559.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.02%)</title><rect x="1135.4" y="677" width="0.2" height="15.0" fill="rgb(251,162,46)" rx="2" ry="2" />
<text  x="1138.39" y="687.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (1 samples, 0.02%)</title><rect x="665.8" y="613" width="0.2" height="15.0" fill="rgb(239,55,40)" rx="2" ry="2" />
<text  x="668.80" y="623.5" ></text>
</g>
<g >
<title>Game_Screen::GetPicture (1 samples, 0.02%)</title><rect x="545.3" y="709" width="0.2" height="15.0" fill="rgb(229,163,2)" rx="2" ry="2" />
<text  x="548.27" y="719.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1132.5" y="565" width="0.2" height="15.0" fill="rgb(244,120,47)" rx="2" ry="2" />
<text  x="1135.50" y="575.5" ></text>
</g>
<g >
<title>run_rebalance_domains (2 samples, 0.04%)</title><rect x="1070.4" y="693" width="0.5" height="15.0" fill="rgb(245,146,25)" rx="2" ry="2" />
<text  x="1073.44" y="703.5" ></text>
</g>
<g >
<title>__GI___libc_read (13 samples, 0.27%)</title><rect x="555.6" y="373" width="3.1" height="15.0" fill="rgb(248,17,13)" rx="2" ry="2" />
<text  x="558.61" y="383.5" ></text>
</g>
<g >
<title>xhci_msi_irq (9 samples, 0.18%)</title><rect x="1044.2" y="613" width="2.2" height="15.0" fill="rgb(213,69,34)" rx="2" ry="2" />
<text  x="1047.21" y="623.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::function&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;, void, void&gt; (2 samples, 0.04%)</title><rect x="551.3" y="661" width="0.5" height="15.0" fill="rgb(235,188,36)" rx="2" ry="2" />
<text  x="554.28" y="671.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="553.9" y="325" width="0.3" height="15.0" fill="rgb(225,216,26)" rx="2" ry="2" />
<text  x="556.93" y="335.5" ></text>
</g>
<g >
<title>Bitmap::Init (2 samples, 0.04%)</title><rect x="554.2" y="437" width="0.5" height="15.0" fill="rgb(238,51,46)" rx="2" ry="2" />
<text  x="557.17" y="447.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (1 samples, 0.02%)</title><rect x="559.9" y="565" width="0.3" height="15.0" fill="rgb(229,10,44)" rx="2" ry="2" />
<text  x="562.94" y="575.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="145.7" y="869" width="0.2" height="15.0" fill="rgb(210,53,21)" rx="2" ry="2" />
<text  x="148.68" y="879.5" ></text>
</g>
<g >
<title>pick_next_entity (1 samples, 0.02%)</title><rect x="166.1" y="789" width="0.3" height="15.0" fill="rgb(226,168,40)" rx="2" ry="2" />
<text  x="169.13" y="799.5" ></text>
</g>
<g >
<title>[libGLX_nvidia.so.390.116] (50 samples, 1.02%)</title><rect x="156.5" y="933" width="12.0" height="15.0" fill="rgb(242,147,42)" rx="2" ry="2" />
<text  x="159.51" y="943.5" ></text>
</g>
<g >
<title>__GI___writev (1 samples, 0.02%)</title><rect x="670.8" y="629" width="0.3" height="15.0" fill="rgb(254,21,25)" rx="2" ry="2" />
<text  x="673.85" y="639.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (2 samples, 0.04%)</title><rect x="407.9" y="741" width="0.5" height="15.0" fill="rgb(229,124,38)" rx="2" ry="2" />
<text  x="410.90" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="559.5" y="469" width="0.2" height="15.0" fill="rgb(241,139,27)" rx="2" ry="2" />
<text  x="562.46" y="479.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1064.4" y="565" width="0.3" height="15.0" fill="rgb(207,71,45)" rx="2" ry="2" />
<text  x="1067.42" y="575.5" ></text>
</g>
<g >
<title>Cache::System (1 samples, 0.02%)</title><rect x="658.3" y="693" width="0.3" height="15.0" fill="rgb(251,187,6)" rx="2" ry="2" />
<text  x="661.34" y="703.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (70 samples, 1.43%)</title><rect x="117.8" y="709" width="16.8" height="15.0" fill="rgb(209,21,46)" rx="2" ry="2" />
<text  x="120.78" y="719.5" ></text>
</g>
<g >
<title>std::bitset&lt;32ul&gt;::reference::operator= (2 samples, 0.04%)</title><rect x="546.2" y="709" width="0.5" height="15.0" fill="rgb(248,159,3)" rx="2" ry="2" />
<text  x="549.23" y="719.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.02%)</title><rect x="1132.5" y="501" width="0.2" height="15.0" fill="rgb(241,113,11)" rx="2" ry="2" />
<text  x="1135.50" y="511.5" ></text>
</g>
<g >
<title>__sys_recvmsg (1 samples, 0.02%)</title><rect x="661.9" y="581" width="0.3" height="15.0" fill="rgb(241,169,6)" rx="2" ry="2" />
<text  x="664.95" y="591.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (3 samples, 0.06%)</title><rect x="1045.7" y="501" width="0.7" height="15.0" fill="rgb(240,138,54)" rx="2" ry="2" />
<text  x="1048.66" y="511.5" ></text>
</g>
<g >
<title>task_ctx_sched_out (1 samples, 0.02%)</title><rect x="665.8" y="597" width="0.2" height="15.0" fill="rgb(253,191,26)" rx="2" ry="2" />
<text  x="668.80" y="607.5" ></text>
</g>
<g >
<title>Window_Selectable::Update (1 samples, 0.02%)</title><rect x="658.3" y="741" width="0.3" height="15.0" fill="rgb(210,157,49)" rx="2" ry="2" />
<text  x="661.34" y="751.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (6 samples, 0.12%)</title><rect x="575.1" y="725" width="1.4" height="15.0" fill="rgb(251,53,43)" rx="2" ry="2" />
<text  x="578.10" y="735.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="467.1" y="677" width="0.2" height="15.0" fill="rgb(205,66,28)" rx="2" ry="2" />
<text  x="470.08" y="687.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.02%)</title><rect x="1135.4" y="549" width="0.2" height="15.0" fill="rgb(250,40,27)" rx="2" ry="2" />
<text  x="1138.39" y="559.5" ></text>
</g>
<g >
<title>handle_edge_irq (3 samples, 0.06%)</title><rect x="404.5" y="613" width="0.8" height="15.0" fill="rgb(245,80,18)" rx="2" ry="2" />
<text  x="407.54" y="623.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="476.7" y="677" width="0.2" height="15.0" fill="rgb(211,42,19)" rx="2" ry="2" />
<text  x="479.71" y="687.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (25 samples, 0.51%)</title><rect x="159.4" y="869" width="6.0" height="15.0" fill="rgb(208,122,4)" rx="2" ry="2" />
<text  x="162.39" y="879.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (2 samples, 0.04%)</title><rect x="146.4" y="917" width="0.5" height="15.0" fill="rgb(242,125,31)" rx="2" ry="2" />
<text  x="149.40" y="927.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1182.5" y="709" width="0.3" height="15.0" fill="rgb(213,205,26)" rx="2" ry="2" />
<text  x="1185.54" y="719.5" ></text>
</g>
<g >
<title>Sprite::~Sprite (1 samples, 0.02%)</title><rect x="151.9" y="917" width="0.3" height="15.0" fill="rgb(205,22,4)" rx="2" ry="2" />
<text  x="154.94" y="927.5" ></text>
</g>
<g >
<title>put_timespec64 (1 samples, 0.02%)</title><rect x="663.4" y="629" width="0.2" height="15.0" fill="rgb(231,144,21)" rx="2" ry="2" />
<text  x="666.39" y="639.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.02%)</title><rect x="662.9" y="469" width="0.2" height="15.0" fill="rgb(240,73,29)" rx="2" ry="2" />
<text  x="665.91" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect x="560.2" y="533" width="0.2" height="15.0" fill="rgb(240,116,18)" rx="2" ry="2" />
<text  x="563.19" y="543.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="468.8" y="693" width="0.2" height="15.0" fill="rgb(238,30,49)" rx="2" ry="2" />
<text  x="471.77" y="703.5" ></text>
</g>
<g >
<title>[[stack]] (28 samples, 0.57%)</title><rect x="148.8" y="933" width="6.7" height="15.0" fill="rgb(212,1,18)" rx="2" ry="2" />
<text  x="151.81" y="943.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;1ul&gt;::_S_maskbit (1 samples, 0.02%)</title><rect x="481.3" y="773" width="0.2" height="15.0" fill="rgb(225,211,53)" rx="2" ry="2" />
<text  x="484.28" y="783.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1182.5" y="677" width="0.3" height="15.0" fill="rgb(243,101,51)" rx="2" ry="2" />
<text  x="1185.54" y="687.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (1 samples, 0.02%)</title><rect x="662.9" y="613" width="0.2" height="15.0" fill="rgb(228,154,23)" rx="2" ry="2" />
<text  x="665.91" y="623.5" ></text>
</g>
<g >
<title>__update_load_avg_se (1 samples, 0.02%)</title><rect x="1043.7" y="629" width="0.3" height="15.0" fill="rgb(247,74,31)" rx="2" ry="2" />
<text  x="1046.73" y="639.5" ></text>
</g>
<g >
<title>find (4 samples, 0.08%)</title><rect x="559.0" y="581" width="0.9" height="15.0" fill="rgb(211,87,41)" rx="2" ry="2" />
<text  x="561.98" y="591.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.02%)</title><rect x="1140.0" y="533" width="0.2" height="15.0" fill="rgb(236,117,24)" rx="2" ry="2" />
<text  x="1142.96" y="543.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.04%)</title><rect x="405.5" y="661" width="0.5" height="15.0" fill="rgb(210,90,19)" rx="2" ry="2" />
<text  x="408.50" y="671.5" ></text>
</g>
<g >
<title>native_apic_msr_eoi_write (1 samples, 0.02%)</title><rect x="1046.4" y="645" width="0.2" height="15.0" fill="rgb(219,72,49)" rx="2" ry="2" />
<text  x="1049.38" y="655.5" ></text>
</g>
<g >
<title>sock_poll (1 samples, 0.02%)</title><rect x="137.5" y="885" width="0.2" height="15.0" fill="rgb(219,229,24)" rx="2" ry="2" />
<text  x="140.50" y="895.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="670.8" y="437" width="0.3" height="15.0" fill="rgb(229,111,29)" rx="2" ry="2" />
<text  x="673.85" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (12 samples, 0.24%)</title><rect x="555.9" y="325" width="2.8" height="15.0" fill="rgb(212,209,37)" rx="2" ry="2" />
<text  x="558.86" y="335.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (3 samples, 0.06%)</title><rect x="1041.3" y="693" width="0.7" height="15.0" fill="rgb(229,152,43)" rx="2" ry="2" />
<text  x="1044.33" y="703.5" ></text>
</g>
<g >
<title>ext4_map_blocks (1 samples, 0.02%)</title><rect x="558.5" y="85" width="0.2" height="15.0" fill="rgb(205,64,43)" rx="2" ry="2" />
<text  x="561.50" y="95.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (1 samples, 0.02%)</title><rect x="293.4" y="677" width="0.2" height="15.0" fill="rgb(241,123,20)" rx="2" ry="2" />
<text  x="296.39" y="687.5" ></text>
</g>
<g >
<title>_IO_new_file_underflow (1 samples, 0.02%)</title><rect x="548.4" y="549" width="0.2" height="15.0" fill="rgb(213,90,22)" rx="2" ry="2" />
<text  x="551.40" y="559.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (1 samples, 0.02%)</title><rect x="156.0" y="917" width="0.3" height="15.0" fill="rgb(211,136,27)" rx="2" ry="2" />
<text  x="159.03" y="927.5" ></text>
</g>
<g >
<title>__atomic_add (2 samples, 0.04%)</title><rect x="407.9" y="661" width="0.5" height="15.0" fill="rgb(244,132,2)" rx="2" ry="2" />
<text  x="410.90" y="671.5" ></text>
</g>
<g >
<title>do_sched_yield (3 samples, 0.06%)</title><rect x="165.9" y="853" width="0.7" height="15.0" fill="rgb(208,228,13)" rx="2" ry="2" />
<text  x="168.89" y="863.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.02%)</title><rect x="1135.4" y="661" width="0.2" height="15.0" fill="rgb(244,180,16)" rx="2" ry="2" />
<text  x="1138.39" y="671.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="308.3" y="677" width="0.2" height="15.0" fill="rgb(236,167,22)" rx="2" ry="2" />
<text  x="311.31" y="687.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (208 samples, 4.24%)</title><rect x="1068.0" y="773" width="50.1" height="15.0" fill="rgb(207,181,36)" rx="2" ry="2" />
<text  x="1071.03" y="783.5" >__vds..</text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (7 samples, 0.14%)</title><rect x="560.4" y="597" width="1.7" height="15.0" fill="rgb(235,187,25)" rx="2" ry="2" />
<text  x="563.43" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment@plt (9 samples, 0.18%)</title><rect x="287.4" y="789" width="2.1" height="15.0" fill="rgb(244,223,43)" rx="2" ry="2" />
<text  x="290.38" y="799.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="1109.2" y="661" width="0.2" height="15.0" fill="rgb(213,71,10)" rx="2" ry="2" />
<text  x="1112.17" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_M_lower_bound (1 samples, 0.02%)</title><rect x="658.3" y="581" width="0.3" height="15.0" fill="rgb(214,176,45)" rx="2" ry="2" />
<text  x="661.34" y="591.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (15 samples, 0.31%)</title><rect x="469.0" y="725" width="3.6" height="15.0" fill="rgb(244,204,2)" rx="2" ry="2" />
<text  x="472.01" y="735.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.02%)</title><rect x="165.2" y="645" width="0.2" height="15.0" fill="rgb(250,115,42)" rx="2" ry="2" />
<text  x="168.17" y="655.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.02%)</title><rect x="165.2" y="613" width="0.2" height="15.0" fill="rgb(240,220,15)" rx="2" ry="2" />
<text  x="168.17" y="623.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="442.5" y="613" width="0.3" height="15.0" fill="rgb(206,58,21)" rx="2" ry="2" />
<text  x="445.55" y="623.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (50 samples, 1.02%)</title><rect x="1120.0" y="629" width="12.0" height="15.0" fill="rgb(210,70,36)" rx="2" ry="2" />
<text  x="1122.99" y="639.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (2 samples, 0.04%)</title><rect x="560.9" y="517" width="0.5" height="15.0" fill="rgb(252,226,22)" rx="2" ry="2" />
<text  x="563.91" y="527.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (32 samples, 0.65%)</title><rect x="660.5" y="773" width="7.7" height="15.0" fill="rgb(228,141,31)" rx="2" ry="2" />
<text  x="663.50" y="783.5" ></text>
</g>
<g >
<title>__GI___poll (2 samples, 0.04%)</title><rect x="671.8" y="725" width="0.5" height="15.0" fill="rgb(240,29,29)" rx="2" ry="2" />
<text  x="674.81" y="735.5" ></text>
</g>
<g >
<title>irq_entries_start (1 samples, 0.02%)</title><rect x="139.4" y="805" width="0.3" height="15.0" fill="rgb(254,112,41)" rx="2" ry="2" />
<text  x="142.43" y="815.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (4 samples, 0.08%)</title><rect x="164.2" y="773" width="1.0" height="15.0" fill="rgb(208,68,37)" rx="2" ry="2" />
<text  x="167.21" y="783.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (1 samples, 0.02%)</title><rect x="547.9" y="677" width="0.3" height="15.0" fill="rgb(232,94,30)" rx="2" ry="2" />
<text  x="550.92" y="687.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.02%)</title><rect x="665.8" y="565" width="0.2" height="15.0" fill="rgb(229,125,29)" rx="2" ry="2" />
<text  x="668.80" y="575.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (1 samples, 0.02%)</title><rect x="670.8" y="677" width="0.3" height="15.0" fill="rgb(226,136,22)" rx="2" ry="2" />
<text  x="673.85" y="687.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="443.0" y="629" width="0.3" height="15.0" fill="rgb(248,101,32)" rx="2" ry="2" />
<text  x="446.03" y="639.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Game_Vehicle, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (1 samples, 0.02%)</title><rect x="657.1" y="757" width="0.3" height="15.0" fill="rgb(220,173,41)" rx="2" ry="2" />
<text  x="660.14" y="767.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1064.4" y="597" width="0.3" height="15.0" fill="rgb(240,84,51)" rx="2" ry="2" />
<text  x="1067.42" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (2 samples, 0.04%)</title><rect x="643.9" y="709" width="0.5" height="15.0" fill="rgb(234,124,47)" rx="2" ry="2" />
<text  x="646.90" y="719.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipTo (1 samples, 0.02%)</title><rect x="150.3" y="917" width="0.2" height="15.0" fill="rgb(245,40,25)" rx="2" ry="2" />
<text  x="153.25" y="927.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="136.5" y="677" width="0.3" height="15.0" fill="rgb(239,107,47)" rx="2" ry="2" />
<text  x="139.54" y="687.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (6 samples, 0.12%)</title><rect x="669.2" y="677" width="1.4" height="15.0" fill="rgb(218,7,17)" rx="2" ry="2" />
<text  x="672.16" y="687.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (1 samples, 0.02%)</title><rect x="406.5" y="693" width="0.2" height="15.0" fill="rgb(237,115,45)" rx="2" ry="2" />
<text  x="409.46" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1070.9" y="757" width="0.3" height="15.0" fill="rgb(246,136,23)" rx="2" ry="2" />
<text  x="1073.92" y="767.5" ></text>
</g>
<g >
<title>Bitmap::Blit (55 samples, 1.12%)</title><rect x="295.6" y="725" width="13.2" height="15.0" fill="rgb(216,193,24)" rx="2" ry="2" />
<text  x="298.56" y="735.5" ></text>
</g>
<g >
<title>security_file_permission (4 samples, 0.08%)</title><rect x="139.2" y="837" width="0.9" height="15.0" fill="rgb(219,18,39)" rx="2" ry="2" />
<text  x="142.19" y="847.5" ></text>
</g>
<g >
<title>Game_Picture::SyncCurrentToFinish (1 samples, 0.02%)</title><rect x="654.5" y="741" width="0.2" height="15.0" fill="rgb(219,146,48)" rx="2" ry="2" />
<text  x="657.49" y="751.5" ></text>
</g>
<g >
<title>put_prev_entity (1 samples, 0.02%)</title><rect x="635.2" y="597" width="0.3" height="15.0" fill="rgb(253,10,51)" rx="2" ry="2" />
<text  x="638.24" y="607.5" ></text>
</g>
<g >
<title>AudioSeCache::Create (1 samples, 0.02%)</title><rect x="548.4" y="629" width="0.2" height="15.0" fill="rgb(238,19,34)" rx="2" ry="2" />
<text  x="551.40" y="639.5" ></text>
</g>
<g >
<title>Cache::System (4 samples, 0.08%)</title><rect x="658.8" y="693" width="1.0" height="15.0" fill="rgb(231,12,40)" rx="2" ry="2" />
<text  x="661.82" y="703.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.02%)</title><rect x="668.0" y="613" width="0.2" height="15.0" fill="rgb(223,87,40)" rx="2" ry="2" />
<text  x="670.96" y="623.5" ></text>
</g>
<g >
<title>Game_Map::GetMapId (1 samples, 0.02%)</title><rect x="653.5" y="725" width="0.3" height="15.0" fill="rgb(223,226,41)" rx="2" ry="2" />
<text  x="656.53" y="735.5" ></text>
</g>
<g >
<title>xhci_get_frame (2 samples, 0.04%)</title><rect x="1045.7" y="405" width="0.4" height="15.0" fill="rgb(236,65,37)" rx="2" ry="2" />
<text  x="1048.66" y="415.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1109.2" y="645" width="0.2" height="15.0" fill="rgb(252,39,9)" rx="2" ry="2" />
<text  x="1112.17" y="655.5" ></text>
</g>
<g >
<title>new_sync_write (3 samples, 0.06%)</title><rect x="141.4" y="837" width="0.7" height="15.0" fill="rgb(220,57,49)" rx="2" ry="2" />
<text  x="144.35" y="847.5" ></text>
</g>
<g >
<title>Game_Map::IsPassableTile (1 samples, 0.02%)</title><rect x="653.8" y="693" width="0.2" height="15.0" fill="rgb(216,8,25)" rx="2" ry="2" />
<text  x="656.77" y="703.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (24 samples, 0.49%)</title><rect x="553.0" y="565" width="5.7" height="15.0" fill="rgb(219,120,40)" rx="2" ry="2" />
<text  x="555.97" y="575.5" ></text>
</g>
<g >
<title>do_iter_write (1 samples, 0.02%)</title><rect x="662.9" y="485" width="0.2" height="15.0" fill="rgb(241,94,37)" rx="2" ry="2" />
<text  x="665.91" y="495.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (2 samples, 0.04%)</title><rect x="659.1" y="565" width="0.4" height="15.0" fill="rgb(234,69,37)" rx="2" ry="2" />
<text  x="662.06" y="575.5" ></text>
</g>
<g >
<title>__pollwait (3 samples, 0.06%)</title><rect x="113.0" y="869" width="0.7" height="15.0" fill="rgb(220,177,3)" rx="2" ry="2" />
<text  x="115.96" y="879.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (28 samples, 0.57%)</title><rect x="158.7" y="885" width="6.7" height="15.0" fill="rgb(251,59,2)" rx="2" ry="2" />
<text  x="161.67" y="895.5" ></text>
</g>
<g >
<title>Bitmap::BlitFast (99 samples, 2.02%)</title><rect x="444.2" y="741" width="23.8" height="15.0" fill="rgb(220,164,41)" rx="2" ry="2" />
<text  x="447.23" y="751.5" >B..</text>
</g>
<g >
<title>Game_Vehicle::IsInCurrentMap (1 samples, 0.02%)</title><rect x="653.5" y="741" width="0.3" height="15.0" fill="rgb(239,16,14)" rx="2" ry="2" />
<text  x="656.53" y="751.5" ></text>
</g>
<g >
<title>vfs_writev (1 samples, 0.02%)</title><rect x="670.8" y="549" width="0.3" height="15.0" fill="rgb(235,34,47)" rx="2" ry="2" />
<text  x="673.85" y="559.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.02%)</title><rect x="1140.0" y="581" width="0.2" height="15.0" fill="rgb(209,56,44)" rx="2" ry="2" />
<text  x="1142.96" y="591.5" ></text>
</g>
<g >
<title>default_wake_function (1 samples, 0.02%)</title><rect x="1132.0" y="485" width="0.3" height="15.0" fill="rgb(251,15,35)" rx="2" ry="2" />
<text  x="1135.02" y="495.5" ></text>
</g>
<g >
<title>std::__stable_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (11 samples, 0.22%)</title><rect x="477.9" y="757" width="2.7" height="15.0" fill="rgb(207,110,46)" rx="2" ry="2" />
<text  x="480.91" y="767.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (1 samples, 0.02%)</title><rect x="479.8" y="661" width="0.3" height="15.0" fill="rgb(209,110,37)" rx="2" ry="2" />
<text  x="482.83" y="671.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="136.5" y="709" width="0.3" height="15.0" fill="rgb(239,204,52)" rx="2" ry="2" />
<text  x="139.54" y="719.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (5 samples, 0.10%)</title><rect x="142.3" y="853" width="1.2" height="15.0" fill="rgb(207,97,23)" rx="2" ry="2" />
<text  x="145.31" y="863.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="670.8" y="613" width="0.3" height="15.0" fill="rgb(216,89,41)" rx="2" ry="2" />
<text  x="673.85" y="623.5" ></text>
</g>
<g >
<title>__sched_text_start (96 samples, 1.96%)</title><rect x="114.2" y="805" width="23.1" height="15.0" fill="rgb(233,49,19)" rx="2" ry="2" />
<text  x="117.17" y="815.5" >_..</text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (284 samples, 5.79%)</title><rect x="1067.3" y="805" width="68.3" height="15.0" fill="rgb(251,154,15)" rx="2" ry="2" />
<text  x="1070.31" y="815.5" >[libSDL..</text>
</g>
<g >
<title>FileRequestAsync::IsReady (9 samples, 0.18%)</title><rect x="1138.0" y="789" width="2.2" height="15.0" fill="rgb(241,41,18)" rx="2" ry="2" />
<text  x="1141.04" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_M_lower_bound (3 samples, 0.06%)</title><rect x="549.6" y="613" width="0.7" height="15.0" fill="rgb(224,42,3)" rx="2" ry="2" />
<text  x="552.60" y="623.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (10 samples, 0.20%)</title><rect x="665.8" y="677" width="2.4" height="15.0" fill="rgb(222,38,13)" rx="2" ry="2" />
<text  x="668.80" y="687.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="662.7" y="677" width="0.2" height="15.0" fill="rgb(227,29,33)" rx="2" ry="2" />
<text  x="665.67" y="687.5" ></text>
</g>
<g >
<title>Bitmap::CheckPixels (1 samples, 0.02%)</title><rect x="553.0" y="437" width="0.2" height="15.0" fill="rgb(251,181,1)" rx="2" ry="2" />
<text  x="555.97" y="447.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="529.2" y="661" width="0.2" height="15.0" fill="rgb(252,44,49)" rx="2" ry="2" />
<text  x="532.15" y="671.5" ></text>
</g>
<g >
<title>ksys_write (7 samples, 0.14%)</title><rect x="140.4" y="885" width="1.7" height="15.0" fill="rgb(244,4,35)" rx="2" ry="2" />
<text  x="143.39" y="895.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.02%)</title><rect x="564.5" y="597" width="0.3" height="15.0" fill="rgb(243,56,32)" rx="2" ry="2" />
<text  x="567.52" y="607.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.02%)</title><rect x="240.9" y="869" width="0.3" height="15.0" fill="rgb(242,50,51)" rx="2" ry="2" />
<text  x="243.95" y="879.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (9 samples, 0.18%)</title><rect x="556.1" y="117" width="2.2" height="15.0" fill="rgb(237,56,30)" rx="2" ry="2" />
<text  x="559.10" y="127.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="443.7" y="709" width="0.3" height="15.0" fill="rgb(226,84,0)" rx="2" ry="2" />
<text  x="446.75" y="719.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (38 samples, 0.77%)</title><rect x="1098.6" y="725" width="9.1" height="15.0" fill="rgb(234,157,41)" rx="2" ry="2" />
<text  x="1101.58" y="735.5" ></text>
</g>
<g >
<title>perf_pending_event (2 samples, 0.04%)</title><rect x="1132.0" y="581" width="0.5" height="15.0" fill="rgb(250,69,6)" rx="2" ry="2" />
<text  x="1135.02" y="591.5" ></text>
</g>
<g >
<title>[libGLdispatch.so.0.0.0] (1 samples, 0.02%)</title><rect x="168.5" y="933" width="0.3" height="15.0" fill="rgb(244,174,12)" rx="2" ry="2" />
<text  x="171.54" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (2 samples, 0.04%)</title><rect x="528.4" y="693" width="0.5" height="15.0" fill="rgb(254,128,45)" rx="2" ry="2" />
<text  x="531.43" y="703.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.10%)</title><rect x="560.4" y="549" width="1.2" height="15.0" fill="rgb(252,165,27)" rx="2" ry="2" />
<text  x="563.43" y="559.5" ></text>
</g>
<g >
<title>pixman_image_set_transform (1 samples, 0.02%)</title><rect x="310.2" y="709" width="0.3" height="15.0" fill="rgb(253,178,36)" rx="2" ry="2" />
<text  x="313.23" y="719.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="114.4" y="789" width="0.2" height="15.0" fill="rgb(213,199,40)" rx="2" ry="2" />
<text  x="117.41" y="799.5" ></text>
</g>
<g >
<title>interrupt_entry (1 samples, 0.02%)</title><rect x="145.7" y="853" width="0.2" height="15.0" fill="rgb(252,40,47)" rx="2" ry="2" />
<text  x="148.68" y="863.5" ></text>
</g>
<g >
<title>XGetWindowAttributes (1 samples, 0.02%)</title><rect x="671.3" y="709" width="0.3" height="15.0" fill="rgb(229,217,8)" rx="2" ry="2" />
<text  x="674.33" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator++ (69 samples, 1.41%)</title><rect x="1166.2" y="773" width="16.6" height="15.0" fill="rgb(231,26,51)" rx="2" ry="2" />
<text  x="1169.18" y="783.5" ></text>
</g>
<g >
<title>Graphics::Update (3 samples, 0.06%)</title><rect x="480.6" y="805" width="0.7" height="15.0" fill="rgb(230,191,23)" rx="2" ry="2" />
<text  x="483.56" y="815.5" ></text>
</g>
<g >
<title>Bitmap::GetRect (1 samples, 0.02%)</title><rect x="563.8" y="613" width="0.2" height="15.0" fill="rgb(232,191,15)" rx="2" ry="2" />
<text  x="566.79" y="623.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (1 samples, 0.02%)</title><rect x="659.5" y="597" width="0.3" height="15.0" fill="rgb(211,60,15)" rx="2" ry="2" />
<text  x="662.54" y="607.5" ></text>
</g>
<g >
<title>__GI___libc_read (1 samples, 0.02%)</title><rect x="548.4" y="533" width="0.2" height="15.0" fill="rgb(244,58,34)" rx="2" ry="2" />
<text  x="551.40" y="543.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="1046.4" y="661" width="0.2" height="15.0" fill="rgb(234,212,23)" rx="2" ry="2" />
<text  x="1049.38" y="671.5" ></text>
</g>
<g >
<title>__fget_light (3 samples, 0.06%)</title><rect x="112.2" y="853" width="0.8" height="15.0" fill="rgb(252,210,27)" rx="2" ry="2" />
<text  x="115.24" y="863.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (2 samples, 0.04%)</title><rect x="659.1" y="597" width="0.4" height="15.0" fill="rgb(236,77,26)" rx="2" ry="2" />
<text  x="662.06" y="607.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (1 samples, 0.02%)</title><rect x="141.1" y="725" width="0.3" height="15.0" fill="rgb(223,138,32)" rx="2" ry="2" />
<text  x="144.11" y="735.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="136.5" y="693" width="0.3" height="15.0" fill="rgb(233,102,40)" rx="2" ry="2" />
<text  x="139.54" y="703.5" ></text>
</g>
<g >
<title>xcb_writev (1 samples, 0.02%)</title><rect x="670.8" y="693" width="0.3" height="15.0" fill="rgb(238,26,34)" rx="2" ry="2" />
<text  x="673.85" y="703.5" ></text>
</g>
<g >
<title>__pthread_rwlock_rdlock_full (1 samples, 0.02%)</title><rect x="1134.4" y="709" width="0.3" height="15.0" fill="rgb(249,193,53)" rx="2" ry="2" />
<text  x="1137.43" y="719.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.02%)</title><rect x="443.3" y="565" width="0.2" height="15.0" fill="rgb(217,100,4)" rx="2" ry="2" />
<text  x="446.27" y="575.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (7 samples, 0.14%)</title><rect x="666.0" y="581" width="1.7" height="15.0" fill="rgb(211,78,32)" rx="2" ry="2" />
<text  x="669.04" y="591.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (1 samples, 0.02%)</title><rect x="662.9" y="629" width="0.2" height="15.0" fill="rgb(254,44,41)" rx="2" ry="2" />
<text  x="665.91" y="639.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (1 samples, 0.02%)</title><rect x="564.8" y="613" width="0.2" height="15.0" fill="rgb(217,80,44)" rx="2" ry="2" />
<text  x="567.76" y="623.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="405.7" y="613" width="0.3" height="15.0" fill="rgb(254,70,12)" rx="2" ry="2" />
<text  x="408.74" y="623.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (2 samples, 0.04%)</title><rect x="404.5" y="565" width="0.5" height="15.0" fill="rgb(226,73,4)" rx="2" ry="2" />
<text  x="407.54" y="575.5" ></text>
</g>
<g >
<title>generic_file_read_iter (1 samples, 0.02%)</title><rect x="548.4" y="373" width="0.2" height="15.0" fill="rgb(251,98,53)" rx="2" ry="2" />
<text  x="551.40" y="383.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="544.8" y="709" width="0.2" height="15.0" fill="rgb(242,19,32)" rx="2" ry="2" />
<text  x="547.79" y="719.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1155.6" y="741" width="0.2" height="15.0" fill="rgb(226,89,12)" rx="2" ry="2" />
<text  x="1158.60" y="751.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (9 samples, 0.18%)</title><rect x="1044.2" y="645" width="2.2" height="15.0" fill="rgb(217,42,39)" rx="2" ry="2" />
<text  x="1047.21" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (31 samples, 0.63%)</title><rect x="1071.2" y="757" width="7.4" height="15.0" fill="rgb(248,123,41)" rx="2" ry="2" />
<text  x="1074.16" y="767.5" ></text>
</g>
<g >
<title>unix_stream_sendmsg (1 samples, 0.02%)</title><rect x="670.8" y="469" width="0.3" height="15.0" fill="rgb(233,47,21)" rx="2" ry="2" />
<text  x="673.85" y="479.5" ></text>
</g>
<g >
<title>__wake_up_common (3 samples, 0.06%)</title><rect x="140.6" y="805" width="0.8" height="15.0" fill="rgb(243,189,22)" rx="2" ry="2" />
<text  x="143.63" y="815.5" ></text>
</g>
<g >
<title>Sdl2Ui::ProcessActiveEvent (32 samples, 0.65%)</title><rect x="660.5" y="789" width="7.7" height="15.0" fill="rgb(227,124,50)" rx="2" ry="2" />
<text  x="663.50" y="799.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="553.9" y="389" width="0.3" height="15.0" fill="rgb(246,5,4)" rx="2" ry="2" />
<text  x="556.93" y="399.5" ></text>
</g>
<g >
<title>__GI___getpid (1 samples, 0.02%)</title><rect x="1134.2" y="709" width="0.2" height="15.0" fill="rgb(244,202,14)" rx="2" ry="2" />
<text  x="1137.19" y="719.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="477.9" y="693" width="0.3" height="15.0" fill="rgb(250,221,12)" rx="2" ry="2" />
<text  x="480.91" y="703.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (1 samples, 0.02%)</title><rect x="663.1" y="693" width="0.3" height="15.0" fill="rgb(218,60,32)" rx="2" ry="2" />
<text  x="666.15" y="703.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1107.5" y="661" width="0.2" height="15.0" fill="rgb(230,187,26)" rx="2" ry="2" />
<text  x="1110.48" y="671.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="165.2" y="853" width="0.2" height="15.0" fill="rgb(238,10,39)" rx="2" ry="2" />
<text  x="168.17" y="863.5" ></text>
</g>
<g >
<title>usb_hcd_get_frame_number (2 samples, 0.04%)</title><rect x="1045.7" y="421" width="0.4" height="15.0" fill="rgb(221,221,15)" rx="2" ry="2" />
<text  x="1048.66" y="431.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (7 samples, 0.14%)</title><rect x="666.0" y="533" width="1.7" height="15.0" fill="rgb(245,176,3)" rx="2" ry="2" />
<text  x="669.04" y="543.5" ></text>
</g>
<g >
<title>put_prev_task_fair (1 samples, 0.02%)</title><rect x="405.7" y="565" width="0.3" height="15.0" fill="rgb(211,195,51)" rx="2" ry="2" />
<text  x="408.74" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="1066.8" y="725" width="0.5" height="15.0" fill="rgb(214,0,44)" rx="2" ry="2" />
<text  x="1069.83" y="735.5" ></text>
</g>
<g >
<title>prepare_transfer (1 samples, 0.02%)</title><rect x="468.8" y="421" width="0.2" height="15.0" fill="rgb(226,126,31)" rx="2" ry="2" />
<text  x="471.77" y="431.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="663.4" y="613" width="0.2" height="15.0" fill="rgb(210,174,7)" rx="2" ry="2" />
<text  x="666.39" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.02%)</title><rect x="560.2" y="437" width="0.2" height="15.0" fill="rgb(215,61,42)" rx="2" ry="2" />
<text  x="563.19" y="447.5" ></text>
</g>
<g >
<title>__sys_recvmsg (5 samples, 0.10%)</title><rect x="669.2" y="565" width="1.2" height="15.0" fill="rgb(238,102,45)" rx="2" ry="2" />
<text  x="672.16" y="575.5" ></text>
</g>
<g >
<title>utf8_internal_loop (1 samples, 0.02%)</title><rect x="480.6" y="693" width="0.2" height="15.0" fill="rgb(224,159,44)" rx="2" ry="2" />
<text  x="483.56" y="703.5" ></text>
</g>
<g >
<title>dequeue_task_fair (6 samples, 0.12%)</title><rect x="114.6" y="773" width="1.5" height="15.0" fill="rgb(223,122,42)" rx="2" ry="2" />
<text  x="117.65" y="783.5" ></text>
</g>
<g >
<title>GetRequest (1 samples, 0.02%)</title><rect x="658.3" y="629" width="0.3" height="15.0" fill="rgb(245,120,19)" rx="2" ry="2" />
<text  x="661.34" y="639.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="467.1" y="661" width="0.2" height="15.0" fill="rgb(248,39,2)" rx="2" ry="2" />
<text  x="470.08" y="671.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (2 samples, 0.04%)</title><rect x="659.1" y="581" width="0.4" height="15.0" fill="rgb(217,97,28)" rx="2" ry="2" />
<text  x="662.06" y="591.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.02%)</title><rect x="468.8" y="549" width="0.2" height="15.0" fill="rgb(224,54,26)" rx="2" ry="2" />
<text  x="471.77" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2 samples, 0.04%)</title><rect x="665.3" y="725" width="0.5" height="15.0" fill="rgb(233,137,40)" rx="2" ry="2" />
<text  x="668.31" y="735.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.02%)</title><rect x="1133.5" y="613" width="0.2" height="15.0" fill="rgb(220,52,44)" rx="2" ry="2" />
<text  x="1136.47" y="623.5" ></text>
</g>
<g >
<title>tick_sched_timer (3 samples, 0.06%)</title><rect x="1041.3" y="661" width="0.7" height="15.0" fill="rgb(231,13,9)" rx="2" ry="2" />
<text  x="1044.33" y="671.5" ></text>
</g>
<g >
<title>Game_Screen::Update (11 samples, 0.22%)</title><rect x="654.5" y="773" width="2.6" height="15.0" fill="rgb(247,152,23)" rx="2" ry="2" />
<text  x="657.49" y="783.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (5 samples, 0.10%)</title><rect x="262.1" y="805" width="1.2" height="15.0" fill="rgb(243,202,4)" rx="2" ry="2" />
<text  x="265.12" y="815.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1182.5" y="725" width="0.3" height="15.0" fill="rgb(223,55,24)" rx="2" ry="2" />
<text  x="1185.54" y="735.5" ></text>
</g>
<g >
<title>Scene::IsAsyncPending (100 samples, 2.04%)</title><rect x="1135.6" y="821" width="24.1" height="15.0" fill="rgb(224,98,36)" rx="2" ry="2" />
<text  x="1138.63" y="831.5" >S..</text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="574.4" y="613" width="0.2" height="15.0" fill="rgb(213,185,41)" rx="2" ry="2" />
<text  x="577.38" y="623.5" ></text>
</g>
<g >
<title>xhci_irq (2 samples, 0.04%)</title><rect x="404.5" y="533" width="0.5" height="15.0" fill="rgb(216,120,50)" rx="2" ry="2" />
<text  x="407.54" y="543.5" ></text>
</g>
<g >
<title>operator() (4 samples, 0.08%)</title><rect x="476.9" y="757" width="1.0" height="15.0" fill="rgb(218,144,50)" rx="2" ry="2" />
<text  x="479.95" y="767.5" ></text>
</g>
<g >
<title>Sdl2Ui::Sleep (1 samples, 0.02%)</title><rect x="672.5" y="805" width="0.3" height="15.0" fill="rgb(227,79,6)" rx="2" ry="2" />
<text  x="675.53" y="815.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.02%)</title><rect x="634.8" y="501" width="0.2" height="15.0" fill="rgb(253,149,11)" rx="2" ry="2" />
<text  x="637.76" y="511.5" ></text>
</g>
<g >
<title>irq_enter (1 samples, 0.02%)</title><rect x="405.3" y="629" width="0.2" height="15.0" fill="rgb(249,50,44)" rx="2" ry="2" />
<text  x="408.26" y="639.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1155.6" y="725" width="0.2" height="15.0" fill="rgb(212,119,13)" rx="2" ry="2" />
<text  x="1158.60" y="735.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.02%)</title><rect x="404.8" y="453" width="0.2" height="15.0" fill="rgb(218,79,42)" rx="2" ry="2" />
<text  x="407.78" y="463.5" ></text>
</g>
<g >
<title>sock_sendmsg (1 samples, 0.02%)</title><rect x="662.9" y="437" width="0.2" height="15.0" fill="rgb(213,167,47)" rx="2" ry="2" />
<text  x="665.91" y="447.5" ></text>
</g>
<g >
<title>__sched_text_start (10 samples, 0.20%)</title><rect x="556.1" y="149" width="2.4" height="15.0" fill="rgb(217,57,9)" rx="2" ry="2" />
<text  x="559.10" y="159.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (2 samples, 0.04%)</title><rect x="480.6" y="773" width="0.4" height="15.0" fill="rgb(212,31,16)" rx="2" ry="2" />
<text  x="483.56" y="783.5" ></text>
</g>
<g >
<title>do_nanosleep (61 samples, 1.24%)</title><rect x="1119.0" y="709" width="14.7" height="15.0" fill="rgb(252,82,45)" rx="2" ry="2" />
<text  x="1122.03" y="719.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (1 samples, 0.02%)</title><rect x="559.7" y="549" width="0.2" height="15.0" fill="rgb(211,13,45)" rx="2" ry="2" />
<text  x="562.70" y="559.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (5 samples, 0.10%)</title><rect x="1188.3" y="933" width="1.2" height="15.0" fill="rgb(254,79,12)" rx="2" ry="2" />
<text  x="1191.32" y="943.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (63 samples, 1.28%)</title><rect x="1118.6" y="725" width="15.1" height="15.0" fill="rgb(219,155,38)" rx="2" ry="2" />
<text  x="1121.55" y="735.5" ></text>
</g>
<g >
<title>XFlush (1 samples, 0.02%)</title><rect x="662.9" y="693" width="0.2" height="15.0" fill="rgb(254,130,40)" rx="2" ry="2" />
<text  x="665.91" y="703.5" ></text>
</g>
<g >
<title>perf_event_wakeup (1 samples, 0.02%)</title><rect x="134.9" y="693" width="0.2" height="15.0" fill="rgb(252,201,49)" rx="2" ry="2" />
<text  x="137.86" y="703.5" ></text>
</g>
<g >
<title>memcpy (3 samples, 0.06%)</title><rect x="548.6" y="613" width="0.8" height="15.0" fill="rgb(231,177,22)" rx="2" ry="2" />
<text  x="551.64" y="623.5" ></text>
</g>
<g >
<title>clock_gettime@plt (1 samples, 0.02%)</title><rect x="1133.9" y="789" width="0.3" height="15.0" fill="rgb(225,170,37)" rx="2" ry="2" />
<text  x="1136.95" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator++ (71 samples, 1.45%)</title><rect x="1140.4" y="789" width="17.1" height="15.0" fill="rgb(223,179,7)" rx="2" ry="2" />
<text  x="1143.44" y="799.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (2 samples, 0.04%)</title><rect x="645.8" y="725" width="0.5" height="15.0" fill="rgb(248,128,41)" rx="2" ry="2" />
<text  x="648.83" y="735.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (132 samples, 2.69%)</title><rect x="257.8" y="821" width="31.7" height="15.0" fill="rgb(249,205,3)" rx="2" ry="2" />
<text  x="260.79" y="831.5" >As..</text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.02%)</title><rect x="1140.0" y="661" width="0.2" height="15.0" fill="rgb(242,38,19)" rx="2" ry="2" />
<text  x="1142.96" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::size (11 samples, 0.22%)</title><rect x="648.5" y="725" width="2.6" height="15.0" fill="rgb(217,77,9)" rx="2" ry="2" />
<text  x="651.48" y="735.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Set (1 samples, 0.02%)</title><rect x="646.3" y="725" width="0.3" height="15.0" fill="rgb(232,146,22)" rx="2" ry="2" />
<text  x="649.31" y="735.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (208 samples, 4.24%)</title><rect x="1068.0" y="789" width="50.1" height="15.0" fill="rgb(216,90,54)" rx="2" ry="2" />
<text  x="1071.03" y="799.5" >__GI_..</text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1109.4" y="741" width="0.2" height="15.0" fill="rgb(212,158,53)" rx="2" ry="2" />
<text  x="1112.41" y="751.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.02%)</title><rect x="551.3" y="581" width="0.2" height="15.0" fill="rgb(235,14,54)" rx="2" ry="2" />
<text  x="554.28" y="591.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (1 samples, 0.02%)</title><rect x="564.8" y="645" width="0.2" height="15.0" fill="rgb(247,226,51)" rx="2" ry="2" />
<text  x="567.76" y="655.5" ></text>
</g>
<g >
<title>[unknown] (/tmp/.glxjCwZU (303 samples, 6.18%)</title><rect x="170.0" y="933" width="72.9" height="15.0" fill="rgb(219,10,20)" rx="2" ry="2" />
<text  x="172.98" y="943.5" >[unknown..</text>
</g>
<g >
<title>Graphics::SortDrawableList (1 samples, 0.02%)</title><rect x="479.6" y="645" width="0.2" height="15.0" fill="rgb(211,190,39)" rx="2" ry="2" />
<text  x="482.59" y="655.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (1 samples, 0.02%)</title><rect x="554.2" y="405" width="0.2" height="15.0" fill="rgb(220,223,37)" rx="2" ry="2" />
<text  x="557.17" y="415.5" ></text>
</g>
<g >
<title>do_IRQ (10 samples, 0.20%)</title><rect x="1044.2" y="709" width="2.4" height="15.0" fill="rgb(220,151,35)" rx="2" ry="2" />
<text  x="1047.21" y="719.5" ></text>
</g>
<g >
<title>irq_exit (8 samples, 0.16%)</title><rect x="1042.0" y="693" width="2.0" height="15.0" fill="rgb(244,166,42)" rx="2" ry="2" />
<text  x="1045.05" y="703.5" ></text>
</g>
<g >
<title>Game_Character::Move (1 samples, 0.02%)</title><rect x="653.8" y="725" width="0.2" height="15.0" fill="rgb(231,110,36)" rx="2" ry="2" />
<text  x="656.77" y="735.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.10%)</title><rect x="560.4" y="533" width="1.2" height="15.0" fill="rgb(230,68,41)" rx="2" ry="2" />
<text  x="563.43" y="543.5" ></text>
</g>
<g >
<title>__GI__IO_file_xsgetn (13 samples, 0.27%)</title><rect x="555.6" y="405" width="3.1" height="15.0" fill="rgb(220,42,46)" rx="2" ry="2" />
<text  x="558.61" y="415.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (15 samples, 0.31%)</title><rect x="469.0" y="741" width="3.6" height="15.0" fill="rgb(222,83,42)" rx="2" ry="2" />
<text  x="472.01" y="751.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (2 samples, 0.04%)</title><rect x="480.1" y="725" width="0.5" height="15.0" fill="rgb(210,197,19)" rx="2" ry="2" />
<text  x="483.08" y="735.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (3 samples, 0.06%)</title><rect x="404.5" y="581" width="0.8" height="15.0" fill="rgb(233,20,22)" rx="2" ry="2" />
<text  x="407.54" y="591.5" ></text>
</g>
<g >
<title>posix_get_monotonic_raw (5 samples, 0.10%)</title><rect x="1107.7" y="725" width="1.2" height="15.0" fill="rgb(208,178,25)" rx="2" ry="2" />
<text  x="1110.72" y="735.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="113.9" y="837" width="0.3" height="15.0" fill="rgb(219,59,29)" rx="2" ry="2" />
<text  x="116.93" y="847.5" ></text>
</g>
<g >
<title>Game_System::SePlay (4 samples, 0.08%)</title><rect x="548.4" y="709" width="1.0" height="15.0" fill="rgb(251,75,38)" rx="2" ry="2" />
<text  x="551.40" y="719.5" ></text>
</g>
<g >
<title>_XFlush (1 samples, 0.02%)</title><rect x="670.8" y="725" width="0.3" height="15.0" fill="rgb(226,10,53)" rx="2" ry="2" />
<text  x="673.85" y="735.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="289.3" y="741" width="0.2" height="15.0" fill="rgb(217,194,51)" rx="2" ry="2" />
<text  x="292.30" y="751.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.02%)</title><rect x="138.9" y="837" width="0.3" height="15.0" fill="rgb(230,129,6)" rx="2" ry="2" />
<text  x="141.95" y="847.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (1 samples, 0.02%)</title><rect x="658.3" y="645" width="0.3" height="15.0" fill="rgb(231,82,40)" rx="2" ry="2" />
<text  x="661.34" y="655.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.02%)</title><rect x="1155.6" y="645" width="0.2" height="15.0" fill="rgb(239,209,51)" rx="2" ry="2" />
<text  x="1158.60" y="655.5" ></text>
</g>
<g >
<title>Window_Base::Update (1 samples, 0.02%)</title><rect x="657.9" y="757" width="0.2" height="15.0" fill="rgb(234,191,18)" rx="2" ry="2" />
<text  x="660.86" y="767.5" ></text>
</g>
<g >
<title>usb_get_current_frame_number (2 samples, 0.04%)</title><rect x="1045.7" y="437" width="0.4" height="15.0" fill="rgb(213,37,40)" rx="2" ry="2" />
<text  x="1048.66" y="447.5" ></text>
</g>
<g >
<title>vfs_write (6 samples, 0.12%)</title><rect x="140.6" y="869" width="1.5" height="15.0" fill="rgb(247,56,29)" rx="2" ry="2" />
<text  x="143.63" y="879.5" ></text>
</g>
<g >
<title>fread (13 samples, 0.27%)</title><rect x="555.6" y="437" width="3.1" height="15.0" fill="rgb(246,216,3)" rx="2" ry="2" />
<text  x="558.61" y="447.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.04%)</title><rect x="468.3" y="741" width="0.5" height="15.0" fill="rgb(237,109,1)" rx="2" ry="2" />
<text  x="471.29" y="751.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.02%)</title><rect x="529.2" y="549" width="0.2" height="15.0" fill="rgb(214,71,7)" rx="2" ry="2" />
<text  x="532.15" y="559.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::use_count (1 samples, 0.02%)</title><rect x="558.7" y="581" width="0.3" height="15.0" fill="rgb(220,85,12)" rx="2" ry="2" />
<text  x="561.74" y="591.5" ></text>
</g>
<g >
<title>native_write_msr (70 samples, 1.43%)</title><rect x="117.8" y="693" width="16.8" height="15.0" fill="rgb(227,60,5)" rx="2" ry="2" />
<text  x="120.78" y="703.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="670.8" y="389" width="0.3" height="15.0" fill="rgb(235,181,37)" rx="2" ry="2" />
<text  x="673.85" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_base (1 samples, 0.02%)</title><rect x="555.4" y="405" width="0.2" height="15.0" fill="rgb(235,210,52)" rx="2" ry="2" />
<text  x="558.37" y="415.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (14 samples, 0.29%)</title><rect x="161.8" y="821" width="3.4" height="15.0" fill="rgb(250,115,26)" rx="2" ry="2" />
<text  x="164.80" y="831.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="662.9" y="565" width="0.2" height="15.0" fill="rgb(206,85,48)" rx="2" ry="2" />
<text  x="665.91" y="575.5" ></text>
</g>
<g >
<title>Bitmap::EffectsBlit (463 samples, 9.44%)</title><rect x="295.1" y="741" width="111.4" height="15.0" fill="rgb(219,214,32)" rx="2" ry="2" />
<text  x="298.08" y="751.5" >Bitmap::Effec..</text>
</g>
<g >
<title>std::_Rb_tree_increment (1 samples, 0.02%)</title><rect x="292.9" y="773" width="0.3" height="15.0" fill="rgb(227,73,33)" rx="2" ry="2" />
<text  x="295.91" y="783.5" ></text>
</g>
<g >
<title>__fget (2 samples, 0.04%)</title><rect x="669.9" y="501" width="0.5" height="15.0" fill="rgb(210,116,26)" rx="2" ry="2" />
<text  x="672.89" y="511.5" ></text>
</g>
<g >
<title>sock_write_iter (1 samples, 0.02%)</title><rect x="670.8" y="501" width="0.3" height="15.0" fill="rgb(219,220,54)" rx="2" ry="2" />
<text  x="673.85" y="511.5" ></text>
</g>
<g >
<title>GetRequest (1 samples, 0.02%)</title><rect x="552.7" y="581" width="0.3" height="15.0" fill="rgb(207,161,20)" rx="2" ry="2" />
<text  x="555.73" y="591.5" ></text>
</g>
<g >
<title>Input::IsTriggered (1 samples, 0.02%)</title><rect x="481.3" y="805" width="0.2" height="15.0" fill="rgb(242,133,20)" rx="2" ry="2" />
<text  x="484.28" y="815.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.02%)</title><rect x="634.8" y="485" width="0.2" height="15.0" fill="rgb(227,72,25)" rx="2" ry="2" />
<text  x="637.76" y="495.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (4 samples, 0.08%)</title><rect x="1105.6" y="693" width="0.9" height="15.0" fill="rgb(253,74,3)" rx="2" ry="2" />
<text  x="1108.56" y="703.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (6 samples, 0.12%)</title><rect x="562.4" y="629" width="1.4" height="15.0" fill="rgb(247,110,48)" rx="2" ry="2" />
<text  x="565.35" y="639.5" ></text>
</g>
<g >
<title>ctx_sched_out (1 samples, 0.02%)</title><rect x="665.8" y="581" width="0.2" height="15.0" fill="rgb(205,5,26)" rx="2" ry="2" />
<text  x="668.80" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (1 samples, 0.02%)</title><rect x="552.5" y="533" width="0.2" height="15.0" fill="rgb(212,22,34)" rx="2" ry="2" />
<text  x="555.49" y="543.5" ></text>
</g>
<g >
<title>import_iovec (1 samples, 0.02%)</title><rect x="669.4" y="517" width="0.2" height="15.0" fill="rgb(219,155,46)" rx="2" ry="2" />
<text  x="672.40" y="527.5" ></text>
</g>
<g >
<title>dequeue_entity (4 samples, 0.08%)</title><rect x="115.1" y="757" width="1.0" height="15.0" fill="rgb(249,53,8)" rx="2" ry="2" />
<text  x="118.13" y="767.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="659.5" y="549" width="0.3" height="15.0" fill="rgb(235,216,22)" rx="2" ry="2" />
<text  x="662.54" y="559.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1135.4" y="693" width="0.2" height="15.0" fill="rgb(215,117,2)" rx="2" ry="2" />
<text  x="1138.39" y="703.5" ></text>
</g>
<g >
<title>xcb_poll_for_reply64 (3 samples, 0.06%)</title><rect x="661.7" y="677" width="0.7" height="15.0" fill="rgb(237,223,8)" rx="2" ry="2" />
<text  x="664.71" y="687.5" ></text>
</g>
<g >
<title>Player::IsRPG2k3 (2 samples, 0.04%)</title><rect x="527.9" y="693" width="0.5" height="15.0" fill="rgb(219,82,53)" rx="2" ry="2" />
<text  x="530.95" y="703.5" ></text>
</g>
<g >
<title>Window::GetZ (1 samples, 0.02%)</title><rect x="479.4" y="645" width="0.2" height="15.0" fill="rgb(252,136,14)" rx="2" ry="2" />
<text  x="482.35" y="655.5" ></text>
</g>
<g >
<title>usb_hcd_poll_rh_status (1 samples, 0.02%)</title><rect x="443.0" y="581" width="0.3" height="15.0" fill="rgb(220,69,22)" rx="2" ry="2" />
<text  x="446.03" y="591.5" ></text>
</g>
<g >
<title>__GI___writev (1 samples, 0.02%)</title><rect x="662.9" y="597" width="0.2" height="15.0" fill="rgb(244,84,2)" rx="2" ry="2" />
<text  x="665.91" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (1 samples, 0.02%)</title><rect x="657.4" y="725" width="0.2" height="15.0" fill="rgb(246,119,0)" rx="2" ry="2" />
<text  x="660.38" y="735.5" ></text>
</g>
<g >
<title>ksys_read (11 samples, 0.22%)</title><rect x="137.7" y="885" width="2.7" height="15.0" fill="rgb(235,32,35)" rx="2" ry="2" />
<text  x="140.74" y="895.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="529.2" y="677" width="0.2" height="15.0" fill="rgb(209,9,48)" rx="2" ry="2" />
<text  x="532.15" y="687.5" ></text>
</g>
<g >
<title>std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt;&amp;, true&gt; (2 samples, 0.04%)</title><rect x="550.8" y="629" width="0.5" height="15.0" fill="rgb(235,44,33)" rx="2" ry="2" />
<text  x="553.80" y="639.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="468.5" y="661" width="0.3" height="15.0" fill="rgb(242,5,29)" rx="2" ry="2" />
<text  x="471.53" y="671.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="108.6" y="869" width="0.3" height="15.0" fill="rgb(221,100,44)" rx="2" ry="2" />
<text  x="111.63" y="879.5" ></text>
</g>
<g >
<title>prepare_playback_urb (1 samples, 0.02%)</title><rect x="404.8" y="389" width="0.2" height="15.0" fill="rgb(237,129,23)" rx="2" ry="2" />
<text  x="407.78" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_getpid (1 samples, 0.02%)</title><rect x="109.4" y="917" width="0.2" height="15.0" fill="rgb(221,176,13)" rx="2" ry="2" />
<text  x="112.36" y="927.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.04%)</title><rect x="466.6" y="629" width="0.5" height="15.0" fill="rgb(231,201,44)" rx="2" ry="2" />
<text  x="469.60" y="639.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="114.4" y="773" width="0.2" height="15.0" fill="rgb(242,142,25)" rx="2" ry="2" />
<text  x="117.41" y="783.5" ></text>
</g>
<g >
<title>handle_edge_irq (5 samples, 0.10%)</title><rect x="142.3" y="885" width="1.2" height="15.0" fill="rgb(247,120,2)" rx="2" ry="2" />
<text  x="145.31" y="895.5" ></text>
</g>
<g >
<title>pipe_read (1 samples, 0.02%)</title><rect x="138.7" y="821" width="0.2" height="15.0" fill="rgb(227,148,39)" rx="2" ry="2" />
<text  x="141.71" y="831.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (6 samples, 0.12%)</title><rect x="661.0" y="693" width="1.4" height="15.0" fill="rgb(211,219,32)" rx="2" ry="2" />
<text  x="663.98" y="703.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::operator= (1 samples, 0.02%)</title><rect x="564.8" y="661" width="0.2" height="15.0" fill="rgb(215,106,23)" rx="2" ry="2" />
<text  x="567.76" y="671.5" ></text>
</g>
<g >
<title>usb_submit_urb (1 samples, 0.02%)</title><rect x="1135.4" y="533" width="0.2" height="15.0" fill="rgb(251,94,41)" rx="2" ry="2" />
<text  x="1138.39" y="543.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (50 samples, 1.02%)</title><rect x="1120.0" y="581" width="12.0" height="15.0" fill="rgb(219,77,10)" rx="2" ry="2" />
<text  x="1122.99" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;unsigned char&gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="555.4" y="357" width="0.2" height="15.0" fill="rgb(226,133,51)" rx="2" ry="2" />
<text  x="558.37" y="367.5" ></text>
</g>
<g >
<title>__wake_up (2 samples, 0.04%)</title><rect x="1132.0" y="549" width="0.5" height="15.0" fill="rgb(218,165,32)" rx="2" ry="2" />
<text  x="1135.02" y="559.5" ></text>
</g>
<g >
<title>std::default_delete&lt;Sprite&gt;::operator() (1 samples, 0.02%)</title><rect x="564.5" y="613" width="0.3" height="15.0" fill="rgb(246,7,20)" rx="2" ry="2" />
<text  x="567.52" y="623.5" ></text>
</g>
<g >
<title>Player::Update (1 samples, 0.02%)</title><rect x="244.8" y="917" width="0.2" height="15.0" fill="rgb(225,159,52)" rx="2" ry="2" />
<text  x="247.80" y="927.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.02%)</title><rect x="1140.0" y="565" width="0.2" height="15.0" fill="rgb(205,183,0)" rx="2" ry="2" />
<text  x="1142.96" y="575.5" ></text>
</g>
<g >
<title>xcb_poll_for_reply64 (1 samples, 0.02%)</title><rect x="670.6" y="693" width="0.2" height="15.0" fill="rgb(234,224,42)" rx="2" ry="2" />
<text  x="673.61" y="703.5" ></text>
</g>
<g >
<title>default_wake_function (2 samples, 0.04%)</title><rect x="140.9" y="773" width="0.5" height="15.0" fill="rgb(226,216,16)" rx="2" ry="2" />
<text  x="143.87" y="783.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (9 samples, 0.18%)</title><rect x="1044.2" y="629" width="2.2" height="15.0" fill="rgb(228,85,47)" rx="2" ry="2" />
<text  x="1047.21" y="639.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1132.0" y="469" width="0.3" height="15.0" fill="rgb(234,107,2)" rx="2" ry="2" />
<text  x="1135.02" y="479.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.02%)</title><rect x="468.8" y="581" width="0.2" height="15.0" fill="rgb(239,19,41)" rx="2" ry="2" />
<text  x="471.77" y="591.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (709 samples, 14.45%)</title><rect x="482.7" y="773" width="170.6" height="15.0" fill="rgb(234,12,51)" rx="2" ry="2" />
<text  x="485.72" y="783.5" >Game_Map::UpdateCommon..</text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="1064.7" y="533" width="0.2" height="15.0" fill="rgb(215,175,39)" rx="2" ry="2" />
<text  x="1067.66" y="543.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1182.5" y="661" width="0.3" height="15.0" fill="rgb(223,1,36)" rx="2" ry="2" />
<text  x="1185.54" y="671.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.02%)</title><rect x="529.2" y="597" width="0.2" height="15.0" fill="rgb(214,181,29)" rx="2" ry="2" />
<text  x="532.15" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (1 samples, 0.02%)</title><rect x="643.7" y="693" width="0.2" height="15.0" fill="rgb(229,209,23)" rx="2" ry="2" />
<text  x="646.66" y="703.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (3 samples, 0.06%)</title><rect x="549.6" y="597" width="0.7" height="15.0" fill="rgb(213,204,19)" rx="2" ry="2" />
<text  x="552.60" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (5 samples, 0.10%)</title><rect x="669.2" y="581" width="1.2" height="15.0" fill="rgb(244,112,1)" rx="2" ry="2" />
<text  x="672.16" y="591.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="134.6" y="741" width="0.3" height="15.0" fill="rgb(242,2,43)" rx="2" ry="2" />
<text  x="137.62" y="751.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="468.8" y="661" width="0.2" height="15.0" fill="rgb(231,165,19)" rx="2" ry="2" />
<text  x="471.77" y="671.5" ></text>
</g>
<g >
<title>Sprite::SetTone (1 samples, 0.02%)</title><rect x="655.7" y="725" width="0.2" height="15.0" fill="rgb(238,52,23)" rx="2" ry="2" />
<text  x="658.69" y="735.5" ></text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="482.0" y="773" width="0.2" height="15.0" fill="rgb(252,174,54)" rx="2" ry="2" />
<text  x="485.00" y="783.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (3 samples, 0.06%)</title><rect x="552.2" y="597" width="0.8" height="15.0" fill="rgb(240,18,41)" rx="2" ry="2" />
<text  x="555.25" y="607.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.02%)</title><rect x="1064.7" y="485" width="0.2" height="15.0" fill="rgb(242,224,14)" rx="2" ry="2" />
<text  x="1067.66" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_read (11 samples, 0.22%)</title><rect x="137.7" y="901" width="2.7" height="15.0" fill="rgb(221,29,4)" rx="2" ry="2" />
<text  x="140.74" y="911.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (1 samples, 0.02%)</title><rect x="658.3" y="613" width="0.3" height="15.0" fill="rgb(245,100,4)" rx="2" ry="2" />
<text  x="661.34" y="623.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="552.5" y="501" width="0.2" height="15.0" fill="rgb(224,216,49)" rx="2" ry="2" />
<text  x="555.49" y="511.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.02%)</title><rect x="634.8" y="565" width="0.2" height="15.0" fill="rgb(239,47,27)" rx="2" ry="2" />
<text  x="637.76" y="575.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.02%)</title><rect x="165.2" y="693" width="0.2" height="15.0" fill="rgb(207,86,50)" rx="2" ry="2" />
<text  x="168.17" y="703.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (76 samples, 1.55%)</title><rect x="1047.1" y="741" width="18.3" height="15.0" fill="rgb(218,203,36)" rx="2" ry="2" />
<text  x="1050.10" y="751.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.02%)</title><rect x="109.6" y="917" width="0.2" height="15.0" fill="rgb(246,171,19)" rx="2" ry="2" />
<text  x="112.60" y="927.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (17 samples, 0.35%)</title><rect x="472.6" y="709" width="4.1" height="15.0" fill="rgb(233,113,9)" rx="2" ry="2" />
<text  x="475.62" y="719.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (9 samples, 0.18%)</title><rect x="654.7" y="741" width="2.2" height="15.0" fill="rgb(230,56,52)" rx="2" ry="2" />
<text  x="657.73" y="751.5" ></text>
</g>
<g >
<title>__do_page_cache_readahead (1 samples, 0.02%)</title><rect x="558.5" y="149" width="0.2" height="15.0" fill="rgb(216,68,17)" rx="2" ry="2" />
<text  x="561.50" y="159.5" ></text>
</g>
<g >
<title>Game_Picture::Erase (1 samples, 0.02%)</title><rect x="545.0" y="709" width="0.3" height="15.0" fill="rgb(232,218,49)" rx="2" ry="2" />
<text  x="548.03" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (5 samples, 0.10%)</title><rect x="647.3" y="725" width="1.2" height="15.0" fill="rgb(246,171,7)" rx="2" ry="2" />
<text  x="650.27" y="735.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1064.7" y="581" width="0.2" height="15.0" fill="rgb(227,53,51)" rx="2" ry="2" />
<text  x="1067.66" y="591.5" ></text>
</g>
<g >
<title>fsnotify (1 samples, 0.02%)</title><rect x="139.9" y="821" width="0.2" height="15.0" fill="rgb(230,10,28)" rx="2" ry="2" />
<text  x="142.91" y="831.5" ></text>
</g>
<g >
<title>native_write_msr (9 samples, 0.18%)</title><rect x="556.1" y="37" width="2.2" height="15.0" fill="rgb(218,83,50)" rx="2" ry="2" />
<text  x="559.10" y="47.5" ></text>
</g>
<g >
<title>pixman_image_get_width (1 samples, 0.02%)</title><rect x="656.4" y="725" width="0.3" height="15.0" fill="rgb(221,201,3)" rx="2" ry="2" />
<text  x="659.41" y="735.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="647.0" y="693" width="0.3" height="15.0" fill="rgb(223,36,15)" rx="2" ry="2" />
<text  x="650.03" y="703.5" ></text>
</g>
<g >
<title>sock_sendmsg (1 samples, 0.02%)</title><rect x="670.8" y="485" width="0.3" height="15.0" fill="rgb(215,88,6)" rx="2" ry="2" />
<text  x="673.85" y="495.5" ></text>
</g>
<g >
<title>generic_pipe_buf_confirm (1 samples, 0.02%)</title><rect x="138.2" y="821" width="0.3" height="15.0" fill="rgb(223,85,30)" rx="2" ry="2" />
<text  x="141.22" y="831.5" ></text>
</g>
<g >
<title>pixman_image_create_bits (1 samples, 0.02%)</title><rect x="554.4" y="421" width="0.3" height="15.0" fill="rgb(215,102,15)" rx="2" ry="2" />
<text  x="557.41" y="431.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.02%)</title><rect x="468.8" y="533" width="0.2" height="15.0" fill="rgb(246,129,6)" rx="2" ry="2" />
<text  x="471.77" y="543.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (5 samples, 0.10%)</title><rect x="671.1" y="741" width="1.2" height="15.0" fill="rgb(224,196,26)" rx="2" ry="2" />
<text  x="674.09" y="751.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="468.8" y="677" width="0.2" height="15.0" fill="rgb(235,113,37)" rx="2" ry="2" />
<text  x="471.77" y="687.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="559.5" y="485" width="0.2" height="15.0" fill="rgb(217,179,29)" rx="2" ry="2" />
<text  x="562.46" y="495.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.02%)</title><rect x="1135.4" y="613" width="0.2" height="15.0" fill="rgb(227,224,47)" rx="2" ry="2" />
<text  x="1138.39" y="623.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.02%)</title><rect x="669.4" y="469" width="0.2" height="15.0" fill="rgb(208,69,10)" rx="2" ry="2" />
<text  x="672.40" y="479.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="242.2" y="885" width="0.2" height="15.0" fill="rgb(251,223,20)" rx="2" ry="2" />
<text  x="245.15" y="895.5" ></text>
</g>
<g >
<title>perf_pending_event (1 samples, 0.02%)</title><rect x="134.9" y="709" width="0.2" height="15.0" fill="rgb(228,16,18)" rx="2" ry="2" />
<text  x="137.86" y="719.5" ></text>
</g>
<g >
<title>retire_playback_urb (2 samples, 0.04%)</title><rect x="1045.7" y="469" width="0.4" height="15.0" fill="rgb(213,99,9)" rx="2" ry="2" />
<text  x="1048.66" y="479.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (27 samples, 0.55%)</title><rect x="247.4" y="917" width="6.5" height="15.0" fill="rgb(221,202,40)" rx="2" ry="2" />
<text  x="250.44" y="927.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (397 samples, 8.09%)</title><rect x="310.5" y="677" width="95.5" height="15.0" fill="rgb(251,197,12)" rx="2" ry="2" />
<text  x="313.47" y="687.5" >[libpixman-..</text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (1 samples, 0.02%)</title><rect x="559.7" y="533" width="0.2" height="15.0" fill="rgb(216,8,43)" rx="2" ry="2" />
<text  x="562.70" y="543.5" ></text>
</g>
<g >
<title>Game_Screen::GetFlashColor (1 samples, 0.02%)</title><rect x="655.5" y="725" width="0.2" height="15.0" fill="rgb(215,188,34)" rx="2" ry="2" />
<text  x="658.45" y="735.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandConditionalBranch (44 samples, 0.90%)</title><rect x="496.2" y="725" width="10.6" height="15.0" fill="rgb(230,59,39)" rx="2" ry="2" />
<text  x="499.19" y="735.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="108.6" y="885" width="0.3" height="15.0" fill="rgb(209,160,27)" rx="2" ry="2" />
<text  x="111.63" y="895.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment@plt (8 samples, 0.16%)</title><rect x="1180.9" y="757" width="1.9" height="15.0" fill="rgb(246,174,37)" rx="2" ry="2" />
<text  x="1183.86" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="1066.8" y="709" width="0.5" height="15.0" fill="rgb(223,57,6)" rx="2" ry="2" />
<text  x="1069.83" y="719.5" ></text>
</g>
<g >
<title>Game_Map::IsPassableTile (1 samples, 0.02%)</title><rect x="653.8" y="677" width="0.2" height="15.0" fill="rgb(232,164,42)" rx="2" ry="2" />
<text  x="656.77" y="687.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (4 samples, 0.08%)</title><rect x="548.4" y="677" width="1.0" height="15.0" fill="rgb(253,14,19)" rx="2" ry="2" />
<text  x="551.40" y="687.5" ></text>
</g>
<g >
<title>Graphics::GlobalDraw (3 samples, 0.06%)</title><rect x="293.2" y="789" width="0.7" height="15.0" fill="rgb(223,168,36)" rx="2" ry="2" />
<text  x="296.15" y="799.5" ></text>
</g>
<g >
<title>swake_up_locked.part.6 (1 samples, 0.02%)</title><rect x="1042.0" y="597" width="0.3" height="15.0" fill="rgb(224,86,7)" rx="2" ry="2" />
<text  x="1045.05" y="607.5" ></text>
</g>
<g >
<title>Game_Map::UpdateForegroundEvents (1 samples, 0.02%)</title><rect x="653.3" y="773" width="0.2" height="15.0" fill="rgb(238,163,33)" rx="2" ry="2" />
<text  x="656.29" y="783.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (10 samples, 0.20%)</title><rect x="478.2" y="741" width="2.4" height="15.0" fill="rgb(242,174,34)" rx="2" ry="2" />
<text  x="481.15" y="751.5" ></text>
</g>
<g >
<title>XFlush (7 samples, 0.14%)</title><rect x="660.7" y="725" width="1.7" height="15.0" fill="rgb(240,171,43)" rx="2" ry="2" />
<text  x="663.74" y="735.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (1 samples, 0.02%)</title><rect x="548.4" y="357" width="0.2" height="15.0" fill="rgb(222,61,51)" rx="2" ry="2" />
<text  x="551.40" y="367.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (71 samples, 1.45%)</title><rect x="1048.3" y="661" width="17.1" height="15.0" fill="rgb(234,20,43)" rx="2" ry="2" />
<text  x="1051.30" y="671.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1182.5" y="741" width="0.3" height="15.0" fill="rgb(235,169,3)" rx="2" ry="2" />
<text  x="1185.54" y="751.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="242.2" y="821" width="0.2" height="15.0" fill="rgb(230,166,54)" rx="2" ry="2" />
<text  x="245.15" y="831.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="442.5" y="629" width="0.3" height="15.0" fill="rgb(234,142,29)" rx="2" ry="2" />
<text  x="445.55" y="639.5" ></text>
</g>
<g >
<title>[unknown] (60 samples, 1.22%)</title><rect x="242.9" y="933" width="14.4" height="15.0" fill="rgb(228,138,43)" rx="2" ry="2" />
<text  x="245.87" y="943.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1135.4" y="757" width="0.2" height="15.0" fill="rgb(211,201,44)" rx="2" ry="2" />
<text  x="1138.39" y="767.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (2 samples, 0.04%)</title><rect x="153.6" y="917" width="0.5" height="15.0" fill="rgb(215,84,11)" rx="2" ry="2" />
<text  x="156.62" y="927.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.02%)</title><rect x="1140.0" y="549" width="0.2" height="15.0" fill="rgb(232,184,20)" rx="2" ry="2" />
<text  x="1142.96" y="559.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="1133.5" y="645" width="0.2" height="15.0" fill="rgb(219,2,21)" rx="2" ry="2" />
<text  x="1136.47" y="655.5" ></text>
</g>
<g >
<title>finish_task_switch (74 samples, 1.51%)</title><rect x="117.3" y="789" width="17.8" height="15.0" fill="rgb(215,103,20)" rx="2" ry="2" />
<text  x="120.29" y="799.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (2 samples, 0.04%)</title><rect x="1066.8" y="773" width="0.5" height="15.0" fill="rgb(242,101,44)" rx="2" ry="2" />
<text  x="1069.83" y="783.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="476.7" y="709" width="0.2" height="15.0" fill="rgb(249,182,30)" rx="2" ry="2" />
<text  x="479.71" y="719.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (9 samples, 0.18%)</title><rect x="651.1" y="741" width="2.2" height="15.0" fill="rgb(242,124,13)" rx="2" ry="2" />
<text  x="654.12" y="751.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (1 samples, 0.02%)</title><rect x="635.2" y="565" width="0.3" height="15.0" fill="rgb(228,145,13)" rx="2" ry="2" />
<text  x="638.24" y="575.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="551.3" y="613" width="0.2" height="15.0" fill="rgb(224,156,30)" rx="2" ry="2" />
<text  x="554.28" y="623.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (24 samples, 0.49%)</title><rect x="553.0" y="549" width="5.7" height="15.0" fill="rgb(229,145,46)" rx="2" ry="2" />
<text  x="555.97" y="559.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.02%)</title><rect x="1140.2" y="709" width="0.2" height="15.0" fill="rgb(247,75,29)" rx="2" ry="2" />
<text  x="1143.20" y="719.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (1 samples, 0.02%)</title><rect x="168.8" y="933" width="0.2" height="15.0" fill="rgb(222,112,47)" rx="2" ry="2" />
<text  x="171.78" y="943.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (1 samples, 0.02%)</title><rect x="480.3" y="693" width="0.3" height="15.0" fill="rgb(217,12,21)" rx="2" ry="2" />
<text  x="483.32" y="703.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="553.9" y="293" width="0.3" height="15.0" fill="rgb(243,157,35)" rx="2" ry="2" />
<text  x="556.93" y="303.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="108.2" y="821" width="0.2" height="15.0" fill="rgb(232,57,52)" rx="2" ry="2" />
<text  x="111.15" y="831.5" ></text>
</g>
<g >
<title>__update_idle_core (1 samples, 0.02%)</title><rect x="114.2" y="789" width="0.2" height="15.0" fill="rgb(239,121,7)" rx="2" ry="2" />
<text  x="117.17" y="799.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="468.5" y="645" width="0.3" height="15.0" fill="rgb(226,113,14)" rx="2" ry="2" />
<text  x="471.53" y="655.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (58 samples, 1.18%)</title><rect x="1051.4" y="629" width="14.0" height="15.0" fill="rgb(250,37,52)" rx="2" ry="2" />
<text  x="1054.43" y="639.5" ></text>
</g>
<g >
<title>snd_usb_pcm_delay.part.14 (1 samples, 0.02%)</title><rect x="143.0" y="661" width="0.3" height="15.0" fill="rgb(245,222,46)" rx="2" ry="2" />
<text  x="146.04" y="671.5" ></text>
</g>
<g >
<title>main (3,850 samples, 78.49%)</title><rect x="257.3" y="901" width="926.2" height="15.0" fill="rgb(208,127,39)" rx="2" ry="2" />
<text  x="260.31" y="911.5" >main</text>
</g>
<g >
<title>AsyncHandler::IsImportantFilePending (1 samples, 0.02%)</title><rect x="289.5" y="821" width="0.3" height="15.0" fill="rgb(254,161,13)" rx="2" ry="2" />
<text  x="292.54" y="831.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (1 samples, 0.02%)</title><rect x="565.0" y="677" width="0.2" height="15.0" fill="rgb(249,193,15)" rx="2" ry="2" />
<text  x="568.00" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator++ (1 samples, 0.02%)</title><rect x="292.9" y="789" width="0.3" height="15.0" fill="rgb(252,84,21)" rx="2" ry="2" />
<text  x="295.91" y="799.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.02%)</title><rect x="672.3" y="725" width="0.2" height="15.0" fill="rgb(209,155,7)" rx="2" ry="2" />
<text  x="675.29" y="735.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1109.2" y="725" width="0.2" height="15.0" fill="rgb(254,2,12)" rx="2" ry="2" />
<text  x="1112.17" y="735.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="136.8" y="773" width="0.2" height="15.0" fill="rgb(211,19,25)" rx="2" ry="2" />
<text  x="139.78" y="783.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="1135.4" y="725" width="0.2" height="15.0" fill="rgb(220,4,24)" rx="2" ry="2" />
<text  x="1138.39" y="735.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (1 samples, 0.02%)</title><rect x="408.4" y="741" width="0.2" height="15.0" fill="rgb(251,107,50)" rx="2" ry="2" />
<text  x="411.39" y="751.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="559.5" y="437" width="0.2" height="15.0" fill="rgb(217,206,37)" rx="2" ry="2" />
<text  x="562.46" y="447.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.04%)</title><rect x="468.3" y="693" width="0.5" height="15.0" fill="rgb(212,65,44)" rx="2" ry="2" />
<text  x="471.29" y="703.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="529.2" y="645" width="0.2" height="15.0" fill="rgb(205,85,26)" rx="2" ry="2" />
<text  x="532.15" y="655.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="1132.5" y="581" width="0.2" height="15.0" fill="rgb(231,75,32)" rx="2" ry="2" />
<text  x="1135.50" y="591.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (19 samples, 0.39%)</title><rect x="660.7" y="741" width="4.6" height="15.0" fill="rgb(254,162,32)" rx="2" ry="2" />
<text  x="663.74" y="751.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.02%)</title><rect x="140.4" y="853" width="0.2" height="15.0" fill="rgb(229,75,37)" rx="2" ry="2" />
<text  x="143.39" y="863.5" ></text>
</g>
<g >
<title>remove_entity_load_avg (1 samples, 0.02%)</title><rect x="1140.2" y="645" width="0.2" height="15.0" fill="rgb(227,95,20)" rx="2" ry="2" />
<text  x="1143.20" y="655.5" ></text>
</g>
<g >
<title>ktime_get_raw_ts64 (11 samples, 0.22%)</title><rect x="1100.3" y="693" width="2.6" height="15.0" fill="rgb(209,109,6)" rx="2" ry="2" />
<text  x="1103.27" y="703.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="657.9" y="645" width="0.2" height="15.0" fill="rgb(230,39,49)" rx="2" ry="2" />
<text  x="660.86" y="655.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.02%)</title><rect x="468.8" y="629" width="0.2" height="15.0" fill="rgb(237,167,35)" rx="2" ry="2" />
<text  x="471.77" y="639.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="1046.9" y="677" width="0.2" height="15.0" fill="rgb(229,199,47)" rx="2" ry="2" />
<text  x="1049.86" y="687.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.20%)</title><rect x="665.8" y="725" width="2.4" height="15.0" fill="rgb(215,39,29)" rx="2" ry="2" />
<text  x="668.80" y="735.5" ></text>
</g>
<g >
<title>schedule (10 samples, 0.20%)</title><rect x="556.1" y="165" width="2.4" height="15.0" fill="rgb(227,171,14)" rx="2" ry="2" />
<text  x="559.10" y="175.5" ></text>
</g>
<g >
<title>__vfs_write (6 samples, 0.12%)</title><rect x="140.6" y="853" width="1.5" height="15.0" fill="rgb(224,36,21)" rx="2" ry="2" />
<text  x="143.63" y="863.5" ></text>
</g>
<g >
<title>put_timespec64 (2 samples, 0.04%)</title><rect x="1066.8" y="677" width="0.5" height="15.0" fill="rgb(221,152,4)" rx="2" ry="2" />
<text  x="1069.83" y="687.5" ></text>
</g>
<g >
<title>find_next_and_bit (1 samples, 0.02%)</title><rect x="108.2" y="773" width="0.2" height="15.0" fill="rgb(245,46,0)" rx="2" ry="2" />
<text  x="111.15" y="783.5" ></text>
</g>
<g >
<title>__calc_delta (1 samples, 0.02%)</title><rect x="115.4" y="725" width="0.2" height="15.0" fill="rgb(232,112,14)" rx="2" ry="2" />
<text  x="118.37" y="735.5" ></text>
</g>
<g >
<title>put_prev_task_fair (1 samples, 0.02%)</title><rect x="1046.9" y="629" width="0.2" height="15.0" fill="rgb(221,75,19)" rx="2" ry="2" />
<text  x="1049.86" y="639.5" ></text>
</g>
<g >
<title>_copy_to_user (2 samples, 0.04%)</title><rect x="560.9" y="501" width="0.5" height="15.0" fill="rgb(233,177,41)" rx="2" ry="2" />
<text  x="563.91" y="511.5" ></text>
</g>
<g >
<title>sock_recvmsg (1 samples, 0.02%)</title><rect x="669.6" y="533" width="0.3" height="15.0" fill="rgb(233,212,7)" rx="2" ry="2" />
<text  x="672.65" y="543.5" ></text>
</g>
<g >
<title>operator== (1 samples, 0.02%)</title><rect x="407.2" y="725" width="0.2" height="15.0" fill="rgb(218,209,47)" rx="2" ry="2" />
<text  x="410.18" y="735.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="635.2" y="709" width="0.3" height="15.0" fill="rgb(246,86,39)" rx="2" ry="2" />
<text  x="638.24" y="719.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (1 samples, 0.02%)</title><rect x="155.8" y="917" width="0.2" height="15.0" fill="rgb(249,67,49)" rx="2" ry="2" />
<text  x="158.79" y="927.5" ></text>
</g>
<g >
<title>update_blocked_averages (3 samples, 0.06%)</title><rect x="241.2" y="837" width="0.7" height="15.0" fill="rgb(230,47,32)" rx="2" ry="2" />
<text  x="244.19" y="847.5" ></text>
</g>
<g >
<title>usb_submit_urb (1 samples, 0.02%)</title><rect x="1140.0" y="517" width="0.2" height="15.0" fill="rgb(232,10,38)" rx="2" ry="2" />
<text  x="1142.96" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="663.4" y="677" width="0.2" height="15.0" fill="rgb(210,42,9)" rx="2" ry="2" />
<text  x="666.39" y="687.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (1 samples, 0.02%)</title><rect x="405.7" y="517" width="0.3" height="15.0" fill="rgb(232,46,7)" rx="2" ry="2" />
<text  x="408.74" y="527.5" ></text>
</g>
<g >
<title>retire_playback_urb (1 samples, 0.02%)</title><rect x="143.0" y="677" width="0.3" height="15.0" fill="rgb(232,23,22)" rx="2" ry="2" />
<text  x="146.04" y="687.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (1 samples, 0.02%)</title><rect x="408.4" y="677" width="0.2" height="15.0" fill="rgb(240,187,37)" rx="2" ry="2" />
<text  x="411.39" y="687.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (6 samples, 0.12%)</title><rect x="163.7" y="805" width="1.5" height="15.0" fill="rgb(244,103,5)" rx="2" ry="2" />
<text  x="166.72" y="815.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (2 samples, 0.04%)</title><rect x="662.9" y="709" width="0.5" height="15.0" fill="rgb(240,4,51)" rx="2" ry="2" />
<text  x="665.91" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.02%)</title><rect x="255.6" y="901" width="0.3" height="15.0" fill="rgb(206,3,49)" rx="2" ry="2" />
<text  x="258.62" y="911.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1064.4" y="549" width="0.3" height="15.0" fill="rgb(225,223,50)" rx="2" ry="2" />
<text  x="1067.42" y="559.5" ></text>
</g>
<g >
<title>__libc_recvmsg (3 samples, 0.06%)</title><rect x="661.7" y="629" width="0.7" height="15.0" fill="rgb(212,208,39)" rx="2" ry="2" />
<text  x="664.71" y="639.5" ></text>
</g>
<g >
<title>put_prev_entity (1 samples, 0.02%)</title><rect x="1046.9" y="613" width="0.2" height="15.0" fill="rgb(217,168,13)" rx="2" ry="2" />
<text  x="1049.86" y="623.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1134.7" y="709" width="0.2" height="15.0" fill="rgb(218,169,52)" rx="2" ry="2" />
<text  x="1137.67" y="719.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (1 samples, 0.02%)</title><rect x="671.3" y="645" width="0.3" height="15.0" fill="rgb(248,7,36)" rx="2" ry="2" />
<text  x="674.33" y="655.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (2 samples, 0.04%)</title><rect x="549.8" y="549" width="0.5" height="15.0" fill="rgb(227,104,27)" rx="2" ry="2" />
<text  x="552.84" y="559.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="554.2" y="389" width="0.2" height="15.0" fill="rgb(237,132,4)" rx="2" ry="2" />
<text  x="557.17" y="399.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (3 samples, 0.06%)</title><rect x="108.2" y="917" width="0.7" height="15.0" fill="rgb(212,200,47)" rx="2" ry="2" />
<text  x="111.15" y="927.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="635.2" y="581" width="0.3" height="15.0" fill="rgb(244,111,50)" rx="2" ry="2" />
<text  x="638.24" y="591.5" ></text>
</g>
<g >
<title>xhci_queue_isoc_tx_prepare (1 samples, 0.02%)</title><rect x="468.8" y="437" width="0.2" height="15.0" fill="rgb(251,157,30)" rx="2" ry="2" />
<text  x="471.77" y="447.5" ></text>
</g>
<g >
<title>pixman_image_get_height (1 samples, 0.02%)</title><rect x="407.4" y="741" width="0.3" height="15.0" fill="rgb(237,166,35)" rx="2" ry="2" />
<text  x="410.42" y="751.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (1 samples, 0.02%)</title><rect x="1065.4" y="757" width="0.2" height="15.0" fill="rgb(225,151,30)" rx="2" ry="2" />
<text  x="1068.38" y="767.5" ></text>
</g>
<g >
<title>Cache::SystemOrBlack (1 samples, 0.02%)</title><rect x="658.3" y="709" width="0.3" height="15.0" fill="rgb(236,182,12)" rx="2" ry="2" />
<text  x="661.34" y="719.5" ></text>
</g>
<g >
<title>Window_Base::Update (6 samples, 0.12%)</title><rect x="658.6" y="741" width="1.4" height="15.0" fill="rgb(207,147,17)" rx="2" ry="2" />
<text  x="661.58" y="751.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (28 samples, 0.57%)</title><rect x="158.7" y="901" width="6.7" height="15.0" fill="rgb(225,58,27)" rx="2" ry="2" />
<text  x="161.67" y="911.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.04%)</title><rect x="108.2" y="901" width="0.4" height="15.0" fill="rgb(236,168,40)" rx="2" ry="2" />
<text  x="111.15" y="911.5" ></text>
</g>
<g >
<title>std::__merge_adaptive&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, long, Drawable**, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (2 samples, 0.04%)</title><rect x="293.4" y="725" width="0.5" height="15.0" fill="rgb(240,32,21)" rx="2" ry="2" />
<text  x="296.39" y="735.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandPlaySound (4 samples, 0.08%)</title><rect x="548.4" y="725" width="1.0" height="15.0" fill="rgb(219,42,13)" rx="2" ry="2" />
<text  x="551.40" y="735.5" ></text>
</g>
<g >
<title>xhci_hub_status_data (1 samples, 0.02%)</title><rect x="443.0" y="565" width="0.3" height="15.0" fill="rgb(252,221,19)" rx="2" ry="2" />
<text  x="446.03" y="575.5" ></text>
</g>
<g >
<title>Window::Update (1 samples, 0.02%)</title><rect x="659.8" y="725" width="0.2" height="15.0" fill="rgb(218,61,36)" rx="2" ry="2" />
<text  x="662.78" y="735.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (2 samples, 0.04%)</title><rect x="407.9" y="677" width="0.5" height="15.0" fill="rgb(234,210,4)" rx="2" ry="2" />
<text  x="410.90" y="687.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.04%)</title><rect x="466.6" y="597" width="0.5" height="15.0" fill="rgb(221,72,15)" rx="2" ry="2" />
<text  x="469.60" y="607.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (65 samples, 1.33%)</title><rect x="549.4" y="693" width="15.6" height="15.0" fill="rgb(248,155,7)" rx="2" ry="2" />
<text  x="552.36" y="703.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.02%)</title><rect x="1132.5" y="517" width="0.2" height="15.0" fill="rgb(248,214,43)" rx="2" ry="2" />
<text  x="1135.50" y="527.5" ></text>
</g>
<g >
<title>security_file_permission (1 samples, 0.02%)</title><rect x="140.1" y="853" width="0.3" height="15.0" fill="rgb(229,72,27)" rx="2" ry="2" />
<text  x="143.15" y="863.5" ></text>
</g>
<g >
<title>xhci_irq (2 samples, 0.04%)</title><rect x="634.5" y="581" width="0.5" height="15.0" fill="rgb(220,211,36)" rx="2" ry="2" />
<text  x="637.52" y="591.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="574.4" y="629" width="0.2" height="15.0" fill="rgb(216,132,41)" rx="2" ry="2" />
<text  x="577.38" y="639.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="482.2" y="773" width="0.3" height="15.0" fill="rgb(254,10,27)" rx="2" ry="2" />
<text  x="485.24" y="783.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.02%)</title><rect x="647.0" y="613" width="0.3" height="15.0" fill="rgb(252,194,13)" rx="2" ry="2" />
<text  x="650.03" y="623.5" ></text>
</g>
<g >
<title>Sprite::SetOpacity (1 samples, 0.02%)</title><rect x="563.6" y="613" width="0.2" height="15.0" fill="rgb(206,133,27)" rx="2" ry="2" />
<text  x="566.55" y="623.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="564.3" y="613" width="0.2" height="15.0" fill="rgb(243,50,51)" rx="2" ry="2" />
<text  x="567.28" y="623.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="1133.7" y="773" width="0.2" height="15.0" fill="rgb(221,130,35)" rx="2" ry="2" />
<text  x="1136.71" y="783.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, true&gt; (1 samples, 0.02%)</title><rect x="560.2" y="581" width="0.2" height="15.0" fill="rgb(230,224,44)" rx="2" ry="2" />
<text  x="563.19" y="591.5" ></text>
</g>
<g >
<title>GetRequest (4 samples, 0.08%)</title><rect x="549.6" y="661" width="1.0" height="15.0" fill="rgb(220,59,34)" rx="2" ry="2" />
<text  x="552.60" y="671.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="242.2" y="837" width="0.2" height="15.0" fill="rgb(254,79,18)" rx="2" ry="2" />
<text  x="245.15" y="847.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="1135.4" y="741" width="0.2" height="15.0" fill="rgb(214,176,5)" rx="2" ry="2" />
<text  x="1138.39" y="751.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (96 samples, 1.96%)</title><rect x="420.4" y="709" width="23.1" height="15.0" fill="rgb(233,227,18)" rx="2" ry="2" />
<text  x="423.41" y="719.5" >[..</text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.04%)</title><rect x="1066.8" y="741" width="0.5" height="15.0" fill="rgb(252,90,29)" rx="2" ry="2" />
<text  x="1069.83" y="751.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (70 samples, 1.43%)</title><rect x="117.8" y="725" width="16.8" height="15.0" fill="rgb(206,153,12)" rx="2" ry="2" />
<text  x="120.78" y="735.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (3 samples, 0.06%)</title><rect x="661.0" y="661" width="0.7" height="15.0" fill="rgb(205,15,21)" rx="2" ry="2" />
<text  x="663.98" y="671.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (22 samples, 0.45%)</title><rect x="519.3" y="709" width="5.3" height="15.0" fill="rgb(224,158,22)" rx="2" ry="2" />
<text  x="522.29" y="719.5" ></text>
</g>
<g >
<title>__GI___writev (1 samples, 0.02%)</title><rect x="670.8" y="645" width="0.3" height="15.0" fill="rgb(230,175,11)" rx="2" ry="2" />
<text  x="673.85" y="655.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (4 samples, 0.08%)</title><rect x="169.0" y="933" width="1.0" height="15.0" fill="rgb(221,22,54)" rx="2" ry="2" />
<text  x="172.02" y="943.5" ></text>
</g>
<g >
<title>__sched_text_start (59 samples, 1.20%)</title><rect x="1119.5" y="677" width="14.2" height="15.0" fill="rgb(239,19,9)" rx="2" ry="2" />
<text  x="1122.51" y="687.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="482.0" y="757" width="0.2" height="15.0" fill="rgb(217,152,24)" rx="2" ry="2" />
<text  x="485.00" y="767.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.02%)</title><rect x="1132.5" y="437" width="0.2" height="15.0" fill="rgb(222,22,30)" rx="2" ry="2" />
<text  x="1135.50" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="555.4" y="421" width="0.2" height="15.0" fill="rgb(252,51,29)" rx="2" ry="2" />
<text  x="558.37" y="431.5" ></text>
</g>
<g >
<title>rcu_irq_enter (1 samples, 0.02%)</title><rect x="405.3" y="613" width="0.2" height="15.0" fill="rgb(225,107,20)" rx="2" ry="2" />
<text  x="408.26" y="623.5" ></text>
</g>
<g >
<title>_XReply (1 samples, 0.02%)</title><rect x="671.3" y="677" width="0.3" height="15.0" fill="rgb(229,213,17)" rx="2" ry="2" />
<text  x="674.33" y="687.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="134.9" y="597" width="0.2" height="15.0" fill="rgb(232,193,22)" rx="2" ry="2" />
<text  x="137.86" y="607.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="287.1" y="773" width="0.3" height="15.0" fill="rgb(229,121,32)" rx="2" ry="2" />
<text  x="290.14" y="783.5" ></text>
</g>
<g >
<title>new_sync_read (12 samples, 0.24%)</title><rect x="555.9" y="245" width="2.8" height="15.0" fill="rgb(251,99,5)" rx="2" ry="2" />
<text  x="558.86" y="255.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="108.6" y="853" width="0.3" height="15.0" fill="rgb(231,173,46)" rx="2" ry="2" />
<text  x="111.63" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="560.2" y="485" width="0.2" height="15.0" fill="rgb(215,115,37)" rx="2" ry="2" />
<text  x="563.19" y="495.5" ></text>
</g>
<g >
<title>TilemapLayer::Draw (288 samples, 5.87%)</title><rect x="408.6" y="773" width="69.3" height="15.0" fill="rgb(219,194,29)" rx="2" ry="2" />
<text  x="411.63" y="783.5" >Tilemap..</text>
</g>
<g >
<title>do_sys_poll (105 samples, 2.14%)</title><rect x="112.0" y="885" width="25.3" height="15.0" fill="rgb(221,150,15)" rx="2" ry="2" />
<text  x="115.00" y="895.5" >d..</text>
</g>
<g >
<title>__x64_sys_recvmsg (1 samples, 0.02%)</title><rect x="661.5" y="565" width="0.2" height="15.0" fill="rgb(246,160,32)" rx="2" ry="2" />
<text  x="664.47" y="575.5" ></text>
</g>
<g >
<title>std::_Temporary_buffer&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable*&gt;::_Temporary_buffer (1 samples, 0.02%)</title><rect x="477.9" y="741" width="0.3" height="15.0" fill="rgb(221,41,33)" rx="2" ry="2" />
<text  x="480.91" y="751.5" ></text>
</g>
<g >
<title>__update_idle_core (1 samples, 0.02%)</title><rect x="1133.2" y="645" width="0.3" height="15.0" fill="rgb(244,39,28)" rx="2" ry="2" />
<text  x="1136.23" y="655.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.02%)</title><rect x="634.8" y="549" width="0.2" height="15.0" fill="rgb(240,66,25)" rx="2" ry="2" />
<text  x="637.76" y="559.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (2 samples, 0.04%)</title><rect x="407.9" y="725" width="0.5" height="15.0" fill="rgb(231,104,29)" rx="2" ry="2" />
<text  x="410.90" y="735.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (1,637 samples, 33.37%)</title><rect x="673.0" y="789" width="393.8" height="15.0" fill="rgb(205,45,36)" rx="2" ry="2" />
<text  x="676.01" y="799.5" >[libSDL2-2.0.so.0.9.0]</text>
</g>
<g >
<title>__GI___poll (1 samples, 0.02%)</title><rect x="671.3" y="613" width="0.3" height="15.0" fill="rgb(238,31,3)" rx="2" ry="2" />
<text  x="674.33" y="623.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.02%)</title><rect x="1119.3" y="693" width="0.2" height="15.0" fill="rgb(229,119,37)" rx="2" ry="2" />
<text  x="1122.27" y="703.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (397 samples, 8.09%)</title><rect x="310.5" y="693" width="95.5" height="15.0" fill="rgb(229,214,13)" rx="2" ry="2" />
<text  x="313.47" y="703.5" >pixman_imag..</text>
</g>
<g >
<title>rh_timer_func (1 samples, 0.02%)</title><rect x="443.0" y="597" width="0.3" height="15.0" fill="rgb(205,186,22)" rx="2" ry="2" />
<text  x="446.03" y="607.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="667.7" y="597" width="0.3" height="15.0" fill="rgb(228,140,48)" rx="2" ry="2" />
<text  x="670.72" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (60 samples, 1.22%)</title><rect x="1141.4" y="773" width="14.4" height="15.0" fill="rgb(254,100,25)" rx="2" ry="2" />
<text  x="1144.40" y="783.5" ></text>
</g>
<g >
<title>generic_file_read_iter (12 samples, 0.24%)</title><rect x="555.9" y="213" width="2.8" height="15.0" fill="rgb(208,30,29)" rx="2" ry="2" />
<text  x="558.86" y="223.5" ></text>
</g>
<g >
<title>ext4_readpages (1 samples, 0.02%)</title><rect x="558.5" y="117" width="0.2" height="15.0" fill="rgb(213,134,21)" rx="2" ry="2" />
<text  x="561.50" y="127.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.04%)</title><rect x="549.8" y="533" width="0.5" height="15.0" fill="rgb(240,129,12)" rx="2" ry="2" />
<text  x="552.84" y="543.5" ></text>
</g>
<g >
<title>Cache::System (1 samples, 0.02%)</title><rect x="658.3" y="677" width="0.3" height="15.0" fill="rgb(222,1,16)" rx="2" ry="2" />
<text  x="661.34" y="687.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="555.9" y="165" width="0.2" height="15.0" fill="rgb(238,36,43)" rx="2" ry="2" />
<text  x="558.86" y="175.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="289.3" y="677" width="0.2" height="15.0" fill="rgb(208,178,49)" rx="2" ry="2" />
<text  x="292.30" y="687.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (24 samples, 0.49%)</title><rect x="553.0" y="453" width="5.7" height="15.0" fill="rgb(229,206,47)" rx="2" ry="2" />
<text  x="555.97" y="463.5" ></text>
</g>
<g >
<title>skb_copy_datagram_from_iter (1 samples, 0.02%)</title><rect x="662.9" y="421" width="0.2" height="15.0" fill="rgb(225,125,35)" rx="2" ry="2" />
<text  x="665.91" y="431.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.02%)</title><rect x="562.1" y="565" width="0.3" height="15.0" fill="rgb(209,70,29)" rx="2" ry="2" />
<text  x="565.11" y="575.5" ></text>
</g>
<g >
<title>schedule (3 samples, 0.06%)</title><rect x="165.9" y="837" width="0.7" height="15.0" fill="rgb(210,178,17)" rx="2" ry="2" />
<text  x="168.89" y="847.5" ></text>
</g>
<g >
<title>do_IRQ (5 samples, 0.10%)</title><rect x="142.3" y="917" width="1.2" height="15.0" fill="rgb(219,156,34)" rx="2" ry="2" />
<text  x="145.31" y="927.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="166.4" y="789" width="0.2" height="15.0" fill="rgb(228,39,38)" rx="2" ry="2" />
<text  x="169.37" y="799.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandKeyInputProc (5 samples, 0.10%)</title><rect x="545.5" y="725" width="1.2" height="15.0" fill="rgb(224,137,30)" rx="2" ry="2" />
<text  x="548.51" y="735.5" ></text>
</g>
<g >
<title>Bitmap::width (1 samples, 0.02%)</title><rect x="655.2" y="709" width="0.3" height="15.0" fill="rgb(212,5,2)" rx="2" ry="2" />
<text  x="658.21" y="719.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="134.9" y="661" width="0.2" height="15.0" fill="rgb(208,108,2)" rx="2" ry="2" />
<text  x="137.86" y="671.5" ></text>
</g>
<g >
<title>__atomic_add (1 samples, 0.02%)</title><rect x="559.9" y="501" width="0.3" height="15.0" fill="rgb(210,106,2)" rx="2" ry="2" />
<text  x="562.94" y="511.5" ></text>
</g>
<g >
<title>retire_playback_urb (1 samples, 0.02%)</title><rect x="529.2" y="469" width="0.2" height="15.0" fill="rgb(244,39,36)" rx="2" ry="2" />
<text  x="532.15" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="478.4" y="693" width="0.2" height="15.0" fill="rgb(215,38,0)" rx="2" ry="2" />
<text  x="481.39" y="703.5" ></text>
</g>
<g >
<title>xhci_queue_isoc_tx_prepare (1 samples, 0.02%)</title><rect x="1140.0" y="469" width="0.2" height="15.0" fill="rgb(224,67,16)" rx="2" ry="2" />
<text  x="1142.96" y="479.5" ></text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt;, 36ul&gt; (1 samples, 0.02%)</title><rect x="155.1" y="917" width="0.2" height="15.0" fill="rgb(249,200,52)" rx="2" ry="2" />
<text  x="158.06" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (1 samples, 0.02%)</title><rect x="506.5" y="693" width="0.3" height="15.0" fill="rgb(215,24,28)" rx="2" ry="2" />
<text  x="509.54" y="703.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_allocate (1 samples, 0.02%)</title><rect x="555.4" y="373" width="0.2" height="15.0" fill="rgb(214,224,7)" rx="2" ry="2" />
<text  x="558.37" y="383.5" ></text>
</g>
<g >
<title>Scene::HasRequestedScene (2 samples, 0.04%)</title><rect x="646.6" y="725" width="0.4" height="15.0" fill="rgb(236,51,35)" rx="2" ry="2" />
<text  x="649.55" y="735.5" ></text>
</g>
<g >
<title>LoadBitmap (6 samples, 0.12%)</title><rect x="559.0" y="597" width="1.4" height="15.0" fill="rgb(228,109,6)" rx="2" ry="2" />
<text  x="561.98" y="607.5" ></text>
</g>
<g >
<title>ext4_mpage_readpages (1 samples, 0.02%)</title><rect x="558.5" y="101" width="0.2" height="15.0" fill="rgb(254,93,51)" rx="2" ry="2" />
<text  x="561.50" y="111.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (92 samples, 1.88%)</title><rect x="1160.7" y="789" width="22.1" height="15.0" fill="rgb(242,12,34)" rx="2" ry="2" />
<text  x="1163.65" y="799.5" >A..</text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (24 samples, 0.49%)</title><rect x="553.0" y="533" width="5.7" height="15.0" fill="rgb(233,24,23)" rx="2" ry="2" />
<text  x="555.97" y="543.5" ></text>
</g>
<g >
<title>[libGLX.so.0.0.0] (3 samples, 0.06%)</title><rect x="1134.2" y="757" width="0.7" height="15.0" fill="rgb(214,81,38)" rx="2" ry="2" />
<text  x="1137.19" y="767.5" ></text>
</g>
<g >
<title>__wake_up_locked (1 samples, 0.02%)</title><rect x="670.8" y="373" width="0.3" height="15.0" fill="rgb(243,36,44)" rx="2" ry="2" />
<text  x="673.85" y="383.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="476.7" y="725" width="0.2" height="15.0" fill="rgb(225,210,52)" rx="2" ry="2" />
<text  x="479.71" y="735.5" ></text>
</g>
<g >
<title>__mnt_want_write (1 samples, 0.02%)</title><rect x="141.8" y="773" width="0.3" height="15.0" fill="rgb(212,101,28)" rx="2" ry="2" />
<text  x="144.83" y="783.5" ></text>
</g>
<g >
<title>irq_work_interrupt (1 samples, 0.02%)</title><rect x="134.9" y="773" width="0.2" height="15.0" fill="rgb(254,139,45)" rx="2" ry="2" />
<text  x="137.86" y="783.5" ></text>
</g>
<g >
<title>pixman_region32_rectangles (1 samples, 0.02%)</title><rect x="467.8" y="709" width="0.2" height="15.0" fill="rgb(219,170,8)" rx="2" ry="2" />
<text  x="470.81" y="719.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.02%)</title><rect x="468.8" y="565" width="0.2" height="15.0" fill="rgb(228,95,5)" rx="2" ry="2" />
<text  x="471.77" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (2 samples, 0.04%)</title><rect x="524.1" y="693" width="0.5" height="15.0" fill="rgb(223,69,25)" rx="2" ry="2" />
<text  x="527.10" y="703.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (1 samples, 0.02%)</title><rect x="669.6" y="517" width="0.3" height="15.0" fill="rgb(219,176,46)" rx="2" ry="2" />
<text  x="672.65" y="527.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (6 samples, 0.12%)</title><rect x="308.8" y="709" width="1.4" height="15.0" fill="rgb(253,146,48)" rx="2" ry="2" />
<text  x="311.79" y="719.5" ></text>
</g>
<g >
<title>handle_tx_event (3 samples, 0.06%)</title><rect x="1045.7" y="581" width="0.7" height="15.0" fill="rgb(254,13,18)" rx="2" ry="2" />
<text  x="1048.66" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="565.0" y="693" width="0.2" height="15.0" fill="rgb(208,99,18)" rx="2" ry="2" />
<text  x="568.00" y="703.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="670.8" y="325" width="0.3" height="15.0" fill="rgb(250,28,43)" rx="2" ry="2" />
<text  x="673.85" y="335.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="442.5" y="597" width="0.3" height="15.0" fill="rgb(244,218,54)" rx="2" ry="2" />
<text  x="445.55" y="607.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (60 samples, 1.22%)</title><rect x="452.9" y="693" width="14.4" height="15.0" fill="rgb(226,65,16)" rx="2" ry="2" />
<text  x="455.89" y="703.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (24 samples, 0.49%)</title><rect x="553.0" y="501" width="5.7" height="15.0" fill="rgb(209,179,45)" rx="2" ry="2" />
<text  x="555.97" y="511.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="141.6" y="789" width="0.2" height="15.0" fill="rgb(251,194,35)" rx="2" ry="2" />
<text  x="144.59" y="799.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.04%)</title><rect x="669.9" y="533" width="0.5" height="15.0" fill="rgb(224,226,35)" rx="2" ry="2" />
<text  x="672.89" y="543.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="657.9" y="629" width="0.2" height="15.0" fill="rgb(237,186,19)" rx="2" ry="2" />
<text  x="660.86" y="639.5" ></text>
</g>
<g >
<title>FileRequestAsync::Bind (3 samples, 0.06%)</title><rect x="550.6" y="661" width="0.7" height="15.0" fill="rgb(212,84,41)" rx="2" ry="2" />
<text  x="553.56" y="671.5" ></text>
</g>
<g >
<title>page_cache_sync_readahead (1 samples, 0.02%)</title><rect x="558.5" y="181" width="0.2" height="15.0" fill="rgb(221,172,8)" rx="2" ry="2" />
<text  x="561.50" y="191.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (97 samples, 1.98%)</title><rect x="444.7" y="725" width="23.3" height="15.0" fill="rgb(241,42,14)" rx="2" ry="2" />
<text  x="447.71" y="735.5" >p..</text>
</g>
<g >
<title>__update_idle_core (1 samples, 0.02%)</title><rect x="137.0" y="773" width="0.3" height="15.0" fill="rgb(222,220,3)" rx="2" ry="2" />
<text  x="140.02" y="783.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.02%)</title><rect x="635.0" y="645" width="0.2" height="15.0" fill="rgb(232,118,51)" rx="2" ry="2" />
<text  x="638.00" y="655.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (2 samples, 0.04%)</title><rect x="559.0" y="485" width="0.5" height="15.0" fill="rgb(239,49,2)" rx="2" ry="2" />
<text  x="561.98" y="495.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (1 samples, 0.02%)</title><rect x="563.8" y="629" width="0.2" height="15.0" fill="rgb(211,37,8)" rx="2" ry="2" />
<text  x="566.79" y="639.5" ></text>
</g>
<g >
<title>__atomic_add (15 samples, 0.31%)</title><rect x="469.0" y="661" width="3.6" height="15.0" fill="rgb(225,106,51)" rx="2" ry="2" />
<text  x="472.01" y="671.5" ></text>
</g>
<g >
<title>rcu_accelerate_cbs_unlocked (1 samples, 0.02%)</title><rect x="1042.0" y="645" width="0.3" height="15.0" fill="rgb(208,140,35)" rx="2" ry="2" />
<text  x="1045.05" y="655.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1140.2" y="693" width="0.2" height="15.0" fill="rgb(207,144,16)" rx="2" ry="2" />
<text  x="1143.20" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="661.5" y="581" width="0.2" height="15.0" fill="rgb(245,176,17)" rx="2" ry="2" />
<text  x="664.47" y="591.5" ></text>
</g>
<g >
<title>update_group_capacity (1 samples, 0.02%)</title><rect x="136.3" y="725" width="0.2" height="15.0" fill="rgb(230,120,25)" rx="2" ry="2" />
<text  x="139.30" y="735.5" ></text>
</g>
<g >
<title>XFlush (1 samples, 0.02%)</title><rect x="245.5" y="917" width="0.3" height="15.0" fill="rgb(240,61,28)" rx="2" ry="2" />
<text  x="248.52" y="927.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.24%)</title><rect x="555.9" y="341" width="2.8" height="15.0" fill="rgb(234,81,50)" rx="2" ry="2" />
<text  x="558.86" y="351.5" ></text>
</g>
<g >
<title>do_IRQ (4 samples, 0.08%)</title><rect x="404.5" y="645" width="1.0" height="15.0" fill="rgb(236,195,15)" rx="2" ry="2" />
<text  x="407.54" y="655.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="165.2" y="821" width="0.2" height="15.0" fill="rgb(205,215,53)" rx="2" ry="2" />
<text  x="168.17" y="831.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.02%)</title><rect x="468.8" y="597" width="0.2" height="15.0" fill="rgb(210,75,4)" rx="2" ry="2" />
<text  x="471.77" y="607.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="443.3" y="597" width="0.2" height="15.0" fill="rgb(230,181,29)" rx="2" ry="2" />
<text  x="446.27" y="607.5" ></text>
</g>
<g >
<title>usb_hcd_submit_urb (1 samples, 0.02%)</title><rect x="1135.4" y="517" width="0.2" height="15.0" fill="rgb(210,1,11)" rx="2" ry="2" />
<text  x="1138.39" y="527.5" ></text>
</g>
<g >
<title>pick_next_task_fair (2 samples, 0.04%)</title><rect x="166.1" y="805" width="0.5" height="15.0" fill="rgb(233,194,13)" rx="2" ry="2" />
<text  x="169.13" y="815.5" ></text>
</g>
<g >
<title>sock_write_iter (1 samples, 0.02%)</title><rect x="662.9" y="453" width="0.2" height="15.0" fill="rgb(231,90,44)" rx="2" ry="2" />
<text  x="665.91" y="463.5" ></text>
</g>
<g >
<title>Window_Message::Update (10 samples, 0.20%)</title><rect x="657.6" y="773" width="2.4" height="15.0" fill="rgb(219,212,21)" rx="2" ry="2" />
<text  x="660.62" y="783.5" ></text>
</g>
<g >
<title>Game_Player::UpdateSelfMovement (3 samples, 0.06%)</title><rect x="653.8" y="741" width="0.7" height="15.0" fill="rgb(207,58,53)" rx="2" ry="2" />
<text  x="656.77" y="751.5" ></text>
</g>
<g >
<title>pixman_region32_fini (1 samples, 0.02%)</title><rect x="256.6" y="917" width="0.2" height="15.0" fill="rgb(245,31,26)" rx="2" ry="2" />
<text  x="259.59" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (2 samples, 0.04%)</title><rect x="552.2" y="549" width="0.5" height="15.0" fill="rgb(206,109,13)" rx="2" ry="2" />
<text  x="555.25" y="559.5" ></text>
</g>
<g >
<title>SdlMixerAudio::Update (2 samples, 0.04%)</title><rect x="1066.8" y="789" width="0.5" height="15.0" fill="rgb(225,209,32)" rx="2" ry="2" />
<text  x="1069.83" y="799.5" ></text>
</g>
<g >
<title>rcu_gp_kthread_wake (1 samples, 0.02%)</title><rect x="1042.0" y="629" width="0.3" height="15.0" fill="rgb(251,1,3)" rx="2" ry="2" />
<text  x="1045.05" y="639.5" ></text>
</g>
<g >
<title>usb_hcd_submit_urb (1 samples, 0.02%)</title><rect x="143.3" y="661" width="0.2" height="15.0" fill="rgb(250,107,37)" rx="2" ry="2" />
<text  x="146.28" y="671.5" ></text>
</g>
<g >
<title>Opacity::IsSplit (1 samples, 0.02%)</title><rect x="416.1" y="709" width="0.2" height="15.0" fill="rgb(254,0,31)" rx="2" ry="2" />
<text  x="419.08" y="719.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (1 samples, 0.02%)</title><rect x="406.5" y="725" width="0.2" height="15.0" fill="rgb(221,47,40)" rx="2" ry="2" />
<text  x="409.46" y="735.5" ></text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.06%)</title><rect x="634.5" y="709" width="0.7" height="15.0" fill="rgb(243,56,52)" rx="2" ry="2" />
<text  x="637.52" y="719.5" ></text>
</g>
<g >
<title>prepare_outbound_urb (1 samples, 0.02%)</title><rect x="165.2" y="597" width="0.2" height="15.0" fill="rgb(241,130,35)" rx="2" ry="2" />
<text  x="168.17" y="607.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (24 samples, 0.49%)</title><rect x="553.0" y="517" width="5.7" height="15.0" fill="rgb(217,120,51)" rx="2" ry="2" />
<text  x="555.97" y="527.5" ></text>
</g>
<g >
<title>__libc_recvmsg (3 samples, 0.06%)</title><rect x="661.7" y="645" width="0.7" height="15.0" fill="rgb(206,74,45)" rx="2" ry="2" />
<text  x="664.71" y="655.5" ></text>
</g>
<g >
<title>irq_work_interrupt (2 samples, 0.04%)</title><rect x="1132.0" y="645" width="0.5" height="15.0" fill="rgb(238,28,54)" rx="2" ry="2" />
<text  x="1135.02" y="655.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="443.5" y="709" width="0.2" height="15.0" fill="rgb(205,78,13)" rx="2" ry="2" />
<text  x="446.51" y="719.5" ></text>
</g>
<g >
<title>usb_hcd_submit_urb (1 samples, 0.02%)</title><rect x="1140.0" y="501" width="0.2" height="15.0" fill="rgb(238,195,5)" rx="2" ry="2" />
<text  x="1142.96" y="511.5" ></text>
</g>
<g >
<title>__libc_recvmsg (2 samples, 0.04%)</title><rect x="661.2" y="629" width="0.5" height="15.0" fill="rgb(228,110,46)" rx="2" ry="2" />
<text  x="664.23" y="639.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="529.2" y="693" width="0.2" height="15.0" fill="rgb(205,130,53)" rx="2" ry="2" />
<text  x="532.15" y="703.5" ></text>
</g>
<g >
<title>run_rebalance_domains (6 samples, 0.12%)</title><rect x="1042.5" y="661" width="1.5" height="15.0" fill="rgb(215,196,47)" rx="2" ry="2" />
<text  x="1045.53" y="671.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="544.8" y="661" width="0.2" height="15.0" fill="rgb(217,60,15)" rx="2" ry="2" />
<text  x="547.79" y="671.5" ></text>
</g>
<g >
<title>Graphics::LocalDraw (776 samples, 15.82%)</title><rect x="293.9" y="789" width="186.7" height="15.0" fill="rgb(207,138,51)" rx="2" ry="2" />
<text  x="296.87" y="799.5" >Graphics::LocalDraw</text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="134.6" y="773" width="0.3" height="15.0" fill="rgb(242,69,22)" rx="2" ry="2" />
<text  x="137.62" y="783.5" ></text>
</g>
<g >
<title>usb_submit_urb (1 samples, 0.02%)</title><rect x="468.8" y="485" width="0.2" height="15.0" fill="rgb(238,152,48)" rx="2" ry="2" />
<text  x="471.77" y="495.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="242.2" y="869" width="0.2" height="15.0" fill="rgb(209,132,50)" rx="2" ry="2" />
<text  x="245.15" y="879.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="658.3" y="501" width="0.3" height="15.0" fill="rgb(251,155,6)" rx="2" ry="2" />
<text  x="661.34" y="511.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="1080.3" y="741" width="0.2" height="15.0" fill="rgb(215,84,9)" rx="2" ry="2" />
<text  x="1083.30" y="751.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (1 samples, 0.02%)</title><rect x="145.7" y="917" width="0.2" height="15.0" fill="rgb(211,191,39)" rx="2" ry="2" />
<text  x="148.68" y="927.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_init_functor (2 samples, 0.04%)</title><rect x="551.3" y="645" width="0.5" height="15.0" fill="rgb(212,13,13)" rx="2" ry="2" />
<text  x="554.28" y="655.5" ></text>
</g>
<g >
<title>easyrpg-player (4,346 samples, 88.60%)</title><rect x="144.5" y="949" width="1045.5" height="15.0" fill="rgb(212,167,37)" rx="2" ry="2" />
<text  x="147.48" y="959.5" >easyrpg-player</text>
</g>
<g >
<title>entry_SYSCALL_64 (3 samples, 0.06%)</title><rect x="166.6" y="901" width="0.7" height="15.0" fill="rgb(216,54,26)" rx="2" ry="2" />
<text  x="169.61" y="911.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (1 samples, 0.02%)</title><rect x="555.6" y="341" width="0.3" height="15.0" fill="rgb(224,95,54)" rx="2" ry="2" />
<text  x="558.61" y="351.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (1 samples, 0.02%)</title><rect x="164.9" y="725" width="0.3" height="15.0" fill="rgb(243,142,48)" rx="2" ry="2" />
<text  x="167.93" y="735.5" ></text>
</g>
<g >
<title>iconv_close (1 samples, 0.02%)</title><rect x="480.8" y="741" width="0.2" height="15.0" fill="rgb(212,31,38)" rx="2" ry="2" />
<text  x="483.80" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.02%)</title><rect x="560.2" y="469" width="0.2" height="15.0" fill="rgb(216,141,52)" rx="2" ry="2" />
<text  x="563.19" y="479.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.02%)</title><rect x="404.8" y="437" width="0.2" height="15.0" fill="rgb(223,168,24)" rx="2" ry="2" />
<text  x="407.78" y="447.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.04%)</title><rect x="442.8" y="661" width="0.5" height="15.0" fill="rgb(231,100,29)" rx="2" ry="2" />
<text  x="445.79" y="671.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (1 samples, 0.02%)</title><rect x="164.9" y="709" width="0.3" height="15.0" fill="rgb(237,170,10)" rx="2" ry="2" />
<text  x="167.93" y="719.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandMovePicture (7 samples, 0.14%)</title><rect x="546.7" y="725" width="1.7" height="15.0" fill="rgb(224,83,22)" rx="2" ry="2" />
<text  x="549.71" y="735.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="669.2" y="517" width="0.2" height="15.0" fill="rgb(217,131,32)" rx="2" ry="2" />
<text  x="672.16" y="527.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="477.9" y="709" width="0.3" height="15.0" fill="rgb(243,61,10)" rx="2" ry="2" />
<text  x="480.91" y="719.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="558.3" y="133" width="0.2" height="15.0" fill="rgb(210,55,50)" rx="2" ry="2" />
<text  x="561.26" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (2 samples, 0.04%)</title><rect x="659.1" y="533" width="0.4" height="15.0" fill="rgb(209,143,3)" rx="2" ry="2" />
<text  x="662.06" y="543.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_get_use_count (1 samples, 0.02%)</title><rect x="558.7" y="565" width="0.3" height="15.0" fill="rgb(230,11,54)" rx="2" ry="2" />
<text  x="561.74" y="575.5" ></text>
</g>
<g >
<title>put_prev_entity (1 samples, 0.02%)</title><rect x="405.7" y="549" width="0.3" height="15.0" fill="rgb(207,158,21)" rx="2" ry="2" />
<text  x="408.74" y="559.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (22 samples, 0.45%)</title><rect x="1059.1" y="597" width="5.3" height="15.0" fill="rgb(224,147,30)" rx="2" ry="2" />
<text  x="1062.13" y="607.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="241.7" y="821" width="0.2" height="15.0" fill="rgb(244,77,37)" rx="2" ry="2" />
<text  x="244.67" y="831.5" ></text>
</g>
<g >
<title>pick_next_task_fair (2 samples, 0.04%)</title><rect x="1132.7" y="661" width="0.5" height="15.0" fill="rgb(221,24,9)" rx="2" ry="2" />
<text  x="1135.74" y="671.5" ></text>
</g>
<g >
<title>xhci_queue_isoc_tx_prepare (1 samples, 0.02%)</title><rect x="1135.4" y="485" width="0.2" height="15.0" fill="rgb(235,123,1)" rx="2" ry="2" />
<text  x="1138.39" y="495.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="544.8" y="613" width="0.2" height="15.0" fill="rgb(247,154,3)" rx="2" ry="2" />
<text  x="547.79" y="623.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="308.3" y="645" width="0.2" height="15.0" fill="rgb(238,71,53)" rx="2" ry="2" />
<text  x="311.31" y="655.5" ></text>
</g>
<g >
<title>_XSend (1 samples, 0.02%)</title><rect x="670.8" y="709" width="0.3" height="15.0" fill="rgb(235,92,36)" rx="2" ry="2" />
<text  x="673.85" y="719.5" ></text>
</g>
<g >
<title>apic_ack_irq (1 samples, 0.02%)</title><rect x="635.0" y="629" width="0.2" height="15.0" fill="rgb(212,110,52)" rx="2" ry="2" />
<text  x="638.00" y="639.5" ></text>
</g>
<g >
<title>std::bitset&lt;32ul&gt;::reference::operator= (1 samples, 0.02%)</title><rect x="546.5" y="693" width="0.2" height="15.0" fill="rgb(228,216,37)" rx="2" ry="2" />
<text  x="549.47" y="703.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.04%)</title><rect x="1070.4" y="709" width="0.5" height="15.0" fill="rgb(230,216,14)" rx="2" ry="2" />
<text  x="1073.44" y="719.5" ></text>
</g>
<g >
<title>__sys_recvmsg (1 samples, 0.02%)</title><rect x="661.5" y="549" width="0.2" height="15.0" fill="rgb(245,75,47)" rx="2" ry="2" />
<text  x="664.47" y="559.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.02%)</title><rect x="1132.5" y="533" width="0.2" height="15.0" fill="rgb(228,83,19)" rx="2" ry="2" />
<text  x="1135.50" y="543.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.02%)</title><rect x="1119.3" y="677" width="0.2" height="15.0" fill="rgb(243,77,33)" rx="2" ry="2" />
<text  x="1122.27" y="687.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="165.2" y="837" width="0.2" height="15.0" fill="rgb(239,185,10)" rx="2" ry="2" />
<text  x="168.17" y="847.5" ></text>
</g>
<g >
<title>pixman_region32_init (2 samples, 0.04%)</title><rect x="467.3" y="709" width="0.5" height="15.0" fill="rgb(253,158,48)" rx="2" ry="2" />
<text  x="470.33" y="719.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="659.5" y="501" width="0.3" height="15.0" fill="rgb(218,166,18)" rx="2" ry="2" />
<text  x="662.54" y="511.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="553.9" y="405" width="0.3" height="15.0" fill="rgb(253,73,20)" rx="2" ry="2" />
<text  x="556.93" y="415.5" ></text>
</g>
<g >
<title>FreeBitmapMemory (1 samples, 0.02%)</title><rect x="558.7" y="597" width="0.3" height="15.0" fill="rgb(227,101,23)" rx="2" ry="2" />
<text  x="561.74" y="607.5" ></text>
</g>
<g >
<title>ret_from_intr (5 samples, 0.10%)</title><rect x="142.3" y="933" width="1.2" height="15.0" fill="rgb(240,34,39)" rx="2" ry="2" />
<text  x="145.31" y="943.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.04%)</title><rect x="466.6" y="677" width="0.5" height="15.0" fill="rgb(235,158,25)" rx="2" ry="2" />
<text  x="469.60" y="687.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="658.3" y="549" width="0.3" height="15.0" fill="rgb(222,116,45)" rx="2" ry="2" />
<text  x="661.34" y="559.5" ></text>
</g>
<g >
<title>eventfd_write (3 samples, 0.06%)</title><rect x="140.6" y="837" width="0.8" height="15.0" fill="rgb(223,127,54)" rx="2" ry="2" />
<text  x="143.63" y="847.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="656.7" y="693" width="0.2" height="15.0" fill="rgb(227,133,14)" rx="2" ry="2" />
<text  x="659.65" y="703.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="443.7" y="645" width="0.3" height="15.0" fill="rgb(252,25,37)" rx="2" ry="2" />
<text  x="446.75" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="562.1" y="581" width="0.3" height="15.0" fill="rgb(211,16,21)" rx="2" ry="2" />
<text  x="565.11" y="591.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.02%)</title><rect x="1140.0" y="645" width="0.2" height="15.0" fill="rgb(222,104,28)" rx="2" ry="2" />
<text  x="1142.96" y="655.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, Drawable**, Drawable**&gt; (1 samples, 0.02%)</title><rect x="293.6" y="677" width="0.3" height="15.0" fill="rgb(231,38,26)" rx="2" ry="2" />
<text  x="296.63" y="687.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="310.2" y="693" width="0.3" height="15.0" fill="rgb(228,74,19)" rx="2" ry="2" />
<text  x="313.23" y="703.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.02%)</title><rect x="165.2" y="741" width="0.2" height="15.0" fill="rgb(229,98,16)" rx="2" ry="2" />
<text  x="168.17" y="751.5" ></text>
</g>
<g >
<title>do_syscall_64 (10 samples, 0.20%)</title><rect x="665.8" y="709" width="2.4" height="15.0" fill="rgb(230,46,48)" rx="2" ry="2" />
<text  x="668.80" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (3 samples, 0.06%)</title><rect x="549.6" y="565" width="0.7" height="15.0" fill="rgb(213,57,48)" rx="2" ry="2" />
<text  x="552.60" y="575.5" ></text>
</g>
<g >
<title>ksys_read (12 samples, 0.24%)</title><rect x="555.9" y="293" width="2.8" height="15.0" fill="rgb(246,156,31)" rx="2" ry="2" />
<text  x="558.86" y="303.5" ></text>
</g>
<g >
<title>[libGLX.so.0.0.0] (1 samples, 0.02%)</title><rect x="1134.2" y="725" width="0.2" height="15.0" fill="rgb(224,103,7)" rx="2" ry="2" />
<text  x="1137.19" y="735.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.02%)</title><rect x="1135.4" y="565" width="0.2" height="15.0" fill="rgb(254,11,18)" rx="2" ry="2" />
<text  x="1138.39" y="575.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1064.4" y="581" width="0.3" height="15.0" fill="rgb(206,123,35)" rx="2" ry="2" />
<text  x="1067.42" y="591.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="442.5" y="661" width="0.3" height="15.0" fill="rgb(250,86,48)" rx="2" ry="2" />
<text  x="445.55" y="671.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.02%)</title><rect x="670.8" y="517" width="0.3" height="15.0" fill="rgb(243,117,26)" rx="2" ry="2" />
<text  x="673.85" y="527.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.04%)</title><rect x="1070.4" y="741" width="0.5" height="15.0" fill="rgb(218,73,50)" rx="2" ry="2" />
<text  x="1073.44" y="751.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (2 samples, 0.04%)</title><rect x="669.9" y="549" width="0.5" height="15.0" fill="rgb(223,216,54)" rx="2" ry="2" />
<text  x="672.89" y="559.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (7 samples, 0.14%)</title><rect x="669.2" y="709" width="1.6" height="15.0" fill="rgb(251,119,8)" rx="2" ry="2" />
<text  x="672.16" y="719.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="1182.5" y="613" width="0.3" height="15.0" fill="rgb(227,154,12)" rx="2" ry="2" />
<text  x="1185.54" y="623.5" ></text>
</g>
<g >
<title>poll_schedule_timeout.constprop.14 (97 samples, 1.98%)</title><rect x="113.9" y="869" width="23.4" height="15.0" fill="rgb(234,201,39)" rx="2" ry="2" />
<text  x="116.93" y="879.5" >p..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (1 samples, 0.02%)</title><rect x="658.3" y="597" width="0.3" height="15.0" fill="rgb(213,185,0)" rx="2" ry="2" />
<text  x="661.34" y="607.5" ></text>
</g>
<g >
<title>Bitmap::GetTileOpacity (2 samples, 0.04%)</title><rect x="149.0" y="917" width="0.5" height="15.0" fill="rgb(251,214,32)" rx="2" ry="2" />
<text  x="152.05" y="927.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="665.1" y="725" width="0.2" height="15.0" fill="rgb(222,109,53)" rx="2" ry="2" />
<text  x="668.07" y="735.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="1132.0" y="517" width="0.3" height="15.0" fill="rgb(208,77,38)" rx="2" ry="2" />
<text  x="1135.02" y="527.5" ></text>
</g>
<g >
<title>usb_get_current_frame_number (1 samples, 0.02%)</title><rect x="143.0" y="645" width="0.3" height="15.0" fill="rgb(235,168,26)" rx="2" ry="2" />
<text  x="146.04" y="655.5" ></text>
</g>
<g >
<title>Scene::OnFinishAsync (97 samples, 1.98%)</title><rect x="1159.7" y="821" width="23.3" height="15.0" fill="rgb(213,88,51)" rx="2" ry="2" />
<text  x="1162.69" y="831.5" >S..</text>
</g>
<g >
<title>std::__chunk_insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (5 samples, 0.10%)</title><rect x="478.6" y="709" width="1.2" height="15.0" fill="rgb(227,64,53)" rx="2" ry="2" />
<text  x="481.63" y="719.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.02%)</title><rect x="468.8" y="501" width="0.2" height="15.0" fill="rgb(240,204,28)" rx="2" ry="2" />
<text  x="471.77" y="511.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;Drawable*&gt; (1 samples, 0.02%)</title><rect x="293.6" y="661" width="0.3" height="15.0" fill="rgb(217,200,31)" rx="2" ry="2" />
<text  x="296.63" y="671.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1107.5" y="613" width="0.2" height="15.0" fill="rgb(222,72,32)" rx="2" ry="2" />
<text  x="1110.48" y="623.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (1 samples, 0.02%)</title><rect x="1066.6" y="741" width="0.2" height="15.0" fill="rgb(233,32,47)" rx="2" ry="2" />
<text  x="1069.59" y="751.5" ></text>
</g>
<g >
<title>pixman_transform_point_31_16 (2 samples, 0.04%)</title><rect x="309.8" y="645" width="0.4" height="15.0" fill="rgb(229,227,14)" rx="2" ry="2" />
<text  x="312.75" y="655.5" ></text>
</g>
<g >
<title>_IO_new_file_underflow (13 samples, 0.27%)</title><rect x="555.6" y="389" width="3.1" height="15.0" fill="rgb(212,135,33)" rx="2" ry="2" />
<text  x="558.61" y="399.5" ></text>
</g>
<g >
<title>pick_next_task_rt (1 samples, 0.02%)</title><rect x="1046.9" y="645" width="0.2" height="15.0" fill="rgb(209,131,42)" rx="2" ry="2" />
<text  x="1049.86" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;unsigned char&gt;::allocate (1 samples, 0.02%)</title><rect x="555.4" y="341" width="0.2" height="15.0" fill="rgb(217,131,21)" rx="2" ry="2" />
<text  x="558.37" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="560.2" y="517" width="0.2" height="15.0" fill="rgb(234,148,44)" rx="2" ry="2" />
<text  x="563.19" y="527.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1064.7" y="597" width="0.2" height="15.0" fill="rgb(248,81,42)" rx="2" ry="2" />
<text  x="1067.66" y="607.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (1 samples, 0.02%)</title><rect x="1046.9" y="581" width="0.2" height="15.0" fill="rgb(248,207,15)" rx="2" ry="2" />
<text  x="1049.86" y="591.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (3 samples, 0.06%)</title><rect x="1045.7" y="517" width="0.7" height="15.0" fill="rgb(215,5,4)" rx="2" ry="2" />
<text  x="1048.66" y="527.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.04%)</title><rect x="1070.4" y="677" width="0.5" height="15.0" fill="rgb(252,34,30)" rx="2" ry="2" />
<text  x="1073.44" y="687.5" ></text>
</g>
<g >
<title>poll_select_set_timeout (1 samples, 0.02%)</title><rect x="664.4" y="661" width="0.2" height="15.0" fill="rgb(215,100,26)" rx="2" ry="2" />
<text  x="667.35" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (2 samples, 0.04%)</title><rect x="1066.8" y="693" width="0.5" height="15.0" fill="rgb(213,122,32)" rx="2" ry="2" />
<text  x="1069.83" y="703.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (1 samples, 0.02%)</title><rect x="661.2" y="581" width="0.3" height="15.0" fill="rgb(242,46,42)" rx="2" ry="2" />
<text  x="664.23" y="591.5" ></text>
</g>
<g >
<title>__libc_recvmsg (6 samples, 0.12%)</title><rect x="669.2" y="629" width="1.4" height="15.0" fill="rgb(233,226,12)" rx="2" ry="2" />
<text  x="672.16" y="639.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.04%)</title><rect x="468.3" y="709" width="0.5" height="15.0" fill="rgb(234,167,14)" rx="2" ry="2" />
<text  x="471.29" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;Drawable**, Drawable**&gt; (1 samples, 0.02%)</title><rect x="480.3" y="709" width="0.3" height="15.0" fill="rgb(215,137,29)" rx="2" ry="2" />
<text  x="483.32" y="719.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.02%)</title><rect x="289.3" y="661" width="0.2" height="15.0" fill="rgb(245,216,15)" rx="2" ry="2" />
<text  x="292.30" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (1 samples, 0.02%)</title><rect x="544.5" y="693" width="0.3" height="15.0" fill="rgb(252,212,27)" rx="2" ry="2" />
<text  x="547.55" y="703.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_manager (1 samples, 0.02%)</title><rect x="551.0" y="581" width="0.3" height="15.0" fill="rgb(241,121,21)" rx="2" ry="2" />
<text  x="554.04" y="591.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.02%)</title><rect x="443.7" y="581" width="0.3" height="15.0" fill="rgb(220,21,6)" rx="2" ry="2" />
<text  x="446.75" y="591.5" ></text>
</g>
<g >
<title>Game_Screen::GetPicture (1 samples, 0.02%)</title><rect x="565.0" y="709" width="0.2" height="15.0" fill="rgb(236,123,13)" rx="2" ry="2" />
<text  x="568.00" y="719.5" ></text>
</g>
<g >
<title>resched_curr (1 samples, 0.02%)</title><rect x="141.1" y="709" width="0.3" height="15.0" fill="rgb(219,144,50)" rx="2" ry="2" />
<text  x="144.11" y="719.5" ></text>
</g>
<g >
<title>kick_ilb (1 samples, 0.02%)</title><rect x="553.9" y="261" width="0.3" height="15.0" fill="rgb(221,103,54)" rx="2" ry="2" />
<text  x="556.93" y="271.5" ></text>
</g>
<g >
<title>default_wake_function (1 samples, 0.02%)</title><rect x="134.9" y="613" width="0.2" height="15.0" fill="rgb(241,151,36)" rx="2" ry="2" />
<text  x="137.86" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.02%)</title><rect x="551.8" y="629" width="0.2" height="15.0" fill="rgb(236,133,42)" rx="2" ry="2" />
<text  x="554.77" y="639.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="134.9" y="645" width="0.2" height="15.0" fill="rgb(217,171,49)" rx="2" ry="2" />
<text  x="137.86" y="655.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="1155.6" y="693" width="0.2" height="15.0" fill="rgb(233,63,48)" rx="2" ry="2" />
<text  x="1158.60" y="703.5" ></text>
</g>
<g >
<title>_XSend (1 samples, 0.02%)</title><rect x="662.9" y="661" width="0.2" height="15.0" fill="rgb(252,6,42)" rx="2" ry="2" />
<text  x="665.91" y="671.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.02%)</title><rect x="240.9" y="853" width="0.3" height="15.0" fill="rgb(214,37,24)" rx="2" ry="2" />
<text  x="243.95" y="863.5" ></text>
</g>
<g >
<title>find (3 samples, 0.06%)</title><rect x="659.1" y="629" width="0.7" height="15.0" fill="rgb(231,24,46)" rx="2" ry="2" />
<text  x="662.06" y="639.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (3 samples, 0.06%)</title><rect x="661.0" y="677" width="0.7" height="15.0" fill="rgb(243,88,32)" rx="2" ry="2" />
<text  x="663.98" y="687.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (11 samples, 0.22%)</title><rect x="657.4" y="789" width="2.6" height="15.0" fill="rgb(236,51,52)" rx="2" ry="2" />
<text  x="660.38" y="799.5" ></text>
</g>
<g >
<title>pipe_write (3 samples, 0.06%)</title><rect x="141.4" y="821" width="0.7" height="15.0" fill="rgb(238,105,11)" rx="2" ry="2" />
<text  x="144.35" y="831.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.02%)</title><rect x="1155.6" y="629" width="0.2" height="15.0" fill="rgb(228,99,12)" rx="2" ry="2" />
<text  x="1158.60" y="639.5" ></text>
</g>
<g >
<title>Sdl2Ui::ProcessEvents (50 samples, 1.02%)</title><rect x="660.5" y="805" width="12.0" height="15.0" fill="rgb(238,195,25)" rx="2" ry="2" />
<text  x="663.50" y="815.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (2 samples, 0.04%)</title><rect x="1066.8" y="757" width="0.5" height="15.0" fill="rgb(216,140,43)" rx="2" ry="2" />
<text  x="1069.83" y="767.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="551.3" y="597" width="0.2" height="15.0" fill="rgb(251,194,6)" rx="2" ry="2" />
<text  x="554.28" y="607.5" ></text>
</g>
<g >
<title>put_prev_task_fair (1 samples, 0.02%)</title><rect x="668.0" y="597" width="0.2" height="15.0" fill="rgb(231,105,32)" rx="2" ry="2" />
<text  x="670.96" y="607.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (115 samples, 2.34%)</title><rect x="416.3" y="725" width="27.7" height="15.0" fill="rgb(244,167,23)" rx="2" ry="2" />
<text  x="419.32" y="735.5" >p..</text>
</g>
<g >
<title>xhci_urb_enqueue (1 samples, 0.02%)</title><rect x="143.3" y="645" width="0.2" height="15.0" fill="rgb(253,40,47)" rx="2" ry="2" />
<text  x="146.28" y="655.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (6 samples, 0.12%)</title><rect x="308.8" y="693" width="1.4" height="15.0" fill="rgb(240,228,28)" rx="2" ry="2" />
<text  x="311.79" y="703.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (4 samples, 0.08%)</title><rect x="573.4" y="709" width="1.0" height="15.0" fill="rgb(243,1,38)" rx="2" ry="2" />
<text  x="576.42" y="719.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="289.3" y="725" width="0.2" height="15.0" fill="rgb(209,203,1)" rx="2" ry="2" />
<text  x="292.30" y="735.5" ></text>
</g>
<g >
<title>Game_Map::Refresh (6 samples, 0.12%)</title><rect x="644.4" y="725" width="1.4" height="15.0" fill="rgb(213,127,51)" rx="2" ry="2" />
<text  x="647.39" y="735.5" ></text>
</g>
<g >
<title>trigger_load_balance (1 samples, 0.02%)</title><rect x="108.2" y="805" width="0.2" height="15.0" fill="rgb(214,118,35)" rx="2" ry="2" />
<text  x="111.15" y="815.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (2 samples, 0.04%)</title><rect x="148.1" y="917" width="0.5" height="15.0" fill="rgb(245,27,37)" rx="2" ry="2" />
<text  x="151.09" y="927.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (75 samples, 1.53%)</title><rect x="1047.3" y="709" width="18.1" height="15.0" fill="rgb(210,125,18)" rx="2" ry="2" />
<text  x="1050.34" y="719.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (1 samples, 0.02%)</title><rect x="670.8" y="661" width="0.3" height="15.0" fill="rgb(212,82,16)" rx="2" ry="2" />
<text  x="673.85" y="671.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="663.6" y="677" width="0.3" height="15.0" fill="rgb(246,31,34)" rx="2" ry="2" />
<text  x="666.63" y="687.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.02%)</title><rect x="1135.4" y="581" width="0.2" height="15.0" fill="rgb(250,171,29)" rx="2" ry="2" />
<text  x="1138.39" y="591.5" ></text>
</g>
<g >
<title>psi_task_change (5 samples, 0.10%)</title><rect x="116.1" y="773" width="1.2" height="15.0" fill="rgb(215,153,46)" rx="2" ry="2" />
<text  x="119.09" y="783.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1132.5" y="549" width="0.2" height="15.0" fill="rgb(239,43,25)" rx="2" ry="2" />
<text  x="1135.50" y="559.5" ></text>
</g>
<g >
<title>irq_entries_start (2 samples, 0.04%)</title><rect x="135.1" y="789" width="0.5" height="15.0" fill="rgb(249,29,7)" rx="2" ry="2" />
<text  x="138.10" y="799.5" ></text>
</g>
<g >
<title>udev_monitor_get_fd (1 samples, 0.02%)</title><rect x="148.6" y="917" width="0.2" height="15.0" fill="rgb(211,174,31)" rx="2" ry="2" />
<text  x="151.57" y="927.5" ></text>
</g>
<g >
<title>XEventsQueued (1 samples, 0.02%)</title><rect x="145.9" y="917" width="0.3" height="15.0" fill="rgb(218,194,33)" rx="2" ry="2" />
<text  x="148.92" y="927.5" ></text>
</g>
<g >
<title>run_posix_cpu_timers (1 samples, 0.02%)</title><rect x="1107.5" y="565" width="0.2" height="15.0" fill="rgb(245,38,46)" rx="2" ry="2" />
<text  x="1110.48" y="575.5" ></text>
</g>
<g >
<title>handle_edge_irq (10 samples, 0.20%)</title><rect x="1044.2" y="677" width="2.4" height="15.0" fill="rgb(229,226,52)" rx="2" ry="2" />
<text  x="1047.21" y="687.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (3 samples, 0.06%)</title><rect x="254.2" y="917" width="0.7" height="15.0" fill="rgb(231,182,10)" rx="2" ry="2" />
<text  x="257.18" y="927.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (1 samples, 0.02%)</title><rect x="1041.1" y="709" width="0.2" height="15.0" fill="rgb(214,29,41)" rx="2" ry="2" />
<text  x="1044.09" y="719.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::CommonEvent&gt; (1 samples, 0.02%)</title><rect x="653.3" y="741" width="0.2" height="15.0" fill="rgb(248,40,21)" rx="2" ry="2" />
<text  x="656.29" y="751.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="1134.2" y="693" width="0.2" height="15.0" fill="rgb(238,37,41)" rx="2" ry="2" />
<text  x="1137.19" y="703.5" ></text>
</g>
<g >
<title>Cache::SystemOrBlack (1 samples, 0.02%)</title><rect x="657.9" y="741" width="0.2" height="15.0" fill="rgb(217,185,15)" rx="2" ry="2" />
<text  x="660.86" y="751.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.02%)</title><rect x="1132.7" y="629" width="0.3" height="15.0" fill="rgb(224,15,44)" rx="2" ry="2" />
<text  x="1135.74" y="639.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="660.7" y="693" width="0.3" height="15.0" fill="rgb(248,122,52)" rx="2" ry="2" />
<text  x="663.74" y="703.5" ></text>
</g>
<g >
<title>irq_work_run (2 samples, 0.04%)</title><rect x="1132.0" y="613" width="0.5" height="15.0" fill="rgb(239,175,46)" rx="2" ry="2" />
<text  x="1135.02" y="623.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="165.2" y="805" width="0.2" height="15.0" fill="rgb(207,136,52)" rx="2" ry="2" />
<text  x="168.17" y="815.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Game_Vehicle, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (1 samples, 0.02%)</title><rect x="657.1" y="773" width="0.3" height="15.0" fill="rgb(206,213,43)" rx="2" ry="2" />
<text  x="660.14" y="783.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="108.2" y="837" width="0.2" height="15.0" fill="rgb(219,68,26)" rx="2" ry="2" />
<text  x="111.15" y="847.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned (1 samples, 0.02%)</title><rect x="1064.9" y="613" width="0.2" height="15.0" fill="rgb(213,202,47)" rx="2" ry="2" />
<text  x="1067.90" y="623.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (2 samples, 0.04%)</title><rect x="663.4" y="709" width="0.5" height="15.0" fill="rgb(224,21,29)" rx="2" ry="2" />
<text  x="666.39" y="719.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (5 samples, 0.10%)</title><rect x="1106.5" y="693" width="1.2" height="15.0" fill="rgb(208,139,0)" rx="2" ry="2" />
<text  x="1109.52" y="703.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (128 samples, 2.61%)</title><rect x="1078.6" y="757" width="30.8" height="15.0" fill="rgb(254,229,27)" rx="2" ry="2" />
<text  x="1081.62" y="767.5" >en..</text>
</g>
<g >
<title>Game_Character::GetScreenZ (1 samples, 0.02%)</title><rect x="660.3" y="741" width="0.2" height="15.0" fill="rgb(212,8,3)" rx="2" ry="2" />
<text  x="663.26" y="751.5" ></text>
</g>
<g >
<title>Sprite::Refresh (7 samples, 0.14%)</title><rect x="406.7" y="757" width="1.7" height="15.0" fill="rgb(220,100,41)" rx="2" ry="2" />
<text  x="409.70" y="767.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (7 samples, 0.14%)</title><rect x="666.0" y="549" width="1.7" height="15.0" fill="rgb(228,196,33)" rx="2" ry="2" />
<text  x="669.04" y="559.5" ></text>
</g>
<g >
<title>pixman_region32_extents (1 samples, 0.02%)</title><rect x="256.3" y="917" width="0.3" height="15.0" fill="rgb(205,214,44)" rx="2" ry="2" />
<text  x="259.34" y="927.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.02%)</title><rect x="1119.8" y="645" width="0.2" height="15.0" fill="rgb(235,41,35)" rx="2" ry="2" />
<text  x="1122.75" y="655.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="559.9" y="581" width="0.3" height="15.0" fill="rgb(218,37,29)" rx="2" ry="2" />
<text  x="562.94" y="591.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="1140.0" y="725" width="0.2" height="15.0" fill="rgb(214,162,28)" rx="2" ry="2" />
<text  x="1142.96" y="735.5" ></text>
</g>
<g >
<title>__libc_recvmsg (6 samples, 0.12%)</title><rect x="669.2" y="645" width="1.4" height="15.0" fill="rgb(250,98,14)" rx="2" ry="2" />
<text  x="672.16" y="655.5" ></text>
</g>
<g >
<title>__gconv_close (1 samples, 0.02%)</title><rect x="480.8" y="725" width="0.2" height="15.0" fill="rgb(212,110,53)" rx="2" ry="2" />
<text  x="483.80" y="735.5" ></text>
</g>
<g >
<title>perf_event_wakeup (2 samples, 0.04%)</title><rect x="1132.0" y="565" width="0.5" height="15.0" fill="rgb(252,103,16)" rx="2" ry="2" />
<text  x="1135.02" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (11 samples, 0.22%)</title><rect x="1183.5" y="933" width="2.7" height="15.0" fill="rgb(252,141,3)" rx="2" ry="2" />
<text  x="1186.50" y="943.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1135.4" y="709" width="0.2" height="15.0" fill="rgb(248,168,14)" rx="2" ry="2" />
<text  x="1138.39" y="719.5" ></text>
</g>
<g >
<title>xhci_urb_enqueue (1 samples, 0.02%)</title><rect x="1140.0" y="485" width="0.2" height="15.0" fill="rgb(237,109,11)" rx="2" ry="2" />
<text  x="1142.96" y="495.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.02%)</title><rect x="112.0" y="853" width="0.2" height="15.0" fill="rgb(215,140,31)" rx="2" ry="2" />
<text  x="115.00" y="863.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (3 samples, 0.06%)</title><rect x="1066.1" y="757" width="0.7" height="15.0" fill="rgb(236,227,5)" rx="2" ry="2" />
<text  x="1069.11" y="767.5" ></text>
</g>
<g >
<title>unix_stream_read_generic (1 samples, 0.02%)</title><rect x="661.5" y="485" width="0.2" height="15.0" fill="rgb(227,7,7)" rx="2" ry="2" />
<text  x="664.47" y="495.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (12 samples, 0.24%)</title><rect x="555.9" y="197" width="2.8" height="15.0" fill="rgb(230,69,13)" rx="2" ry="2" />
<text  x="558.86" y="207.5" ></text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt;, 36ul&gt; (4 samples, 0.08%)</title><rect x="481.5" y="789" width="1.0" height="15.0" fill="rgb(235,178,13)" rx="2" ry="2" />
<text  x="484.52" y="799.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1132.5" y="629" width="0.2" height="15.0" fill="rgb(241,224,18)" rx="2" ry="2" />
<text  x="1135.50" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.06%)</title><rect x="663.9" y="677" width="0.7" height="15.0" fill="rgb(219,178,53)" rx="2" ry="2" />
<text  x="666.87" y="687.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;int&gt;::operator= (1 samples, 0.02%)</title><rect x="545.0" y="693" width="0.3" height="15.0" fill="rgb(232,45,6)" rx="2" ry="2" />
<text  x="548.03" y="703.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (699 samples, 14.25%)</title><rect x="483.0" y="741" width="168.1" height="15.0" fill="rgb(241,60,40)" rx="2" ry="2" />
<text  x="485.96" y="751.5" >Game_Interpreter::Upd..</text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.02%)</title><rect x="1065.1" y="613" width="0.3" height="15.0" fill="rgb(212,86,45)" rx="2" ry="2" />
<text  x="1068.14" y="623.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (17 samples, 0.35%)</title><rect x="472.6" y="661" width="4.1" height="15.0" fill="rgb(227,17,49)" rx="2" ry="2" />
<text  x="475.62" y="671.5" ></text>
</g>
<g >
<title>Sdl2Ui::UpdateDisplay (1,638 samples, 33.39%)</title><rect x="672.8" y="805" width="394.0" height="15.0" fill="rgb(224,116,0)" rx="2" ry="2" />
<text  x="675.77" y="815.5" >Sdl2Ui::UpdateDisplay</text>
</g>
<g >
<title>sock_recvmsg (1 samples, 0.02%)</title><rect x="661.5" y="517" width="0.2" height="15.0" fill="rgb(217,151,0)" rx="2" ry="2" />
<text  x="664.47" y="527.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**&gt; (1 samples, 0.02%)</title><rect x="293.6" y="709" width="0.3" height="15.0" fill="rgb(208,10,53)" rx="2" ry="2" />
<text  x="296.63" y="719.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (24 samples, 0.49%)</title><rect x="553.0" y="581" width="5.7" height="15.0" fill="rgb(251,32,20)" rx="2" ry="2" />
<text  x="555.97" y="591.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (1 samples, 0.02%)</title><rect x="145.7" y="901" width="0.2" height="15.0" fill="rgb(205,142,15)" rx="2" ry="2" />
<text  x="148.68" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (2 samples, 0.04%)</title><rect x="574.6" y="709" width="0.5" height="15.0" fill="rgb(209,179,11)" rx="2" ry="2" />
<text  x="577.62" y="719.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.02%)</title><rect x="634.8" y="517" width="0.2" height="15.0" fill="rgb(212,9,18)" rx="2" ry="2" />
<text  x="637.76" y="527.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.02%)</title><rect x="404.8" y="517" width="0.2" height="15.0" fill="rgb(208,98,47)" rx="2" ry="2" />
<text  x="407.78" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="670.6" y="629" width="0.2" height="15.0" fill="rgb(252,56,28)" rx="2" ry="2" />
<text  x="673.61" y="639.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.02%)</title><rect x="165.2" y="725" width="0.2" height="15.0" fill="rgb(245,227,36)" rx="2" ry="2" />
<text  x="168.17" y="735.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (64 samples, 1.30%)</title><rect x="1118.3" y="773" width="15.4" height="15.0" fill="rgb(245,53,13)" rx="2" ry="2" />
<text  x="1121.31" y="783.5" ></text>
</g>
<g >
<title>native_write_msr (7 samples, 0.14%)</title><rect x="666.0" y="517" width="1.7" height="15.0" fill="rgb(245,57,30)" rx="2" ry="2" />
<text  x="669.04" y="527.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.02%)</title><rect x="544.8" y="581" width="0.2" height="15.0" fill="rgb(225,53,31)" rx="2" ry="2" />
<text  x="547.79" y="591.5" ></text>
</g>
<g >
<title>_M_lower_bound (3 samples, 0.06%)</title><rect x="559.0" y="549" width="0.7" height="15.0" fill="rgb(212,43,8)" rx="2" ry="2" />
<text  x="561.98" y="559.5" ></text>
</g>
<g >
<title>Game_Character::UpdateMovement (3 samples, 0.06%)</title><rect x="653.8" y="757" width="0.7" height="15.0" fill="rgb(237,125,43)" rx="2" ry="2" />
<text  x="656.77" y="767.5" ></text>
</g>
<g >
<title>update_sd_lb_stats (3 samples, 0.06%)</title><rect x="136.1" y="741" width="0.7" height="15.0" fill="rgb(219,113,18)" rx="2" ry="2" />
<text  x="139.06" y="751.5" ></text>
</g>
<g >
<title>Game_Map::GetNeedRefresh (3 samples, 0.06%)</title><rect x="243.6" y="917" width="0.7" height="15.0" fill="rgb(216,4,29)" rx="2" ry="2" />
<text  x="246.59" y="927.5" ></text>
</g>
<g >
<title>tick_sched_handle (3 samples, 0.06%)</title><rect x="1041.3" y="645" width="0.7" height="15.0" fill="rgb(243,202,48)" rx="2" ry="2" />
<text  x="1044.33" y="655.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.02%)</title><rect x="1135.4" y="645" width="0.2" height="15.0" fill="rgb(221,56,23)" rx="2" ry="2" />
<text  x="1138.39" y="655.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="1118.1" y="773" width="0.2" height="15.0" fill="rgb(236,139,47)" rx="2" ry="2" />
<text  x="1121.07" y="783.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_rdlock (1 samples, 0.02%)</title><rect x="1134.4" y="725" width="0.3" height="15.0" fill="rgb(227,119,40)" rx="2" ry="2" />
<text  x="1137.43" y="735.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (1 samples, 0.02%)</title><rect x="559.7" y="517" width="0.2" height="15.0" fill="rgb(211,144,13)" rx="2" ry="2" />
<text  x="562.70" y="527.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="443.3" y="613" width="0.2" height="15.0" fill="rgb(227,0,47)" rx="2" ry="2" />
<text  x="446.27" y="623.5" ></text>
</g>
<g >
<title>XNextEvent (1 samples, 0.02%)</title><rect x="662.7" y="709" width="0.2" height="15.0" fill="rgb(241,110,20)" rx="2" ry="2" />
<text  x="665.67" y="719.5" ></text>
</g>
<g >
<title>update_process_times (3 samples, 0.06%)</title><rect x="1041.3" y="629" width="0.7" height="15.0" fill="rgb(250,38,16)" rx="2" ry="2" />
<text  x="1044.33" y="639.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (6 samples, 0.12%)</title><rect x="669.2" y="661" width="1.4" height="15.0" fill="rgb(245,200,9)" rx="2" ry="2" />
<text  x="672.16" y="671.5" ></text>
</g>
<g >
<title>xhci_get_frame (1 samples, 0.02%)</title><rect x="404.8" y="341" width="0.2" height="15.0" fill="rgb(216,45,21)" rx="2" ry="2" />
<text  x="407.78" y="351.5" ></text>
</g>
<g >
<title>xhci_urb_enqueue (1 samples, 0.02%)</title><rect x="1135.4" y="501" width="0.2" height="15.0" fill="rgb(240,178,7)" rx="2" ry="2" />
<text  x="1138.39" y="511.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (1 samples, 0.02%)</title><rect x="560.2" y="549" width="0.2" height="15.0" fill="rgb(210,190,34)" rx="2" ry="2" />
<text  x="563.19" y="559.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (1 samples, 0.02%)</title><rect x="559.9" y="517" width="0.3" height="15.0" fill="rgb(240,143,3)" rx="2" ry="2" />
<text  x="562.94" y="527.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (6 samples, 0.12%)</title><rect x="240.7" y="901" width="1.5" height="15.0" fill="rgb(235,158,23)" rx="2" ry="2" />
<text  x="243.71" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (3 samples, 0.06%)</title><rect x="575.8" y="709" width="0.7" height="15.0" fill="rgb(248,29,2)" rx="2" ry="2" />
<text  x="578.82" y="719.5" ></text>
</g>
<g >
<title>___sys_recvmsg (1 samples, 0.02%)</title><rect x="662.2" y="549" width="0.2" height="15.0" fill="rgb(241,194,51)" rx="2" ry="2" />
<text  x="665.19" y="559.5" ></text>
</g>
<g >
<title>handle_irq_event (9 samples, 0.18%)</title><rect x="1044.2" y="661" width="2.2" height="15.0" fill="rgb(254,153,20)" rx="2" ry="2" />
<text  x="1047.21" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (136 samples, 2.77%)</title><rect x="109.4" y="933" width="32.7" height="15.0" fill="rgb(221,129,22)" rx="2" ry="2" />
<text  x="112.36" y="943.5" >en..</text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (1 samples, 0.02%)</title><rect x="408.4" y="709" width="0.2" height="15.0" fill="rgb(237,79,23)" rx="2" ry="2" />
<text  x="411.39" y="719.5" ></text>
</g>
<g >
<title>__vfs_read (1 samples, 0.02%)</title><rect x="548.4" y="421" width="0.2" height="15.0" fill="rgb(236,57,0)" rx="2" ry="2" />
<text  x="551.40" y="431.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (54 samples, 1.10%)</title><rect x="295.6" y="709" width="12.9" height="15.0" fill="rgb(231,98,50)" rx="2" ry="2" />
<text  x="298.56" y="719.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Set (19 samples, 0.39%)</title><rect x="524.6" y="709" width="4.6" height="15.0" fill="rgb(209,21,50)" rx="2" ry="2" />
<text  x="527.58" y="719.5" ></text>
</g>
<g >
<title>Cache::SystemOrBlack (1 samples, 0.02%)</title><rect x="149.5" y="917" width="0.3" height="15.0" fill="rgb(240,10,23)" rx="2" ry="2" />
<text  x="152.53" y="927.5" ></text>
</g>
<g >
<title>__wake_up_locked_key (3 samples, 0.06%)</title><rect x="140.6" y="821" width="0.8" height="15.0" fill="rgb(207,195,20)" rx="2" ry="2" />
<text  x="143.63" y="831.5" ></text>
</g>
<g >
<title>default_wake_function (1 samples, 0.02%)</title><rect x="670.8" y="341" width="0.3" height="15.0" fill="rgb(217,93,26)" rx="2" ry="2" />
<text  x="673.85" y="351.5" ></text>
</g>
<g >
<title>Tone::Tone (1 samples, 0.02%)</title><rect x="656.2" y="725" width="0.2" height="15.0" fill="rgb(232,93,16)" rx="2" ry="2" />
<text  x="659.17" y="735.5" ></text>
</g>
<g >
<title>xhci_get_ep_ctx (1 samples, 0.02%)</title><rect x="143.3" y="613" width="0.2" height="15.0" fill="rgb(254,114,26)" rx="2" ry="2" />
<text  x="146.28" y="623.5" ></text>
</g>
<g >
<title>apic_ack_irq (1 samples, 0.02%)</title><rect x="308.3" y="613" width="0.2" height="15.0" fill="rgb(245,130,23)" rx="2" ry="2" />
<text  x="311.31" y="623.5" ></text>
</g>
<g >
<title>read_tsc (9 samples, 0.18%)</title><rect x="1102.9" y="693" width="2.2" height="15.0" fill="rgb(214,6,0)" rx="2" ry="2" />
<text  x="1105.91" y="703.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (2 samples, 0.04%)</title><rect x="553.2" y="405" width="0.5" height="15.0" fill="rgb(222,205,5)" rx="2" ry="2" />
<text  x="556.21" y="415.5" ></text>
</g>
<g >
<title>lapic_next_deadline (1 samples, 0.02%)</title><rect x="240.9" y="837" width="0.3" height="15.0" fill="rgb(220,154,50)" rx="2" ry="2" />
<text  x="243.95" y="847.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (72 samples, 1.47%)</title><rect x="117.3" y="773" width="17.3" height="15.0" fill="rgb(208,219,30)" rx="2" ry="2" />
<text  x="120.29" y="783.5" ></text>
</g>
<g >
<title>Game_Screen::GetFlashColor (1 samples, 0.02%)</title><rect x="563.3" y="613" width="0.3" height="15.0" fill="rgb(231,13,30)" rx="2" ry="2" />
<text  x="566.31" y="623.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1140.0" y="693" width="0.2" height="15.0" fill="rgb(254,10,34)" rx="2" ry="2" />
<text  x="1142.96" y="703.5" ></text>
</g>
<g >
<title>Scene::MainFunction (3,847 samples, 78.43%)</title><rect x="257.5" y="853" width="925.5" height="15.0" fill="rgb(209,119,15)" rx="2" ry="2" />
<text  x="260.55" y="863.5" >Scene::MainFunction</text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="289.3" y="709" width="0.2" height="15.0" fill="rgb(216,12,26)" rx="2" ry="2" />
<text  x="292.30" y="719.5" ></text>
</g>
<g >
<title>migrate_task_rq_fair (1 samples, 0.02%)</title><rect x="1140.2" y="661" width="0.2" height="15.0" fill="rgb(242,167,46)" rx="2" ry="2" />
<text  x="1143.20" y="671.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="670.8" y="405" width="0.3" height="15.0" fill="rgb(250,194,25)" rx="2" ry="2" />
<text  x="673.85" y="415.5" ></text>
</g>
<g >
<title>pixman_transform_point_31_16 (2 samples, 0.04%)</title><rect x="404.1" y="629" width="0.4" height="15.0" fill="rgb(205,156,46)" rx="2" ry="2" />
<text  x="407.06" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="565.0" y="661" width="0.2" height="15.0" fill="rgb(215,205,42)" rx="2" ry="2" />
<text  x="568.00" y="671.5" ></text>
</g>
<g >
<title>do_iter_write (1 samples, 0.02%)</title><rect x="670.8" y="533" width="0.3" height="15.0" fill="rgb(253,167,24)" rx="2" ry="2" />
<text  x="673.85" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.08%)</title><rect x="167.3" y="901" width="1.0" height="15.0" fill="rgb(209,151,41)" rx="2" ry="2" />
<text  x="170.33" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="659.5" y="533" width="0.3" height="15.0" fill="rgb(252,218,45)" rx="2" ry="2" />
<text  x="662.54" y="543.5" ></text>
</g>
<g >
<title>finish_task_switch (9 samples, 0.18%)</title><rect x="556.1" y="133" width="2.2" height="15.0" fill="rgb(218,102,26)" rx="2" ry="2" />
<text  x="559.10" y="143.5" ></text>
</g>
<g >
<title>__GI___sched_yield (5 samples, 0.10%)</title><rect x="165.4" y="917" width="1.2" height="15.0" fill="rgb(239,155,1)" rx="2" ry="2" />
<text  x="168.41" y="927.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (11 samples, 0.22%)</title><rect x="662.4" y="725" width="2.7" height="15.0" fill="rgb(244,26,40)" rx="2" ry="2" />
<text  x="665.43" y="735.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="635.2" y="693" width="0.3" height="15.0" fill="rgb(228,8,37)" rx="2" ry="2" />
<text  x="638.24" y="703.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="574.4" y="661" width="0.2" height="15.0" fill="rgb(207,203,53)" rx="2" ry="2" />
<text  x="577.38" y="671.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="134.6" y="757" width="0.3" height="15.0" fill="rgb(245,117,50)" rx="2" ry="2" />
<text  x="137.62" y="767.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.02%)</title><rect x="1132.7" y="645" width="0.3" height="15.0" fill="rgb(218,65,49)" rx="2" ry="2" />
<text  x="1135.74" y="655.5" ></text>
</g>
<g >
<title>[anon] (4 samples, 0.08%)</title><rect x="155.5" y="933" width="1.0" height="15.0" fill="rgb(205,149,52)" rx="2" ry="2" />
<text  x="158.55" y="943.5" ></text>
</g>
<g >
<title>irq_work_run_list (1 samples, 0.02%)</title><rect x="134.9" y="725" width="0.2" height="15.0" fill="rgb(239,146,21)" rx="2" ry="2" />
<text  x="137.86" y="735.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="165.9" y="805" width="0.2" height="15.0" fill="rgb(225,27,46)" rx="2" ry="2" />
<text  x="168.89" y="815.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.02%)</title><rect x="1140.2" y="725" width="0.2" height="15.0" fill="rgb(209,203,48)" rx="2" ry="2" />
<text  x="1143.20" y="735.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Set (2 samples, 0.04%)</title><rect x="565.7" y="709" width="0.5" height="15.0" fill="rgb(252,120,51)" rx="2" ry="2" />
<text  x="568.72" y="719.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.02%)</title><rect x="1132.5" y="421" width="0.2" height="15.0" fill="rgb(237,139,4)" rx="2" ry="2" />
<text  x="1135.50" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="548.4" y="485" width="0.2" height="15.0" fill="rgb(239,198,19)" rx="2" ry="2" />
<text  x="551.40" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_read (12 samples, 0.24%)</title><rect x="555.9" y="309" width="2.8" height="15.0" fill="rgb(239,195,9)" rx="2" ry="2" />
<text  x="558.86" y="319.5" ></text>
</g>
<g >
<title>std::__insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (5 samples, 0.10%)</title><rect x="478.6" y="693" width="1.2" height="15.0" fill="rgb(250,18,44)" rx="2" ry="2" />
<text  x="481.63" y="703.5" ></text>
</g>
<g >
<title>__GI__IO_file_xsgetn (1 samples, 0.02%)</title><rect x="548.4" y="565" width="0.2" height="15.0" fill="rgb(227,135,9)" rx="2" ry="2" />
<text  x="551.40" y="575.5" ></text>
</g>
<g >
<title>prepare_playback_urb (1 samples, 0.02%)</title><rect x="165.2" y="581" width="0.2" height="15.0" fill="rgb(243,177,53)" rx="2" ry="2" />
<text  x="168.17" y="591.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.02%)</title><rect x="443.7" y="597" width="0.3" height="15.0" fill="rgb(238,142,14)" rx="2" ry="2" />
<text  x="446.75" y="607.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (4 samples, 0.08%)</title><rect x="164.2" y="757" width="1.0" height="15.0" fill="rgb(228,147,29)" rx="2" ry="2" />
<text  x="167.21" y="767.5" ></text>
</g>
<g >
<title>interrupt_entry (1 samples, 0.02%)</title><rect x="142.1" y="933" width="0.2" height="15.0" fill="rgb(243,130,40)" rx="2" ry="2" />
<text  x="145.07" y="943.5" ></text>
</g>
<g >
<title>Game_Map::UpdateProcessedFlags (1 samples, 0.02%)</title><rect x="653.5" y="757" width="0.3" height="15.0" fill="rgb(214,131,12)" rx="2" ry="2" />
<text  x="656.53" y="767.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.02%)</title><rect x="1132.5" y="485" width="0.2" height="15.0" fill="rgb(212,147,2)" rx="2" ry="2" />
<text  x="1135.50" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (64 samples, 1.30%)</title><rect x="1118.3" y="757" width="15.4" height="15.0" fill="rgb(241,48,20)" rx="2" ry="2" />
<text  x="1121.31" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment@plt (7 samples, 0.14%)</title><rect x="1155.8" y="773" width="1.7" height="15.0" fill="rgb(245,132,5)" rx="2" ry="2" />
<text  x="1158.84" y="783.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (1 samples, 0.02%)</title><rect x="559.5" y="453" width="0.2" height="15.0" fill="rgb(234,59,47)" rx="2" ry="2" />
<text  x="562.46" y="463.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="442.5" y="581" width="0.3" height="15.0" fill="rgb(242,130,13)" rx="2" ry="2" />
<text  x="445.55" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="293.4" y="693" width="0.2" height="15.0" fill="rgb(221,4,34)" rx="2" ry="2" />
<text  x="296.39" y="703.5" ></text>
</g>
<g >
<title>[libc-2.29.so] (1 samples, 0.02%)</title><rect x="480.8" y="709" width="0.2" height="15.0" fill="rgb(251,98,4)" rx="2" ry="2" />
<text  x="483.80" y="719.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="550.3" y="597" width="0.3" height="15.0" fill="rgb(230,184,52)" rx="2" ry="2" />
<text  x="553.32" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.02%)</title><rect x="528.9" y="693" width="0.3" height="15.0" fill="rgb(223,216,19)" rx="2" ry="2" />
<text  x="531.91" y="703.5" ></text>
</g>
<g >
<title>xhci_msi_irq (5 samples, 0.10%)</title><rect x="142.3" y="821" width="1.2" height="15.0" fill="rgb(226,93,4)" rx="2" ry="2" />
<text  x="145.31" y="831.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.06%)</title><rect x="241.2" y="869" width="0.7" height="15.0" fill="rgb(234,66,37)" rx="2" ry="2" />
<text  x="244.19" y="879.5" ></text>
</g>
<g >
<title>__libc_recvmsg (1 samples, 0.02%)</title><rect x="670.6" y="645" width="0.2" height="15.0" fill="rgb(233,124,53)" rx="2" ry="2" />
<text  x="673.61" y="655.5" ></text>
</g>
<g >
<title>__libc_start_main (3,850 samples, 78.49%)</title><rect x="257.3" y="917" width="926.2" height="15.0" fill="rgb(213,148,14)" rx="2" ry="2" />
<text  x="260.31" y="927.5" >__libc_start_main</text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="442.8" y="629" width="0.2" height="15.0" fill="rgb(215,57,7)" rx="2" ry="2" />
<text  x="445.79" y="639.5" ></text>
</g>
<g >
<title>prepare_outbound_urb (1 samples, 0.02%)</title><rect x="404.8" y="405" width="0.2" height="15.0" fill="rgb(206,45,41)" rx="2" ry="2" />
<text  x="407.78" y="415.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (2 samples, 0.04%)</title><rect x="643.4" y="709" width="0.5" height="15.0" fill="rgb(222,20,54)" rx="2" ry="2" />
<text  x="646.42" y="719.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (1 samples, 0.02%)</title><rect x="549.4" y="661" width="0.2" height="15.0" fill="rgb(228,31,2)" rx="2" ry="2" />
<text  x="552.36" y="671.5" ></text>
</g>
<g >
<title>Transition::GetZ (1 samples, 0.02%)</title><rect x="293.2" y="773" width="0.2" height="15.0" fill="rgb(239,68,52)" rx="2" ry="2" />
<text  x="296.15" y="783.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (1 samples, 0.02%)</title><rect x="406.5" y="677" width="0.2" height="15.0" fill="rgb(242,109,51)" rx="2" ry="2" />
<text  x="409.46" y="687.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="287.1" y="757" width="0.3" height="15.0" fill="rgb(219,205,16)" rx="2" ry="2" />
<text  x="290.14" y="767.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (3 samples, 0.06%)</title><rect x="253.2" y="885" width="0.7" height="15.0" fill="rgb(230,207,27)" rx="2" ry="2" />
<text  x="256.22" y="895.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="1107.5" y="597" width="0.2" height="15.0" fill="rgb(206,7,30)" rx="2" ry="2" />
<text  x="1110.48" y="607.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="240.9" y="885" width="0.3" height="15.0" fill="rgb(249,61,40)" rx="2" ry="2" />
<text  x="243.95" y="895.5" ></text>
</g>
<g >
<title>handle_irq_event (2 samples, 0.04%)</title><rect x="634.5" y="645" width="0.5" height="15.0" fill="rgb(222,180,32)" rx="2" ry="2" />
<text  x="637.52" y="655.5" ></text>
</g>
<g >
<title>std::bitset&lt;36ul&gt;::reference::operator bool (1 samples, 0.02%)</title><rect x="481.3" y="789" width="0.2" height="15.0" fill="rgb(207,201,22)" rx="2" ry="2" />
<text  x="484.28" y="799.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="108.2" y="885" width="0.2" height="15.0" fill="rgb(253,57,1)" rx="2" ry="2" />
<text  x="111.15" y="895.5" ></text>
</g>
<g >
<title>usb_submit_urb (1 samples, 0.02%)</title><rect x="1046.1" y="469" width="0.3" height="15.0" fill="rgb(245,101,29)" rx="2" ry="2" />
<text  x="1049.14" y="479.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="670.4" y="613" width="0.2" height="15.0" fill="rgb(233,4,7)" rx="2" ry="2" />
<text  x="673.37" y="623.5" ></text>
</g>
<g >
<title>rcu_irq_exit (1 samples, 0.02%)</title><rect x="241.9" y="869" width="0.3" height="15.0" fill="rgb(218,68,38)" rx="2" ry="2" />
<text  x="244.91" y="879.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (1 samples, 0.02%)</title><rect x="406.5" y="709" width="0.2" height="15.0" fill="rgb(229,223,45)" rx="2" ry="2" />
<text  x="409.46" y="719.5" ></text>
</g>
<g >
<title>rw_verify_area (5 samples, 0.10%)</title><rect x="138.9" y="853" width="1.2" height="15.0" fill="rgb(251,36,27)" rx="2" ry="2" />
<text  x="141.95" y="863.5" ></text>
</g>
<g >
<title>std::__merge_sort_with_buffer&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (6 samples, 0.12%)</title><rect x="478.6" y="725" width="1.5" height="15.0" fill="rgb(212,198,48)" rx="2" ry="2" />
<text  x="481.63" y="735.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.02%)</title><rect x="529.2" y="565" width="0.2" height="15.0" fill="rgb(228,99,42)" rx="2" ry="2" />
<text  x="532.15" y="575.5" ></text>
</g>
<g >
<title>Bitmap::ToneBlit (1 samples, 0.02%)</title><rect x="406.7" y="725" width="0.2" height="15.0" fill="rgb(219,121,23)" rx="2" ry="2" />
<text  x="409.70" y="735.5" ></text>
</g>
<g >
<title>ondemand_readahead (1 samples, 0.02%)</title><rect x="558.5" y="165" width="0.2" height="15.0" fill="rgb(207,124,50)" rx="2" ry="2" />
<text  x="561.50" y="175.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1140.2" y="773" width="0.2" height="15.0" fill="rgb(205,2,26)" rx="2" ry="2" />
<text  x="1143.20" y="783.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandControlVariables (1 samples, 0.02%)</title><rect x="149.8" y="917" width="0.2" height="15.0" fill="rgb(236,129,5)" rx="2" ry="2" />
<text  x="152.77" y="927.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (3 samples, 0.06%)</title><rect x="559.0" y="517" width="0.7" height="15.0" fill="rgb(240,221,15)" rx="2" ry="2" />
<text  x="561.98" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (4 samples, 0.08%)</title><rect x="573.4" y="693" width="1.0" height="15.0" fill="rgb(207,55,14)" rx="2" ry="2" />
<text  x="576.42" y="703.5" ></text>
</g>
<g >
<title>Window_Base::Update (1 samples, 0.02%)</title><rect x="658.3" y="725" width="0.3" height="15.0" fill="rgb(205,219,41)" rx="2" ry="2" />
<text  x="661.34" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt;::__normal_iterator (1 samples, 0.02%)</title><rect x="645.6" y="693" width="0.2" height="15.0" fill="rgb(247,126,42)" rx="2" ry="2" />
<text  x="648.59" y="703.5" ></text>
</g>
<g >
<title>LoadBitmap&lt;(&lt;unnamed&gt;::Material::Type)9&gt; (1 samples, 0.02%)</title><rect x="658.3" y="661" width="0.3" height="15.0" fill="rgb(239,87,51)" rx="2" ry="2" />
<text  x="661.34" y="671.5" ></text>
</g>
<g >
<title>__GI___getpid (1 samples, 0.02%)</title><rect x="1134.7" y="741" width="0.2" height="15.0" fill="rgb(253,169,20)" rx="2" ry="2" />
<text  x="1137.67" y="751.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="671.8" y="709" width="0.5" height="15.0" fill="rgb(238,189,29)" rx="2" ry="2" />
<text  x="674.81" y="719.5" ></text>
</g>
<g >
<title>pixman_image_create_solid_fill@plt (1 samples, 0.02%)</title><rect x="308.5" y="709" width="0.3" height="15.0" fill="rgb(248,50,30)" rx="2" ry="2" />
<text  x="311.55" y="719.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.04%)</title><rect x="140.9" y="757" width="0.5" height="15.0" fill="rgb(208,66,38)" rx="2" ry="2" />
<text  x="143.87" y="767.5" ></text>
</g>
<g >
<title>Player::Update (3,507 samples, 71.50%)</title><rect x="291.9" y="821" width="843.7" height="15.0" fill="rgb(222,14,41)" rx="2" ry="2" />
<text  x="294.95" y="831.5" >Player::Update</text>
</g>
<g >
<title>apparmor_socket_recvmsg (1 samples, 0.02%)</title><rect x="662.2" y="517" width="0.2" height="15.0" fill="rgb(233,16,23)" rx="2" ry="2" />
<text  x="665.19" y="527.5" ></text>
</g>
<g >
<title>account_user_time (1 samples, 0.02%)</title><rect x="1041.3" y="597" width="0.3" height="15.0" fill="rgb(205,143,29)" rx="2" ry="2" />
<text  x="1044.33" y="607.5" ></text>
</g>
<g >
<title>posix_get_monotonic_raw (1 samples, 0.02%)</title><rect x="561.4" y="517" width="0.2" height="15.0" fill="rgb(234,127,44)" rx="2" ry="2" />
<text  x="564.39" y="527.5" ></text>
</g>
<g >
<title>Game_Map::MakeWay (1 samples, 0.02%)</title><rect x="653.8" y="709" width="0.2" height="15.0" fill="rgb(211,128,47)" rx="2" ry="2" />
<text  x="656.77" y="719.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="165.2" y="757" width="0.2" height="15.0" fill="rgb(232,79,14)" rx="2" ry="2" />
<text  x="168.17" y="767.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (96 samples, 1.96%)</title><rect x="114.2" y="837" width="23.1" height="15.0" fill="rgb(233,17,32)" rx="2" ry="2" />
<text  x="117.17" y="847.5" >s..</text>
</g>
<g >
<title>Sprite_Character::Update (1 samples, 0.02%)</title><rect x="660.3" y="773" width="0.2" height="15.0" fill="rgb(206,205,53)" rx="2" ry="2" />
<text  x="663.26" y="783.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (2 samples, 0.04%)</title><rect x="143.0" y="725" width="0.5" height="15.0" fill="rgb(247,161,24)" rx="2" ry="2" />
<text  x="146.04" y="735.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1140.2" y="789" width="0.2" height="15.0" fill="rgb(222,139,54)" rx="2" ry="2" />
<text  x="1143.20" y="799.5" ></text>
</g>
<g >
<title>swake_up_one (1 samples, 0.02%)</title><rect x="1042.0" y="613" width="0.3" height="15.0" fill="rgb(239,36,50)" rx="2" ry="2" />
<text  x="1045.05" y="623.5" ></text>
</g>
<g >
<title>SDL_GetTicks (1 samples, 0.02%)</title><rect x="482.5" y="805" width="0.2" height="15.0" fill="rgb(254,125,23)" rx="2" ry="2" />
<text  x="485.48" y="815.5" ></text>
</g>
<g >
<title>TilemapLayer::DrawTile (266 samples, 5.42%)</title><rect x="412.7" y="757" width="64.0" height="15.0" fill="rgb(254,62,20)" rx="2" ry="2" />
<text  x="415.72" y="767.5" >Tilemap..</text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (1 samples, 0.02%)</title><rect x="659.5" y="613" width="0.3" height="15.0" fill="rgb(218,68,21)" rx="2" ry="2" />
<text  x="662.54" y="623.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (1 samples, 0.02%)</title><rect x="155.5" y="917" width="0.3" height="15.0" fill="rgb(221,125,16)" rx="2" ry="2" />
<text  x="158.55" y="927.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (3 samples, 0.06%)</title><rect x="1045.7" y="533" width="0.7" height="15.0" fill="rgb(237,18,32)" rx="2" ry="2" />
<text  x="1048.66" y="543.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (53 samples, 1.08%)</title><rect x="552.0" y="661" width="12.8" height="15.0" fill="rgb(225,111,15)" rx="2" ry="2" />
<text  x="555.01" y="671.5" ></text>
</g>
<g >
<title>__exchange_and_add (17 samples, 0.35%)</title><rect x="472.6" y="645" width="4.1" height="15.0" fill="rgb(242,196,13)" rx="2" ry="2" />
<text  x="475.62" y="655.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="476.7" y="693" width="0.2" height="15.0" fill="rgb(251,186,16)" rx="2" ry="2" />
<text  x="479.71" y="703.5" ></text>
</g>
<g >
<title>XFlush (8 samples, 0.16%)</title><rect x="669.2" y="741" width="1.9" height="15.0" fill="rgb(217,185,36)" rx="2" ry="2" />
<text  x="672.16" y="751.5" ></text>
</g>
<g >
<title>__fdget (4 samples, 0.08%)</title><rect x="112.0" y="869" width="1.0" height="15.0" fill="rgb(217,135,40)" rx="2" ry="2" />
<text  x="115.00" y="879.5" ></text>
</g>
<g >
<title>xhci_queue_isoc_tx_prepare (1 samples, 0.02%)</title><rect x="143.3" y="629" width="0.2" height="15.0" fill="rgb(207,183,46)" rx="2" ry="2" />
<text  x="146.28" y="639.5" ></text>
</g>
<g >
<title>Opacity::IsTransparent (1 samples, 0.02%)</title><rect x="416.1" y="725" width="0.2" height="15.0" fill="rgb(209,79,40)" rx="2" ry="2" />
<text  x="419.08" y="735.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (4 samples, 0.08%)</title><rect x="146.9" y="917" width="0.9" height="15.0" fill="rgb(229,207,23)" rx="2" ry="2" />
<text  x="149.88" y="927.5" ></text>
</g>
<g >
<title>XFlush (1 samples, 0.02%)</title><rect x="146.2" y="917" width="0.2" height="15.0" fill="rgb(226,122,26)" rx="2" ry="2" />
<text  x="149.16" y="927.5" ></text>
</g>
<g >
<title>find_busiest_group (3 samples, 0.06%)</title><rect x="136.1" y="757" width="0.7" height="15.0" fill="rgb(216,186,53)" rx="2" ry="2" />
<text  x="139.06" y="767.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.02%)</title><rect x="405.7" y="533" width="0.3" height="15.0" fill="rgb(248,127,34)" rx="2" ry="2" />
<text  x="408.74" y="543.5" ></text>
</g>
<g >
<title>Transition::IsActive (2 samples, 0.04%)</title><rect x="245.0" y="917" width="0.5" height="15.0" fill="rgb(246,155,17)" rx="2" ry="2" />
<text  x="248.04" y="927.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="1046.9" y="661" width="0.2" height="15.0" fill="rgb(224,93,32)" rx="2" ry="2" />
<text  x="1049.86" y="671.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.04%)</title><rect x="242.2" y="917" width="0.4" height="15.0" fill="rgb(235,155,52)" rx="2" ry="2" />
<text  x="245.15" y="927.5" ></text>
</g>
<g >
<title>Bitmap::CheckOpacity (1 samples, 0.02%)</title><rect x="553.0" y="421" width="0.2" height="15.0" fill="rgb(208,43,45)" rx="2" ry="2" />
<text  x="555.97" y="431.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (35 samples, 0.71%)</title><rect x="1109.6" y="757" width="8.5" height="15.0" fill="rgb(232,22,30)" rx="2" ry="2" />
<text  x="1112.65" y="767.5" ></text>
</g>
<g >
<title>xhci_irq (9 samples, 0.18%)</title><rect x="1044.2" y="597" width="2.2" height="15.0" fill="rgb(220,217,50)" rx="2" ry="2" />
<text  x="1047.21" y="607.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (5 samples, 0.10%)</title><rect x="252.7" y="901" width="1.2" height="15.0" fill="rgb(235,186,39)" rx="2" ry="2" />
<text  x="255.74" y="911.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (1 samples, 0.02%)</title><rect x="659.5" y="565" width="0.3" height="15.0" fill="rgb(248,153,23)" rx="2" ry="2" />
<text  x="662.54" y="575.5" ></text>
</g>
<g >
<title>handle_tx_event (3 samples, 0.06%)</title><rect x="142.8" y="789" width="0.7" height="15.0" fill="rgb(213,87,28)" rx="2" ry="2" />
<text  x="145.80" y="799.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (1 samples, 0.02%)</title><rect x="548.4" y="389" width="0.2" height="15.0" fill="rgb(241,179,20)" rx="2" ry="2" />
<text  x="551.40" y="399.5" ></text>
</g>
<g >
<title>put_prev_task_fair (1 samples, 0.02%)</title><rect x="635.2" y="613" width="0.3" height="15.0" fill="rgb(220,132,16)" rx="2" ry="2" />
<text  x="638.24" y="623.5" ></text>
</g>
<g >
<title>std::stable_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, bool (*)(Drawable const*, Drawable const*)&gt; (2 samples, 0.04%)</title><rect x="293.4" y="773" width="0.5" height="15.0" fill="rgb(224,36,10)" rx="2" ry="2" />
<text  x="296.39" y="783.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (4 samples, 0.08%)</title><rect x="442.3" y="693" width="1.0" height="15.0" fill="rgb(253,6,14)" rx="2" ry="2" />
<text  x="445.31" y="703.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (17 samples, 0.35%)</title><rect x="668.4" y="757" width="4.1" height="15.0" fill="rgb(230,21,11)" rx="2" ry="2" />
<text  x="671.44" y="767.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (1 samples, 0.02%)</title><rect x="1064.2" y="565" width="0.2" height="15.0" fill="rgb(205,18,8)" rx="2" ry="2" />
<text  x="1067.18" y="575.5" ></text>
</g>
<g >
<title>Input::Update (4 samples, 0.08%)</title><rect x="481.5" y="805" width="1.0" height="15.0" fill="rgb(215,92,43)" rx="2" ry="2" />
<text  x="484.52" y="815.5" ></text>
</g>
<g >
<title>Player::Run (3,850 samples, 78.49%)</title><rect x="257.3" y="885" width="926.2" height="15.0" fill="rgb(209,163,0)" rx="2" ry="2" />
<text  x="260.31" y="895.5" >Player::Run</text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (1 samples, 0.02%)</title><rect x="659.5" y="581" width="0.3" height="15.0" fill="rgb(218,8,5)" rx="2" ry="2" />
<text  x="662.54" y="591.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.02%)</title><rect x="165.2" y="677" width="0.2" height="15.0" fill="rgb(248,44,18)" rx="2" ry="2" />
<text  x="168.17" y="687.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.06%)</title><rect x="663.9" y="693" width="0.7" height="15.0" fill="rgb(215,109,9)" rx="2" ry="2" />
<text  x="666.87" y="703.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.02%)</title><rect x="165.2" y="629" width="0.2" height="15.0" fill="rgb(242,81,10)" rx="2" ry="2" />
<text  x="168.17" y="639.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="635.2" y="645" width="0.3" height="15.0" fill="rgb(240,37,41)" rx="2" ry="2" />
<text  x="638.24" y="655.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (1 samples, 0.02%)</title><rect x="564.8" y="629" width="0.2" height="15.0" fill="rgb(247,109,15)" rx="2" ry="2" />
<text  x="567.76" y="639.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (1 samples, 0.02%)</title><rect x="1041.1" y="693" width="0.2" height="15.0" fill="rgb(232,104,0)" rx="2" ry="2" />
<text  x="1044.09" y="703.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.02%)</title><rect x="1133.2" y="661" width="0.3" height="15.0" fill="rgb(216,37,7)" rx="2" ry="2" />
<text  x="1136.23" y="671.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (1 samples, 0.02%)</title><rect x="671.3" y="629" width="0.3" height="15.0" fill="rgb(218,36,47)" rx="2" ry="2" />
<text  x="674.33" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (1 samples, 0.02%)</title><rect x="552.5" y="517" width="0.2" height="15.0" fill="rgb(211,23,27)" rx="2" ry="2" />
<text  x="555.49" y="527.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.04%)</title><rect x="242.2" y="901" width="0.4" height="15.0" fill="rgb(232,83,10)" rx="2" ry="2" />
<text  x="245.15" y="911.5" ></text>
</g>
<g >
<title>handle_irq (3 samples, 0.06%)</title><rect x="634.5" y="677" width="0.7" height="15.0" fill="rgb(230,130,33)" rx="2" ry="2" />
<text  x="637.52" y="687.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1109.2" y="629" width="0.2" height="15.0" fill="rgb(211,70,23)" rx="2" ry="2" />
<text  x="1112.17" y="639.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="293.6" y="645" width="0.3" height="15.0" fill="rgb(230,83,22)" rx="2" ry="2" />
<text  x="296.63" y="655.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.04%)</title><rect x="552.2" y="565" width="0.5" height="15.0" fill="rgb(244,52,6)" rx="2" ry="2" />
<text  x="555.25" y="575.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.02%)</title><rect x="1132.5" y="469" width="0.2" height="15.0" fill="rgb(222,92,54)" rx="2" ry="2" />
<text  x="1135.50" y="479.5" ></text>
</g>
<g >
<title>Input::IsPressed (1 samples, 0.02%)</title><rect x="654.2" y="725" width="0.3" height="15.0" fill="rgb(217,133,38)" rx="2" ry="2" />
<text  x="657.25" y="735.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect x="548.6" y="597" width="0.5" height="15.0" fill="rgb(226,78,28)" rx="2" ry="2" />
<text  x="551.64" y="607.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1107.5" y="581" width="0.2" height="15.0" fill="rgb(233,151,4)" rx="2" ry="2" />
<text  x="1110.48" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (24 samples, 0.49%)</title><rect x="553.0" y="469" width="5.7" height="15.0" fill="rgb(230,73,39)" rx="2" ry="2" />
<text  x="555.97" y="479.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="443.3" y="693" width="0.2" height="15.0" fill="rgb(253,165,36)" rx="2" ry="2" />
<text  x="446.27" y="703.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (1 samples, 0.02%)</title><rect x="164.9" y="741" width="0.3" height="15.0" fill="rgb(246,195,36)" rx="2" ry="2" />
<text  x="167.93" y="751.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (76 samples, 1.55%)</title><rect x="449.0" y="709" width="18.3" height="15.0" fill="rgb(234,54,20)" rx="2" ry="2" />
<text  x="452.04" y="719.5" ></text>
</g>
<g >
<title>finish_td (3 samples, 0.06%)</title><rect x="1045.7" y="565" width="0.7" height="15.0" fill="rgb(221,151,2)" rx="2" ry="2" />
<text  x="1048.66" y="575.5" ></text>
</g>
<g >
<title>pick_next_task_fair (6 samples, 0.12%)</title><rect x="135.6" y="789" width="1.4" height="15.0" fill="rgb(217,62,3)" rx="2" ry="2" />
<text  x="138.58" y="799.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (1 samples, 0.02%)</title><rect x="481.0" y="789" width="0.3" height="15.0" fill="rgb(218,214,21)" rx="2" ry="2" />
<text  x="484.04" y="799.5" ></text>
</g>
<g >
<title>deactivate_task (2 samples, 0.04%)</title><rect x="1119.5" y="661" width="0.5" height="15.0" fill="rgb(245,188,11)" rx="2" ry="2" />
<text  x="1122.51" y="671.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1140.0" y="677" width="0.2" height="15.0" fill="rgb(243,157,37)" rx="2" ry="2" />
<text  x="1142.96" y="687.5" ></text>
</g>
<g >
<title>pollwake (2 samples, 0.04%)</title><rect x="140.9" y="789" width="0.5" height="15.0" fill="rgb(205,175,27)" rx="2" ry="2" />
<text  x="143.87" y="799.5" ></text>
</g>
<g >
<title>update_min_vruntime (1 samples, 0.02%)</title><rect x="115.6" y="725" width="0.3" height="15.0" fill="rgb(252,130,16)" rx="2" ry="2" />
<text  x="118.61" y="735.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (1 samples, 0.02%)</title><rect x="544.5" y="709" width="0.3" height="15.0" fill="rgb(215,175,8)" rx="2" ry="2" />
<text  x="547.55" y="719.5" ></text>
</g>
<g >
<title>Game_System::OnSeReady (4 samples, 0.08%)</title><rect x="548.4" y="661" width="1.0" height="15.0" fill="rgb(247,123,22)" rx="2" ry="2" />
<text  x="551.40" y="671.5" ></text>
</g>
<g >
<title>select_task_rq_fair (1 samples, 0.02%)</title><rect x="1132.0" y="453" width="0.3" height="15.0" fill="rgb(207,90,32)" rx="2" ry="2" />
<text  x="1135.02" y="463.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.02%)</title><rect x="289.3" y="693" width="0.2" height="15.0" fill="rgb(218,145,7)" rx="2" ry="2" />
<text  x="292.30" y="703.5" ></text>
</g>
<g >
<title>__libc_recvmsg (1 samples, 0.02%)</title><rect x="670.6" y="661" width="0.2" height="15.0" fill="rgb(233,189,28)" rx="2" ry="2" />
<text  x="673.61" y="671.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="555.4" y="325" width="0.2" height="15.0" fill="rgb(229,222,1)" rx="2" ry="2" />
<text  x="558.37" y="335.5" ></text>
</g>
<g >
<title>schedule (10 samples, 0.20%)</title><rect x="665.8" y="645" width="2.4" height="15.0" fill="rgb(238,131,5)" rx="2" ry="2" />
<text  x="668.80" y="655.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.02%)</title><rect x="404.8" y="421" width="0.2" height="15.0" fill="rgb(227,137,48)" rx="2" ry="2" />
<text  x="407.78" y="431.5" ></text>
</g>
<g >
<title>_XEventsQueued (7 samples, 0.14%)</title><rect x="669.2" y="725" width="1.6" height="15.0" fill="rgb(254,44,12)" rx="2" ry="2" />
<text  x="672.16" y="735.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.02%)</title><rect x="141.1" y="741" width="0.3" height="15.0" fill="rgb(207,14,25)" rx="2" ry="2" />
<text  x="144.11" y="751.5" ></text>
</g>
<g >
<title>___sys_recvmsg (1 samples, 0.02%)</title><rect x="661.5" y="533" width="0.2" height="15.0" fill="rgb(243,9,14)" rx="2" ry="2" />
<text  x="664.47" y="543.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="443.7" y="693" width="0.3" height="15.0" fill="rgb(215,69,36)" rx="2" ry="2" />
<text  x="446.75" y="703.5" ></text>
</g>
<g >
<title>Cache::SystemOrBlack (5 samples, 0.10%)</title><rect x="658.6" y="725" width="1.2" height="15.0" fill="rgb(248,72,0)" rx="2" ry="2" />
<text  x="661.58" y="735.5" ></text>
</g>
<g >
<title>Bitmap::GetOperator (2 samples, 0.04%)</title><rect x="415.6" y="725" width="0.5" height="15.0" fill="rgb(218,109,54)" rx="2" ry="2" />
<text  x="418.60" y="735.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="670.6" y="613" width="0.2" height="15.0" fill="rgb(237,189,32)" rx="2" ry="2" />
<text  x="673.61" y="623.5" ></text>
</g>
<g >
<title>prepare_outbound_urb (1 samples, 0.02%)</title><rect x="634.8" y="453" width="0.2" height="15.0" fill="rgb(227,74,16)" rx="2" ry="2" />
<text  x="637.76" y="463.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.02%)</title><rect x="548.4" y="453" width="0.2" height="15.0" fill="rgb(220,19,29)" rx="2" ry="2" />
<text  x="551.40" y="463.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="468.8" y="645" width="0.2" height="15.0" fill="rgb(245,84,20)" rx="2" ry="2" />
<text  x="471.77" y="655.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.02%)</title><rect x="647.0" y="597" width="0.3" height="15.0" fill="rgb(241,90,9)" rx="2" ry="2" />
<text  x="650.03" y="607.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (1 samples, 0.02%)</title><rect x="657.9" y="677" width="0.2" height="15.0" fill="rgb(243,138,40)" rx="2" ry="2" />
<text  x="660.86" y="687.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::_M_ptr (1 samples, 0.02%)</title><rect x="289.8" y="773" width="0.2" height="15.0" fill="rgb(231,55,13)" rx="2" ry="2" />
<text  x="292.78" y="783.5" ></text>
</g>
<g >
<title>__x64_sys_write (7 samples, 0.14%)</title><rect x="140.4" y="901" width="1.7" height="15.0" fill="rgb(225,226,42)" rx="2" ry="2" />
<text  x="143.39" y="911.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.02%)</title><rect x="134.9" y="677" width="0.2" height="15.0" fill="rgb(219,28,52)" rx="2" ry="2" />
<text  x="137.86" y="687.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (5 samples, 0.10%)</title><rect x="246.2" y="917" width="1.2" height="15.0" fill="rgb(211,135,10)" rx="2" ry="2" />
<text  x="249.24" y="927.5" ></text>
</g>
<g >
<title>copy_page_from_iter (2 samples, 0.04%)</title><rect x="141.4" y="805" width="0.4" height="15.0" fill="rgb(251,77,40)" rx="2" ry="2" />
<text  x="144.35" y="815.5" ></text>
</g>
<g >
<title>__GI___poll (4 samples, 0.08%)</title><rect x="663.9" y="709" width="0.9" height="15.0" fill="rgb(243,123,24)" rx="2" ry="2" />
<text  x="666.87" y="719.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.02%)</title><rect x="664.6" y="693" width="0.2" height="15.0" fill="rgb(226,52,51)" rx="2" ry="2" />
<text  x="667.59" y="703.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1140.2" y="741" width="0.2" height="15.0" fill="rgb(240,10,23)" rx="2" ry="2" />
<text  x="1143.20" y="751.5" ></text>
</g>
<g >
<title>handle_irq_event (3 samples, 0.06%)</title><rect x="404.5" y="597" width="0.8" height="15.0" fill="rgb(235,12,20)" rx="2" ry="2" />
<text  x="407.54" y="607.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (1 samples, 0.02%)</title><rect x="478.4" y="677" width="0.2" height="15.0" fill="rgb(237,226,6)" rx="2" ry="2" />
<text  x="481.39" y="687.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.04%)</title><rect x="659.1" y="549" width="0.4" height="15.0" fill="rgb(248,27,18)" rx="2" ry="2" />
<text  x="662.06" y="559.5" ></text>
</g>
<g >
<title>__gconv (1 samples, 0.02%)</title><rect x="480.6" y="725" width="0.2" height="15.0" fill="rgb(242,188,44)" rx="2" ry="2" />
<text  x="483.56" y="735.5" ></text>
</g>
<g >
<title>pick_next_task_rt (1 samples, 0.02%)</title><rect x="405.7" y="581" width="0.3" height="15.0" fill="rgb(225,103,29)" rx="2" ry="2" />
<text  x="408.74" y="591.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (11 samples, 0.22%)</title><rect x="1041.3" y="709" width="2.7" height="15.0" fill="rgb(250,56,29)" rx="2" ry="2" />
<text  x="1044.33" y="719.5" ></text>
</g>
<g >
<title>Rect::Rect (1 samples, 0.02%)</title><rect x="468.0" y="741" width="0.3" height="15.0" fill="rgb(237,20,6)" rx="2" ry="2" />
<text  x="471.05" y="751.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::operator bool (1 samples, 0.02%)</title><rect x="289.8" y="805" width="0.2" height="15.0" fill="rgb(211,206,42)" rx="2" ry="2" />
<text  x="292.78" y="815.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_manager (1 samples, 0.02%)</title><rect x="551.0" y="597" width="0.3" height="15.0" fill="rgb(243,43,22)" rx="2" ry="2" />
<text  x="554.04" y="607.5" ></text>
</g>
<g >
<title>activate_task (1 samples, 0.02%)</title><rect x="140.9" y="741" width="0.2" height="15.0" fill="rgb(234,183,22)" rx="2" ry="2" />
<text  x="143.87" y="751.5" ></text>
</g>
<g >
<title>pixman_transform_point (3 samples, 0.06%)</title><rect x="403.8" y="645" width="0.7" height="15.0" fill="rgb(254,171,7)" rx="2" ry="2" />
<text  x="406.81" y="655.5" ></text>
</g>
<g >
<title>irq_work_run (1 samples, 0.02%)</title><rect x="134.9" y="741" width="0.2" height="15.0" fill="rgb(224,175,28)" rx="2" ry="2" />
<text  x="137.86" y="751.5" ></text>
</g>
<g >
<title>update_blocked_averages (6 samples, 0.12%)</title><rect x="1042.5" y="645" width="1.5" height="15.0" fill="rgb(248,225,3)" rx="2" ry="2" />
<text  x="1045.53" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_writev (1 samples, 0.02%)</title><rect x="662.9" y="533" width="0.2" height="15.0" fill="rgb(237,181,5)" rx="2" ry="2" />
<text  x="665.91" y="543.5" ></text>
</g>
<g >
<title>[libpthread-2.29.so] (8 samples, 0.16%)</title><rect x="1157.8" y="805" width="1.9" height="15.0" fill="rgb(221,80,52)" rx="2" ry="2" />
<text  x="1160.76" y="815.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (2 samples, 0.04%)</title><rect x="1046.6" y="709" width="0.5" height="15.0" fill="rgb(206,213,31)" rx="2" ry="2" />
<text  x="1049.62" y="719.5" ></text>
</g>
<g >
<title>Graphics::UpdateTitle (2 samples, 0.04%)</title><rect x="480.6" y="789" width="0.4" height="15.0" fill="rgb(251,109,21)" rx="2" ry="2" />
<text  x="483.56" y="799.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (5 samples, 0.10%)</title><rect x="164.0" y="789" width="1.2" height="15.0" fill="rgb(208,203,18)" rx="2" ry="2" />
<text  x="166.97" y="799.5" ></text>
</g>
<g >
<title>put_timespec64 (1 samples, 0.02%)</title><rect x="1108.9" y="725" width="0.3" height="15.0" fill="rgb(251,211,26)" rx="2" ry="2" />
<text  x="1111.93" y="735.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.02%)</title><rect x="242.4" y="885" width="0.2" height="15.0" fill="rgb(221,171,42)" rx="2" ry="2" />
<text  x="245.39" y="895.5" ></text>
</g>
<g >
<title>Game_Map::UpdateProcessedFlags (1 samples, 0.02%)</title><rect x="653.5" y="773" width="0.3" height="15.0" fill="rgb(229,211,0)" rx="2" ry="2" />
<text  x="656.53" y="783.5" ></text>
</g>
<g >
<title>__GI___nanosleep (12 samples, 0.24%)</title><rect x="665.3" y="741" width="2.9" height="15.0" fill="rgb(252,172,32)" rx="2" ry="2" />
<text  x="668.31" y="751.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (1 samples, 0.02%)</title><rect x="406.7" y="693" width="0.2" height="15.0" fill="rgb(245,77,5)" rx="2" ry="2" />
<text  x="409.70" y="703.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.04%)</title><rect x="663.4" y="693" width="0.5" height="15.0" fill="rgb(212,159,21)" rx="2" ry="2" />
<text  x="666.39" y="703.5" ></text>
</g>
<g >
<title>[libsndfile.so.1.0.28] (1 samples, 0.02%)</title><rect x="253.9" y="917" width="0.3" height="15.0" fill="rgb(219,162,41)" rx="2" ry="2" />
<text  x="256.94" y="927.5" ></text>
</g>
<g >
<title>posix_get_monotonic_raw (20 samples, 0.41%)</title><rect x="1100.3" y="709" width="4.8" height="15.0" fill="rgb(246,21,40)" rx="2" ry="2" />
<text  x="1103.27" y="719.5" ></text>
</g>
<g >
<title>common_file_perm (1 samples, 0.02%)</title><rect x="139.2" y="805" width="0.2" height="15.0" fill="rgb(247,221,43)" rx="2" ry="2" />
<text  x="142.19" y="815.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="1140.0" y="741" width="0.2" height="15.0" fill="rgb(233,130,30)" rx="2" ry="2" />
<text  x="1142.96" y="751.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (3 samples, 0.06%)</title><rect x="1045.7" y="549" width="0.7" height="15.0" fill="rgb(237,188,34)" rx="2" ry="2" />
<text  x="1048.66" y="559.5" ></text>
</g>
<g >
<title>__glDispatchCheckMultithreaded (2 samples, 0.04%)</title><rect x="1134.9" y="757" width="0.5" height="15.0" fill="rgb(207,82,0)" rx="2" ry="2" />
<text  x="1137.91" y="767.5" ></text>
</g>
<g >
<title>update_min_vruntime (1 samples, 0.02%)</title><rect x="115.9" y="741" width="0.2" height="15.0" fill="rgb(242,214,39)" rx="2" ry="2" />
<text  x="118.85" y="751.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.02%)</title><rect x="1064.7" y="469" width="0.2" height="15.0" fill="rgb(214,166,27)" rx="2" ry="2" />
<text  x="1067.66" y="479.5" ></text>
</g>
<g >
<title>Cache::System (1 samples, 0.02%)</title><rect x="657.9" y="709" width="0.2" height="15.0" fill="rgb(222,80,7)" rx="2" ry="2" />
<text  x="660.86" y="719.5" ></text>
</g>
<g >
<title>schedule (96 samples, 1.96%)</title><rect x="114.2" y="821" width="23.1" height="15.0" fill="rgb(237,159,30)" rx="2" ry="2" />
<text  x="117.17" y="831.5" >s..</text>
</g>
<g >
<title>[libGLX.so.0.0.0] (2 samples, 0.04%)</title><rect x="1134.2" y="741" width="0.5" height="15.0" fill="rgb(238,50,5)" rx="2" ry="2" />
<text  x="1137.19" y="751.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="529.2" y="613" width="0.2" height="15.0" fill="rgb(221,186,24)" rx="2" ry="2" />
<text  x="532.15" y="623.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.02%)</title><rect x="468.8" y="517" width="0.2" height="15.0" fill="rgb(215,9,27)" rx="2" ry="2" />
<text  x="471.77" y="527.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (1 samples, 0.02%)</title><rect x="661.5" y="501" width="0.2" height="15.0" fill="rgb(247,182,53)" rx="2" ry="2" />
<text  x="664.47" y="511.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="481.0" y="757" width="0.3" height="15.0" fill="rgb(218,104,50)" rx="2" ry="2" />
<text  x="484.04" y="767.5" ></text>
</g>
<g >
<title>xcb_writev (1 samples, 0.02%)</title><rect x="662.9" y="645" width="0.2" height="15.0" fill="rgb(211,185,51)" rx="2" ry="2" />
<text  x="665.91" y="655.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (3 samples, 0.06%)</title><rect x="242.9" y="917" width="0.7" height="15.0" fill="rgb(254,218,35)" rx="2" ry="2" />
<text  x="245.87" y="927.5" ></text>
</g>
<g >
<title>__atomic_add (1 samples, 0.02%)</title><rect x="406.5" y="661" width="0.2" height="15.0" fill="rgb(223,16,16)" rx="2" ry="2" />
<text  x="409.46" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="671.6" y="677" width="0.2" height="15.0" fill="rgb(253,171,34)" rx="2" ry="2" />
<text  x="674.57" y="687.5" ></text>
</g>
<g >
<title>ImageBMP::ReadBMP (4 samples, 0.08%)</title><rect x="554.7" y="437" width="0.9" height="15.0" fill="rgb(254,94,2)" rx="2" ry="2" />
<text  x="557.65" y="447.5" ></text>
</g>
<g >
<title>x86_pmu_enable (50 samples, 1.02%)</title><rect x="1120.0" y="613" width="12.0" height="15.0" fill="rgb(216,98,45)" rx="2" ry="2" />
<text  x="1122.99" y="623.5" ></text>
</g>
<g >
<title>finish_task_switch (7 samples, 0.14%)</title><rect x="666.0" y="613" width="1.7" height="15.0" fill="rgb(230,54,17)" rx="2" ry="2" />
<text  x="669.04" y="623.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (2 samples, 0.04%)</title><rect x="245.8" y="917" width="0.4" height="15.0" fill="rgb(232,103,19)" rx="2" ry="2" />
<text  x="248.76" y="927.5" ></text>
</g>
<g >
<title>set_task_cpu (1 samples, 0.02%)</title><rect x="1140.2" y="677" width="0.2" height="15.0" fill="rgb(240,121,43)" rx="2" ry="2" />
<text  x="1143.20" y="687.5" ></text>
</g>
<g >
<title>Cache::SpriteEffect (1 samples, 0.02%)</title><rect x="406.7" y="741" width="0.2" height="15.0" fill="rgb(244,132,6)" rx="2" ry="2" />
<text  x="409.70" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="658.3" y="533" width="0.3" height="15.0" fill="rgb(253,189,0)" rx="2" ry="2" />
<text  x="661.34" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (1 samples, 0.02%)</title><rect x="550.3" y="581" width="0.3" height="15.0" fill="rgb(226,150,19)" rx="2" ry="2" />
<text  x="553.32" y="591.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="442.8" y="613" width="0.2" height="15.0" fill="rgb(232,86,25)" rx="2" ry="2" />
<text  x="445.79" y="623.5" ></text>
</g>
<g >
<title>Utils::Tokenize (1 samples, 0.02%)</title><rect x="152.2" y="917" width="0.2" height="15.0" fill="rgb(229,68,6)" rx="2" ry="2" />
<text  x="155.18" y="927.5" ></text>
</g>
<g >
<title>deactivate_task (11 samples, 0.22%)</title><rect x="114.6" y="789" width="2.7" height="15.0" fill="rgb(234,105,22)" rx="2" ry="2" />
<text  x="117.65" y="799.5" ></text>
</g>
<g >
<title>handle_irq (5 samples, 0.10%)</title><rect x="142.3" y="901" width="1.2" height="15.0" fill="rgb(221,135,1)" rx="2" ry="2" />
<text  x="145.31" y="911.5" ></text>
</g>
<g >
<title>xhci_irq (5 samples, 0.10%)</title><rect x="142.3" y="805" width="1.2" height="15.0" fill="rgb(218,37,22)" rx="2" ry="2" />
<text  x="145.31" y="815.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.04%)</title><rect x="1070.4" y="757" width="0.5" height="15.0" fill="rgb(238,229,15)" rx="2" ry="2" />
<text  x="1073.44" y="767.5" ></text>
</g>
<g >
<title>[libGLX.so.0.0.0] (5 samples, 0.10%)</title><rect x="1134.2" y="773" width="1.2" height="15.0" fill="rgb(217,144,39)" rx="2" ry="2" />
<text  x="1137.19" y="783.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandEndLoop (65 samples, 1.33%)</title><rect x="529.4" y="725" width="15.6" height="15.0" fill="rgb(228,123,35)" rx="2" ry="2" />
<text  x="532.39" y="735.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="647.0" y="709" width="0.3" height="15.0" fill="rgb(217,206,37)" rx="2" ry="2" />
<text  x="650.03" y="719.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="242.6" y="917" width="0.3" height="15.0" fill="rgb(226,122,2)" rx="2" ry="2" />
<text  x="245.63" y="927.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (91 samples, 1.86%)</title><rect x="1135.6" y="805" width="21.9" height="15.0" fill="rgb(245,164,3)" rx="2" ry="2" />
<text  x="1138.63" y="815.5" >A..</text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="479.8" y="677" width="0.3" height="15.0" fill="rgb(208,92,33)" rx="2" ry="2" />
<text  x="482.83" y="687.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (1 samples, 0.02%)</title><rect x="164.9" y="693" width="0.3" height="15.0" fill="rgb(232,34,45)" rx="2" ry="2" />
<text  x="167.93" y="703.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (37 samples, 0.75%)</title><rect x="635.5" y="725" width="8.9" height="15.0" fill="rgb(237,20,49)" rx="2" ry="2" />
<text  x="638.48" y="735.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (3 samples, 0.06%)</title><rect x="661.7" y="661" width="0.7" height="15.0" fill="rgb(222,191,13)" rx="2" ry="2" />
<text  x="664.71" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (1 samples, 0.02%)</title><rect x="552.7" y="549" width="0.3" height="15.0" fill="rgb(226,94,38)" rx="2" ry="2" />
<text  x="555.73" y="559.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1107.5" y="645" width="0.2" height="15.0" fill="rgb(251,6,17)" rx="2" ry="2" />
<text  x="1110.48" y="655.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="1043.5" y="629" width="0.2" height="15.0" fill="rgb(245,3,29)" rx="2" ry="2" />
<text  x="1046.49" y="639.5" ></text>
</g>
<g >
<title>snd_complete_urb (3 samples, 0.06%)</title><rect x="1045.7" y="485" width="0.7" height="15.0" fill="rgb(238,151,3)" rx="2" ry="2" />
<text  x="1048.66" y="495.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (709 samples, 14.45%)</title><rect x="482.7" y="757" width="170.6" height="15.0" fill="rgb(209,95,35)" rx="2" ry="2" />
<text  x="485.72" y="767.5" >Game_CommonEvent::Update</text>
</g>
<g >
<title>x86_pmu_enable (7 samples, 0.14%)</title><rect x="666.0" y="565" width="1.7" height="15.0" fill="rgb(237,139,33)" rx="2" ry="2" />
<text  x="669.04" y="575.5" ></text>
</g>
<g >
<title>Game_Map::LoopHorizontal (1 samples, 0.02%)</title><rect x="244.3" y="917" width="0.3" height="15.0" fill="rgb(225,70,31)" rx="2" ry="2" />
<text  x="247.32" y="927.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.02%)</title><rect x="1140.0" y="597" width="0.2" height="15.0" fill="rgb(252,25,40)" rx="2" ry="2" />
<text  x="1142.96" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (3 samples, 0.06%)</title><rect x="523.4" y="693" width="0.7" height="15.0" fill="rgb(206,7,12)" rx="2" ry="2" />
<text  x="526.38" y="703.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="647.0" y="629" width="0.3" height="15.0" fill="rgb(243,197,27)" rx="2" ry="2" />
<text  x="650.03" y="639.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="553.9" y="341" width="0.3" height="15.0" fill="rgb(233,98,17)" rx="2" ry="2" />
<text  x="556.93" y="351.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.02%)</title><rect x="404.8" y="485" width="0.2" height="15.0" fill="rgb(215,131,39)" rx="2" ry="2" />
<text  x="407.78" y="495.5" ></text>
</g>
<g >
<title>std::make_pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt;&amp;&gt; (2 samples, 0.04%)</title><rect x="550.8" y="645" width="0.5" height="15.0" fill="rgb(210,58,7)" rx="2" ry="2" />
<text  x="553.80" y="655.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (1 samples, 0.02%)</title><rect x="671.6" y="725" width="0.2" height="15.0" fill="rgb(224,133,29)" rx="2" ry="2" />
<text  x="674.57" y="735.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (1,632 samples, 33.27%)</title><rect x="673.0" y="773" width="392.6" height="15.0" fill="rgb(251,155,31)" rx="2" ry="2" />
<text  x="676.01" y="783.5" >[libSDL2-2.0.so.0.9.0]</text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="1109.2" y="677" width="0.2" height="15.0" fill="rgb(251,145,54)" rx="2" ry="2" />
<text  x="1112.17" y="687.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.02%)</title><rect x="1119.5" y="629" width="0.3" height="15.0" fill="rgb(253,199,15)" rx="2" ry="2" />
<text  x="1122.51" y="639.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (1 samples, 0.02%)</title><rect x="481.0" y="773" width="0.3" height="15.0" fill="rgb(244,68,45)" rx="2" ry="2" />
<text  x="484.04" y="783.5" ></text>
</g>
<g >
<title>vfs_read (12 samples, 0.24%)</title><rect x="555.9" y="277" width="2.8" height="15.0" fill="rgb(254,225,42)" rx="2" ry="2" />
<text  x="558.86" y="287.5" ></text>
</g>
<g >
<title>pixman_image_set_transform (2 samples, 0.04%)</title><rect x="406.0" y="693" width="0.5" height="15.0" fill="rgb(208,166,12)" rx="2" ry="2" />
<text  x="408.98" y="703.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.02%)</title><rect x="404.8" y="501" width="0.2" height="15.0" fill="rgb(235,137,35)" rx="2" ry="2" />
<text  x="407.78" y="511.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.02%)</title><rect x="574.4" y="597" width="0.2" height="15.0" fill="rgb(237,31,40)" rx="2" ry="2" />
<text  x="577.38" y="607.5" ></text>
</g>
<g >
<title>SDL_RenderCopy@plt (1 samples, 0.02%)</title><rect x="672.8" y="789" width="0.2" height="15.0" fill="rgb(253,41,44)" rx="2" ry="2" />
<text  x="675.77" y="799.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (2 samples, 0.04%)</title><rect x="1132.0" y="533" width="0.5" height="15.0" fill="rgb(217,105,42)" rx="2" ry="2" />
<text  x="1135.02" y="543.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (1 samples, 0.02%)</title><rect x="108.4" y="885" width="0.2" height="15.0" fill="rgb(233,187,22)" rx="2" ry="2" />
<text  x="111.39" y="895.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1140.0" y="773" width="0.2" height="15.0" fill="rgb(227,64,6)" rx="2" ry="2" />
<text  x="1142.96" y="783.5" ></text>
</g>
<g >
<title>Game_Map::GetVehicle (1 samples, 0.02%)</title><rect x="660.0" y="773" width="0.3" height="15.0" fill="rgb(254,66,40)" rx="2" ry="2" />
<text  x="663.02" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (3 samples, 0.06%)</title><rect x="478.9" y="677" width="0.7" height="15.0" fill="rgb(245,13,0)" rx="2" ry="2" />
<text  x="481.87" y="687.5" ></text>
</g>
<g >
<title>Cache::System (1 samples, 0.02%)</title><rect x="657.9" y="725" width="0.2" height="15.0" fill="rgb(237,63,26)" rx="2" ry="2" />
<text  x="660.86" y="735.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="289.3" y="757" width="0.2" height="15.0" fill="rgb(228,201,32)" rx="2" ry="2" />
<text  x="292.30" y="767.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::_Bind (1 samples, 0.02%)</title><rect x="551.5" y="613" width="0.3" height="15.0" fill="rgb(217,181,10)" rx="2" ry="2" />
<text  x="554.52" y="623.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="647.0" y="725" width="0.3" height="15.0" fill="rgb(237,127,45)" rx="2" ry="2" />
<text  x="650.03" y="735.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="544.8" y="629" width="0.2" height="15.0" fill="rgb(236,144,39)" rx="2" ry="2" />
<text  x="547.79" y="639.5" ></text>
</g>
<g >
<title>__accumulate_pelt_segments (1 samples, 0.02%)</title><rect x="1043.3" y="629" width="0.2" height="15.0" fill="rgb(246,177,17)" rx="2" ry="2" />
<text  x="1046.25" y="639.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_init_functor (2 samples, 0.04%)</title><rect x="551.3" y="629" width="0.5" height="15.0" fill="rgb(236,222,15)" rx="2" ry="2" />
<text  x="554.28" y="639.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="670.8" y="453" width="0.3" height="15.0" fill="rgb(219,143,52)" rx="2" ry="2" />
<text  x="673.85" y="463.5" ></text>
</g>
<g >
<title>update_curr (2 samples, 0.04%)</title><rect x="115.4" y="741" width="0.5" height="15.0" fill="rgb(225,128,27)" rx="2" ry="2" />
<text  x="118.37" y="751.5" ></text>
</g>
<g >
<title>run_rebalance_domains (2 samples, 0.04%)</title><rect x="466.6" y="613" width="0.5" height="15.0" fill="rgb(237,8,14)" rx="2" ry="2" />
<text  x="469.60" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt;::begin (1 samples, 0.02%)</title><rect x="645.6" y="709" width="0.2" height="15.0" fill="rgb(211,220,49)" rx="2" ry="2" />
<text  x="648.59" y="719.5" ></text>
</g>
<g >
<title>io_schedule (10 samples, 0.20%)</title><rect x="556.1" y="181" width="2.4" height="15.0" fill="rgb(248,177,54)" rx="2" ry="2" />
<text  x="559.10" y="191.5" ></text>
</g>
<g >
<title>std::__unguarded_linear_insert&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Val_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (1 samples, 0.02%)</title><rect x="479.6" y="677" width="0.2" height="15.0" fill="rgb(229,74,43)" rx="2" ry="2" />
<text  x="482.59" y="687.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (1 samples, 0.02%)</title><rect x="659.5" y="517" width="0.3" height="15.0" fill="rgb(218,177,50)" rx="2" ry="2" />
<text  x="662.54" y="527.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (53 samples, 1.08%)</title><rect x="552.0" y="645" width="12.8" height="15.0" fill="rgb(251,81,34)" rx="2" ry="2" />
<text  x="555.01" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.08%)</title><rect x="165.6" y="901" width="1.0" height="15.0" fill="rgb(222,46,30)" rx="2" ry="2" />
<text  x="168.65" y="911.5" ></text>
</g>
<g >
<title>__GI___libc_read (13 samples, 0.27%)</title><rect x="555.6" y="357" width="3.1" height="15.0" fill="rgb(242,115,46)" rx="2" ry="2" />
<text  x="558.61" y="367.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (5 samples, 0.10%)</title><rect x="547.0" y="693" width="1.2" height="15.0" fill="rgb(220,221,50)" rx="2" ry="2" />
<text  x="549.95" y="703.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect x="147.8" y="917" width="0.3" height="15.0" fill="rgb(251,127,16)" rx="2" ry="2" />
<text  x="150.85" y="927.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (2 samples, 0.04%)</title><rect x="143.0" y="741" width="0.5" height="15.0" fill="rgb(232,123,5)" rx="2" ry="2" />
<text  x="146.04" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator++ (1 samples, 0.02%)</title><rect x="657.4" y="741" width="0.2" height="15.0" fill="rgb(231,18,34)" rx="2" ry="2" />
<text  x="660.38" y="751.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (1 samples, 0.02%)</title><rect x="670.6" y="677" width="0.2" height="15.0" fill="rgb(219,65,30)" rx="2" ry="2" />
<text  x="673.61" y="687.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="242.2" y="853" width="0.2" height="15.0" fill="rgb(233,193,51)" rx="2" ry="2" />
<text  x="245.15" y="863.5" ></text>
</g>
<g >
<title>_M_lower_bound (2 samples, 0.04%)</title><rect x="659.1" y="613" width="0.4" height="15.0" fill="rgb(220,94,1)" rx="2" ry="2" />
<text  x="662.06" y="623.5" ></text>
</g>
<g >
<title>interrupt_entry (1 samples, 0.02%)</title><rect x="1044.0" y="725" width="0.2" height="15.0" fill="rgb(218,115,29)" rx="2" ry="2" />
<text  x="1046.97" y="735.5" ></text>
</g>
<g >
<title>__vfs_read (4 samples, 0.08%)</title><rect x="138.0" y="853" width="0.9" height="15.0" fill="rgb(254,129,48)" rx="2" ry="2" />
<text  x="140.98" y="863.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (1 samples, 0.02%)</title><rect x="657.9" y="661" width="0.2" height="15.0" fill="rgb(235,173,43)" rx="2" ry="2" />
<text  x="660.86" y="671.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.02%)</title><rect x="672.1" y="661" width="0.2" height="15.0" fill="rgb(250,155,19)" rx="2" ry="2" />
<text  x="675.05" y="671.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (3 samples, 0.06%)</title><rect x="661.0" y="645" width="0.7" height="15.0" fill="rgb(216,195,19)" rx="2" ry="2" />
<text  x="663.98" y="655.5" ></text>
</g>
<g >
<title>native_write_msr (50 samples, 1.02%)</title><rect x="1120.0" y="565" width="12.0" height="15.0" fill="rgb(217,43,49)" rx="2" ry="2" />
<text  x="1122.99" y="575.5" ></text>
</g>
<g >
<title>pollwake (1 samples, 0.02%)</title><rect x="134.9" y="629" width="0.2" height="15.0" fill="rgb(208,38,8)" rx="2" ry="2" />
<text  x="137.86" y="639.5" ></text>
</g>
<g >
<title>xhci_urb_enqueue (1 samples, 0.02%)</title><rect x="468.8" y="453" width="0.2" height="15.0" fill="rgb(218,101,46)" rx="2" ry="2" />
<text  x="471.77" y="463.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::function (2 samples, 0.04%)</title><rect x="550.8" y="613" width="0.5" height="15.0" fill="rgb(218,74,25)" rx="2" ry="2" />
<text  x="553.80" y="623.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="634.8" y="405" width="0.2" height="15.0" fill="rgb(228,36,16)" rx="2" ry="2" />
<text  x="637.76" y="415.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="108.2" y="869" width="0.2" height="15.0" fill="rgb(222,126,5)" rx="2" ry="2" />
<text  x="111.15" y="879.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (2 samples, 0.04%)</title><rect x="293.4" y="741" width="0.5" height="15.0" fill="rgb(206,182,8)" rx="2" ry="2" />
<text  x="296.39" y="751.5" ></text>
</g>
<g >
<title>iov_iter_init (1 samples, 0.02%)</title><rect x="138.5" y="821" width="0.2" height="15.0" fill="rgb(250,179,36)" rx="2" ry="2" />
<text  x="141.46" y="831.5" ></text>
</g>
<g >
<title>__vfs_read (12 samples, 0.24%)</title><rect x="555.9" y="261" width="2.8" height="15.0" fill="rgb(239,226,28)" rx="2" ry="2" />
<text  x="558.86" y="271.5" ></text>
</g>
<g >
<title>load_balance (3 samples, 0.06%)</title><rect x="136.1" y="773" width="0.7" height="15.0" fill="rgb(226,14,11)" rx="2" ry="2" />
<text  x="139.06" y="783.5" ></text>
</g>
<g >
<title>std::locale::~locale (1 samples, 0.02%)</title><rect x="481.8" y="773" width="0.2" height="15.0" fill="rgb(248,2,10)" rx="2" ry="2" />
<text  x="484.76" y="783.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.04%)</title><rect x="442.8" y="645" width="0.5" height="15.0" fill="rgb(241,173,17)" rx="2" ry="2" />
<text  x="445.79" y="655.5" ></text>
</g>
<g >
<title>__GI___libc_read (1 samples, 0.02%)</title><rect x="548.4" y="517" width="0.2" height="15.0" fill="rgb(254,20,27)" rx="2" ry="2" />
<text  x="551.40" y="527.5" ></text>
</g>
<g >
<title>LoadBitmap&lt;(&lt;unnamed&gt;::Material::Type)9&gt; (1 samples, 0.02%)</title><rect x="657.9" y="693" width="0.2" height="15.0" fill="rgb(220,221,28)" rx="2" ry="2" />
<text  x="660.86" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="671.8" y="693" width="0.5" height="15.0" fill="rgb(235,7,12)" rx="2" ry="2" />
<text  x="674.81" y="703.5" ></text>
</g>
<g >
<title>_XGetWindowAttributes (1 samples, 0.02%)</title><rect x="671.3" y="693" width="0.3" height="15.0" fill="rgb(213,99,16)" rx="2" ry="2" />
<text  x="674.33" y="703.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1182.5" y="645" width="0.3" height="15.0" fill="rgb(247,100,11)" rx="2" ry="2" />
<text  x="1185.54" y="655.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (1 samples, 0.02%)</title><rect x="550.3" y="613" width="0.3" height="15.0" fill="rgb(242,81,39)" rx="2" ry="2" />
<text  x="553.32" y="623.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (3 samples, 0.06%)</title><rect x="559.0" y="533" width="0.7" height="15.0" fill="rgb(233,145,29)" rx="2" ry="2" />
<text  x="561.98" y="543.5" ></text>
</g>
<g >
<title>select_task_rq_fair (1 samples, 0.02%)</title><rect x="670.8" y="309" width="0.3" height="15.0" fill="rgb(216,100,1)" rx="2" ry="2" />
<text  x="673.85" y="319.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.06%)</title><rect x="634.5" y="693" width="0.7" height="15.0" fill="rgb(248,115,17)" rx="2" ry="2" />
<text  x="637.52" y="703.5" ></text>
</g>
<g >
<title>FileRequestResult::FileRequestResult (1 samples, 0.02%)</title><rect x="551.8" y="661" width="0.2" height="15.0" fill="rgb(223,30,46)" rx="2" ry="2" />
<text  x="554.77" y="671.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_create_storage (1 samples, 0.02%)</title><rect x="555.4" y="389" width="0.2" height="15.0" fill="rgb(210,176,10)" rx="2" ry="2" />
<text  x="558.37" y="399.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.02%)</title><rect x="1064.7" y="453" width="0.2" height="15.0" fill="rgb(250,51,35)" rx="2" ry="2" />
<text  x="1067.66" y="463.5" ></text>
</g>
<g >
<title>pollwake (1 samples, 0.02%)</title><rect x="1132.0" y="501" width="0.3" height="15.0" fill="rgb(251,100,43)" rx="2" ry="2" />
<text  x="1135.02" y="511.5" ></text>
</g>
<g >
<title>LoadBitmap&lt;(&lt;unnamed&gt;::Material::Type)9&gt; (4 samples, 0.08%)</title><rect x="658.8" y="677" width="1.0" height="15.0" fill="rgb(230,159,36)" rx="2" ry="2" />
<text  x="661.82" y="687.5" ></text>
</g>
<g >
<title>__GI___poll (1 samples, 0.02%)</title><rect x="663.1" y="677" width="0.3" height="15.0" fill="rgb(231,130,27)" rx="2" ry="2" />
<text  x="666.15" y="687.5" ></text>
</g>
<g >
<title>xhci_msi_irq (2 samples, 0.04%)</title><rect x="404.5" y="549" width="0.5" height="15.0" fill="rgb(225,192,1)" rx="2" ry="2" />
<text  x="407.54" y="559.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1109.2" y="709" width="0.2" height="15.0" fill="rgb(206,203,31)" rx="2" ry="2" />
<text  x="1112.17" y="719.5" ></text>
</g>
<g >
<title>Scene::IsAsyncPending (95 samples, 1.94%)</title><rect x="1160.2" y="805" width="22.8" height="15.0" fill="rgb(237,203,44)" rx="2" ry="2" />
<text  x="1163.17" y="815.5" >S..</text>
</g>
<g >
<title>x86_pmu_enable (71 samples, 1.45%)</title><rect x="117.5" y="741" width="17.1" height="15.0" fill="rgb(238,188,9)" rx="2" ry="2" />
<text  x="120.54" y="751.5" ></text>
</g>
<g >
<title>new_sync_read (4 samples, 0.08%)</title><rect x="138.0" y="837" width="0.9" height="15.0" fill="rgb(210,213,25)" rx="2" ry="2" />
<text  x="140.98" y="847.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="108.6" y="901" width="0.3" height="15.0" fill="rgb(207,156,5)" rx="2" ry="2" />
<text  x="111.63" y="911.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandErasePicture (2 samples, 0.04%)</title><rect x="545.0" y="725" width="0.5" height="15.0" fill="rgb(248,154,15)" rx="2" ry="2" />
<text  x="548.03" y="735.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandStoreTerrainID (4 samples, 0.08%)</title><rect x="565.2" y="725" width="1.0" height="15.0" fill="rgb(250,196,5)" rx="2" ry="2" />
<text  x="568.24" y="735.5" ></text>
</g>
<g >
<title>Bitmap::WaverBlit (7 samples, 0.14%)</title><rect x="308.8" y="725" width="1.7" height="15.0" fill="rgb(243,38,45)" rx="2" ry="2" />
<text  x="311.79" y="735.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (1 samples, 0.02%)</title><rect x="154.1" y="917" width="0.2" height="15.0" fill="rgb(228,21,5)" rx="2" ry="2" />
<text  x="157.10" y="927.5" ></text>
</g>
<g >
<title>account_user_time (1 samples, 0.02%)</title><rect x="289.3" y="645" width="0.2" height="15.0" fill="rgb(240,68,38)" rx="2" ry="2" />
<text  x="292.30" y="655.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.02%)</title><rect x="1135.4" y="629" width="0.2" height="15.0" fill="rgb(238,49,1)" rx="2" ry="2" />
<text  x="1138.39" y="639.5" ></text>
</g>
<g >
<title>Graphics::Draw (779 samples, 15.88%)</title><rect x="293.2" y="805" width="187.4" height="15.0" fill="rgb(220,175,17)" rx="2" ry="2" />
<text  x="296.15" y="815.5" >Graphics::Draw</text>
</g>
<g >
<title>rcu_cblist_dequeue (1 samples, 0.02%)</title><rect x="1042.3" y="645" width="0.2" height="15.0" fill="rgb(225,15,52)" rx="2" ry="2" />
<text  x="1045.29" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (53 samples, 1.08%)</title><rect x="1168.1" y="757" width="12.8" height="15.0" fill="rgb(247,41,19)" rx="2" ry="2" />
<text  x="1171.11" y="767.5" ></text>
</g>
<g >
<title>Graphics::IsTransitionPending (1 samples, 0.02%)</title><rect x="289.8" y="821" width="0.2" height="15.0" fill="rgb(210,202,16)" rx="2" ry="2" />
<text  x="292.78" y="831.5" ></text>
</g>
<g >
<title>XEventsQueued (1 samples, 0.02%)</title><rect x="668.9" y="741" width="0.3" height="15.0" fill="rgb(216,194,9)" rx="2" ry="2" />
<text  x="671.92" y="751.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (5 samples, 0.10%)</title><rect x="1065.6" y="773" width="1.2" height="15.0" fill="rgb(211,223,29)" rx="2" ry="2" />
<text  x="1068.62" y="783.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (2 samples, 0.04%)</title><rect x="552.2" y="581" width="0.5" height="15.0" fill="rgb(248,43,22)" rx="2" ry="2" />
<text  x="555.25" y="591.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;int&gt;::operator= (1 samples, 0.02%)</title><rect x="564.8" y="677" width="0.2" height="15.0" fill="rgb(215,58,17)" rx="2" ry="2" />
<text  x="567.76" y="687.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.02%)</title><rect x="443.3" y="661" width="0.2" height="15.0" fill="rgb(211,136,3)" rx="2" ry="2" />
<text  x="446.27" y="671.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (2 samples, 0.04%)</title><rect x="561.6" y="549" width="0.5" height="15.0" fill="rgb(224,101,11)" rx="2" ry="2" />
<text  x="564.63" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_M_lower_bound (1 samples, 0.02%)</title><rect x="552.7" y="533" width="0.3" height="15.0" fill="rgb(239,52,38)" rx="2" ry="2" />
<text  x="555.73" y="543.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (2 samples, 0.04%)</title><rect x="151.0" y="917" width="0.5" height="15.0" fill="rgb(254,151,24)" rx="2" ry="2" />
<text  x="153.97" y="927.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (71 samples, 1.45%)</title><rect x="117.5" y="757" width="17.1" height="15.0" fill="rgb(221,94,11)" rx="2" ry="2" />
<text  x="120.54" y="767.5" ></text>
</g>
<g >
<title>Game_Map::Update (726 samples, 14.80%)</title><rect x="482.7" y="789" width="174.7" height="15.0" fill="rgb(214,21,26)" rx="2" ry="2" />
<text  x="485.72" y="799.5" >Game_Map::Update</text>
</g>
<g >
<title>all (4,905 samples, 100%)</title><rect x="10.0" y="965" width="1180.0" height="15.0" fill="rgb(210,94,2)" rx="2" ry="2" />
<text  x="13.00" y="975.5" ></text>
</g>
<g >
<title>select_task_rq_fair (1 samples, 0.02%)</title><rect x="134.9" y="581" width="0.2" height="15.0" fill="rgb(216,163,26)" rx="2" ry="2" />
<text  x="137.86" y="591.5" ></text>
</g>
<g >
<title>Sprite::BlitScreen (472 samples, 9.62%)</title><rect x="295.1" y="773" width="113.5" height="15.0" fill="rgb(222,186,41)" rx="2" ry="2" />
<text  x="298.08" y="783.5" >Sprite::BlitSc..</text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.02%)</title><rect x="634.8" y="533" width="0.2" height="15.0" fill="rgb(218,132,22)" rx="2" ry="2" />
<text  x="637.76" y="543.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (3 samples, 0.06%)</title><rect x="108.2" y="933" width="0.7" height="15.0" fill="rgb(233,142,53)" rx="2" ry="2" />
<text  x="111.15" y="943.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (9 samples, 0.18%)</title><rect x="402.4" y="661" width="2.1" height="15.0" fill="rgb(238,155,0)" rx="2" ry="2" />
<text  x="405.37" y="671.5" ></text>
</g>
<g >
<title>xcb_wait_for_reply64 (1 samples, 0.02%)</title><rect x="671.3" y="661" width="0.3" height="15.0" fill="rgb(210,12,0)" rx="2" ry="2" />
<text  x="674.33" y="671.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (1 samples, 0.02%)</title><rect x="406.5" y="741" width="0.2" height="15.0" fill="rgb(209,150,49)" rx="2" ry="2" />
<text  x="409.46" y="751.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (12 samples, 0.24%)</title><rect x="555.9" y="229" width="2.8" height="15.0" fill="rgb(235,2,14)" rx="2" ry="2" />
<text  x="558.86" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.06%)</title><rect x="661.7" y="613" width="0.7" height="15.0" fill="rgb(218,118,28)" rx="2" ry="2" />
<text  x="664.71" y="623.5" ></text>
</g>
<g >
<title>Window_Message::Update (1 samples, 0.02%)</title><rect x="152.4" y="917" width="0.3" height="15.0" fill="rgb(209,218,45)" rx="2" ry="2" />
<text  x="155.42" y="927.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.14%)</title><rect x="1186.2" y="933" width="1.6" height="15.0" fill="rgb(246,70,16)" rx="2" ry="2" />
<text  x="1189.15" y="943.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="134.6" y="709" width="0.3" height="15.0" fill="rgb(217,43,27)" rx="2" ry="2" />
<text  x="137.62" y="719.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::reset (1 samples, 0.02%)</title><rect x="564.5" y="629" width="0.3" height="15.0" fill="rgb(213,144,1)" rx="2" ry="2" />
<text  x="567.52" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect x="551.8" y="645" width="0.2" height="15.0" fill="rgb(223,151,32)" rx="2" ry="2" />
<text  x="554.77" y="655.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="662.9" y="549" width="0.2" height="15.0" fill="rgb(234,18,33)" rx="2" ry="2" />
<text  x="665.91" y="559.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (31 samples, 0.63%)</title><rect x="158.0" y="917" width="7.4" height="15.0" fill="rgb(211,67,45)" rx="2" ry="2" />
<text  x="160.95" y="927.5" ></text>
</g>
<g >
<title>usb_get_current_frame_number (1 samples, 0.02%)</title><rect x="404.8" y="373" width="0.2" height="15.0" fill="rgb(205,218,38)" rx="2" ry="2" />
<text  x="407.78" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, unsigned int&amp;&gt; (24 samples, 0.49%)</title><rect x="553.0" y="485" width="5.7" height="15.0" fill="rgb(219,131,16)" rx="2" ry="2" />
<text  x="555.97" y="495.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="443.7" y="629" width="0.3" height="15.0" fill="rgb(206,44,20)" rx="2" ry="2" />
<text  x="446.75" y="639.5" ></text>
</g>
<g >
<title>__x64_sys_writev (1 samples, 0.02%)</title><rect x="670.8" y="581" width="0.3" height="15.0" fill="rgb(221,56,35)" rx="2" ry="2" />
<text  x="673.85" y="591.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="551.0" y="549" width="0.3" height="15.0" fill="rgb(213,168,50)" rx="2" ry="2" />
<text  x="554.04" y="559.5" ></text>
</g>
<g >
<title>Bitmap::ZoomOpacityBlit (399 samples, 8.13%)</title><rect x="310.5" y="725" width="96.0" height="15.0" fill="rgb(252,194,6)" rx="2" ry="2" />
<text  x="313.47" y="735.5" >Bitmap::Zoo..</text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.02%)</title><rect x="308.3" y="629" width="0.2" height="15.0" fill="rgb(210,172,8)" rx="2" ry="2" />
<text  x="311.31" y="639.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.02%)</title><rect x="667.7" y="613" width="0.3" height="15.0" fill="rgb(226,221,23)" rx="2" ry="2" />
<text  x="670.72" y="623.5" ></text>
</g>
<g >
<title>Game_Player::Update (3 samples, 0.06%)</title><rect x="653.8" y="773" width="0.7" height="15.0" fill="rgb(253,133,43)" rx="2" ry="2" />
<text  x="656.77" y="783.5" ></text>
</g>
<g >
<title>std::__move_merge_adaptive_backward&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (2 samples, 0.04%)</title><rect x="478.2" y="709" width="0.4" height="15.0" fill="rgb(224,182,34)" rx="2" ry="2" />
<text  x="481.15" y="719.5" ></text>
</g>
<g >
<title>Sprite::BlitScreenIntern (464 samples, 9.46%)</title><rect x="295.1" y="757" width="111.6" height="15.0" fill="rgb(222,54,32)" rx="2" ry="2" />
<text  x="298.08" y="767.5" >Sprite::BlitS..</text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (72 samples, 1.47%)</title><rect x="1048.1" y="677" width="17.3" height="15.0" fill="rgb(210,79,43)" rx="2" ry="2" />
<text  x="1051.06" y="687.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (1 samples, 0.02%)</title><rect x="292.9" y="805" width="0.3" height="15.0" fill="rgb(242,90,11)" rx="2" ry="2" />
<text  x="295.91" y="815.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.04%)</title><rect x="466.6" y="645" width="0.5" height="15.0" fill="rgb(234,209,19)" rx="2" ry="2" />
<text  x="469.60" y="655.5" ></text>
</g>
<g >
<title>irq_entries_start (2 samples, 0.04%)</title><rect x="1187.8" y="933" width="0.5" height="15.0" fill="rgb(232,201,0)" rx="2" ry="2" />
<text  x="1190.83" y="943.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (739 samples, 15.07%)</title><rect x="482.7" y="805" width="177.8" height="15.0" fill="rgb(241,99,36)" rx="2" ry="2" />
<text  x="485.72" y="815.5" >Scene_Map::UpdateStage1</text>
</g>
<g >
<title>__usb_hcd_giveback_urb (2 samples, 0.04%)</title><rect x="143.0" y="709" width="0.5" height="15.0" fill="rgb(244,137,54)" rx="2" ry="2" />
<text  x="146.04" y="719.5" ></text>
</g>
<g >
<title>snd_complete_urb (2 samples, 0.04%)</title><rect x="143.0" y="693" width="0.5" height="15.0" fill="rgb(249,204,45)" rx="2" ry="2" />
<text  x="146.04" y="703.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="443.3" y="629" width="0.2" height="15.0" fill="rgb(225,196,2)" rx="2" ry="2" />
<text  x="446.27" y="639.5" ></text>
</g>
<g >
<title>Game_Interpreter::KeyInputState::CheckInput (2 samples, 0.04%)</title><rect x="545.8" y="709" width="0.4" height="15.0" fill="rgb(227,57,53)" rx="2" ry="2" />
<text  x="548.75" y="719.5" ></text>
</g>
<g >
<title>Bitmap::ConvertImage (4 samples, 0.08%)</title><rect x="553.2" y="437" width="1.0" height="15.0" fill="rgb(217,31,37)" rx="2" ry="2" />
<text  x="556.21" y="447.5" ></text>
</g>
<g >
<title>AudioDecoder::Create (1 samples, 0.02%)</title><rect x="548.4" y="613" width="0.2" height="15.0" fill="rgb(225,73,43)" rx="2" ry="2" />
<text  x="551.40" y="623.5" ></text>
</g>
<g >
<title>trigger_load_balance (1 samples, 0.02%)</title><rect x="553.9" y="277" width="0.3" height="15.0" fill="rgb(214,132,46)" rx="2" ry="2" />
<text  x="556.93" y="287.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1042.0" y="565" width="0.3" height="15.0" fill="rgb(227,81,23)" rx="2" ry="2" />
<text  x="1045.05" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.08%)</title><rect x="167.3" y="885" width="1.0" height="15.0" fill="rgb(223,11,1)" rx="2" ry="2" />
<text  x="170.33" y="895.5" ></text>
</g>
<g >
<title>glXSwapBuffers (5 samples, 0.10%)</title><rect x="1134.2" y="789" width="1.2" height="15.0" fill="rgb(239,131,24)" rx="2" ry="2" />
<text  x="1137.19" y="799.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (4 samples, 0.08%)</title><rect x="548.4" y="693" width="1.0" height="15.0" fill="rgb(221,158,41)" rx="2" ry="2" />
<text  x="551.40" y="703.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.02%)</title><rect x="672.1" y="645" width="0.2" height="15.0" fill="rgb(224,69,9)" rx="2" ry="2" />
<text  x="675.05" y="655.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (17 samples, 0.35%)</title><rect x="472.6" y="693" width="4.1" height="15.0" fill="rgb(225,110,19)" rx="2" ry="2" />
<text  x="475.62" y="703.5" ></text>
</g>
<g >
<title>prepare_playback_urb (1 samples, 0.02%)</title><rect x="634.8" y="437" width="0.2" height="15.0" fill="rgb(242,96,5)" rx="2" ry="2" />
<text  x="637.76" y="447.5" ></text>
</g>
<g >
<title>[libpthread-2.29.so] (7 samples, 0.14%)</title><rect x="290.0" y="821" width="1.7" height="15.0" fill="rgb(245,21,41)" rx="2" ry="2" />
<text  x="293.02" y="831.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (1 samples, 0.02%)</title><rect x="408.4" y="757" width="0.2" height="15.0" fill="rgb(241,95,38)" rx="2" ry="2" />
<text  x="411.39" y="767.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="635.2" y="661" width="0.3" height="15.0" fill="rgb(223,140,20)" rx="2" ry="2" />
<text  x="638.24" y="671.5" ></text>
</g>
</g>
</svg>
