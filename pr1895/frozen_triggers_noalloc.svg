<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1062" onload="init(evt)" viewBox="0 0 1200 1062" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1062.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1045" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="1045" > </text>
<g id="frames">
<g >
<title>Game_Interpreter::Update (86 samples, 0.42%)</title><rect x="198.0" y="869" width="5.0" height="15.0" fill="rgb(239,32,20)" rx="2" ry="2" />
<text  x="201.00" y="879.5" ></text>
</g>
<g >
<title>pixman_image_get_width (2 samples, 0.01%)</title><rect x="873.1" y="437" width="0.1" height="15.0" fill="rgb(252,135,37)" rx="2" ry="2" />
<text  x="876.11" y="447.5" ></text>
</g>
<g >
<title>Game_Interpreter::ValueOrVariable (57 samples, 0.28%)</title><rect x="625.7" y="725" width="3.3" height="15.0" fill="rgb(223,184,9)" rx="2" ry="2" />
<text  x="628.71" y="735.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (10 samples, 0.05%)</title><rect x="232.1" y="565" width="0.6" height="15.0" fill="rgb(220,68,17)" rx="2" ry="2" />
<text  x="235.10" y="575.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (2 samples, 0.01%)</title><rect x="238.9" y="965" width="0.1" height="15.0" fill="rgb(252,103,42)" rx="2" ry="2" />
<text  x="241.86" y="975.5" ></text>
</g>
<g >
<title>Sprite::SetX (3 samples, 0.01%)</title><rect x="884.6" y="469" width="0.2" height="15.0" fill="rgb(221,11,47)" rx="2" ry="2" />
<text  x="887.59" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (9 samples, 0.04%)</title><rect x="1176.5" y="789" width="0.5" height="15.0" fill="rgb(243,186,7)" rx="2" ry="2" />
<text  x="1179.48" y="799.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (2,922 samples, 14.44%)</title><rect x="753.0" y="581" width="170.3" height="15.0" fill="rgb(243,16,49)" rx="2" ry="2" />
<text  x="755.97" y="591.5" >std::__invoke&lt;std::_Me..</text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (354 samples, 1.75%)</title><rect x="213.1" y="725" width="20.6" height="15.0" fill="rgb(232,216,16)" rx="2" ry="2" />
<text  x="216.10" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (10 samples, 0.05%)</title><rect x="516.6" y="709" width="0.6" height="15.0" fill="rgb(223,174,54)" rx="2" ry="2" />
<text  x="519.58" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (2 samples, 0.01%)</title><rect x="606.4" y="661" width="0.1" height="15.0" fill="rgb(205,168,23)" rx="2" ry="2" />
<text  x="609.41" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (107 samples, 0.53%)</title><rect x="258.4" y="293" width="6.2" height="15.0" fill="rgb(236,0,48)" rx="2" ry="2" />
<text  x="261.39" y="303.5" ></text>
</g>
<g >
<title>__vfs_read (9 samples, 0.04%)</title><rect x="22.2" y="901" width="0.6" height="15.0" fill="rgb(209,144,11)" rx="2" ry="2" />
<text  x="25.24" y="911.5" ></text>
</g>
<g >
<title>Bitmap::width (10 samples, 0.05%)</title><rect x="872.6" y="453" width="0.6" height="15.0" fill="rgb(229,13,18)" rx="2" ry="2" />
<text  x="875.64" y="463.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (59 samples, 0.29%)</title><rect x="268.7" y="501" width="3.5" height="15.0" fill="rgb(252,185,2)" rx="2" ry="2" />
<text  x="271.71" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_value (2 samples, 0.01%)</title><rect x="793.4" y="421" width="0.1" height="15.0" fill="rgb(235,164,29)" rx="2" ry="2" />
<text  x="796.36" y="431.5" ></text>
</g>
<g >
<title>Rect::Rect (5 samples, 0.02%)</title><rect x="881.4" y="437" width="0.3" height="15.0" fill="rgb(216,20,30)" rx="2" ry="2" />
<text  x="884.39" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (14 samples, 0.07%)</title><rect x="156.5" y="581" width="0.8" height="15.0" fill="rgb(248,114,39)" rx="2" ry="2" />
<text  x="159.49" y="591.5" ></text>
</g>
<g >
<title>operator== (2 samples, 0.01%)</title><rect x="1178.6" y="789" width="0.1" height="15.0" fill="rgb(223,52,47)" rx="2" ry="2" />
<text  x="1181.63" y="799.5" ></text>
</g>
<g >
<title>Rect::Rect (2 samples, 0.01%)</title><rect x="37.3" y="965" width="0.1" height="15.0" fill="rgb(208,28,47)" rx="2" ry="2" />
<text  x="40.28" y="975.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (117 samples, 0.58%)</title><rect x="187.2" y="581" width="6.8" height="15.0" fill="rgb(205,44,25)" rx="2" ry="2" />
<text  x="190.22" y="591.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="810.3" y="389" width="0.1" height="15.0" fill="rgb(236,7,38)" rx="2" ry="2" />
<text  x="813.27" y="399.5" ></text>
</g>
<g >
<title>_XSend (2 samples, 0.01%)</title><rect x="279.4" y="773" width="0.1" height="15.0" fill="rgb(207,215,35)" rx="2" ry="2" />
<text  x="282.38" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (2 samples, 0.01%)</title><rect x="465.6" y="677" width="0.1" height="15.0" fill="rgb(207,72,28)" rx="2" ry="2" />
<text  x="468.63" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::end (4 samples, 0.02%)</title><rect x="777.7" y="437" width="0.2" height="15.0" fill="rgb(236,67,38)" rx="2" ry="2" />
<text  x="780.68" y="447.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (500 samples, 2.47%)</title><rect x="239.1" y="805" width="29.1" height="15.0" fill="rgb(220,186,13)" rx="2" ry="2" />
<text  x="242.10" y="815.5" >Ga..</text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (68 samples, 0.34%)</title><rect x="194.0" y="613" width="4.0" height="15.0" fill="rgb(227,84,17)" rx="2" ry="2" />
<text  x="197.04" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="748.5" y="533" width="0.2" height="15.0" fill="rgb(206,102,46)" rx="2" ry="2" />
<text  x="751.48" y="543.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (109 samples, 0.54%)</title><rect x="146.6" y="645" width="6.4" height="15.0" fill="rgb(217,28,30)" rx="2" ry="2" />
<text  x="149.64" y="655.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (3 samples, 0.01%)</title><rect x="984.3" y="645" width="0.2" height="15.0" fill="rgb(248,143,48)" rx="2" ry="2" />
<text  x="987.28" y="655.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (62 samples, 0.31%)</title><rect x="203.3" y="389" width="3.6" height="15.0" fill="rgb(210,166,8)" rx="2" ry="2" />
<text  x="206.31" y="399.5" ></text>
</g>
<g >
<title>Scene::HasRequestedScene (7 samples, 0.03%)</title><rect x="37.6" y="965" width="0.4" height="15.0" fill="rgb(249,112,22)" rx="2" ry="2" />
<text  x="40.57" y="975.5" ></text>
</g>
<g >
<title>Game_Screen::GetTone (16 samples, 0.08%)</title><rect x="1162.0" y="773" width="1.0" height="15.0" fill="rgb(225,215,42)" rx="2" ry="2" />
<text  x="1165.02" y="783.5" ></text>
</g>
<g >
<title>AsyncHandler::IsImportantFilePending (4 samples, 0.02%)</title><rect x="1177.9" y="805" width="0.2" height="15.0" fill="rgb(231,29,20)" rx="2" ry="2" />
<text  x="1180.87" y="815.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (109 samples, 0.54%)</title><rect x="146.6" y="789" width="6.4" height="15.0" fill="rgb(219,23,11)" rx="2" ry="2" />
<text  x="149.64" y="799.5" ></text>
</g>
<g >
<title>poll (2 samples, 0.01%)</title><rect x="1180.8" y="757" width="0.2" height="15.0" fill="rgb(252,198,41)" rx="2" ry="2" />
<text  x="1183.85" y="767.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (101 samples, 0.50%)</title><rect x="188.1" y="453" width="5.9" height="15.0" fill="rgb(241,28,14)" rx="2" ry="2" />
<text  x="191.15" y="463.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (5 samples, 0.02%)</title><rect x="1141.8" y="741" width="0.3" height="15.0" fill="rgb(254,45,37)" rx="2" ry="2" />
<text  x="1144.79" y="751.5" ></text>
</g>
<g >
<title>std::allocator&lt;Bitmap&gt;::~allocator (3 samples, 0.01%)</title><rect x="905.1" y="341" width="0.1" height="15.0" fill="rgb(228,204,4)" rx="2" ry="2" />
<text  x="908.06" y="351.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (117 samples, 0.58%)</title><rect x="727.0" y="597" width="6.8" height="15.0" fill="rgb(241,30,34)" rx="2" ry="2" />
<text  x="730.02" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::_M_ptr (6 samples, 0.03%)</title><rect x="1168.1" y="741" width="0.4" height="15.0" fill="rgb(221,115,23)" rx="2" ry="2" />
<text  x="1171.14" y="751.5" ></text>
</g>
<g >
<title>vfs_read (13 samples, 0.06%)</title><rect x="22.2" y="917" width="0.8" height="15.0" fill="rgb(215,164,11)" rx="2" ry="2" />
<text  x="25.24" y="927.5" ></text>
</g>
<g >
<title>pixman_region32_rectangles (2 samples, 0.01%)</title><rect x="857.7" y="437" width="0.1" height="15.0" fill="rgb(245,0,26)" rx="2" ry="2" />
<text  x="860.66" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::destroy&lt;Bitmap&gt; (12 samples, 0.06%)</title><rect x="212.4" y="469" width="0.7" height="15.0" fill="rgb(233,128,32)" rx="2" ry="2" />
<text  x="215.40" y="479.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (394 samples, 1.95%)</title><rect x="896.9" y="485" width="23.0" height="15.0" fill="rgb(251,61,5)" rx="2" ry="2" />
<text  x="899.89" y="495.5" >S..</text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (6 samples, 0.03%)</title><rect x="969.1" y="677" width="0.3" height="15.0" fill="rgb(220,113,43)" rx="2" ry="2" />
<text  x="972.06" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_M_lower_bound (164 samples, 0.81%)</title><rect x="667.6" y="645" width="9.5" height="15.0" fill="rgb(244,78,47)" rx="2" ry="2" />
<text  x="670.56" y="655.5" ></text>
</g>
<g >
<title>handle_mm_fault (18 samples, 0.09%)</title><rect x="137.4" y="341" width="1.0" height="15.0" fill="rgb(217,120,22)" rx="2" ry="2" />
<text  x="140.37" y="351.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (2 samples, 0.01%)</title><rect x="876.0" y="453" width="0.1" height="15.0" fill="rgb(212,199,34)" rx="2" ry="2" />
<text  x="879.03" y="463.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (21 samples, 0.10%)</title><rect x="972.9" y="629" width="1.2" height="15.0" fill="rgb(252,194,11)" rx="2" ry="2" />
<text  x="975.85" y="639.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (2 samples, 0.01%)</title><rect x="784.2" y="469" width="0.1" height="15.0" fill="rgb(253,221,1)" rx="2" ry="2" />
<text  x="787.15" y="479.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (63 samples, 0.31%)</title><rect x="203.3" y="517" width="3.7" height="15.0" fill="rgb(209,113,40)" rx="2" ry="2" />
<text  x="206.31" y="527.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::_Bind (2 samples, 0.01%)</title><rect x="58.3" y="965" width="0.1" height="15.0" fill="rgb(247,28,29)" rx="2" ry="2" />
<text  x="61.33" y="975.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (62 samples, 0.31%)</title><rect x="812.3" y="437" width="3.6" height="15.0" fill="rgb(242,30,40)" rx="2" ry="2" />
<text  x="815.25" y="447.5" ></text>
</g>
<g >
<title>std::move&lt;Bitmap*&amp;&gt; (2 samples, 0.01%)</title><rect x="976.5" y="661" width="0.1" height="15.0" fill="rgb(243,9,21)" rx="2" ry="2" />
<text  x="979.53" y="671.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (3 samples, 0.01%)</title><rect x="212.7" y="213" width="0.2" height="15.0" fill="rgb(224,121,39)" rx="2" ry="2" />
<text  x="215.69" y="223.5" ></text>
</g>
<g >
<title>Sprite::SetX (3 samples, 0.01%)</title><rect x="38.6" y="965" width="0.1" height="15.0" fill="rgb(208,59,45)" rx="2" ry="2" />
<text  x="41.56" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::push_back (19 samples, 0.09%)</title><rect x="986.1" y="693" width="1.1" height="15.0" fill="rgb(212,111,31)" rx="2" ry="2" />
<text  x="989.09" y="703.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::end (2 samples, 0.01%)</title><rect x="199.3" y="373" width="0.1" height="15.0" fill="rgb(206,44,43)" rx="2" ry="2" />
<text  x="202.28" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_valptr (4 samples, 0.02%)</title><rect x="71.0" y="965" width="0.2" height="15.0" fill="rgb(252,160,36)" rx="2" ry="2" />
<text  x="73.98" y="975.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (7 samples, 0.03%)</title><rect x="1168.1" y="773" width="0.4" height="15.0" fill="rgb(222,10,44)" rx="2" ry="2" />
<text  x="1171.14" y="783.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_valptr (2 samples, 0.01%)</title><rect x="200.4" y="357" width="0.2" height="15.0" fill="rgb(240,135,39)" rx="2" ry="2" />
<text  x="203.45" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (16 samples, 0.08%)</title><rect x="45.8" y="965" width="0.9" height="15.0" fill="rgb(228,107,22)" rx="2" ry="2" />
<text  x="48.79" y="975.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (57 samples, 0.28%)</title><rect x="209.1" y="549" width="3.3" height="15.0" fill="rgb(245,218,46)" rx="2" ry="2" />
<text  x="212.08" y="559.5" ></text>
</g>
<g >
<title>Game_Player::UpdateSelfMovement (32 samples, 0.16%)</title><rect x="1146.0" y="789" width="1.9" height="15.0" fill="rgb(253,25,49)" rx="2" ry="2" />
<text  x="1148.99" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_value (15 samples, 0.07%)</title><rect x="779.4" y="389" width="0.9" height="15.0" fill="rgb(248,67,28)" rx="2" ry="2" />
<text  x="782.43" y="399.5" ></text>
</g>
<g >
<title>__do_page_fault (86 samples, 0.42%)</title><rect x="246.7" y="389" width="5.0" height="15.0" fill="rgb(251,226,33)" rx="2" ry="2" />
<text  x="249.68" y="399.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (40 samples, 0.20%)</title><rect x="803.5" y="357" width="2.3" height="15.0" fill="rgb(218,220,42)" rx="2" ry="2" />
<text  x="806.51" y="367.5" ></text>
</g>
<g >
<title>Sprite::SetFlashEffect (2 samples, 0.01%)</title><rect x="883.4" y="469" width="0.1" height="15.0" fill="rgb(231,83,12)" rx="2" ry="2" />
<text  x="886.43" y="479.5" ></text>
</g>
<g >
<title>Game_Picture::Show (68 samples, 0.34%)</title><rect x="194.0" y="757" width="4.0" height="15.0" fill="rgb(214,224,33)" rx="2" ry="2" />
<text  x="197.04" y="767.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (62 samples, 0.31%)</title><rect x="194.4" y="485" width="3.6" height="15.0" fill="rgb(240,77,31)" rx="2" ry="2" />
<text  x="197.39" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (10 samples, 0.05%)</title><rect x="156.7" y="533" width="0.6" height="15.0" fill="rgb(205,105,40)" rx="2" ry="2" />
<text  x="159.73" y="543.5" ></text>
</g>
<g >
<title>Player::MainLoop (15,519 samples, 76.67%)</title><rect x="278.2" y="917" width="904.7" height="15.0" fill="rgb(252,109,6)" rx="2" ry="2" />
<text  x="281.21" y="927.5" >Player::MainLoop</text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::get (7 samples, 0.03%)</title><rect x="999.1" y="709" width="0.5" height="15.0" fill="rgb(210,122,37)" rx="2" ry="2" />
<text  x="1002.14" y="719.5" ></text>
</g>
<g >
<title>operator delete@plt (5 samples, 0.02%)</title><rect x="906.2" y="341" width="0.3" height="15.0" fill="rgb(221,195,15)" rx="2" ry="2" />
<text  x="909.16" y="351.5" ></text>
</g>
<g >
<title>std::move&lt;void (*&amp;)(std::_Any_data const&amp;, FileRequestResult*&amp;&amp;)&gt; (4 samples, 0.02%)</title><rect x="705.8" y="533" width="0.2" height="15.0" fill="rgb(222,151,52)" rx="2" ry="2" />
<text  x="708.80" y="543.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (440 samples, 2.17%)</title><rect x="161.5" y="709" width="25.7" height="15.0" fill="rgb(219,101,21)" rx="2" ry="2" />
<text  x="164.51" y="719.5" >s..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (26 samples, 0.13%)</title><rect x="713.5" y="565" width="1.5" height="15.0" fill="rgb(238,18,41)" rx="2" ry="2" />
<text  x="716.50" y="575.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Scene, (__gnu_cxx::_Lock_policy)2&gt;::get (42 samples, 0.21%)</title><rect x="1127.7" y="741" width="2.4" height="15.0" fill="rgb(224,39,1)" rx="2" ry="2" />
<text  x="1130.68" y="751.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="784.6" y="437" width="0.1" height="15.0" fill="rgb(233,106,0)" rx="2" ry="2" />
<text  x="787.56" y="447.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="743.0" y="565" width="0.2" height="15.0" fill="rgb(221,123,52)" rx="2" ry="2" />
<text  x="746.00" y="575.5" ></text>
</g>
<g >
<title>std::max&lt;int&gt; (5 samples, 0.02%)</title><rect x="594.9" y="725" width="0.3" height="15.0" fill="rgb(239,143,21)" rx="2" ry="2" />
<text  x="597.87" y="735.5" ></text>
</g>
<g >
<title>Bitmap::GetWidth (13 samples, 0.06%)</title><rect x="872.5" y="469" width="0.8" height="15.0" fill="rgb(245,171,12)" rx="2" ry="2" />
<text  x="875.53" y="479.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (34 samples, 0.17%)</title><rect x="812.7" y="389" width="2.0" height="15.0" fill="rgb(251,41,2)" rx="2" ry="2" />
<text  x="815.72" y="399.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (6 samples, 0.03%)</title><rect x="76.5" y="965" width="0.4" height="15.0" fill="rgb(206,25,23)" rx="2" ry="2" />
<text  x="79.51" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (12 samples, 0.06%)</title><rect x="479.7" y="661" width="0.7" height="15.0" fill="rgb(211,184,25)" rx="2" ry="2" />
<text  x="482.74" y="671.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (10 samples, 0.05%)</title><rect x="809.7" y="389" width="0.6" height="15.0" fill="rgb(240,87,19)" rx="2" ry="2" />
<text  x="812.69" y="399.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (3 samples, 0.01%)</title><rect x="645.5" y="629" width="0.2" height="15.0" fill="rgb(241,68,6)" rx="2" ry="2" />
<text  x="648.53" y="639.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (21 samples, 0.10%)</title><rect x="603.3" y="693" width="1.2" height="15.0" fill="rgb(250,104,0)" rx="2" ry="2" />
<text  x="606.26" y="703.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (307 samples, 1.52%)</title><rect x="546.5" y="725" width="17.9" height="15.0" fill="rgb(239,52,29)" rx="2" ry="2" />
<text  x="549.54" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (468 samples, 2.31%)</title><rect x="788.6" y="453" width="27.3" height="15.0" fill="rgb(216,3,50)" rx="2" ry="2" />
<text  x="791.58" y="463.5" >s..</text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::get (2 samples, 0.01%)</title><rect x="617.6" y="709" width="0.1" height="15.0" fill="rgb(226,37,16)" rx="2" ry="2" />
<text  x="620.60" y="719.5" ></text>
</g>
<g >
<title>schedule (77 samples, 0.38%)</title><rect x="17.4" y="869" width="4.5" height="15.0" fill="rgb(215,135,36)" rx="2" ry="2" />
<text  x="20.40" y="879.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.05%)</title><rect x="678.3" y="597" width="0.6" height="15.0" fill="rgb(220,94,32)" rx="2" ry="2" />
<text  x="681.29" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (3 samples, 0.01%)</title><rect x="1010.5" y="709" width="0.2" height="15.0" fill="rgb(222,60,26)" rx="2" ry="2" />
<text  x="1013.51" y="719.5" ></text>
</g>
<g >
<title>std::__stable_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (2 samples, 0.01%)</title><rect x="279.0" y="805" width="0.1" height="15.0" fill="rgb(220,179,29)" rx="2" ry="2" />
<text  x="281.97" y="815.5" ></text>
</g>
<g >
<title>Bitmap::width (43 samples, 0.21%)</title><rect x="1156.4" y="757" width="2.5" height="15.0" fill="rgb(216,90,27)" rx="2" ry="2" />
<text  x="1159.36" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (10 samples, 0.05%)</title><rect x="902.3" y="389" width="0.6" height="15.0" fill="rgb(241,218,4)" rx="2" ry="2" />
<text  x="905.32" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt;::_M_head (3 samples, 0.01%)</title><rect x="73.9" y="965" width="0.2" height="15.0" fill="rgb(243,211,34)" rx="2" ry="2" />
<text  x="76.95" y="975.5" ></text>
</g>
<g >
<title>ktime_get_raw_ts64 (18 samples, 0.09%)</title><rect x="227.4" y="437" width="1.1" height="15.0" fill="rgb(213,97,30)" rx="2" ry="2" />
<text  x="230.44" y="447.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (3 samples, 0.01%)</title><rect x="229.2" y="437" width="0.2" height="15.0" fill="rgb(211,225,3)" rx="2" ry="2" />
<text  x="232.25" y="447.5" ></text>
</g>
<g >
<title>operator new (106 samples, 0.52%)</title><rect x="717.2" y="629" width="6.2" height="15.0" fill="rgb(221,40,15)" rx="2" ry="2" />
<text  x="720.17" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt;::begin (5 samples, 0.02%)</title><rect x="128.7" y="965" width="0.3" height="15.0" fill="rgb(242,71,25)" rx="2" ry="2" />
<text  x="131.75" y="975.5" ></text>
</g>
<g >
<title>Game_Screen::Update (511 samples, 2.52%)</title><rect x="1147.9" y="821" width="29.7" height="15.0" fill="rgb(233,195,15)" rx="2" ry="2" />
<text  x="1150.85" y="831.5" >Ga..</text>
</g>
<g >
<title>__x64_sys_clock_gettime (11 samples, 0.05%)</title><rect x="218.7" y="485" width="0.6" height="15.0" fill="rgb(212,88,51)" rx="2" ry="2" />
<text  x="221.69" y="495.5" ></text>
</g>
<g >
<title>operator delete (44 samples, 0.22%)</title><rect x="194.4" y="373" width="2.6" height="15.0" fill="rgb(216,34,42)" rx="2" ry="2" />
<text  x="197.39" y="383.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (11 samples, 0.05%)</title><rect x="1180.1" y="741" width="0.6" height="15.0" fill="rgb(226,65,3)" rx="2" ry="2" />
<text  x="1183.09" y="751.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustId (6 samples, 0.03%)</title><rect x="36.2" y="965" width="0.3" height="15.0" fill="rgb(213,133,38)" rx="2" ry="2" />
<text  x="39.17" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator (5 samples, 0.02%)</title><rect x="665.3" y="677" width="0.3" height="15.0" fill="rgb(238,121,46)" rx="2" ry="2" />
<text  x="668.35" y="687.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;long&gt; (2 samples, 0.01%)</title><rect x="988.2" y="693" width="0.1" height="15.0" fill="rgb(248,12,44)" rx="2" ry="2" />
<text  x="991.18" y="703.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Set (4 samples, 0.02%)</title><rect x="35.6" y="965" width="0.2" height="15.0" fill="rgb(229,226,30)" rx="2" ry="2" />
<text  x="38.59" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::end (2 samples, 0.01%)</title><rect x="201.0" y="341" width="0.1" height="15.0" fill="rgb(239,75,43)" rx="2" ry="2" />
<text  x="203.97" y="351.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingForegroundExecution (10 samples, 0.05%)</title><rect x="1144.9" y="805" width="0.6" height="15.0" fill="rgb(240,215,27)" rx="2" ry="2" />
<text  x="1147.88" y="815.5" ></text>
</g>
<g >
<title>Color::Color (6 samples, 0.03%)</title><rect x="962.4" y="693" width="0.3" height="15.0" fill="rgb(218,155,19)" rx="2" ry="2" />
<text  x="965.36" y="703.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (10 samples, 0.05%)</title><rect x="137.7" y="293" width="0.5" height="15.0" fill="rgb(236,32,4)" rx="2" ry="2" />
<text  x="140.67" y="303.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (68 samples, 0.34%)</title><rect x="194.0" y="837" width="4.0" height="15.0" fill="rgb(235,214,20)" rx="2" ry="2" />
<text  x="197.04" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (112 samples, 0.55%)</title><rect x="1095.6" y="725" width="6.5" height="15.0" fill="rgb(208,42,49)" rx="2" ry="2" />
<text  x="1098.62" y="735.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (44 samples, 0.22%)</title><rect x="199.3" y="501" width="2.5" height="15.0" fill="rgb(240,149,26)" rx="2" ry="2" />
<text  x="202.28" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (3 samples, 0.01%)</title><rect x="45.0" y="965" width="0.2" height="15.0" fill="rgb(215,6,30)" rx="2" ry="2" />
<text  x="47.98" y="975.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (440 samples, 2.17%)</title><rect x="161.5" y="933" width="25.7" height="15.0" fill="rgb(246,79,32)" rx="2" ry="2" />
<text  x="164.51" y="943.5" >G..</text>
</g>
<g >
<title>operator new@plt (4 samples, 0.02%)</title><rect x="870.4" y="325" width="0.2" height="15.0" fill="rgb(245,124,34)" rx="2" ry="2" />
<text  x="873.37" y="335.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (101 samples, 0.50%)</title><rect x="188.1" y="533" width="5.9" height="15.0" fill="rgb(229,1,50)" rx="2" ry="2" />
<text  x="191.15" y="543.5" ></text>
</g>
<g >
<title>FileRequestAsync::Bind (479 samples, 2.37%)</title><rect x="679.4" y="677" width="27.9" height="15.0" fill="rgb(221,167,39)" rx="2" ry="2" />
<text  x="682.40" y="687.5" >F..</text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (28 samples, 0.14%)</title><rect x="799.4" y="341" width="1.7" height="15.0" fill="rgb(242,220,36)" rx="2" ry="2" />
<text  x="802.43" y="351.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Picture*, std::_Placeholder&lt;1&gt; &gt;::_M_head (2 samples, 0.01%)</title><rect x="724.7" y="581" width="0.1" height="15.0" fill="rgb(222,140,22)" rx="2" ry="2" />
<text  x="727.69" y="591.5" ></text>
</g>
<g >
<title>Opacity::IsSplit (3 samples, 0.01%)</title><rect x="831.5" y="437" width="0.2" height="15.0" fill="rgb(244,227,47)" rx="2" ry="2" />
<text  x="834.49" y="447.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (79 samples, 0.39%)</title><rect x="142.0" y="965" width="4.6" height="15.0" fill="rgb(247,227,43)" rx="2" ry="2" />
<text  x="145.04" y="975.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (7 samples, 0.03%)</title><rect x="1055.0" y="725" width="0.4" height="15.0" fill="rgb(240,169,47)" rx="2" ry="2" />
<text  x="1057.99" y="735.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.03%)</title><rect x="212.7" y="261" width="0.4" height="15.0" fill="rgb(215,183,35)" rx="2" ry="2" />
<text  x="215.69" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_key (23 samples, 0.11%)</title><rect x="791.1" y="421" width="1.3" height="15.0" fill="rgb(242,170,41)" rx="2" ry="2" />
<text  x="794.09" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_write (12 samples, 0.06%)</title><rect x="23.0" y="949" width="0.7" height="15.0" fill="rgb(228,118,28)" rx="2" ry="2" />
<text  x="26.00" y="959.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (194 samples, 0.96%)</title><rect x="256.9" y="421" width="11.3" height="15.0" fill="rgb(253,207,5)" rx="2" ry="2" />
<text  x="259.94" y="431.5" ></text>
</g>
<g >
<title>Drawable::GetPriorityForMapLayer (2 samples, 0.01%)</title><rect x="26.7" y="965" width="0.1" height="15.0" fill="rgb(230,109,42)" rx="2" ry="2" />
<text  x="29.73" y="975.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (498 samples, 2.46%)</title><rect x="239.2" y="677" width="29.0" height="15.0" fill="rgb(220,50,31)" rx="2" ry="2" />
<text  x="242.21" y="687.5" >Fi..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.03%)</title><rect x="181.1" y="453" width="0.3" height="15.0" fill="rgb(243,133,51)" rx="2" ry="2" />
<text  x="184.09" y="463.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (3 samples, 0.01%)</title><rect x="1141.9" y="725" width="0.2" height="15.0" fill="rgb(218,36,47)" rx="2" ry="2" />
<text  x="1144.91" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign@plt (3 samples, 0.01%)</title><rect x="997.5" y="709" width="0.1" height="15.0" fill="rgb(221,155,54)" rx="2" ry="2" />
<text  x="1000.45" y="719.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="140.6" y="405" width="0.2" height="15.0" fill="rgb(236,58,26)" rx="2" ry="2" />
<text  x="143.64" y="415.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (7 samples, 0.03%)</title><rect x="938.9" y="693" width="0.4" height="15.0" fill="rgb(211,93,43)" rx="2" ry="2" />
<text  x="941.87" y="703.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (73 samples, 0.36%)</title><rect x="702.2" y="629" width="4.3" height="15.0" fill="rgb(240,136,0)" rx="2" ry="2" />
<text  x="705.25" y="639.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (18 samples, 0.09%)</title><rect x="232.7" y="469" width="1.0" height="15.0" fill="rgb(221,226,22)" rx="2" ry="2" />
<text  x="235.69" y="479.5" ></text>
</g>
<g >
<title>do_page_fault (86 samples, 0.42%)</title><rect x="246.7" y="405" width="5.0" height="15.0" fill="rgb(215,2,22)" rx="2" ry="2" />
<text  x="249.68" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_ptr (2 samples, 0.01%)</title><rect x="665.9" y="645" width="0.1" height="15.0" fill="rgb(208,18,32)" rx="2" ry="2" />
<text  x="668.87" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::get (14 samples, 0.07%)</title><rect x="1142.1" y="773" width="0.9" height="15.0" fill="rgb(207,226,52)" rx="2" ry="2" />
<text  x="1145.14" y="783.5" ></text>
</g>
<g >
<title>read_tsc (5 samples, 0.02%)</title><rect x="228.2" y="421" width="0.3" height="15.0" fill="rgb(220,82,50)" rx="2" ry="2" />
<text  x="231.20" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.02%)</title><rect x="136.8" y="373" width="0.3" height="15.0" fill="rgb(242,225,54)" rx="2" ry="2" />
<text  x="139.79" y="383.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (146 samples, 0.72%)</title><rect x="153.0" y="757" width="8.5" height="15.0" fill="rgb(240,101,44)" rx="2" ry="2" />
<text  x="156.00" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::CommonEvent, std::allocator&lt;RPG::CommonEvent&gt; &gt;::size (3 samples, 0.01%)</title><rect x="1147.2" y="725" width="0.2" height="15.0" fill="rgb(234,58,8)" rx="2" ry="2" />
<text  x="1150.21" y="735.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (170 samples, 0.84%)</title><rect x="132.0" y="805" width="9.9" height="15.0" fill="rgb(253,182,13)" rx="2" ry="2" />
<text  x="134.95" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (26 samples, 0.13%)</title><rect x="518.0" y="725" width="1.5" height="15.0" fill="rgb(225,23,29)" rx="2" ry="2" />
<text  x="520.98" y="735.5" ></text>
</g>
<g >
<title>Sprite::Flash (9 samples, 0.04%)</title><rect x="966.3" y="693" width="0.5" height="15.0" fill="rgb(245,154,22)" rx="2" ry="2" />
<text  x="969.32" y="703.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (12 samples, 0.06%)</title><rect x="83.0" y="965" width="0.7" height="15.0" fill="rgb(249,35,54)" rx="2" ry="2" />
<text  x="86.04" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (39 samples, 0.19%)</title><rect x="587.5" y="709" width="2.3" height="15.0" fill="rgb(218,100,24)" rx="2" ry="2" />
<text  x="590.52" y="719.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (17 samples, 0.08%)</title><rect x="131.0" y="453" width="1.0" height="15.0" fill="rgb(205,188,29)" rx="2" ry="2" />
<text  x="133.96" y="463.5" ></text>
</g>
<g >
<title>Game_Picture::SyncCurrentToFinish (37 samples, 0.18%)</title><rect x="955.8" y="709" width="2.1" height="15.0" fill="rgb(243,177,10)" rx="2" ry="2" />
<text  x="958.77" y="719.5" ></text>
</g>
<g >
<title>Player::IsRPG2k3E (3 samples, 0.01%)</title><rect x="37.0" y="965" width="0.2" height="15.0" fill="rgb(228,143,8)" rx="2" ry="2" />
<text  x="40.05" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt;::begin (4 samples, 0.02%)</title><rect x="113.6" y="965" width="0.2" height="15.0" fill="rgb(206,172,31)" rx="2" ry="2" />
<text  x="116.59" y="975.5" ></text>
</g>
<g >
<title>std::min&lt;int&gt; (10 samples, 0.05%)</title><rect x="998.3" y="725" width="0.6" height="15.0" fill="rgb(247,76,23)" rx="2" ry="2" />
<text  x="1001.33" y="735.5" ></text>
</g>
<g >
<title>Bitmap::~Bitmap (169 samples, 0.83%)</title><rect x="258.4" y="357" width="9.8" height="15.0" fill="rgb(246,81,31)" rx="2" ry="2" />
<text  x="261.39" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator++ (2 samples, 0.01%)</title><rect x="1178.0" y="773" width="0.1" height="15.0" fill="rgb(219,63,26)" rx="2" ry="2" />
<text  x="1180.99" y="783.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (3 samples, 0.01%)</title><rect x="267.9" y="277" width="0.2" height="15.0" fill="rgb(208,113,53)" rx="2" ry="2" />
<text  x="270.90" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_valptr (3 samples, 0.01%)</title><rect x="665.8" y="661" width="0.2" height="15.0" fill="rgb(238,19,31)" rx="2" ry="2" />
<text  x="668.81" y="671.5" ></text>
</g>
<g >
<title>Bitmap::GetRect (15 samples, 0.07%)</title><rect x="880.8" y="453" width="0.9" height="15.0" fill="rgb(252,178,11)" rx="2" ry="2" />
<text  x="883.81" y="463.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (15 samples, 0.07%)</title><rect x="1181.1" y="597" width="0.9" height="15.0" fill="rgb(239,177,29)" rx="2" ry="2" />
<text  x="1184.08" y="607.5" ></text>
</g>
<g >
<title>__GI_madvise (7 samples, 0.03%)</title><rect x="212.7" y="293" width="0.4" height="15.0" fill="rgb(246,207,49)" rx="2" ry="2" />
<text  x="215.69" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (3 samples, 0.01%)</title><rect x="963.3" y="661" width="0.2" height="15.0" fill="rgb(208,75,19)" rx="2" ry="2" />
<text  x="966.29" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::push_back (2 samples, 0.01%)</title><rect x="120.6" y="965" width="0.1" height="15.0" fill="rgb(253,139,20)" rx="2" ry="2" />
<text  x="123.58" y="975.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (1,236 samples, 6.11%)</title><rect x="824.8" y="485" width="72.0" height="15.0" fill="rgb(210,207,19)" rx="2" ry="2" />
<text  x="827.78" y="495.5" >Game_Pic..</text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (3 samples, 0.01%)</title><rect x="91.7" y="965" width="0.2" height="15.0" fill="rgb(253,205,46)" rx="2" ry="2" />
<text  x="94.73" y="975.5" ></text>
</g>
<g >
<title>__gthread_active_p (2 samples, 0.01%)</title><rect x="946.8" y="597" width="0.1" height="15.0" fill="rgb(225,111,50)" rx="2" ry="2" />
<text  x="949.79" y="607.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (12 samples, 0.06%)</title><rect x="212.4" y="533" width="0.7" height="15.0" fill="rgb(247,143,1)" rx="2" ry="2" />
<text  x="215.40" y="543.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (2 samples, 0.01%)</title><rect x="723.2" y="597" width="0.2" height="15.0" fill="rgb(253,105,31)" rx="2" ry="2" />
<text  x="726.23" y="607.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (2 samples, 0.01%)</title><rect x="23.7" y="981" width="0.1" height="15.0" fill="rgb(205,147,33)" rx="2" ry="2" />
<text  x="26.70" y="991.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (194 samples, 0.96%)</title><rect x="256.9" y="485" width="11.3" height="15.0" fill="rgb(216,25,54)" rx="2" ry="2" />
<text  x="259.94" y="495.5" ></text>
</g>
<g >
<title>std::tuple&lt;FileRequestResult*&amp;&amp;&gt;::tuple&lt;FileRequestResult*, true&gt; (9 samples, 0.04%)</title><rect x="923.7" y="581" width="0.5" height="15.0" fill="rgb(229,136,45)" rx="2" ry="2" />
<text  x="926.71" y="591.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (52 samples, 0.26%)</title><rect x="253.9" y="421" width="3.0" height="15.0" fill="rgb(235,213,42)" rx="2" ry="2" />
<text  x="256.90" y="431.5" ></text>
</g>
<g >
<title>std::forward&lt;int&amp;&gt; (2 samples, 0.01%)</title><rect x="861.0" y="421" width="0.2" height="15.0" fill="rgb(207,98,7)" rx="2" ry="2" />
<text  x="864.04" y="431.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&amp;&gt; (9 samples, 0.04%)</title><rect x="95.1" y="965" width="0.5" height="15.0" fill="rgb(239,208,26)" rx="2" ry="2" />
<text  x="98.05" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data@plt (3 samples, 0.01%)</title><rect x="822.0" y="389" width="0.2" height="15.0" fill="rgb(219,119,33)" rx="2" ry="2" />
<text  x="825.04" y="399.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (354 samples, 1.75%)</title><rect x="213.1" y="917" width="20.6" height="15.0" fill="rgb(254,125,43)" rx="2" ry="2" />
<text  x="216.10" y="927.5" ></text>
</g>
<g >
<title>calloc (3 samples, 0.01%)</title><rect x="255.8" y="261" width="0.1" height="15.0" fill="rgb(232,99,42)" rx="2" ry="2" />
<text  x="258.77" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (58 samples, 0.29%)</title><rect x="971.0" y="693" width="3.4" height="15.0" fill="rgb(212,212,52)" rx="2" ry="2" />
<text  x="974.05" y="703.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (109 samples, 0.54%)</title><rect x="146.6" y="949" width="6.4" height="15.0" fill="rgb(228,56,38)" rx="2" ry="2" />
<text  x="149.64" y="959.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (91 samples, 0.45%)</title><rect x="181.9" y="549" width="5.3" height="15.0" fill="rgb(240,36,53)" rx="2" ry="2" />
<text  x="184.85" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (2 samples, 0.01%)</title><rect x="605.8" y="661" width="0.1" height="15.0" fill="rgb(222,103,1)" rx="2" ry="2" />
<text  x="608.77" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_construct&lt;char32_t const*&gt; (3 samples, 0.01%)</title><rect x="987.4" y="677" width="0.2" height="15.0" fill="rgb(220,195,7)" rx="2" ry="2" />
<text  x="990.43" y="687.5" ></text>
</g>
<g >
<title>variables (2 samples, 0.01%)</title><rect x="517.2" y="709" width="0.1" height="15.0" fill="rgb(243,88,38)" rx="2" ry="2" />
<text  x="520.16" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (24 samples, 0.12%)</title><rect x="476.6" y="661" width="1.4" height="15.0" fill="rgb(237,6,1)" rx="2" ry="2" />
<text  x="479.59" y="671.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (5 samples, 0.02%)</title><rect x="250.2" y="293" width="0.3" height="15.0" fill="rgb(248,96,8)" rx="2" ry="2" />
<text  x="253.17" y="303.5" ></text>
</g>
<g >
<title>Game_Map::Update (68 samples, 0.34%)</title><rect x="194.0" y="869" width="4.0" height="15.0" fill="rgb(234,189,31)" rx="2" ry="2" />
<text  x="197.04" y="879.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_init_functor (148 samples, 0.73%)</title><rect x="716.8" y="645" width="8.7" height="15.0" fill="rgb(214,36,16)" rx="2" ry="2" />
<text  x="719.82" y="655.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (17 samples, 0.08%)</title><rect x="131.0" y="581" width="1.0" height="15.0" fill="rgb(252,210,26)" rx="2" ry="2" />
<text  x="133.96" y="591.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~tuple (72 samples, 0.36%)</title><rect x="157.3" y="597" width="4.2" height="15.0" fill="rgb(245,140,48)" rx="2" ry="2" />
<text  x="160.31" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_Rb_tree_iterator (3 samples, 0.01%)</title><rect x="777.7" y="421" width="0.2" height="15.0" fill="rgb(241,14,41)" rx="2" ry="2" />
<text  x="780.74" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::push_back (88 samples, 0.43%)</title><rect x="701.4" y="661" width="5.1" height="15.0" fill="rgb(243,104,52)" rx="2" ry="2" />
<text  x="704.37" y="671.5" ></text>
</g>
<g >
<title>__interceptor_free (20 samples, 0.10%)</title><rect x="201.8" y="389" width="1.2" height="15.0" fill="rgb(221,194,42)" rx="2" ry="2" />
<text  x="204.85" y="399.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (11 samples, 0.05%)</title><rect x="272.9" y="965" width="0.7" height="15.0" fill="rgb(207,39,53)" rx="2" ry="2" />
<text  x="275.91" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append@plt (5 samples, 0.02%)</title><rect x="646.2" y="645" width="0.3" height="15.0" fill="rgb(226,185,20)" rx="2" ry="2" />
<text  x="649.17" y="655.5" ></text>
</g>
<g >
<title>pick_next_task_fair (4 samples, 0.02%)</title><rect x="21.5" y="837" width="0.2" height="15.0" fill="rgb(244,142,4)" rx="2" ry="2" />
<text  x="24.48" y="847.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (22 samples, 0.11%)</title><rect x="252.2" y="405" width="1.2" height="15.0" fill="rgb(237,89,39)" rx="2" ry="2" />
<text  x="255.16" y="415.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (6 samples, 0.03%)</title><rect x="813.9" y="357" width="0.4" height="15.0" fill="rgb(228,157,27)" rx="2" ry="2" />
<text  x="816.94" y="367.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.01%)</title><rect x="149.9" y="341" width="0.1" height="15.0" fill="rgb(228,208,33)" rx="2" ry="2" />
<text  x="152.91" y="351.5" ></text>
</g>
<g >
<title>__GI___writev (2 samples, 0.01%)</title><rect x="279.4" y="693" width="0.1" height="15.0" fill="rgb(217,188,12)" rx="2" ry="2" />
<text  x="282.38" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="129.7" y="965" width="0.2" height="15.0" fill="rgb(227,23,51)" rx="2" ry="2" />
<text  x="132.74" y="975.5" ></text>
</g>
<g >
<title>operator delete (10 samples, 0.05%)</title><rect x="272.2" y="965" width="0.6" height="15.0" fill="rgb(221,59,47)" rx="2" ry="2" />
<text  x="275.21" y="975.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, FileRequestResult*&amp;&amp;&gt; (4 samples, 0.02%)</title><rect x="752.6" y="533" width="0.2" height="15.0" fill="rgb(229,163,25)" rx="2" ry="2" />
<text  x="755.56" y="543.5" ></text>
</g>
<g >
<title>operator!= (4 samples, 0.02%)</title><rect x="56.9" y="965" width="0.3" height="15.0" fill="rgb(234,152,29)" rx="2" ry="2" />
<text  x="59.93" y="975.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="216.1" y="501" width="0.2" height="15.0" fill="rgb(222,186,9)" rx="2" ry="2" />
<text  x="219.07" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (53 samples, 0.26%)</title><rect x="161.7" y="517" width="3.1" height="15.0" fill="rgb(216,174,21)" rx="2" ry="2" />
<text  x="164.74" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator bool (2 samples, 0.01%)</title><rect x="617.0" y="709" width="0.1" height="15.0" fill="rgb(250,23,2)" rx="2" ry="2" />
<text  x="620.02" y="719.5" ></text>
</g>
<g >
<title>operator new (95 samples, 0.47%)</title><rect x="694.3" y="533" width="5.6" height="15.0" fill="rgb(208,125,52)" rx="2" ry="2" />
<text  x="697.32" y="543.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.05%)</title><rect x="986.5" y="581" width="0.6" height="15.0" fill="rgb(229,183,42)" rx="2" ry="2" />
<text  x="989.49" y="591.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (91 samples, 0.45%)</title><rect x="181.9" y="565" width="5.3" height="15.0" fill="rgb(216,114,18)" rx="2" ry="2" />
<text  x="184.85" y="575.5" ></text>
</g>
<g >
<title>Bitmap::GetOperator (3 samples, 0.01%)</title><rect x="831.3" y="453" width="0.2" height="15.0" fill="rgb(236,131,50)" rx="2" ry="2" />
<text  x="834.31" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (4 samples, 0.02%)</title><rect x="124.8" y="965" width="0.3" height="15.0" fill="rgb(232,87,38)" rx="2" ry="2" />
<text  x="127.84" y="975.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (27 samples, 0.13%)</title><rect x="268.7" y="341" width="1.6" height="15.0" fill="rgb(246,43,47)" rx="2" ry="2" />
<text  x="271.71" y="351.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (498 samples, 2.46%)</title><rect x="239.2" y="501" width="29.0" height="15.0" fill="rgb(245,4,40)" rx="2" ry="2" />
<text  x="242.21" y="511.5" >Ga..</text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (109 samples, 0.54%)</title><rect x="146.6" y="773" width="6.4" height="15.0" fill="rgb(213,144,50)" rx="2" ry="2" />
<text  x="149.64" y="783.5" ></text>
</g>
<g >
<title>__wake_up_locked_key (8 samples, 0.04%)</title><rect x="23.1" y="869" width="0.4" height="15.0" fill="rgb(217,128,24)" rx="2" ry="2" />
<text  x="26.06" y="879.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Scene, (__gnu_cxx::_Lock_policy)2&gt;::get (7 samples, 0.03%)</title><rect x="1126.8" y="757" width="0.4" height="15.0" fill="rgb(217,53,33)" rx="2" ry="2" />
<text  x="1129.75" y="767.5" ></text>
</g>
<g >
<title>Bitmap::GetOpacity (3 samples, 0.01%)</title><rect x="25.0" y="965" width="0.2" height="15.0" fill="rgb(250,191,9)" rx="2" ry="2" />
<text  x="28.04" y="975.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (3 samples, 0.01%)</title><rect x="1169.2" y="773" width="0.2" height="15.0" fill="rgb(226,139,36)" rx="2" ry="2" />
<text  x="1172.19" y="783.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;int&gt;::weak_ptr&lt;int, void&gt; (13 samples, 0.06%)</title><rect x="706.5" y="661" width="0.8" height="15.0" fill="rgb(237,47,31)" rx="2" ry="2" />
<text  x="709.50" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (40 samples, 0.20%)</title><rect x="150.7" y="421" width="2.3" height="15.0" fill="rgb(210,63,14)" rx="2" ry="2" />
<text  x="153.66" y="431.5" ></text>
</g>
<g >
<title>__libc_start_main (500 samples, 2.47%)</title><rect x="239.1" y="965" width="29.1" height="15.0" fill="rgb(220,134,49)" rx="2" ry="2" />
<text  x="242.10" y="975.5" >__..</text>
</g>
<g >
<title>Game_Interpreter::CommandMovePicture (45 samples, 0.22%)</title><rect x="615.3" y="741" width="2.6" height="15.0" fill="rgb(248,157,30)" rx="2" ry="2" />
<text  x="618.27" y="751.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (17 samples, 0.08%)</title><rect x="131.0" y="805" width="1.0" height="15.0" fill="rgb(244,220,20)" rx="2" ry="2" />
<text  x="133.96" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_ptr (4 samples, 0.02%)</title><rect x="792.1" y="373" width="0.3" height="15.0" fill="rgb(242,112,3)" rx="2" ry="2" />
<text  x="795.14" y="383.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (49 samples, 0.24%)</title><rect x="730.9" y="581" width="2.8" height="15.0" fill="rgb(247,65,37)" rx="2" ry="2" />
<text  x="733.87" y="591.5" ></text>
</g>
<g >
<title>__update_idle_core (2 samples, 0.01%)</title><rect x="21.7" y="821" width="0.1" height="15.0" fill="rgb(215,193,44)" rx="2" ry="2" />
<text  x="24.72" y="831.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (5 samples, 0.02%)</title><rect x="1168.2" y="725" width="0.3" height="15.0" fill="rgb(237,56,45)" rx="2" ry="2" />
<text  x="1171.20" y="735.5" ></text>
</g>
<g >
<title>Bitmap::Clear (252 samples, 1.24%)</title><rect x="239.2" y="469" width="14.7" height="15.0" fill="rgb(215,205,45)" rx="2" ry="2" />
<text  x="242.21" y="479.5" ></text>
</g>
<g >
<title>Game_Picture::Show (117 samples, 0.58%)</title><rect x="187.2" y="773" width="6.8" height="15.0" fill="rgb(223,31,3)" rx="2" ry="2" />
<text  x="190.22" y="783.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (5 samples, 0.02%)</title><rect x="890.7" y="421" width="0.3" height="15.0" fill="rgb(223,46,0)" rx="2" ry="2" />
<text  x="893.72" y="431.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (37 samples, 0.18%)</title><rect x="213.2" y="517" width="2.1" height="15.0" fill="rgb(207,219,41)" rx="2" ry="2" />
<text  x="216.16" y="527.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (2 samples, 0.01%)</title><rect x="703.1" y="565" width="0.1" height="15.0" fill="rgb(212,6,31)" rx="2" ry="2" />
<text  x="706.06" y="575.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (440 samples, 2.17%)</title><rect x="161.5" y="693" width="25.7" height="15.0" fill="rgb(217,209,48)" rx="2" ry="2" />
<text  x="164.51" y="703.5" >s..</text>
</g>
<g >
<title>std::forward&lt;bool&amp;&gt; (2 samples, 0.01%)</title><rect x="871.7" y="437" width="0.1" height="15.0" fill="rgb(212,215,6)" rx="2" ry="2" />
<text  x="874.65" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (35 samples, 0.17%)</title><rect x="976.9" y="645" width="2.1" height="15.0" fill="rgb(217,223,30)" rx="2" ry="2" />
<text  x="979.93" y="655.5" ></text>
</g>
<g >
<title>Graphics::Draw (17 samples, 0.08%)</title><rect x="278.4" y="853" width="1.0" height="15.0" fill="rgb(205,82,50)" rx="2" ry="2" />
<text  x="281.39" y="863.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (38 samples, 0.19%)</title><rect x="213.1" y="549" width="2.2" height="15.0" fill="rgb(254,187,7)" rx="2" ry="2" />
<text  x="216.10" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (3 samples, 0.01%)</title><rect x="986.9" y="453" width="0.2" height="15.0" fill="rgb(231,119,49)" rx="2" ry="2" />
<text  x="989.90" y="463.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (105 samples, 0.52%)</title><rect x="207.0" y="901" width="6.1" height="15.0" fill="rgb(242,229,48)" rx="2" ry="2" />
<text  x="209.98" y="911.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (4 samples, 0.02%)</title><rect x="139.3" y="437" width="0.2" height="15.0" fill="rgb(223,102,34)" rx="2" ry="2" />
<text  x="142.30" y="447.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (2 samples, 0.01%)</title><rect x="999.4" y="677" width="0.2" height="15.0" fill="rgb(245,173,43)" rx="2" ry="2" />
<text  x="1002.43" y="687.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocator&lt;int&gt; (3 samples, 0.01%)</title><rect x="94.1" y="965" width="0.2" height="15.0" fill="rgb(221,196,14)" rx="2" ry="2" />
<text  x="97.12" y="975.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;*&gt; (7 samples, 0.03%)</title><rect x="59.9" y="965" width="0.4" height="15.0" fill="rgb(214,14,19)" rx="2" ry="2" />
<text  x="62.90" y="975.5" ></text>
</g>
<g >
<title>memcmp (6 samples, 0.03%)</title><rect x="809.0" y="341" width="0.4" height="15.0" fill="rgb(207,171,6)" rx="2" ry="2" />
<text  x="812.04" y="351.5" ></text>
</g>
<g >
<title>Bitmap::Init (34 samples, 0.17%)</title><rect x="866.7" y="309" width="2.0" height="15.0" fill="rgb(210,135,16)" rx="2" ry="2" />
<text  x="869.70" y="319.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&gt; (3 samples, 0.01%)</title><rect x="72.6" y="965" width="0.2" height="15.0" fill="rgb(213,154,43)" rx="2" ry="2" />
<text  x="75.61" y="975.5" ></text>
</g>
<g >
<title>memcmp (2 samples, 0.01%)</title><rect x="782.8" y="357" width="0.1" height="15.0" fill="rgb(229,42,27)" rx="2" ry="2" />
<text  x="785.81" y="367.5" ></text>
</g>
<g >
<title>std::tuple&lt;Game_Picture*, std::_Placeholder&lt;1&gt; &gt;::tuple&lt;Game_Picture*&amp;, std::_Placeholder&lt;1&gt; const&amp;, true&gt; (17 samples, 0.08%)</title><rect x="708.2" y="645" width="1.0" height="15.0" fill="rgb(218,187,2)" rx="2" ry="2" />
<text  x="711.19" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (5 samples, 0.02%)</title><rect x="786.8" y="469" width="0.3" height="15.0" fill="rgb(222,140,25)" rx="2" ry="2" />
<text  x="789.83" y="479.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (18 samples, 0.09%)</title><rect x="867.3" y="293" width="1.0" height="15.0" fill="rgb(236,162,20)" rx="2" ry="2" />
<text  x="870.28" y="303.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (13 samples, 0.06%)</title><rect x="204.5" y="37" width="0.8" height="15.0" fill="rgb(246,84,33)" rx="2" ry="2" />
<text  x="207.53" y="47.5" ></text>
</g>
<g >
<title>Cache::Picture (22 samples, 0.11%)</title><rect x="198.0" y="565" width="1.3" height="15.0" fill="rgb(231,54,52)" rx="2" ry="2" />
<text  x="201.00" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (3 samples, 0.01%)</title><rect x="617.7" y="725" width="0.2" height="15.0" fill="rgb(213,107,33)" rx="2" ry="2" />
<text  x="620.72" y="735.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;Bitmap&gt;&amp;&gt; (3 samples, 0.01%)</title><rect x="819.0" y="453" width="0.2" height="15.0" fill="rgb(222,10,53)" rx="2" ry="2" />
<text  x="822.01" y="463.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (4 samples, 0.02%)</title><rect x="100.9" y="965" width="0.3" height="15.0" fill="rgb(224,83,34)" rx="2" ry="2" />
<text  x="103.94" y="975.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (3 samples, 0.01%)</title><rect x="206.6" y="149" width="0.2" height="15.0" fill="rgb(227,123,3)" rx="2" ry="2" />
<text  x="209.63" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (73 samples, 0.36%)</title><rect x="478.8" y="677" width="4.3" height="15.0" fill="rgb(207,221,36)" rx="2" ry="2" />
<text  x="481.81" y="687.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandKeyInputProc (4 samples, 0.02%)</title><rect x="615.0" y="741" width="0.3" height="15.0" fill="rgb(226,94,13)" rx="2" ry="2" />
<text  x="618.04" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.01%)</title><rect x="820.5" y="421" width="0.1" height="15.0" fill="rgb(237,36,22)" rx="2" ry="2" />
<text  x="823.47" y="431.5" ></text>
</g>
<g >
<title>mutex_lock (2 samples, 0.01%)</title><rect x="1182.4" y="533" width="0.1" height="15.0" fill="rgb(211,86,26)" rx="2" ry="2" />
<text  x="1185.42" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (10 samples, 0.05%)</title><rect x="921.8" y="485" width="0.6" height="15.0" fill="rgb(211,10,25)" rx="2" ry="2" />
<text  x="924.79" y="495.5" ></text>
</g>
<g >
<title>Window_Base::Update (5 samples, 0.02%)</title><rect x="1179.0" y="805" width="0.3" height="15.0" fill="rgb(252,42,25)" rx="2" ry="2" />
<text  x="1181.98" y="815.5" ></text>
</g>
<g >
<title>Scene::MainFunction (117 samples, 0.58%)</title><rect x="187.2" y="949" width="6.8" height="15.0" fill="rgb(223,147,17)" rx="2" ry="2" />
<text  x="190.22" y="959.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (4 samples, 0.02%)</title><rect x="82.2" y="965" width="0.3" height="15.0" fill="rgb(210,214,14)" rx="2" ry="2" />
<text  x="85.23" y="975.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::operator bool (3 samples, 0.01%)</title><rect x="109.1" y="965" width="0.2" height="15.0" fill="rgb(208,155,54)" rx="2" ry="2" />
<text  x="112.10" y="975.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="161.5" y="501" width="0.2" height="15.0" fill="rgb(239,162,45)" rx="2" ry="2" />
<text  x="164.51" y="511.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (81 samples, 0.40%)</title><rect x="177.1" y="501" width="4.8" height="15.0" fill="rgb(248,41,41)" rx="2" ry="2" />
<text  x="180.13" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (100 samples, 0.49%)</title><rect x="694.0" y="549" width="5.9" height="15.0" fill="rgb(218,42,10)" rx="2" ry="2" />
<text  x="697.03" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_M_begin (7 samples, 0.03%)</title><rect x="789.0" y="437" width="0.4" height="15.0" fill="rgb(218,128,39)" rx="2" ry="2" />
<text  x="791.99" y="447.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (2 samples, 0.01%)</title><rect x="891.0" y="469" width="0.1" height="15.0" fill="rgb(219,12,36)" rx="2" ry="2" />
<text  x="894.01" y="479.5" ></text>
</g>
<g >
<title>operator!= (9 samples, 0.04%)</title><rect x="879.5" y="437" width="0.5" height="15.0" fill="rgb(250,118,6)" rx="2" ry="2" />
<text  x="882.52" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;Input::UiSource::Update()::{lambda(int)#1}&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (5 samples, 0.02%)</title><rect x="279.6" y="757" width="0.2" height="15.0" fill="rgb(229,179,41)" rx="2" ry="2" />
<text  x="282.55" y="767.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (4 samples, 0.02%)</title><rect x="692.2" y="565" width="0.2" height="15.0" fill="rgb(241,8,16)" rx="2" ry="2" />
<text  x="695.16" y="575.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (4 samples, 0.02%)</title><rect x="954.2" y="661" width="0.2" height="15.0" fill="rgb(214,101,17)" rx="2" ry="2" />
<text  x="957.20" y="671.5" ></text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt;, 36ul&gt; (5 samples, 0.02%)</title><rect x="280.3" y="853" width="0.2" height="15.0" fill="rgb(220,27,37)" rx="2" ry="2" />
<text  x="283.25" y="863.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (2 samples, 0.01%)</title><rect x="615.0" y="725" width="0.2" height="15.0" fill="rgb(253,121,52)" rx="2" ry="2" />
<text  x="618.04" y="735.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (105 samples, 0.52%)</title><rect x="207.0" y="917" width="6.1" height="15.0" fill="rgb(246,18,8)" rx="2" ry="2" />
<text  x="209.98" y="927.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (426 samples, 2.10%)</title><rect x="832.8" y="437" width="24.9" height="15.0" fill="rgb(214,37,12)" rx="2" ry="2" />
<text  x="835.83" y="447.5" >[..</text>
</g>
<g >
<title>__GI___clock_gettime (2 samples, 0.01%)</title><rect x="156.4" y="549" width="0.1" height="15.0" fill="rgb(250,214,49)" rx="2" ry="2" />
<text  x="159.38" y="559.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.01%)</title><rect x="138.8" y="405" width="0.1" height="15.0" fill="rgb(248,38,13)" rx="2" ry="2" />
<text  x="141.83" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (31 samples, 0.15%)</title><rect x="821.1" y="405" width="1.8" height="15.0" fill="rgb(238,94,46)" rx="2" ry="2" />
<text  x="824.05" y="415.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (12 samples, 0.06%)</title><rect x="212.4" y="517" width="0.7" height="15.0" fill="rgb(249,75,28)" rx="2" ry="2" />
<text  x="215.40" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (139 samples, 0.69%)</title><rect x="1087.5" y="725" width="8.1" height="15.0" fill="rgb(209,59,5)" rx="2" ry="2" />
<text  x="1090.52" y="735.5" ></text>
</g>
<g >
<title>std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;::_Mem_fn_base (8 samples, 0.04%)</title><rect x="734.5" y="661" width="0.5" height="15.0" fill="rgb(224,188,45)" rx="2" ry="2" />
<text  x="737.54" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (40 samples, 0.20%)</title><rect x="150.7" y="437" width="2.3" height="15.0" fill="rgb(236,162,5)" rx="2" ry="2" />
<text  x="153.66" y="447.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (7 samples, 0.03%)</title><rect x="1179.6" y="709" width="0.4" height="15.0" fill="rgb(251,187,50)" rx="2" ry="2" />
<text  x="1182.57" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (48 samples, 0.24%)</title><rect x="496.3" y="693" width="2.8" height="15.0" fill="rgb(249,1,40)" rx="2" ry="2" />
<text  x="499.29" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_Rb_tree_iterator (2 samples, 0.01%)</title><rect x="209.5" y="341" width="0.1" height="15.0" fill="rgb(251,136,32)" rx="2" ry="2" />
<text  x="212.48" y="351.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (9 samples, 0.04%)</title><rect x="1180.1" y="725" width="0.6" height="15.0" fill="rgb(232,56,3)" rx="2" ry="2" />
<text  x="1183.15" y="735.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (79 samples, 0.39%)</title><rect x="682.8" y="565" width="4.6" height="15.0" fill="rgb(249,169,11)" rx="2" ry="2" />
<text  x="685.84" y="575.5" ></text>
</g>
<g >
<title>std::map&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, (anonymous namespace)::CacheItem, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (470 samples, 2.32%)</title><rect x="788.5" y="469" width="27.4" height="15.0" fill="rgb(250,47,52)" rx="2" ry="2" />
<text  x="791.47" y="479.5" >s..</text>
</g>
<g >
<title>do_writev (2 samples, 0.01%)</title><rect x="279.4" y="613" width="0.1" height="15.0" fill="rgb(249,49,20)" rx="2" ry="2" />
<text  x="282.38" y="623.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (105 samples, 0.52%)</title><rect x="207.0" y="805" width="6.1" height="15.0" fill="rgb(253,110,40)" rx="2" ry="2" />
<text  x="209.98" y="815.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (14 samples, 0.07%)</title><rect x="1171.9" y="709" width="0.8" height="15.0" fill="rgb(206,227,36)" rx="2" ry="2" />
<text  x="1174.93" y="719.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (146 samples, 0.72%)</title><rect x="153.0" y="725" width="8.5" height="15.0" fill="rgb(254,41,6)" rx="2" ry="2" />
<text  x="156.00" y="735.5" ></text>
</g>
<g >
<title>Game_Map::Update (15,391 samples, 76.03%)</title><rect x="280.7" y="837" width="897.2" height="15.0" fill="rgb(237,20,14)" rx="2" ry="2" />
<text  x="283.66" y="847.5" >Game_Map::Update</text>
</g>
<g >
<title>variables (2 samples, 0.01%)</title><rect x="628.8" y="693" width="0.1" height="15.0" fill="rgb(230,25,37)" rx="2" ry="2" />
<text  x="631.80" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_value (2 samples, 0.01%)</title><rect x="781.7" y="405" width="0.1" height="15.0" fill="rgb(246,154,36)" rx="2" ry="2" />
<text  x="784.70" y="415.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (252 samples, 1.24%)</title><rect x="239.2" y="453" width="14.7" height="15.0" fill="rgb(211,176,30)" rx="2" ry="2" />
<text  x="242.21" y="463.5" ></text>
</g>
<g >
<title>Utils::GetRandomNumber (2 samples, 0.01%)</title><rect x="594.8" y="725" width="0.1" height="15.0" fill="rgb(213,9,34)" rx="2" ry="2" />
<text  x="597.75" y="735.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (68 samples, 0.34%)</title><rect x="203.0" y="869" width="4.0" height="15.0" fill="rgb(244,62,34)" rx="2" ry="2" />
<text  x="206.01" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (4 samples, 0.02%)</title><rect x="1130.1" y="773" width="0.3" height="15.0" fill="rgb(218,71,49)" rx="2" ry="2" />
<text  x="1133.13" y="783.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;int&gt;::operator= (2 samples, 0.01%)</title><rect x="610.1" y="709" width="0.2" height="15.0" fill="rgb(237,25,15)" rx="2" ry="2" />
<text  x="613.14" y="719.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (4 samples, 0.02%)</title><rect x="963.8" y="661" width="0.2" height="15.0" fill="rgb(223,108,9)" rx="2" ry="2" />
<text  x="966.82" y="671.5" ></text>
</g>
<g >
<title>__GI_madvise (9 samples, 0.04%)</title><rect x="206.4" y="277" width="0.5" height="15.0" fill="rgb(216,134,31)" rx="2" ry="2" />
<text  x="209.39" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (115 samples, 0.57%)</title><rect x="595.6" y="725" width="6.7" height="15.0" fill="rgb(230,148,9)" rx="2" ry="2" />
<text  x="598.63" y="735.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (440 samples, 2.17%)</title><rect x="161.5" y="789" width="25.7" height="15.0" fill="rgb(210,213,13)" rx="2" ry="2" />
<text  x="164.51" y="799.5" >s..</text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (79 samples, 0.39%)</title><rect x="142.0" y="613" width="4.6" height="15.0" fill="rgb(251,177,23)" rx="2" ry="2" />
<text  x="145.04" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.02%)</title><rect x="986.8" y="501" width="0.3" height="15.0" fill="rgb(253,105,2)" rx="2" ry="2" />
<text  x="989.78" y="511.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustShowParams (20 samples, 0.10%)</title><rect x="984.7" y="725" width="1.2" height="15.0" fill="rgb(240,23,45)" rx="2" ry="2" />
<text  x="987.74" y="735.5" ></text>
</g>
<g >
<title>easyrpg-player (20,005 samples, 98.83%)</title><rect x="23.8" y="997" width="1166.2" height="15.0" fill="rgb(241,70,17)" rx="2" ry="2" />
<text  x="26.82" y="1007.5" >easyrpg-player</text>
</g>
<g >
<title>__GI___pthread_getspecific (3 samples, 0.01%)</title><rect x="267.7" y="261" width="0.2" height="15.0" fill="rgb(214,69,5)" rx="2" ry="2" />
<text  x="270.72" y="271.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (17 samples, 0.08%)</title><rect x="131.0" y="693" width="1.0" height="15.0" fill="rgb(238,30,21)" rx="2" ry="2" />
<text  x="133.96" y="703.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::function (2 samples, 0.01%)</title><rect x="702.7" y="597" width="0.1" height="15.0" fill="rgb(235,193,29)" rx="2" ry="2" />
<text  x="705.72" y="607.5" ></text>
</g>
<g >
<title>std::_Bit_iterator::_Bit_iterator (2 samples, 0.01%)</title><rect x="283.9" y="741" width="0.1" height="15.0" fill="rgb(219,20,40)" rx="2" ry="2" />
<text  x="286.87" y="751.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (33 samples, 0.16%)</title><rect x="194.9" y="325" width="1.9" height="15.0" fill="rgb(211,33,5)" rx="2" ry="2" />
<text  x="197.85" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_destroy (11 samples, 0.05%)</title><rect x="986.4" y="645" width="0.7" height="15.0" fill="rgb(229,222,43)" rx="2" ry="2" />
<text  x="989.44" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::base (3 samples, 0.01%)</title><rect x="45.3" y="965" width="0.1" height="15.0" fill="rgb(231,155,49)" rx="2" ry="2" />
<text  x="48.27" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;int const&gt; (2 samples, 0.01%)</title><rect x="606.5" y="677" width="0.1" height="15.0" fill="rgb(223,31,6)" rx="2" ry="2" />
<text  x="609.53" y="687.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::operator= (11 samples, 0.05%)</title><rect x="85.6" y="965" width="0.6" height="15.0" fill="rgb(207,33,54)" rx="2" ry="2" />
<text  x="88.61" y="975.5" ></text>
</g>
<g >
<title>std::min&lt;int&gt; (64 samples, 0.32%)</title><rect x="583.8" y="709" width="3.7" height="15.0" fill="rgb(236,107,29)" rx="2" ry="2" />
<text  x="586.79" y="719.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (14 samples, 0.07%)</title><rect x="198.5" y="549" width="0.8" height="15.0" fill="rgb(247,181,4)" rx="2" ry="2" />
<text  x="201.47" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (72 samples, 0.36%)</title><rect x="157.3" y="517" width="4.2" height="15.0" fill="rgb(207,141,8)" rx="2" ry="2" />
<text  x="160.31" y="527.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (59 samples, 0.29%)</title><rect x="268.7" y="453" width="3.5" height="15.0" fill="rgb(218,113,16)" rx="2" ry="2" />
<text  x="271.71" y="463.5" ></text>
</g>
<g >
<title>Cache::Picture (1,176 samples, 5.81%)</title><rect x="755.8" y="485" width="68.6" height="15.0" fill="rgb(227,58,27)" rx="2" ry="2" />
<text  x="758.82" y="495.5" >Cache::..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::_M_ptr (6 samples, 0.03%)</title><rect x="999.2" y="693" width="0.4" height="15.0" fill="rgb(245,130,28)" rx="2" ry="2" />
<text  x="1002.20" y="703.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (5 samples, 0.02%)</title><rect x="127.6" y="965" width="0.3" height="15.0" fill="rgb(213,124,21)" rx="2" ry="2" />
<text  x="130.58" y="975.5" ></text>
</g>
<g >
<title>Game_Interpreter::SetupWait (2 samples, 0.01%)</title><rect x="31.6" y="965" width="0.1" height="15.0" fill="rgb(207,205,38)" rx="2" ry="2" />
<text  x="34.57" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_M_lower_bound (2 samples, 0.01%)</title><rect x="201.7" y="325" width="0.1" height="15.0" fill="rgb(232,2,51)" rx="2" ry="2" />
<text  x="204.73" y="335.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (63 samples, 0.31%)</title><rect x="203.3" y="485" width="3.7" height="15.0" fill="rgb(228,144,41)" rx="2" ry="2" />
<text  x="206.31" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (12 samples, 0.06%)</title><rect x="212.4" y="389" width="0.7" height="15.0" fill="rgb(205,174,50)" rx="2" ry="2" />
<text  x="215.40" y="399.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Transition*, false&gt;::_M_head (5 samples, 0.02%)</title><rect x="64.8" y="965" width="0.3" height="15.0" fill="rgb(248,223,43)" rx="2" ry="2" />
<text  x="67.80" y="975.5" ></text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;int&gt;, true&gt;::_Sp_ebo_helper (5 samples, 0.02%)</title><rect x="691.6" y="549" width="0.3" height="15.0" fill="rgb(237,41,30)" rx="2" ry="2" />
<text  x="694.58" y="559.5" ></text>
</g>
<g >
<title>unmap_region (34 samples, 0.17%)</title><rect x="204.2" y="181" width="2.0" height="15.0" fill="rgb(240,2,11)" rx="2" ry="2" />
<text  x="207.24" y="191.5" ></text>
</g>
<g >
<title>__gthread_active_p (3 samples, 0.01%)</title><rect x="882.7" y="373" width="0.1" height="15.0" fill="rgb(242,38,50)" rx="2" ry="2" />
<text  x="885.67" y="383.5" ></text>
</g>
<g >
<title>calloc (136 samples, 0.67%)</title><rect x="132.0" y="485" width="7.9" height="15.0" fill="rgb(211,154,13)" rx="2" ry="2" />
<text  x="134.95" y="495.5" ></text>
</g>
<g >
<title>pipe_read (3 samples, 0.01%)</title><rect x="22.5" y="869" width="0.2" height="15.0" fill="rgb(252,135,2)" rx="2" ry="2" />
<text  x="25.53" y="879.5" ></text>
</g>
<g >
<title>operator new (83 samples, 0.41%)</title><rect x="682.6" y="581" width="4.8" height="15.0" fill="rgb(240,9,54)" rx="2" ry="2" />
<text  x="685.60" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::operator (2 samples, 0.01%)</title><rect x="1144.5" y="805" width="0.1" height="15.0" fill="rgb(219,212,37)" rx="2" ry="2" />
<text  x="1147.53" y="815.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (45 samples, 0.22%)</title><rect x="731.0" y="565" width="2.7" height="15.0" fill="rgb(244,192,35)" rx="2" ry="2" />
<text  x="734.05" y="575.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::~__allocated_ptr (16 samples, 0.08%)</title><rect x="905.6" y="389" width="0.9" height="15.0" fill="rgb(232,224,37)" rx="2" ry="2" />
<text  x="908.58" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (3 samples, 0.01%)</title><rect x="126.8" y="965" width="0.2" height="15.0" fill="rgb(238,114,33)" rx="2" ry="2" />
<text  x="129.82" y="975.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::operator bool (13 samples, 0.06%)</title><rect x="736.5" y="661" width="0.8" height="15.0" fill="rgb(244,96,44)" rx="2" ry="2" />
<text  x="739.53" y="671.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (5 samples, 0.02%)</title><rect x="181.6" y="485" width="0.3" height="15.0" fill="rgb(225,130,50)" rx="2" ry="2" />
<text  x="184.56" y="495.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;int&gt;::shared_ptr&lt;std::allocator&lt;int&gt;, int&gt; (196 samples, 0.97%)</title><rect x="689.1" y="629" width="11.5" height="15.0" fill="rgb(239,32,16)" rx="2" ry="2" />
<text  x="692.13" y="639.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (2 samples, 0.01%)</title><rect x="92.5" y="965" width="0.2" height="15.0" fill="rgb(213,222,30)" rx="2" ry="2" />
<text  x="95.55" y="975.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator() (5 samples, 0.02%)</title><rect x="670.1" y="613" width="0.3" height="15.0" fill="rgb(227,37,3)" rx="2" ry="2" />
<text  x="673.07" y="623.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (59 samples, 0.29%)</title><rect x="268.7" y="725" width="3.5" height="15.0" fill="rgb(245,35,39)" rx="2" ry="2" />
<text  x="271.71" y="735.5" ></text>
</g>
<g >
<title>Sprite::SetAngle (2 samples, 0.01%)</title><rect x="38.2" y="965" width="0.1" height="15.0" fill="rgb(211,85,45)" rx="2" ry="2" />
<text  x="41.16" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (7 samples, 0.03%)</title><rect x="937.5" y="469" width="0.4" height="15.0" fill="rgb(236,16,18)" rx="2" ry="2" />
<text  x="940.53" y="479.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (2 samples, 0.01%)</title><rect x="876.0" y="437" width="0.1" height="15.0" fill="rgb(248,44,18)" rx="2" ry="2" />
<text  x="879.03" y="447.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::get (14 samples, 0.07%)</title><rect x="888.2" y="437" width="0.8" height="15.0" fill="rgb(243,10,11)" rx="2" ry="2" />
<text  x="891.21" y="447.5" ></text>
</g>
<g >
<title>put_timespec64 (13 samples, 0.06%)</title><rect x="229.0" y="453" width="0.7" height="15.0" fill="rgb(244,48,10)" rx="2" ry="2" />
<text  x="231.95" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (6 samples, 0.03%)</title><rect x="816.0" y="453" width="0.3" height="15.0" fill="rgb(205,91,32)" rx="2" ry="2" />
<text  x="818.98" y="463.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (354 samples, 1.75%)</title><rect x="213.1" y="933" width="20.6" height="15.0" fill="rgb(252,152,21)" rx="2" ry="2" />
<text  x="216.10" y="943.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (86 samples, 0.42%)</title><rect x="198.0" y="741" width="5.0" height="15.0" fill="rgb(220,72,14)" rx="2" ry="2" />
<text  x="201.00" y="751.5" ></text>
</g>
<g >
<title>__GI___nanosleep (20 samples, 0.10%)</title><rect x="1181.0" y="789" width="1.1" height="15.0" fill="rgb(216,171,52)" rx="2" ry="2" />
<text  x="1183.96" y="799.5" ></text>
</g>
<g >
<title>default_wake_function (8 samples, 0.04%)</title><rect x="23.1" y="821" width="0.4" height="15.0" fill="rgb(228,212,18)" rx="2" ry="2" />
<text  x="26.06" y="831.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (440 samples, 2.17%)</title><rect x="161.5" y="645" width="25.7" height="15.0" fill="rgb(224,187,40)" rx="2" ry="2" />
<text  x="164.51" y="655.5" >G..</text>
</g>
<g >
<title>Game_Interpreter::ValueOrVariable (2 samples, 0.01%)</title><rect x="31.9" y="965" width="0.1" height="15.0" fill="rgb(215,44,36)" rx="2" ry="2" />
<text  x="34.86" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (18 samples, 0.09%)</title><rect x="118.8" y="965" width="1.1" height="15.0" fill="rgb(207,4,51)" rx="2" ry="2" />
<text  x="121.84" y="975.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (8 samples, 0.04%)</title><rect x="253.4" y="437" width="0.5" height="15.0" fill="rgb(239,196,44)" rx="2" ry="2" />
<text  x="256.44" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (5 samples, 0.02%)</title><rect x="497.0" y="677" width="0.3" height="15.0" fill="rgb(245,191,20)" rx="2" ry="2" />
<text  x="499.99" y="687.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::~_Sp_counted_ptr_inplace (3 samples, 0.01%)</title><rect x="72.3" y="965" width="0.2" height="15.0" fill="rgb(239,194,10)" rx="2" ry="2" />
<text  x="75.32" y="975.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipToNextConditional (3 samples, 0.01%)</title><rect x="31.7" y="965" width="0.2" height="15.0" fill="rgb(240,62,14)" rx="2" ry="2" />
<text  x="34.69" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (3 samples, 0.01%)</title><rect x="957.8" y="661" width="0.1" height="15.0" fill="rgb(217,124,14)" rx="2" ry="2" />
<text  x="960.75" y="671.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator bool (8 samples, 0.04%)</title><rect x="109.6" y="965" width="0.4" height="15.0" fill="rgb(232,189,31)" rx="2" ry="2" />
<text  x="112.57" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (10 samples, 0.05%)</title><rect x="287.2" y="757" width="0.6" height="15.0" fill="rgb(237,56,5)" rx="2" ry="2" />
<text  x="290.25" y="767.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;int&gt;, int&gt; (190 samples, 0.94%)</title><rect x="689.5" y="613" width="11.1" height="15.0" fill="rgb(233,83,51)" rx="2" ry="2" />
<text  x="692.48" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt;::base (11 samples, 0.05%)</title><rect x="1113.2" y="741" width="0.6" height="15.0" fill="rgb(207,95,38)" rx="2" ry="2" />
<text  x="1116.17" y="751.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (68 samples, 0.34%)</title><rect x="203.0" y="565" width="4.0" height="15.0" fill="rgb(229,83,35)" rx="2" ry="2" />
<text  x="206.01" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (132 samples, 0.65%)</title><rect x="16.0" y="981" width="7.7" height="15.0" fill="rgb(224,144,37)" rx="2" ry="2" />
<text  x="19.00" y="991.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (2 samples, 0.01%)</title><rect x="1152.3" y="773" width="0.1" height="15.0" fill="rgb(221,101,27)" rx="2" ry="2" />
<text  x="1155.28" y="783.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (42 samples, 0.21%)</title><rect x="136.3" y="421" width="2.5" height="15.0" fill="rgb(208,1,47)" rx="2" ry="2" />
<text  x="139.32" y="431.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.01%)</title><rect x="199.2" y="501" width="0.1" height="15.0" fill="rgb(212,229,3)" rx="2" ry="2" />
<text  x="202.17" y="511.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;*&gt; (3 samples, 0.01%)</title><rect x="919.0" y="309" width="0.2" height="15.0" fill="rgb(210,206,12)" rx="2" ry="2" />
<text  x="922.05" y="319.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (9 samples, 0.04%)</title><rect x="87.4" y="965" width="0.5" height="15.0" fill="rgb(244,16,35)" rx="2" ry="2" />
<text  x="90.42" y="975.5" ></text>
</g>
<g >
<title>dequeue_task_fair (2 samples, 0.01%)</title><rect x="17.5" y="821" width="0.1" height="15.0" fill="rgb(251,149,2)" rx="2" ry="2" />
<text  x="20.46" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="1003.3" y="693" width="0.2" height="15.0" fill="rgb(230,114,54)" rx="2" ry="2" />
<text  x="1006.34" y="703.5" ></text>
</g>
<g >
<title>Rect::Rect (5 samples, 0.02%)</title><rect x="878.7" y="469" width="0.3" height="15.0" fill="rgb(207,88,37)" rx="2" ry="2" />
<text  x="881.71" y="479.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.01%)</title><rect x="268.1" y="293" width="0.1" height="15.0" fill="rgb(228,183,50)" rx="2" ry="2" />
<text  x="271.13" y="303.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (2 samples, 0.01%)</title><rect x="27.4" y="965" width="0.1" height="15.0" fill="rgb(246,205,20)" rx="2" ry="2" />
<text  x="30.37" y="975.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (170 samples, 0.84%)</title><rect x="132.0" y="773" width="9.9" height="15.0" fill="rgb(206,27,2)" rx="2" ry="2" />
<text  x="134.95" y="783.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (8 samples, 0.04%)</title><rect x="57.7" y="965" width="0.5" height="15.0" fill="rgb(209,195,20)" rx="2" ry="2" />
<text  x="60.69" y="975.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;*, std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; (3 samples, 0.01%)</title><rect x="919.0" y="325" width="0.2" height="15.0" fill="rgb(206,148,48)" rx="2" ry="2" />
<text  x="922.05" y="335.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (806 samples, 3.98%)</title><rect x="1055.4" y="757" width="47.0" height="15.0" fill="rgb(235,91,40)" rx="2" ry="2" />
<text  x="1058.40" y="767.5" >Game..</text>
</g>
<g >
<title>Player::Update (500 samples, 2.47%)</title><rect x="239.1" y="885" width="29.1" height="15.0" fill="rgb(247,95,40)" rx="2" ry="2" />
<text  x="242.10" y="895.5" >Pl..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (65 samples, 0.32%)</title><rect x="135.2" y="437" width="3.8" height="15.0" fill="rgb(221,148,46)" rx="2" ry="2" />
<text  x="138.22" y="447.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (146 samples, 0.72%)</title><rect x="153.0" y="693" width="8.5" height="15.0" fill="rgb(223,132,51)" rx="2" ry="2" />
<text  x="156.00" y="703.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (5 samples, 0.02%)</title><rect x="65.7" y="965" width="0.3" height="15.0" fill="rgb(219,137,32)" rx="2" ry="2" />
<text  x="68.73" y="975.5" ></text>
</g>
<g >
<title>__do_page_fault (4 samples, 0.02%)</title><rect x="139.6" y="405" width="0.3" height="15.0" fill="rgb(236,138,41)" rx="2" ry="2" />
<text  x="142.65" y="415.5" ></text>
</g>
<g >
<title>Sprite::SetFlashEffect (5 samples, 0.02%)</title><rect x="1163.1" y="757" width="0.3" height="15.0" fill="rgb(228,181,44)" rx="2" ry="2" />
<text  x="1166.13" y="767.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 3ul, 3ul&gt;::__less (4 samples, 0.02%)</title><rect x="88.5" y="965" width="0.3" height="15.0" fill="rgb(214,113,20)" rx="2" ry="2" />
<text  x="91.52" y="975.5" ></text>
</g>
<g >
<title>std::min&lt;int&gt; (2 samples, 0.01%)</title><rect x="595.2" y="725" width="0.1" height="15.0" fill="rgb(205,205,29)" rx="2" ry="2" />
<text  x="598.16" y="735.5" ></text>
</g>
<g >
<title>min&lt;int&gt; (7 samples, 0.03%)</title><rect x="886.9" y="453" width="0.4" height="15.0" fill="rgb(227,81,27)" rx="2" ry="2" />
<text  x="889.93" y="463.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (26 samples, 0.13%)</title><rect x="663.4" y="645" width="1.5" height="15.0" fill="rgb(231,195,34)" rx="2" ry="2" />
<text  x="666.42" y="655.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (2 samples, 0.01%)</title><rect x="42.8" y="965" width="0.1" height="15.0" fill="rgb(246,200,51)" rx="2" ry="2" />
<text  x="45.76" y="975.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (9 samples, 0.04%)</title><rect x="921.1" y="453" width="0.5" height="15.0" fill="rgb(227,18,28)" rx="2" ry="2" />
<text  x="924.09" y="463.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (38 samples, 0.19%)</title><rect x="247.7" y="325" width="2.2" height="15.0" fill="rgb(218,30,35)" rx="2" ry="2" />
<text  x="250.73" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_Rb_tree_iterator (5 samples, 0.02%)</title><rect x="69.9" y="965" width="0.3" height="15.0" fill="rgb(226,134,12)" rx="2" ry="2" />
<text  x="72.93" y="975.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="161.5" y="485" width="0.2" height="15.0" fill="rgb(249,172,10)" rx="2" ry="2" />
<text  x="164.51" y="495.5" ></text>
</g>
<g >
<title>Sprite::SetZoomY (2 samples, 0.01%)</title><rect x="885.7" y="469" width="0.1" height="15.0" fill="rgb(222,114,48)" rx="2" ry="2" />
<text  x="888.70" y="479.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_clone (90 samples, 0.44%)</title><rect x="682.4" y="597" width="5.2" height="15.0" fill="rgb(239,197,23)" rx="2" ry="2" />
<text  x="685.37" y="607.5" ></text>
</g>
<g >
<title>Blend (23 samples, 0.11%)</title><rect x="1158.9" y="773" width="1.3" height="15.0" fill="rgb(240,58,16)" rx="2" ry="2" />
<text  x="1161.87" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (12 samples, 0.06%)</title><rect x="515.6" y="709" width="0.7" height="15.0" fill="rgb(241,41,22)" rx="2" ry="2" />
<text  x="518.59" y="719.5" ></text>
</g>
<g >
<title>Sprite::SetY (3 samples, 0.01%)</title><rect x="1165.3" y="773" width="0.2" height="15.0" fill="rgb(215,147,44)" rx="2" ry="2" />
<text  x="1168.34" y="783.5" ></text>
</g>
<g >
<title>Input::UiSource::Update (6 samples, 0.03%)</title><rect x="279.5" y="853" width="0.3" height="15.0" fill="rgb(250,13,47)" rx="2" ry="2" />
<text  x="282.50" y="863.5" ></text>
</g>
<g >
<title>__vm_munmap (36 samples, 0.18%)</title><rect x="204.1" y="213" width="2.1" height="15.0" fill="rgb(215,0,40)" rx="2" ry="2" />
<text  x="207.12" y="223.5" ></text>
</g>
<g >
<title>Sprite::SetZ (23 samples, 0.11%)</title><rect x="1165.5" y="773" width="1.4" height="15.0" fill="rgb(215,157,43)" rx="2" ry="2" />
<text  x="1168.52" y="783.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (62 samples, 0.31%)</title><rect x="866.0" y="325" width="3.6" height="15.0" fill="rgb(208,27,10)" rx="2" ry="2" />
<text  x="869.00" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocator&lt;Bitmap&gt; (2 samples, 0.01%)</title><rect x="870.8" y="373" width="0.1" height="15.0" fill="rgb(243,24,37)" rx="2" ry="2" />
<text  x="873.78" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator bool (6 samples, 0.03%)</title><rect x="893.1" y="469" width="0.4" height="15.0" fill="rgb(223,111,8)" rx="2" ry="2" />
<text  x="896.11" y="479.5" ></text>
</g>
<g >
<title>__libc_recvmsg (5 samples, 0.02%)</title><rect x="1179.6" y="661" width="0.3" height="15.0" fill="rgb(252,138,27)" rx="2" ry="2" />
<text  x="1182.62" y="671.5" ></text>
</g>
<g >
<title>Game_Map::Update (354 samples, 1.75%)</title><rect x="213.1" y="949" width="20.6" height="15.0" fill="rgb(221,113,11)" rx="2" ry="2" />
<text  x="216.10" y="959.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (27 samples, 0.13%)</title><rect x="920.0" y="469" width="1.6" height="15.0" fill="rgb(247,64,3)" rx="2" ry="2" />
<text  x="923.04" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (125 samples, 0.62%)</title><rect x="1042.4" y="709" width="7.3" height="15.0" fill="rgb(223,110,15)" rx="2" ry="2" />
<text  x="1045.40" y="719.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (53 samples, 0.26%)</title><rect x="745.7" y="597" width="3.1" height="15.0" fill="rgb(226,184,29)" rx="2" ry="2" />
<text  x="748.74" y="607.5" ></text>
</g>
<g >
<title>Player::MainLoop (500 samples, 2.47%)</title><rect x="239.1" y="917" width="29.1" height="15.0" fill="rgb(253,81,17)" rx="2" ry="2" />
<text  x="242.10" y="927.5" >Pl..</text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_M_head (4 samples, 0.02%)</title><rect x="66.0" y="965" width="0.3" height="15.0" fill="rgb(248,216,42)" rx="2" ry="2" />
<text  x="69.02" y="975.5" ></text>
</g>
<g >
<title>std::_Bit_iterator_base::_Bit_iterator_base (2 samples, 0.01%)</title><rect x="285.6" y="709" width="0.1" height="15.0" fill="rgb(246,48,28)" rx="2" ry="2" />
<text  x="288.56" y="719.5" ></text>
</g>
<g >
<title>Sprite::SetOpacity (4 samples, 0.02%)</title><rect x="966.8" y="693" width="0.3" height="15.0" fill="rgb(244,152,38)" rx="2" ry="2" />
<text  x="969.85" y="703.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Set (507 samples, 2.50%)</title><rect x="564.4" y="725" width="29.6" height="15.0" fill="rgb(209,207,0)" rx="2" ry="2" />
<text  x="567.44" y="735.5" >Ga..</text>
</g>
<g >
<title>__perf_event_task_sched_in (8 samples, 0.04%)</title><rect x="1180.2" y="437" width="0.5" height="15.0" fill="rgb(233,201,25)" rx="2" ry="2" />
<text  x="1183.21" y="447.5" ></text>
</g>
<g >
<title>Scene_Map::Update (68 samples, 0.34%)</title><rect x="203.0" y="933" width="4.0" height="15.0" fill="rgb(234,156,25)" rx="2" ry="2" />
<text  x="206.01" y="943.5" ></text>
</g>
<g >
<title>Bitmap::GetWidth (44 samples, 0.22%)</title><rect x="1156.3" y="773" width="2.6" height="15.0" fill="rgb(250,43,13)" rx="2" ry="2" />
<text  x="1159.31" y="783.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (22 samples, 0.11%)</title><rect x="855.5" y="421" width="1.3" height="15.0" fill="rgb(230,62,51)" rx="2" ry="2" />
<text  x="858.51" y="431.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (18 samples, 0.09%)</title><rect x="232.7" y="549" width="1.0" height="15.0" fill="rgb(206,180,26)" rx="2" ry="2" />
<text  x="235.69" y="559.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (2,988 samples, 14.76%)</title><rect x="750.3" y="629" width="174.2" height="15.0" fill="rgb(231,82,7)" rx="2" ry="2" />
<text  x="753.28" y="639.5" >std::_Function_handler..</text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (4 samples, 0.02%)</title><rect x="969.8" y="629" width="0.2" height="15.0" fill="rgb(245,104,27)" rx="2" ry="2" />
<text  x="972.76" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (11 samples, 0.05%)</title><rect x="613.3" y="709" width="0.6" height="15.0" fill="rgb(230,214,50)" rx="2" ry="2" />
<text  x="616.29" y="719.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (498 samples, 2.46%)</title><rect x="239.2" y="597" width="29.0" height="15.0" fill="rgb(216,136,22)" rx="2" ry="2" />
<text  x="242.21" y="607.5" >st..</text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (3 samples, 0.01%)</title><rect x="517.7" y="725" width="0.2" height="15.0" fill="rgb(243,113,32)" rx="2" ry="2" />
<text  x="520.75" y="735.5" ></text>
</g>
<g >
<title>schedule (8 samples, 0.04%)</title><rect x="1180.2" y="485" width="0.5" height="15.0" fill="rgb(243,37,20)" rx="2" ry="2" />
<text  x="1183.21" y="495.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::operator= (2 samples, 0.01%)</title><rect x="699.9" y="581" width="0.1" height="15.0" fill="rgb(243,9,48)" rx="2" ry="2" />
<text  x="702.92" y="591.5" ></text>
</g>
<g >
<title>Game_Picture::Move (11 samples, 0.05%)</title><rect x="616.3" y="725" width="0.7" height="15.0" fill="rgb(242,44,8)" rx="2" ry="2" />
<text  x="619.32" y="735.5" ></text>
</g>
<g >
<title>operator new (74 samples, 0.37%)</title><rect x="638.9" y="613" width="4.4" height="15.0" fill="rgb(237,116,32)" rx="2" ry="2" />
<text  x="641.94" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="130.3" y="981" width="0.1" height="15.0" fill="rgb(240,13,51)" rx="2" ry="2" />
<text  x="133.26" y="991.5" ></text>
</g>
<g >
<title>Game_Picture::ShowParams::~ShowParams (62 samples, 0.31%)</title><rect x="980.0" y="725" width="3.6" height="15.0" fill="rgb(233,216,45)" rx="2" ry="2" />
<text  x="982.96" y="735.5" ></text>
</g>
<g >
<title>std::move&lt;void (*&amp;)(std::_Any_data const&amp;, FileRequestResult*&amp;&amp;)&gt; (2 samples, 0.01%)</title><rect x="104.7" y="965" width="0.1" height="15.0" fill="rgb(239,185,48)" rx="2" ry="2" />
<text  x="107.73" y="975.5" ></text>
</g>
<g >
<title>x86_pmu_enable (63 samples, 0.31%)</title><rect x="17.8" y="789" width="3.7" height="15.0" fill="rgb(210,4,38)" rx="2" ry="2" />
<text  x="20.81" y="799.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (53 samples, 0.26%)</title><rect x="146.9" y="421" width="3.1" height="15.0" fill="rgb(237,54,43)" rx="2" ry="2" />
<text  x="149.93" y="431.5" ></text>
</g>
<g >
<title>operator delete (10 samples, 0.05%)</title><rect x="986.5" y="597" width="0.6" height="15.0" fill="rgb(223,151,40)" rx="2" ry="2" />
<text  x="989.49" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (4 samples, 0.02%)</title><rect x="1003.7" y="693" width="0.2" height="15.0" fill="rgb(230,94,6)" rx="2" ry="2" />
<text  x="1006.69" y="703.5" ></text>
</g>
<g >
<title>operator new (113 samples, 0.56%)</title><rect x="175.3" y="533" width="6.6" height="15.0" fill="rgb(227,194,9)" rx="2" ry="2" />
<text  x="178.27" y="543.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (14 samples, 0.07%)</title><rect x="747.9" y="565" width="0.8" height="15.0" fill="rgb(233,90,39)" rx="2" ry="2" />
<text  x="750.89" y="575.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="988.0" y="693" width="0.1" height="15.0" fill="rgb(242,141,5)" rx="2" ry="2" />
<text  x="990.95" y="703.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (500 samples, 2.47%)</title><rect x="239.1" y="821" width="29.1" height="15.0" fill="rgb(213,107,40)" rx="2" ry="2" />
<text  x="242.10" y="831.5" >Ga..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="1183.6" y="965" width="0.2" height="15.0" fill="rgb(237,170,8)" rx="2" ry="2" />
<text  x="1186.65" y="975.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (117 samples, 0.58%)</title><rect x="187.2" y="597" width="6.8" height="15.0" fill="rgb(234,68,36)" rx="2" ry="2" />
<text  x="190.22" y="607.5" ></text>
</g>
<g >
<title>std::forward&lt;std::function&lt;void (FileRequestResult*)&gt;&amp;&gt; (5 samples, 0.02%)</title><rect x="96.8" y="965" width="0.3" height="15.0" fill="rgb(251,79,39)" rx="2" ry="2" />
<text  x="99.80" y="975.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;*&gt; (3 samples, 0.01%)</title><rect x="687.4" y="581" width="0.2" height="15.0" fill="rgb(231,132,26)" rx="2" ry="2" />
<text  x="690.44" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (24 samples, 0.12%)</title><rect x="589.8" y="709" width="1.4" height="15.0" fill="rgb(225,208,7)" rx="2" ry="2" />
<text  x="592.80" y="719.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (4 samples, 0.02%)</title><rect x="1142.7" y="725" width="0.3" height="15.0" fill="rgb(227,29,39)" rx="2" ry="2" />
<text  x="1145.72" y="735.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::_M_head (4 samples, 0.02%)</title><rect x="1142.7" y="709" width="0.3" height="15.0" fill="rgb(218,99,10)" rx="2" ry="2" />
<text  x="1145.72" y="719.5" ></text>
</g>
<g >
<title>native_write_msr (15 samples, 0.07%)</title><rect x="1181.1" y="565" width="0.9" height="15.0" fill="rgb(225,185,9)" rx="2" ry="2" />
<text  x="1184.08" y="575.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (57 samples, 0.28%)</title><rect x="209.1" y="453" width="3.3" height="15.0" fill="rgb(247,125,7)" rx="2" ry="2" />
<text  x="212.08" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (17 samples, 0.08%)</title><rect x="131.0" y="501" width="1.0" height="15.0" fill="rgb(250,57,14)" rx="2" ry="2" />
<text  x="133.96" y="511.5" ></text>
</g>
<g >
<title>std::_Mu&lt;std::_Placeholder&lt;1&gt;, false, true&gt;::operator()&lt;std::tuple&lt;FileRequestResult*&amp;&amp;&gt; &gt; (16 samples, 0.08%)</title><rect x="752.0" y="581" width="0.9" height="15.0" fill="rgb(218,152,28)" rx="2" ry="2" />
<text  x="754.97" y="591.5" ></text>
</g>
<g >
<title>Color::Color (5 samples, 0.02%)</title><rect x="1160.2" y="773" width="0.3" height="15.0" fill="rgb(219,223,2)" rx="2" ry="2" />
<text  x="1163.21" y="783.5" ></text>
</g>
<g >
<title>Tone::Tone (6 samples, 0.03%)</title><rect x="1162.6" y="757" width="0.4" height="15.0" fill="rgb(213,164,13)" rx="2" ry="2" />
<text  x="1165.60" y="767.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (105 samples, 0.52%)</title><rect x="207.0" y="693" width="6.1" height="15.0" fill="rgb(205,42,29)" rx="2" ry="2" />
<text  x="209.98" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (30 samples, 0.15%)</title><rect x="1018.0" y="693" width="1.7" height="15.0" fill="rgb(220,91,8)" rx="2" ry="2" />
<text  x="1020.97" y="703.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (105 samples, 0.52%)</title><rect x="207.0" y="613" width="6.1" height="15.0" fill="rgb(218,115,40)" rx="2" ry="2" />
<text  x="209.98" y="623.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, true&gt; (6 samples, 0.03%)</title><rect x="107.8" y="965" width="0.4" height="15.0" fill="rgb(240,167,4)" rx="2" ry="2" />
<text  x="110.82" y="975.5" ></text>
</g>
<g >
<title>Sprite_Character::Update (3 samples, 0.01%)</title><rect x="1178.5" y="821" width="0.1" height="15.0" fill="rgb(237,189,30)" rx="2" ry="2" />
<text  x="1181.46" y="831.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;int, std::allocator&lt;int&gt;, int&gt; (4 samples, 0.02%)</title><rect x="82.6" y="965" width="0.2" height="15.0" fill="rgb(221,162,6)" rx="2" ry="2" />
<text  x="85.58" y="975.5" ></text>
</g>
<g >
<title>pixman_region32_fini (4 samples, 0.02%)</title><rect x="915.9" y="309" width="0.2" height="15.0" fill="rgb(249,206,41)" rx="2" ry="2" />
<text  x="918.90" y="319.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (207 samples, 1.02%)</title><rect x="925.9" y="565" width="12.0" height="15.0" fill="rgb(235,138,19)" rx="2" ry="2" />
<text  x="928.87" y="575.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="130.1" y="965" width="0.2" height="15.0" fill="rgb(254,35,2)" rx="2" ry="2" />
<text  x="133.15" y="975.5" ></text>
</g>
<g >
<title>Game_Interpreter::IsRunning (12 samples, 0.06%)</title><rect x="420.8" y="773" width="0.7" height="15.0" fill="rgb(219,35,22)" rx="2" ry="2" />
<text  x="423.80" y="783.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, true&gt; (72 samples, 0.36%)</title><rect x="819.5" y="469" width="4.2" height="15.0" fill="rgb(233,59,46)" rx="2" ry="2" />
<text  x="822.48" y="479.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::function&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;, void, void&gt; (173 samples, 0.85%)</title><rect x="715.6" y="677" width="10.1" height="15.0" fill="rgb(218,43,22)" rx="2" ry="2" />
<text  x="718.60" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="130.3" y="965" width="0.1" height="15.0" fill="rgb(251,219,21)" rx="2" ry="2" />
<text  x="133.26" y="975.5" ></text>
</g>
<g >
<title>native_write_msr (7 samples, 0.03%)</title><rect x="1180.3" y="357" width="0.4" height="15.0" fill="rgb(246,121,31)" rx="2" ry="2" />
<text  x="1183.26" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator (3 samples, 0.01%)</title><rect x="665.8" y="677" width="0.2" height="15.0" fill="rgb(216,72,48)" rx="2" ry="2" />
<text  x="668.81" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (10 samples, 0.05%)</title><rect x="1177.0" y="789" width="0.6" height="15.0" fill="rgb(232,211,14)" rx="2" ry="2" />
<text  x="1180.00" y="799.5" ></text>
</g>
<g >
<title>XFlush (11 samples, 0.05%)</title><rect x="1179.4" y="773" width="0.6" height="15.0" fill="rgb(251,52,26)" rx="2" ry="2" />
<text  x="1182.39" y="783.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (3 samples, 0.01%)</title><rect x="206.6" y="165" width="0.2" height="15.0" fill="rgb(228,158,40)" rx="2" ry="2" />
<text  x="209.63" y="175.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (6 samples, 0.03%)</title><rect x="963.1" y="677" width="0.4" height="15.0" fill="rgb(211,109,20)" rx="2" ry="2" />
<text  x="966.12" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;Bitmap&gt;::_M_ptr (5 samples, 0.02%)</title><rect x="863.6" y="357" width="0.2" height="15.0" fill="rgb(231,47,27)" rx="2" ry="2" />
<text  x="866.55" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Transition*, std::default_delete&lt;Transition&gt; &gt;::_M_head (3 samples, 0.01%)</title><rect x="74.9" y="965" width="0.2" height="15.0" fill="rgb(254,215,4)" rx="2" ry="2" />
<text  x="77.94" y="975.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (32 samples, 0.16%)</title><rect x="270.3" y="293" width="1.9" height="15.0" fill="rgb(247,74,24)" rx="2" ry="2" />
<text  x="273.29" y="303.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (50 samples, 0.25%)</title><rect x="820.6" y="437" width="2.9" height="15.0" fill="rgb(249,158,37)" rx="2" ry="2" />
<text  x="823.59" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (68 samples, 0.34%)</title><rect x="416.4" y="725" width="4.0" height="15.0" fill="rgb(226,57,21)" rx="2" ry="2" />
<text  x="419.43" y="735.5" ></text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (10 samples, 0.05%)</title><rect x="963.5" y="693" width="0.5" height="15.0" fill="rgb(238,129,3)" rx="2" ry="2" />
<text  x="966.47" y="703.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (2 samples, 0.01%)</title><rect x="733.7" y="581" width="0.1" height="15.0" fill="rgb(251,70,21)" rx="2" ry="2" />
<text  x="736.73" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (81 samples, 0.40%)</title><rect x="772.4" y="421" width="4.8" height="15.0" fill="rgb(234,2,1)" rx="2" ry="2" />
<text  x="775.44" y="431.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="763.2" y="405" width="0.1" height="15.0" fill="rgb(213,212,41)" rx="2" ry="2" />
<text  x="766.17" y="415.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (55 samples, 0.27%)</title><rect x="812.6" y="405" width="3.2" height="15.0" fill="rgb(243,223,40)" rx="2" ry="2" />
<text  x="815.60" y="415.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (10 samples, 0.05%)</title><rect x="156.7" y="549" width="0.6" height="15.0" fill="rgb(242,229,11)" rx="2" ry="2" />
<text  x="159.73" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (13 samples, 0.06%)</title><rect x="903.2" y="389" width="0.8" height="15.0" fill="rgb(237,200,32)" rx="2" ry="2" />
<text  x="906.25" y="399.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator() (24 samples, 0.12%)</title><rect x="210.8" y="325" width="1.4" height="15.0" fill="rgb(230,100,43)" rx="2" ry="2" />
<text  x="213.77" y="335.5" ></text>
</g>
<g >
<title>operator new (57 samples, 0.28%)</title><rect x="745.5" y="613" width="3.3" height="15.0" fill="rgb(205,162,53)" rx="2" ry="2" />
<text  x="748.50" y="623.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (2 samples, 0.01%)</title><rect x="972.7" y="629" width="0.2" height="15.0" fill="rgb(249,197,52)" rx="2" ry="2" />
<text  x="975.74" y="639.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (11,724 samples, 57.92%)</title><rect x="421.7" y="773" width="683.5" height="15.0" fill="rgb(219,145,2)" rx="2" ry="2" />
<text  x="424.74" y="783.5" >Game_Interpreter_Map::ExecuteCommand</text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (194 samples, 0.96%)</title><rect x="256.9" y="437" width="11.3" height="15.0" fill="rgb(213,133,25)" rx="2" ry="2" />
<text  x="259.94" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (4 samples, 0.02%)</title><rect x="161.5" y="565" width="0.2" height="15.0" fill="rgb(252,152,45)" rx="2" ry="2" />
<text  x="164.51" y="575.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (146 samples, 0.72%)</title><rect x="153.0" y="837" width="8.5" height="15.0" fill="rgb(239,59,43)" rx="2" ry="2" />
<text  x="156.00" y="847.5" ></text>
</g>
<g >
<title>Sprite::SetZoomX (5 samples, 0.02%)</title><rect x="885.4" y="469" width="0.3" height="15.0" fill="rgb(223,18,22)" rx="2" ry="2" />
<text  x="888.41" y="479.5" ></text>
</g>
<g >
<title>std::mem_fn&lt;void (FileRequestResult*), Game_Picture&gt; (14 samples, 0.07%)</title><rect x="734.2" y="677" width="0.8" height="15.0" fill="rgb(233,165,23)" rx="2" ry="2" />
<text  x="737.19" y="687.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (53 samples, 0.26%)</title><rect x="880.3" y="469" width="3.1" height="15.0" fill="rgb(222,116,28)" rx="2" ry="2" />
<text  x="883.34" y="479.5" ></text>
</g>
<g >
<title>TilemapLayer::Draw (2 samples, 0.01%)</title><rect x="278.9" y="805" width="0.1" height="15.0" fill="rgb(233,214,45)" rx="2" ry="2" />
<text  x="281.85" y="815.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (10 samples, 0.05%)</title><rect x="813.0" y="357" width="0.6" height="15.0" fill="rgb(229,6,51)" rx="2" ry="2" />
<text  x="816.01" y="367.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (8 samples, 0.04%)</title><rect x="1180.2" y="501" width="0.5" height="15.0" fill="rgb(217,215,3)" rx="2" ry="2" />
<text  x="1183.21" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (5 samples, 0.02%)</title><rect x="820.2" y="421" width="0.3" height="15.0" fill="rgb(223,229,47)" rx="2" ry="2" />
<text  x="823.18" y="431.5" ></text>
</g>
<g >
<title>std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;::~pair (3 samples, 0.01%)</title><rect x="106.1" y="965" width="0.1" height="15.0" fill="rgb(254,143,44)" rx="2" ry="2" />
<text  x="109.07" y="975.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (3 samples, 0.01%)</title><rect x="263.6" y="277" width="0.2" height="15.0" fill="rgb(212,94,42)" rx="2" ry="2" />
<text  x="266.58" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt; &gt; &gt;::size (2 samples, 0.01%)</title><rect x="984.6" y="709" width="0.1" height="15.0" fill="rgb(247,155,27)" rx="2" ry="2" />
<text  x="987.57" y="719.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (86 samples, 0.42%)</title><rect x="198.0" y="725" width="5.0" height="15.0" fill="rgb(219,197,15)" rx="2" ry="2" />
<text  x="201.00" y="735.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (68 samples, 0.34%)</title><rect x="194.0" y="821" width="4.0" height="15.0" fill="rgb(234,0,22)" rx="2" ry="2" />
<text  x="197.04" y="831.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (115 samples, 0.57%)</title><rect x="1071.6" y="725" width="6.7" height="15.0" fill="rgb(224,175,54)" rx="2" ry="2" />
<text  x="1074.60" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (4 samples, 0.02%)</title><rect x="1151.1" y="741" width="0.2" height="15.0" fill="rgb(254,211,3)" rx="2" ry="2" />
<text  x="1154.06" y="751.5" ></text>
</g>
<g >
<title>new_sync_write (2 samples, 0.01%)</title><rect x="23.5" y="885" width="0.1" height="15.0" fill="rgb(217,183,42)" rx="2" ry="2" />
<text  x="26.52" y="895.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (33 samples, 0.16%)</title><rect x="230.2" y="501" width="1.9" height="15.0" fill="rgb(233,122,52)" rx="2" ry="2" />
<text  x="233.18" y="511.5" ></text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;Bitmap&gt;, true&gt;::_Sp_ebo_helper (2 samples, 0.01%)</title><rect x="864.8" y="341" width="0.1" height="15.0" fill="rgb(244,111,37)" rx="2" ry="2" />
<text  x="867.77" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (26 samples, 0.13%)</title><rect x="1053.5" y="741" width="1.5" height="15.0" fill="rgb(253,89,29)" rx="2" ry="2" />
<text  x="1056.47" y="751.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (30 samples, 0.15%)</title><rect x="721.3" y="565" width="1.8" height="15.0" fill="rgb(251,41,47)" rx="2" ry="2" />
<text  x="724.31" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.04%)</title><rect x="206.4" y="261" width="0.5" height="15.0" fill="rgb(245,151,11)" rx="2" ry="2" />
<text  x="209.39" y="271.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::get (2 samples, 0.01%)</title><rect x="84.2" y="965" width="0.1" height="15.0" fill="rgb(248,186,49)" rx="2" ry="2" />
<text  x="87.15" y="975.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (17 samples, 0.08%)</title><rect x="131.0" y="837" width="1.0" height="15.0" fill="rgb(235,145,15)" rx="2" ry="2" />
<text  x="133.96" y="847.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (20 samples, 0.10%)</title><rect x="201.8" y="549" width="1.2" height="15.0" fill="rgb(237,211,53)" rx="2" ry="2" />
<text  x="204.85" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (11 samples, 0.05%)</title><rect x="324.3" y="757" width="0.6" height="15.0" fill="rgb(227,1,21)" rx="2" ry="2" />
<text  x="327.27" y="767.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="915.3" y="277" width="0.1" height="15.0" fill="rgb(253,29,32)" rx="2" ry="2" />
<text  x="918.32" y="287.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (23 samples, 0.11%)</title><rect x="698.3" y="469" width="1.4" height="15.0" fill="rgb(250,76,10)" rx="2" ry="2" />
<text  x="701.34" y="479.5" ></text>
</g>
<g >
<title>std::__find_if&lt;int const*, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (6 samples, 0.03%)</title><rect x="79.1" y="965" width="0.4" height="15.0" fill="rgb(239,157,22)" rx="2" ry="2" />
<text  x="82.14" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::deallocate (92 samples, 0.45%)</title><rect x="948.1" y="565" width="5.3" height="15.0" fill="rgb(247,100,1)" rx="2" ry="2" />
<text  x="951.08" y="575.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;int&gt;::weak_ptr (7 samples, 0.03%)</title><rect x="687.9" y="629" width="0.4" height="15.0" fill="rgb(248,174,43)" rx="2" ry="2" />
<text  x="690.85" y="639.5" ></text>
</g>
<g >
<title>psi_task_change (2 samples, 0.01%)</title><rect x="23.4" y="757" width="0.1" height="15.0" fill="rgb(247,19,28)" rx="2" ry="2" />
<text  x="26.41" y="767.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandConditionalBranch (4 samples, 0.02%)</title><rect x="29.0" y="965" width="0.2" height="15.0" fill="rgb(251,92,7)" rx="2" ry="2" />
<text  x="32.00" y="975.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::swap (6 samples, 0.03%)</title><rect x="920.7" y="453" width="0.4" height="15.0" fill="rgb(236,131,33)" rx="2" ry="2" />
<text  x="923.74" y="463.5" ></text>
</g>
<g >
<title>Sdl2Ui::GetTicks (288 samples, 1.42%)</title><rect x="215.3" y="581" width="16.8" height="15.0" fill="rgb(206,14,38)" rx="2" ry="2" />
<text  x="218.31" y="591.5" ></text>
</g>
<g >
<title>Game_Picture::SetNonEffectParams (23 samples, 0.11%)</title><rect x="954.4" y="709" width="1.4" height="15.0" fill="rgb(215,190,40)" rx="2" ry="2" />
<text  x="957.43" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_construct&lt;char32_t const*&gt; (3 samples, 0.01%)</title><rect x="987.4" y="645" width="0.2" height="15.0" fill="rgb(206,114,50)" rx="2" ry="2" />
<text  x="990.43" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (5 samples, 0.02%)</title><rect x="970.3" y="693" width="0.3" height="15.0" fill="rgb(217,2,17)" rx="2" ry="2" />
<text  x="973.35" y="703.5" ></text>
</g>
<g >
<title>Sprite::SetX (11 samples, 0.05%)</title><rect x="1164.7" y="773" width="0.6" height="15.0" fill="rgb(207,199,30)" rx="2" ry="2" />
<text  x="1167.70" y="783.5" ></text>
</g>
<g >
<title>xcb_wait_for_reply64 (9 samples, 0.04%)</title><rect x="1180.1" y="677" width="0.6" height="15.0" fill="rgb(252,223,44)" rx="2" ry="2" />
<text  x="1183.15" y="687.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (44 samples, 0.22%)</title><rect x="199.3" y="517" width="2.5" height="15.0" fill="rgb(241,125,39)" rx="2" ry="2" />
<text  x="202.28" y="527.5" ></text>
</g>
<g >
<title>Tone::Tone (11 samples, 0.05%)</title><rect x="965.6" y="677" width="0.7" height="15.0" fill="rgb(222,69,32)" rx="2" ry="2" />
<text  x="968.62" y="687.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::reset (63 samples, 0.31%)</title><rect x="975.3" y="709" width="3.7" height="15.0" fill="rgb(223,193,37)" rx="2" ry="2" />
<text  x="978.30" y="719.5" ></text>
</g>
<g >
<title>MakeFlashColor (6 samples, 0.03%)</title><rect x="964.3" y="677" width="0.3" height="15.0" fill="rgb(207,168,31)" rx="2" ry="2" />
<text  x="967.28" y="687.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (500 samples, 2.47%)</title><rect x="239.1" y="853" width="29.1" height="15.0" fill="rgb(238,96,18)" rx="2" ry="2" />
<text  x="242.10" y="863.5" >Sc..</text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (109 samples, 0.54%)</title><rect x="146.6" y="709" width="6.4" height="15.0" fill="rgb(223,57,21)" rx="2" ry="2" />
<text  x="149.64" y="719.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (3 samples, 0.01%)</title><rect x="174.9" y="485" width="0.1" height="15.0" fill="rgb(219,158,9)" rx="2" ry="2" />
<text  x="177.86" y="495.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (109 samples, 0.54%)</title><rect x="146.6" y="693" width="6.4" height="15.0" fill="rgb(245,107,2)" rx="2" ry="2" />
<text  x="149.64" y="703.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (170 samples, 0.84%)</title><rect x="132.0" y="853" width="9.9" height="15.0" fill="rgb(235,46,44)" rx="2" ry="2" />
<text  x="134.95" y="863.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (9 samples, 0.04%)</title><rect x="130.4" y="981" width="0.5" height="15.0" fill="rgb(242,111,5)" rx="2" ry="2" />
<text  x="133.38" y="991.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (179 samples, 0.88%)</title><rect x="943.5" y="645" width="10.4" height="15.0" fill="rgb(231,72,32)" rx="2" ry="2" />
<text  x="946.47" y="655.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (170 samples, 0.84%)</title><rect x="132.0" y="725" width="9.9" height="15.0" fill="rgb(219,26,53)" rx="2" ry="2" />
<text  x="134.95" y="735.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (2 samples, 0.01%)</title><rect x="617.0" y="677" width="0.1" height="15.0" fill="rgb(209,70,30)" rx="2" ry="2" />
<text  x="620.02" y="687.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (109 samples, 0.54%)</title><rect x="146.6" y="821" width="6.4" height="15.0" fill="rgb(217,213,5)" rx="2" ry="2" />
<text  x="149.64" y="831.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (39 samples, 0.19%)</title><rect x="1170.5" y="741" width="2.2" height="15.0" fill="rgb(240,205,7)" rx="2" ry="2" />
<text  x="1173.47" y="751.5" ></text>
</g>
<g >
<title>page_fault (78 samples, 0.39%)</title><rect x="1185.2" y="981" width="4.5" height="15.0" fill="rgb(237,205,48)" rx="2" ry="2" />
<text  x="1188.16" y="991.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.03%)</title><rect x="154.9" y="469" width="0.3" height="15.0" fill="rgb(206,179,17)" rx="2" ry="2" />
<text  x="157.86" y="479.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (68 samples, 0.34%)</title><rect x="203.0" y="661" width="4.0" height="15.0" fill="rgb(220,165,25)" rx="2" ry="2" />
<text  x="206.01" y="671.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (58 samples, 0.29%)</title><rect x="812.5" y="421" width="3.4" height="15.0" fill="rgb(249,15,14)" rx="2" ry="2" />
<text  x="815.48" y="431.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (64 samples, 0.32%)</title><rect x="17.8" y="821" width="3.7" height="15.0" fill="rgb(251,1,5)" rx="2" ry="2" />
<text  x="20.75" y="831.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="987.7" y="661" width="0.1" height="15.0" fill="rgb(225,122,15)" rx="2" ry="2" />
<text  x="990.66" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::CommonEvent, std::allocator&lt;RPG::CommonEvent&gt; &gt;::size (3 samples, 0.01%)</title><rect x="286.3" y="757" width="0.2" height="15.0" fill="rgb(229,184,45)" rx="2" ry="2" />
<text  x="289.32" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (5 samples, 0.02%)</title><rect x="707.0" y="581" width="0.3" height="15.0" fill="rgb(254,112,22)" rx="2" ry="2" />
<text  x="709.97" y="591.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (68 samples, 0.34%)</title><rect x="203.0" y="693" width="4.0" height="15.0" fill="rgb(228,76,46)" rx="2" ry="2" />
<text  x="206.01" y="703.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (11 samples, 0.05%)</title><rect x="250.8" y="325" width="0.6" height="15.0" fill="rgb(235,71,33)" rx="2" ry="2" />
<text  x="253.76" y="335.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4 samples, 0.02%)</title><rect x="139.6" y="373" width="0.3" height="15.0" fill="rgb(245,228,51)" rx="2" ry="2" />
<text  x="142.65" y="383.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::~__allocated_ptr (27 samples, 0.13%)</title><rect x="268.7" y="405" width="1.6" height="15.0" fill="rgb(207,57,19)" rx="2" ry="2" />
<text  x="271.71" y="415.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="987.0" y="405" width="0.1" height="15.0" fill="rgb(217,62,8)" rx="2" ry="2" />
<text  x="989.96" y="415.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (3 samples, 0.01%)</title><rect x="975.8" y="677" width="0.1" height="15.0" fill="rgb(219,85,12)" rx="2" ry="2" />
<text  x="978.77" y="687.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (32 samples, 0.16%)</title><rect x="270.3" y="421" width="1.9" height="15.0" fill="rgb(238,96,12)" rx="2" ry="2" />
<text  x="273.29" y="431.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&amp;&gt; (2 samples, 0.01%)</title><rect x="823.6" y="453" width="0.1" height="15.0" fill="rgb(208,90,24)" rx="2" ry="2" />
<text  x="826.56" y="463.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (2 samples, 0.01%)</title><rect x="999.4" y="661" width="0.2" height="15.0" fill="rgb(227,194,12)" rx="2" ry="2" />
<text  x="1002.43" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (22 samples, 0.11%)</title><rect x="257.1" y="325" width="1.3" height="15.0" fill="rgb(237,84,3)" rx="2" ry="2" />
<text  x="260.11" y="335.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (354 samples, 1.75%)</title><rect x="213.1" y="613" width="20.6" height="15.0" fill="rgb(222,207,24)" rx="2" ry="2" />
<text  x="216.10" y="623.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (57 samples, 0.28%)</title><rect x="209.1" y="469" width="3.3" height="15.0" fill="rgb(212,64,7)" rx="2" ry="2" />
<text  x="212.08" y="479.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (8 samples, 0.04%)</title><rect x="1177.1" y="757" width="0.4" height="15.0" fill="rgb(246,147,14)" rx="2" ry="2" />
<text  x="1180.06" y="767.5" ></text>
</g>
<g >
<title>RPG::SavePicture::SavePicture (4 samples, 0.02%)</title><rect x="1173.5" y="789" width="0.2" height="15.0" fill="rgb(248,28,15)" rx="2" ry="2" />
<text  x="1176.50" y="799.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (100 samples, 0.49%)</title><rect x="188.1" y="325" width="5.9" height="15.0" fill="rgb(218,225,16)" rx="2" ry="2" />
<text  x="191.15" y="335.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (63 samples, 0.31%)</title><rect x="203.3" y="533" width="3.7" height="15.0" fill="rgb(243,195,8)" rx="2" ry="2" />
<text  x="206.31" y="543.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (9 samples, 0.04%)</title><rect x="815.0" y="373" width="0.6" height="15.0" fill="rgb(251,202,20)" rx="2" ry="2" />
<text  x="818.05" y="383.5" ></text>
</g>
<g >
<title>Scene_Map::Update (500 samples, 2.47%)</title><rect x="239.1" y="869" width="29.1" height="15.0" fill="rgb(252,24,34)" rx="2" ry="2" />
<text  x="242.10" y="879.5" >Sc..</text>
</g>
<g >
<title>Game_Picture::Show (59 samples, 0.29%)</title><rect x="268.7" y="741" width="3.5" height="15.0" fill="rgb(221,10,52)" rx="2" ry="2" />
<text  x="271.71" y="751.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (79 samples, 0.39%)</title><rect x="142.0" y="853" width="4.6" height="15.0" fill="rgb(236,228,36)" rx="2" ry="2" />
<text  x="145.04" y="863.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (6 samples, 0.03%)</title><rect x="34.0" y="965" width="0.4" height="15.0" fill="rgb(238,96,6)" rx="2" ry="2" />
<text  x="37.02" y="975.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::get (11 samples, 0.05%)</title><rect x="108.2" y="965" width="0.7" height="15.0" fill="rgb(252,171,50)" rx="2" ry="2" />
<text  x="111.23" y="975.5" ></text>
</g>
<g >
<title>Bitmap::pixels (5 samples, 0.02%)</title><rect x="858.8" y="453" width="0.3" height="15.0" fill="rgb(247,76,49)" rx="2" ry="2" />
<text  x="861.77" y="463.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (440 samples, 2.17%)</title><rect x="161.5" y="917" width="25.7" height="15.0" fill="rgb(249,222,32)" rx="2" ry="2" />
<text  x="164.51" y="927.5" >G..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, bool&gt;::_M_head (2 samples, 0.01%)</title><rect x="76.0" y="965" width="0.2" height="15.0" fill="rgb(253,160,31)" rx="2" ry="2" />
<text  x="79.05" y="975.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;*&gt; (4 samples, 0.02%)</title><rect x="936.5" y="469" width="0.3" height="15.0" fill="rgb(210,132,32)" rx="2" ry="2" />
<text  x="939.53" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_M_lower_bound (18 samples, 0.09%)</title><rect x="232.7" y="357" width="1.0" height="15.0" fill="rgb(242,86,36)" rx="2" ry="2" />
<text  x="235.69" y="367.5" ></text>
</g>
<g >
<title>std::stable_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, bool (*)(Drawable const*, Drawable const*)&gt; (2 samples, 0.01%)</title><rect x="279.0" y="821" width="0.1" height="15.0" fill="rgb(206,133,24)" rx="2" ry="2" />
<text  x="281.97" y="831.5" ></text>
</g>
<g >
<title>pixman_image_unref (32 samples, 0.16%)</title><rect x="270.3" y="357" width="1.9" height="15.0" fill="rgb(240,66,31)" rx="2" ry="2" />
<text  x="273.29" y="367.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.03%)</title><rect x="197.0" y="309" width="0.4" height="15.0" fill="rgb(238,217,36)" rx="2" ry="2" />
<text  x="199.95" y="319.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (8 samples, 0.04%)</title><rect x="1180.2" y="517" width="0.5" height="15.0" fill="rgb(247,140,11)" rx="2" ry="2" />
<text  x="1183.21" y="527.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (35 samples, 0.17%)</title><rect x="253.9" y="277" width="2.0" height="15.0" fill="rgb(251,218,34)" rx="2" ry="2" />
<text  x="256.90" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_M_end (4 samples, 0.02%)</title><rect x="66.7" y="965" width="0.2" height="15.0" fill="rgb(236,80,41)" rx="2" ry="2" />
<text  x="69.66" y="975.5" ></text>
</g>
<g >
<title>sync_regs (14 samples, 0.07%)</title><rect x="245.7" y="405" width="0.9" height="15.0" fill="rgb(253,33,8)" rx="2" ry="2" />
<text  x="248.74" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (2 samples, 0.01%)</title><rect x="1050.6" y="741" width="0.1" height="15.0" fill="rgb(211,104,0)" rx="2" ry="2" />
<text  x="1053.56" y="751.5" ></text>
</g>
<g >
<title>sock_poll (4 samples, 0.02%)</title><rect x="21.9" y="917" width="0.2" height="15.0" fill="rgb(239,180,39)" rx="2" ry="2" />
<text  x="24.89" y="927.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.04%)</title><rect x="1180.2" y="597" width="0.5" height="15.0" fill="rgb(205,159,21)" rx="2" ry="2" />
<text  x="1183.21" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (61 samples, 0.30%)</title><rect x="1169.9" y="773" width="3.6" height="15.0" fill="rgb(215,70,0)" rx="2" ry="2" />
<text  x="1172.95" y="783.5" ></text>
</g>
<g >
<title>min&lt;int&gt; (2 samples, 0.01%)</title><rect x="1167.7" y="757" width="0.1" height="15.0" fill="rgb(234,158,27)" rx="2" ry="2" />
<text  x="1170.73" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (5 samples, 0.02%)</title><rect x="52.7" y="965" width="0.3" height="15.0" fill="rgb(219,114,54)" rx="2" ry="2" />
<text  x="55.67" y="975.5" ></text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;Bitmap&gt;, true&gt;::~_Sp_ebo_helper (5 samples, 0.02%)</title><rect x="904.9" y="357" width="0.3" height="15.0" fill="rgb(253,113,43)" rx="2" ry="2" />
<text  x="907.94" y="367.5" ></text>
</g>
<g >
<title>Game_Character::UpdateMovement (33 samples, 0.16%)</title><rect x="1145.9" y="805" width="2.0" height="15.0" fill="rgb(243,109,44)" rx="2" ry="2" />
<text  x="1148.93" y="815.5" ></text>
</g>
<g >
<title>Player::MainLoop (68 samples, 0.34%)</title><rect x="194.0" y="949" width="4.0" height="15.0" fill="rgb(227,104,13)" rx="2" ry="2" />
<text  x="197.04" y="959.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (2 samples, 0.01%)</title><rect x="971.0" y="677" width="0.2" height="15.0" fill="rgb(251,137,9)" rx="2" ry="2" />
<text  x="974.05" y="687.5" ></text>
</g>
<g >
<title>unix_stream_sendmsg (2 samples, 0.01%)</title><rect x="279.4" y="517" width="0.1" height="15.0" fill="rgb(234,190,48)" rx="2" ry="2" />
<text  x="282.38" y="527.5" ></text>
</g>
<g >
<title>__handle_mm_fault (17 samples, 0.08%)</title><rect x="137.4" y="325" width="1.0" height="15.0" fill="rgb(241,106,12)" rx="2" ry="2" />
<text  x="140.43" y="335.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_init_functor (163 samples, 0.81%)</title><rect x="716.0" y="661" width="9.5" height="15.0" fill="rgb(224,87,29)" rx="2" ry="2" />
<text  x="719.01" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_key (5 samples, 0.02%)</title><rect x="783.0" y="421" width="0.3" height="15.0" fill="rgb(224,228,4)" rx="2" ry="2" />
<text  x="786.05" y="431.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="192.8" y="277" width="0.1" height="15.0" fill="rgb(216,208,4)" rx="2" ry="2" />
<text  x="195.75" y="287.5" ></text>
</g>
<g >
<title>__interceptor_free (7 samples, 0.03%)</title><rect x="197.0" y="341" width="0.4" height="15.0" fill="rgb(217,107,12)" rx="2" ry="2" />
<text  x="199.95" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (14 samples, 0.07%)</title><rect x="974.5" y="693" width="0.8" height="15.0" fill="rgb(220,4,13)" rx="2" ry="2" />
<text  x="977.48" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::end (9 samples, 0.04%)</title><rect x="209.1" y="357" width="0.5" height="15.0" fill="rgb(218,155,17)" rx="2" ry="2" />
<text  x="212.08" y="367.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (179 samples, 0.88%)</title><rect x="943.5" y="661" width="10.4" height="15.0" fill="rgb(241,21,7)" rx="2" ry="2" />
<text  x="946.47" y="671.5" ></text>
</g>
<g >
<title>Bitmap::ZoomOpacityBlit (2 samples, 0.01%)</title><rect x="278.6" y="757" width="0.1" height="15.0" fill="rgb(218,115,53)" rx="2" ry="2" />
<text  x="281.56" y="767.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::_Placeholder&lt;1&gt;, true&gt;::_Head_base&lt;std::_Placeholder&lt;1&gt; &gt; (6 samples, 0.03%)</title><rect x="65.4" y="965" width="0.3" height="15.0" fill="rgb(224,36,14)" rx="2" ry="2" />
<text  x="68.38" y="975.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;int, std::allocator&lt;int&gt;, int&gt; (174 samples, 0.86%)</title><rect x="690.2" y="597" width="10.1" height="15.0" fill="rgb(210,199,29)" rx="2" ry="2" />
<text  x="693.18" y="607.5" ></text>
</g>
<g >
<title>std::allocator&lt;Bitmap&gt;::allocator (2 samples, 0.01%)</title><rect x="871.5" y="437" width="0.1" height="15.0" fill="rgb(207,205,29)" rx="2" ry="2" />
<text  x="874.48" y="447.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (5 samples, 0.02%)</title><rect x="819.2" y="469" width="0.3" height="15.0" fill="rgb(216,143,8)" rx="2" ry="2" />
<text  x="822.19" y="479.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (109 samples, 0.54%)</title><rect x="146.6" y="853" width="6.4" height="15.0" fill="rgb(216,71,17)" rx="2" ry="2" />
<text  x="149.64" y="863.5" ></text>
</g>
<g >
<title>Bitmap::width (2 samples, 0.01%)</title><rect x="26.2" y="965" width="0.1" height="15.0" fill="rgb(239,91,43)" rx="2" ry="2" />
<text  x="29.21" y="975.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Transition*, std::default_delete&lt;Transition&gt; &gt; (7 samples, 0.03%)</title><rect x="80.9" y="965" width="0.5" height="15.0" fill="rgb(227,19,39)" rx="2" ry="2" />
<text  x="83.94" y="975.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (786 samples, 3.88%)</title><rect x="1004.2" y="741" width="45.8" height="15.0" fill="rgb(247,145,49)" rx="2" ry="2" />
<text  x="1007.16" y="751.5" >Game..</text>
</g>
<g >
<title>TilemapLayer::SetTone (2 samples, 0.01%)</title><rect x="1178.6" y="805" width="0.1" height="15.0" fill="rgb(219,13,42)" rx="2" ry="2" />
<text  x="1181.63" y="815.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (2 samples, 0.01%)</title><rect x="33.2" y="965" width="0.1" height="15.0" fill="rgb(216,186,16)" rx="2" ry="2" />
<text  x="36.20" y="975.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (7 samples, 0.03%)</title><rect x="954.0" y="677" width="0.4" height="15.0" fill="rgb(208,23,48)" rx="2" ry="2" />
<text  x="957.02" y="687.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.01%)</title><rect x="138.8" y="421" width="0.1" height="15.0" fill="rgb(217,171,35)" rx="2" ry="2" />
<text  x="141.83" y="431.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Game_Screen*, false&gt;::_M_head (2 samples, 0.01%)</title><rect x="1168.4" y="677" width="0.1" height="15.0" fill="rgb(226,224,34)" rx="2" ry="2" />
<text  x="1171.37" y="687.5" ></text>
</g>
<g >
<title>std::forward&lt;int&amp;&gt; (7 samples, 0.03%)</title><rect x="95.6" y="965" width="0.4" height="15.0" fill="rgb(208,110,33)" rx="2" ry="2" />
<text  x="98.58" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_addr (3 samples, 0.01%)</title><rect x="42.9" y="965" width="0.2" height="15.0" fill="rgb(209,156,25)" rx="2" ry="2" />
<text  x="45.94" y="975.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (5 samples, 0.02%)</title><rect x="136.8" y="325" width="0.3" height="15.0" fill="rgb(229,153,7)" rx="2" ry="2" />
<text  x="139.79" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (2 samples, 0.01%)</title><rect x="617.0" y="693" width="0.1" height="15.0" fill="rgb(215,122,5)" rx="2" ry="2" />
<text  x="620.02" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (9 samples, 0.04%)</title><rect x="627.9" y="693" width="0.5" height="15.0" fill="rgb(249,6,0)" rx="2" ry="2" />
<text  x="630.86" y="703.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (10 samples, 0.05%)</title><rect x="174.1" y="517" width="0.6" height="15.0" fill="rgb(230,52,53)" rx="2" ry="2" />
<text  x="177.10" y="527.5" ></text>
</g>
<g >
<title>FileRequestAsync::Bind&lt;Game_Picture&gt; (2 samples, 0.01%)</title><rect x="239.1" y="693" width="0.1" height="15.0" fill="rgb(227,76,40)" rx="2" ry="2" />
<text  x="242.10" y="703.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (5 samples, 0.02%)</title><rect x="139.0" y="437" width="0.3" height="15.0" fill="rgb(249,20,44)" rx="2" ry="2" />
<text  x="142.01" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (47 samples, 0.23%)</title><rect x="944.2" y="613" width="2.7" height="15.0" fill="rgb(228,146,49)" rx="2" ry="2" />
<text  x="947.17" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::emplace_back&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (86 samples, 0.42%)</title><rect x="701.5" y="645" width="5.0" height="15.0" fill="rgb(254,164,7)" rx="2" ry="2" />
<text  x="704.49" y="655.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (40 samples, 0.20%)</title><rect x="142.0" y="469" width="2.4" height="15.0" fill="rgb(210,82,26)" rx="2" ry="2" />
<text  x="145.04" y="479.5" ></text>
</g>
<g >
<title>Blend (19 samples, 0.09%)</title><rect x="961.3" y="693" width="1.1" height="15.0" fill="rgb(235,229,39)" rx="2" ry="2" />
<text  x="964.25" y="703.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (159 samples, 0.79%)</title><rect x="164.8" y="565" width="9.3" height="15.0" fill="rgb(243,224,25)" rx="2" ry="2" />
<text  x="167.83" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (24 samples, 0.12%)</title><rect x="77.4" y="965" width="1.4" height="15.0" fill="rgb(229,26,2)" rx="2" ry="2" />
<text  x="80.45" y="975.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (2 samples, 0.01%)</title><rect x="279.0" y="789" width="0.1" height="15.0" fill="rgb(232,225,47)" rx="2" ry="2" />
<text  x="281.97" y="799.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (153 samples, 0.76%)</title><rect x="378.9" y="741" width="8.9" height="15.0" fill="rgb(238,195,7)" rx="2" ry="2" />
<text  x="381.89" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (2 samples, 0.01%)</title><rect x="763.9" y="421" width="0.1" height="15.0" fill="rgb(230,162,16)" rx="2" ry="2" />
<text  x="766.92" y="431.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (4 samples, 0.02%)</title><rect x="62.1" y="965" width="0.2" height="15.0" fill="rgb(217,200,5)" rx="2" ry="2" />
<text  x="65.06" y="975.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (11 samples, 0.05%)</title><rect x="875.2" y="469" width="0.7" height="15.0" fill="rgb(211,88,44)" rx="2" ry="2" />
<text  x="878.21" y="479.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (18 samples, 0.09%)</title><rect x="197.0" y="437" width="1.0" height="15.0" fill="rgb(215,63,0)" rx="2" ry="2" />
<text  x="199.95" y="447.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Sprite*, false&gt;::_M_head (4 samples, 0.02%)</title><rect x="1172.5" y="677" width="0.2" height="15.0" fill="rgb(218,135,42)" rx="2" ry="2" />
<text  x="1175.51" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (7 samples, 0.03%)</title><rect x="762.4" y="405" width="0.4" height="15.0" fill="rgb(211,110,39)" rx="2" ry="2" />
<text  x="765.35" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt;::_M_head (4 samples, 0.02%)</title><rect x="1168.3" y="693" width="0.2" height="15.0" fill="rgb(244,196,26)" rx="2" ry="2" />
<text  x="1171.26" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.02%)</title><rect x="986.8" y="517" width="0.3" height="15.0" fill="rgb(224,60,23)" rx="2" ry="2" />
<text  x="989.78" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::size (33 samples, 0.16%)</title><rect x="284.3" y="757" width="2.0" height="15.0" fill="rgb(221,63,10)" rx="2" ry="2" />
<text  x="287.33" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator* (5 samples, 0.02%)</title><rect x="49.8" y="965" width="0.2" height="15.0" fill="rgb(229,27,38)" rx="2" ry="2" />
<text  x="52.76" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::deallocate (25 samples, 0.12%)</title><rect x="256.9" y="357" width="1.5" height="15.0" fill="rgb(221,178,38)" rx="2" ry="2" />
<text  x="259.94" y="367.5" ></text>
</g>
<g >
<title>operator!= (5 samples, 0.02%)</title><rect x="1163.1" y="741" width="0.3" height="15.0" fill="rgb(212,21,2)" rx="2" ry="2" />
<text  x="1166.13" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (5 samples, 0.02%)</title><rect x="882.4" y="373" width="0.3" height="15.0" fill="rgb(243,24,35)" rx="2" ry="2" />
<text  x="885.38" y="383.5" ></text>
</g>
<g >
<title>__fdget (4 samples, 0.02%)</title><rect x="16.6" y="917" width="0.3" height="15.0" fill="rgb(229,22,48)" rx="2" ry="2" />
<text  x="19.65" y="927.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_not_empty_function&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt; (5 samples, 0.02%)</title><rect x="61.2" y="965" width="0.3" height="15.0" fill="rgb(238,192,20)" rx="2" ry="2" />
<text  x="64.24" y="975.5" ></text>
</g>
<g >
<title>std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt;&amp;, true&gt; (113 samples, 0.56%)</title><rect x="681.7" y="645" width="6.6" height="15.0" fill="rgb(245,210,43)" rx="2" ry="2" />
<text  x="684.67" y="655.5" ></text>
</g>
<g >
<title>__libc_recvmsg (4 samples, 0.02%)</title><rect x="1182.4" y="677" width="0.2" height="15.0" fill="rgb(205,118,11)" rx="2" ry="2" />
<text  x="1185.36" y="687.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt;::~_Sp_counted_ptr_inplace (3 samples, 0.01%)</title><rect x="72.8" y="965" width="0.2" height="15.0" fill="rgb(221,171,11)" rx="2" ry="2" />
<text  x="75.78" y="975.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (117 samples, 0.58%)</title><rect x="187.2" y="901" width="6.8" height="15.0" fill="rgb(228,187,17)" rx="2" ry="2" />
<text  x="190.22" y="911.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (2 samples, 0.01%)</title><rect x="208.9" y="485" width="0.1" height="15.0" fill="rgb(232,130,53)" rx="2" ry="2" />
<text  x="211.90" y="495.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::function (102 samples, 0.50%)</title><rect x="681.9" y="629" width="6.0" height="15.0" fill="rgb(212,23,38)" rx="2" ry="2" />
<text  x="684.90" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (5 samples, 0.02%)</title><rect x="603.6" y="661" width="0.3" height="15.0" fill="rgb(231,163,12)" rx="2" ry="2" />
<text  x="606.61" y="671.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (5 samples, 0.02%)</title><rect x="1176.7" y="741" width="0.3" height="15.0" fill="rgb(246,24,10)" rx="2" ry="2" />
<text  x="1179.71" y="751.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (18 samples, 0.09%)</title><rect x="232.7" y="533" width="1.0" height="15.0" fill="rgb(225,145,9)" rx="2" ry="2" />
<text  x="235.69" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::begin@plt (3 samples, 0.01%)</title><rect x="637.3" y="661" width="0.1" height="15.0" fill="rgb(239,146,23)" rx="2" ry="2" />
<text  x="640.25" y="671.5" ></text>
</g>
<g >
<title>Opacity::IsSplit (2 samples, 0.01%)</title><rect x="831.7" y="437" width="0.1" height="15.0" fill="rgb(252,107,5)" rx="2" ry="2" />
<text  x="834.72" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (9 samples, 0.04%)</title><rect x="613.9" y="709" width="0.6" height="15.0" fill="rgb(214,190,27)" rx="2" ry="2" />
<text  x="616.93" y="719.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::deallocate (25 samples, 0.12%)</title><rect x="256.9" y="373" width="1.5" height="15.0" fill="rgb(214,180,16)" rx="2" ry="2" />
<text  x="259.94" y="383.5" ></text>
</g>
<g >
<title>Bitmap::~Bitmap (20 samples, 0.10%)</title><rect x="201.8" y="437" width="1.2" height="15.0" fill="rgb(229,86,45)" rx="2" ry="2" />
<text  x="204.85" y="447.5" ></text>
</g>
<g >
<title>Bitmap::Create (109 samples, 0.54%)</title><rect x="146.6" y="661" width="6.4" height="15.0" fill="rgb(242,78,25)" rx="2" ry="2" />
<text  x="149.64" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string@plt (2 samples, 0.01%)</title><rect x="646.5" y="645" width="0.1" height="15.0" fill="rgb(214,176,23)" rx="2" ry="2" />
<text  x="649.46" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (30 samples, 0.15%)</title><rect x="501.4" y="677" width="1.7" height="15.0" fill="rgb(235,203,34)" rx="2" ry="2" />
<text  x="504.37" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (55 samples, 0.27%)</title><rect x="233.7" y="965" width="3.2" height="15.0" fill="rgb(224,4,27)" rx="2" ry="2" />
<text  x="236.73" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (18 samples, 0.09%)</title><rect x="232.7" y="373" width="1.0" height="15.0" fill="rgb(220,133,40)" rx="2" ry="2" />
<text  x="235.69" y="383.5" ></text>
</g>
<g >
<title>Bitmap::Create (170 samples, 0.84%)</title><rect x="132.0" y="693" width="9.9" height="15.0" fill="rgb(237,216,7)" rx="2" ry="2" />
<text  x="134.95" y="703.5" ></text>
</g>
<g >
<title>strlen@plt (2 samples, 0.01%)</title><rect x="941.1" y="677" width="0.2" height="15.0" fill="rgb(252,91,19)" rx="2" ry="2" />
<text  x="944.14" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator (3 samples, 0.01%)</title><rect x="1176.1" y="805" width="0.2" height="15.0" fill="rgb(236,190,36)" rx="2" ry="2" />
<text  x="1179.13" y="815.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (12 samples, 0.06%)</title><rect x="882.1" y="405" width="0.7" height="15.0" fill="rgb(208,145,9)" rx="2" ry="2" />
<text  x="885.15" y="415.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (57 samples, 0.28%)</title><rect x="209.1" y="517" width="3.3" height="15.0" fill="rgb(232,200,15)" rx="2" ry="2" />
<text  x="212.08" y="527.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (18 samples, 0.09%)</title><rect x="232.7" y="597" width="1.0" height="15.0" fill="rgb(250,145,32)" rx="2" ry="2" />
<text  x="235.69" y="607.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandWait (34 samples, 0.17%)</title><rect x="1002.2" y="741" width="2.0" height="15.0" fill="rgb(236,125,19)" rx="2" ry="2" />
<text  x="1005.17" y="751.5" ></text>
</g>
<g >
<title>Game_Picture::Show (68 samples, 0.34%)</title><rect x="203.0" y="789" width="4.0" height="15.0" fill="rgb(221,22,19)" rx="2" ry="2" />
<text  x="206.01" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_S_key (6 samples, 0.03%)</title><rect x="66.9" y="965" width="0.3" height="15.0" fill="rgb(243,178,21)" rx="2" ry="2" />
<text  x="69.90" y="975.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (3 samples, 0.01%)</title><rect x="1182.6" y="805" width="0.2" height="15.0" fill="rgb(253,162,30)" rx="2" ry="2" />
<text  x="1185.60" y="815.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_memcmp@plt (3 samples, 0.01%)</title><rect x="173.9" y="469" width="0.2" height="15.0" fill="rgb(252,97,50)" rx="2" ry="2" />
<text  x="176.92" y="479.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (9 samples, 0.04%)</title><rect x="1180.1" y="645" width="0.6" height="15.0" fill="rgb(250,13,44)" rx="2" ry="2" />
<text  x="1183.15" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::substr (3 samples, 0.01%)</title><rect x="987.4" y="709" width="0.2" height="15.0" fill="rgb(208,110,0)" rx="2" ry="2" />
<text  x="990.43" y="719.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="693.9" y="549" width="0.1" height="15.0" fill="rgb(222,134,49)" rx="2" ry="2" />
<text  x="696.85" y="559.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (117 samples, 0.58%)</title><rect x="187.2" y="837" width="6.8" height="15.0" fill="rgb(253,88,4)" rx="2" ry="2" />
<text  x="190.22" y="847.5" ></text>
</g>
<g >
<title>Game_Map::Update (105 samples, 0.52%)</title><rect x="207.0" y="933" width="6.1" height="15.0" fill="rgb(249,14,24)" rx="2" ry="2" />
<text  x="209.98" y="943.5" ></text>
</g>
<g >
<title>Sprite::SetZ (2 samples, 0.01%)</title><rect x="968.0" y="693" width="0.1" height="15.0" fill="rgb(221,18,48)" rx="2" ry="2" />
<text  x="970.96" y="703.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*&gt; (6 samples, 0.03%)</title><rect x="59.0" y="965" width="0.3" height="15.0" fill="rgb(243,124,42)" rx="2" ry="2" />
<text  x="61.97" y="975.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (79 samples, 0.39%)</title><rect x="142.0" y="773" width="4.6" height="15.0" fill="rgb(206,154,4)" rx="2" ry="2" />
<text  x="145.04" y="783.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (68 samples, 0.34%)</title><rect x="194.0" y="709" width="4.0" height="15.0" fill="rgb(226,97,32)" rx="2" ry="2" />
<text  x="197.04" y="719.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (12 samples, 0.06%)</title><rect x="678.2" y="645" width="0.7" height="15.0" fill="rgb(249,105,39)" rx="2" ry="2" />
<text  x="681.17" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_valptr (4 samples, 0.02%)</title><rect x="233.2" y="309" width="0.2" height="15.0" fill="rgb(238,204,15)" rx="2" ry="2" />
<text  x="236.15" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (4 samples, 0.02%)</title><rect x="115.2" y="965" width="0.2" height="15.0" fill="rgb(243,193,21)" rx="2" ry="2" />
<text  x="118.16" y="975.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (3 samples, 0.01%)</title><rect x="106.4" y="965" width="0.1" height="15.0" fill="rgb(215,216,24)" rx="2" ry="2" />
<text  x="109.36" y="975.5" ></text>
</g>
<g >
<title>wp_page_copy (2 samples, 0.01%)</title><rect x="139.8" y="341" width="0.1" height="15.0" fill="rgb(229,146,29)" rx="2" ry="2" />
<text  x="142.76" y="351.5" ></text>
</g>
<g >
<title>std::forward&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (3 samples, 0.01%)</title><rect x="702.5" y="597" width="0.2" height="15.0" fill="rgb(243,13,1)" rx="2" ry="2" />
<text  x="705.54" y="607.5" ></text>
</g>
<g >
<title>operator new (37 samples, 0.18%)</title><rect x="153.2" y="517" width="2.2" height="15.0" fill="rgb(218,26,30)" rx="2" ry="2" />
<text  x="156.23" y="527.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator bool (8 samples, 0.04%)</title><rect x="97.2" y="965" width="0.4" height="15.0" fill="rgb(240,229,1)" rx="2" ry="2" />
<text  x="100.15" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (10 samples, 0.05%)</title><rect x="882.8" y="373" width="0.6" height="15.0" fill="rgb(248,112,28)" rx="2" ry="2" />
<text  x="885.85" y="383.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (2 samples, 0.01%)</title><rect x="279.4" y="725" width="0.1" height="15.0" fill="rgb(245,154,21)" rx="2" ry="2" />
<text  x="282.38" y="735.5" ></text>
</g>
<g >
<title>Game_Map::Update (68 samples, 0.34%)</title><rect x="203.0" y="901" width="4.0" height="15.0" fill="rgb(244,127,42)" rx="2" ry="2" />
<text  x="206.01" y="911.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (28 samples, 0.14%)</title><rect x="1179.3" y="789" width="1.7" height="15.0" fill="rgb(249,195,42)" rx="2" ry="2" />
<text  x="1182.33" y="799.5" ></text>
</g>
<g >
<title>std::_Bit_iterator_base::_Bit_iterator_base (2 samples, 0.01%)</title><rect x="283.9" y="725" width="0.1" height="15.0" fill="rgb(219,64,47)" rx="2" ry="2" />
<text  x="286.87" y="735.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (34 samples, 0.17%)</title><rect x="889.0" y="469" width="2.0" height="15.0" fill="rgb(244,144,11)" rx="2" ry="2" />
<text  x="892.02" y="479.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (82 samples, 0.41%)</title><rect x="948.5" y="533" width="4.8" height="15.0" fill="rgb(221,102,22)" rx="2" ry="2" />
<text  x="951.54" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (59 samples, 0.29%)</title><rect x="475.3" y="677" width="3.4" height="15.0" fill="rgb(236,220,43)" rx="2" ry="2" />
<text  x="478.31" y="687.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (56 samples, 0.28%)</title><rect x="514.0" y="725" width="3.3" height="15.0" fill="rgb(211,82,8)" rx="2" ry="2" />
<text  x="517.02" y="735.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (41 samples, 0.20%)</title><rect x="816.6" y="453" width="2.4" height="15.0" fill="rgb(244,38,20)" rx="2" ry="2" />
<text  x="819.62" y="463.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;*&gt; (5 samples, 0.02%)</title><rect x="723.4" y="629" width="0.2" height="15.0" fill="rgb(223,135,47)" rx="2" ry="2" />
<text  x="726.35" y="639.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (17 samples, 0.08%)</title><rect x="131.0" y="741" width="1.0" height="15.0" fill="rgb(224,175,3)" rx="2" ry="2" />
<text  x="133.96" y="751.5" ></text>
</g>
<g >
<title>Bitmap::height (4 samples, 0.02%)</title><rect x="881.2" y="437" width="0.2" height="15.0" fill="rgb(248,155,23)" rx="2" ry="2" />
<text  x="884.16" y="447.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (7 samples, 0.03%)</title><rect x="1179.6" y="693" width="0.4" height="15.0" fill="rgb(236,207,25)" rx="2" ry="2" />
<text  x="1182.57" y="703.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (194 samples, 0.96%)</title><rect x="256.9" y="453" width="11.3" height="15.0" fill="rgb(209,208,29)" rx="2" ry="2" />
<text  x="259.94" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (3 samples, 0.01%)</title><rect x="517.6" y="725" width="0.1" height="15.0" fill="rgb(226,52,31)" rx="2" ry="2" />
<text  x="520.57" y="735.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="239.1" y="581" width="0.1" height="15.0" fill="rgb(207,162,44)" rx="2" ry="2" />
<text  x="242.10" y="591.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Picture*, std::_Placeholder&lt;1&gt; &gt; (2 samples, 0.01%)</title><rect x="79.9" y="965" width="0.1" height="15.0" fill="rgb(220,153,43)" rx="2" ry="2" />
<text  x="82.90" y="975.5" ></text>
</g>
<g >
<title>operator!= (10 samples, 0.05%)</title><rect x="1164.1" y="757" width="0.5" height="15.0" fill="rgb(251,145,17)" rx="2" ry="2" />
<text  x="1167.06" y="767.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingForegroundExecution (20 samples, 0.10%)</title><rect x="1146.2" y="757" width="1.2" height="15.0" fill="rgb(233,113,6)" rx="2" ry="2" />
<text  x="1149.22" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;int const&gt; (4 samples, 0.02%)</title><rect x="51.2" y="965" width="0.2" height="15.0" fill="rgb(223,67,30)" rx="2" ry="2" />
<text  x="54.16" y="975.5" ></text>
</g>
<g >
<title>PicPointerPatch::ReplaceName (41 samples, 0.20%)</title><rect x="985.9" y="725" width="2.4" height="15.0" fill="rgb(247,119,5)" rx="2" ry="2" />
<text  x="988.91" y="735.5" ></text>
</g>
<g >
<title>Bitmap::find_format (57 samples, 0.28%)</title><rect x="209.1" y="405" width="3.3" height="15.0" fill="rgb(240,183,27)" rx="2" ry="2" />
<text  x="212.08" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (6 samples, 0.03%)</title><rect x="1053.1" y="741" width="0.4" height="15.0" fill="rgb(249,15,17)" rx="2" ry="2" />
<text  x="1056.12" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (226 samples, 1.12%)</title><rect x="340.4" y="741" width="13.2" height="15.0" fill="rgb(239,90,19)" rx="2" ry="2" />
<text  x="343.41" y="751.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandControlVariables (2 samples, 0.01%)</title><rect x="29.2" y="965" width="0.2" height="15.0" fill="rgb(243,29,28)" rx="2" ry="2" />
<text  x="32.24" y="975.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;2ul, bool&gt; (2 samples, 0.01%)</title><rect x="274.4" y="965" width="0.1" height="15.0" fill="rgb(240,156,48)" rx="2" ry="2" />
<text  x="277.42" y="975.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*&gt; (210 samples, 1.04%)</title><rect x="925.7" y="581" width="12.2" height="15.0" fill="rgb(226,58,39)" rx="2" ry="2" />
<text  x="928.69" y="591.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (18 samples, 0.09%)</title><rect x="232.7" y="517" width="1.0" height="15.0" fill="rgb(219,97,33)" rx="2" ry="2" />
<text  x="235.69" y="527.5" ></text>
</g>
<g >
<title>Cache::Picture (146 samples, 0.72%)</title><rect x="153.0" y="613" width="8.5" height="15.0" fill="rgb(219,190,41)" rx="2" ry="2" />
<text  x="156.00" y="623.5" ></text>
</g>
<g >
<title>__x64_sys_read (14 samples, 0.07%)</title><rect x="22.2" y="949" width="0.8" height="15.0" fill="rgb(227,165,51)" rx="2" ry="2" />
<text  x="25.18" y="959.5" ></text>
</g>
<g >
<title>Tone::Tone (11 samples, 0.05%)</title><rect x="968.2" y="693" width="0.7" height="15.0" fill="rgb(231,168,37)" rx="2" ry="2" />
<text  x="971.25" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::operator[] (4 samples, 0.02%)</title><rect x="120.9" y="965" width="0.2" height="15.0" fill="rgb(238,88,9)" rx="2" ry="2" />
<text  x="123.88" y="975.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt;::_M_head (3 samples, 0.01%)</title><rect x="1177.4" y="725" width="0.1" height="15.0" fill="rgb(215,199,3)" rx="2" ry="2" />
<text  x="1180.35" y="735.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="905.5" y="373" width="0.1" height="15.0" fill="rgb(207,38,29)" rx="2" ry="2" />
<text  x="908.46" y="383.5" ></text>
</g>
<g >
<title>eventfd_write (8 samples, 0.04%)</title><rect x="23.1" y="885" width="0.4" height="15.0" fill="rgb(211,194,53)" rx="2" ry="2" />
<text  x="26.06" y="895.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator== (3 samples, 0.01%)</title><rect x="783.7" y="421" width="0.2" height="15.0" fill="rgb(218,62,12)" rx="2" ry="2" />
<text  x="786.74" y="431.5" ></text>
</g>
<g >
<title>_copy_to_user (3 samples, 0.01%)</title><rect x="229.1" y="437" width="0.1" height="15.0" fill="rgb(206,167,11)" rx="2" ry="2" />
<text  x="232.07" y="447.5" ></text>
</g>
<g >
<title>Bitmap::height (4 samples, 0.02%)</title><rect x="1156.1" y="757" width="0.2" height="15.0" fill="rgb(211,87,11)" rx="2" ry="2" />
<text  x="1159.07" y="767.5" ></text>
</g>
<g >
<title>pthread_getspecific@plt (2 samples, 0.01%)</title><rect x="918.4" y="293" width="0.1" height="15.0" fill="rgb(231,106,33)" rx="2" ry="2" />
<text  x="921.41" y="303.5" ></text>
</g>
<g >
<title>std::__weak_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__weak_count (9 samples, 0.04%)</title><rect x="706.7" y="629" width="0.6" height="15.0" fill="rgb(246,62,36)" rx="2" ry="2" />
<text  x="709.74" y="639.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (8 samples, 0.04%)</title><rect x="80.5" y="965" width="0.4" height="15.0" fill="rgb(227,139,51)" rx="2" ry="2" />
<text  x="83.48" y="975.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (146 samples, 0.72%)</title><rect x="153.0" y="933" width="8.5" height="15.0" fill="rgb(245,158,13)" rx="2" ry="2" />
<text  x="156.00" y="943.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.02%)</title><rect x="138.4" y="389" width="0.3" height="15.0" fill="rgb(241,90,17)" rx="2" ry="2" />
<text  x="141.42" y="399.5" ></text>
</g>
<g >
<title>get_unmapped_area (3 samples, 0.01%)</title><rect x="136.8" y="293" width="0.2" height="15.0" fill="rgb(211,202,52)" rx="2" ry="2" />
<text  x="139.79" y="303.5" ></text>
</g>
<g >
<title>try_charge (6 samples, 0.03%)</title><rect x="251.0" y="309" width="0.4" height="15.0" fill="rgb(211,179,22)" rx="2" ry="2" />
<text  x="254.05" y="319.5" ></text>
</g>
<g >
<title>__lru_cache_add (10 samples, 0.05%)</title><rect x="250.0" y="325" width="0.6" height="15.0" fill="rgb(239,137,33)" rx="2" ry="2" />
<text  x="253.00" y="335.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (53 samples, 0.26%)</title><rect x="184.0" y="437" width="3.1" height="15.0" fill="rgb(233,172,8)" rx="2" ry="2" />
<text  x="187.01" y="447.5" ></text>
</g>
<g >
<title>Game_Picture::Show (440 samples, 2.17%)</title><rect x="161.5" y="869" width="25.7" height="15.0" fill="rgb(206,192,29)" rx="2" ry="2" />
<text  x="164.51" y="879.5" >G..</text>
</g>
<g >
<title>sock_sendmsg (2 samples, 0.01%)</title><rect x="279.4" y="533" width="0.1" height="15.0" fill="rgb(241,215,26)" rx="2" ry="2" />
<text  x="282.38" y="543.5" ></text>
</g>
<g >
<title>free@plt (3 samples, 0.01%)</title><rect x="915.7" y="309" width="0.2" height="15.0" fill="rgb(228,201,48)" rx="2" ry="2" />
<text  x="918.72" y="319.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned@plt (3 samples, 0.01%)</title><rect x="242.4" y="437" width="0.2" height="15.0" fill="rgb(221,99,11)" rx="2" ry="2" />
<text  x="245.42" y="447.5" ></text>
</g>
<g >
<title>Bitmap::~Bitmap (4 samples, 0.02%)</title><rect x="26.3" y="965" width="0.3" height="15.0" fill="rgb(225,110,23)" rx="2" ry="2" />
<text  x="29.32" y="975.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (6 samples, 0.03%)</title><rect x="795.2" y="373" width="0.4" height="15.0" fill="rgb(215,144,37)" rx="2" ry="2" />
<text  x="798.23" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (3 samples, 0.01%)</title><rect x="277.1" y="965" width="0.2" height="15.0" fill="rgb(212,23,41)" rx="2" ry="2" />
<text  x="280.11" y="975.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (3 samples, 0.01%)</title><rect x="22.4" y="837" width="0.1" height="15.0" fill="rgb(209,109,48)" rx="2" ry="2" />
<text  x="25.36" y="847.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;int&gt;::shared_ptr&lt;std::allocator&lt;int&gt;, int&gt; (5 samples, 0.02%)</title><rect x="107.2" y="965" width="0.3" height="15.0" fill="rgb(229,158,44)" rx="2" ry="2" />
<text  x="110.24" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (7 samples, 0.03%)</title><rect x="127.0" y="965" width="0.4" height="15.0" fill="rgb(218,57,40)" rx="2" ry="2" />
<text  x="130.00" y="975.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="643.3" y="597" width="0.1" height="15.0" fill="rgb(219,38,0)" rx="2" ry="2" />
<text  x="646.25" y="607.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (11 samples, 0.05%)</title><rect x="150.0" y="421" width="0.7" height="15.0" fill="rgb(206,124,5)" rx="2" ry="2" />
<text  x="153.02" y="431.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (62 samples, 0.31%)</title><rect x="194.4" y="517" width="3.6" height="15.0" fill="rgb(235,194,2)" rx="2" ry="2" />
<text  x="197.39" y="527.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (226 samples, 1.12%)</title><rect x="906.6" y="405" width="13.1" height="15.0" fill="rgb(249,228,47)" rx="2" ry="2" />
<text  x="909.57" y="415.5" ></text>
</g>
<g >
<title>std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;::~pair (207 samples, 1.02%)</title><rect x="925.9" y="549" width="12.0" height="15.0" fill="rgb(207,139,18)" rx="2" ry="2" />
<text  x="928.87" y="559.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (170 samples, 0.84%)</title><rect x="132.0" y="661" width="9.9" height="15.0" fill="rgb(245,209,51)" rx="2" ry="2" />
<text  x="134.95" y="671.5" ></text>
</g>
<g >
<title>Bitmap::height (7 samples, 0.03%)</title><rect x="25.6" y="965" width="0.4" height="15.0" fill="rgb(207,169,11)" rx="2" ry="2" />
<text  x="28.62" y="975.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (7 samples, 0.03%)</title><rect x="969.6" y="645" width="0.4" height="15.0" fill="rgb(243,39,0)" rx="2" ry="2" />
<text  x="972.59" y="655.5" ></text>
</g>
<g >
<title>Game_Map::UpdateForegroundEvents (20 samples, 0.10%)</title><rect x="1144.8" y="821" width="1.1" height="15.0" fill="rgb(229,138,23)" rx="2" ry="2" />
<text  x="1147.76" y="831.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (17 samples, 0.08%)</title><rect x="131.0" y="469" width="1.0" height="15.0" fill="rgb(237,124,26)" rx="2" ry="2" />
<text  x="133.96" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (32 samples, 0.16%)</title><rect x="976.9" y="629" width="1.9" height="15.0" fill="rgb(235,128,9)" rx="2" ry="2" />
<text  x="979.93" y="639.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.03%)</title><rect x="197.0" y="325" width="0.4" height="15.0" fill="rgb(209,150,44)" rx="2" ry="2" />
<text  x="199.95" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (97 samples, 0.48%)</title><rect x="164.8" y="485" width="5.7" height="15.0" fill="rgb(229,127,37)" rx="2" ry="2" />
<text  x="167.83" y="495.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (12 samples, 0.06%)</title><rect x="201.1" y="357" width="0.7" height="15.0" fill="rgb(206,172,30)" rx="2" ry="2" />
<text  x="204.15" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (8 samples, 0.04%)</title><rect x="921.1" y="405" width="0.5" height="15.0" fill="rgb(205,73,14)" rx="2" ry="2" />
<text  x="924.15" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (2 samples, 0.01%)</title><rect x="128.6" y="965" width="0.1" height="15.0" fill="rgb(213,174,2)" rx="2" ry="2" />
<text  x="131.63" y="975.5" ></text>
</g>
<g >
<title>std::map&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, (anonymous namespace)::CacheItem, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::end (7 samples, 0.03%)</title><rect x="788.1" y="469" width="0.4" height="15.0" fill="rgb(250,179,26)" rx="2" ry="2" />
<text  x="791.06" y="479.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (3 samples, 0.01%)</title><rect x="206.6" y="197" width="0.2" height="15.0" fill="rgb(221,43,26)" rx="2" ry="2" />
<text  x="209.63" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::operator* (2 samples, 0.01%)</title><rect x="1143.7" y="805" width="0.1" height="15.0" fill="rgb(212,131,50)" rx="2" ry="2" />
<text  x="1146.71" y="815.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::swap (10 samples, 0.05%)</title><rect x="890.1" y="437" width="0.6" height="15.0" fill="rgb(226,53,32)" rx="2" ry="2" />
<text  x="893.13" y="447.5" ></text>
</g>
<g >
<title>Game_Picture::ShowParams::~ShowParams (2 samples, 0.01%)</title><rect x="33.8" y="965" width="0.2" height="15.0" fill="rgb(214,140,2)" rx="2" ry="2" />
<text  x="36.84" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (3 samples, 0.01%)</title><rect x="497.8" y="661" width="0.2" height="15.0" fill="rgb(211,149,49)" rx="2" ry="2" />
<text  x="500.81" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="239.1" y="453" width="0.1" height="15.0" fill="rgb(244,221,25)" rx="2" ry="2" />
<text  x="242.10" y="463.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::__allocated_ptr (6 samples, 0.03%)</title><rect x="947.4" y="597" width="0.4" height="15.0" fill="rgb(239,187,40)" rx="2" ry="2" />
<text  x="950.44" y="607.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (5 samples, 0.02%)</title><rect x="1168.2" y="709" width="0.3" height="15.0" fill="rgb(239,124,51)" rx="2" ry="2" />
<text  x="1171.20" y="719.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (109 samples, 0.54%)</title><rect x="146.6" y="805" width="6.4" height="15.0" fill="rgb(248,200,24)" rx="2" ry="2" />
<text  x="149.64" y="815.5" ></text>
</g>
<g >
<title>Bitmap::Init (109 samples, 0.54%)</title><rect x="146.6" y="501" width="6.4" height="15.0" fill="rgb(227,34,52)" rx="2" ry="2" />
<text  x="149.64" y="511.5" ></text>
</g>
<g >
<title>Game_Interpreter::IsRunning (18 samples, 0.09%)</title><rect x="286.8" y="789" width="1.0" height="15.0" fill="rgb(243,176,53)" rx="2" ry="2" />
<text  x="289.78" y="799.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.02%)</title><rect x="785.6" y="469" width="0.2" height="15.0" fill="rgb(244,219,16)" rx="2" ry="2" />
<text  x="788.55" y="479.5" ></text>
</g>
<g >
<title>Bitmap::pixels (3 samples, 0.01%)</title><rect x="26.0" y="965" width="0.2" height="15.0" fill="rgb(252,109,10)" rx="2" ry="2" />
<text  x="29.03" y="975.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (11 samples, 0.05%)</title><rect x="186.4" y="421" width="0.6" height="15.0" fill="rgb(212,73,17)" rx="2" ry="2" />
<text  x="189.40" y="431.5" ></text>
</g>
<g >
<title>Sprite::SetTone (12 samples, 0.06%)</title><rect x="883.8" y="469" width="0.7" height="15.0" fill="rgb(226,31,52)" rx="2" ry="2" />
<text  x="886.78" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (8 samples, 0.04%)</title><rect x="498.6" y="661" width="0.5" height="15.0" fill="rgb(237,205,46)" rx="2" ry="2" />
<text  x="501.63" y="671.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate (2 samples, 0.01%)</title><rect x="94.4" y="965" width="0.1" height="15.0" fill="rgb(222,84,6)" rx="2" ry="2" />
<text  x="97.35" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (9 samples, 0.04%)</title><rect x="276.2" y="965" width="0.5" height="15.0" fill="rgb(234,37,18)" rx="2" ry="2" />
<text  x="279.17" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt;::begin (60 samples, 0.30%)</title><rect x="1113.8" y="757" width="3.5" height="15.0" fill="rgb(252,212,16)" rx="2" ry="2" />
<text  x="1116.81" y="767.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (440 samples, 2.17%)</title><rect x="161.5" y="821" width="25.7" height="15.0" fill="rgb(248,4,38)" rx="2" ry="2" />
<text  x="164.51" y="831.5" >F..</text>
</g>
<g >
<title>Game_Interpreter::ReserveSubcommandIndex (180 samples, 0.89%)</title><rect x="473.7" y="709" width="10.5" height="15.0" fill="rgb(252,105,5)" rx="2" ry="2" />
<text  x="476.73" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt;::end (50 samples, 0.25%)</title><rect x="1117.3" y="757" width="2.9" height="15.0" fill="rgb(247,57,17)" rx="2" ry="2" />
<text  x="1120.31" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator* (5 samples, 0.02%)</title><rect x="636.2" y="661" width="0.3" height="15.0" fill="rgb(233,197,44)" rx="2" ry="2" />
<text  x="639.20" y="671.5" ></text>
</g>
<g >
<title>std::forward&lt;std::_Placeholder&lt;1&gt; &gt; (2 samples, 0.01%)</title><rect x="96.1" y="965" width="0.1" height="15.0" fill="rgb(234,217,31)" rx="2" ry="2" />
<text  x="99.10" y="975.5" ></text>
</g>
<g >
<title>Game_Screen::GetFlashColor (10 samples, 0.05%)</title><rect x="964.0" y="693" width="0.6" height="15.0" fill="rgb(237,7,6)" rx="2" ry="2" />
<text  x="967.05" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.05%)</title><rect x="197.4" y="293" width="0.6" height="15.0" fill="rgb(225,225,7)" rx="2" ry="2" />
<text  x="200.42" y="303.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (40 samples, 0.20%)</title><rect x="976.6" y="693" width="2.4" height="15.0" fill="rgb(250,196,16)" rx="2" ry="2" />
<text  x="979.64" y="703.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (4 samples, 0.02%)</title><rect x="1167.9" y="757" width="0.2" height="15.0" fill="rgb(242,46,8)" rx="2" ry="2" />
<text  x="1170.91" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*, std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt; &gt;::operator++ (7 samples, 0.03%)</title><rect x="743.7" y="645" width="0.4" height="15.0" fill="rgb(214,212,48)" rx="2" ry="2" />
<text  x="746.70" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (6 samples, 0.03%)</title><rect x="921.2" y="389" width="0.4" height="15.0" fill="rgb(229,57,16)" rx="2" ry="2" />
<text  x="924.20" y="399.5" ></text>
</g>
<g >
<title>handle_mm_fault (84 samples, 0.41%)</title><rect x="246.8" y="373" width="4.9" height="15.0" fill="rgb(221,121,35)" rx="2" ry="2" />
<text  x="249.79" y="383.5" ></text>
</g>
<g >
<title>std::__weak_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__weak_count (16 samples, 0.08%)</title><rect x="937.0" y="501" width="0.9" height="15.0" fill="rgb(209,136,34)" rx="2" ry="2" />
<text  x="940.00" y="511.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (7 samples, 0.03%)</title><rect x="899.5" y="453" width="0.4" height="15.0" fill="rgb(229,15,18)" rx="2" ry="2" />
<text  x="902.46" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (35 samples, 0.17%)</title><rect x="1050.7" y="741" width="2.0" height="15.0" fill="rgb(250,88,1)" rx="2" ry="2" />
<text  x="1053.68" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (3 samples, 0.01%)</title><rect x="55.2" y="965" width="0.2" height="15.0" fill="rgb(236,178,14)" rx="2" ry="2" />
<text  x="58.24" y="975.5" ></text>
</g>
<g >
<title>operator new (86 samples, 0.42%)</title><rect x="710.1" y="629" width="5.0" height="15.0" fill="rgb(223,142,46)" rx="2" ry="2" />
<text  x="713.06" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (4 samples, 0.02%)</title><rect x="161.5" y="549" width="0.2" height="15.0" fill="rgb(228,211,21)" rx="2" ry="2" />
<text  x="164.51" y="559.5" ></text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;Bitmap&gt;, true&gt;::~_Sp_ebo_helper (3 samples, 0.01%)</title><rect x="73.0" y="965" width="0.2" height="15.0" fill="rgb(205,27,53)" rx="2" ry="2" />
<text  x="76.02" y="975.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (15 samples, 0.07%)</title><rect x="1181.1" y="645" width="0.9" height="15.0" fill="rgb(244,53,8)" rx="2" ry="2" />
<text  x="1184.08" y="655.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::end (9 samples, 0.04%)</title><rect x="209.1" y="373" width="0.5" height="15.0" fill="rgb(231,215,26)" rx="2" ry="2" />
<text  x="212.08" y="383.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (3 samples, 0.01%)</title><rect x="955.6" y="693" width="0.2" height="15.0" fill="rgb(237,71,49)" rx="2" ry="2" />
<text  x="958.60" y="703.5" ></text>
</g>
<g >
<title>__libc_start_main (15,519 samples, 76.67%)</title><rect x="278.2" y="965" width="904.7" height="15.0" fill="rgb(222,155,3)" rx="2" ry="2" />
<text  x="281.21" y="975.5" >__libc_start_main</text>
</g>
<g >
<title>Game_Map::GetNeedRefresh (2 samples, 0.01%)</title><rect x="32.6" y="965" width="0.1" height="15.0" fill="rgb(246,195,32)" rx="2" ry="2" />
<text  x="35.56" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (7 samples, 0.03%)</title><rect x="466.3" y="677" width="0.4" height="15.0" fill="rgb(244,196,48)" rx="2" ry="2" />
<text  x="469.27" y="687.5" ></text>
</g>
<g >
<title>std::find&lt;int const*, int&gt; (99 samples, 0.49%)</title><rect x="503.2" y="709" width="5.7" height="15.0" fill="rgb(253,52,13)" rx="2" ry="2" />
<text  x="506.17" y="719.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Impl::_Impl (3 samples, 0.01%)</title><rect x="864.7" y="357" width="0.2" height="15.0" fill="rgb(229,108,26)" rx="2" ry="2" />
<text  x="867.72" y="367.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (97 samples, 0.48%)</title><rect x="164.8" y="517" width="5.7" height="15.0" fill="rgb(253,166,25)" rx="2" ry="2" />
<text  x="167.83" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (2 samples, 0.01%)</title><rect x="129.4" y="965" width="0.1" height="15.0" fill="rgb(250,43,51)" rx="2" ry="2" />
<text  x="132.39" y="975.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (58 samples, 0.29%)</title><rect x="696.4" y="501" width="3.4" height="15.0" fill="rgb(232,62,40)" rx="2" ry="2" />
<text  x="699.42" y="511.5" ></text>
</g>
<g >
<title>unmap_page_range (4 samples, 0.02%)</title><rect x="212.9" y="197" width="0.2" height="15.0" fill="rgb(240,198,41)" rx="2" ry="2" />
<text  x="215.87" y="207.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_manager (92 samples, 0.45%)</title><rect x="682.3" y="613" width="5.3" height="15.0" fill="rgb(210,218,4)" rx="2" ry="2" />
<text  x="685.25" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (2 samples, 0.01%)</title><rect x="501.2" y="661" width="0.2" height="15.0" fill="rgb(222,227,1)" rx="2" ry="2" />
<text  x="504.25" y="671.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::operator bool (12 samples, 0.06%)</title><rect x="1141.4" y="789" width="0.7" height="15.0" fill="rgb(230,134,44)" rx="2" ry="2" />
<text  x="1144.38" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::operator[] (16 samples, 0.08%)</title><rect x="283.4" y="757" width="0.9" height="15.0" fill="rgb(211,201,38)" rx="2" ry="2" />
<text  x="286.40" y="767.5" ></text>
</g>
<g >
<title>page_fault (87 samples, 0.43%)</title><rect x="246.6" y="421" width="5.1" height="15.0" fill="rgb(205,79,40)" rx="2" ry="2" />
<text  x="249.62" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, FileRequestResult*&amp;&amp;&gt; (5 samples, 0.02%)</title><rect x="752.5" y="549" width="0.3" height="15.0" fill="rgb(213,26,2)" rx="2" ry="2" />
<text  x="755.50" y="559.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (68 samples, 0.34%)</title><rect x="203.0" y="853" width="4.0" height="15.0" fill="rgb(216,85,49)" rx="2" ry="2" />
<text  x="206.01" y="863.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (170 samples, 0.84%)</title><rect x="132.0" y="821" width="9.9" height="15.0" fill="rgb(241,195,5)" rx="2" ry="2" />
<text  x="134.95" y="831.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (35 samples, 0.17%)</title><rect x="253.9" y="293" width="2.0" height="15.0" fill="rgb(249,181,34)" rx="2" ry="2" />
<text  x="256.90" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (6 samples, 0.03%)</title><rect x="110.3" y="965" width="0.3" height="15.0" fill="rgb(233,40,11)" rx="2" ry="2" />
<text  x="113.27" y="975.5" ></text>
</g>
<g >
<title>__libc_recvmsg (5 samples, 0.02%)</title><rect x="1179.6" y="645" width="0.3" height="15.0" fill="rgb(242,174,48)" rx="2" ry="2" />
<text  x="1182.62" y="655.5" ></text>
</g>
<g >
<title>do_sys_poll (8 samples, 0.04%)</title><rect x="1180.2" y="549" width="0.5" height="15.0" fill="rgb(232,106,0)" rx="2" ry="2" />
<text  x="1183.21" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.02%)</title><rect x="1179.6" y="613" width="0.3" height="15.0" fill="rgb(212,80,19)" rx="2" ry="2" />
<text  x="1182.62" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (15 samples, 0.07%)</title><rect x="143.5" y="421" width="0.9" height="15.0" fill="rgb(246,162,44)" rx="2" ry="2" />
<text  x="146.49" y="431.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (2 samples, 0.01%)</title><rect x="72.2" y="965" width="0.1" height="15.0" fill="rgb(242,82,35)" rx="2" ry="2" />
<text  x="75.20" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (9 samples, 0.04%)</title><rect x="882.3" y="389" width="0.5" height="15.0" fill="rgb(235,185,13)" rx="2" ry="2" />
<text  x="885.32" y="399.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (5 samples, 0.02%)</title><rect x="975.9" y="677" width="0.3" height="15.0" fill="rgb(230,6,27)" rx="2" ry="2" />
<text  x="978.94" y="687.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (117 samples, 0.58%)</title><rect x="175.0" y="565" width="6.9" height="15.0" fill="rgb(224,50,10)" rx="2" ry="2" />
<text  x="178.03" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_poll (8 samples, 0.04%)</title><rect x="1180.2" y="565" width="0.5" height="15.0" fill="rgb(226,45,32)" rx="2" ry="2" />
<text  x="1183.21" y="575.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (100 samples, 0.49%)</title><rect x="188.1" y="341" width="5.9" height="15.0" fill="rgb(213,141,28)" rx="2" ry="2" />
<text  x="191.15" y="351.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (40 samples, 0.20%)</title><rect x="142.0" y="453" width="2.4" height="15.0" fill="rgb(226,71,14)" rx="2" ry="2" />
<text  x="145.04" y="463.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (68 samples, 0.34%)</title><rect x="203.0" y="805" width="4.0" height="15.0" fill="rgb(237,10,51)" rx="2" ry="2" />
<text  x="206.01" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (52 samples, 0.26%)</title><rect x="253.9" y="341" width="3.0" height="15.0" fill="rgb(245,211,25)" rx="2" ry="2" />
<text  x="256.90" y="351.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_destroy (44 samples, 0.22%)</title><rect x="194.4" y="437" width="2.6" height="15.0" fill="rgb(244,76,21)" rx="2" ry="2" />
<text  x="197.39" y="447.5" ></text>
</g>
<g >
<title>max&lt;int&gt; (2 samples, 0.01%)</title><rect x="968.6" y="677" width="0.1" height="15.0" fill="rgb(227,3,14)" rx="2" ry="2" />
<text  x="971.60" y="687.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (440 samples, 2.17%)</title><rect x="161.5" y="853" width="25.7" height="15.0" fill="rgb(251,118,21)" rx="2" ry="2" />
<text  x="164.51" y="863.5" >G..</text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (4 samples, 0.02%)</title><rect x="1003.5" y="693" width="0.2" height="15.0" fill="rgb(219,123,39)" rx="2" ry="2" />
<text  x="1006.46" y="703.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (2 samples, 0.01%)</title><rect x="922.5" y="469" width="0.1" height="15.0" fill="rgb(248,140,31)" rx="2" ry="2" />
<text  x="925.49" y="479.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandOptionGeneric (3 samples, 0.01%)</title><rect x="29.6" y="965" width="0.2" height="15.0" fill="rgb(251,55,54)" rx="2" ry="2" />
<text  x="32.59" y="975.5" ></text>
</g>
<g >
<title>[unknown] (2,511 samples, 12.40%)</title><rect x="131.0" y="981" width="146.3" height="15.0" fill="rgb(235,212,17)" rx="2" ry="2" />
<text  x="133.96" y="991.5" >[unknown]</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_valptr (2 samples, 0.01%)</title><rect x="70.5" y="965" width="0.1" height="15.0" fill="rgb(252,5,27)" rx="2" ry="2" />
<text  x="73.45" y="975.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (5 samples, 0.02%)</title><rect x="203.7" y="261" width="0.3" height="15.0" fill="rgb(208,168,5)" rx="2" ry="2" />
<text  x="206.71" y="271.5" ></text>
</g>
<g >
<title>variables (8 samples, 0.04%)</title><rect x="564.0" y="709" width="0.4" height="15.0" fill="rgb(217,40,18)" rx="2" ry="2" />
<text  x="566.97" y="719.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (4 samples, 0.02%)</title><rect x="63.0" y="965" width="0.3" height="15.0" fill="rgb(223,205,18)" rx="2" ry="2" />
<text  x="66.05" y="975.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="239.1" y="469" width="0.1" height="15.0" fill="rgb(214,180,26)" rx="2" ry="2" />
<text  x="242.10" y="479.5" ></text>
</g>
<g >
<title>page_remove_rmap (3 samples, 0.01%)</title><rect x="206.0" y="117" width="0.2" height="15.0" fill="rgb(208,124,28)" rx="2" ry="2" />
<text  x="209.04" y="127.5" ></text>
</g>
<g >
<title>__strlen_avx2 (4 samples, 0.02%)</title><rect x="194.2" y="469" width="0.2" height="15.0" fill="rgb(230,85,21)" rx="2" ry="2" />
<text  x="197.15" y="479.5" ></text>
</g>
<g >
<title>try_to_wake_up (8 samples, 0.04%)</title><rect x="23.1" y="805" width="0.4" height="15.0" fill="rgb(212,200,49)" rx="2" ry="2" />
<text  x="26.06" y="815.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (170 samples, 0.84%)</title><rect x="132.0" y="789" width="9.9" height="15.0" fill="rgb(222,101,22)" rx="2" ry="2" />
<text  x="134.95" y="799.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (3 samples, 0.01%)</title><rect x="468.4" y="677" width="0.2" height="15.0" fill="rgb(231,129,7)" rx="2" ry="2" />
<text  x="471.43" y="687.5" ></text>
</g>
<g >
<title>__sys_recvmsg (3 samples, 0.01%)</title><rect x="1182.4" y="613" width="0.2" height="15.0" fill="rgb(251,59,19)" rx="2" ry="2" />
<text  x="1185.42" y="623.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate (39 samples, 0.19%)</title><rect x="144.4" y="533" width="2.2" height="15.0" fill="rgb(238,160,2)" rx="2" ry="2" />
<text  x="147.37" y="543.5" ></text>
</g>
<g >
<title>error_entry (2 samples, 0.01%)</title><rect x="139.5" y="437" width="0.1" height="15.0" fill="rgb(239,119,22)" rx="2" ry="2" />
<text  x="142.53" y="447.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.03%)</title><rect x="194.0" y="485" width="0.4" height="15.0" fill="rgb(206,90,38)" rx="2" ry="2" />
<text  x="197.04" y="495.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (68 samples, 0.34%)</title><rect x="203.0" y="741" width="4.0" height="15.0" fill="rgb(212,145,48)" rx="2" ry="2" />
<text  x="206.01" y="751.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::destroy&lt;Bitmap&gt; (18 samples, 0.09%)</title><rect x="197.0" y="421" width="1.0" height="15.0" fill="rgb(238,220,18)" rx="2" ry="2" />
<text  x="199.95" y="431.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (62 samples, 0.31%)</title><rect x="264.6" y="309" width="3.6" height="15.0" fill="rgb(251,222,36)" rx="2" ry="2" />
<text  x="267.63" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::end@plt (3 samples, 0.01%)</title><rect x="637.4" y="661" width="0.2" height="15.0" fill="rgb(230,190,17)" rx="2" ry="2" />
<text  x="640.43" y="671.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (4 samples, 0.02%)</title><rect x="84.7" y="965" width="0.2" height="15.0" fill="rgb(217,70,10)" rx="2" ry="2" />
<text  x="87.68" y="975.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (3 samples, 0.01%)</title><rect x="725.5" y="661" width="0.2" height="15.0" fill="rgb(224,129,30)" rx="2" ry="2" />
<text  x="728.51" y="671.5" ></text>
</g>
<g >
<title>pixman_image_unref (63 samples, 0.31%)</title><rect x="203.3" y="405" width="3.7" height="15.0" fill="rgb(232,127,31)" rx="2" ry="2" />
<text  x="206.31" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (2 samples, 0.01%)</title><rect x="1002.8" y="693" width="0.1" height="15.0" fill="rgb(229,10,1)" rx="2" ry="2" />
<text  x="1005.76" y="703.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (11 samples, 0.05%)</title><rect x="1182.1" y="853" width="0.7" height="15.0" fill="rgb(212,82,9)" rx="2" ry="2" />
<text  x="1185.13" y="863.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::_M_ptr (10 samples, 0.05%)</title><rect x="89.2" y="965" width="0.5" height="15.0" fill="rgb(248,140,3)" rx="2" ry="2" />
<text  x="92.16" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (40 samples, 0.20%)</title><rect x="142.0" y="517" width="2.4" height="15.0" fill="rgb(234,117,52)" rx="2" ry="2" />
<text  x="145.04" y="527.5" ></text>
</g>
<g >
<title>__sched_text_start (8 samples, 0.04%)</title><rect x="1180.2" y="469" width="0.5" height="15.0" fill="rgb(213,95,34)" rx="2" ry="2" />
<text  x="1183.21" y="479.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (20 samples, 0.10%)</title><rect x="201.8" y="565" width="1.2" height="15.0" fill="rgb(240,88,43)" rx="2" ry="2" />
<text  x="204.85" y="575.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (59 samples, 0.29%)</title><rect x="268.7" y="869" width="3.5" height="15.0" fill="rgb(243,38,12)" rx="2" ry="2" />
<text  x="271.71" y="879.5" ></text>
</g>
<g >
<title>min&lt;int&gt; (4 samples, 0.02%)</title><rect x="56.3" y="965" width="0.3" height="15.0" fill="rgb(219,149,11)" rx="2" ry="2" />
<text  x="59.34" y="975.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::_M_ptr (10 samples, 0.05%)</title><rect x="736.7" y="629" width="0.6" height="15.0" fill="rgb(235,14,54)" rx="2" ry="2" />
<text  x="739.70" y="639.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (5 samples, 0.02%)</title><rect x="229.4" y="437" width="0.3" height="15.0" fill="rgb(214,29,51)" rx="2" ry="2" />
<text  x="232.42" y="447.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Tuple_impl&lt;1ul, std::_Placeholder&lt;1&gt; &gt;&amp;&gt; (2 samples, 0.01%)</title><rect x="725.3" y="581" width="0.2" height="15.0" fill="rgb(222,102,0)" rx="2" ry="2" />
<text  x="728.33" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.04%)</title><rect x="714.3" y="549" width="0.5" height="15.0" fill="rgb(213,0,4)" rx="2" ry="2" />
<text  x="717.32" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="286.9" y="757" width="0.1" height="15.0" fill="rgb(237,217,10)" rx="2" ry="2" />
<text  x="289.90" y="767.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (3 samples, 0.01%)</title><rect x="174.5" y="469" width="0.2" height="15.0" fill="rgb(240,47,2)" rx="2" ry="2" />
<text  x="177.51" y="479.5" ></text>
</g>
<g >
<title>poll (8 samples, 0.04%)</title><rect x="1180.2" y="629" width="0.5" height="15.0" fill="rgb(245,29,25)" rx="2" ry="2" />
<text  x="1183.21" y="639.5" ></text>
</g>
<g >
<title>unmap_page_range (11 samples, 0.05%)</title><rect x="205.6" y="133" width="0.6" height="15.0" fill="rgb(238,173,12)" rx="2" ry="2" />
<text  x="208.58" y="143.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandEndBranch (3 samples, 0.01%)</title><rect x="607.5" y="741" width="0.2" height="15.0" fill="rgb(245,74,41)" rx="2" ry="2" />
<text  x="610.52" y="751.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="280.4" y="789" width="0.1" height="15.0" fill="rgb(206,42,6)" rx="2" ry="2" />
<text  x="283.43" y="799.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (2 samples, 0.01%)</title><rect x="280.4" y="805" width="0.1" height="15.0" fill="rgb(217,196,16)" rx="2" ry="2" />
<text  x="283.43" y="815.5" ></text>
</g>
<g >
<title>std::allocator&lt;Bitmap&gt;::~allocator (2 samples, 0.01%)</title><rect x="870.7" y="373" width="0.1" height="15.0" fill="rgb(254,86,31)" rx="2" ry="2" />
<text  x="873.66" y="383.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (12 samples, 0.06%)</title><rect x="212.4" y="501" width="0.7" height="15.0" fill="rgb(226,26,6)" rx="2" ry="2" />
<text  x="215.40" y="511.5" ></text>
</g>
<g >
<title>error_entry (26 samples, 0.13%)</title><rect x="245.0" y="421" width="1.6" height="15.0" fill="rgb(218,214,13)" rx="2" ry="2" />
<text  x="248.04" y="431.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (122 samples, 0.60%)</title><rect x="496.0" y="709" width="7.1" height="15.0" fill="rgb(246,18,15)" rx="2" ry="2" />
<text  x="499.00" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (19 samples, 0.09%)</title><rect x="498.0" y="677" width="1.1" height="15.0" fill="rgb(218,19,32)" rx="2" ry="2" />
<text  x="500.98" y="687.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (2 samples, 0.01%)</title><rect x="181.4" y="469" width="0.2" height="15.0" fill="rgb(206,44,36)" rx="2" ry="2" />
<text  x="184.44" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (3 samples, 0.01%)</title><rect x="645.1" y="629" width="0.2" height="15.0" fill="rgb(250,128,16)" rx="2" ry="2" />
<text  x="648.12" y="639.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (79 samples, 0.39%)</title><rect x="142.0" y="869" width="4.6" height="15.0" fill="rgb(217,184,15)" rx="2" ry="2" />
<text  x="145.04" y="879.5" ></text>
</g>
<g >
<title>___sys_recvmsg (4 samples, 0.02%)</title><rect x="1179.6" y="565" width="0.3" height="15.0" fill="rgb(238,81,39)" rx="2" ry="2" />
<text  x="1182.62" y="575.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (85 samples, 0.42%)</title><rect x="991.7" y="677" width="4.9" height="15.0" fill="rgb(223,77,31)" rx="2" ry="2" />
<text  x="994.68" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::deallocate (27 samples, 0.13%)</title><rect x="268.7" y="373" width="1.6" height="15.0" fill="rgb(226,190,24)" rx="2" ry="2" />
<text  x="271.71" y="383.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;*&gt; (2 samples, 0.01%)</title><rect x="927.0" y="485" width="0.1" height="15.0" fill="rgb(242,206,35)" rx="2" ry="2" />
<text  x="930.03" y="495.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (184 samples, 0.91%)</title><rect x="926.0" y="517" width="10.8" height="15.0" fill="rgb(205,194,20)" rx="2" ry="2" />
<text  x="929.04" y="527.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (68 samples, 0.34%)</title><rect x="194.0" y="645" width="4.0" height="15.0" fill="rgb(216,115,34)" rx="2" ry="2" />
<text  x="197.04" y="655.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (79 samples, 0.39%)</title><rect x="142.0" y="821" width="4.6" height="15.0" fill="rgb(245,157,1)" rx="2" ry="2" />
<text  x="145.04" y="831.5" ></text>
</g>
<g >
<title>Game_Picture::Show (86 samples, 0.42%)</title><rect x="198.0" y="805" width="5.0" height="15.0" fill="rgb(216,227,40)" rx="2" ry="2" />
<text  x="201.00" y="815.5" ></text>
</g>
<g >
<title>Scene_Map::Update (68 samples, 0.34%)</title><rect x="194.0" y="901" width="4.0" height="15.0" fill="rgb(233,173,18)" rx="2" ry="2" />
<text  x="197.04" y="911.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::~_Sp_counted_base (2 samples, 0.01%)</title><rect x="947.3" y="581" width="0.1" height="15.0" fill="rgb(250,222,44)" rx="2" ry="2" />
<text  x="950.26" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.02%)</title><rect x="642.7" y="533" width="0.3" height="15.0" fill="rgb(224,182,8)" rx="2" ry="2" />
<text  x="645.73" y="543.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (79 samples, 0.39%)</title><rect x="142.0" y="693" width="4.6" height="15.0" fill="rgb(225,130,39)" rx="2" ry="2" />
<text  x="145.04" y="703.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_get_use_count (3 samples, 0.01%)</title><rect x="749.6" y="613" width="0.2" height="15.0" fill="rgb(223,227,26)" rx="2" ry="2" />
<text  x="752.64" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (37 samples, 0.18%)</title><rect x="216.3" y="501" width="2.2" height="15.0" fill="rgb(245,161,8)" rx="2" ry="2" />
<text  x="219.30" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (7 samples, 0.03%)</title><rect x="48.2" y="965" width="0.4" height="15.0" fill="rgb(205,43,35)" rx="2" ry="2" />
<text  x="51.18" y="975.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (4 samples, 0.02%)</title><rect x="109.3" y="965" width="0.2" height="15.0" fill="rgb(250,40,1)" rx="2" ry="2" />
<text  x="112.28" y="975.5" ></text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (8 samples, 0.04%)</title><rect x="1160.8" y="773" width="0.5" height="15.0" fill="rgb(227,54,44)" rx="2" ry="2" />
<text  x="1163.79" y="783.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (17 samples, 0.08%)</title><rect x="131.0" y="725" width="1.0" height="15.0" fill="rgb(240,145,35)" rx="2" ry="2" />
<text  x="133.96" y="735.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::destroy&lt;Bitmap&gt; (12 samples, 0.06%)</title><rect x="212.4" y="485" width="0.7" height="15.0" fill="rgb(219,59,6)" rx="2" ry="2" />
<text  x="215.40" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (78 samples, 0.39%)</title><rect x="660.6" y="661" width="4.5" height="15.0" fill="rgb(210,67,24)" rx="2" ry="2" />
<text  x="663.57" y="671.5" ></text>
</g>
<g >
<title>Bitmap::GetHeight (4 samples, 0.02%)</title><rect x="1156.1" y="773" width="0.2" height="15.0" fill="rgb(205,141,31)" rx="2" ry="2" />
<text  x="1159.07" y="783.5" ></text>
</g>
<g >
<title>std::forward&lt;int&amp;&gt; (5 samples, 0.02%)</title><rect x="869.7" y="357" width="0.3" height="15.0" fill="rgb(216,125,5)" rx="2" ry="2" />
<text  x="872.67" y="367.5" ></text>
</g>
<g >
<title>Bitmap::pitch (10 samples, 0.05%)</title><rect x="858.2" y="453" width="0.6" height="15.0" fill="rgb(214,81,30)" rx="2" ry="2" />
<text  x="861.19" y="463.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (107 samples, 0.53%)</title><rect x="258.4" y="325" width="6.2" height="15.0" fill="rgb(229,25,25)" rx="2" ry="2" />
<text  x="261.39" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (4 samples, 0.02%)</title><rect x="156.5" y="549" width="0.2" height="15.0" fill="rgb(205,2,11)" rx="2" ry="2" />
<text  x="159.49" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt;::_Iter_equals_val (2 samples, 0.01%)</title><rect x="606.5" y="661" width="0.1" height="15.0" fill="rgb(224,221,51)" rx="2" ry="2" />
<text  x="609.53" y="671.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (174 samples, 0.86%)</title><rect x="943.8" y="629" width="10.1" height="15.0" fill="rgb(227,150,7)" rx="2" ry="2" />
<text  x="946.76" y="639.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned (15 samples, 0.07%)</title><rect x="989.7" y="677" width="0.9" height="15.0" fill="rgb(254,204,20)" rx="2" ry="2" />
<text  x="992.70" y="687.5" ></text>
</g>
<g >
<title>Scene_Map::Update (59 samples, 0.29%)</title><rect x="268.7" y="885" width="3.5" height="15.0" fill="rgb(251,168,19)" rx="2" ry="2" />
<text  x="271.71" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (153 samples, 0.76%)</title><rect x="988.5" y="709" width="9.0" height="15.0" fill="rgb(235,57,32)" rx="2" ry="2" />
<text  x="991.53" y="719.5" ></text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (12 samples, 0.06%)</title><rect x="1150.6" y="789" width="0.7" height="15.0" fill="rgb(247,209,2)" rx="2" ry="2" />
<text  x="1153.59" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_value (5 samples, 0.02%)</title><rect x="810.7" y="421" width="0.3" height="15.0" fill="rgb(239,2,54)" rx="2" ry="2" />
<text  x="813.74" y="431.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (3 samples, 0.01%)</title><rect x="196.8" y="341" width="0.2" height="15.0" fill="rgb(208,4,23)" rx="2" ry="2" />
<text  x="199.78" y="351.5" ></text>
</g>
<g >
<title>__libc_recvmsg (4 samples, 0.02%)</title><rect x="1182.4" y="693" width="0.2" height="15.0" fill="rgb(239,165,53)" rx="2" ry="2" />
<text  x="1185.36" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.05%)</title><rect x="271.6" y="261" width="0.6" height="15.0" fill="rgb(230,20,9)" rx="2" ry="2" />
<text  x="274.57" y="271.5" ></text>
</g>
<g >
<title>operator new@plt (2 samples, 0.01%)</title><rect x="996.6" y="693" width="0.2" height="15.0" fill="rgb(252,82,27)" rx="2" ry="2" />
<text  x="999.64" y="703.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (2 samples, 0.01%)</title><rect x="1152.3" y="757" width="0.1" height="15.0" fill="rgb(251,45,27)" rx="2" ry="2" />
<text  x="1155.28" y="767.5" ></text>
</g>
<g >
<title>Game_Map::Refresh (248 samples, 1.23%)</title><rect x="1105.8" y="773" width="14.4" height="15.0" fill="rgb(211,96,52)" rx="2" ry="2" />
<text  x="1108.76" y="783.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (2 samples, 0.01%)</title><rect x="890.0" y="421" width="0.1" height="15.0" fill="rgb(207,169,9)" rx="2" ry="2" />
<text  x="893.02" y="431.5" ></text>
</g>
<g >
<title>[anon] (139 samples, 0.69%)</title><rect x="121.6" y="981" width="8.1" height="15.0" fill="rgb(229,59,10)" rx="2" ry="2" />
<text  x="124.63" y="991.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator!= (3 samples, 0.01%)</title><rect x="665.6" y="677" width="0.2" height="15.0" fill="rgb(233,54,29)" rx="2" ry="2" />
<text  x="668.64" y="687.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (440 samples, 2.17%)</title><rect x="161.5" y="725" width="25.7" height="15.0" fill="rgb(237,149,0)" rx="2" ry="2" />
<text  x="164.51" y="735.5" >s..</text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (146 samples, 0.72%)</title><rect x="153.0" y="677" width="8.5" height="15.0" fill="rgb(228,5,48)" rx="2" ry="2" />
<text  x="156.00" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (2 samples, 0.01%)</title><rect x="614.9" y="725" width="0.1" height="15.0" fill="rgb(249,44,7)" rx="2" ry="2" />
<text  x="617.92" y="735.5" ></text>
</g>
<g >
<title>FileRequestAsync::SetGraphicFile (9 samples, 0.04%)</title><rect x="27.8" y="965" width="0.5" height="15.0" fill="rgb(222,97,4)" rx="2" ry="2" />
<text  x="30.78" y="975.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocator&lt;int&gt; (2 samples, 0.01%)</title><rect x="953.4" y="597" width="0.2" height="15.0" fill="rgb(250,28,29)" rx="2" ry="2" />
<text  x="956.44" y="607.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.02%)</title><rect x="161.5" y="533" width="0.2" height="15.0" fill="rgb(215,89,3)" rx="2" ry="2" />
<text  x="164.51" y="543.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (86 samples, 0.42%)</title><rect x="198.0" y="613" width="5.0" height="15.0" fill="rgb(246,78,51)" rx="2" ry="2" />
<text  x="201.00" y="623.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Game_Picture*, false&gt;::_Head_base&lt;Game_Picture*&amp;&gt; (8 samples, 0.04%)</title><rect x="708.5" y="613" width="0.5" height="15.0" fill="rgb(205,141,34)" rx="2" ry="2" />
<text  x="711.49" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (7 samples, 0.03%)</title><rect x="1052.7" y="741" width="0.4" height="15.0" fill="rgb(253,97,17)" rx="2" ry="2" />
<text  x="1055.72" y="751.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (440 samples, 2.17%)</title><rect x="161.5" y="677" width="25.7" height="15.0" fill="rgb(234,32,10)" rx="2" ry="2" />
<text  x="164.51" y="687.5" >s..</text>
</g>
<g >
<title>FileFinder::MakePath (53 samples, 0.26%)</title><rect x="153.0" y="581" width="3.1" height="15.0" fill="rgb(233,128,37)" rx="2" ry="2" />
<text  x="156.00" y="591.5" ></text>
</g>
<g >
<title>native_write_msr (6 samples, 0.03%)</title><rect x="1055.0" y="565" width="0.3" height="15.0" fill="rgb(211,1,35)" rx="2" ry="2" />
<text  x="1057.99" y="575.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (63 samples, 0.31%)</title><rect x="203.3" y="549" width="3.7" height="15.0" fill="rgb(236,63,4)" rx="2" ry="2" />
<text  x="206.31" y="559.5" ></text>
</g>
<g >
<title>Transition::IsErased (15 samples, 0.07%)</title><rect x="735.4" y="661" width="0.8" height="15.0" fill="rgb(222,136,5)" rx="2" ry="2" />
<text  x="738.36" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (5 samples, 0.02%)</title><rect x="203.0" y="517" width="0.3" height="15.0" fill="rgb(225,153,23)" rx="2" ry="2" />
<text  x="206.01" y="527.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::_Placeholder&lt;1&gt;, true&gt;::_Head_base (3 samples, 0.01%)</title><rect x="65.2" y="965" width="0.2" height="15.0" fill="rgb(214,196,45)" rx="2" ry="2" />
<text  x="68.21" y="975.5" ></text>
</g>
<g >
<title>zap_page_range (7 samples, 0.03%)</title><rect x="212.7" y="229" width="0.4" height="15.0" fill="rgb(220,166,48)" rx="2" ry="2" />
<text  x="215.69" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int&gt; (11 samples, 0.05%)</title><rect x="692.6" y="565" width="0.6" height="15.0" fill="rgb(247,1,19)" rx="2" ry="2" />
<text  x="695.57" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (5 samples, 0.02%)</title><rect x="516.3" y="709" width="0.3" height="15.0" fill="rgb(240,16,28)" rx="2" ry="2" />
<text  x="519.29" y="719.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (77 samples, 0.38%)</title><rect x="17.4" y="901" width="4.5" height="15.0" fill="rgb(230,39,17)" rx="2" ry="2" />
<text  x="20.40" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::destroy&lt;int&gt; (3 samples, 0.01%)</title><rect x="52.0" y="965" width="0.2" height="15.0" fill="rgb(212,220,23)" rx="2" ry="2" />
<text  x="55.03" y="975.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (215 samples, 1.06%)</title><rect x="666.3" y="677" width="12.6" height="15.0" fill="rgb(218,60,0)" rx="2" ry="2" />
<text  x="669.34" y="687.5" ></text>
</g>
<g >
<title>pixman_image_get_stride@plt (5 samples, 0.02%)</title><rect x="858.5" y="437" width="0.3" height="15.0" fill="rgb(250,68,13)" rx="2" ry="2" />
<text  x="861.48" y="447.5" ></text>
</g>
<g >
<title>std::tuple&lt;FileRequestResult*&amp;&amp;&gt;::tuple&lt;FileRequestResult*, true&gt; (2 samples, 0.01%)</title><rect x="107.6" y="965" width="0.2" height="15.0" fill="rgb(252,188,19)" rx="2" ry="2" />
<text  x="110.64" y="975.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (105 samples, 0.52%)</title><rect x="207.0" y="789" width="6.1" height="15.0" fill="rgb(242,54,23)" rx="2" ry="2" />
<text  x="209.98" y="799.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (498 samples, 2.46%)</title><rect x="239.2" y="629" width="29.0" height="15.0" fill="rgb(219,191,4)" rx="2" ry="2" />
<text  x="242.21" y="639.5" >st..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (20 samples, 0.10%)</title><rect x="201.8" y="341" width="1.2" height="15.0" fill="rgb(254,150,14)" rx="2" ry="2" />
<text  x="204.85" y="351.5" ></text>
</g>
<g >
<title>apparmor_file_permission (2 samples, 0.01%)</title><rect x="22.9" y="869" width="0.1" height="15.0" fill="rgb(218,21,34)" rx="2" ry="2" />
<text  x="25.88" y="879.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (146 samples, 0.72%)</title><rect x="153.0" y="805" width="8.5" height="15.0" fill="rgb(210,143,32)" rx="2" ry="2" />
<text  x="156.00" y="815.5" ></text>
</g>
<g >
<title>do_syscall_64 (186 samples, 0.92%)</title><rect x="219.3" y="485" width="10.9" height="15.0" fill="rgb(220,6,6)" rx="2" ry="2" />
<text  x="222.34" y="495.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (117 samples, 0.58%)</title><rect x="187.2" y="805" width="6.8" height="15.0" fill="rgb(218,27,2)" rx="2" ry="2" />
<text  x="190.22" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (10 samples, 0.05%)</title><rect x="174.1" y="501" width="0.6" height="15.0" fill="rgb(216,172,11)" rx="2" ry="2" />
<text  x="177.10" y="511.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (2 samples, 0.01%)</title><rect x="279.4" y="821" width="0.1" height="15.0" fill="rgb(246,48,42)" rx="2" ry="2" />
<text  x="282.38" y="831.5" ></text>
</g>
<g >
<title>Sdl2Ui::ProcessEvents (60 samples, 0.30%)</title><rect x="1179.3" y="869" width="3.5" height="15.0" fill="rgb(217,18,32)" rx="2" ry="2" />
<text  x="1182.27" y="879.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (86 samples, 0.42%)</title><rect x="198.0" y="629" width="5.0" height="15.0" fill="rgb(237,41,36)" rx="2" ry="2" />
<text  x="201.00" y="639.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (15 samples, 0.07%)</title><rect x="605.7" y="693" width="0.8" height="15.0" fill="rgb(252,99,11)" rx="2" ry="2" />
<text  x="608.65" y="703.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (48 samples, 0.24%)</title><rect x="1179.3" y="821" width="2.8" height="15.0" fill="rgb(239,215,5)" rx="2" ry="2" />
<text  x="1182.33" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char32_t&gt;::allocate (4 samples, 0.02%)</title><rect x="986.1" y="629" width="0.3" height="15.0" fill="rgb(226,202,7)" rx="2" ry="2" />
<text  x="989.14" y="639.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (2 samples, 0.01%)</title><rect x="71.6" y="965" width="0.1" height="15.0" fill="rgb(222,80,41)" rx="2" ry="2" />
<text  x="74.62" y="975.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (5 samples, 0.02%)</title><rect x="815.3" y="357" width="0.3" height="15.0" fill="rgb(227,175,1)" rx="2" ry="2" />
<text  x="818.28" y="367.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (13 samples, 0.06%)</title><rect x="1172.7" y="741" width="0.8" height="15.0" fill="rgb(214,111,53)" rx="2" ry="2" />
<text  x="1175.74" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (62 samples, 0.31%)</title><rect x="170.5" y="501" width="3.6" height="15.0" fill="rgb(252,136,50)" rx="2" ry="2" />
<text  x="173.49" y="511.5" ></text>
</g>
<g >
<title>Player::Update (117 samples, 0.58%)</title><rect x="187.2" y="933" width="6.8" height="15.0" fill="rgb(233,114,38)" rx="2" ry="2" />
<text  x="190.22" y="943.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Impl::_Impl (5 samples, 0.02%)</title><rect x="691.6" y="565" width="0.3" height="15.0" fill="rgb(236,115,11)" rx="2" ry="2" />
<text  x="694.58" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare@plt (3 samples, 0.01%)</title><rect x="809.4" y="357" width="0.2" height="15.0" fill="rgb(231,181,13)" rx="2" ry="2" />
<text  x="812.39" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_valptr (6 samples, 0.03%)</title><rect x="792.0" y="389" width="0.4" height="15.0" fill="rgb(209,46,23)" rx="2" ry="2" />
<text  x="795.02" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (170 samples, 0.84%)</title><rect x="132.0" y="581" width="9.9" height="15.0" fill="rgb(210,144,42)" rx="2" ry="2" />
<text  x="134.95" y="591.5" ></text>
</g>
<g >
<title>Opacity::IsTransparent (3 samples, 0.01%)</title><rect x="831.7" y="453" width="0.1" height="15.0" fill="rgb(205,25,24)" rx="2" ry="2" />
<text  x="834.66" y="463.5" ></text>
</g>
<g >
<title>FileRequestResult::~FileRequestResult (57 samples, 0.28%)</title><rect x="740.3" y="645" width="3.3" height="15.0" fill="rgb(229,65,37)" rx="2" ry="2" />
<text  x="743.26" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;Bitmap&gt;::_M_ptr (3 samples, 0.01%)</title><rect x="865.0" y="341" width="0.2" height="15.0" fill="rgb(225,142,25)" rx="2" ry="2" />
<text  x="868.01" y="351.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::size (3 samples, 0.01%)</title><rect x="100.7" y="965" width="0.2" height="15.0" fill="rgb(247,126,17)" rx="2" ry="2" />
<text  x="103.71" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="421.0" y="741" width="0.1" height="15.0" fill="rgb(229,71,13)" rx="2" ry="2" />
<text  x="423.98" y="751.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (105 samples, 0.52%)</title><rect x="207.0" y="837" width="6.1" height="15.0" fill="rgb(246,78,47)" rx="2" ry="2" />
<text  x="209.98" y="847.5" ></text>
</g>
<g >
<title>Sprite::BlitScreenIntern (6 samples, 0.03%)</title><rect x="278.4" y="789" width="0.3" height="15.0" fill="rgb(211,40,16)" rx="2" ry="2" />
<text  x="281.39" y="799.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (15 samples, 0.07%)</title><rect x="814.7" y="389" width="0.9" height="15.0" fill="rgb(224,77,17)" rx="2" ry="2" />
<text  x="817.70" y="399.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (62 samples, 0.31%)</title><rect x="17.9" y="757" width="3.6" height="15.0" fill="rgb(207,171,7)" rx="2" ry="2" />
<text  x="20.87" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (2 samples, 0.01%)</title><rect x="815.7" y="373" width="0.1" height="15.0" fill="rgb(229,142,6)" rx="2" ry="2" />
<text  x="818.69" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (8 samples, 0.04%)</title><rect x="606.1" y="677" width="0.4" height="15.0" fill="rgb(250,34,49)" rx="2" ry="2" />
<text  x="609.06" y="687.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (59 samples, 0.29%)</title><rect x="268.7" y="581" width="3.5" height="15.0" fill="rgb(234,14,7)" rx="2" ry="2" />
<text  x="271.71" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.03%)</title><rect x="645.8" y="629" width="0.3" height="15.0" fill="rgb(210,117,49)" rx="2" ry="2" />
<text  x="648.76" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (6 samples, 0.03%)</title><rect x="174.7" y="517" width="0.3" height="15.0" fill="rgb(253,14,14)" rx="2" ry="2" />
<text  x="177.68" y="527.5" ></text>
</g>
<g >
<title>Component::Component (3 samples, 0.01%)</title><rect x="869.0" y="293" width="0.1" height="15.0" fill="rgb(213,95,7)" rx="2" ry="2" />
<text  x="871.97" y="303.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandErasePicture (4 samples, 0.02%)</title><rect x="610.1" y="741" width="0.2" height="15.0" fill="rgb(238,9,41)" rx="2" ry="2" />
<text  x="613.08" y="751.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (105 samples, 0.52%)</title><rect x="207.0" y="757" width="6.1" height="15.0" fill="rgb(215,92,16)" rx="2" ry="2" />
<text  x="209.98" y="767.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (36 samples, 0.18%)</title><rect x="179.3" y="469" width="2.1" height="15.0" fill="rgb(211,10,50)" rx="2" ry="2" />
<text  x="182.35" y="479.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (3,453 samples, 17.06%)</title><rect x="737.6" y="693" width="201.3" height="15.0" fill="rgb(211,207,31)" rx="2" ry="2" />
<text  x="740.58" y="703.5" >FileRequestAsync::Start</text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (146 samples, 0.72%)</title><rect x="153.0" y="869" width="8.5" height="15.0" fill="rgb(205,100,10)" rx="2" ry="2" />
<text  x="156.00" y="879.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::~_Head_base (7 samples, 0.03%)</title><rect x="824.0" y="421" width="0.4" height="15.0" fill="rgb(205,185,47)" rx="2" ry="2" />
<text  x="826.97" y="431.5" ></text>
</g>
<g >
<title>variables (3 samples, 0.01%)</title><rect x="593.8" y="709" width="0.2" height="15.0" fill="rgb(254,127,47)" rx="2" ry="2" />
<text  x="596.82" y="719.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::get (2 samples, 0.01%)</title><rect x="891.1" y="469" width="0.1" height="15.0" fill="rgb(206,158,37)" rx="2" ry="2" />
<text  x="894.12" y="479.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (2 samples, 0.01%)</title><rect x="687.6" y="613" width="0.1" height="15.0" fill="rgb(247,70,37)" rx="2" ry="2" />
<text  x="690.62" y="623.5" ></text>
</g>
<g >
<title>Game_Map::IsAnyEventStarting (30 samples, 0.15%)</title><rect x="1146.0" y="773" width="1.8" height="15.0" fill="rgb(218,14,26)" rx="2" ry="2" />
<text  x="1149.05" y="783.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (17 samples, 0.08%)</title><rect x="131.0" y="661" width="1.0" height="15.0" fill="rgb(219,132,36)" rx="2" ry="2" />
<text  x="133.96" y="671.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::get (2 samples, 0.01%)</title><rect x="736.2" y="661" width="0.2" height="15.0" fill="rgb(253,124,42)" rx="2" ry="2" />
<text  x="739.23" y="671.5" ></text>
</g>
<g >
<title>Sdl2Ui::SetTitle (2 samples, 0.01%)</title><rect x="279.4" y="837" width="0.1" height="15.0" fill="rgb(236,24,39)" rx="2" ry="2" />
<text  x="282.38" y="847.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (17 samples, 0.08%)</title><rect x="131.0" y="437" width="1.0" height="15.0" fill="rgb(246,208,3)" rx="2" ry="2" />
<text  x="133.96" y="447.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (170 samples, 0.84%)</title><rect x="132.0" y="613" width="9.9" height="15.0" fill="rgb(214,98,38)" rx="2" ry="2" />
<text  x="134.95" y="623.5" ></text>
</g>
<g >
<title>pick_next_task_idle (2 samples, 0.01%)</title><rect x="21.7" y="837" width="0.1" height="15.0" fill="rgb(243,123,50)" rx="2" ry="2" />
<text  x="24.72" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator++ (22 samples, 0.11%)</title><rect x="771.2" y="421" width="1.2" height="15.0" fill="rgb(217,61,10)" rx="2" ry="2" />
<text  x="774.15" y="431.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (109 samples, 0.54%)</title><rect x="146.6" y="901" width="6.4" height="15.0" fill="rgb(230,54,34)" rx="2" ry="2" />
<text  x="149.64" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::clear (225 samples, 1.11%)</title><rect x="924.8" y="645" width="13.1" height="15.0" fill="rgb(250,172,25)" rx="2" ry="2" />
<text  x="927.82" y="655.5" ></text>
</g>
<g >
<title>Bitmap::Create (18 samples, 0.09%)</title><rect x="232.7" y="581" width="1.0" height="15.0" fill="rgb(214,171,28)" rx="2" ry="2" />
<text  x="235.69" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (12 samples, 0.06%)</title><rect x="212.4" y="309" width="0.7" height="15.0" fill="rgb(229,172,38)" rx="2" ry="2" />
<text  x="215.40" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::deallocate (27 samples, 0.13%)</title><rect x="268.7" y="389" width="1.6" height="15.0" fill="rgb(226,49,51)" rx="2" ry="2" />
<text  x="271.71" y="399.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;Bitmap&gt;&amp;&gt; (7 samples, 0.03%)</title><rect x="104.3" y="965" width="0.4" height="15.0" fill="rgb(231,211,23)" rx="2" ry="2" />
<text  x="107.32" y="975.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::__allocated_ptr (2 samples, 0.01%)</title><rect x="76.9" y="965" width="0.1" height="15.0" fill="rgb(222,181,0)" rx="2" ry="2" />
<text  x="79.92" y="975.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (4 samples, 0.02%)</title><rect x="970.8" y="613" width="0.2" height="15.0" fill="rgb(244,153,29)" rx="2" ry="2" />
<text  x="973.81" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::get (4 samples, 0.02%)</title><rect x="737.3" y="645" width="0.2" height="15.0" fill="rgb(250,139,51)" rx="2" ry="2" />
<text  x="740.28" y="655.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_M_head (2 samples, 0.01%)</title><rect x="65.1" y="965" width="0.1" height="15.0" fill="rgb(251,92,21)" rx="2" ry="2" />
<text  x="68.09" y="975.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator() (4 samples, 0.02%)</title><rect x="71.2" y="965" width="0.2" height="15.0" fill="rgb(206,54,1)" rx="2" ry="2" />
<text  x="74.21" y="975.5" ></text>
</g>
<g >
<title>udev_monitor_get_fd (2 samples, 0.01%)</title><rect x="1180.7" y="741" width="0.1" height="15.0" fill="rgb(240,57,4)" rx="2" ry="2" />
<text  x="1183.73" y="751.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Impl::_M_alloc (4 samples, 0.02%)</title><rect x="904.4" y="389" width="0.2" height="15.0" fill="rgb(233,161,19)" rx="2" ry="2" />
<text  x="907.36" y="399.5" ></text>
</g>
<g >
<title>MakeFlashColor (7 samples, 0.03%)</title><rect x="876.5" y="453" width="0.4" height="15.0" fill="rgb(240,157,7)" rx="2" ry="2" />
<text  x="879.49" y="463.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (91 samples, 0.45%)</title><rect x="181.9" y="533" width="5.3" height="15.0" fill="rgb(227,41,40)" rx="2" ry="2" />
<text  x="184.85" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_value (3 samples, 0.01%)</title><rect x="125.4" y="965" width="0.2" height="15.0" fill="rgb(231,47,49)" rx="2" ry="2" />
<text  x="128.42" y="975.5" ></text>
</g>
<g >
<title>Game_Map::GetDisplayX (10 samples, 0.05%)</title><rect x="632.4" y="709" width="0.5" height="15.0" fill="rgb(219,229,28)" rx="2" ry="2" />
<text  x="635.35" y="719.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (79 samples, 0.39%)</title><rect x="142.0" y="805" width="4.6" height="15.0" fill="rgb(224,94,18)" rx="2" ry="2" />
<text  x="145.04" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (3 samples, 0.01%)</title><rect x="1104.9" y="757" width="0.2" height="15.0" fill="rgb(253,35,42)" rx="2" ry="2" />
<text  x="1107.89" y="767.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (44 samples, 0.22%)</title><rect x="199.3" y="533" width="2.5" height="15.0" fill="rgb(241,109,46)" rx="2" ry="2" />
<text  x="202.28" y="543.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (105 samples, 0.52%)</title><rect x="863.8" y="373" width="6.2" height="15.0" fill="rgb(243,65,13)" rx="2" ry="2" />
<text  x="866.84" y="383.5" ></text>
</g>
<g >
<title>std::find&lt;int const*, int&gt; (11 samples, 0.05%)</title><rect x="606.5" y="693" width="0.7" height="15.0" fill="rgb(247,10,0)" rx="2" ry="2" />
<text  x="609.53" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (32 samples, 0.16%)</title><rect x="713.1" y="581" width="1.9" height="15.0" fill="rgb(254,143,1)" rx="2" ry="2" />
<text  x="716.15" y="591.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (72 samples, 0.36%)</title><rect x="157.3" y="581" width="4.2" height="15.0" fill="rgb(236,46,47)" rx="2" ry="2" />
<text  x="160.31" y="591.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::~_Sp_counted_base (2 samples, 0.01%)</title><rect x="71.9" y="965" width="0.1" height="15.0" fill="rgb(227,81,38)" rx="2" ry="2" />
<text  x="74.91" y="975.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.01%)</title><rect x="152.8" y="405" width="0.1" height="15.0" fill="rgb(252,124,22)" rx="2" ry="2" />
<text  x="155.82" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::deallocate (11 samples, 0.05%)</title><rect x="905.9" y="373" width="0.6" height="15.0" fill="rgb(231,162,24)" rx="2" ry="2" />
<text  x="908.87" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt; (8 samples, 0.04%)</title><rect x="1144.1" y="805" width="0.4" height="15.0" fill="rgb(227,78,42)" rx="2" ry="2" />
<text  x="1147.06" y="815.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="272.8" y="965" width="0.1" height="15.0" fill="rgb(207,200,24)" rx="2" ry="2" />
<text  x="275.79" y="975.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (170 samples, 0.84%)</title><rect x="132.0" y="965" width="9.9" height="15.0" fill="rgb(225,90,25)" rx="2" ry="2" />
<text  x="134.95" y="975.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (62 samples, 0.31%)</title><rect x="194.4" y="469" width="3.6" height="15.0" fill="rgb(226,13,4)" rx="2" ry="2" />
<text  x="197.39" y="479.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustId (5 samples, 0.02%)</title><rect x="985.0" y="709" width="0.3" height="15.0" fill="rgb(231,151,51)" rx="2" ry="2" />
<text  x="987.98" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (3 samples, 0.01%)</title><rect x="115.4" y="965" width="0.2" height="15.0" fill="rgb(205,120,16)" rx="2" ry="2" />
<text  x="118.40" y="975.5" ></text>
</g>
<g >
<title>strlen@plt (2 samples, 0.01%)</title><rect x="816.2" y="437" width="0.1" height="15.0" fill="rgb(238,168,28)" rx="2" ry="2" />
<text  x="819.21" y="447.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (5 samples, 0.02%)</title><rect x="279.1" y="805" width="0.3" height="15.0" fill="rgb(243,128,32)" rx="2" ry="2" />
<text  x="282.09" y="815.5" ></text>
</g>
<g >
<title>SDL_GetTicks (2 samples, 0.01%)</title><rect x="784.3" y="453" width="0.1" height="15.0" fill="rgb(252,139,41)" rx="2" ry="2" />
<text  x="787.27" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (24 samples, 0.12%)</title><rect x="1103.5" y="757" width="1.4" height="15.0" fill="rgb(227,185,45)" rx="2" ry="2" />
<text  x="1106.49" y="767.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_get_pointer (3 samples, 0.01%)</title><rect x="924.3" y="613" width="0.2" height="15.0" fill="rgb(253,100,44)" rx="2" ry="2" />
<text  x="927.29" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::operator (3 samples, 0.01%)</title><rect x="736.4" y="661" width="0.1" height="15.0" fill="rgb(249,87,34)" rx="2" ry="2" />
<text  x="739.35" y="671.5" ></text>
</g>
<g >
<title>_XEventsQueued (9 samples, 0.04%)</title><rect x="1179.5" y="757" width="0.5" height="15.0" fill="rgb(214,227,48)" rx="2" ry="2" />
<text  x="1182.51" y="767.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, FileRequestResult*&amp;&amp;&gt; (12 samples, 0.06%)</title><rect x="752.1" y="565" width="0.7" height="15.0" fill="rgb(241,17,31)" rx="2" ry="2" />
<text  x="755.09" y="575.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (68 samples, 0.34%)</title><rect x="194.0" y="789" width="4.0" height="15.0" fill="rgb(239,116,27)" rx="2" ry="2" />
<text  x="197.04" y="799.5" ></text>
</g>
<g >
<title>std::_Bit_reference::_Bit_reference (2 samples, 0.01%)</title><rect x="284.2" y="725" width="0.1" height="15.0" fill="rgb(217,59,11)" rx="2" ry="2" />
<text  x="287.22" y="735.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (63 samples, 0.31%)</title><rect x="819.9" y="453" width="3.7" height="15.0" fill="rgb(207,99,32)" rx="2" ry="2" />
<text  x="822.89" y="463.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::~__allocated_ptr (97 samples, 0.48%)</title><rect x="947.8" y="597" width="5.6" height="15.0" fill="rgb(211,13,2)" rx="2" ry="2" />
<text  x="950.79" y="607.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (20 samples, 0.10%)</title><rect x="613.3" y="725" width="1.2" height="15.0" fill="rgb(232,1,39)" rx="2" ry="2" />
<text  x="616.29" y="735.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (51 samples, 0.25%)</title><rect x="1127.2" y="757" width="2.9" height="15.0" fill="rgb(225,95,39)" rx="2" ry="2" />
<text  x="1130.16" y="767.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, FileRequestResult*&amp;&amp;&gt; (2 samples, 0.01%)</title><rect x="79.5" y="965" width="0.1" height="15.0" fill="rgb(208,158,54)" rx="2" ry="2" />
<text  x="82.49" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_S_key (3 samples, 0.01%)</title><rect x="210.4" y="325" width="0.1" height="15.0" fill="rgb(248,45,21)" rx="2" ry="2" />
<text  x="213.36" y="335.5" ></text>
</g>
<g >
<title>unmapped_area_topdown (2 samples, 0.01%)</title><rect x="136.8" y="261" width="0.1" height="15.0" fill="rgb(224,166,47)" rx="2" ry="2" />
<text  x="139.79" y="271.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (14 samples, 0.07%)</title><rect x="744.6" y="613" width="0.8" height="15.0" fill="rgb(219,109,39)" rx="2" ry="2" />
<text  x="747.57" y="623.5" ></text>
</g>
<g >
<title>Game_Map::GetNeedRefresh (10 samples, 0.05%)</title><rect x="1105.2" y="773" width="0.6" height="15.0" fill="rgb(216,107,19)" rx="2" ry="2" />
<text  x="1108.18" y="783.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (2 samples, 0.01%)</title><rect x="80.0" y="965" width="0.1" height="15.0" fill="rgb(240,158,25)" rx="2" ry="2" />
<text  x="83.01" y="975.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (170 samples, 0.84%)</title><rect x="132.0" y="901" width="9.9" height="15.0" fill="rgb(225,132,52)" rx="2" ry="2" />
<text  x="134.95" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (3 samples, 0.01%)</title><rect x="421.1" y="741" width="0.2" height="15.0" fill="rgb(234,193,7)" rx="2" ry="2" />
<text  x="424.09" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_valptr (3 samples, 0.01%)</title><rect x="777.4" y="437" width="0.2" height="15.0" fill="rgb(214,46,10)" rx="2" ry="2" />
<text  x="780.39" y="447.5" ></text>
</g>
<g >
<title>Bitmap::initialize_formats (19 samples, 0.09%)</title><rect x="140.8" y="517" width="1.1" height="15.0" fill="rgb(254,175,29)" rx="2" ry="2" />
<text  x="143.75" y="527.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (17 samples, 0.08%)</title><rect x="797.6" y="341" width="1.0" height="15.0" fill="rgb(250,191,28)" rx="2" ry="2" />
<text  x="800.56" y="351.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (6 samples, 0.03%)</title><rect x="938.9" y="677" width="0.4" height="15.0" fill="rgb(221,22,46)" rx="2" ry="2" />
<text  x="941.93" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (11 samples, 0.05%)</title><rect x="336.4" y="741" width="0.6" height="15.0" fill="rgb(232,171,38)" rx="2" ry="2" />
<text  x="339.39" y="751.5" ></text>
</g>
<g >
<title>__fget (3 samples, 0.01%)</title><rect x="16.7" y="885" width="0.2" height="15.0" fill="rgb(214,84,39)" rx="2" ry="2" />
<text  x="19.70" y="895.5" ></text>
</g>
<g >
<title>std::_Bit_reference::_Bit_reference (3 samples, 0.01%)</title><rect x="58.6" y="965" width="0.1" height="15.0" fill="rgb(246,225,24)" rx="2" ry="2" />
<text  x="61.56" y="975.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="986.2" y="581" width="0.2" height="15.0" fill="rgb(245,105,6)" rx="2" ry="2" />
<text  x="989.20" y="591.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (5 samples, 0.02%)</title><rect x="27.5" y="965" width="0.3" height="15.0" fill="rgb(221,72,7)" rx="2" ry="2" />
<text  x="30.49" y="975.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (53 samples, 0.26%)</title><rect x="893.7" y="453" width="3.1" height="15.0" fill="rgb(244,51,2)" rx="2" ry="2" />
<text  x="896.75" y="463.5" ></text>
</g>
<g >
<title>Cache::Picture (36 samples, 0.18%)</title><rect x="207.0" y="581" width="2.1" height="15.0" fill="rgb(251,129,54)" rx="2" ry="2" />
<text  x="209.98" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (2 samples, 0.01%)</title><rect x="1160.7" y="741" width="0.1" height="15.0" fill="rgb(235,174,0)" rx="2" ry="2" />
<text  x="1163.68" y="751.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_destroy (27 samples, 0.13%)</title><rect x="268.7" y="421" width="1.6" height="15.0" fill="rgb(223,119,46)" rx="2" ry="2" />
<text  x="271.71" y="431.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.05%)</title><rect x="939.4" y="677" width="0.6" height="15.0" fill="rgb(253,182,48)" rx="2" ry="2" />
<text  x="942.39" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (97 samples, 0.48%)</title><rect x="164.8" y="469" width="5.7" height="15.0" fill="rgb(223,193,8)" rx="2" ry="2" />
<text  x="167.83" y="479.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (3 samples, 0.01%)</title><rect x="783.9" y="421" width="0.2" height="15.0" fill="rgb(212,80,37)" rx="2" ry="2" />
<text  x="786.92" y="431.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (17 samples, 0.08%)</title><rect x="131.0" y="709" width="1.0" height="15.0" fill="rgb(252,84,5)" rx="2" ry="2" />
<text  x="133.96" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (3 samples, 0.01%)</title><rect x="1006.0" y="725" width="0.2" height="15.0" fill="rgb(253,164,48)" rx="2" ry="2" />
<text  x="1009.02" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (26 samples, 0.13%)</title><rect x="1022.9" y="693" width="1.5" height="15.0" fill="rgb(250,124,48)" rx="2" ry="2" />
<text  x="1025.93" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (38 samples, 0.19%)</title><rect x="213.1" y="533" width="2.2" height="15.0" fill="rgb(252,191,46)" rx="2" ry="2" />
<text  x="216.10" y="543.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (52 samples, 0.26%)</title><rect x="253.9" y="373" width="3.0" height="15.0" fill="rgb(245,86,19)" rx="2" ry="2" />
<text  x="256.90" y="383.5" ></text>
</g>
<g >
<title>Game_Picture::SetNonEffectParams (7 samples, 0.03%)</title><rect x="616.6" y="709" width="0.4" height="15.0" fill="rgb(232,133,13)" rx="2" ry="2" />
<text  x="619.56" y="719.5" ></text>
</g>
<g >
<title>std::_Bit_const_iterator::_Bit_const_iterator (5 samples, 0.02%)</title><rect x="286.0" y="725" width="0.3" height="15.0" fill="rgb(235,202,4)" rx="2" ry="2" />
<text  x="288.97" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (5 samples, 0.02%)</title><rect x="496.7" y="677" width="0.3" height="15.0" fill="rgb(244,54,6)" rx="2" ry="2" />
<text  x="499.70" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_M_lower_bound (53 samples, 0.26%)</title><rect x="161.7" y="565" width="3.1" height="15.0" fill="rgb(224,100,49)" rx="2" ry="2" />
<text  x="164.74" y="575.5" ></text>
</g>
<g >
<title>Bitmap::GetOperator (2 samples, 0.01%)</title><rect x="872.4" y="469" width="0.1" height="15.0" fill="rgb(229,227,33)" rx="2" ry="2" />
<text  x="875.41" y="479.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (445 samples, 2.20%)</title><rect x="831.8" y="453" width="26.0" height="15.0" fill="rgb(250,110,13)" rx="2" ry="2" />
<text  x="834.84" y="463.5" >p..</text>
</g>
<g >
<title>FileRequestAsync::Start (68 samples, 0.34%)</title><rect x="194.0" y="725" width="4.0" height="15.0" fill="rgb(250,168,48)" rx="2" ry="2" />
<text  x="197.04" y="735.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, bool&gt;::_M_head (3 samples, 0.01%)</title><rect x="798.4" y="309" width="0.2" height="15.0" fill="rgb(220,221,18)" rx="2" ry="2" />
<text  x="801.38" y="319.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (10 samples, 0.05%)</title><rect x="156.7" y="565" width="0.6" height="15.0" fill="rgb(236,0,23)" rx="2" ry="2" />
<text  x="159.73" y="575.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_destroy (165 samples, 0.82%)</title><rect x="927.1" y="485" width="9.7" height="15.0" fill="rgb(216,192,0)" rx="2" ry="2" />
<text  x="930.15" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (5 samples, 0.02%)</title><rect x="893.5" y="453" width="0.2" height="15.0" fill="rgb(250,146,27)" rx="2" ry="2" />
<text  x="896.46" y="463.5" ></text>
</g>
<g >
<title>do_nanosleep (18 samples, 0.09%)</title><rect x="1181.0" y="709" width="1.1" height="15.0" fill="rgb(254,139,5)" rx="2" ry="2" />
<text  x="1184.02" y="719.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (3 samples, 0.01%)</title><rect x="205.3" y="69" width="0.2" height="15.0" fill="rgb(243,53,35)" rx="2" ry="2" />
<text  x="208.29" y="79.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;int, std::allocator&lt;int&gt;, int&gt; (2 samples, 0.01%)</title><rect x="239.1" y="597" width="0.1" height="15.0" fill="rgb(226,113,7)" rx="2" ry="2" />
<text  x="242.10" y="607.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (2 samples, 0.01%)</title><rect x="819.4" y="437" width="0.1" height="15.0" fill="rgb(253,205,26)" rx="2" ry="2" />
<text  x="822.36" y="447.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (4 samples, 0.02%)</title><rect x="161.5" y="597" width="0.2" height="15.0" fill="rgb(209,161,31)" rx="2" ry="2" />
<text  x="164.51" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (11 samples, 0.05%)</title><rect x="609.4" y="725" width="0.7" height="15.0" fill="rgb(230,120,2)" rx="2" ry="2" />
<text  x="612.44" y="735.5" ></text>
</g>
<g >
<title>Bitmap::height (12 samples, 0.06%)</title><rect x="897.9" y="453" width="0.7" height="15.0" fill="rgb(242,161,8)" rx="2" ry="2" />
<text  x="900.89" y="463.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (3 samples, 0.01%)</title><rect x="212.7" y="197" width="0.2" height="15.0" fill="rgb(239,77,11)" rx="2" ry="2" />
<text  x="215.69" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (362 samples, 1.79%)</title><rect x="1057.2" y="741" width="21.1" height="15.0" fill="rgb(249,84,54)" rx="2" ry="2" />
<text  x="1060.20" y="751.5" ></text>
</g>
<g >
<title>std::bitset&lt;36ul&gt;::reference::operator= (5 samples, 0.02%)</title><rect x="280.0" y="853" width="0.3" height="15.0" fill="rgb(242,164,4)" rx="2" ry="2" />
<text  x="282.96" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (2 samples, 0.01%)</title><rect x="609.3" y="693" width="0.1" height="15.0" fill="rgb(209,182,13)" rx="2" ry="2" />
<text  x="612.33" y="703.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;int&gt;::shared_ptr&lt;std::allocator&lt;int&gt;, int&gt; (2 samples, 0.01%)</title><rect x="239.1" y="629" width="0.1" height="15.0" fill="rgb(225,199,35)" rx="2" ry="2" />
<text  x="242.10" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::size (17 samples, 0.08%)</title><rect x="483.2" y="693" width="1.0" height="15.0" fill="rgb(210,174,27)" rx="2" ry="2" />
<text  x="486.24" y="703.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3 samples, 0.01%)</title><rect x="138.1" y="277" width="0.1" height="15.0" fill="rgb(225,72,12)" rx="2" ry="2" />
<text  x="141.07" y="287.5" ></text>
</g>
<g >
<title>std::make_pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt;&amp;&gt; (119 samples, 0.59%)</title><rect x="681.4" y="661" width="6.9" height="15.0" fill="rgb(215,18,25)" rx="2" ry="2" />
<text  x="684.38" y="671.5" ></text>
</g>
<g >
<title>operator new (17 samples, 0.08%)</title><rect x="131.0" y="485" width="1.0" height="15.0" fill="rgb(218,38,44)" rx="2" ry="2" />
<text  x="133.96" y="495.5" ></text>
</g>
<g >
<title>std::forward&lt;int&amp;&gt; (4 samples, 0.02%)</title><rect x="871.2" y="405" width="0.3" height="15.0" fill="rgb(220,189,44)" rx="2" ry="2" />
<text  x="874.24" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (70 samples, 0.35%)</title><rect x="462.6" y="709" width="4.1" height="15.0" fill="rgb(238,83,44)" rx="2" ry="2" />
<text  x="465.60" y="719.5" ></text>
</g>
<g >
<title>operator new (91 samples, 0.45%)</title><rect x="181.9" y="469" width="5.3" height="15.0" fill="rgb(219,84,24)" rx="2" ry="2" />
<text  x="184.85" y="479.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (12 samples, 0.06%)</title><rect x="212.4" y="549" width="0.7" height="15.0" fill="rgb(218,152,19)" rx="2" ry="2" />
<text  x="215.40" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (32 samples, 0.16%)</title><rect x="270.3" y="277" width="1.9" height="15.0" fill="rgb(221,162,49)" rx="2" ry="2" />
<text  x="273.29" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::~_Vector_base (8 samples, 0.04%)</title><rect x="919.3" y="325" width="0.4" height="15.0" fill="rgb(214,92,22)" rx="2" ry="2" />
<text  x="922.28" y="335.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipToNextConditional (49 samples, 0.24%)</title><rect x="604.7" y="709" width="2.8" height="15.0" fill="rgb(229,206,28)" rx="2" ry="2" />
<text  x="607.66" y="719.5" ></text>
</g>
<g >
<title>Bitmap::Blit (470 samples, 2.32%)</title><rect x="830.5" y="469" width="27.4" height="15.0" fill="rgb(208,75,42)" rx="2" ry="2" />
<text  x="833.50" y="479.5" >B..</text>
</g>
<g >
<title>operator== (7 samples, 0.03%)</title><rect x="967.3" y="661" width="0.4" height="15.0" fill="rgb(211,112,54)" rx="2" ry="2" />
<text  x="970.31" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (126 samples, 0.62%)</title><rect x="1035.1" y="709" width="7.3" height="15.0" fill="rgb(240,208,35)" rx="2" ry="2" />
<text  x="1038.05" y="719.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;BaseUi, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (5 samples, 0.02%)</title><rect x="86.4" y="965" width="0.3" height="15.0" fill="rgb(251,67,20)" rx="2" ry="2" />
<text  x="89.42" y="975.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::_M_ptr (3 samples, 0.01%)</title><rect x="88.8" y="965" width="0.1" height="15.0" fill="rgb(230,182,46)" rx="2" ry="2" />
<text  x="91.76" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt;::construct&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (4 samples, 0.02%)</title><rect x="53.9" y="965" width="0.2" height="15.0" fill="rgb(221,200,10)" rx="2" ry="2" />
<text  x="56.90" y="975.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (4 samples, 0.02%)</title><rect x="93.7" y="965" width="0.2" height="15.0" fill="rgb(222,219,7)" rx="2" ry="2" />
<text  x="96.65" y="975.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (44 samples, 0.22%)</title><rect x="199.3" y="485" width="2.5" height="15.0" fill="rgb(223,17,3)" rx="2" ry="2" />
<text  x="202.28" y="495.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;2ul, bool, false&gt;::_M_head (3 samples, 0.01%)</title><rect x="66.3" y="965" width="0.1" height="15.0" fill="rgb(216,209,20)" rx="2" ry="2" />
<text  x="69.25" y="975.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.01%)</title><rect x="1183.6" y="981" width="0.2" height="15.0" fill="rgb(221,222,15)" rx="2" ry="2" />
<text  x="1186.65" y="991.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1(MapUpdateAsyncContext)::{lambda()#2}::operator() (2 samples, 0.01%)</title><rect x="1178.1" y="821" width="0.1" height="15.0" fill="rgb(207,40,45)" rx="2" ry="2" />
<text  x="1181.11" y="831.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (58 samples, 0.29%)</title><rect x="893.5" y="469" width="3.3" height="15.0" fill="rgb(240,35,29)" rx="2" ry="2" />
<text  x="896.46" y="479.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (10 samples, 0.05%)</title><rect x="882.8" y="405" width="0.6" height="15.0" fill="rgb(234,42,34)" rx="2" ry="2" />
<text  x="885.85" y="415.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.02%)</title><rect x="56.6" y="965" width="0.3" height="15.0" fill="rgb(218,159,7)" rx="2" ry="2" />
<text  x="59.64" y="975.5" ></text>
</g>
<g >
<title>clear_page_erms (7 samples, 0.03%)</title><rect x="137.7" y="277" width="0.4" height="15.0" fill="rgb(239,62,18)" rx="2" ry="2" />
<text  x="140.67" y="287.5" ></text>
</g>
<g >
<title>release_pages (18 samples, 0.09%)</title><rect x="204.5" y="85" width="1.0" height="15.0" fill="rgb(222,202,44)" rx="2" ry="2" />
<text  x="207.47" y="95.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (7 samples, 0.03%)</title><rect x="1176.6" y="757" width="0.4" height="15.0" fill="rgb(223,216,2)" rx="2" ry="2" />
<text  x="1179.59" y="767.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate (17 samples, 0.08%)</title><rect x="131.0" y="517" width="1.0" height="15.0" fill="rgb(224,167,52)" rx="2" ry="2" />
<text  x="133.96" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int&gt; (6 samples, 0.03%)</title><rect x="51.7" y="965" width="0.3" height="15.0" fill="rgb(205,43,38)" rx="2" ry="2" />
<text  x="54.68" y="975.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (427 samples, 2.11%)</title><rect x="635.2" y="677" width="24.9" height="15.0" fill="rgb(241,146,21)" rx="2" ry="2" />
<text  x="638.21" y="687.5" >F..</text>
</g>
<g >
<title>Bitmap::Bitmap (18 samples, 0.09%)</title><rect x="232.7" y="437" width="1.0" height="15.0" fill="rgb(212,189,2)" rx="2" ry="2" />
<text  x="235.69" y="447.5" ></text>
</g>
<g >
<title>Sprite::SetY (6 samples, 0.03%)</title><rect x="884.8" y="469" width="0.3" height="15.0" fill="rgb(243,196,34)" rx="2" ry="2" />
<text  x="887.77" y="479.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.03%)</title><rect x="157.0" y="501" width="0.3" height="15.0" fill="rgb(214,182,1)" rx="2" ry="2" />
<text  x="159.96" y="511.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (440 samples, 2.17%)</title><rect x="161.5" y="837" width="25.7" height="15.0" fill="rgb(230,52,51)" rx="2" ry="2" />
<text  x="164.51" y="847.5" >F..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt;::base (2 samples, 0.01%)</title><rect x="45.7" y="965" width="0.1" height="15.0" fill="rgb(240,169,3)" rx="2" ry="2" />
<text  x="48.68" y="975.5" ></text>
</g>
<g >
<title>__wake_up_common (8 samples, 0.04%)</title><rect x="23.1" y="853" width="0.4" height="15.0" fill="rgb(237,185,3)" rx="2" ry="2" />
<text  x="26.06" y="863.5" ></text>
</g>
<g >
<title>std::swap&lt;Bitmap*&gt; (9 samples, 0.04%)</title><rect x="890.2" y="421" width="0.5" height="15.0" fill="rgb(245,102,29)" rx="2" ry="2" />
<text  x="893.19" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::begin (5 samples, 0.02%)</title><rect x="924.5" y="645" width="0.3" height="15.0" fill="rgb(235,88,12)" rx="2" ry="2" />
<text  x="927.53" y="655.5" ></text>
</g>
<g >
<title>Bitmap::GetTransparent (2 samples, 0.01%)</title><rect x="25.4" y="965" width="0.1" height="15.0" fill="rgb(227,184,54)" rx="2" ry="2" />
<text  x="28.39" y="975.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (3 samples, 0.01%)</title><rect x="996.4" y="661" width="0.2" height="15.0" fill="rgb(213,17,0)" rx="2" ry="2" />
<text  x="999.40" y="671.5" ></text>
</g>
<g >
<title>std::forward&lt;Game_Picture*&amp;&gt; (2 samples, 0.01%)</title><rect x="923.1" y="533" width="0.1" height="15.0" fill="rgb(252,228,7)" rx="2" ry="2" />
<text  x="926.07" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (13 samples, 0.06%)</title><rect x="478.0" y="661" width="0.7" height="15.0" fill="rgb(214,226,34)" rx="2" ry="2" />
<text  x="480.99" y="671.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (2,997 samples, 14.81%)</title><rect x="749.8" y="645" width="174.7" height="15.0" fill="rgb(219,59,37)" rx="2" ry="2" />
<text  x="752.82" y="655.5" >std::function&lt;void (Fi..</text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (53 samples, 0.26%)</title><rect x="153.0" y="565" width="3.1" height="15.0" fill="rgb(205,0,42)" rx="2" ry="2" />
<text  x="156.00" y="575.5" ></text>
</g>
<g >
<title>Sprite::SetTone (2 samples, 0.01%)</title><rect x="1178.3" y="821" width="0.2" height="15.0" fill="rgb(253,133,37)" rx="2" ry="2" />
<text  x="1181.34" y="831.5" ></text>
</g>
<g >
<title>Player::IsRPG2k3E (2 samples, 0.01%)</title><rect x="988.4" y="725" width="0.1" height="15.0" fill="rgb(253,120,13)" rx="2" ry="2" />
<text  x="991.42" y="735.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (18 samples, 0.09%)</title><rect x="704.2" y="549" width="1.1" height="15.0" fill="rgb(232,68,6)" rx="2" ry="2" />
<text  x="707.23" y="559.5" ></text>
</g>
<g >
<title>Bitmap::find_format (19 samples, 0.09%)</title><rect x="140.8" y="533" width="1.1" height="15.0" fill="rgb(242,23,4)" rx="2" ry="2" />
<text  x="143.75" y="543.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (2 samples, 0.01%)</title><rect x="707.3" y="677" width="0.1" height="15.0" fill="rgb(227,125,5)" rx="2" ry="2" />
<text  x="710.32" y="687.5" ></text>
</g>
<g >
<title>sock_write_iter (2 samples, 0.01%)</title><rect x="279.4" y="549" width="0.1" height="15.0" fill="rgb(242,37,44)" rx="2" ry="2" />
<text  x="282.38" y="559.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::operator[] (12 samples, 0.06%)</title><rect x="102.1" y="965" width="0.7" height="15.0" fill="rgb(219,186,53)" rx="2" ry="2" />
<text  x="105.11" y="975.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="816.0" y="437" width="0.1" height="15.0" fill="rgb(213,185,33)" rx="2" ry="2" />
<text  x="818.98" y="447.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (11 samples, 0.05%)</title><rect x="952.6" y="485" width="0.6" height="15.0" fill="rgb(234,187,3)" rx="2" ry="2" />
<text  x="955.57" y="495.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (14,798 samples, 73.11%)</title><rect x="281.1" y="805" width="862.6" height="15.0" fill="rgb(227,114,38)" rx="2" ry="2" />
<text  x="284.07" y="815.5" >Game_CommonEvent::Update</text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::operator= (2 samples, 0.01%)</title><rect x="610.1" y="693" width="0.2" height="15.0" fill="rgb(208,25,42)" rx="2" ry="2" />
<text  x="613.14" y="703.5" ></text>
</g>
<g >
<title>clock_gettime@plt (8 samples, 0.04%)</title><rect x="785.1" y="437" width="0.5" height="15.0" fill="rgb(247,53,34)" rx="2" ry="2" />
<text  x="788.09" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (5 samples, 0.02%)</title><rect x="75.7" y="965" width="0.3" height="15.0" fill="rgb(216,89,12)" rx="2" ry="2" />
<text  x="78.70" y="975.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (53 samples, 0.26%)</title><rect x="161.7" y="597" width="3.1" height="15.0" fill="rgb(222,29,30)" rx="2" ry="2" />
<text  x="164.74" y="607.5" ></text>
</g>
<g >
<title>std::__distance&lt;char*&gt; (3 samples, 0.01%)</title><rect x="79.0" y="965" width="0.1" height="15.0" fill="rgb(228,114,5)" rx="2" ry="2" />
<text  x="81.96" y="975.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (2 samples, 0.01%)</title><rect x="1176.0" y="805" width="0.1" height="15.0" fill="rgb(245,185,28)" rx="2" ry="2" />
<text  x="1179.01" y="815.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (2,903 samples, 14.34%)</title><rect x="754.0" y="549" width="169.2" height="15.0" fill="rgb(219,84,23)" rx="2" ry="2" />
<text  x="756.96" y="559.5" >std::_Mem_fn_base&lt;voi..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (3 samples, 0.01%)</title><rect x="814.1" y="341" width="0.2" height="15.0" fill="rgb(222,159,13)" rx="2" ry="2" />
<text  x="817.12" y="351.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (146 samples, 0.72%)</title><rect x="153.0" y="789" width="8.5" height="15.0" fill="rgb(220,76,31)" rx="2" ry="2" />
<text  x="156.00" y="799.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (59 samples, 0.29%)</title><rect x="268.7" y="661" width="3.5" height="15.0" fill="rgb(214,89,36)" rx="2" ry="2" />
<text  x="271.71" y="671.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (151 samples, 0.75%)</title><rect x="132.0" y="517" width="8.8" height="15.0" fill="rgb(240,124,15)" rx="2" ry="2" />
<text  x="134.95" y="527.5" ></text>
</g>
<g >
<title>Player::Run (59 samples, 0.29%)</title><rect x="268.7" y="949" width="3.5" height="15.0" fill="rgb(221,81,22)" rx="2" ry="2" />
<text  x="271.71" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (68 samples, 0.34%)</title><rect x="499.2" y="693" width="3.9" height="15.0" fill="rgb(241,163,47)" rx="2" ry="2" />
<text  x="502.15" y="703.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::_Bind&lt;Game_Picture*&amp;, std::_Placeholder&lt;1&gt; const&amp;&gt; (25 samples, 0.12%)</title><rect x="707.7" y="661" width="1.5" height="15.0" fill="rgb(225,20,54)" rx="2" ry="2" />
<text  x="710.73" y="671.5" ></text>
</g>
<g >
<title>Player::IsMajorUpdatedVersion (7 samples, 0.03%)</title><rect x="878.3" y="469" width="0.4" height="15.0" fill="rgb(217,162,32)" rx="2" ry="2" />
<text  x="881.30" y="479.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (39 samples, 0.19%)</title><rect x="976.7" y="677" width="2.3" height="15.0" fill="rgb(219,13,7)" rx="2" ry="2" />
<text  x="979.70" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::end (9 samples, 0.04%)</title><rect x="69.3" y="965" width="0.5" height="15.0" fill="rgb(231,5,44)" rx="2" ry="2" />
<text  x="72.29" y="975.5" ></text>
</g>
<g >
<title>sock_recvmsg (2 samples, 0.01%)</title><rect x="1182.4" y="581" width="0.1" height="15.0" fill="rgb(253,148,25)" rx="2" ry="2" />
<text  x="1185.42" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (18 samples, 0.09%)</title><rect x="145.6" y="421" width="1.0" height="15.0" fill="rgb(229,87,46)" rx="2" ry="2" />
<text  x="148.59" y="431.5" ></text>
</g>
<g >
<title>Sprite::SetZ (5 samples, 0.02%)</title><rect x="885.1" y="469" width="0.3" height="15.0" fill="rgb(215,158,43)" rx="2" ry="2" />
<text  x="888.12" y="479.5" ></text>
</g>
<g >
<title>Sprite::SetFlashEffect (13 samples, 0.06%)</title><rect x="879.3" y="453" width="0.7" height="15.0" fill="rgb(221,38,5)" rx="2" ry="2" />
<text  x="882.29" y="463.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (177 samples, 0.87%)</title><rect x="861.2" y="421" width="10.3" height="15.0" fill="rgb(241,120,16)" rx="2" ry="2" />
<text  x="864.16" y="431.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (281 samples, 1.39%)</title><rect x="215.7" y="517" width="16.4" height="15.0" fill="rgb(248,1,3)" rx="2" ry="2" />
<text  x="218.72" y="527.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (159 samples, 0.79%)</title><rect x="164.8" y="549" width="9.3" height="15.0" fill="rgb(228,16,28)" rx="2" ry="2" />
<text  x="167.83" y="559.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (117 samples, 0.58%)</title><rect x="187.2" y="661" width="6.8" height="15.0" fill="rgb(210,215,35)" rx="2" ry="2" />
<text  x="190.22" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_M_begin (7 samples, 0.03%)</title><rect x="667.1" y="645" width="0.4" height="15.0" fill="rgb(230,103,23)" rx="2" ry="2" />
<text  x="670.10" y="655.5" ></text>
</g>
<g >
<title>__strlen_avx2 (14 samples, 0.07%)</title><rect x="940.3" y="661" width="0.8" height="15.0" fill="rgb(243,15,8)" rx="2" ry="2" />
<text  x="943.32" y="671.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (68 samples, 0.34%)</title><rect x="203.0" y="709" width="4.0" height="15.0" fill="rgb(233,42,54)" rx="2" ry="2" />
<text  x="206.01" y="719.5" ></text>
</g>
<g >
<title>Game_Picture::Update (473 samples, 2.34%)</title><rect x="1148.1" y="805" width="27.6" height="15.0" fill="rgb(220,24,54)" rx="2" ry="2" />
<text  x="1151.14" y="815.5" >G..</text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (7 samples, 0.03%)</title><rect x="1055.0" y="741" width="0.4" height="15.0" fill="rgb(247,122,43)" rx="2" ry="2" />
<text  x="1057.99" y="751.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (19 samples, 0.09%)</title><rect x="800.0" y="325" width="1.1" height="15.0" fill="rgb(219,152,12)" rx="2" ry="2" />
<text  x="802.95" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator* (24 samples, 0.12%)</title><rect x="651.9" y="645" width="1.4" height="15.0" fill="rgb(217,166,24)" rx="2" ry="2" />
<text  x="654.88" y="655.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_weak_release (2 samples, 0.01%)</title><rect x="71.8" y="965" width="0.1" height="15.0" fill="rgb(236,200,50)" rx="2" ry="2" />
<text  x="74.79" y="975.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (2 samples, 0.01%)</title><rect x="922.5" y="453" width="0.1" height="15.0" fill="rgb(218,180,27)" rx="2" ry="2" />
<text  x="925.49" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (57 samples, 0.28%)</title><rect x="209.1" y="437" width="3.3" height="15.0" fill="rgb(244,78,19)" rx="2" ry="2" />
<text  x="212.08" y="447.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::operator= (207 samples, 1.02%)</title><rect x="941.8" y="677" width="12.1" height="15.0" fill="rgb(214,68,48)" rx="2" ry="2" />
<text  x="944.84" y="687.5" ></text>
</g>
<g >
<title>std::make_shared&lt;int, int&gt; (213 samples, 1.05%)</title><rect x="688.3" y="661" width="12.4" height="15.0" fill="rgb(244,137,14)" rx="2" ry="2" />
<text  x="691.32" y="671.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator bool (5 samples, 0.02%)</title><rect x="84.3" y="965" width="0.3" height="15.0" fill="rgb(239,53,15)" rx="2" ry="2" />
<text  x="87.27" y="975.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (7 samples, 0.03%)</title><rect x="1055.0" y="709" width="0.4" height="15.0" fill="rgb(234,181,33)" rx="2" ry="2" />
<text  x="1057.99" y="719.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (170 samples, 0.84%)</title><rect x="132.0" y="709" width="9.9" height="15.0" fill="rgb(214,142,28)" rx="2" ry="2" />
<text  x="134.95" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator* (2 samples, 0.01%)</title><rect x="761.0" y="437" width="0.1" height="15.0" fill="rgb(242,100,14)" rx="2" ry="2" />
<text  x="763.95" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::end (5 samples, 0.02%)</title><rect x="937.9" y="645" width="0.3" height="15.0" fill="rgb(247,188,47)" rx="2" ry="2" />
<text  x="940.93" y="655.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::function (109 samples, 0.54%)</title><rect x="709.2" y="677" width="6.4" height="15.0" fill="rgb(236,126,34)" rx="2" ry="2" />
<text  x="712.24" y="687.5" ></text>
</g>
<g >
<title>Scene::MainFunction (500 samples, 2.47%)</title><rect x="239.1" y="901" width="29.1" height="15.0" fill="rgb(238,172,45)" rx="2" ry="2" />
<text  x="242.10" y="911.5" >Sc..</text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_ptr (3 samples, 0.01%)</title><rect x="691.9" y="565" width="0.1" height="15.0" fill="rgb(215,59,47)" rx="2" ry="2" />
<text  x="694.87" y="575.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (440 samples, 2.17%)</title><rect x="161.5" y="885" width="25.7" height="15.0" fill="rgb(241,123,49)" rx="2" ry="2" />
<text  x="164.51" y="895.5" >G..</text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_M_head (6 samples, 0.03%)</title><rect x="800.7" y="309" width="0.4" height="15.0" fill="rgb(234,189,52)" rx="2" ry="2" />
<text  x="803.71" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (11 samples, 0.05%)</title><rect x="1182.9" y="981" width="0.7" height="15.0" fill="rgb(226,42,2)" rx="2" ry="2" />
<text  x="1185.95" y="991.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Picture*, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl (2 samples, 0.01%)</title><rect x="73.4" y="965" width="0.1" height="15.0" fill="rgb(209,192,8)" rx="2" ry="2" />
<text  x="76.42" y="975.5" ></text>
</g>
<g >
<title>Bitmap::Clear (32 samples, 0.16%)</title><rect x="857.9" y="469" width="1.9" height="15.0" fill="rgb(238,94,11)" rx="2" ry="2" />
<text  x="860.90" y="479.5" ></text>
</g>
<g >
<title>Bitmap::~Bitmap (101 samples, 0.50%)</title><rect x="188.1" y="405" width="5.9" height="15.0" fill="rgb(223,229,35)" rx="2" ry="2" />
<text  x="191.15" y="415.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (6 samples, 0.03%)</title><rect x="974.1" y="661" width="0.3" height="15.0" fill="rgb(252,142,2)" rx="2" ry="2" />
<text  x="977.08" y="671.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (3 samples, 0.01%)</title><rect x="1160.6" y="757" width="0.2" height="15.0" fill="rgb(240,52,22)" rx="2" ry="2" />
<text  x="1163.62" y="767.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (15 samples, 0.07%)</title><rect x="139.9" y="469" width="0.9" height="15.0" fill="rgb(229,4,5)" rx="2" ry="2" />
<text  x="142.88" y="479.5" ></text>
</g>
<g >
<title>std::min&lt;int&gt; (6 samples, 0.03%)</title><rect x="103.8" y="965" width="0.3" height="15.0" fill="rgb(227,41,42)" rx="2" ry="2" />
<text  x="106.80" y="975.5" ></text>
</g>
<g >
<title>pixman_image_create_bits@plt (3 samples, 0.01%)</title><rect x="868.5" y="293" width="0.2" height="15.0" fill="rgb(230,165,37)" rx="2" ry="2" />
<text  x="871.51" y="303.5" ></text>
</g>
<g >
<title>std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt;&amp;, true&gt; (6 samples, 0.03%)</title><rect x="105.7" y="965" width="0.4" height="15.0" fill="rgb(214,167,49)" rx="2" ry="2" />
<text  x="108.72" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_ptr (3 samples, 0.01%)</title><rect x="43.1" y="965" width="0.2" height="15.0" fill="rgb(224,34,29)" rx="2" ry="2" />
<text  x="46.11" y="975.5" ></text>
</g>
<g >
<title>std::swap&lt;Bitmap*&gt; (7 samples, 0.03%)</title><rect x="976.2" y="677" width="0.4" height="15.0" fill="rgb(246,18,23)" rx="2" ry="2" />
<text  x="979.23" y="687.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (2 samples, 0.01%)</title><rect x="1169.4" y="757" width="0.1" height="15.0" fill="rgb(242,29,9)" rx="2" ry="2" />
<text  x="1172.42" y="767.5" ></text>
</g>
<g >
<title>Player::IsRPG2k (2 samples, 0.01%)</title><rect x="988.3" y="725" width="0.1" height="15.0" fill="rgb(254,161,50)" rx="2" ry="2" />
<text  x="991.30" y="735.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (2 samples, 0.01%)</title><rect x="76.3" y="965" width="0.1" height="15.0" fill="rgb(236,220,17)" rx="2" ry="2" />
<text  x="79.28" y="975.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (5 samples, 0.02%)</title><rect x="29.9" y="965" width="0.3" height="15.0" fill="rgb(221,158,38)" rx="2" ry="2" />
<text  x="32.88" y="975.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (86 samples, 0.42%)</title><rect x="198.0" y="885" width="5.0" height="15.0" fill="rgb(212,110,0)" rx="2" ry="2" />
<text  x="201.00" y="895.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator bool (12 samples, 0.06%)</title><rect x="1176.3" y="805" width="0.7" height="15.0" fill="rgb(212,26,8)" rx="2" ry="2" />
<text  x="1179.30" y="815.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (146 samples, 0.72%)</title><rect x="153.0" y="917" width="8.5" height="15.0" fill="rgb(249,79,41)" rx="2" ry="2" />
<text  x="156.00" y="927.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (3 samples, 0.01%)</title><rect x="106.5" y="965" width="0.2" height="15.0" fill="rgb(222,118,32)" rx="2" ry="2" />
<text  x="109.54" y="975.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::_M_ptr (10 samples, 0.05%)</title><rect x="1141.5" y="757" width="0.6" height="15.0" fill="rgb(234,67,0)" rx="2" ry="2" />
<text  x="1144.50" y="767.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (8 samples, 0.04%)</title><rect x="272.2" y="949" width="0.5" height="15.0" fill="rgb(236,26,49)" rx="2" ry="2" />
<text  x="275.21" y="959.5" ></text>
</g>
<g >
<title>Sprite::Flash (8 samples, 0.04%)</title><rect x="1163.0" y="773" width="0.4" height="15.0" fill="rgb(228,21,24)" rx="2" ry="2" />
<text  x="1165.95" y="783.5" ></text>
</g>
<g >
<title>Sdl2Ui::ProcessEvent (49 samples, 0.24%)</title><rect x="1179.3" y="853" width="2.8" height="15.0" fill="rgb(220,21,40)" rx="2" ry="2" />
<text  x="1182.27" y="863.5" ></text>
</g>
<g >
<title>Color::Color (4 samples, 0.02%)</title><rect x="874.7" y="469" width="0.2" height="15.0" fill="rgb(247,20,33)" rx="2" ry="2" />
<text  x="877.68" y="479.5" ></text>
</g>
<g >
<title>native_write_msr (62 samples, 0.31%)</title><rect x="17.9" y="741" width="3.6" height="15.0" fill="rgb(243,196,1)" rx="2" ry="2" />
<text  x="20.87" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (5 samples, 0.02%)</title><rect x="470.9" y="677" width="0.3" height="15.0" fill="rgb(222,157,27)" rx="2" ry="2" />
<text  x="473.94" y="687.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (170 samples, 0.84%)</title><rect x="132.0" y="837" width="9.9" height="15.0" fill="rgb(206,11,11)" rx="2" ry="2" />
<text  x="134.95" y="847.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (5 samples, 0.02%)</title><rect x="1179.6" y="597" width="0.3" height="15.0" fill="rgb(233,209,37)" rx="2" ry="2" />
<text  x="1182.62" y="607.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (145 samples, 0.72%)</title><rect x="907.7" y="325" width="8.4" height="15.0" fill="rgb(221,174,37)" rx="2" ry="2" />
<text  x="910.68" y="335.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (146 samples, 0.72%)</title><rect x="153.0" y="821" width="8.5" height="15.0" fill="rgb(238,62,22)" rx="2" ry="2" />
<text  x="156.00" y="831.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Game_Screen*, false&gt;::_M_head (2 samples, 0.01%)</title><rect x="891.8" y="373" width="0.1" height="15.0" fill="rgb(205,108,50)" rx="2" ry="2" />
<text  x="894.82" y="383.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (68 samples, 0.34%)</title><rect x="203.0" y="677" width="4.0" height="15.0" fill="rgb(248,90,1)" rx="2" ry="2" />
<text  x="206.01" y="687.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (2 samples, 0.01%)</title><rect x="139.8" y="309" width="0.1" height="15.0" fill="rgb(234,144,10)" rx="2" ry="2" />
<text  x="142.76" y="319.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (12 samples, 0.06%)</title><rect x="212.4" y="325" width="0.7" height="15.0" fill="rgb(239,193,50)" rx="2" ry="2" />
<text  x="215.40" y="335.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (72 samples, 0.36%)</title><rect x="157.3" y="565" width="4.2" height="15.0" fill="rgb(214,153,41)" rx="2" ry="2" />
<text  x="160.31" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (44 samples, 0.22%)</title><rect x="1130.4" y="773" width="2.5" height="15.0" fill="rgb(206,131,20)" rx="2" ry="2" />
<text  x="1133.36" y="783.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (30 samples, 0.15%)</title><rect x="266.4" y="293" width="1.7" height="15.0" fill="rgb(242,104,30)" rx="2" ry="2" />
<text  x="269.38" y="303.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (2 samples, 0.01%)</title><rect x="1179.6" y="549" width="0.1" height="15.0" fill="rgb(207,46,43)" rx="2" ry="2" />
<text  x="1182.62" y="559.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (3 samples, 0.01%)</title><rect x="692.4" y="565" width="0.2" height="15.0" fill="rgb(247,105,32)" rx="2" ry="2" />
<text  x="695.40" y="575.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandOptionGeneric (83 samples, 0.41%)</title><rect x="602.7" y="725" width="4.8" height="15.0" fill="rgb(231,145,36)" rx="2" ry="2" />
<text  x="605.68" y="735.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (59 samples, 0.29%)</title><rect x="268.7" y="597" width="3.5" height="15.0" fill="rgb(249,183,47)" rx="2" ry="2" />
<text  x="271.71" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create@plt (2 samples, 0.01%)</title><rect x="821.9" y="389" width="0.1" height="15.0" fill="rgb(224,154,39)" rx="2" ry="2" />
<text  x="824.93" y="399.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (17 samples, 0.08%)</title><rect x="131.0" y="565" width="1.0" height="15.0" fill="rgb(215,205,40)" rx="2" ry="2" />
<text  x="133.96" y="575.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (20 samples, 0.10%)</title><rect x="201.8" y="325" width="1.2" height="15.0" fill="rgb(228,22,30)" rx="2" ry="2" />
<text  x="204.85" y="335.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (2 samples, 0.01%)</title><rect x="71.4" y="965" width="0.2" height="15.0" fill="rgb(215,204,44)" rx="2" ry="2" />
<text  x="74.44" y="975.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (4 samples, 0.02%)</title><rect x="161.5" y="581" width="0.2" height="15.0" fill="rgb(222,225,5)" rx="2" ry="2" />
<text  x="164.51" y="591.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (186 samples, 0.92%)</title><rect x="242.6" y="437" width="10.8" height="15.0" fill="rgb(209,139,16)" rx="2" ry="2" />
<text  x="245.60" y="447.5" ></text>
</g>
<g >
<title>pthread_getspecific@plt (3 samples, 0.01%)</title><rect x="206.2" y="261" width="0.2" height="15.0" fill="rgb(213,191,6)" rx="2" ry="2" />
<text  x="209.22" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (6 samples, 0.03%)</title><rect x="481.4" y="645" width="0.4" height="15.0" fill="rgb(248,45,52)" rx="2" ry="2" />
<text  x="484.43" y="655.5" ></text>
</g>
<g >
<title>Cache::System (3 samples, 0.01%)</title><rect x="1179.0" y="757" width="0.2" height="15.0" fill="rgb(250,14,1)" rx="2" ry="2" />
<text  x="1181.98" y="767.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (17 samples, 0.08%)</title><rect x="131.0" y="597" width="1.0" height="15.0" fill="rgb(253,59,33)" rx="2" ry="2" />
<text  x="133.96" y="607.5" ></text>
</g>
<g >
<title>Scene_Map::Update (86 samples, 0.42%)</title><rect x="198.0" y="949" width="5.0" height="15.0" fill="rgb(239,87,41)" rx="2" ry="2" />
<text  x="201.00" y="959.5" ></text>
</g>
<g >
<title>std::map&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, (anonymous namespace)::CacheItem, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (175 samples, 0.86%)</title><rect x="164.8" y="613" width="10.2" height="15.0" fill="rgb(206,58,30)" rx="2" ry="2" />
<text  x="167.83" y="623.5" ></text>
</g>
<g >
<title>Bitmap::Blit (3 samples, 0.01%)</title><rect x="278.4" y="757" width="0.2" height="15.0" fill="rgb(249,43,34)" rx="2" ry="2" />
<text  x="281.39" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_Rb_tree_iterator (2 samples, 0.01%)</title><rect x="811.8" y="421" width="0.1" height="15.0" fill="rgb(247,199,10)" rx="2" ry="2" />
<text  x="814.78" y="431.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::~_Head_base (10 samples, 0.05%)</title><rect x="232.1" y="533" width="0.6" height="15.0" fill="rgb(241,153,22)" rx="2" ry="2" />
<text  x="235.10" y="543.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (101 samples, 0.50%)</title><rect x="188.1" y="469" width="5.9" height="15.0" fill="rgb(243,139,15)" rx="2" ry="2" />
<text  x="191.15" y="479.5" ></text>
</g>
<g >
<title>__interceptor_recvmsg (5 samples, 0.02%)</title><rect x="1179.6" y="677" width="0.3" height="15.0" fill="rgb(221,190,23)" rx="2" ry="2" />
<text  x="1182.62" y="687.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (2 samples, 0.01%)</title><rect x="938.8" y="677" width="0.1" height="15.0" fill="rgb(205,55,30)" rx="2" ry="2" />
<text  x="941.75" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare@plt (3 samples, 0.01%)</title><rect x="816.3" y="453" width="0.2" height="15.0" fill="rgb(246,196,34)" rx="2" ry="2" />
<text  x="819.33" y="463.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.02%)</title><rect x="156.1" y="501" width="0.3" height="15.0" fill="rgb(231,215,34)" rx="2" ry="2" />
<text  x="159.09" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (2 samples, 0.01%)</title><rect x="700.6" y="645" width="0.1" height="15.0" fill="rgb(216,171,0)" rx="2" ry="2" />
<text  x="703.56" y="655.5" ></text>
</g>
<g >
<title>operator delete@plt (2 samples, 0.01%)</title><rect x="733.8" y="613" width="0.2" height="15.0" fill="rgb(231,58,12)" rx="2" ry="2" />
<text  x="736.84" y="623.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::~__allocated_ptr (44 samples, 0.22%)</title><rect x="194.4" y="421" width="2.6" height="15.0" fill="rgb(247,94,45)" rx="2" ry="2" />
<text  x="197.39" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (5 samples, 0.02%)</title><rect x="156.1" y="517" width="0.3" height="15.0" fill="rgb(242,100,52)" rx="2" ry="2" />
<text  x="159.09" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator++ (27 samples, 0.13%)</title><rect x="653.3" y="645" width="1.6" height="15.0" fill="rgb(220,88,12)" rx="2" ry="2" />
<text  x="656.28" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (6 samples, 0.03%)</title><rect x="706.9" y="597" width="0.4" height="15.0" fill="rgb(235,24,5)" rx="2" ry="2" />
<text  x="709.91" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="324.9" y="757" width="0.1" height="15.0" fill="rgb(218,191,24)" rx="2" ry="2" />
<text  x="327.91" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base (7 samples, 0.03%)</title><rect x="769.1" y="421" width="0.4" height="15.0" fill="rgb(226,68,30)" rx="2" ry="2" />
<text  x="772.11" y="431.5" ></text>
</g>
<g >
<title>Bitmap::find_format (18 samples, 0.09%)</title><rect x="232.7" y="421" width="1.0" height="15.0" fill="rgb(224,141,19)" rx="2" ry="2" />
<text  x="235.69" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (12 samples, 0.06%)</title><rect x="497.3" y="677" width="0.7" height="15.0" fill="rgb(250,48,11)" rx="2" ry="2" />
<text  x="500.28" y="687.5" ></text>
</g>
<g >
<title>ksys_read (14 samples, 0.07%)</title><rect x="22.2" y="933" width="0.8" height="15.0" fill="rgb(215,104,21)" rx="2" ry="2" />
<text  x="25.18" y="943.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;int&gt;::operator= (210 samples, 1.04%)</title><rect x="941.7" y="693" width="12.3" height="15.0" fill="rgb(205,39,19)" rx="2" ry="2" />
<text  x="944.72" y="703.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::_Placeholder&lt;1&gt;, true&gt;::_Head_base&lt;std::_Placeholder&lt;1&gt; &gt; (4 samples, 0.02%)</title><rect x="725.0" y="565" width="0.2" height="15.0" fill="rgb(213,48,30)" rx="2" ry="2" />
<text  x="727.98" y="575.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (109 samples, 0.54%)</title><rect x="146.6" y="885" width="6.4" height="15.0" fill="rgb(240,220,0)" rx="2" ry="2" />
<text  x="149.64" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (14 samples, 0.07%)</title><rect x="974.5" y="709" width="0.8" height="15.0" fill="rgb(248,129,23)" rx="2" ry="2" />
<text  x="977.48" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (2 samples, 0.01%)</title><rect x="633.8" y="677" width="0.1" height="15.0" fill="rgb(240,178,47)" rx="2" ry="2" />
<text  x="636.75" y="687.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (40 samples, 0.20%)</title><rect x="894.2" y="437" width="2.3" height="15.0" fill="rgb(248,208,24)" rx="2" ry="2" />
<text  x="897.21" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (2 samples, 0.01%)</title><rect x="500.5" y="661" width="0.1" height="15.0" fill="rgb(219,197,22)" rx="2" ry="2" />
<text  x="503.49" y="671.5" ></text>
</g>
<g >
<title>Drawable::GetPriorityForMapLayer (5 samples, 0.02%)</title><rect x="874.9" y="469" width="0.3" height="15.0" fill="rgb(247,150,24)" rx="2" ry="2" />
<text  x="877.92" y="479.5" ></text>
</g>
<g >
<title>std::forward&lt;std::weak_ptr&lt;int&gt; &gt; (2 samples, 0.01%)</title><rect x="681.8" y="629" width="0.1" height="15.0" fill="rgb(243,195,54)" rx="2" ry="2" />
<text  x="684.79" y="639.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~tuple (10 samples, 0.05%)</title><rect x="232.1" y="581" width="0.6" height="15.0" fill="rgb(217,103,7)" rx="2" ry="2" />
<text  x="235.10" y="591.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (21 samples, 0.10%)</title><rect x="204.3" y="133" width="1.2" height="15.0" fill="rgb(220,69,20)" rx="2" ry="2" />
<text  x="207.30" y="143.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (4 samples, 0.02%)</title><rect x="1177.9" y="789" width="0.2" height="15.0" fill="rgb(226,85,13)" rx="2" ry="2" />
<text  x="1180.87" y="799.5" ></text>
</g>
<g >
<title>poll_schedule_timeout.constprop.14 (77 samples, 0.38%)</title><rect x="17.4" y="917" width="4.5" height="15.0" fill="rgb(232,26,1)" rx="2" ry="2" />
<text  x="20.40" y="927.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (68 samples, 0.34%)</title><rect x="203.0" y="725" width="4.0" height="15.0" fill="rgb(251,192,6)" rx="2" ry="2" />
<text  x="206.01" y="735.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (3 samples, 0.01%)</title><rect x="616.1" y="709" width="0.2" height="15.0" fill="rgb(240,114,42)" rx="2" ry="2" />
<text  x="619.15" y="719.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*&gt; (211 samples, 1.04%)</title><rect x="925.6" y="597" width="12.3" height="15.0" fill="rgb(231,2,38)" rx="2" ry="2" />
<text  x="928.63" y="607.5" ></text>
</g>
<g >
<title>Player::Run (15,519 samples, 76.67%)</title><rect x="278.2" y="933" width="904.7" height="15.0" fill="rgb(211,75,47)" rx="2" ry="2" />
<text  x="281.21" y="943.5" >Player::Run</text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.03%)</title><rect x="197.0" y="293" width="0.4" height="15.0" fill="rgb(223,9,17)" rx="2" ry="2" />
<text  x="199.95" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (37 samples, 0.18%)</title><rect x="1010.7" y="709" width="2.1" height="15.0" fill="rgb(209,184,24)" rx="2" ry="2" />
<text  x="1013.69" y="719.5" ></text>
</g>
<g >
<title>vfs_writev (2 samples, 0.01%)</title><rect x="279.4" y="597" width="0.1" height="15.0" fill="rgb(238,52,53)" rx="2" ry="2" />
<text  x="282.38" y="607.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (263 samples, 1.30%)</title><rect x="794.2" y="389" width="15.4" height="15.0" fill="rgb(227,220,52)" rx="2" ry="2" />
<text  x="797.24" y="399.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::swap (12 samples, 0.06%)</title><rect x="975.9" y="693" width="0.7" height="15.0" fill="rgb(252,44,41)" rx="2" ry="2" />
<text  x="978.94" y="703.5" ></text>
</g>
<g >
<title>poll_schedule_timeout.constprop.14 (8 samples, 0.04%)</title><rect x="1180.2" y="533" width="0.5" height="15.0" fill="rgb(230,20,44)" rx="2" ry="2" />
<text  x="1183.21" y="543.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_init_functor (8 samples, 0.04%)</title><rect x="60.5" y="965" width="0.5" height="15.0" fill="rgb(233,116,31)" rx="2" ry="2" />
<text  x="63.54" y="975.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (2 samples, 0.01%)</title><rect x="893.3" y="405" width="0.2" height="15.0" fill="rgb(222,194,27)" rx="2" ry="2" />
<text  x="896.34" y="415.5" ></text>
</g>
<g >
<title>__interceptor_free (2 samples, 0.01%)</title><rect x="239.0" y="965" width="0.1" height="15.0" fill="rgb(210,58,2)" rx="2" ry="2" />
<text  x="241.98" y="975.5" ></text>
</g>
<g >
<title>std::__weak_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__weak_count (2 samples, 0.01%)</title><rect x="706.3" y="549" width="0.1" height="15.0" fill="rgb(241,137,36)" rx="2" ry="2" />
<text  x="709.33" y="559.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (3 samples, 0.01%)</title><rect x="801.1" y="357" width="0.1" height="15.0" fill="rgb(223,33,39)" rx="2" ry="2" />
<text  x="804.06" y="367.5" ></text>
</g>
<g >
<title>Player::Update (15,517 samples, 76.66%)</title><rect x="278.2" y="885" width="904.6" height="15.0" fill="rgb(222,134,17)" rx="2" ry="2" />
<text  x="281.21" y="895.5" >Player::Update</text>
</g>
<g >
<title>min&lt;int&gt; (2 samples, 0.01%)</title><rect x="966.1" y="661" width="0.2" height="15.0" fill="rgb(243,225,47)" rx="2" ry="2" />
<text  x="969.15" y="671.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (107 samples, 0.53%)</title><rect x="777.9" y="453" width="6.3" height="15.0" fill="rgb(217,69,4)" rx="2" ry="2" />
<text  x="780.92" y="463.5" ></text>
</g>
<g >
<title>Cache::System (4 samples, 0.02%)</title><rect x="1179.0" y="773" width="0.2" height="15.0" fill="rgb(232,121,25)" rx="2" ry="2" />
<text  x="1181.98" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (2 samples, 0.01%)</title><rect x="605.9" y="661" width="0.2" height="15.0" fill="rgb(228,11,24)" rx="2" ry="2" />
<text  x="608.95" y="671.5" ></text>
</g>
<g >
<title>[easyrpg-player] (6 samples, 0.03%)</title><rect x="129.7" y="981" width="0.4" height="15.0" fill="rgb(217,86,37)" rx="2" ry="2" />
<text  x="132.74" y="991.5" ></text>
</g>
<g >
<title>max&lt;int&gt; (8 samples, 0.04%)</title><rect x="55.9" y="965" width="0.4" height="15.0" fill="rgb(219,186,14)" rx="2" ry="2" />
<text  x="58.88" y="975.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (10 samples, 0.05%)</title><rect x="321.0" y="773" width="0.6" height="15.0" fill="rgb(238,44,23)" rx="2" ry="2" />
<text  x="324.00" y="783.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.02%)</title><rect x="748.4" y="549" width="0.3" height="15.0" fill="rgb(228,85,23)" rx="2" ry="2" />
<text  x="751.36" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::size (101 samples, 0.50%)</title><rect x="1135.3" y="773" width="5.9" height="15.0" fill="rgb(228,213,37)" rx="2" ry="2" />
<text  x="1138.32" y="783.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;2ul, bool&gt; (10 samples, 0.05%)</title><rect x="798.0" y="325" width="0.6" height="15.0" fill="rgb(208,171,21)" rx="2" ry="2" />
<text  x="800.97" y="335.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (3 samples, 0.01%)</title><rect x="1169.6" y="709" width="0.2" height="15.0" fill="rgb(244,15,43)" rx="2" ry="2" />
<text  x="1172.60" y="719.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (5,498 samples, 27.16%)</title><rect x="633.9" y="709" width="320.5" height="15.0" fill="rgb(220,157,22)" rx="2" ry="2" />
<text  x="636.93" y="719.5" >Game_Picture::RequestPictureSprite</text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (4 samples, 0.02%)</title><rect x="287.0" y="757" width="0.2" height="15.0" fill="rgb(212,153,42)" rx="2" ry="2" />
<text  x="290.02" y="767.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (68 samples, 0.34%)</title><rect x="194.0" y="741" width="4.0" height="15.0" fill="rgb(210,5,4)" rx="2" ry="2" />
<text  x="197.04" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (4 samples, 0.02%)</title><rect x="613.7" y="693" width="0.2" height="15.0" fill="rgb(240,57,0)" rx="2" ry="2" />
<text  x="616.70" y="703.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (20 samples, 0.10%)</title><rect x="201.8" y="517" width="1.2" height="15.0" fill="rgb(207,79,53)" rx="2" ry="2" />
<text  x="204.85" y="527.5" ></text>
</g>
<g >
<title>std::bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;, Game_Picture*&amp;, std::_Placeholder&lt;1&gt; const&amp;&gt; (30 samples, 0.15%)</title><rect x="707.5" y="677" width="1.7" height="15.0" fill="rgb(247,147,27)" rx="2" ry="2" />
<text  x="710.50" y="687.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (19 samples, 0.09%)</title><rect x="817.9" y="421" width="1.1" height="15.0" fill="rgb(246,135,32)" rx="2" ry="2" />
<text  x="820.91" y="431.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::__allocated_ptr (4 samples, 0.02%)</title><rect x="905.3" y="389" width="0.3" height="15.0" fill="rgb(230,225,44)" rx="2" ry="2" />
<text  x="908.35" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Picture*, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl&lt;Game_Picture*&amp;, std::_Placeholder&lt;1&gt; const&amp;, void&gt; (13 samples, 0.06%)</title><rect x="708.4" y="629" width="0.7" height="15.0" fill="rgb(241,209,39)" rx="2" ry="2" />
<text  x="711.37" y="639.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="762.5" y="389" width="0.1" height="15.0" fill="rgb(227,153,20)" rx="2" ry="2" />
<text  x="765.47" y="399.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="156.5" y="533" width="0.2" height="15.0" fill="rgb(208,129,47)" rx="2" ry="2" />
<text  x="159.49" y="543.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Game_Picture*, false&gt;::_M_head (2 samples, 0.01%)</title><rect x="1177.4" y="709" width="0.1" height="15.0" fill="rgb(209,159,14)" rx="2" ry="2" />
<text  x="1180.41" y="719.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (109 samples, 0.54%)</title><rect x="146.6" y="965" width="6.4" height="15.0" fill="rgb(207,216,21)" rx="2" ry="2" />
<text  x="149.64" y="975.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (6 samples, 0.03%)</title><rect x="87.9" y="965" width="0.4" height="15.0" fill="rgb(217,224,19)" rx="2" ry="2" />
<text  x="90.94" y="975.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="988.0" y="677" width="0.1" height="15.0" fill="rgb(236,105,45)" rx="2" ry="2" />
<text  x="990.95" y="687.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (117 samples, 0.58%)</title><rect x="187.2" y="821" width="6.8" height="15.0" fill="rgb(224,172,39)" rx="2" ry="2" />
<text  x="190.22" y="831.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (6 samples, 0.03%)</title><rect x="605.7" y="677" width="0.4" height="15.0" fill="rgb(216,119,35)" rx="2" ry="2" />
<text  x="608.71" y="687.5" ></text>
</g>
<g >
<title>std::any_of&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, Input::UiSource::Update()::{lambda(int)#1}&gt; (6 samples, 0.03%)</title><rect x="279.5" y="837" width="0.3" height="15.0" fill="rgb(237,25,37)" rx="2" ry="2" />
<text  x="282.50" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (5 samples, 0.02%)</title><rect x="44.7" y="965" width="0.3" height="15.0" fill="rgb(253,51,38)" rx="2" ry="2" />
<text  x="47.69" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (2 samples, 0.01%)</title><rect x="238.3" y="965" width="0.1" height="15.0" fill="rgb(217,204,51)" rx="2" ry="2" />
<text  x="241.28" y="975.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandEndLoop (40 samples, 0.20%)</title><rect x="607.8" y="741" width="2.3" height="15.0" fill="rgb(233,56,31)" rx="2" ry="2" />
<text  x="610.75" y="751.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (38 samples, 0.19%)</title><rect x="204.0" y="261" width="2.2" height="15.0" fill="rgb(234,73,8)" rx="2" ry="2" />
<text  x="207.00" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare@plt (2 samples, 0.01%)</title><rect x="677.0" y="597" width="0.1" height="15.0" fill="rgb(219,181,9)" rx="2" ry="2" />
<text  x="680.01" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (5 samples, 0.02%)</title><rect x="613.4" y="693" width="0.3" height="15.0" fill="rgb(207,162,49)" rx="2" ry="2" />
<text  x="616.41" y="703.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="280.4" y="821" width="0.1" height="15.0" fill="rgb(222,29,5)" rx="2" ry="2" />
<text  x="283.43" y="831.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Scene, (__gnu_cxx::_Lock_policy)2&gt;::get (6 samples, 0.03%)</title><rect x="84.9" y="965" width="0.4" height="15.0" fill="rgb(231,136,33)" rx="2" ry="2" />
<text  x="87.91" y="975.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;2ul, bool&gt; (2 samples, 0.01%)</title><rect x="797.3" y="341" width="0.1" height="15.0" fill="rgb(219,210,34)" rx="2" ry="2" />
<text  x="800.33" y="351.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (77 samples, 0.38%)</title><rect x="17.4" y="885" width="4.5" height="15.0" fill="rgb(209,164,28)" rx="2" ry="2" />
<text  x="20.40" y="895.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (11 samples, 0.05%)</title><rect x="249.9" y="341" width="0.7" height="15.0" fill="rgb(213,214,42)" rx="2" ry="2" />
<text  x="252.94" y="351.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::function (55 samples, 0.27%)</title><rect x="702.9" y="581" width="3.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="705.89" y="591.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (57 samples, 0.28%)</title><rect x="209.1" y="485" width="3.3" height="15.0" fill="rgb(222,48,52)" rx="2" ry="2" />
<text  x="212.08" y="495.5" ></text>
</g>
<g >
<title>do_sys_poll (95 samples, 0.47%)</title><rect x="16.6" y="933" width="5.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="19.59" y="943.5" ></text>
</g>
<g >
<title>std::find&lt;int const*, int&gt; (2 samples, 0.01%)</title><rect x="517.3" y="725" width="0.2" height="15.0" fill="rgb(250,24,44)" rx="2" ry="2" />
<text  x="520.34" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (4 samples, 0.02%)</title><rect x="1102.1" y="741" width="0.3" height="15.0" fill="rgb(253,96,18)" rx="2" ry="2" />
<text  x="1105.15" y="751.5" ></text>
</g>
<g >
<title>do_iter_write (2 samples, 0.01%)</title><rect x="279.4" y="581" width="0.1" height="15.0" fill="rgb(212,5,48)" rx="2" ry="2" />
<text  x="282.38" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator++ (4 samples, 0.02%)</title><rect x="636.5" y="661" width="0.2" height="15.0" fill="rgb(233,166,5)" rx="2" ry="2" />
<text  x="639.49" y="671.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (109 samples, 0.54%)</title><rect x="146.6" y="517" width="6.4" height="15.0" fill="rgb(243,81,53)" rx="2" ry="2" />
<text  x="149.64" y="527.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (20 samples, 0.10%)</title><rect x="201.8" y="373" width="1.2" height="15.0" fill="rgb(240,193,36)" rx="2" ry="2" />
<text  x="204.85" y="383.5" ></text>
</g>
<g >
<title>std::find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, Input::UiSource::Update()::{lambda(int)#1}&gt; (6 samples, 0.03%)</title><rect x="279.5" y="805" width="0.3" height="15.0" fill="rgb(235,91,39)" rx="2" ry="2" />
<text  x="282.50" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (432 samples, 2.13%)</title><rect x="1024.5" y="725" width="25.2" height="15.0" fill="rgb(241,12,37)" rx="2" ry="2" />
<text  x="1027.50" y="735.5" >s..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::destroy&lt;Bitmap&gt; (219 samples, 1.08%)</title><rect x="907.0" y="373" width="12.7" height="15.0" fill="rgb(234,192,29)" rx="2" ry="2" />
<text  x="909.98" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.01%)</title><rect x="1173.6" y="773" width="0.1" height="15.0" fill="rgb(219,159,38)" rx="2" ry="2" />
<text  x="1176.56" y="783.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (57 samples, 0.28%)</title><rect x="209.1" y="533" width="3.3" height="15.0" fill="rgb(239,215,45)" rx="2" ry="2" />
<text  x="212.08" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (7 samples, 0.03%)</title><rect x="276.7" y="965" width="0.4" height="15.0" fill="rgb(219,36,2)" rx="2" ry="2" />
<text  x="279.70" y="975.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (105 samples, 0.52%)</title><rect x="207.0" y="677" width="6.1" height="15.0" fill="rgb(238,98,10)" rx="2" ry="2" />
<text  x="209.98" y="687.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (63 samples, 0.31%)</title><rect x="203.3" y="501" width="3.7" height="15.0" fill="rgb(222,79,16)" rx="2" ry="2" />
<text  x="206.31" y="511.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (79 samples, 0.39%)</title><rect x="142.0" y="661" width="4.6" height="15.0" fill="rgb(205,23,22)" rx="2" ry="2" />
<text  x="145.04" y="671.5" ></text>
</g>
<g >
<title>Player::MainLoop (59 samples, 0.29%)</title><rect x="268.7" y="933" width="3.5" height="15.0" fill="rgb(251,101,9)" rx="2" ry="2" />
<text  x="271.71" y="943.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (101 samples, 0.50%)</title><rect x="188.1" y="517" width="5.9" height="15.0" fill="rgb(239,193,32)" rx="2" ry="2" />
<text  x="191.15" y="527.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (2 samples, 0.01%)</title><rect x="279.4" y="565" width="0.1" height="15.0" fill="rgb(252,2,3)" rx="2" ry="2" />
<text  x="282.38" y="575.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (16 samples, 0.08%)</title><rect x="1149.7" y="789" width="0.9" height="15.0" fill="rgb(227,48,54)" rx="2" ry="2" />
<text  x="1152.66" y="799.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;int, std::allocator&lt;int&gt;, int&gt; (2 samples, 0.01%)</title><rect x="239.1" y="645" width="0.1" height="15.0" fill="rgb(217,198,8)" rx="2" ry="2" />
<text  x="242.10" y="655.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (170 samples, 0.84%)</title><rect x="132.0" y="933" width="9.9" height="15.0" fill="rgb(234,90,19)" rx="2" ry="2" />
<text  x="134.95" y="943.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::new_allocator (2 samples, 0.01%)</title><rect x="53.7" y="965" width="0.1" height="15.0" fill="rgb(228,82,42)" rx="2" ry="2" />
<text  x="56.72" y="975.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (15 samples, 0.07%)</title><rect x="1181.1" y="629" width="0.9" height="15.0" fill="rgb(238,109,27)" rx="2" ry="2" />
<text  x="1184.08" y="639.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (16 samples, 0.08%)</title><rect x="867.4" y="277" width="0.9" height="15.0" fill="rgb(206,72,4)" rx="2" ry="2" />
<text  x="870.40" y="287.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (498 samples, 2.46%)</title><rect x="239.2" y="549" width="29.0" height="15.0" fill="rgb(235,87,50)" rx="2" ry="2" />
<text  x="242.21" y="559.5" >st..</text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="105.5" y="965" width="0.1" height="15.0" fill="rgb(227,166,10)" rx="2" ry="2" />
<text  x="108.49" y="975.5" ></text>
</g>
<g >
<title>std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;::~pair (11 samples, 0.05%)</title><rect x="700.7" y="661" width="0.7" height="15.0" fill="rgb(252,8,39)" rx="2" ry="2" />
<text  x="703.73" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (118 samples, 0.58%)</title><rect x="1012.8" y="709" width="6.9" height="15.0" fill="rgb(233,77,1)" rx="2" ry="2" />
<text  x="1015.84" y="719.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (3 samples, 0.01%)</title><rect x="58.7" y="965" width="0.2" height="15.0" fill="rgb(215,213,17)" rx="2" ry="2" />
<text  x="61.73" y="975.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (6,592 samples, 32.57%)</title><rect x="617.9" y="741" width="384.3" height="15.0" fill="rgb(213,48,7)" rx="2" ry="2" />
<text  x="620.90" y="751.5" >Game_Interpreter::CommandShowPicture</text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::end (3 samples, 0.01%)</title><rect x="607.2" y="693" width="0.1" height="15.0" fill="rgb(254,182,6)" rx="2" ry="2" />
<text  x="610.17" y="703.5" ></text>
</g>
<g >
<title>x86_pmu_enable (8 samples, 0.04%)</title><rect x="1180.2" y="405" width="0.5" height="15.0" fill="rgb(206,161,37)" rx="2" ry="2" />
<text  x="1183.21" y="415.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::end (5 samples, 0.02%)</title><rect x="666.0" y="677" width="0.3" height="15.0" fill="rgb(240,24,35)" rx="2" ry="2" />
<text  x="669.05" y="687.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (59 samples, 0.29%)</title><rect x="268.7" y="773" width="3.5" height="15.0" fill="rgb(222,207,53)" rx="2" ry="2" />
<text  x="271.71" y="783.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (57 samples, 0.28%)</title><rect x="209.1" y="581" width="3.3" height="15.0" fill="rgb(213,138,4)" rx="2" ry="2" />
<text  x="212.08" y="591.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (59 samples, 0.29%)</title><rect x="268.7" y="677" width="3.5" height="15.0" fill="rgb(224,50,26)" rx="2" ry="2" />
<text  x="271.71" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (41 samples, 0.20%)</title><rect x="122.3" y="965" width="2.4" height="15.0" fill="rgb(237,134,7)" rx="2" ry="2" />
<text  x="125.28" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::new_allocator (7 samples, 0.03%)</title><rect x="52.2" y="965" width="0.4" height="15.0" fill="rgb(252,145,1)" rx="2" ry="2" />
<text  x="55.21" y="975.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (354 samples, 1.75%)</title><rect x="213.1" y="645" width="20.6" height="15.0" fill="rgb(214,187,13)" rx="2" ry="2" />
<text  x="216.10" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (18 samples, 0.09%)</title><rect x="1181.0" y="741" width="1.1" height="15.0" fill="rgb(207,150,6)" rx="2" ry="2" />
<text  x="1184.02" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (10 samples, 0.05%)</title><rect x="119.9" y="965" width="0.6" height="15.0" fill="rgb(217,184,17)" rx="2" ry="2" />
<text  x="122.89" y="975.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (6 samples, 0.03%)</title><rect x="174.7" y="533" width="0.3" height="15.0" fill="rgb(221,172,10)" rx="2" ry="2" />
<text  x="177.68" y="543.5" ></text>
</g>
<g >
<title>Player::IsRPG2k3 (9 samples, 0.04%)</title><rect x="579.5" y="709" width="0.5" height="15.0" fill="rgb(241,136,24)" rx="2" ry="2" />
<text  x="582.48" y="719.5" ></text>
</g>
<g >
<title>ksys_write (12 samples, 0.06%)</title><rect x="23.0" y="933" width="0.7" height="15.0" fill="rgb(235,58,17)" rx="2" ry="2" />
<text  x="26.00" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (7 samples, 0.03%)</title><rect x="1078.3" y="741" width="0.4" height="15.0" fill="rgb(230,64,16)" rx="2" ry="2" />
<text  x="1081.31" y="751.5" ></text>
</g>
<g >
<title>Color::Color (5 samples, 0.02%)</title><rect x="876.6" y="437" width="0.3" height="15.0" fill="rgb(206,17,29)" rx="2" ry="2" />
<text  x="879.61" y="447.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="687.0" y="501" width="0.3" height="15.0" fill="rgb(242,141,24)" rx="2" ry="2" />
<text  x="690.03" y="511.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (284 samples, 1.40%)</title><rect x="793.8" y="405" width="16.6" height="15.0" fill="rgb(245,73,39)" rx="2" ry="2" />
<text  x="796.83" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate@plt (3 samples, 0.01%)</title><rect x="643.4" y="629" width="0.2" height="15.0" fill="rgb(205,51,15)" rx="2" ry="2" />
<text  x="646.43" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.01%)</title><rect x="126.7" y="965" width="0.1" height="15.0" fill="rgb(232,55,41)" rx="2" ry="2" />
<text  x="129.71" y="975.5" ></text>
</g>
<g >
<title>__x64_sys_ppoll (96 samples, 0.47%)</title><rect x="16.6" y="949" width="5.6" height="15.0" fill="rgb(254,195,47)" rx="2" ry="2" />
<text  x="19.59" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (3 samples, 0.01%)</title><rect x="126.1" y="965" width="0.2" height="15.0" fill="rgb(245,75,53)" rx="2" ry="2" />
<text  x="129.12" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_M_lower_bound (44 samples, 0.22%)</title><rect x="209.6" y="341" width="2.6" height="15.0" fill="rgb(210,44,13)" rx="2" ry="2" />
<text  x="212.60" y="351.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (142 samples, 0.70%)</title><rect x="474.8" y="693" width="8.3" height="15.0" fill="rgb(217,156,46)" rx="2" ry="2" />
<text  x="477.78" y="703.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (59 samples, 0.29%)</title><rect x="268.7" y="821" width="3.5" height="15.0" fill="rgb(238,157,30)" rx="2" ry="2" />
<text  x="271.71" y="831.5" ></text>
</g>
<g >
<title>Bitmap::find_format (44 samples, 0.22%)</title><rect x="199.3" y="389" width="2.5" height="15.0" fill="rgb(212,156,35)" rx="2" ry="2" />
<text  x="202.28" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (41 samples, 0.20%)</title><rect x="153.0" y="533" width="2.4" height="15.0" fill="rgb(221,195,10)" rx="2" ry="2" />
<text  x="156.00" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::operator[] (4 samples, 0.02%)</title><rect x="117.1" y="965" width="0.2" height="15.0" fill="rgb(227,84,6)" rx="2" ry="2" />
<text  x="120.09" y="975.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (4 samples, 0.02%)</title><rect x="922.6" y="485" width="0.2" height="15.0" fill="rgb(221,126,18)" rx="2" ry="2" />
<text  x="925.60" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (8 samples, 0.04%)</title><rect x="986.6" y="565" width="0.5" height="15.0" fill="rgb(251,49,1)" rx="2" ry="2" />
<text  x="989.61" y="575.5" ></text>
</g>
<g >
<title>__strlen_avx2 (5 samples, 0.02%)</title><rect x="155.8" y="517" width="0.3" height="15.0" fill="rgb(247,57,34)" rx="2" ry="2" />
<text  x="158.79" y="527.5" ></text>
</g>
<g >
<title>_XReply (9 samples, 0.04%)</title><rect x="1180.1" y="693" width="0.6" height="15.0" fill="rgb(237,108,6)" rx="2" ry="2" />
<text  x="1183.15" y="703.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="824.0" y="405" width="0.1" height="15.0" fill="rgb(217,56,53)" rx="2" ry="2" />
<text  x="826.97" y="415.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::~_Sp_counted_ptr_inplace (13 samples, 0.06%)</title><rect x="904.6" y="389" width="0.7" height="15.0" fill="rgb(224,207,21)" rx="2" ry="2" />
<text  x="907.59" y="399.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Game_Picture*, false&gt;::_Head_base&lt;Game_Picture*&gt; (8 samples, 0.04%)</title><rect x="724.2" y="581" width="0.5" height="15.0" fill="rgb(215,93,10)" rx="2" ry="2" />
<text  x="727.23" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.05%)</title><rect x="974.7" y="677" width="0.6" height="15.0" fill="rgb(241,79,47)" rx="2" ry="2" />
<text  x="977.72" y="687.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (7 samples, 0.03%)</title><rect x="963.1" y="693" width="0.4" height="15.0" fill="rgb(223,125,12)" rx="2" ry="2" />
<text  x="966.06" y="703.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_manager (138 samples, 0.68%)</title><rect x="726.1" y="645" width="8.1" height="15.0" fill="rgb(250,174,25)" rx="2" ry="2" />
<text  x="729.15" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (5 samples, 0.02%)</title><rect x="136.8" y="357" width="0.3" height="15.0" fill="rgb(245,85,10)" rx="2" ry="2" />
<text  x="139.79" y="367.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (39 samples, 0.19%)</title><rect x="144.4" y="469" width="2.2" height="15.0" fill="rgb(236,7,28)" rx="2" ry="2" />
<text  x="147.37" y="479.5" ></text>
</g>
<g >
<title>schedule (7 samples, 0.03%)</title><rect x="1055.0" y="693" width="0.4" height="15.0" fill="rgb(221,83,10)" rx="2" ry="2" />
<text  x="1057.99" y="703.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;int&gt;::~weak_ptr (4 samples, 0.02%)</title><rect x="121.4" y="965" width="0.2" height="15.0" fill="rgb(220,189,32)" rx="2" ry="2" />
<text  x="124.40" y="975.5" ></text>
</g>
<g >
<title>x86_pmu_enable (6 samples, 0.03%)</title><rect x="1055.0" y="613" width="0.3" height="15.0" fill="rgb(218,18,52)" rx="2" ry="2" />
<text  x="1057.99" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (78 samples, 0.39%)</title><rect x="744.5" y="629" width="4.5" height="15.0" fill="rgb(228,140,0)" rx="2" ry="2" />
<text  x="747.45" y="639.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (79 samples, 0.39%)</title><rect x="142.0" y="789" width="4.6" height="15.0" fill="rgb(253,180,45)" rx="2" ry="2" />
<text  x="145.04" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (3 samples, 0.01%)</title><rect x="614.3" y="693" width="0.2" height="15.0" fill="rgb(234,155,27)" rx="2" ry="2" />
<text  x="617.28" y="703.5" ></text>
</g>
<g >
<title>Game_Screen::GetTone (24 samples, 0.12%)</title><rect x="876.9" y="469" width="1.4" height="15.0" fill="rgb(245,125,10)" rx="2" ry="2" />
<text  x="879.90" y="479.5" ></text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (5 samples, 0.02%)</title><rect x="875.9" y="469" width="0.2" height="15.0" fill="rgb(249,113,0)" rx="2" ry="2" />
<text  x="878.85" y="479.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.01%)</title><rect x="149.9" y="389" width="0.1" height="15.0" fill="rgb(242,101,19)" rx="2" ry="2" />
<text  x="152.91" y="399.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (26 samples, 0.13%)</title><rect x="698.2" y="485" width="1.5" height="15.0" fill="rgb(218,1,25)" rx="2" ry="2" />
<text  x="701.17" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="802.7" y="325" width="0.2" height="15.0" fill="rgb(225,117,43)" rx="2" ry="2" />
<text  x="805.75" y="335.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (12 samples, 0.06%)</title><rect x="160.7" y="469" width="0.7" height="15.0" fill="rgb(215,103,4)" rx="2" ry="2" />
<text  x="163.69" y="479.5" ></text>
</g>
<g >
<title>std::__find_if&lt;int const*, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (9 samples, 0.04%)</title><rect x="606.6" y="677" width="0.6" height="15.0" fill="rgb(221,128,5)" rx="2" ry="2" />
<text  x="609.65" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (18 samples, 0.09%)</title><rect x="818.0" y="405" width="1.0" height="15.0" fill="rgb(209,155,21)" rx="2" ry="2" />
<text  x="820.96" y="415.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (79 samples, 0.39%)</title><rect x="142.0" y="597" width="4.6" height="15.0" fill="rgb(249,8,18)" rx="2" ry="2" />
<text  x="145.04" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_S_value (7 samples, 0.03%)</title><rect x="233.0" y="325" width="0.4" height="15.0" fill="rgb(214,35,17)" rx="2" ry="2" />
<text  x="235.98" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*, std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt; &gt; (4 samples, 0.02%)</title><rect x="744.1" y="645" width="0.2" height="15.0" fill="rgb(254,202,24)" rx="2" ry="2" />
<text  x="747.10" y="655.5" ></text>
</g>
<g >
<title>__interceptor_free (107 samples, 0.53%)</title><rect x="258.4" y="309" width="6.2" height="15.0" fill="rgb(205,186,36)" rx="2" ry="2" />
<text  x="261.39" y="319.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::expired (11 samples, 0.05%)</title><rect x="749.2" y="645" width="0.6" height="15.0" fill="rgb(249,225,51)" rx="2" ry="2" />
<text  x="752.18" y="655.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (79 samples, 0.39%)</title><rect x="142.0" y="837" width="4.6" height="15.0" fill="rgb(213,92,51)" rx="2" ry="2" />
<text  x="145.04" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt;@plt (3 samples, 0.01%)</title><rect x="940.0" y="693" width="0.1" height="15.0" fill="rgb(245,52,17)" rx="2" ry="2" />
<text  x="942.97" y="703.5" ></text>
</g>
<g >
<title>Game_Map::Update (146 samples, 0.72%)</title><rect x="153.0" y="965" width="8.5" height="15.0" fill="rgb(218,109,50)" rx="2" ry="2" />
<text  x="156.00" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (100 samples, 0.49%)</title><rect x="1029.2" y="709" width="5.9" height="15.0" fill="rgb(249,19,49)" rx="2" ry="2" />
<text  x="1032.22" y="719.5" ></text>
</g>
<g >
<title>Game_Map::Refresh (8 samples, 0.04%)</title><rect x="32.7" y="965" width="0.4" height="15.0" fill="rgb(221,176,14)" rx="2" ry="2" />
<text  x="35.68" y="975.5" ></text>
</g>
<g >
<title>__interceptor_free (62 samples, 0.31%)</title><rect x="264.6" y="325" width="3.6" height="15.0" fill="rgb(209,65,52)" rx="2" ry="2" />
<text  x="267.63" y="335.5" ></text>
</g>
<g >
<title>unix_poll (2 samples, 0.01%)</title><rect x="22.0" y="901" width="0.1" height="15.0" fill="rgb(227,88,39)" rx="2" ry="2" />
<text  x="25.01" y="911.5" ></text>
</g>
<g >
<title>get_page_from_freelist (7 samples, 0.03%)</title><rect x="249.5" y="309" width="0.4" height="15.0" fill="rgb(206,119,12)" rx="2" ry="2" />
<text  x="252.47" y="319.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (63 samples, 0.31%)</title><rect x="17.8" y="805" width="3.7" height="15.0" fill="rgb(225,145,32)" rx="2" ry="2" />
<text  x="20.81" y="815.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (2 samples, 0.01%)</title><rect x="891.9" y="437" width="0.2" height="15.0" fill="rgb(251,177,29)" rx="2" ry="2" />
<text  x="894.94" y="447.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (68 samples, 0.34%)</title><rect x="194.0" y="597" width="4.0" height="15.0" fill="rgb(220,71,22)" rx="2" ry="2" />
<text  x="197.04" y="607.5" ></text>
</g>
<g >
<title>__gthread_active_p (2 samples, 0.01%)</title><rect x="902.9" y="389" width="0.1" height="15.0" fill="rgb(222,196,51)" rx="2" ry="2" />
<text  x="905.90" y="399.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (2 samples, 0.01%)</title><rect x="138.5" y="373" width="0.2" height="15.0" fill="rgb(230,176,27)" rx="2" ry="2" />
<text  x="141.54" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::operator== (2 samples, 0.01%)</title><rect x="70.3" y="965" width="0.2" height="15.0" fill="rgb(231,172,33)" rx="2" ry="2" />
<text  x="73.33" y="975.5" ></text>
</g>
<g >
<title>do_page_fault (19 samples, 0.09%)</title><rect x="137.3" y="373" width="1.1" height="15.0" fill="rgb(253,171,13)" rx="2" ry="2" />
<text  x="140.32" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (13 samples, 0.06%)</title><rect x="277.4" y="981" width="0.8" height="15.0" fill="rgb(221,32,24)" rx="2" ry="2" />
<text  x="280.40" y="991.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (59 samples, 0.29%)</title><rect x="1170.1" y="757" width="3.4" height="15.0" fill="rgb(231,145,28)" rx="2" ry="2" />
<text  x="1173.06" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_M_end (3 samples, 0.01%)</title><rect x="68.5" y="965" width="0.1" height="15.0" fill="rgb(229,225,6)" rx="2" ry="2" />
<text  x="71.47" y="975.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::end (2 samples, 0.01%)</title><rect x="102.8" y="965" width="0.1" height="15.0" fill="rgb(242,176,48)" rx="2" ry="2" />
<text  x="105.81" y="975.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::operator() (4 samples, 0.02%)</title><rect x="233.4" y="325" width="0.2" height="15.0" fill="rgb(225,170,39)" rx="2" ry="2" />
<text  x="236.39" y="335.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_ptr (2 samples, 0.01%)</title><rect x="953.6" y="597" width="0.1" height="15.0" fill="rgb(224,97,51)" rx="2" ry="2" />
<text  x="956.56" y="607.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_destroy (133 samples, 0.66%)</title><rect x="726.4" y="629" width="7.8" height="15.0" fill="rgb(249,184,44)" rx="2" ry="2" />
<text  x="729.44" y="639.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (5 samples, 0.02%)</title><rect x="824.5" y="469" width="0.3" height="15.0" fill="rgb(230,34,48)" rx="2" ry="2" />
<text  x="827.49" y="479.5" ></text>
</g>
<g >
<title>Player::IsMajorUpdatedVersion (2 samples, 0.01%)</title><rect x="36.7" y="965" width="0.1" height="15.0" fill="rgb(214,4,3)" rx="2" ry="2" />
<text  x="39.70" y="975.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (2 samples, 0.01%)</title><rect x="893.1" y="453" width="0.1" height="15.0" fill="rgb(209,144,52)" rx="2" ry="2" />
<text  x="896.11" y="463.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (354 samples, 1.75%)</title><rect x="213.1" y="757" width="20.6" height="15.0" fill="rgb(220,113,51)" rx="2" ry="2" />
<text  x="216.10" y="767.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (2 samples, 0.01%)</title><rect x="204.3" y="117" width="0.1" height="15.0" fill="rgb(210,62,51)" rx="2" ry="2" />
<text  x="207.30" y="127.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (91 samples, 0.45%)</title><rect x="181.9" y="629" width="5.3" height="15.0" fill="rgb(231,135,3)" rx="2" ry="2" />
<text  x="184.85" y="639.5" ></text>
</g>
<g >
<title>XSync (9 samples, 0.04%)</title><rect x="1180.1" y="709" width="0.6" height="15.0" fill="rgb(209,34,8)" rx="2" ry="2" />
<text  x="1183.15" y="719.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_manager (3 samples, 0.01%)</title><rect x="643.3" y="613" width="0.1" height="15.0" fill="rgb(231,118,4)" rx="2" ry="2" />
<text  x="646.25" y="623.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.01%)</title><rect x="17.3" y="885" width="0.1" height="15.0" fill="rgb(250,155,38)" rx="2" ry="2" />
<text  x="20.29" y="895.5" ></text>
</g>
<g >
<title>std::_Bit_reference::operator bool (7 samples, 0.03%)</title><rect x="282.9" y="757" width="0.4" height="15.0" fill="rgb(230,209,20)" rx="2" ry="2" />
<text  x="285.94" y="767.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (62 samples, 0.31%)</title><rect x="203.3" y="293" width="3.6" height="15.0" fill="rgb(246,46,11)" rx="2" ry="2" />
<text  x="206.31" y="303.5" ></text>
</g>
<g >
<title>Game_Picture::Show (500 samples, 2.47%)</title><rect x="239.1" y="725" width="29.1" height="15.0" fill="rgb(232,5,42)" rx="2" ry="2" />
<text  x="242.10" y="735.5" >Ga..</text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (59 samples, 0.29%)</title><rect x="268.7" y="613" width="3.5" height="15.0" fill="rgb(213,67,29)" rx="2" ry="2" />
<text  x="271.71" y="623.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (440 samples, 2.17%)</title><rect x="161.5" y="949" width="25.7" height="15.0" fill="rgb(235,226,9)" rx="2" ry="2" />
<text  x="164.51" y="959.5" >G..</text>
</g>
<g >
<title>Cache::Picture (16 samples, 0.08%)</title><rect x="187.2" y="533" width="0.9" height="15.0" fill="rgb(212,174,51)" rx="2" ry="2" />
<text  x="190.22" y="543.5" ></text>
</g>
<g >
<title>pixman_image_get_width (19 samples, 0.09%)</title><rect x="1157.8" y="741" width="1.1" height="15.0" fill="rgb(244,12,11)" rx="2" ry="2" />
<text  x="1160.76" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (12 samples, 0.06%)</title><rect x="467.9" y="693" width="0.7" height="15.0" fill="rgb(229,54,52)" rx="2" ry="2" />
<text  x="470.90" y="703.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::destroy&lt;Bitmap&gt; (219 samples, 1.08%)</title><rect x="907.0" y="389" width="12.7" height="15.0" fill="rgb(235,33,51)" rx="2" ry="2" />
<text  x="909.98" y="399.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;2ul, bool, false&gt;::_Head_base&lt;bool&amp;&gt; (5 samples, 0.02%)</title><rect x="823.2" y="405" width="0.2" height="15.0" fill="rgb(234,116,44)" rx="2" ry="2" />
<text  x="826.15" y="415.5" ></text>
</g>
<g >
<title>pthread_getspecific@plt (2 samples, 0.01%)</title><rect x="138.7" y="405" width="0.1" height="15.0" fill="rgb(250,75,15)" rx="2" ry="2" />
<text  x="141.66" y="415.5" ></text>
</g>
<g >
<title>Scene::IsAsyncPending (4 samples, 0.02%)</title><rect x="1177.9" y="821" width="0.2" height="15.0" fill="rgb(217,8,23)" rx="2" ry="2" />
<text  x="1180.87" y="831.5" ></text>
</g>
<g >
<title>Game_Picture::Show (109 samples, 0.54%)</title><rect x="146.6" y="917" width="6.4" height="15.0" fill="rgb(219,101,23)" rx="2" ry="2" />
<text  x="149.64" y="927.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (4 samples, 0.02%)</title><rect x="891.7" y="421" width="0.2" height="15.0" fill="rgb(250,150,19)" rx="2" ry="2" />
<text  x="894.71" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (77 samples, 0.38%)</title><rect x="399.2" y="725" width="4.5" height="15.0" fill="rgb(248,103,41)" rx="2" ry="2" />
<text  x="402.17" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt; (5 samples, 0.02%)</title><rect x="1145.6" y="805" width="0.3" height="15.0" fill="rgb(211,149,21)" rx="2" ry="2" />
<text  x="1148.64" y="815.5" ></text>
</g>
<g >
<title>__do_munmap (36 samples, 0.18%)</title><rect x="204.1" y="197" width="2.1" height="15.0" fill="rgb(236,8,29)" rx="2" ry="2" />
<text  x="207.12" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_value (3 samples, 0.01%)</title><rect x="69.1" y="965" width="0.2" height="15.0" fill="rgb(233,146,2)" rx="2" ry="2" />
<text  x="72.11" y="975.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (47 samples, 0.23%)</title><rect x="746.0" y="581" width="2.8" height="15.0" fill="rgb(252,35,21)" rx="2" ry="2" />
<text  x="749.03" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (55 samples, 0.27%)</title><rect x="980.2" y="693" width="3.2" height="15.0" fill="rgb(211,212,36)" rx="2" ry="2" />
<text  x="983.20" y="703.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (4 samples, 0.02%)</title><rect x="1160.6" y="773" width="0.2" height="15.0" fill="rgb(220,13,37)" rx="2" ry="2" />
<text  x="1163.56" y="783.5" ></text>
</g>
<g >
<title>std::forward&lt;int&amp;&gt; (2 samples, 0.01%)</title><rect x="871.8" y="437" width="0.1" height="15.0" fill="rgb(232,115,47)" rx="2" ry="2" />
<text  x="874.77" y="447.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (8 samples, 0.04%)</title><rect x="889.7" y="437" width="0.4" height="15.0" fill="rgb(224,229,16)" rx="2" ry="2" />
<text  x="892.67" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (8 samples, 0.04%)</title><rect x="892.6" y="469" width="0.5" height="15.0" fill="rgb(244,201,35)" rx="2" ry="2" />
<text  x="895.64" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (7 samples, 0.03%)</title><rect x="970.6" y="677" width="0.4" height="15.0" fill="rgb(217,164,53)" rx="2" ry="2" />
<text  x="973.64" y="687.5" ></text>
</g>
<g >
<title>Sdl2Ui::GetTicks (2 samples, 0.01%)</title><rect x="156.4" y="597" width="0.1" height="15.0" fill="rgb(246,95,50)" rx="2" ry="2" />
<text  x="159.38" y="607.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (20 samples, 0.10%)</title><rect x="201.8" y="501" width="1.2" height="15.0" fill="rgb(206,63,31)" rx="2" ry="2" />
<text  x="204.85" y="511.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (12 samples, 0.06%)</title><rect x="813.6" y="373" width="0.7" height="15.0" fill="rgb(242,1,13)" rx="2" ry="2" />
<text  x="816.59" y="383.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage2 (2 samples, 0.01%)</title><rect x="1178.1" y="805" width="0.1" height="15.0" fill="rgb(217,15,31)" rx="2" ry="2" />
<text  x="1181.11" y="815.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.01%)</title><rect x="986.9" y="469" width="0.2" height="15.0" fill="rgb(228,227,40)" rx="2" ry="2" />
<text  x="989.90" y="479.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (43 samples, 0.21%)</title><rect x="798.6" y="357" width="2.5" height="15.0" fill="rgb(238,164,48)" rx="2" ry="2" />
<text  x="801.55" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (52 samples, 0.26%)</title><rect x="253.9" y="357" width="3.0" height="15.0" fill="rgb(244,136,9)" rx="2" ry="2" />
<text  x="256.90" y="367.5" ></text>
</g>
<g >
<title>xcb_writev (2 samples, 0.01%)</title><rect x="279.4" y="757" width="0.1" height="15.0" fill="rgb(238,66,11)" rx="2" ry="2" />
<text  x="282.38" y="767.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (5 samples, 0.02%)</title><rect x="136.8" y="341" width="0.3" height="15.0" fill="rgb(226,17,9)" rx="2" ry="2" />
<text  x="139.79" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (4 samples, 0.02%)</title><rect x="609.1" y="693" width="0.2" height="15.0" fill="rgb(246,68,27)" rx="2" ry="2" />
<text  x="612.09" y="703.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (5 samples, 0.02%)</title><rect x="1177.2" y="741" width="0.3" height="15.0" fill="rgb(245,112,11)" rx="2" ry="2" />
<text  x="1180.23" y="751.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (68 samples, 0.34%)</title><rect x="194.0" y="773" width="4.0" height="15.0" fill="rgb(211,146,2)" rx="2" ry="2" />
<text  x="197.04" y="783.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::~_Head_base (72 samples, 0.36%)</title><rect x="157.3" y="549" width="4.2" height="15.0" fill="rgb(229,185,31)" rx="2" ry="2" />
<text  x="160.31" y="559.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (19 samples, 0.09%)</title><rect x="784.4" y="453" width="1.2" height="15.0" fill="rgb(226,157,6)" rx="2" ry="2" />
<text  x="787.44" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_ptr (5 samples, 0.02%)</title><rect x="43.6" y="965" width="0.3" height="15.0" fill="rgb(239,5,27)" rx="2" ry="2" />
<text  x="46.58" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (11 samples, 0.05%)</title><rect x="500.0" y="677" width="0.6" height="15.0" fill="rgb(210,116,40)" rx="2" ry="2" />
<text  x="502.97" y="687.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (9 samples, 0.04%)</title><rect x="867.4" y="261" width="0.5" height="15.0" fill="rgb(215,198,3)" rx="2" ry="2" />
<text  x="870.40" y="271.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (62 samples, 0.31%)</title><rect x="17.9" y="773" width="3.6" height="15.0" fill="rgb(217,55,31)" rx="2" ry="2" />
<text  x="20.87" y="783.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (11 samples, 0.05%)</title><rect x="870.0" y="373" width="0.6" height="15.0" fill="rgb(244,225,30)" rx="2" ry="2" />
<text  x="872.96" y="383.5" ></text>
</g>
<g >
<title>__sys_recvmsg (5 samples, 0.02%)</title><rect x="1179.6" y="581" width="0.3" height="15.0" fill="rgb(239,87,16)" rx="2" ry="2" />
<text  x="1182.62" y="591.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (11 samples, 0.05%)</title><rect x="1182.1" y="821" width="0.7" height="15.0" fill="rgb(229,6,21)" rx="2" ry="2" />
<text  x="1185.13" y="831.5" ></text>
</g>
<g >
<title>Game_Picture::Show (354 samples, 1.75%)</title><rect x="213.1" y="837" width="20.6" height="15.0" fill="rgb(251,187,15)" rx="2" ry="2" />
<text  x="216.10" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (4 samples, 0.02%)</title><rect x="743.3" y="629" width="0.3" height="15.0" fill="rgb(206,131,5)" rx="2" ry="2" />
<text  x="746.35" y="639.5" ></text>
</g>
<g >
<title>operator delete@plt (2 samples, 0.01%)</title><rect x="953.3" y="549" width="0.1" height="15.0" fill="rgb(243,3,39)" rx="2" ry="2" />
<text  x="956.32" y="559.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (33 samples, 0.16%)</title><rect x="817.1" y="437" width="1.9" height="15.0" fill="rgb(242,180,48)" rx="2" ry="2" />
<text  x="820.09" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (2 samples, 0.01%)</title><rect x="617.6" y="725" width="0.1" height="15.0" fill="rgb(209,75,45)" rx="2" ry="2" />
<text  x="620.60" y="735.5" ></text>
</g>
<g >
<title>Game_Picture::Show (105 samples, 0.52%)</title><rect x="207.0" y="821" width="6.1" height="15.0" fill="rgb(241,76,30)" rx="2" ry="2" />
<text  x="209.98" y="831.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (5 samples, 0.02%)</title><rect x="896.5" y="437" width="0.3" height="15.0" fill="rgb(222,18,22)" rx="2" ry="2" />
<text  x="899.54" y="447.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (3 samples, 0.01%)</title><rect x="987.7" y="693" width="0.1" height="15.0" fill="rgb(220,92,18)" rx="2" ry="2" />
<text  x="990.66" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (288 samples, 1.42%)</title><rect x="215.3" y="549" width="16.8" height="15.0" fill="rgb(240,150,51)" rx="2" ry="2" />
<text  x="218.31" y="559.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (109 samples, 0.54%)</title><rect x="146.6" y="565" width="6.4" height="15.0" fill="rgb(219,208,1)" rx="2" ry="2" />
<text  x="149.64" y="575.5" ></text>
</g>
<g >
<title>ttwu_do_activate (5 samples, 0.02%)</title><rect x="23.2" y="789" width="0.3" height="15.0" fill="rgb(245,2,43)" rx="2" ry="2" />
<text  x="26.23" y="799.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (3 samples, 0.01%)</title><rect x="714.8" y="549" width="0.2" height="15.0" fill="rgb(245,57,49)" rx="2" ry="2" />
<text  x="717.84" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (76 samples, 0.38%)</title><rect x="718.8" y="597" width="4.4" height="15.0" fill="rgb(252,79,3)" rx="2" ry="2" />
<text  x="721.80" y="607.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (6 samples, 0.03%)</title><rect x="1055.0" y="581" width="0.3" height="15.0" fill="rgb(216,224,0)" rx="2" ry="2" />
<text  x="1057.99" y="591.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (68 samples, 0.34%)</title><rect x="203.0" y="773" width="4.0" height="15.0" fill="rgb(234,97,54)" rx="2" ry="2" />
<text  x="206.01" y="783.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (106 samples, 0.52%)</title><rect x="778.0" y="437" width="6.2" height="15.0" fill="rgb(249,46,16)" rx="2" ry="2" />
<text  x="780.97" y="447.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (68 samples, 0.34%)</title><rect x="194.0" y="693" width="4.0" height="15.0" fill="rgb(221,46,37)" rx="2" ry="2" />
<text  x="197.04" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::operator++ (2 samples, 0.01%)</title><rect x="45.4" y="965" width="0.2" height="15.0" fill="rgb(219,53,34)" rx="2" ry="2" />
<text  x="48.44" y="975.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (13 samples, 0.06%)</title><rect x="275.0" y="965" width="0.8" height="15.0" fill="rgb(206,23,30)" rx="2" ry="2" />
<text  x="278.01" y="975.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (38 samples, 0.19%)</title><rect x="213.1" y="581" width="2.2" height="15.0" fill="rgb(210,99,27)" rx="2" ry="2" />
<text  x="216.10" y="591.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (79 samples, 0.39%)</title><rect x="142.0" y="917" width="4.6" height="15.0" fill="rgb(221,7,40)" rx="2" ry="2" />
<text  x="145.04" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_value (13 samples, 0.06%)</title><rect x="791.6" y="405" width="0.8" height="15.0" fill="rgb(227,52,22)" rx="2" ry="2" />
<text  x="794.61" y="415.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (4 samples, 0.02%)</title><rect x="1161.0" y="741" width="0.2" height="15.0" fill="rgb(251,187,4)" rx="2" ry="2" />
<text  x="1163.97" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (9 samples, 0.04%)</title><rect x="604.0" y="677" width="0.5" height="15.0" fill="rgb(249,113,29)" rx="2" ry="2" />
<text  x="606.96" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (2 samples, 0.01%)</title><rect x="69.8" y="965" width="0.1" height="15.0" fill="rgb(231,128,6)" rx="2" ry="2" />
<text  x="72.81" y="975.5" ></text>
</g>
<g >
<title>Tone::Tone (11 samples, 0.05%)</title><rect x="961.7" y="677" width="0.7" height="15.0" fill="rgb(247,25,46)" rx="2" ry="2" />
<text  x="964.72" y="687.5" ></text>
</g>
<g >
<title>alloc_pages_vma (39 samples, 0.19%)</title><rect x="247.7" y="341" width="2.2" height="15.0" fill="rgb(211,227,21)" rx="2" ry="2" />
<text  x="250.67" y="351.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (68 samples, 0.34%)</title><rect x="194.0" y="629" width="4.0" height="15.0" fill="rgb(248,140,43)" rx="2" ry="2" />
<text  x="197.04" y="639.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandControlSwitches (3 samples, 0.01%)</title><rect x="519.5" y="741" width="0.2" height="15.0" fill="rgb(219,157,51)" rx="2" ry="2" />
<text  x="522.50" y="751.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (2 samples, 0.01%)</title><rect x="1182.2" y="789" width="0.1" height="15.0" fill="rgb(220,151,36)" rx="2" ry="2" />
<text  x="1185.19" y="799.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (6 samples, 0.03%)</title><rect x="1055.0" y="645" width="0.3" height="15.0" fill="rgb(214,194,3)" rx="2" ry="2" />
<text  x="1057.99" y="655.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (498 samples, 2.46%)</title><rect x="239.2" y="533" width="29.0" height="15.0" fill="rgb(231,158,3)" rx="2" ry="2" />
<text  x="242.21" y="543.5" >st..</text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (10 samples, 0.05%)</title><rect x="882.8" y="389" width="0.6" height="15.0" fill="rgb(230,54,32)" rx="2" ry="2" />
<text  x="885.85" y="399.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (52 samples, 0.26%)</title><rect x="253.9" y="405" width="3.0" height="15.0" fill="rgb(239,112,28)" rx="2" ry="2" />
<text  x="256.90" y="415.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (68 samples, 0.34%)</title><rect x="194.0" y="853" width="4.0" height="15.0" fill="rgb(205,208,31)" rx="2" ry="2" />
<text  x="197.04" y="863.5" ></text>
</g>
<g >
<title>operator== (5 samples, 0.02%)</title><rect x="966.5" y="645" width="0.3" height="15.0" fill="rgb(210,199,6)" rx="2" ry="2" />
<text  x="969.50" y="655.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.03%)</title><rect x="1183.8" y="981" width="0.4" height="15.0" fill="rgb(219,195,33)" rx="2" ry="2" />
<text  x="1186.76" y="991.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (8 samples, 0.04%)</title><rect x="609.0" y="725" width="0.4" height="15.0" fill="rgb(248,105,44)" rx="2" ry="2" />
<text  x="611.98" y="735.5" ></text>
</g>
<g >
<title>Scene::IsAsyncPending (2 samples, 0.01%)</title><rect x="1182.8" y="885" width="0.1" height="15.0" fill="rgb(251,82,6)" rx="2" ry="2" />
<text  x="1185.77" y="895.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (6 samples, 0.03%)</title><rect x="970.7" y="661" width="0.3" height="15.0" fill="rgb(230,101,29)" rx="2" ry="2" />
<text  x="973.70" y="671.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (59 samples, 0.29%)</title><rect x="268.7" y="469" width="3.5" height="15.0" fill="rgb(232,85,43)" rx="2" ry="2" />
<text  x="271.71" y="479.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (3 samples, 0.01%)</title><rect x="1125.8" y="773" width="0.2" height="15.0" fill="rgb(246,218,17)" rx="2" ry="2" />
<text  x="1128.82" y="783.5" ></text>
</g>
<g >
<title>std::__weak_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__weak_count (4 samples, 0.02%)</title><rect x="688.0" y="597" width="0.2" height="15.0" fill="rgb(226,162,39)" rx="2" ry="2" />
<text  x="690.97" y="607.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (4 samples, 0.02%)</title><rect x="869.3" y="277" width="0.3" height="15.0" fill="rgb(231,187,4)" rx="2" ry="2" />
<text  x="872.32" y="287.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="814.6" y="341" width="0.1" height="15.0" fill="rgb(215,84,37)" rx="2" ry="2" />
<text  x="817.58" y="351.5" ></text>
</g>
<g >
<title>Bitmap::Create (208 samples, 1.03%)</title><rect x="859.8" y="469" width="12.1" height="15.0" fill="rgb(239,204,29)" rx="2" ry="2" />
<text  x="862.76" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (13 samples, 0.06%)</title><rect x="115.6" y="965" width="0.7" height="15.0" fill="rgb(211,178,17)" rx="2" ry="2" />
<text  x="118.57" y="975.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (170 samples, 0.84%)</title><rect x="132.0" y="885" width="9.9" height="15.0" fill="rgb(221,5,42)" rx="2" ry="2" />
<text  x="134.95" y="895.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (498 samples, 2.46%)</title><rect x="239.2" y="517" width="29.0" height="15.0" fill="rgb(234,9,4)" rx="2" ry="2" />
<text  x="242.21" y="527.5" >st..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (52 samples, 0.26%)</title><rect x="203.4" y="277" width="3.0" height="15.0" fill="rgb(249,172,16)" rx="2" ry="2" />
<text  x="206.36" y="287.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (2 samples, 0.01%)</title><rect x="127.5" y="965" width="0.1" height="15.0" fill="rgb(214,226,31)" rx="2" ry="2" />
<text  x="130.46" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (4 samples, 0.02%)</title><rect x="875.6" y="437" width="0.3" height="15.0" fill="rgb(219,21,39)" rx="2" ry="2" />
<text  x="878.62" y="447.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (68 samples, 0.34%)</title><rect x="194.0" y="805" width="4.0" height="15.0" fill="rgb(209,120,6)" rx="2" ry="2" />
<text  x="197.04" y="815.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (62 samples, 0.31%)</title><rect x="226.1" y="469" width="3.6" height="15.0" fill="rgb(232,55,21)" rx="2" ry="2" />
<text  x="229.10" y="479.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (3 samples, 0.01%)</title><rect x="206.6" y="181" width="0.2" height="15.0" fill="rgb(254,7,42)" rx="2" ry="2" />
<text  x="209.63" y="191.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (4 samples, 0.02%)</title><rect x="27.1" y="965" width="0.3" height="15.0" fill="rgb(253,47,51)" rx="2" ry="2" />
<text  x="30.14" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (2 samples, 0.01%)</title><rect x="939.2" y="661" width="0.1" height="15.0" fill="rgb(240,168,39)" rx="2" ry="2" />
<text  x="942.16" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (745 samples, 3.68%)</title><rect x="325.0" y="757" width="43.5" height="15.0" fill="rgb(208,224,37)" rx="2" ry="2" />
<text  x="328.02" y="767.5" >std:..</text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (52 samples, 0.26%)</title><rect x="253.9" y="453" width="3.0" height="15.0" fill="rgb(237,166,43)" rx="2" ry="2" />
<text  x="256.90" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate (101 samples, 0.50%)</title><rect x="694.0" y="565" width="5.9" height="15.0" fill="rgb(214,143,27)" rx="2" ry="2" />
<text  x="696.97" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (5 samples, 0.02%)</title><rect x="129.1" y="965" width="0.3" height="15.0" fill="rgb(218,9,23)" rx="2" ry="2" />
<text  x="132.10" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::end (2 samples, 0.01%)</title><rect x="118.1" y="965" width="0.2" height="15.0" fill="rgb(225,26,51)" rx="2" ry="2" />
<text  x="121.14" y="975.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (354 samples, 1.75%)</title><rect x="213.1" y="789" width="20.6" height="15.0" fill="rgb(232,32,18)" rx="2" ry="2" />
<text  x="216.10" y="799.5" ></text>
</g>
<g >
<title>malloc (40 samples, 0.20%)</title><rect x="150.7" y="453" width="2.3" height="15.0" fill="rgb(227,190,33)" rx="2" ry="2" />
<text  x="153.66" y="463.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (11 samples, 0.05%)</title><rect x="815.9" y="469" width="0.6" height="15.0" fill="rgb(233,185,13)" rx="2" ry="2" />
<text  x="818.87" y="479.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (68 samples, 0.34%)</title><rect x="194.0" y="549" width="4.0" height="15.0" fill="rgb(222,67,3)" rx="2" ry="2" />
<text  x="197.04" y="559.5" ></text>
</g>
<g >
<title>do_page_fault (4 samples, 0.02%)</title><rect x="139.6" y="421" width="0.3" height="15.0" fill="rgb(252,176,48)" rx="2" ry="2" />
<text  x="142.65" y="431.5" ></text>
</g>
<g >
<title>Game_Switches_Class::Get (63 samples, 0.31%)</title><rect x="282.6" y="773" width="3.7" height="15.0" fill="rgb(251,137,46)" rx="2" ry="2" />
<text  x="285.59" y="783.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (17 samples, 0.08%)</title><rect x="111.3" y="965" width="1.0" height="15.0" fill="rgb(223,194,6)" rx="2" ry="2" />
<text  x="114.32" y="975.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (105 samples, 0.52%)</title><rect x="207.0" y="869" width="6.1" height="15.0" fill="rgb(215,196,50)" rx="2" ry="2" />
<text  x="209.98" y="879.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (2 samples, 0.01%)</title><rect x="1179.4" y="757" width="0.1" height="15.0" fill="rgb(251,109,6)" rx="2" ry="2" />
<text  x="1182.39" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt;::_Iter_equals_val (7 samples, 0.03%)</title><rect x="504.2" y="677" width="0.4" height="15.0" fill="rgb(242,24,27)" rx="2" ry="2" />
<text  x="507.22" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (63 samples, 0.31%)</title><rect x="683.7" y="549" width="3.7" height="15.0" fill="rgb(221,63,34)" rx="2" ry="2" />
<text  x="686.71" y="559.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (109 samples, 0.54%)</title><rect x="146.6" y="677" width="6.4" height="15.0" fill="rgb(214,196,29)" rx="2" ry="2" />
<text  x="149.64" y="687.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::size (6 samples, 0.03%)</title><rect x="510.4" y="693" width="0.4" height="15.0" fill="rgb(222,123,50)" rx="2" ry="2" />
<text  x="513.40" y="703.5" ></text>
</g>
<g >
<title>operator delete (38 samples, 0.19%)</title><rect x="213.1" y="565" width="2.2" height="15.0" fill="rgb(208,87,29)" rx="2" ry="2" />
<text  x="216.10" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (44 samples, 0.22%)</title><rect x="806.8" y="357" width="2.6" height="15.0" fill="rgb(237,57,22)" rx="2" ry="2" />
<text  x="809.83" y="367.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.03%)</title><rect x="155.7" y="533" width="0.4" height="15.0" fill="rgb(253,142,16)" rx="2" ry="2" />
<text  x="158.68" y="543.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (68 samples, 0.34%)</title><rect x="194.0" y="565" width="4.0" height="15.0" fill="rgb(216,161,13)" rx="2" ry="2" />
<text  x="197.04" y="575.5" ></text>
</g>
<g >
<title>activate_task (5 samples, 0.02%)</title><rect x="23.2" y="773" width="0.3" height="15.0" fill="rgb(222,159,14)" rx="2" ry="2" />
<text  x="26.23" y="783.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_key (9 samples, 0.04%)</title><rect x="810.6" y="437" width="0.5" height="15.0" fill="rgb(218,149,3)" rx="2" ry="2" />
<text  x="813.56" y="447.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_memcmp (4 samples, 0.02%)</title><rect x="268.4" y="965" width="0.3" height="15.0" fill="rgb(226,116,32)" rx="2" ry="2" />
<text  x="271.42" y="975.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_clone (94 samples, 0.46%)</title><rect x="709.8" y="645" width="5.5" height="15.0" fill="rgb(249,124,34)" rx="2" ry="2" />
<text  x="712.83" y="655.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (3 samples, 0.01%)</title><rect x="819.3" y="453" width="0.2" height="15.0" fill="rgb(208,90,21)" rx="2" ry="2" />
<text  x="822.30" y="463.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (500 samples, 2.47%)</title><rect x="239.1" y="757" width="29.1" height="15.0" fill="rgb(237,5,51)" rx="2" ry="2" />
<text  x="242.10" y="767.5" >Ga..</text>
</g>
<g >
<title>std::bitset&lt;152ul&gt;::operator[] (2 samples, 0.01%)</title><rect x="279.6" y="725" width="0.1" height="15.0" fill="rgb(229,17,26)" rx="2" ry="2" />
<text  x="282.61" y="735.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (88 samples, 0.43%)</title><rect x="694.7" y="517" width="5.2" height="15.0" fill="rgb(206,84,11)" rx="2" ry="2" />
<text  x="697.73" y="527.5" ></text>
</g>
<g >
<title>Bitmap::StretchBlit (2 samples, 0.01%)</title><rect x="278.6" y="741" width="0.1" height="15.0" fill="rgb(210,100,29)" rx="2" ry="2" />
<text  x="281.56" y="751.5" ></text>
</g>
<g >
<title>Scene_Map::Update (15,416 samples, 76.16%)</title><rect x="280.6" y="869" width="898.7" height="15.0" fill="rgb(232,226,32)" rx="2" ry="2" />
<text  x="283.60" y="879.5" >Scene_Map::Update</text>
</g>
<g >
<title>[libasan.so.5.0.0] (33 samples, 0.16%)</title><rect x="685.4" y="533" width="1.9" height="15.0" fill="rgb(236,9,48)" rx="2" ry="2" />
<text  x="688.40" y="543.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (13 samples, 0.06%)</title><rect x="856.8" y="421" width="0.7" height="15.0" fill="rgb(251,118,11)" rx="2" ry="2" />
<text  x="859.79" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append@plt (6 samples, 0.03%)</title><rect x="643.6" y="645" width="0.4" height="15.0" fill="rgb(232,63,9)" rx="2" ry="2" />
<text  x="646.60" y="655.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (20 samples, 0.10%)</title><rect x="641.9" y="565" width="1.2" height="15.0" fill="rgb(218,60,28)" rx="2" ry="2" />
<text  x="644.91" y="575.5" ></text>
</g>
<g >
<title>ptep_clear_flush (2 samples, 0.01%)</title><rect x="139.8" y="325" width="0.1" height="15.0" fill="rgb(243,198,8)" rx="2" ry="2" />
<text  x="142.76" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (17 samples, 0.08%)</title><rect x="1102.5" y="757" width="1.0" height="15.0" fill="rgb(232,96,0)" rx="2" ry="2" />
<text  x="1105.50" y="767.5" ></text>
</g>
<g >
<title>main (15,519 samples, 76.67%)</title><rect x="278.2" y="949" width="904.7" height="15.0" fill="rgb(240,126,7)" rx="2" ry="2" />
<text  x="281.21" y="959.5" >main</text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (4 samples, 0.02%)</title><rect x="102.9" y="965" width="0.3" height="15.0" fill="rgb(239,16,21)" rx="2" ry="2" />
<text  x="105.92" y="975.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::destroy&lt;Bitmap&gt; (101 samples, 0.50%)</title><rect x="188.1" y="437" width="5.9" height="15.0" fill="rgb(251,36,26)" rx="2" ry="2" />
<text  x="191.15" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::deallocate (44 samples, 0.22%)</title><rect x="194.4" y="389" width="2.6" height="15.0" fill="rgb(233,61,36)" rx="2" ry="2" />
<text  x="197.39" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_ptr (3 samples, 0.01%)</title><rect x="779.6" y="373" width="0.2" height="15.0" fill="rgb(206,71,7)" rx="2" ry="2" />
<text  x="782.61" y="383.5" ></text>
</g>
<g >
<title>Game_Screen::GetFlashColor (13 samples, 0.06%)</title><rect x="876.1" y="469" width="0.8" height="15.0" fill="rgb(220,104,51)" rx="2" ry="2" />
<text  x="879.14" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_mutate (18 samples, 0.09%)</title><rect x="986.1" y="677" width="1.0" height="15.0" fill="rgb(239,182,35)" rx="2" ry="2" />
<text  x="989.09" y="687.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (2 samples, 0.01%)</title><rect x="141.9" y="965" width="0.1" height="15.0" fill="rgb(233,13,49)" rx="2" ry="2" />
<text  x="144.92" y="975.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (2 samples, 0.01%)</title><rect x="100.2" y="965" width="0.1" height="15.0" fill="rgb(235,214,11)" rx="2" ry="2" />
<text  x="103.18" y="975.5" ></text>
</g>
<g >
<title>mmap_region (2 samples, 0.01%)</title><rect x="137.0" y="293" width="0.1" height="15.0" fill="rgb(247,221,14)" rx="2" ry="2" />
<text  x="139.97" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (12 samples, 0.06%)</title><rect x="420.8" y="757" width="0.7" height="15.0" fill="rgb(227,215,20)" rx="2" ry="2" />
<text  x="423.80" y="767.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::_Vector_base (7 samples, 0.03%)</title><rect x="869.2" y="293" width="0.4" height="15.0" fill="rgb(211,199,41)" rx="2" ry="2" />
<text  x="872.20" y="303.5" ></text>
</g>
<g >
<title>handle_mm_fault (4 samples, 0.02%)</title><rect x="139.6" y="389" width="0.3" height="15.0" fill="rgb(242,92,0)" rx="2" ry="2" />
<text  x="142.65" y="399.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (7 samples, 0.03%)</title><rect x="98.0" y="965" width="0.4" height="15.0" fill="rgb(210,64,14)" rx="2" ry="2" />
<text  x="100.97" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (2 samples, 0.01%)</title><rect x="129.5" y="965" width="0.1" height="15.0" fill="rgb(235,97,23)" rx="2" ry="2" />
<text  x="132.50" y="975.5" ></text>
</g>
<g >
<title>std::max&lt;int&gt; (12 samples, 0.06%)</title><rect x="997.6" y="725" width="0.7" height="15.0" fill="rgb(235,187,21)" rx="2" ry="2" />
<text  x="1000.63" y="735.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustMoveParams (3 samples, 0.01%)</title><rect x="617.3" y="725" width="0.2" height="15.0" fill="rgb(244,226,11)" rx="2" ry="2" />
<text  x="620.31" y="735.5" ></text>
</g>
<g >
<title>Cache::Picture (349 samples, 1.72%)</title><rect x="161.5" y="629" width="20.4" height="15.0" fill="rgb(248,139,51)" rx="2" ry="2" />
<text  x="164.51" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (3 samples, 0.01%)</title><rect x="1002.0" y="725" width="0.2" height="15.0" fill="rgb(220,210,42)" rx="2" ry="2" />
<text  x="1005.00" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::destroy&lt;Bitmap&gt; (20 samples, 0.10%)</title><rect x="201.8" y="453" width="1.2" height="15.0" fill="rgb(208,45,22)" rx="2" ry="2" />
<text  x="204.85" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator== (2 samples, 0.01%)</title><rect x="678.1" y="645" width="0.1" height="15.0" fill="rgb(219,97,17)" rx="2" ry="2" />
<text  x="681.06" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (42 samples, 0.21%)</title><rect x="999.6" y="725" width="2.4" height="15.0" fill="rgb(245,202,43)" rx="2" ry="2" />
<text  x="1002.55" y="735.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (17 samples, 0.08%)</title><rect x="131.0" y="757" width="1.0" height="15.0" fill="rgb(247,217,14)" rx="2" ry="2" />
<text  x="133.96" y="767.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (68 samples, 0.34%)</title><rect x="203.0" y="917" width="4.0" height="15.0" fill="rgb(221,1,9)" rx="2" ry="2" />
<text  x="206.01" y="927.5" ></text>
</g>
<g >
<title>Player::IsEnglish (2 samples, 0.01%)</title><rect x="36.6" y="965" width="0.1" height="15.0" fill="rgb(212,39,27)" rx="2" ry="2" />
<text  x="39.58" y="975.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (86 samples, 0.42%)</title><rect x="198.0" y="773" width="5.0" height="15.0" fill="rgb(216,16,7)" rx="2" ry="2" />
<text  x="201.00" y="783.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Impl::_M_alloc (3 samples, 0.01%)</title><rect x="947.0" y="597" width="0.2" height="15.0" fill="rgb(231,101,24)" rx="2" ry="2" />
<text  x="950.03" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_key (5 samples, 0.02%)</title><rect x="67.7" y="965" width="0.3" height="15.0" fill="rgb(225,149,14)" rx="2" ry="2" />
<text  x="70.71" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::end (6 samples, 0.03%)</title><rect x="788.1" y="453" width="0.4" height="15.0" fill="rgb(216,12,47)" rx="2" ry="2" />
<text  x="791.12" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.04%)</title><rect x="1180.2" y="581" width="0.5" height="15.0" fill="rgb(214,28,25)" rx="2" ry="2" />
<text  x="1183.21" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_create (3 samples, 0.01%)</title><rect x="987.4" y="629" width="0.2" height="15.0" fill="rgb(250,63,25)" rx="2" ry="2" />
<text  x="990.43" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_value (2 samples, 0.01%)</title><rect x="273.8" y="965" width="0.1" height="15.0" fill="rgb(205,118,35)" rx="2" ry="2" />
<text  x="276.78" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_S_key (16 samples, 0.08%)</title><rect x="232.7" y="341" width="0.9" height="15.0" fill="rgb(245,75,49)" rx="2" ry="2" />
<text  x="235.69" y="351.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="156.4" y="565" width="0.1" height="15.0" fill="rgb(249,58,23)" rx="2" ry="2" />
<text  x="159.38" y="575.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;int&gt;::weak_ptr&lt;int, void&gt; (3 samples, 0.01%)</title><rect x="121.2" y="965" width="0.2" height="15.0" fill="rgb(209,170,43)" rx="2" ry="2" />
<text  x="124.23" y="975.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (59 samples, 0.29%)</title><rect x="268.7" y="757" width="3.5" height="15.0" fill="rgb(244,73,6)" rx="2" ry="2" />
<text  x="271.71" y="767.5" ></text>
</g>
<g >
<title>__interceptor_free (100 samples, 0.49%)</title><rect x="188.1" y="357" width="5.9" height="15.0" fill="rgb(230,152,19)" rx="2" ry="2" />
<text  x="191.15" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (8 samples, 0.04%)</title><rect x="113.9" y="965" width="0.4" height="15.0" fill="rgb(225,55,53)" rx="2" ry="2" />
<text  x="116.88" y="975.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (36 samples, 0.18%)</title><rect x="207.0" y="533" width="2.1" height="15.0" fill="rgb(221,35,51)" rx="2" ry="2" />
<text  x="209.98" y="543.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (25 samples, 0.12%)</title><rect x="895.1" y="421" width="1.4" height="15.0" fill="rgb(234,45,11)" rx="2" ry="2" />
<text  x="898.09" y="431.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (97 samples, 0.48%)</title><rect x="164.8" y="501" width="5.7" height="15.0" fill="rgb(247,74,16)" rx="2" ry="2" />
<text  x="167.83" y="511.5" ></text>
</g>
<g >
<title>Scene::MainFunction (15,519 samples, 76.67%)</title><rect x="278.2" y="901" width="904.7" height="15.0" fill="rgb(223,93,5)" rx="2" ry="2" />
<text  x="281.21" y="911.5" >Scene::MainFunction</text>
</g>
<g >
<title>FileRequestAsync::CallListeners (498 samples, 2.46%)</title><rect x="239.2" y="661" width="29.0" height="15.0" fill="rgb(242,25,21)" rx="2" ry="2" />
<text  x="242.21" y="671.5" >Fi..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_right (4 samples, 0.02%)</title><rect x="793.1" y="421" width="0.3" height="15.0" fill="rgb(229,229,22)" rx="2" ry="2" />
<text  x="796.13" y="431.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (39 samples, 0.19%)</title><rect x="144.4" y="453" width="2.2" height="15.0" fill="rgb(244,3,23)" rx="2" ry="2" />
<text  x="147.37" y="463.5" ></text>
</g>
<g >
<title>x86_pmu_enable (15 samples, 0.07%)</title><rect x="1181.1" y="613" width="0.9" height="15.0" fill="rgb(232,192,26)" rx="2" ry="2" />
<text  x="1184.08" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (6 samples, 0.03%)</title><rect x="628.4" y="693" width="0.4" height="15.0" fill="rgb(209,87,6)" rx="2" ry="2" />
<text  x="631.45" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base (13 samples, 0.06%)</title><rect x="776.4" y="405" width="0.8" height="15.0" fill="rgb(205,39,33)" rx="2" ry="2" />
<text  x="779.40" y="415.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="232.5" y="485" width="0.1" height="15.0" fill="rgb(205,119,11)" rx="2" ry="2" />
<text  x="235.45" y="495.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (8 samples, 0.04%)</title><rect x="198.0" y="549" width="0.5" height="15.0" fill="rgb(228,165,33)" rx="2" ry="2" />
<text  x="201.00" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (7 samples, 0.03%)</title><rect x="476.2" y="661" width="0.4" height="15.0" fill="rgb(229,208,38)" rx="2" ry="2" />
<text  x="479.18" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::operator* (4 samples, 0.02%)</title><rect x="1147.4" y="757" width="0.2" height="15.0" fill="rgb(227,2,20)" rx="2" ry="2" />
<text  x="1150.39" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (88 samples, 0.43%)</title><rect x="638.3" y="629" width="5.1" height="15.0" fill="rgb(252,1,20)" rx="2" ry="2" />
<text  x="641.30" y="639.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (35 samples, 0.17%)</title><rect x="159.4" y="485" width="2.0" height="15.0" fill="rgb(224,148,9)" rx="2" ry="2" />
<text  x="162.41" y="495.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Game_Picture*, false&gt;::_M_head (2 samples, 0.01%)</title><rect x="1176.9" y="709" width="0.1" height="15.0" fill="rgb(217,138,19)" rx="2" ry="2" />
<text  x="1179.88" y="719.5" ></text>
</g>
<g >
<title>Player::MainLoop (117 samples, 0.58%)</title><rect x="187.2" y="965" width="6.8" height="15.0" fill="rgb(234,219,7)" rx="2" ry="2" />
<text  x="190.22" y="975.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.03%)</title><rect x="986.7" y="533" width="0.4" height="15.0" fill="rgb(253,221,20)" rx="2" ry="2" />
<text  x="989.67" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (6 samples, 0.03%)</title><rect x="970.0" y="693" width="0.3" height="15.0" fill="rgb(235,135,51)" rx="2" ry="2" />
<text  x="973.00" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (12 samples, 0.06%)</title><rect x="196.0" y="309" width="0.7" height="15.0" fill="rgb(229,75,30)" rx="2" ry="2" />
<text  x="199.02" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt;::operator()&lt;int const*&gt; (3 samples, 0.01%)</title><rect x="505.7" y="677" width="0.2" height="15.0" fill="rgb(239,23,9)" rx="2" ry="2" />
<text  x="508.68" y="687.5" ></text>
</g>
<g >
<title>unmap_single_vma (4 samples, 0.02%)</title><rect x="212.9" y="213" width="0.2" height="15.0" fill="rgb(241,174,25)" rx="2" ry="2" />
<text  x="215.87" y="223.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (50 samples, 0.25%)</title><rect x="931.9" y="421" width="2.9" height="15.0" fill="rgb(224,181,28)" rx="2" ry="2" />
<text  x="934.87" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (4 samples, 0.02%)</title><rect x="786.5" y="469" width="0.3" height="15.0" fill="rgb(252,206,1)" rx="2" ry="2" />
<text  x="789.54" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (34 samples, 0.17%)</title><rect x="1047.7" y="693" width="2.0" height="15.0" fill="rgb(214,73,27)" rx="2" ry="2" />
<text  x="1050.70" y="703.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (23 samples, 0.11%)</title><rect x="887.7" y="469" width="1.3" height="15.0" fill="rgb(248,8,11)" rx="2" ry="2" />
<text  x="890.68" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt;::__normal_iterator (20 samples, 0.10%)</title><rect x="1119.1" y="741" width="1.1" height="15.0" fill="rgb(210,133,28)" rx="2" ry="2" />
<text  x="1122.06" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (2 samples, 0.01%)</title><rect x="616.2" y="693" width="0.1" height="15.0" fill="rgb(233,175,48)" rx="2" ry="2" />
<text  x="619.21" y="703.5" ></text>
</g>
<g >
<title>Window_Base::Update (2 samples, 0.01%)</title><rect x="1178.7" y="821" width="0.2" height="15.0" fill="rgb(220,116,33)" rx="2" ry="2" />
<text  x="1181.75" y="831.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator bool (3 samples, 0.01%)</title><rect x="899.3" y="469" width="0.2" height="15.0" fill="rgb(237,175,12)" rx="2" ry="2" />
<text  x="902.28" y="479.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (6 samples, 0.03%)</title><rect x="1171.4" y="725" width="0.4" height="15.0" fill="rgb(217,81,32)" rx="2" ry="2" />
<text  x="1174.40" y="735.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (13 samples, 0.06%)</title><rect x="62.3" y="965" width="0.7" height="15.0" fill="rgb(247,36,51)" rx="2" ry="2" />
<text  x="65.29" y="975.5" ></text>
</g>
<g >
<title>clock_gettime (6 samples, 0.03%)</title><rect x="784.7" y="437" width="0.4" height="15.0" fill="rgb(221,190,39)" rx="2" ry="2" />
<text  x="787.74" y="447.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (62 samples, 0.31%)</title><rect x="203.3" y="341" width="3.6" height="15.0" fill="rgb(208,168,39)" rx="2" ry="2" />
<text  x="206.31" y="351.5" ></text>
</g>
<g >
<title>max&lt;int&gt; (8 samples, 0.04%)</title><rect x="886.5" y="453" width="0.4" height="15.0" fill="rgb(252,50,25)" rx="2" ry="2" />
<text  x="889.46" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (29 samples, 0.14%)</title><rect x="386.1" y="725" width="1.6" height="15.0" fill="rgb(217,49,15)" rx="2" ry="2" />
<text  x="389.06" y="735.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (17 samples, 0.08%)</title><rect x="131.0" y="917" width="1.0" height="15.0" fill="rgb(230,145,38)" rx="2" ry="2" />
<text  x="133.96" y="927.5" ></text>
</g>
<g >
<title>Game_Picture::Erase (3 samples, 0.01%)</title><rect x="610.1" y="725" width="0.2" height="15.0" fill="rgb(211,188,31)" rx="2" ry="2" />
<text  x="613.14" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::get (14 samples, 0.07%)</title><rect x="891.2" y="453" width="0.9" height="15.0" fill="rgb(219,47,36)" rx="2" ry="2" />
<text  x="894.24" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::~new_allocator (2 samples, 0.01%)</title><rect x="692.5" y="549" width="0.1" height="15.0" fill="rgb(213,102,47)" rx="2" ry="2" />
<text  x="695.46" y="559.5" ></text>
</g>
<g >
<title>Game_Picture::Show (79 samples, 0.39%)</title><rect x="142.0" y="901" width="4.6" height="15.0" fill="rgb(244,3,44)" rx="2" ry="2" />
<text  x="145.04" y="911.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (2 samples, 0.01%)</title><rect x="39.3" y="965" width="0.1" height="15.0" fill="rgb(231,87,20)" rx="2" ry="2" />
<text  x="42.32" y="975.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (44 samples, 0.22%)</title><rect x="199.3" y="453" width="2.5" height="15.0" fill="rgb(211,212,17)" rx="2" ry="2" />
<text  x="202.28" y="463.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (40 samples, 0.20%)</title><rect x="240.1" y="421" width="2.3" height="15.0" fill="rgb(251,113,41)" rx="2" ry="2" />
<text  x="243.09" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::end (6 samples, 0.03%)</title><rect x="783.4" y="421" width="0.3" height="15.0" fill="rgb(249,5,12)" rx="2" ry="2" />
<text  x="786.39" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (3 samples, 0.01%)</title><rect x="1182.4" y="629" width="0.2" height="15.0" fill="rgb(216,201,9)" rx="2" ry="2" />
<text  x="1185.42" y="639.5" ></text>
</g>
<g >
<title>Sprite::Flash (2 samples, 0.01%)</title><rect x="38.0" y="965" width="0.2" height="15.0" fill="rgb(244,146,39)" rx="2" ry="2" />
<text  x="41.04" y="975.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (117 samples, 0.58%)</title><rect x="187.2" y="645" width="6.8" height="15.0" fill="rgb(251,171,15)" rx="2" ry="2" />
<text  x="190.22" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (13 samples, 0.06%)</title><rect x="116.3" y="965" width="0.8" height="15.0" fill="rgb(232,104,31)" rx="2" ry="2" />
<text  x="119.33" y="975.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (7 samples, 0.03%)</title><rect x="824.0" y="437" width="0.4" height="15.0" fill="rgb(205,29,44)" rx="2" ry="2" />
<text  x="826.97" y="447.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::CommonEvent&gt; (6 samples, 0.03%)</title><rect x="1145.1" y="789" width="0.3" height="15.0" fill="rgb(207,15,38)" rx="2" ry="2" />
<text  x="1148.05" y="799.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (109 samples, 0.54%)</title><rect x="146.6" y="549" width="6.4" height="15.0" fill="rgb(235,31,17)" rx="2" ry="2" />
<text  x="149.64" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (11 samples, 0.05%)</title><rect x="1086.9" y="709" width="0.6" height="15.0" fill="rgb(234,139,47)" rx="2" ry="2" />
<text  x="1089.88" y="719.5" ></text>
</g>
<g >
<title>operator delete (85 samples, 0.42%)</title><rect x="660.2" y="677" width="4.9" height="15.0" fill="rgb(245,177,34)" rx="2" ry="2" />
<text  x="663.16" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (11 samples, 0.05%)</title><rect x="197.4" y="341" width="0.6" height="15.0" fill="rgb(205,56,31)" rx="2" ry="2" />
<text  x="200.36" y="351.5" ></text>
</g>
<g >
<title>pixman_image_unref (101 samples, 0.50%)</title><rect x="188.1" y="389" width="5.9" height="15.0" fill="rgb(218,42,4)" rx="2" ry="2" />
<text  x="191.15" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (2 samples, 0.01%)</title><rect x="239.1" y="549" width="0.1" height="15.0" fill="rgb(215,49,52)" rx="2" ry="2" />
<text  x="242.10" y="559.5" ></text>
</g>
<g >
<title>pixman_image_unref (169 samples, 0.83%)</title><rect x="258.4" y="341" width="9.8" height="15.0" fill="rgb(216,227,28)" rx="2" ry="2" />
<text  x="261.39" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;int const&gt; (18 samples, 0.09%)</title><rect x="503.6" y="693" width="1.0" height="15.0" fill="rgb(242,17,27)" rx="2" ry="2" />
<text  x="506.58" y="703.5" ></text>
</g>
<g >
<title>__gthread_active_p (3 samples, 0.01%)</title><rect x="55.4" y="965" width="0.2" height="15.0" fill="rgb(208,107,15)" rx="2" ry="2" />
<text  x="58.41" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt;::construct&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (72 samples, 0.36%)</title><rect x="702.2" y="613" width="4.2" height="15.0" fill="rgb(253,160,21)" rx="2" ry="2" />
<text  x="705.25" y="623.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::begin (3 samples, 0.01%)</title><rect x="100.4" y="965" width="0.1" height="15.0" fill="rgb(205,61,18)" rx="2" ry="2" />
<text  x="103.36" y="975.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.02%)</title><rect x="136.8" y="389" width="0.3" height="15.0" fill="rgb(254,206,40)" rx="2" ry="2" />
<text  x="139.79" y="399.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (5 samples, 0.02%)</title><rect x="1182.3" y="773" width="0.3" height="15.0" fill="rgb(254,86,50)" rx="2" ry="2" />
<text  x="1185.31" y="783.5" ></text>
</g>
<g >
<title>Player::Update (86 samples, 0.42%)</title><rect x="198.0" y="965" width="5.0" height="15.0" fill="rgb(205,128,46)" rx="2" ry="2" />
<text  x="201.00" y="975.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char32_t&gt; &gt;::allocate (5 samples, 0.02%)</title><rect x="986.1" y="645" width="0.3" height="15.0" fill="rgb(215,171,47)" rx="2" ry="2" />
<text  x="989.09" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::_M_erase_at_end (219 samples, 1.08%)</title><rect x="925.2" y="629" width="12.7" height="15.0" fill="rgb(214,196,54)" rx="2" ry="2" />
<text  x="928.17" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (4 samples, 0.02%)</title><rect x="922.6" y="453" width="0.2" height="15.0" fill="rgb(226,21,32)" rx="2" ry="2" />
<text  x="925.60" y="463.5" ></text>
</g>
<g >
<title>posix_get_monotonic_raw (7 samples, 0.03%)</title><rect x="229.7" y="469" width="0.4" height="15.0" fill="rgb(209,213,14)" rx="2" ry="2" />
<text  x="232.71" y="479.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="870.3" y="325" width="0.1" height="15.0" fill="rgb(225,121,24)" rx="2" ry="2" />
<text  x="873.25" y="335.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (170 samples, 0.84%)</title><rect x="132.0" y="869" width="9.9" height="15.0" fill="rgb(213,229,44)" rx="2" ry="2" />
<text  x="134.95" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (24 samples, 0.12%)</title><rect x="1173.9" y="789" width="1.4" height="15.0" fill="rgb(235,168,38)" rx="2" ry="2" />
<text  x="1176.91" y="799.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char&gt; (2 samples, 0.01%)</title><rect x="821.6" y="389" width="0.1" height="15.0" fill="rgb(230,65,38)" rx="2" ry="2" />
<text  x="824.58" y="399.5" ></text>
</g>
<g >
<title>calloc (10 samples, 0.05%)</title><rect x="142.0" y="437" width="0.6" height="15.0" fill="rgb(232,103,21)" rx="2" ry="2" />
<text  x="145.04" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string@plt (2 samples, 0.01%)</title><rect x="979.8" y="709" width="0.2" height="15.0" fill="rgb(212,94,24)" rx="2" ry="2" />
<text  x="982.85" y="719.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="239.0" y="949" width="0.1" height="15.0" fill="rgb(244,222,37)" rx="2" ry="2" />
<text  x="241.98" y="959.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (2 samples, 0.01%)</title><rect x="895.3" y="405" width="0.1" height="15.0" fill="rgb(218,137,39)" rx="2" ry="2" />
<text  x="898.26" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (4 samples, 0.02%)</title><rect x="893.2" y="453" width="0.3" height="15.0" fill="rgb(247,133,40)" rx="2" ry="2" />
<text  x="896.22" y="463.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (2,881 samples, 14.23%)</title><rect x="754.9" y="501" width="167.9" height="15.0" fill="rgb(236,112,26)" rx="2" ry="2" />
<text  x="757.89" y="511.5" >Game_Picture::OnPictu..</text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (9 samples, 0.04%)</title><rect x="921.1" y="437" width="0.5" height="15.0" fill="rgb(233,118,40)" rx="2" ry="2" />
<text  x="924.09" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_addr (3 samples, 0.01%)</title><rect x="792.2" y="357" width="0.2" height="15.0" fill="rgb(228,132,5)" rx="2" ry="2" />
<text  x="795.20" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.01%)</title><rect x="986.9" y="485" width="0.2" height="15.0" fill="rgb(240,138,33)" rx="2" ry="2" />
<text  x="989.90" y="495.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (146 samples, 0.72%)</title><rect x="153.0" y="645" width="8.5" height="15.0" fill="rgb(230,147,9)" rx="2" ry="2" />
<text  x="156.00" y="655.5" ></text>
</g>
<g >
<title>strlen (2 samples, 0.01%)</title><rect x="816.1" y="437" width="0.1" height="15.0" fill="rgb(218,77,47)" rx="2" ry="2" />
<text  x="819.10" y="447.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (109 samples, 0.54%)</title><rect x="146.6" y="757" width="6.4" height="15.0" fill="rgb(211,21,18)" rx="2" ry="2" />
<text  x="149.64" y="767.5" ></text>
</g>
<g >
<title>__interceptor_recvmsg (4 samples, 0.02%)</title><rect x="1182.4" y="709" width="0.2" height="15.0" fill="rgb(224,216,1)" rx="2" ry="2" />
<text  x="1185.36" y="719.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (4 samples, 0.02%)</title><rect x="22.3" y="869" width="0.2" height="15.0" fill="rgb(210,17,33)" rx="2" ry="2" />
<text  x="25.30" y="879.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (9 samples, 0.04%)</title><rect x="1179.5" y="741" width="0.5" height="15.0" fill="rgb(219,33,46)" rx="2" ry="2" />
<text  x="1182.51" y="751.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Transition*, std::default_delete&lt;Transition&gt; &gt; (3 samples, 0.01%)</title><rect x="737.1" y="597" width="0.2" height="15.0" fill="rgb(250,19,25)" rx="2" ry="2" />
<text  x="740.11" y="607.5" ></text>
</g>
<g >
<title>__interceptor_free (41 samples, 0.20%)</title><rect x="916.1" y="325" width="2.4" height="15.0" fill="rgb(236,111,53)" rx="2" ry="2" />
<text  x="919.13" y="335.5" ></text>
</g>
<g >
<title>Scene::GetRequestedScene (2 samples, 0.01%)</title><rect x="1120.2" y="773" width="0.1" height="15.0" fill="rgb(211,101,27)" rx="2" ry="2" />
<text  x="1123.22" y="783.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::operator (4 samples, 0.02%)</title><rect x="108.9" y="965" width="0.2" height="15.0" fill="rgb(221,90,25)" rx="2" ry="2" />
<text  x="111.87" y="975.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (146 samples, 0.72%)</title><rect x="153.0" y="629" width="8.5" height="15.0" fill="rgb(226,114,24)" rx="2" ry="2" />
<text  x="156.00" y="639.5" ></text>
</g>
<g >
<title>calloc (69 samples, 0.34%)</title><rect x="146.6" y="453" width="4.1" height="15.0" fill="rgb(247,216,18)" rx="2" ry="2" />
<text  x="149.64" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (3 samples, 0.01%)</title><rect x="887.3" y="469" width="0.2" height="15.0" fill="rgb(242,5,5)" rx="2" ry="2" />
<text  x="890.33" y="479.5" ></text>
</g>
<g >
<title>min&lt;int&gt; (4 samples, 0.02%)</title><rect x="962.1" y="661" width="0.3" height="15.0" fill="rgb(252,123,25)" rx="2" ry="2" />
<text  x="965.13" y="671.5" ></text>
</g>
<g >
<title>Bitmap::~Bitmap (63 samples, 0.31%)</title><rect x="203.3" y="421" width="3.7" height="15.0" fill="rgb(206,99,9)" rx="2" ry="2" />
<text  x="206.31" y="431.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;int&gt;, int&gt; (6 samples, 0.03%)</title><rect x="85.3" y="965" width="0.3" height="15.0" fill="rgb(233,131,46)" rx="2" ry="2" />
<text  x="88.26" y="975.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (5 samples, 0.02%)</title><rect x="279.1" y="821" width="0.3" height="15.0" fill="rgb(208,47,52)" rx="2" ry="2" />
<text  x="282.09" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (6 samples, 0.03%)</title><rect x="1056.9" y="741" width="0.3" height="15.0" fill="rgb(228,213,24)" rx="2" ry="2" />
<text  x="1059.86" y="751.5" ></text>
</g>
<g >
<title>Bitmap::Init (35 samples, 0.17%)</title><rect x="253.9" y="309" width="2.0" height="15.0" fill="rgb(242,166,0)" rx="2" ry="2" />
<text  x="256.90" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (4 samples, 0.02%)</title><rect x="126.5" y="965" width="0.2" height="15.0" fill="rgb(252,209,45)" rx="2" ry="2" />
<text  x="129.47" y="975.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (9 samples, 0.04%)</title><rect x="1180.1" y="661" width="0.6" height="15.0" fill="rgb(241,148,6)" rx="2" ry="2" />
<text  x="1183.15" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (109 samples, 0.54%)</title><rect x="146.6" y="533" width="6.4" height="15.0" fill="rgb(251,102,14)" rx="2" ry="2" />
<text  x="149.64" y="543.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (146 samples, 0.72%)</title><rect x="153.0" y="949" width="8.5" height="15.0" fill="rgb(229,114,54)" rx="2" ry="2" />
<text  x="156.00" y="959.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.01%)</title><rect x="678.8" y="581" width="0.1" height="15.0" fill="rgb(237,9,7)" rx="2" ry="2" />
<text  x="681.76" y="591.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, FileRequestResult*&amp;&amp;, false&gt;::_Head_base&lt;FileRequestResult*&gt; (2 samples, 0.01%)</title><rect x="924.0" y="549" width="0.1" height="15.0" fill="rgb(249,136,52)" rx="2" ry="2" />
<text  x="927.00" y="559.5" ></text>
</g>
<g >
<title>clear_page_erms (29 samples, 0.14%)</title><rect x="247.8" y="309" width="1.7" height="15.0" fill="rgb(218,42,40)" rx="2" ry="2" />
<text  x="250.78" y="319.5" ></text>
</g>
<g >
<title>Sprite::SetTone (11 samples, 0.05%)</title><rect x="967.1" y="693" width="0.6" height="15.0" fill="rgb(213,58,27)" rx="2" ry="2" />
<text  x="970.08" y="703.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (335 samples, 1.65%)</title><rect x="900.3" y="437" width="19.6" height="15.0" fill="rgb(210,125,35)" rx="2" ry="2" />
<text  x="903.33" y="447.5" ></text>
</g>
<g >
<title>Sdl2Ui::GetTicks (22 samples, 0.11%)</title><rect x="784.3" y="469" width="1.3" height="15.0" fill="rgb(252,40,29)" rx="2" ry="2" />
<text  x="787.27" y="479.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (5 samples, 0.02%)</title><rect x="1151.0" y="773" width="0.3" height="15.0" fill="rgb(212,120,1)" rx="2" ry="2" />
<text  x="1154.00" y="783.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.04%)</title><rect x="664.4" y="613" width="0.5" height="15.0" fill="rgb(229,124,3)" rx="2" ry="2" />
<text  x="667.42" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.02%)</title><rect x="203.4" y="261" width="0.3" height="15.0" fill="rgb(250,209,20)" rx="2" ry="2" />
<text  x="206.42" y="271.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (39 samples, 0.19%)</title><rect x="144.4" y="549" width="2.2" height="15.0" fill="rgb(232,217,27)" rx="2" ry="2" />
<text  x="147.37" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::operator++ (4 samples, 0.02%)</title><rect x="1143.8" y="805" width="0.3" height="15.0" fill="rgb(251,45,4)" rx="2" ry="2" />
<text  x="1146.83" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (39 samples, 0.19%)</title><rect x="1069.3" y="709" width="2.3" height="15.0" fill="rgb(237,7,47)" rx="2" ry="2" />
<text  x="1072.33" y="719.5" ></text>
</g>
<g >
<title>eventfd_poll (2 samples, 0.01%)</title><rect x="17.2" y="917" width="0.1" height="15.0" fill="rgb(223,111,30)" rx="2" ry="2" />
<text  x="20.17" y="927.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (63 samples, 0.31%)</title><rect x="203.3" y="469" width="3.7" height="15.0" fill="rgb(237,18,38)" rx="2" ry="2" />
<text  x="206.31" y="479.5" ></text>
</g>
<g >
<title>operator delete (58 samples, 0.29%)</title><rect x="980.0" y="709" width="3.4" height="15.0" fill="rgb(252,106,54)" rx="2" ry="2" />
<text  x="983.02" y="719.5" ></text>
</g>
<g >
<title>std::allocator&lt;Bitmap&gt;::allocator (2 samples, 0.01%)</title><rect x="864.8" y="325" width="0.1" height="15.0" fill="rgb(238,93,53)" rx="2" ry="2" />
<text  x="867.77" y="335.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (17 samples, 0.08%)</title><rect x="1171.8" y="725" width="0.9" height="15.0" fill="rgb(223,91,15)" rx="2" ry="2" />
<text  x="1174.75" y="735.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.01%)</title><rect x="1102.4" y="757" width="0.1" height="15.0" fill="rgb(251,103,52)" rx="2" ry="2" />
<text  x="1105.38" y="767.5" ></text>
</g>
<g >
<title>Bitmap::~Bitmap (217 samples, 1.07%)</title><rect x="907.1" y="357" width="12.6" height="15.0" fill="rgb(248,17,11)" rx="2" ry="2" />
<text  x="910.10" y="367.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (39 samples, 0.19%)</title><rect x="144.4" y="485" width="2.2" height="15.0" fill="rgb(225,197,5)" rx="2" ry="2" />
<text  x="147.37" y="495.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator bool (5 samples, 0.02%)</title><rect x="715.3" y="661" width="0.3" height="15.0" fill="rgb(243,37,29)" rx="2" ry="2" />
<text  x="718.31" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (79 samples, 0.39%)</title><rect x="744.5" y="645" width="4.6" height="15.0" fill="rgb(211,58,20)" rx="2" ry="2" />
<text  x="747.45" y="655.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.02%)</title><rect x="152.5" y="405" width="0.3" height="15.0" fill="rgb(217,150,25)" rx="2" ry="2" />
<text  x="155.53" y="415.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.01%)</title><rect x="987.4" y="581" width="0.2" height="15.0" fill="rgb(228,25,3)" rx="2" ry="2" />
<text  x="990.43" y="591.5" ></text>
</g>
<g >
<title>Sprite::SetTone (15 samples, 0.07%)</title><rect x="1163.8" y="773" width="0.8" height="15.0" fill="rgb(235,96,5)" rx="2" ry="2" />
<text  x="1166.77" y="783.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.02%)</title><rect x="986.1" y="613" width="0.3" height="15.0" fill="rgb(228,31,29)" rx="2" ry="2" />
<text  x="989.14" y="623.5" ></text>
</g>
<g >
<title>Bitmap::width (3 samples, 0.01%)</title><rect x="961.1" y="677" width="0.2" height="15.0" fill="rgb(216,60,38)" rx="2" ry="2" />
<text  x="964.08" y="687.5" ></text>
</g>
<g >
<title>__GI___poll (2 samples, 0.01%)</title><rect x="1180.8" y="741" width="0.2" height="15.0" fill="rgb(231,78,52)" rx="2" ry="2" />
<text  x="1183.85" y="751.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (18 samples, 0.09%)</title><rect x="232.7" y="485" width="1.0" height="15.0" fill="rgb(207,140,31)" rx="2" ry="2" />
<text  x="235.69" y="495.5" ></text>
</g>
<g >
<title>_XFlush (2 samples, 0.01%)</title><rect x="279.4" y="789" width="0.1" height="15.0" fill="rgb(229,124,49)" rx="2" ry="2" />
<text  x="282.38" y="799.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::destroy&lt;Bitmap&gt; (169 samples, 0.83%)</title><rect x="258.4" y="389" width="9.8" height="15.0" fill="rgb(231,227,50)" rx="2" ry="2" />
<text  x="261.39" y="399.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (48 samples, 0.24%)</title><rect x="209.6" y="373" width="2.8" height="15.0" fill="rgb(216,95,39)" rx="2" ry="2" />
<text  x="212.60" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (15 samples, 0.07%)</title><rect x="782.1" y="373" width="0.9" height="15.0" fill="rgb(222,65,2)" rx="2" ry="2" />
<text  x="785.11" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char32_t&gt;::deallocate (10 samples, 0.05%)</title><rect x="986.5" y="613" width="0.6" height="15.0" fill="rgb(220,72,46)" rx="2" ry="2" />
<text  x="989.49" y="623.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (68 samples, 0.34%)</title><rect x="203.0" y="613" width="4.0" height="15.0" fill="rgb(207,112,38)" rx="2" ry="2" />
<text  x="206.01" y="623.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (117 samples, 0.58%)</title><rect x="187.2" y="789" width="6.8" height="15.0" fill="rgb(210,123,14)" rx="2" ry="2" />
<text  x="190.22" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (4 samples, 0.02%)</title><rect x="633.5" y="677" width="0.3" height="15.0" fill="rgb(216,210,24)" rx="2" ry="2" />
<text  x="636.52" y="687.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="280.4" y="837" width="0.1" height="15.0" fill="rgb(232,2,47)" rx="2" ry="2" />
<text  x="283.43" y="847.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="198.2" y="517" width="0.3" height="15.0" fill="rgb(251,211,0)" rx="2" ry="2" />
<text  x="201.23" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base (4 samples, 0.02%)</title><rect x="651.6" y="645" width="0.3" height="15.0" fill="rgb(245,40,51)" rx="2" ry="2" />
<text  x="654.65" y="655.5" ></text>
</g>
<g >
<title>Game_Screen::GetPicture (19 samples, 0.09%)</title><rect x="983.6" y="725" width="1.1" height="15.0" fill="rgb(211,188,30)" rx="2" ry="2" />
<text  x="986.58" y="735.5" ></text>
</g>
<g >
<title>Window_Message::Update (9 samples, 0.04%)</title><rect x="1178.7" y="837" width="0.6" height="15.0" fill="rgb(234,148,29)" rx="2" ry="2" />
<text  x="1181.75" y="847.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (3 samples, 0.01%)</title><rect x="893.3" y="421" width="0.2" height="15.0" fill="rgb(207,5,29)" rx="2" ry="2" />
<text  x="896.28" y="431.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (59 samples, 0.29%)</title><rect x="268.7" y="517" width="3.5" height="15.0" fill="rgb(248,35,26)" rx="2" ry="2" />
<text  x="271.71" y="527.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (14 samples, 0.07%)</title><rect x="74.1" y="965" width="0.8" height="15.0" fill="rgb(222,129,1)" rx="2" ry="2" />
<text  x="77.12" y="975.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandControlVariables (1,424 samples, 7.03%)</title><rect x="519.7" y="741" width="83.0" height="15.0" fill="rgb(254,57,42)" rx="2" ry="2" />
<text  x="522.67" y="751.5" >Game_Inte..</text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (4 samples, 0.02%)</title><rect x="894.9" y="421" width="0.2" height="15.0" fill="rgb(227,108,48)" rx="2" ry="2" />
<text  x="897.85" y="431.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (289 samples, 1.43%)</title><rect x="903.0" y="421" width="16.9" height="15.0" fill="rgb(242,202,50)" rx="2" ry="2" />
<text  x="906.02" y="431.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (57 samples, 0.28%)</title><rect x="209.1" y="501" width="3.3" height="15.0" fill="rgb(214,56,7)" rx="2" ry="2" />
<text  x="212.08" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, bool&gt;::_Tuple_impl&lt;bool&amp;&gt; (7 samples, 0.03%)</title><rect x="823.0" y="421" width="0.4" height="15.0" fill="rgb(227,86,30)" rx="2" ry="2" />
<text  x="826.04" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (2 samples, 0.01%)</title><rect x="125.9" y="965" width="0.1" height="15.0" fill="rgb(242,14,37)" rx="2" ry="2" />
<text  x="128.89" y="975.5" ></text>
</g>
<g >
<title>__do_page_fault (19 samples, 0.09%)</title><rect x="137.3" y="357" width="1.1" height="15.0" fill="rgb(207,121,38)" rx="2" ry="2" />
<text  x="140.32" y="367.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (440 samples, 2.17%)</title><rect x="161.5" y="901" width="25.7" height="15.0" fill="rgb(228,205,14)" rx="2" ry="2" />
<text  x="164.51" y="911.5" >G..</text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_init_functor (2 samples, 0.01%)</title><rect x="125.2" y="965" width="0.1" height="15.0" fill="rgb(242,121,14)" rx="2" ry="2" />
<text  x="128.19" y="975.5" ></text>
</g>
<g >
<title>Sprite::SetY (2 samples, 0.01%)</title><rect x="967.8" y="693" width="0.2" height="15.0" fill="rgb(252,213,17)" rx="2" ry="2" />
<text  x="970.84" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_M_end (2 samples, 0.01%)</title><rect x="201.6" y="325" width="0.1" height="15.0" fill="rgb(237,12,38)" rx="2" ry="2" />
<text  x="204.61" y="335.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;FileRequestResult*&gt; (9 samples, 0.04%)</title><rect x="923.7" y="597" width="0.5" height="15.0" fill="rgb(225,59,3)" rx="2" ry="2" />
<text  x="926.71" y="607.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_weak_add_ref (8 samples, 0.04%)</title><rect x="706.8" y="613" width="0.5" height="15.0" fill="rgb(232,89,0)" rx="2" ry="2" />
<text  x="709.80" y="623.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (157 samples, 0.78%)</title><rect x="861.9" y="389" width="9.2" height="15.0" fill="rgb(214,78,2)" rx="2" ry="2" />
<text  x="864.92" y="399.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_ptr (7 samples, 0.03%)</title><rect x="863.4" y="373" width="0.4" height="15.0" fill="rgb(228,133,10)" rx="2" ry="2" />
<text  x="866.43" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int&gt; (7 samples, 0.03%)</title><rect x="692.8" y="549" width="0.4" height="15.0" fill="rgb(207,58,2)" rx="2" ry="2" />
<text  x="695.81" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt;::__normal_iterator (2 samples, 0.01%)</title><rect x="45.6" y="965" width="0.1" height="15.0" fill="rgb(210,48,9)" rx="2" ry="2" />
<text  x="48.56" y="975.5" ></text>
</g>
<g >
<title>std::make_shared&lt;int, int&gt; (2 samples, 0.01%)</title><rect x="239.1" y="661" width="0.1" height="15.0" fill="rgb(242,175,30)" rx="2" ry="2" />
<text  x="242.10" y="671.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (59 samples, 0.29%)</title><rect x="268.7" y="789" width="3.5" height="15.0" fill="rgb(207,5,51)" rx="2" ry="2" />
<text  x="271.71" y="799.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;int&gt;::weak_ptr (6 samples, 0.03%)</title><rect x="706.1" y="581" width="0.3" height="15.0" fill="rgb(254,188,53)" rx="2" ry="2" />
<text  x="709.10" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char&gt; (2 samples, 0.01%)</title><rect x="45.2" y="965" width="0.1" height="15.0" fill="rgb(219,199,16)" rx="2" ry="2" />
<text  x="48.15" y="975.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator bool (7 samples, 0.03%)</title><rect x="970.6" y="693" width="0.4" height="15.0" fill="rgb(227,168,19)" rx="2" ry="2" />
<text  x="973.64" y="703.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (29 samples, 0.14%)</title><rect x="881.7" y="453" width="1.7" height="15.0" fill="rgb(231,81,48)" rx="2" ry="2" />
<text  x="884.74" y="463.5" ></text>
</g>
<g >
<title>pixman_region32_init (6 samples, 0.03%)</title><rect x="867.6" y="245" width="0.3" height="15.0" fill="rgb(223,118,20)" rx="2" ry="2" />
<text  x="870.57" y="255.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (64 samples, 0.32%)</title><rect x="711.3" y="597" width="3.7" height="15.0" fill="rgb(210,23,28)" rx="2" ry="2" />
<text  x="714.28" y="607.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.03%)</title><rect x="174.7" y="501" width="0.3" height="15.0" fill="rgb(223,5,54)" rx="2" ry="2" />
<text  x="177.68" y="511.5" ></text>
</g>
<g >
<title>Bitmap::height (5 samples, 0.02%)</title><rect x="872.1" y="453" width="0.3" height="15.0" fill="rgb(237,26,6)" rx="2" ry="2" />
<text  x="875.12" y="463.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (9 samples, 0.04%)</title><rect x="61.5" y="965" width="0.6" height="15.0" fill="rgb(242,27,10)" rx="2" ry="2" />
<text  x="64.53" y="975.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (3 samples, 0.01%)</title><rect x="97.8" y="965" width="0.2" height="15.0" fill="rgb(206,29,34)" rx="2" ry="2" />
<text  x="100.79" y="975.5" ></text>
</g>
<g >
<title>Bitmap::GetHeight (9 samples, 0.04%)</title><rect x="871.9" y="469" width="0.5" height="15.0" fill="rgb(247,83,11)" rx="2" ry="2" />
<text  x="874.89" y="479.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;int&gt;::~weak_ptr (20 samples, 0.10%)</title><rect x="936.8" y="533" width="1.1" height="15.0" fill="rgb(211,1,10)" rx="2" ry="2" />
<text  x="939.77" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (36 samples, 0.18%)</title><rect x="204.1" y="229" width="2.1" height="15.0" fill="rgb(254,194,42)" rx="2" ry="2" />
<text  x="207.12" y="239.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (39 samples, 0.19%)</title><rect x="159.2" y="501" width="2.3" height="15.0" fill="rgb(225,135,43)" rx="2" ry="2" />
<text  x="162.23" y="511.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (6 samples, 0.03%)</title><rect x="1055.0" y="629" width="0.3" height="15.0" fill="rgb(233,145,15)" rx="2" ry="2" />
<text  x="1057.99" y="639.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (58 samples, 0.29%)</title><rect x="639.8" y="581" width="3.3" height="15.0" fill="rgb(236,35,26)" rx="2" ry="2" />
<text  x="642.76" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (14 samples, 0.07%)</title><rect x="198.5" y="517" width="0.8" height="15.0" fill="rgb(249,74,39)" rx="2" ry="2" />
<text  x="201.47" y="527.5" ></text>
</g>
<g >
<title>operator== (2 samples, 0.01%)</title><rect x="1178.3" y="789" width="0.2" height="15.0" fill="rgb(252,221,18)" rx="2" ry="2" />
<text  x="1181.34" y="799.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (4 samples, 0.02%)</title><rect x="763.7" y="405" width="0.2" height="15.0" fill="rgb(212,184,25)" rx="2" ry="2" />
<text  x="766.69" y="415.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (86 samples, 0.42%)</title><rect x="198.0" y="581" width="5.0" height="15.0" fill="rgb(206,163,3)" rx="2" ry="2" />
<text  x="201.00" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::_M_ptr (4 samples, 0.02%)</title><rect x="737.3" y="629" width="0.2" height="15.0" fill="rgb(254,137,33)" rx="2" ry="2" />
<text  x="740.28" y="639.5" ></text>
</g>
<g >
<title>Game_Picture::Show (170 samples, 0.84%)</title><rect x="132.0" y="949" width="9.9" height="15.0" fill="rgb(209,105,53)" rx="2" ry="2" />
<text  x="134.95" y="959.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (79 samples, 0.39%)</title><rect x="142.0" y="741" width="4.6" height="15.0" fill="rgb(210,226,52)" rx="2" ry="2" />
<text  x="145.04" y="751.5" ></text>
</g>
<g >
<title>__interceptor_free (96 samples, 0.47%)</title><rect x="910.1" y="309" width="5.6" height="15.0" fill="rgb(240,16,23)" rx="2" ry="2" />
<text  x="913.13" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.03%)</title><rect x="206.5" y="245" width="0.4" height="15.0" fill="rgb(243,114,22)" rx="2" ry="2" />
<text  x="209.45" y="255.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (2 samples, 0.01%)</title><rect x="1182.8" y="853" width="0.1" height="15.0" fill="rgb(253,98,1)" rx="2" ry="2" />
<text  x="1185.77" y="863.5" ></text>
</g>
<g >
<title>operator== (9 samples, 0.04%)</title><rect x="879.5" y="421" width="0.5" height="15.0" fill="rgb(244,21,37)" rx="2" ry="2" />
<text  x="882.52" y="431.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (17 samples, 0.08%)</title><rect x="131.0" y="821" width="1.0" height="15.0" fill="rgb(210,67,19)" rx="2" ry="2" />
<text  x="133.96" y="831.5" ></text>
</g>
<g >
<title>unmap_vmas (12 samples, 0.06%)</title><rect x="205.5" y="165" width="0.7" height="15.0" fill="rgb(254,98,9)" rx="2" ry="2" />
<text  x="208.52" y="175.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (18 samples, 0.09%)</title><rect x="232.7" y="501" width="1.0" height="15.0" fill="rgb(230,31,17)" rx="2" ry="2" />
<text  x="235.69" y="511.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (151 samples, 0.75%)</title><rect x="132.0" y="501" width="8.8" height="15.0" fill="rgb(236,26,29)" rx="2" ry="2" />
<text  x="134.95" y="511.5" ></text>
</g>
<g >
<title>Graphics::IsTransitionErased (5 samples, 0.02%)</title><rect x="35.8" y="965" width="0.3" height="15.0" fill="rgb(226,80,21)" rx="2" ry="2" />
<text  x="38.82" y="975.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (354 samples, 1.75%)</title><rect x="213.1" y="821" width="20.6" height="15.0" fill="rgb(218,47,41)" rx="2" ry="2" />
<text  x="216.10" y="831.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::operator (10 samples, 0.05%)</title><rect x="785.8" y="469" width="0.6" height="15.0" fill="rgb(229,69,42)" rx="2" ry="2" />
<text  x="788.84" y="479.5" ></text>
</g>
<g >
<title>pixman_image_get_data@plt (2 samples, 0.01%)</title><rect x="858.9" y="437" width="0.2" height="15.0" fill="rgb(208,209,29)" rx="2" ry="2" />
<text  x="861.94" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (19 samples, 0.09%)</title><rect x="762.8" y="421" width="1.1" height="15.0" fill="rgb(218,78,54)" rx="2" ry="2" />
<text  x="765.82" y="431.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_ptr (5 samples, 0.02%)</title><rect x="864.9" y="357" width="0.3" height="15.0" fill="rgb(249,140,19)" rx="2" ry="2" />
<text  x="867.89" y="367.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (7 samples, 0.03%)</title><rect x="32.0" y="965" width="0.4" height="15.0" fill="rgb(214,181,54)" rx="2" ry="2" />
<text  x="34.98" y="975.5" ></text>
</g>
<g >
<title>pixman_region32_init (5 samples, 0.02%)</title><rect x="255.5" y="245" width="0.3" height="15.0" fill="rgb(227,4,12)" rx="2" ry="2" />
<text  x="258.48" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (23 samples, 0.11%)</title><rect x="469.9" y="693" width="1.3" height="15.0" fill="rgb(218,34,28)" rx="2" ry="2" />
<text  x="472.89" y="703.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::operator[] (18 samples, 0.09%)</title><rect x="232.7" y="405" width="1.0" height="15.0" fill="rgb(215,9,50)" rx="2" ry="2" />
<text  x="235.69" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (8 samples, 0.04%)</title><rect x="1176.5" y="773" width="0.5" height="15.0" fill="rgb(238,194,16)" rx="2" ry="2" />
<text  x="1179.53" y="783.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (440 samples, 2.17%)</title><rect x="161.5" y="661" width="25.7" height="15.0" fill="rgb(223,170,21)" rx="2" ry="2" />
<text  x="164.51" y="671.5" >s..</text>
</g>
<g >
<title>all (20,242 samples, 100%)</title><rect x="10.0" y="1013" width="1180.0" height="15.0" fill="rgb(228,219,37)" rx="2" ry="2" />
<text  x="13.00" y="1023.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (79 samples, 0.39%)</title><rect x="142.0" y="709" width="4.6" height="15.0" fill="rgb(234,165,35)" rx="2" ry="2" />
<text  x="145.04" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream (2 samples, 0.01%)</title><rect x="988.0" y="709" width="0.1" height="15.0" fill="rgb(212,61,47)" rx="2" ry="2" />
<text  x="990.95" y="719.5" ></text>
</g>
<g >
<title>Bitmap::~Bitmap (12 samples, 0.06%)</title><rect x="212.4" y="453" width="0.7" height="15.0" fill="rgb(226,198,50)" rx="2" ry="2" />
<text  x="215.40" y="463.5" ></text>
</g>
<g >
<title>Graphics::LocalDraw (12 samples, 0.06%)</title><rect x="278.4" y="837" width="0.7" height="15.0" fill="rgb(236,18,39)" rx="2" ry="2" />
<text  x="281.39" y="847.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (153 samples, 0.76%)</title><rect x="637.7" y="661" width="8.9" height="15.0" fill="rgb(249,76,47)" rx="2" ry="2" />
<text  x="640.66" y="671.5" ></text>
</g>
<g >
<title>arch_get_unmapped_area_topdown (2 samples, 0.01%)</title><rect x="136.8" y="277" width="0.1" height="15.0" fill="rgb(247,98,38)" rx="2" ry="2" />
<text  x="139.79" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (6 samples, 0.03%)</title><rect x="469.5" y="677" width="0.4" height="15.0" fill="rgb(252,209,16)" rx="2" ry="2" />
<text  x="472.54" y="687.5" ></text>
</g>
<g >
<title>Sprite::SetY (3 samples, 0.01%)</title><rect x="38.7" y="965" width="0.2" height="15.0" fill="rgb(248,108,1)" rx="2" ry="2" />
<text  x="41.74" y="975.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="239.1" y="501" width="0.1" height="15.0" fill="rgb(250,143,47)" rx="2" ry="2" />
<text  x="242.10" y="511.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (54 samples, 0.27%)</title><rect x="931.7" y="437" width="3.1" height="15.0" fill="rgb(221,75,10)" rx="2" ry="2" />
<text  x="934.70" y="447.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (10,498 samples, 51.86%)</title><rect x="443.4" y="757" width="612.0" height="15.0" fill="rgb(236,199,11)" rx="2" ry="2" />
<text  x="446.42" y="767.5" >Game_Interpreter::ExecuteCommand</text>
</g>
<g >
<title>std::get&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (7 samples, 0.03%)</title><rect x="99.8" y="965" width="0.4" height="15.0" fill="rgb(222,200,34)" rx="2" ry="2" />
<text  x="102.77" y="975.5" ></text>
</g>
<g >
<title>__do_munmap (3 samples, 0.01%)</title><rect x="986.9" y="421" width="0.2" height="15.0" fill="rgb(206,6,12)" rx="2" ry="2" />
<text  x="989.90" y="431.5" ></text>
</g>
<g >
<title>Player::Update (59 samples, 0.29%)</title><rect x="268.7" y="901" width="3.5" height="15.0" fill="rgb(247,156,34)" rx="2" ry="2" />
<text  x="271.71" y="911.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (68 samples, 0.34%)</title><rect x="203.0" y="629" width="4.0" height="15.0" fill="rgb(205,101,47)" rx="2" ry="2" />
<text  x="206.01" y="639.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (10 samples, 0.05%)</title><rect x="174.1" y="533" width="0.6" height="15.0" fill="rgb(225,21,13)" rx="2" ry="2" />
<text  x="177.10" y="543.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (2 samples, 0.01%)</title><rect x="632.2" y="709" width="0.2" height="15.0" fill="rgb(246,221,50)" rx="2" ry="2" />
<text  x="635.24" y="719.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (11 samples, 0.05%)</title><rect x="1182.1" y="837" width="0.7" height="15.0" fill="rgb(220,153,27)" rx="2" ry="2" />
<text  x="1185.13" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (46 samples, 0.23%)</title><rect x="1092.9" y="709" width="2.7" height="15.0" fill="rgb(215,1,20)" rx="2" ry="2" />
<text  x="1095.94" y="719.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (2 samples, 0.01%)</title><rect x="1169.9" y="757" width="0.2" height="15.0" fill="rgb(234,133,43)" rx="2" ry="2" />
<text  x="1172.95" y="767.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (2 samples, 0.01%)</title><rect x="785.7" y="453" width="0.1" height="15.0" fill="rgb(223,146,22)" rx="2" ry="2" />
<text  x="788.73" y="463.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (18 samples, 0.09%)</title><rect x="1181.0" y="725" width="1.1" height="15.0" fill="rgb(206,112,45)" rx="2" ry="2" />
<text  x="1184.02" y="735.5" ></text>
</g>
<g >
<title>rw_verify_area (4 samples, 0.02%)</title><rect x="22.8" y="901" width="0.2" height="15.0" fill="rgb(224,214,43)" rx="2" ry="2" />
<text  x="25.77" y="911.5" ></text>
</g>
<g >
<title>operator!= (7 samples, 0.03%)</title><rect x="967.3" y="677" width="0.4" height="15.0" fill="rgb(206,163,24)" rx="2" ry="2" />
<text  x="970.31" y="687.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (16 samples, 0.08%)</title><rect x="174.1" y="565" width="0.9" height="15.0" fill="rgb(223,184,26)" rx="2" ry="2" />
<text  x="177.10" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (14 samples, 0.07%)</title><rect x="903.2" y="405" width="0.9" height="15.0" fill="rgb(211,129,53)" rx="2" ry="2" />
<text  x="906.25" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator bool (10 samples, 0.05%)</title><rect x="1169.4" y="773" width="0.5" height="15.0" fill="rgb(235,36,28)" rx="2" ry="2" />
<text  x="1172.36" y="783.5" ></text>
</g>
<g >
<title>MakeFlashColor (7 samples, 0.03%)</title><rect x="1161.6" y="757" width="0.4" height="15.0" fill="rgb(231,71,31)" rx="2" ry="2" />
<text  x="1164.61" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="606.1" y="661" width="0.1" height="15.0" fill="rgb(210,189,40)" rx="2" ry="2" />
<text  x="609.12" y="671.5" ></text>
</g>
<g >
<title>Game_Map::Update (86 samples, 0.42%)</title><rect x="198.0" y="917" width="5.0" height="15.0" fill="rgb(247,194,27)" rx="2" ry="2" />
<text  x="201.00" y="927.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, true&gt; (14 samples, 0.07%)</title><rect x="156.5" y="597" width="0.8" height="15.0" fill="rgb(216,82,16)" rx="2" ry="2" />
<text  x="159.49" y="607.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (3 samples, 0.01%)</title><rect x="81.4" y="965" width="0.1" height="15.0" fill="rgb(251,0,33)" rx="2" ry="2" />
<text  x="84.35" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator++ (11 samples, 0.05%)</title><rect x="50.0" y="965" width="0.7" height="15.0" fill="rgb(213,127,3)" rx="2" ry="2" />
<text  x="53.05" y="975.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator() (3 samples, 0.01%)</title><rect x="212.2" y="341" width="0.2" height="15.0" fill="rgb(228,148,41)" rx="2" ry="2" />
<text  x="215.22" y="351.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (52 samples, 0.26%)</title><rect x="161.7" y="501" width="3.1" height="15.0" fill="rgb(239,80,32)" rx="2" ry="2" />
<text  x="164.74" y="511.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::_M_ptr (9 samples, 0.04%)</title><rect x="969.5" y="661" width="0.5" height="15.0" fill="rgb(246,16,37)" rx="2" ry="2" />
<text  x="972.47" y="671.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (5 samples, 0.02%)</title><rect x="55.6" y="965" width="0.3" height="15.0" fill="rgb(231,5,26)" rx="2" ry="2" />
<text  x="58.59" y="975.5" ></text>
</g>
<g >
<title>operator== (7 samples, 0.03%)</title><rect x="57.2" y="965" width="0.4" height="15.0" fill="rgb(253,228,45)" rx="2" ry="2" />
<text  x="60.16" y="975.5" ></text>
</g>
<g >
<title>FileRequestAsync::Bind (2 samples, 0.01%)</title><rect x="239.1" y="677" width="0.1" height="15.0" fill="rgb(208,68,50)" rx="2" ry="2" />
<text  x="242.10" y="687.5" ></text>
</g>
<g >
<title>Tone::Tone (16 samples, 0.08%)</title><rect x="1166.9" y="773" width="0.9" height="15.0" fill="rgb(241,100,39)" rx="2" ry="2" />
<text  x="1169.92" y="783.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (7 samples, 0.03%)</title><rect x="875.4" y="453" width="0.5" height="15.0" fill="rgb(208,127,25)" rx="2" ry="2" />
<text  x="878.44" y="463.5" ></text>
</g>
<g >
<title>__GI___writev (2 samples, 0.01%)</title><rect x="279.4" y="677" width="0.1" height="15.0" fill="rgb(225,64,29)" rx="2" ry="2" />
<text  x="282.38" y="687.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (86 samples, 0.42%)</title><rect x="198.0" y="757" width="5.0" height="15.0" fill="rgb(229,87,50)" rx="2" ry="2" />
<text  x="201.00" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::destroy&lt;Bitmap&gt; (169 samples, 0.83%)</title><rect x="258.4" y="373" width="9.8" height="15.0" fill="rgb(243,5,38)" rx="2" ry="2" />
<text  x="261.39" y="383.5" ></text>
</g>
<g >
<title>max&lt;int&gt; (3 samples, 0.01%)</title><rect x="1167.6" y="757" width="0.1" height="15.0" fill="rgb(232,42,38)" rx="2" ry="2" />
<text  x="1170.56" y="767.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (101 samples, 0.50%)</title><rect x="188.1" y="485" width="5.9" height="15.0" fill="rgb(234,161,27)" rx="2" ry="2" />
<text  x="191.15" y="495.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (10 samples, 0.05%)</title><rect x="98.4" y="965" width="0.6" height="15.0" fill="rgb(222,66,54)" rx="2" ry="2" />
<text  x="101.37" y="975.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (9 samples, 0.04%)</title><rect x="1150.1" y="773" width="0.5" height="15.0" fill="rgb(249,167,44)" rx="2" ry="2" />
<text  x="1153.07" y="783.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (12 samples, 0.06%)</title><rect x="212.4" y="373" width="0.7" height="15.0" fill="rgb(221,12,11)" rx="2" ry="2" />
<text  x="215.40" y="383.5" ></text>
</g>
<g >
<title>operator delete (72 samples, 0.36%)</title><rect x="157.3" y="533" width="4.2" height="15.0" fill="rgb(244,115,7)" rx="2" ry="2" />
<text  x="160.31" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (2 samples, 0.01%)</title><rect x="129.6" y="965" width="0.1" height="15.0" fill="rgb(239,181,25)" rx="2" ry="2" />
<text  x="132.62" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::CommonEvent, std::allocator&lt;RPG::CommonEvent&gt; &gt;::size (2 samples, 0.01%)</title><rect x="1145.3" y="773" width="0.1" height="15.0" fill="rgb(237,0,0)" rx="2" ry="2" />
<text  x="1148.29" y="783.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.02%)</title><rect x="263.3" y="261" width="0.3" height="15.0" fill="rgb(233,95,50)" rx="2" ry="2" />
<text  x="266.29" y="271.5" ></text>
</g>
<g >
<title>Sprite::SetAngle (2 samples, 0.01%)</title><rect x="880.2" y="469" width="0.1" height="15.0" fill="rgb(246,114,46)" rx="2" ry="2" />
<text  x="883.22" y="479.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (86 samples, 0.42%)</title><rect x="198.0" y="693" width="5.0" height="15.0" fill="rgb(233,221,46)" rx="2" ry="2" />
<text  x="201.00" y="703.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (2,896 samples, 14.31%)</title><rect x="754.1" y="533" width="168.9" height="15.0" fill="rgb(209,31,13)" rx="2" ry="2" />
<text  x="757.13" y="543.5" >std::__invoke&lt;void (G..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_valptr (2 samples, 0.01%)</title><rect x="810.9" y="405" width="0.1" height="15.0" fill="rgb(251,152,30)" rx="2" ry="2" />
<text  x="813.91" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (2 samples, 0.01%)</title><rect x="609.0" y="709" width="0.1" height="15.0" fill="rgb(244,219,15)" rx="2" ry="2" />
<text  x="611.98" y="719.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt;::_M_head (3 samples, 0.01%)</title><rect x="1176.8" y="725" width="0.2" height="15.0" fill="rgb(218,19,8)" rx="2" ry="2" />
<text  x="1179.83" y="735.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (2 samples, 0.01%)</title><rect x="955.7" y="677" width="0.1" height="15.0" fill="rgb(238,20,10)" rx="2" ry="2" />
<text  x="958.66" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (214 samples, 1.06%)</title><rect x="666.4" y="661" width="12.5" height="15.0" fill="rgb(210,215,0)" rx="2" ry="2" />
<text  x="669.40" y="671.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Transition*, std::default_delete&lt;Transition&gt; &gt; (8 samples, 0.04%)</title><rect x="99.0" y="965" width="0.4" height="15.0" fill="rgb(210,212,37)" rx="2" ry="2" />
<text  x="101.96" y="975.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (100 samples, 0.49%)</title><rect x="671.3" y="629" width="5.8" height="15.0" fill="rgb(241,62,54)" rx="2" ry="2" />
<text  x="674.29" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (16 samples, 0.08%)</title><rect x="465.7" y="693" width="1.0" height="15.0" fill="rgb(243,8,16)" rx="2" ry="2" />
<text  x="468.75" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (2 samples, 0.01%)</title><rect x="996.8" y="693" width="0.1" height="15.0" fill="rgb(240,129,23)" rx="2" ry="2" />
<text  x="999.75" y="703.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (37 samples, 0.18%)</title><rect x="976.8" y="661" width="2.2" height="15.0" fill="rgb(208,146,14)" rx="2" ry="2" />
<text  x="979.82" y="671.5" ></text>
</g>
<g >
<title>std::_Bit_iterator_base::_Bit_iterator_base (3 samples, 0.01%)</title><rect x="286.1" y="709" width="0.2" height="15.0" fill="rgb(210,61,2)" rx="2" ry="2" />
<text  x="289.08" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_Rb_tree_iterator (2 samples, 0.01%)</title><rect x="781.8" y="405" width="0.1" height="15.0" fill="rgb(211,1,29)" rx="2" ry="2" />
<text  x="784.82" y="415.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::_Bind&lt;Game_Picture*&amp;, std::_Placeholder&lt;1&gt; const&amp;&gt; (2 samples, 0.01%)</title><rect x="58.4" y="965" width="0.2" height="15.0" fill="rgb(209,87,17)" rx="2" ry="2" />
<text  x="61.44" y="975.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (22 samples, 0.11%)</title><rect x="89.7" y="965" width="1.3" height="15.0" fill="rgb(229,107,43)" rx="2" ry="2" />
<text  x="92.75" y="975.5" ></text>
</g>
<g >
<title>memcpy@plt (3 samples, 0.01%)</title><rect x="990.8" y="693" width="0.2" height="15.0" fill="rgb(248,148,21)" rx="2" ry="2" />
<text  x="993.81" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (22 samples, 0.11%)</title><rect x="663.7" y="629" width="1.2" height="15.0" fill="rgb(228,47,53)" rx="2" ry="2" />
<text  x="666.66" y="639.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (5 samples, 0.02%)</title><rect x="1142.7" y="741" width="0.3" height="15.0" fill="rgb(213,227,28)" rx="2" ry="2" />
<text  x="1145.66" y="751.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (7 samples, 0.03%)</title><rect x="197.0" y="357" width="0.4" height="15.0" fill="rgb(210,65,39)" rx="2" ry="2" />
<text  x="199.95" y="367.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_memcmp@plt (3 samples, 0.01%)</title><rect x="164.6" y="485" width="0.2" height="15.0" fill="rgb(211,46,15)" rx="2" ry="2" />
<text  x="167.60" y="495.5" ></text>
</g>
<g >
<title>strlen (3 samples, 0.01%)</title><rect x="787.0" y="453" width="0.1" height="15.0" fill="rgb(230,198,35)" rx="2" ry="2" />
<text  x="789.95" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (9 samples, 0.04%)</title><rect x="1002.5" y="709" width="0.5" height="15.0" fill="rgb(243,23,45)" rx="2" ry="2" />
<text  x="1005.52" y="719.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (95 samples, 0.47%)</title><rect x="671.6" y="613" width="5.5" height="15.0" fill="rgb(235,166,48)" rx="2" ry="2" />
<text  x="674.59" y="623.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (8 samples, 0.04%)</title><rect x="1180.2" y="389" width="0.5" height="15.0" fill="rgb(245,180,34)" rx="2" ry="2" />
<text  x="1183.21" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (44 samples, 0.22%)</title><rect x="199.3" y="421" width="2.5" height="15.0" fill="rgb(214,123,21)" rx="2" ry="2" />
<text  x="202.28" y="431.5" ></text>
</g>
<g >
<title>[easyrpg-player] (2 samples, 0.01%)</title><rect x="636.1" y="661" width="0.1" height="15.0" fill="rgb(233,166,7)" rx="2" ry="2" />
<text  x="639.08" y="671.5" ></text>
</g>
<g >
<title>Blend (24 samples, 0.12%)</title><rect x="873.3" y="469" width="1.4" height="15.0" fill="rgb(222,65,0)" rx="2" ry="2" />
<text  x="876.29" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (5 samples, 0.02%)</title><rect x="1049.7" y="725" width="0.3" height="15.0" fill="rgb(222,169,30)" rx="2" ry="2" />
<text  x="1052.68" y="735.5" ></text>
</g>
<g >
<title>std::__find_if&lt;int const*, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (7 samples, 0.03%)</title><rect x="606.8" y="661" width="0.4" height="15.0" fill="rgb(220,55,37)" rx="2" ry="2" />
<text  x="609.76" y="671.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (68 samples, 0.34%)</title><rect x="203.0" y="821" width="4.0" height="15.0" fill="rgb(223,161,35)" rx="2" ry="2" />
<text  x="206.01" y="831.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (12 samples, 0.06%)</title><rect x="902.3" y="421" width="0.7" height="15.0" fill="rgb(231,171,28)" rx="2" ry="2" />
<text  x="905.32" y="431.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (343 samples, 1.69%)</title><rect x="899.9" y="469" width="20.0" height="15.0" fill="rgb(221,208,11)" rx="2" ry="2" />
<text  x="902.87" y="479.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (109 samples, 0.54%)</title><rect x="146.6" y="469" width="6.4" height="15.0" fill="rgb(254,25,21)" rx="2" ry="2" />
<text  x="149.64" y="479.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (12 samples, 0.06%)</title><rect x="212.4" y="421" width="0.7" height="15.0" fill="rgb(210,132,11)" rx="2" ry="2" />
<text  x="215.40" y="431.5" ></text>
</g>
<g >
<title>___sys_recvmsg (2 samples, 0.01%)</title><rect x="1182.4" y="597" width="0.1" height="15.0" fill="rgb(216,199,2)" rx="2" ry="2" />
<text  x="1185.42" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (6 samples, 0.03%)</title><rect x="937.5" y="453" width="0.4" height="15.0" fill="rgb(254,140,7)" rx="2" ry="2" />
<text  x="940.53" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt;::__normal_iterator (24 samples, 0.12%)</title><rect x="1115.9" y="741" width="1.4" height="15.0" fill="rgb(227,97,45)" rx="2" ry="2" />
<text  x="1118.91" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (2 samples, 0.01%)</title><rect x="963.2" y="661" width="0.1" height="15.0" fill="rgb(253,100,10)" rx="2" ry="2" />
<text  x="966.18" y="671.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (68 samples, 0.34%)</title><rect x="203.0" y="597" width="4.0" height="15.0" fill="rgb(229,225,27)" rx="2" ry="2" />
<text  x="206.01" y="607.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (41 samples, 0.20%)</title><rect x="720.7" y="581" width="2.4" height="15.0" fill="rgb(236,134,46)" rx="2" ry="2" />
<text  x="723.73" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Switch, std::allocator&lt;RPG::Switch&gt; &gt;::size (3 samples, 0.01%)</title><rect x="117.7" y="965" width="0.2" height="15.0" fill="rgb(243,211,15)" rx="2" ry="2" />
<text  x="120.73" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (6 samples, 0.03%)</title><rect x="595.3" y="725" width="0.3" height="15.0" fill="rgb(207,167,26)" rx="2" ry="2" />
<text  x="598.28" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char&gt; (3 samples, 0.01%)</title><rect x="644.7" y="629" width="0.2" height="15.0" fill="rgb(244,209,51)" rx="2" ry="2" />
<text  x="647.71" y="639.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (4 samples, 0.02%)</title><rect x="1169.5" y="725" width="0.3" height="15.0" fill="rgb(246,207,15)" rx="2" ry="2" />
<text  x="1172.54" y="735.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (170 samples, 0.84%)</title><rect x="132.0" y="645" width="9.9" height="15.0" fill="rgb(231,48,41)" rx="2" ry="2" />
<text  x="134.95" y="655.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (2 samples, 0.01%)</title><rect x="128.2" y="965" width="0.1" height="15.0" fill="rgb(241,185,8)" rx="2" ry="2" />
<text  x="131.22" y="975.5" ></text>
</g>
<g >
<title>Scene_Map::Update (105 samples, 0.52%)</title><rect x="207.0" y="965" width="6.1" height="15.0" fill="rgb(212,78,3)" rx="2" ry="2" />
<text  x="209.98" y="975.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingBackgroundExecution (82 samples, 0.41%)</title><rect x="281.7" y="789" width="4.8" height="15.0" fill="rgb(215,171,32)" rx="2" ry="2" />
<text  x="284.71" y="799.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="1189.7" y="965" width="0.1" height="15.0" fill="rgb(230,8,25)" rx="2" ry="2" />
<text  x="1192.71" y="975.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (5 samples, 0.02%)</title><rect x="984.2" y="661" width="0.3" height="15.0" fill="rgb(209,67,49)" rx="2" ry="2" />
<text  x="987.16" y="671.5" ></text>
</g>
<g >
<title>Game_Screen::GetFlashColor (13 samples, 0.06%)</title><rect x="1161.3" y="773" width="0.7" height="15.0" fill="rgb(225,58,50)" rx="2" ry="2" />
<text  x="1164.26" y="783.5" ></text>
</g>
<g >
<title>Bitmap::EffectsBlit (6 samples, 0.03%)</title><rect x="278.4" y="773" width="0.3" height="15.0" fill="rgb(227,65,3)" rx="2" ry="2" />
<text  x="281.39" y="783.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (3 samples, 0.01%)</title><rect x="278.4" y="741" width="0.2" height="15.0" fill="rgb(228,197,47)" rx="2" ry="2" />
<text  x="281.39" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (2 samples, 0.01%)</title><rect x="1006.2" y="725" width="0.1" height="15.0" fill="rgb(216,218,34)" rx="2" ry="2" />
<text  x="1009.20" y="735.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (18 samples, 0.09%)</title><rect x="781.9" y="405" width="1.1" height="15.0" fill="rgb(237,34,39)" rx="2" ry="2" />
<text  x="784.94" y="415.5" ></text>
</g>
<g >
<title>Bitmap::GetRect (2 samples, 0.01%)</title><rect x="25.3" y="965" width="0.1" height="15.0" fill="rgb(225,64,53)" rx="2" ry="2" />
<text  x="28.27" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (10 samples, 0.05%)</title><rect x="1083.0" y="725" width="0.6" height="15.0" fill="rgb(239,129,22)" rx="2" ry="2" />
<text  x="1085.97" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::operator* (2 samples, 0.01%)</title><rect x="1145.5" y="805" width="0.1" height="15.0" fill="rgb(253,27,51)" rx="2" ry="2" />
<text  x="1148.46" y="815.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (117 samples, 0.58%)</title><rect x="187.2" y="741" width="6.8" height="15.0" fill="rgb(228,187,33)" rx="2" ry="2" />
<text  x="190.22" y="751.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (3,431 samples, 16.95%)</title><rect x="738.2" y="661" width="200.0" height="15.0" fill="rgb(248,157,20)" rx="2" ry="2" />
<text  x="741.22" y="671.5" >FileRequestAsync::CallList..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (4 samples, 0.02%)</title><rect x="740.0" y="629" width="0.2" height="15.0" fill="rgb(254,83,52)" rx="2" ry="2" />
<text  x="742.97" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (4 samples, 0.02%)</title><rect x="53.4" y="965" width="0.2" height="15.0" fill="rgb(220,1,27)" rx="2" ry="2" />
<text  x="56.37" y="975.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (3 samples, 0.01%)</title><rect x="785.6" y="453" width="0.1" height="15.0" fill="rgb(224,102,17)" rx="2" ry="2" />
<text  x="788.55" y="463.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt;::_M_head (2 samples, 0.01%)</title><rect x="891.8" y="389" width="0.1" height="15.0" fill="rgb(214,119,51)" rx="2" ry="2" />
<text  x="894.82" y="399.5" ></text>
</g>
<g >
<title>FileRequestResult::FileRequestResult (5 samples, 0.02%)</title><rect x="740.0" y="645" width="0.3" height="15.0" fill="rgb(241,71,3)" rx="2" ry="2" />
<text  x="742.97" y="655.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, bool&gt;::_M_head (4 samples, 0.02%)</title><rect x="813.4" y="325" width="0.2" height="15.0" fill="rgb(215,62,4)" rx="2" ry="2" />
<text  x="816.36" y="335.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (58 samples, 0.29%)</title><rect x="153.0" y="597" width="3.4" height="15.0" fill="rgb(215,213,13)" rx="2" ry="2" />
<text  x="156.00" y="607.5" ></text>
</g>
<g >
<title>Bitmap::~Bitmap (18 samples, 0.09%)</title><rect x="197.0" y="389" width="1.0" height="15.0" fill="rgb(208,151,39)" rx="2" ry="2" />
<text  x="199.95" y="399.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (170 samples, 0.84%)</title><rect x="132.0" y="677" width="9.9" height="15.0" fill="rgb(242,182,38)" rx="2" ry="2" />
<text  x="134.95" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (5 samples, 0.02%)</title><rect x="1028.9" y="709" width="0.3" height="15.0" fill="rgb(219,219,50)" rx="2" ry="2" />
<text  x="1031.87" y="719.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (5 samples, 0.02%)</title><rect x="1182.3" y="741" width="0.3" height="15.0" fill="rgb(214,228,11)" rx="2" ry="2" />
<text  x="1185.31" y="751.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::~function (2 samples, 0.01%)</title><rect x="941.6" y="693" width="0.1" height="15.0" fill="rgb(221,25,28)" rx="2" ry="2" />
<text  x="944.61" y="703.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;*&gt; (3 samples, 0.01%)</title><rect x="58.2" y="965" width="0.1" height="15.0" fill="rgb(230,223,1)" rx="2" ry="2" />
<text  x="61.15" y="975.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator() (3 samples, 0.01%)</title><rect x="780.4" y="389" width="0.1" height="15.0" fill="rgb(243,73,5)" rx="2" ry="2" />
<text  x="783.36" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;Bitmap&gt;::~allocator (3 samples, 0.01%)</title><rect x="92.4" y="965" width="0.1" height="15.0" fill="rgb(230,101,46)" rx="2" ry="2" />
<text  x="95.37" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::~new_allocator (5 samples, 0.02%)</title><rect x="51.4" y="965" width="0.3" height="15.0" fill="rgb(245,168,49)" rx="2" ry="2" />
<text  x="54.39" y="975.5" ></text>
</g>
<g >
<title>Player::Run (500 samples, 2.47%)</title><rect x="239.1" y="933" width="29.1" height="15.0" fill="rgb(238,228,4)" rx="2" ry="2" />
<text  x="242.10" y="943.5" >Pl..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (62 samples, 0.31%)</title><rect x="170.5" y="485" width="3.6" height="15.0" fill="rgb(212,191,24)" rx="2" ry="2" />
<text  x="173.49" y="495.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (500 samples, 2.47%)</title><rect x="239.1" y="789" width="29.1" height="15.0" fill="rgb(211,216,51)" rx="2" ry="2" />
<text  x="242.10" y="799.5" >Ga..</text>
</g>
<g >
<title>std::_Any_data::_M_access (2 samples, 0.01%)</title><rect x="723.5" y="613" width="0.1" height="15.0" fill="rgb(238,54,23)" rx="2" ry="2" />
<text  x="726.53" y="623.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (3 samples, 0.01%)</title><rect x="957.8" y="677" width="0.1" height="15.0" fill="rgb(231,66,53)" rx="2" ry="2" />
<text  x="960.75" y="687.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (2 samples, 0.01%)</title><rect x="192.9" y="277" width="0.1" height="15.0" fill="rgb(249,189,48)" rx="2" ry="2" />
<text  x="195.87" y="287.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (16 samples, 0.08%)</title><rect x="1180.0" y="773" width="1.0" height="15.0" fill="rgb(242,218,2)" rx="2" ry="2" />
<text  x="1183.03" y="783.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (6 samples, 0.03%)</title><rect x="99.4" y="965" width="0.4" height="15.0" fill="rgb(245,26,0)" rx="2" ry="2" />
<text  x="102.42" y="975.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (498 samples, 2.46%)</title><rect x="239.2" y="693" width="29.0" height="15.0" fill="rgb(210,201,21)" rx="2" ry="2" />
<text  x="242.21" y="703.5" >Fi..</text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (159 samples, 0.79%)</title><rect x="164.8" y="533" width="9.3" height="15.0" fill="rgb(246,131,17)" rx="2" ry="2" />
<text  x="167.83" y="543.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (105 samples, 0.52%)</title><rect x="207.0" y="949" width="6.1" height="15.0" fill="rgb(213,100,27)" rx="2" ry="2" />
<text  x="209.98" y="959.5" ></text>
</g>
<g >
<title>Sprite::SetZoomY (2 samples, 0.01%)</title><rect x="968.1" y="693" width="0.1" height="15.0" fill="rgb(244,136,21)" rx="2" ry="2" />
<text  x="971.13" y="703.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (2 samples, 0.01%)</title><rect x="616.8" y="693" width="0.2" height="15.0" fill="rgb(236,181,3)" rx="2" ry="2" />
<text  x="619.85" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_dispose (11 samples, 0.05%)</title><rect x="986.4" y="661" width="0.7" height="15.0" fill="rgb(208,25,2)" rx="2" ry="2" />
<text  x="989.44" y="671.5" ></text>
</g>
<g >
<title>Game_Interpreter::SetSubcommandIndex (221 samples, 1.09%)</title><rect x="471.3" y="725" width="12.9" height="15.0" fill="rgb(217,77,0)" rx="2" ry="2" />
<text  x="474.34" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt; (39 samples, 0.19%)</title><rect x="1111.5" y="757" width="2.3" height="15.0" fill="rgb(244,90,47)" rx="2" ry="2" />
<text  x="1114.54" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_construct_aux&lt;char32_t const*&gt; (3 samples, 0.01%)</title><rect x="987.4" y="661" width="0.2" height="15.0" fill="rgb(218,55,35)" rx="2" ry="2" />
<text  x="990.43" y="671.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&gt; (38 samples, 0.19%)</title><rect x="691.1" y="581" width="2.2" height="15.0" fill="rgb(212,2,26)" rx="2" ry="2" />
<text  x="694.06" y="591.5" ></text>
</g>
<g >
<title>std::forward&lt;Game_Picture*&gt; (2 samples, 0.01%)</title><rect x="724.6" y="565" width="0.1" height="15.0" fill="rgb(226,186,29)" rx="2" ry="2" />
<text  x="727.58" y="575.5" ></text>
</g>
<g >
<title>__gthread_active_p (3 samples, 0.01%)</title><rect x="978.8" y="629" width="0.2" height="15.0" fill="rgb(229,133,25)" rx="2" ry="2" />
<text  x="981.80" y="639.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (4 samples, 0.02%)</title><rect x="156.5" y="565" width="0.2" height="15.0" fill="rgb(241,112,48)" rx="2" ry="2" />
<text  x="159.49" y="575.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::end (25 samples, 0.12%)</title><rect x="509.3" y="709" width="1.5" height="15.0" fill="rgb(214,135,33)" rx="2" ry="2" />
<text  x="512.29" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_ptr (3 samples, 0.01%)</title><rect x="786.3" y="437" width="0.1" height="15.0" fill="rgb(233,65,28)" rx="2" ry="2" />
<text  x="789.25" y="447.5" ></text>
</g>
<g >
<title>Tone::Tone (11 samples, 0.05%)</title><rect x="874.0" y="453" width="0.7" height="15.0" fill="rgb(250,150,4)" rx="2" ry="2" />
<text  x="877.04" y="463.5" ></text>
</g>
<g >
<title>max&lt;int&gt; (2 samples, 0.01%)</title><rect x="962.0" y="661" width="0.1" height="15.0" fill="rgb(223,14,12)" rx="2" ry="2" />
<text  x="965.01" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_valptr (12 samples, 0.06%)</title><rect x="669.4" y="597" width="0.7" height="15.0" fill="rgb(224,200,41)" rx="2" ry="2" />
<text  x="672.37" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_key (7 samples, 0.03%)</title><rect x="677.1" y="645" width="0.4" height="15.0" fill="rgb(210,42,47)" rx="2" ry="2" />
<text  x="680.12" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (13 samples, 0.06%)</title><rect x="500.6" y="677" width="0.8" height="15.0" fill="rgb(238,5,16)" rx="2" ry="2" />
<text  x="503.61" y="687.5" ></text>
</g>
<g >
<title>Bitmap::height (2 samples, 0.01%)</title><rect x="121.6" y="965" width="0.2" height="15.0" fill="rgb(245,79,31)" rx="2" ry="2" />
<text  x="124.63" y="975.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (304 samples, 1.50%)</title><rect x="239.2" y="485" width="17.7" height="15.0" fill="rgb(245,115,5)" rx="2" ry="2" />
<text  x="242.21" y="495.5" ></text>
</g>
<g >
<title>Sprite::Flash (18 samples, 0.09%)</title><rect x="879.0" y="469" width="1.0" height="15.0" fill="rgb(219,213,31)" rx="2" ry="2" />
<text  x="882.00" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (8 samples, 0.04%)</title><rect x="201.4" y="341" width="0.4" height="15.0" fill="rgb(252,214,36)" rx="2" ry="2" />
<text  x="204.38" y="351.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;int&gt;::~weak_ptr (3 samples, 0.01%)</title><rect x="701.2" y="645" width="0.2" height="15.0" fill="rgb(233,58,44)" rx="2" ry="2" />
<text  x="704.20" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (53 samples, 0.26%)</title><rect x="161.7" y="581" width="3.1" height="15.0" fill="rgb(214,196,7)" rx="2" ry="2" />
<text  x="164.74" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (35 samples, 0.17%)</title><rect x="1100.1" y="709" width="2.0" height="15.0" fill="rgb(209,25,6)" rx="2" ry="2" />
<text  x="1103.05" y="719.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (32 samples, 0.16%)</title><rect x="153.5" y="501" width="1.9" height="15.0" fill="rgb(228,33,46)" rx="2" ry="2" />
<text  x="156.52" y="511.5" ></text>
</g>
<g >
<title>Sdl2Ui::ProcessActiveEvent (49 samples, 0.24%)</title><rect x="1179.3" y="837" width="2.8" height="15.0" fill="rgb(212,27,21)" rx="2" ry="2" />
<text  x="1182.27" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (46 samples, 0.23%)</title><rect x="1075.6" y="709" width="2.7" height="15.0" fill="rgb(236,19,21)" rx="2" ry="2" />
<text  x="1078.63" y="719.5" ></text>
</g>
<g >
<title>Player::Update (68 samples, 0.34%)</title><rect x="203.0" y="949" width="4.0" height="15.0" fill="rgb(241,16,6)" rx="2" ry="2" />
<text  x="206.01" y="959.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (2 samples, 0.01%)</title><rect x="279.4" y="741" width="0.1" height="15.0" fill="rgb(238,44,8)" rx="2" ry="2" />
<text  x="282.38" y="751.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (15 samples, 0.07%)</title><rect x="1181.1" y="581" width="0.9" height="15.0" fill="rgb(237,218,22)" rx="2" ry="2" />
<text  x="1184.08" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare@plt (2 samples, 0.01%)</title><rect x="803.1" y="341" width="0.1" height="15.0" fill="rgb(215,4,3)" rx="2" ry="2" />
<text  x="806.10" y="351.5" ></text>
</g>
<g >
<title>operator delete (27 samples, 0.13%)</title><rect x="268.7" y="357" width="1.6" height="15.0" fill="rgb(223,200,19)" rx="2" ry="2" />
<text  x="271.71" y="367.5" ></text>
</g>
<g >
<title>deactivate_task (3 samples, 0.01%)</title><rect x="17.5" y="837" width="0.1" height="15.0" fill="rgb(217,214,18)" rx="2" ry="2" />
<text  x="20.46" y="847.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (28 samples, 0.14%)</title><rect x="881.8" y="437" width="1.6" height="15.0" fill="rgb(222,229,37)" rx="2" ry="2" />
<text  x="884.80" y="447.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (354 samples, 1.75%)</title><rect x="213.1" y="693" width="20.6" height="15.0" fill="rgb(243,175,46)" rx="2" ry="2" />
<text  x="216.10" y="703.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (105 samples, 0.52%)</title><rect x="207.0" y="709" width="6.1" height="15.0" fill="rgb(223,97,0)" rx="2" ry="2" />
<text  x="209.98" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_addr (5 samples, 0.02%)</title><rect x="43.3" y="965" width="0.3" height="15.0" fill="rgb(219,10,32)" rx="2" ry="2" />
<text  x="46.29" y="975.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::_M_ptr (7 samples, 0.03%)</title><rect x="91.0" y="965" width="0.4" height="15.0" fill="rgb(209,174,18)" rx="2" ry="2" />
<text  x="94.03" y="975.5" ></text>
</g>
<g >
<title>__interceptor_free (11 samples, 0.05%)</title><rect x="197.4" y="357" width="0.6" height="15.0" fill="rgb(245,18,6)" rx="2" ry="2" />
<text  x="200.36" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string@plt (2 samples, 0.01%)</title><rect x="941.3" y="693" width="0.1" height="15.0" fill="rgb(243,133,28)" rx="2" ry="2" />
<text  x="944.26" y="703.5" ></text>
</g>
<g >
<title>AsyncHandler::IsImportantFilePending (2 samples, 0.01%)</title><rect x="1182.8" y="869" width="0.1" height="15.0" fill="rgb(253,171,28)" rx="2" ry="2" />
<text  x="1185.77" y="879.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (2 samples, 0.01%)</title><rect x="920.6" y="437" width="0.1" height="15.0" fill="rgb(219,79,27)" rx="2" ry="2" />
<text  x="923.62" y="447.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (2 samples, 0.01%)</title><rect x="250.9" y="309" width="0.1" height="15.0" fill="rgb(250,213,43)" rx="2" ry="2" />
<text  x="253.93" y="319.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::operator[] (41 samples, 0.20%)</title><rect x="199.5" y="373" width="2.3" height="15.0" fill="rgb(235,85,3)" rx="2" ry="2" />
<text  x="202.46" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (6 samples, 0.03%)</title><rect x="609.1" y="709" width="0.3" height="15.0" fill="rgb(245,6,32)" rx="2" ry="2" />
<text  x="612.09" y="719.5" ></text>
</g>
<g >
<title>__sched_text_start (77 samples, 0.38%)</title><rect x="17.4" y="853" width="4.5" height="15.0" fill="rgb(217,116,14)" rx="2" ry="2" />
<text  x="20.40" y="863.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (14,823 samples, 73.23%)</title><rect x="280.7" y="821" width="864.1" height="15.0" fill="rgb(252,20,9)" rx="2" ry="2" />
<text  x="283.66" y="831.5" >Game_Map::UpdateCommonEvents</text>
</g>
<g >
<title>operator delete (51 samples, 0.25%)</title><rect x="740.3" y="629" width="3.0" height="15.0" fill="rgb(236,191,8)" rx="2" ry="2" />
<text  x="743.32" y="639.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Sprite*, false&gt;::_M_head (7 samples, 0.03%)</title><rect x="896.1" y="373" width="0.4" height="15.0" fill="rgb(209,1,0)" rx="2" ry="2" />
<text  x="899.14" y="383.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (44 samples, 0.22%)</title><rect x="199.3" y="405" width="2.5" height="15.0" fill="rgb(206,171,21)" rx="2" ry="2" />
<text  x="202.28" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (73 samples, 0.36%)</title><rect x="865.4" y="341" width="4.2" height="15.0" fill="rgb(212,116,22)" rx="2" ry="2" />
<text  x="868.36" y="351.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (68 samples, 0.34%)</title><rect x="194.0" y="677" width="4.0" height="15.0" fill="rgb(245,125,13)" rx="2" ry="2" />
<text  x="197.04" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (14 samples, 0.07%)</title><rect x="198.5" y="533" width="0.8" height="15.0" fill="rgb(226,177,5)" rx="2" ry="2" />
<text  x="201.47" y="543.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="208.8" y="517" width="0.2" height="15.0" fill="rgb(240,151,33)" rx="2" ry="2" />
<text  x="211.78" y="527.5" ></text>
</g>
<g >
<title>posix_get_monotonic_raw (26 samples, 0.13%)</title><rect x="227.4" y="453" width="1.6" height="15.0" fill="rgb(250,84,7)" rx="2" ry="2" />
<text  x="230.44" y="463.5" ></text>
</g>
<g >
<title>pollwake (8 samples, 0.04%)</title><rect x="23.1" y="837" width="0.4" height="15.0" fill="rgb(249,209,15)" rx="2" ry="2" />
<text  x="26.06" y="847.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (169 samples, 0.83%)</title><rect x="258.4" y="405" width="9.8" height="15.0" fill="rgb(223,196,42)" rx="2" ry="2" />
<text  x="261.39" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (103 samples, 0.51%)</title><rect x="362.4" y="725" width="6.1" height="15.0" fill="rgb(229,207,43)" rx="2" ry="2" />
<text  x="365.45" y="735.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, FileRequestResult*&amp;&amp;, false&gt;::_M_head (3 samples, 0.01%)</title><rect x="752.6" y="501" width="0.2" height="15.0" fill="rgb(246,81,43)" rx="2" ry="2" />
<text  x="755.62" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (5 samples, 0.02%)</title><rect x="799.1" y="341" width="0.3" height="15.0" fill="rgb(237,19,31)" rx="2" ry="2" />
<text  x="802.13" y="351.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Picture*, std::_Placeholder&lt;1&gt; &gt;::_M_head (2 samples, 0.01%)</title><rect x="73.3" y="965" width="0.1" height="15.0" fill="rgb(222,91,19)" rx="2" ry="2" />
<text  x="76.31" y="975.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (2 samples, 0.01%)</title><rect x="251.4" y="341" width="0.1" height="15.0" fill="rgb(223,214,16)" rx="2" ry="2" />
<text  x="254.40" y="351.5" ></text>
</g>
<g >
<title>main (59 samples, 0.29%)</title><rect x="268.7" y="965" width="3.5" height="15.0" fill="rgb(229,108,36)" rx="2" ry="2" />
<text  x="271.71" y="975.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (57 samples, 0.28%)</title><rect x="209.1" y="421" width="3.3" height="15.0" fill="rgb(212,186,39)" rx="2" ry="2" />
<text  x="212.08" y="431.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (59 samples, 0.29%)</title><rect x="268.7" y="805" width="3.5" height="15.0" fill="rgb(246,26,15)" rx="2" ry="2" />
<text  x="271.71" y="815.5" ></text>
</g>
<g >
<title>free_unref_page_list (14 samples, 0.07%)</title><rect x="204.5" y="69" width="0.8" height="15.0" fill="rgb(253,178,2)" rx="2" ry="2" />
<text  x="207.47" y="79.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (86 samples, 0.42%)</title><rect x="198.0" y="853" width="5.0" height="15.0" fill="rgb(223,24,39)" rx="2" ry="2" />
<text  x="201.00" y="863.5" ></text>
</g>
<g >
<title>_copy_to_user (13 samples, 0.06%)</title><rect x="226.7" y="453" width="0.7" height="15.0" fill="rgb(230,221,43)" rx="2" ry="2" />
<text  x="229.68" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (22 samples, 0.11%)</title><rect x="468.6" y="693" width="1.3" height="15.0" fill="rgb(251,107,51)" rx="2" ry="2" />
<text  x="471.60" y="703.5" ></text>
</g>
<g >
<title>Cache::Picture (336 samples, 1.66%)</title><rect x="213.1" y="597" width="19.6" height="15.0" fill="rgb(212,79,2)" rx="2" ry="2" />
<text  x="216.10" y="607.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (6 samples, 0.03%)</title><rect x="80.1" y="965" width="0.4" height="15.0" fill="rgb(235,26,20)" rx="2" ry="2" />
<text  x="83.13" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (44 samples, 0.22%)</title><rect x="591.2" y="709" width="2.6" height="15.0" fill="rgb(214,69,15)" rx="2" ry="2" />
<text  x="594.20" y="719.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;int&gt;::~shared_ptr (8 samples, 0.04%)</title><rect x="954.0" y="693" width="0.4" height="15.0" fill="rgb(208,104,8)" rx="2" ry="2" />
<text  x="956.97" y="703.5" ></text>
</g>
<g >
<title>Graphics::UpdateTitle (2 samples, 0.01%)</title><rect x="279.4" y="853" width="0.1" height="15.0" fill="rgb(249,209,8)" rx="2" ry="2" />
<text  x="282.38" y="863.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (91 samples, 0.45%)</title><rect x="181.9" y="517" width="5.3" height="15.0" fill="rgb(208,207,34)" rx="2" ry="2" />
<text  x="184.85" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (2 samples, 0.01%)</title><rect x="1105.1" y="757" width="0.1" height="15.0" fill="rgb(209,37,4)" rx="2" ry="2" />
<text  x="1108.06" y="767.5" ></text>
</g>
<g >
<title>Sprite::SetFlashEffect (5 samples, 0.02%)</title><rect x="966.5" y="677" width="0.3" height="15.0" fill="rgb(227,57,53)" rx="2" ry="2" />
<text  x="969.50" y="687.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.01%)</title><rect x="149.9" y="405" width="0.1" height="15.0" fill="rgb(209,116,47)" rx="2" ry="2" />
<text  x="152.91" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (5 samples, 0.02%)</title><rect x="48.8" y="965" width="0.3" height="15.0" fill="rgb(237,223,21)" rx="2" ry="2" />
<text  x="51.77" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (272 samples, 1.34%)</title><rect x="387.8" y="741" width="15.9" height="15.0" fill="rgb(217,53,49)" rx="2" ry="2" />
<text  x="390.81" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_M_lower_bound (159 samples, 0.79%)</title><rect x="164.8" y="581" width="9.3" height="15.0" fill="rgb(235,89,18)" rx="2" ry="2" />
<text  x="167.83" y="591.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (53 samples, 0.26%)</title><rect x="161.7" y="533" width="3.1" height="15.0" fill="rgb(236,15,3)" rx="2" ry="2" />
<text  x="164.74" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::destroy&lt;Bitmap&gt; (20 samples, 0.10%)</title><rect x="201.8" y="469" width="1.2" height="15.0" fill="rgb(213,204,8)" rx="2" ry="2" />
<text  x="204.85" y="479.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (194 samples, 0.96%)</title><rect x="256.9" y="469" width="11.3" height="15.0" fill="rgb(208,121,43)" rx="2" ry="2" />
<text  x="259.94" y="479.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (79 samples, 0.39%)</title><rect x="911.1" y="293" width="4.6" height="15.0" fill="rgb(248,106,28)" rx="2" ry="2" />
<text  x="914.12" y="303.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (2 samples, 0.01%)</title><rect x="274.8" y="965" width="0.1" height="15.0" fill="rgb(205,204,48)" rx="2" ry="2" />
<text  x="277.83" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (5 samples, 0.02%)</title><rect x="987.7" y="709" width="0.3" height="15.0" fill="rgb(252,60,47)" rx="2" ry="2" />
<text  x="990.66" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::size (2 samples, 0.01%)</title><rect x="118.7" y="965" width="0.1" height="15.0" fill="rgb(234,199,47)" rx="2" ry="2" />
<text  x="121.72" y="975.5" ></text>
</g>
<g >
<title>__x64_sys_writev (2 samples, 0.01%)</title><rect x="279.4" y="629" width="0.1" height="15.0" fill="rgb(226,204,53)" rx="2" ry="2" />
<text  x="282.38" y="639.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (68 samples, 0.34%)</title><rect x="203.0" y="837" width="4.0" height="15.0" fill="rgb(241,221,13)" rx="2" ry="2" />
<text  x="206.01" y="847.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipToNextConditional (510 samples, 2.52%)</title><rect x="484.2" y="725" width="29.8" height="15.0" fill="rgb(244,59,12)" rx="2" ry="2" />
<text  x="487.23" y="735.5" >Ga..</text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 2ul, 3ul&gt;::__less (35 samples, 0.17%)</title><rect x="796.5" y="357" width="2.1" height="15.0" fill="rgb(221,59,40)" rx="2" ry="2" />
<text  x="799.51" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_valptr (7 samples, 0.03%)</title><rect x="70.6" y="965" width="0.4" height="15.0" fill="rgb(217,131,28)" rx="2" ry="2" />
<text  x="73.57" y="975.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (354 samples, 1.75%)</title><rect x="213.1" y="965" width="20.6" height="15.0" fill="rgb(209,143,44)" rx="2" ry="2" />
<text  x="216.10" y="975.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (17 samples, 0.08%)</title><rect x="131.0" y="789" width="1.0" height="15.0" fill="rgb(247,15,44)" rx="2" ry="2" />
<text  x="133.96" y="799.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (68 samples, 0.34%)</title><rect x="194.0" y="581" width="4.0" height="15.0" fill="rgb(241,176,23)" rx="2" ry="2" />
<text  x="197.04" y="591.5" ></text>
</g>
<g >
<title>operator== (10 samples, 0.05%)</title><rect x="883.9" y="437" width="0.6" height="15.0" fill="rgb(252,119,5)" rx="2" ry="2" />
<text  x="886.89" y="447.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;int, std::allocator&lt;int&gt;, int&gt; (201 samples, 0.99%)</title><rect x="688.8" y="645" width="11.8" height="15.0" fill="rgb(214,27,16)" rx="2" ry="2" />
<text  x="691.84" y="655.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.01%)</title><rect x="212.7" y="165" width="0.2" height="15.0" fill="rgb(205,178,36)" rx="2" ry="2" />
<text  x="215.75" y="175.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::~function (6 samples, 0.03%)</title><rect x="700.8" y="645" width="0.4" height="15.0" fill="rgb(229,174,45)" rx="2" ry="2" />
<text  x="703.85" y="655.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (68 samples, 0.34%)</title><rect x="194.0" y="533" width="4.0" height="15.0" fill="rgb(252,109,9)" rx="2" ry="2" />
<text  x="197.04" y="543.5" ></text>
</g>
<g >
<title>security_file_permission (2 samples, 0.01%)</title><rect x="22.9" y="885" width="0.1" height="15.0" fill="rgb(205,68,47)" rx="2" ry="2" />
<text  x="25.88" y="895.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (17 samples, 0.08%)</title><rect x="131.0" y="613" width="1.0" height="15.0" fill="rgb(224,29,13)" rx="2" ry="2" />
<text  x="133.96" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_left (3 samples, 0.01%)</title><rect x="670.4" y="629" width="0.1" height="15.0" fill="rgb(246,210,24)" rx="2" ry="2" />
<text  x="673.36" y="639.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (13 samples, 0.06%)</title><rect x="895.8" y="389" width="0.7" height="15.0" fill="rgb(246,112,46)" rx="2" ry="2" />
<text  x="898.79" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_ptr (3 samples, 0.01%)</title><rect x="44.5" y="965" width="0.1" height="15.0" fill="rgb(206,215,30)" rx="2" ry="2" />
<text  x="47.45" y="975.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (15 samples, 0.07%)</title><rect x="782.1" y="389" width="0.9" height="15.0" fill="rgb(223,168,29)" rx="2" ry="2" />
<text  x="785.11" y="399.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned (2 samples, 0.01%)</title><rect x="975.2" y="661" width="0.1" height="15.0" fill="rgb(226,91,15)" rx="2" ry="2" />
<text  x="978.18" y="671.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;*&gt; (3 samples, 0.01%)</title><rect x="715.1" y="629" width="0.2" height="15.0" fill="rgb(247,210,7)" rx="2" ry="2" />
<text  x="718.13" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (72 samples, 0.36%)</title><rect x="555.2" y="709" width="4.2" height="15.0" fill="rgb(214,103,42)" rx="2" ry="2" />
<text  x="558.23" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity@plt (2 samples, 0.01%)</title><rect x="821.8" y="389" width="0.1" height="15.0" fill="rgb(240,212,22)" rx="2" ry="2" />
<text  x="824.81" y="399.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (17 samples, 0.08%)</title><rect x="193.0" y="277" width="1.0" height="15.0" fill="rgb(231,81,20)" rx="2" ry="2" />
<text  x="195.99" y="287.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (10 samples, 0.05%)</title><rect x="232.1" y="549" width="0.6" height="15.0" fill="rgb(250,173,36)" rx="2" ry="2" />
<text  x="235.10" y="559.5" ></text>
</g>
<g >
<title>std::replace&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (232 samples, 1.15%)</title><rect x="646.6" y="661" width="13.5" height="15.0" fill="rgb(229,91,16)" rx="2" ry="2" />
<text  x="649.58" y="671.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (59 samples, 0.29%)</title><rect x="268.7" y="837" width="3.5" height="15.0" fill="rgb(253,92,18)" rx="2" ry="2" />
<text  x="271.71" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (9 samples, 0.04%)</title><rect x="1034.5" y="693" width="0.6" height="15.0" fill="rgb(221,30,16)" rx="2" ry="2" />
<text  x="1037.53" y="703.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (2 samples, 0.01%)</title><rect x="891.6" y="421" width="0.1" height="15.0" fill="rgb(229,220,46)" rx="2" ry="2" />
<text  x="894.59" y="431.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (11 samples, 0.05%)</title><rect x="197.4" y="309" width="0.6" height="15.0" fill="rgb(230,101,30)" rx="2" ry="2" />
<text  x="200.36" y="319.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Transition*, std::default_delete&lt;Transition&gt; &gt;::_M_head (2 samples, 0.01%)</title><rect x="737.2" y="581" width="0.1" height="15.0" fill="rgb(212,135,27)" rx="2" ry="2" />
<text  x="740.17" y="591.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (46 samples, 0.23%)</title><rect x="816.5" y="469" width="2.7" height="15.0" fill="rgb(206,63,44)" rx="2" ry="2" />
<text  x="819.51" y="479.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Game_Picture*, false&gt;::_Head_base&lt;Game_Picture*&amp;&gt; (2 samples, 0.01%)</title><rect x="63.4" y="965" width="0.1" height="15.0" fill="rgb(242,18,22)" rx="2" ry="2" />
<text  x="66.40" y="975.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (40 samples, 0.20%)</title><rect x="142.0" y="549" width="2.4" height="15.0" fill="rgb(225,0,49)" rx="2" ry="2" />
<text  x="145.04" y="559.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (23 samples, 0.11%)</title><rect x="30.2" y="965" width="1.3" height="15.0" fill="rgb(230,188,32)" rx="2" ry="2" />
<text  x="33.17" y="975.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (52 samples, 0.26%)</title><rect x="253.9" y="325" width="3.0" height="15.0" fill="rgb(205,100,4)" rx="2" ry="2" />
<text  x="256.90" y="335.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.03%)</title><rect x="638.6" y="613" width="0.3" height="15.0" fill="rgb(215,223,16)" rx="2" ry="2" />
<text  x="641.59" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (35 samples, 0.17%)</title><rect x="194.7" y="341" width="2.1" height="15.0" fill="rgb(236,187,45)" rx="2" ry="2" />
<text  x="197.74" y="351.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (3 samples, 0.01%)</title><rect x="1169.6" y="693" width="0.2" height="15.0" fill="rgb(239,26,15)" rx="2" ry="2" />
<text  x="1172.60" y="703.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (44 samples, 0.22%)</title><rect x="199.3" y="565" width="2.5" height="15.0" fill="rgb(221,218,15)" rx="2" ry="2" />
<text  x="202.28" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::operator[] (3 samples, 0.01%)</title><rect x="483.1" y="693" width="0.1" height="15.0" fill="rgb(205,51,24)" rx="2" ry="2" />
<text  x="486.06" y="703.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (86 samples, 0.42%)</title><rect x="198.0" y="837" width="5.0" height="15.0" fill="rgb(233,44,52)" rx="2" ry="2" />
<text  x="201.00" y="847.5" ></text>
</g>
<g >
<title>DynamicFormat::code_alpha (3 samples, 0.01%)</title><rect x="26.8" y="965" width="0.2" height="15.0" fill="rgb(250,212,9)" rx="2" ry="2" />
<text  x="29.85" y="975.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (3 samples, 0.01%)</title><rect x="979.0" y="709" width="0.2" height="15.0" fill="rgb(232,43,22)" rx="2" ry="2" />
<text  x="982.03" y="719.5" ></text>
</g>
<g >
<title>remove_wait_queue (2 samples, 0.01%)</title><rect x="17.3" y="901" width="0.1" height="15.0" fill="rgb(227,216,30)" rx="2" ry="2" />
<text  x="20.29" y="911.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (62 samples, 0.31%)</title><rect x="194.4" y="501" width="3.6" height="15.0" fill="rgb(229,100,2)" rx="2" ry="2" />
<text  x="197.39" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (5 samples, 0.02%)</title><rect x="602.3" y="725" width="0.3" height="15.0" fill="rgb(244,24,50)" rx="2" ry="2" />
<text  x="605.33" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (4 samples, 0.02%)</title><rect x="54.8" y="965" width="0.3" height="15.0" fill="rgb(211,27,30)" rx="2" ry="2" />
<text  x="57.83" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (9 samples, 0.04%)</title><rect x="762.3" y="421" width="0.5" height="15.0" fill="rgb(227,142,44)" rx="2" ry="2" />
<text  x="765.29" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (15 samples, 0.07%)</title><rect x="1003.0" y="709" width="0.9" height="15.0" fill="rgb(242,183,48)" rx="2" ry="2" />
<text  x="1006.05" y="719.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (15 samples, 0.07%)</title><rect x="163.7" y="485" width="0.9" height="15.0" fill="rgb(230,186,20)" rx="2" ry="2" />
<text  x="166.72" y="495.5" ></text>
</g>
<g >
<title>XFlush (8 samples, 0.04%)</title><rect x="1182.1" y="805" width="0.5" height="15.0" fill="rgb(230,60,41)" rx="2" ry="2" />
<text  x="1185.13" y="815.5" ></text>
</g>
<g >
<title>pixman_image_get_height (2 samples, 0.01%)</title><rect x="57.6" y="965" width="0.1" height="15.0" fill="rgb(208,86,49)" rx="2" ry="2" />
<text  x="60.57" y="975.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (5 samples, 0.02%)</title><rect x="970.8" y="645" width="0.2" height="15.0" fill="rgb(242,76,22)" rx="2" ry="2" />
<text  x="973.75" y="655.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Transition*, std::default_delete&lt;Transition&gt; &gt; (3 samples, 0.01%)</title><rect x="737.1" y="613" width="0.2" height="15.0" fill="rgb(227,30,41)" rx="2" ry="2" />
<text  x="740.11" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (20 samples, 0.10%)</title><rect x="201.8" y="357" width="1.2" height="15.0" fill="rgb(245,140,13)" rx="2" ry="2" />
<text  x="204.85" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (91 samples, 0.45%)</title><rect x="671.7" y="597" width="5.3" height="15.0" fill="rgb(221,128,20)" rx="2" ry="2" />
<text  x="674.70" y="607.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (109 samples, 0.54%)</title><rect x="146.6" y="837" width="6.4" height="15.0" fill="rgb(230,199,40)" rx="2" ry="2" />
<text  x="149.64" y="847.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (29 samples, 0.14%)</title><rect x="994.1" y="645" width="1.7" height="15.0" fill="rgb(227,205,15)" rx="2" ry="2" />
<text  x="997.13" y="655.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (146 samples, 0.72%)</title><rect x="153.0" y="709" width="8.5" height="15.0" fill="rgb(214,98,31)" rx="2" ry="2" />
<text  x="156.00" y="719.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator() (7 samples, 0.03%)</title><rect x="200.6" y="357" width="0.4" height="15.0" fill="rgb(213,24,52)" rx="2" ry="2" />
<text  x="203.57" y="367.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (5 samples, 0.02%)</title><rect x="1182.3" y="725" width="0.3" height="15.0" fill="rgb(241,115,19)" rx="2" ry="2" />
<text  x="1185.31" y="735.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;BaseUi, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (3 samples, 0.01%)</title><rect x="86.2" y="965" width="0.2" height="15.0" fill="rgb(231,87,15)" rx="2" ry="2" />
<text  x="89.25" y="975.5" ></text>
</g>
<g >
<title>memset (2 samples, 0.01%)</title><rect x="859.1" y="453" width="0.1" height="15.0" fill="rgb(238,228,26)" rx="2" ry="2" />
<text  x="862.12" y="463.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (6 samples, 0.03%)</title><rect x="805.8" y="373" width="0.4" height="15.0" fill="rgb(248,136,2)" rx="2" ry="2" />
<text  x="808.84" y="383.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (11 samples, 0.05%)</title><rect x="104.8" y="965" width="0.7" height="15.0" fill="rgb(243,187,29)" rx="2" ry="2" />
<text  x="107.85" y="975.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (43 samples, 0.21%)</title><rect x="971.6" y="661" width="2.5" height="15.0" fill="rgb(229,101,48)" rx="2" ry="2" />
<text  x="974.57" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_S_value (2 samples, 0.01%)</title><rect x="233.6" y="341" width="0.1" height="15.0" fill="rgb(229,10,43)" rx="2" ry="2" />
<text  x="236.62" y="351.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (38 samples, 0.19%)</title><rect x="820.8" y="421" width="2.2" height="15.0" fill="rgb(232,227,25)" rx="2" ry="2" />
<text  x="823.82" y="431.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (79 samples, 0.39%)</title><rect x="142.0" y="565" width="4.6" height="15.0" fill="rgb(228,187,15)" rx="2" ry="2" />
<text  x="145.04" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (4 samples, 0.02%)</title><rect x="67.3" y="965" width="0.2" height="15.0" fill="rgb(233,45,36)" rx="2" ry="2" />
<text  x="70.30" y="975.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (12 samples, 0.06%)</title><rect x="212.4" y="357" width="0.7" height="15.0" fill="rgb(226,162,1)" rx="2" ry="2" />
<text  x="215.40" y="367.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (117 samples, 0.58%)</title><rect x="187.2" y="853" width="6.8" height="15.0" fill="rgb(233,221,32)" rx="2" ry="2" />
<text  x="190.22" y="863.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (62 samples, 0.31%)</title><rect x="170.5" y="517" width="3.6" height="15.0" fill="rgb(247,164,16)" rx="2" ry="2" />
<text  x="173.49" y="527.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (354 samples, 1.75%)</title><rect x="213.1" y="885" width="20.6" height="15.0" fill="rgb(208,8,45)" rx="2" ry="2" />
<text  x="216.10" y="895.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (36 samples, 0.18%)</title><rect x="207.0" y="565" width="2.1" height="15.0" fill="rgb(235,119,12)" rx="2" ry="2" />
<text  x="209.98" y="575.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (2,908 samples, 14.37%)</title><rect x="753.7" y="565" width="169.5" height="15.0" fill="rgb(252,1,14)" rx="2" ry="2" />
<text  x="756.66" y="575.5" >std::__invoke_impl&lt;vo..</text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (500 samples, 2.47%)</title><rect x="239.1" y="741" width="29.1" height="15.0" fill="rgb(235,136,4)" rx="2" ry="2" />
<text  x="242.10" y="751.5" >Ga..</text>
</g>
<g >
<title>Game_Map::GetDisplayX (2 samples, 0.01%)</title><rect x="32.4" y="965" width="0.1" height="15.0" fill="rgb(228,149,41)" rx="2" ry="2" />
<text  x="35.39" y="975.5" ></text>
</g>
<g >
<title>operator== (10 samples, 0.05%)</title><rect x="1164.1" y="741" width="0.5" height="15.0" fill="rgb(246,0,34)" rx="2" ry="2" />
<text  x="1167.06" y="751.5" ></text>
</g>
<g >
<title>Sprite::BlitScreen (8 samples, 0.04%)</title><rect x="278.4" y="805" width="0.5" height="15.0" fill="rgb(228,205,8)" rx="2" ry="2" />
<text  x="281.39" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (402 samples, 1.99%)</title><rect x="1078.7" y="741" width="23.4" height="15.0" fill="rgb(249,84,1)" rx="2" ry="2" />
<text  x="1081.72" y="751.5" >s..</text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (440 samples, 2.17%)</title><rect x="161.5" y="741" width="25.7" height="15.0" fill="rgb(215,227,30)" rx="2" ry="2" />
<text  x="164.51" y="751.5" >s..</text>
</g>
<g >
<title>do_wp_page (2 samples, 0.01%)</title><rect x="139.8" y="357" width="0.1" height="15.0" fill="rgb(234,12,1)" rx="2" ry="2" />
<text  x="142.76" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_left (13 samples, 0.06%)</title><rect x="780.5" y="405" width="0.8" height="15.0" fill="rgb(215,101,25)" rx="2" ry="2" />
<text  x="783.54" y="415.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (59 samples, 0.29%)</title><rect x="268.7" y="549" width="3.5" height="15.0" fill="rgb(227,123,28)" rx="2" ry="2" />
<text  x="271.71" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="782.6" y="357" width="0.2" height="15.0" fill="rgb(233,209,31)" rx="2" ry="2" />
<text  x="785.58" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (39 samples, 0.19%)</title><rect x="144.4" y="517" width="2.2" height="15.0" fill="rgb(224,78,14)" rx="2" ry="2" />
<text  x="147.37" y="527.5" ></text>
</g>
<g >
<title>std::tuple&lt;Game_Picture*, std::_Placeholder&lt;1&gt; &gt;::tuple (21 samples, 0.10%)</title><rect x="724.2" y="613" width="1.3" height="15.0" fill="rgb(210,50,30)" rx="2" ry="2" />
<text  x="727.23" y="623.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;int, std::allocator&lt;int&gt;, int&gt; (8 samples, 0.04%)</title><rect x="91.9" y="965" width="0.5" height="15.0" fill="rgb(208,215,0)" rx="2" ry="2" />
<text  x="94.90" y="975.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetSubcommandIndex (30 samples, 0.15%)</title><rect x="602.9" y="709" width="1.8" height="15.0" fill="rgb(227,188,33)" rx="2" ry="2" />
<text  x="605.91" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (40 samples, 0.20%)</title><rect x="1040.1" y="693" width="2.3" height="15.0" fill="rgb(214,97,40)" rx="2" ry="2" />
<text  x="1043.07" y="703.5" ></text>
</g>
<g >
<title>Bitmap::find_format (17 samples, 0.08%)</title><rect x="255.9" y="309" width="1.0" height="15.0" fill="rgb(236,186,47)" rx="2" ry="2" />
<text  x="258.95" y="319.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (79 samples, 0.39%)</title><rect x="142.0" y="933" width="4.6" height="15.0" fill="rgb(245,89,33)" rx="2" ry="2" />
<text  x="145.04" y="943.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (7 samples, 0.03%)</title><rect x="250.2" y="309" width="0.4" height="15.0" fill="rgb(230,222,26)" rx="2" ry="2" />
<text  x="253.17" y="319.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::end (5 samples, 0.02%)</title><rect x="777.6" y="453" width="0.3" height="15.0" fill="rgb(211,73,31)" rx="2" ry="2" />
<text  x="780.62" y="463.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (8 samples, 0.04%)</title><rect x="820.1" y="437" width="0.5" height="15.0" fill="rgb(229,75,42)" rx="2" ry="2" />
<text  x="823.12" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (48 samples, 0.24%)</title><rect x="209.6" y="357" width="2.8" height="15.0" fill="rgb(205,172,24)" rx="2" ry="2" />
<text  x="212.60" y="367.5" ></text>
</g>
<g >
<title>std::move&lt;std::tuple&lt;FileRequestResult*&amp;&amp;&gt;&amp;&gt; (2 samples, 0.01%)</title><rect x="752.8" y="565" width="0.1" height="15.0" fill="rgb(212,84,25)" rx="2" ry="2" />
<text  x="755.79" y="575.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (71 samples, 0.35%)</title><rect x="1126.0" y="773" width="4.1" height="15.0" fill="rgb(212,177,2)" rx="2" ry="2" />
<text  x="1128.99" y="783.5" ></text>
</g>
<g >
<title>Game_Picture::SyncCurrentToFinish (19 samples, 0.09%)</title><rect x="1151.3" y="789" width="1.1" height="15.0" fill="rgb(208,152,28)" rx="2" ry="2" />
<text  x="1154.29" y="799.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::~_Head_base (2 samples, 0.01%)</title><rect x="823.9" y="437" width="0.1" height="15.0" fill="rgb(225,198,39)" rx="2" ry="2" />
<text  x="826.85" y="447.5" ></text>
</g>
<g >
<title>Tone::Tone (26 samples, 0.13%)</title><rect x="885.8" y="469" width="1.5" height="15.0" fill="rgb(239,160,6)" rx="2" ry="2" />
<text  x="888.82" y="479.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::~__weak_ptr (3 samples, 0.01%)</title><rect x="701.2" y="629" width="0.2" height="15.0" fill="rgb(252,81,48)" rx="2" ry="2" />
<text  x="704.20" y="639.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (15 samples, 0.07%)</title><rect x="633.0" y="709" width="0.9" height="15.0" fill="rgb(227,58,14)" rx="2" ry="2" />
<text  x="635.99" y="719.5" ></text>
</g>
<g >
<title>Game_Interpreter::OnFinishStackFrame (4 samples, 0.02%)</title><rect x="421.5" y="773" width="0.2" height="15.0" fill="rgb(245,103,0)" rx="2" ry="2" />
<text  x="424.50" y="783.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (354 samples, 1.75%)</title><rect x="213.1" y="741" width="20.6" height="15.0" fill="rgb(243,6,51)" rx="2" ry="2" />
<text  x="216.10" y="751.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::end (2 samples, 0.01%)</title><rect x="201.0" y="357" width="0.1" height="15.0" fill="rgb(230,58,40)" rx="2" ry="2" />
<text  x="203.97" y="367.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (2 samples, 0.01%)</title><rect x="934.8" y="437" width="0.2" height="15.0" fill="rgb(210,222,8)" rx="2" ry="2" />
<text  x="937.84" y="447.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;*&gt; (4 samples, 0.02%)</title><rect x="734.0" y="613" width="0.2" height="15.0" fill="rgb(207,84,19)" rx="2" ry="2" />
<text  x="736.96" y="623.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (3 samples, 0.01%)</title><rect x="138.2" y="309" width="0.2" height="15.0" fill="rgb(231,199,27)" rx="2" ry="2" />
<text  x="141.25" y="319.5" ></text>
</g>
<g >
<title>operator delete (10 samples, 0.05%)</title><rect x="232.1" y="517" width="0.6" height="15.0" fill="rgb(230,116,6)" rx="2" ry="2" />
<text  x="235.10" y="527.5" ></text>
</g>
<g >
<title>finish_task_switch (16 samples, 0.08%)</title><rect x="1181.1" y="661" width="0.9" height="15.0" fill="rgb(238,229,25)" rx="2" ry="2" />
<text  x="1184.08" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (24 samples, 0.12%)</title><rect x="46.7" y="965" width="1.4" height="15.0" fill="rgb(250,100,46)" rx="2" ry="2" />
<text  x="49.73" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (2 samples, 0.01%)</title><rect x="1002.6" y="693" width="0.2" height="15.0" fill="rgb(220,16,35)" rx="2" ry="2" />
<text  x="1005.64" y="703.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::get (7 samples, 0.03%)</title><rect x="1168.1" y="757" width="0.4" height="15.0" fill="rgb(246,76,30)" rx="2" ry="2" />
<text  x="1171.14" y="767.5" ></text>
</g>
<g >
<title>poll_freewait (2 samples, 0.01%)</title><rect x="17.3" y="917" width="0.1" height="15.0" fill="rgb(227,140,36)" rx="2" ry="2" />
<text  x="20.29" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt;::~new_allocator (3 samples, 0.01%)</title><rect x="54.6" y="965" width="0.2" height="15.0" fill="rgb(227,69,22)" rx="2" ry="2" />
<text  x="57.60" y="975.5" ></text>
</g>
<g >
<title>Graphics::IsTransitionErased (37 samples, 0.18%)</title><rect x="735.4" y="677" width="2.1" height="15.0" fill="rgb(235,53,19)" rx="2" ry="2" />
<text  x="738.36" y="687.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.01%)</title><rect x="138.3" y="293" width="0.1" height="15.0" fill="rgb(218,91,33)" rx="2" ry="2" />
<text  x="141.31" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::destroy&lt;Bitmap&gt; (63 samples, 0.31%)</title><rect x="203.3" y="453" width="3.7" height="15.0" fill="rgb(222,50,18)" rx="2" ry="2" />
<text  x="206.31" y="463.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (20 samples, 0.10%)</title><rect x="201.8" y="309" width="1.2" height="15.0" fill="rgb(241,116,34)" rx="2" ry="2" />
<text  x="204.85" y="319.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (100 samples, 0.49%)</title><rect x="717.5" y="613" width="5.9" height="15.0" fill="rgb(232,196,8)" rx="2" ry="2" />
<text  x="720.52" y="623.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator@plt (2 samples, 0.01%)</title><rect x="787.9" y="469" width="0.2" height="15.0" fill="rgb(223,21,7)" rx="2" ry="2" />
<text  x="790.94" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (5 samples, 0.02%)</title><rect x="761.2" y="437" width="0.3" height="15.0" fill="rgb(218,128,20)" rx="2" ry="2" />
<text  x="764.18" y="447.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (2,964 samples, 14.64%)</title><rect x="750.8" y="597" width="172.8" height="15.0" fill="rgb(224,13,28)" rx="2" ry="2" />
<text  x="753.81" y="607.5" >std::_Bind&lt;std::_Mem_f..</text>
</g>
<g >
<title>Game_Interpreter::Update (354 samples, 1.75%)</title><rect x="213.1" y="901" width="20.6" height="15.0" fill="rgb(225,78,28)" rx="2" ry="2" />
<text  x="216.10" y="911.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="986.1" y="597" width="0.3" height="15.0" fill="rgb(246,80,13)" rx="2" ry="2" />
<text  x="989.14" y="607.5" ></text>
</g>
<g >
<title>__interceptor_free (12 samples, 0.06%)</title><rect x="212.4" y="405" width="0.7" height="15.0" fill="rgb(231,35,51)" rx="2" ry="2" />
<text  x="215.40" y="415.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (5 samples, 0.02%)</title><rect x="203.0" y="533" width="0.3" height="15.0" fill="rgb(223,98,54)" rx="2" ry="2" />
<text  x="206.01" y="543.5" ></text>
</g>
<g >
<title>zap_page_range (4 samples, 0.02%)</title><rect x="206.6" y="213" width="0.3" height="15.0" fill="rgb(206,19,27)" rx="2" ry="2" />
<text  x="209.63" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_left (3 samples, 0.01%)</title><rect x="68.7" y="965" width="0.2" height="15.0" fill="rgb(225,124,34)" rx="2" ry="2" />
<text  x="71.70" y="975.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="232.4" y="501" width="0.2" height="15.0" fill="rgb(235,121,12)" rx="2" ry="2" />
<text  x="235.39" y="511.5" ></text>
</g>
<g >
<title>finish_task_switch (7 samples, 0.03%)</title><rect x="1055.0" y="661" width="0.4" height="15.0" fill="rgb(231,7,45)" rx="2" ry="2" />
<text  x="1057.99" y="671.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (6 samples, 0.03%)</title><rect x="101.2" y="965" width="0.3" height="15.0" fill="rgb(215,38,31)" rx="2" ry="2" />
<text  x="104.17" y="975.5" ></text>
</g>
<g >
<title>__fget_light (3 samples, 0.01%)</title><rect x="16.9" y="917" width="0.2" height="15.0" fill="rgb(218,220,16)" rx="2" ry="2" />
<text  x="19.88" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (12 samples, 0.06%)</title><rect x="902.3" y="405" width="0.7" height="15.0" fill="rgb(232,69,48)" rx="2" ry="2" />
<text  x="905.32" y="415.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (117 samples, 0.58%)</title><rect x="187.2" y="629" width="6.8" height="15.0" fill="rgb(216,82,15)" rx="2" ry="2" />
<text  x="190.22" y="639.5" ></text>
</g>
<g >
<title>std::forward&lt;FileRequestResult*&gt; (2 samples, 0.01%)</title><rect x="923.0" y="533" width="0.1" height="15.0" fill="rgb(225,42,4)" rx="2" ry="2" />
<text  x="925.95" y="543.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (362 samples, 1.79%)</title><rect x="1152.4" y="789" width="21.1" height="15.0" fill="rgb(218,28,32)" rx="2" ry="2" />
<text  x="1155.40" y="799.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (16 samples, 0.08%)</title><rect x="174.1" y="549" width="0.9" height="15.0" fill="rgb(241,86,38)" rx="2" ry="2" />
<text  x="177.10" y="559.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (5 samples, 0.02%)</title><rect x="156.1" y="549" width="0.3" height="15.0" fill="rgb(254,171,37)" rx="2" ry="2" />
<text  x="159.09" y="559.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::_Mem_fn_base (4 samples, 0.02%)</title><rect x="734.8" y="645" width="0.2" height="15.0" fill="rgb(244,8,38)" rx="2" ry="2" />
<text  x="737.78" y="655.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="161.6" y="469" width="0.1" height="15.0" fill="rgb(241,26,11)" rx="2" ry="2" />
<text  x="164.62" y="479.5" ></text>
</g>
<g >
<title>std::_Bit_iterator::operator* (6 samples, 0.03%)</title><rect x="284.0" y="741" width="0.3" height="15.0" fill="rgb(228,66,9)" rx="2" ry="2" />
<text  x="286.98" y="751.5" ></text>
</g>
<g >
<title>Player::Update (68 samples, 0.34%)</title><rect x="194.0" y="917" width="4.0" height="15.0" fill="rgb(224,25,44)" rx="2" ry="2" />
<text  x="197.04" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (2 samples, 0.01%)</title><rect x="628.9" y="709" width="0.1" height="15.0" fill="rgb(238,4,9)" rx="2" ry="2" />
<text  x="631.91" y="719.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (4 samples, 0.02%)</title><rect x="922.6" y="469" width="0.2" height="15.0" fill="rgb(253,3,12)" rx="2" ry="2" />
<text  x="925.60" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (12 samples, 0.06%)</title><rect x="110.6" y="965" width="0.7" height="15.0" fill="rgb(210,82,51)" rx="2" ry="2" />
<text  x="113.62" y="975.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::destroy&lt;Bitmap&gt; (32 samples, 0.16%)</title><rect x="270.3" y="405" width="1.9" height="15.0" fill="rgb(235,93,48)" rx="2" ry="2" />
<text  x="273.29" y="415.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&amp;&gt; (2 samples, 0.01%)</title><rect x="871.1" y="405" width="0.1" height="15.0" fill="rgb(207,203,3)" rx="2" ry="2" />
<text  x="874.13" y="415.5" ></text>
</g>
<g >
<title>__strlen_avx2 (3 samples, 0.01%)</title><rect x="645.9" y="613" width="0.2" height="15.0" fill="rgb(230,99,2)" rx="2" ry="2" />
<text  x="648.94" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="198.3" y="501" width="0.1" height="15.0" fill="rgb(218,149,27)" rx="2" ry="2" />
<text  x="201.29" y="511.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (1,702 samples, 8.41%)</title><rect x="321.6" y="773" width="99.2" height="15.0" fill="rgb(236,104,13)" rx="2" ry="2" />
<text  x="324.58" y="783.5" >Game_Interpr..</text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (6 samples, 0.03%)</title><rect x="368.5" y="757" width="0.3" height="15.0" fill="rgb(245,10,15)" rx="2" ry="2" />
<text  x="371.45" y="767.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (79 samples, 0.39%)</title><rect x="142.0" y="629" width="4.6" height="15.0" fill="rgb(220,155,9)" rx="2" ry="2" />
<text  x="145.04" y="639.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (56 samples, 0.28%)</title><rect x="39.4" y="965" width="3.3" height="15.0" fill="rgb(223,208,32)" rx="2" ry="2" />
<text  x="42.44" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::destroy&lt;Bitmap&gt; (63 samples, 0.31%)</title><rect x="203.3" y="437" width="3.7" height="15.0" fill="rgb(207,40,50)" rx="2" ry="2" />
<text  x="206.31" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (2 samples, 0.01%)</title><rect x="471.2" y="709" width="0.1" height="15.0" fill="rgb(229,3,35)" rx="2" ry="2" />
<text  x="474.23" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (77 samples, 0.38%)</title><rect x="466.7" y="709" width="4.5" height="15.0" fill="rgb(227,101,6)" rx="2" ry="2" />
<text  x="469.74" y="719.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (32 samples, 0.16%)</title><rect x="270.3" y="341" width="1.9" height="15.0" fill="rgb(236,128,54)" rx="2" ry="2" />
<text  x="273.29" y="351.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (5 samples, 0.02%)</title><rect x="890.7" y="437" width="0.3" height="15.0" fill="rgb(212,46,11)" rx="2" ry="2" />
<text  x="893.72" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::end (8 samples, 0.04%)</title><rect x="677.6" y="645" width="0.5" height="15.0" fill="rgb(244,43,16)" rx="2" ry="2" />
<text  x="680.59" y="655.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (2 samples, 0.01%)</title><rect x="286.5" y="789" width="0.1" height="15.0" fill="rgb(253,33,14)" rx="2" ry="2" />
<text  x="289.49" y="799.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (2 samples, 0.01%)</title><rect x="82.5" y="965" width="0.1" height="15.0" fill="rgb(246,49,16)" rx="2" ry="2" />
<text  x="85.46" y="975.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::operator bool (2 samples, 0.01%)</title><rect x="1144.6" y="805" width="0.2" height="15.0" fill="rgb(248,10,41)" rx="2" ry="2" />
<text  x="1147.65" y="815.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (100 samples, 0.49%)</title><rect x="188.1" y="293" width="5.9" height="15.0" fill="rgb(208,33,54)" rx="2" ry="2" />
<text  x="191.15" y="303.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (146 samples, 0.72%)</title><rect x="153.0" y="741" width="8.5" height="15.0" fill="rgb(254,110,33)" rx="2" ry="2" />
<text  x="156.00" y="751.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (5 samples, 0.02%)</title><rect x="942.6" y="645" width="0.3" height="15.0" fill="rgb(223,28,47)" rx="2" ry="2" />
<text  x="945.60" y="655.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (136 samples, 0.67%)</title><rect x="132.0" y="469" width="7.9" height="15.0" fill="rgb(216,200,51)" rx="2" ry="2" />
<text  x="134.95" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.09%)</title><rect x="1181.0" y="773" width="1.1" height="15.0" fill="rgb(220,102,37)" rx="2" ry="2" />
<text  x="1184.02" y="783.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate (91 samples, 0.45%)</title><rect x="181.9" y="501" width="5.3" height="15.0" fill="rgb(223,36,38)" rx="2" ry="2" />
<text  x="184.85" y="511.5" ></text>
</g>
<g >
<title>common_file_perm (2 samples, 0.01%)</title><rect x="22.9" y="853" width="0.1" height="15.0" fill="rgb(242,178,25)" rx="2" ry="2" />
<text  x="25.88" y="863.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (440 samples, 2.17%)</title><rect x="161.5" y="805" width="25.7" height="15.0" fill="rgb(229,7,19)" rx="2" ry="2" />
<text  x="164.51" y="815.5" >F..</text>
</g>
<g >
<title>Game_Picture::Show (146 samples, 0.72%)</title><rect x="153.0" y="853" width="8.5" height="15.0" fill="rgb(222,130,5)" rx="2" ry="2" />
<text  x="156.00" y="863.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (17 samples, 0.08%)</title><rect x="131.0" y="965" width="1.0" height="15.0" fill="rgb(209,86,20)" rx="2" ry="2" />
<text  x="133.96" y="975.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingBackgroundExecution (2 samples, 0.01%)</title><rect x="28.5" y="965" width="0.2" height="15.0" fill="rgb(212,198,17)" rx="2" ry="2" />
<text  x="31.54" y="975.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (39 samples, 0.19%)</title><rect x="144.4" y="437" width="2.2" height="15.0" fill="rgb(218,162,37)" rx="2" ry="2" />
<text  x="147.37" y="447.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (5 samples, 0.02%)</title><rect x="1182.3" y="757" width="0.3" height="15.0" fill="rgb(219,79,41)" rx="2" ry="2" />
<text  x="1185.31" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_addr (8 samples, 0.04%)</title><rect x="669.6" y="565" width="0.5" height="15.0" fill="rgb(240,221,24)" rx="2" ry="2" />
<text  x="672.60" y="575.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (117 samples, 0.58%)</title><rect x="175.0" y="581" width="6.9" height="15.0" fill="rgb(245,225,15)" rx="2" ry="2" />
<text  x="178.03" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (14 samples, 0.07%)</title><rect x="891.2" y="469" width="0.9" height="15.0" fill="rgb(215,114,35)" rx="2" ry="2" />
<text  x="894.24" y="479.5" ></text>
</g>
<g >
<title>DynamicFormat::code_alpha (9 samples, 0.04%)</title><rect x="256.3" y="293" width="0.5" height="15.0" fill="rgb(240,178,51)" rx="2" ry="2" />
<text  x="259.29" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator&lt; &lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="55.1" y="965" width="0.1" height="15.0" fill="rgb(211,78,34)" rx="2" ry="2" />
<text  x="58.12" y="975.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::operator[] (57 samples, 0.28%)</title><rect x="209.1" y="389" width="3.3" height="15.0" fill="rgb(216,183,40)" rx="2" ry="2" />
<text  x="212.08" y="399.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (131 samples, 0.65%)</title><rect x="795.6" y="373" width="7.6" height="15.0" fill="rgb(224,3,29)" rx="2" ry="2" />
<text  x="798.58" y="383.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (79 samples, 0.39%)</title><rect x="142.0" y="949" width="4.6" height="15.0" fill="rgb(225,16,12)" rx="2" ry="2" />
<text  x="145.04" y="959.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::~function (184 samples, 0.91%)</title><rect x="926.0" y="533" width="10.8" height="15.0" fill="rgb(216,204,30)" rx="2" ry="2" />
<text  x="929.04" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (2 samples, 0.01%)</title><rect x="287.1" y="741" width="0.1" height="15.0" fill="rgb(242,84,47)" rx="2" ry="2" />
<text  x="290.13" y="751.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (12 samples, 0.06%)</title><rect x="212.4" y="581" width="0.7" height="15.0" fill="rgb(241,62,25)" rx="2" ry="2" />
<text  x="215.40" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (11 samples, 0.05%)</title><rect x="678.2" y="613" width="0.7" height="15.0" fill="rgb(244,208,47)" rx="2" ry="2" />
<text  x="681.23" y="623.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (12 samples, 0.06%)</title><rect x="212.4" y="565" width="0.7" height="15.0" fill="rgb(230,33,34)" rx="2" ry="2" />
<text  x="215.40" y="575.5" ></text>
</g>
<g >
<title>Bitmap::Init (151 samples, 0.75%)</title><rect x="132.0" y="533" width="8.8" height="15.0" fill="rgb(210,18,34)" rx="2" ry="2" />
<text  x="134.95" y="543.5" ></text>
</g>
<g >
<title>Player::IsRPG2k3 (2 samples, 0.01%)</title><rect x="36.9" y="965" width="0.1" height="15.0" fill="rgb(240,202,14)" rx="2" ry="2" />
<text  x="39.93" y="975.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (86 samples, 0.42%)</title><rect x="198.0" y="789" width="5.0" height="15.0" fill="rgb(246,50,49)" rx="2" ry="2" />
<text  x="201.00" y="799.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator++ (2 samples, 0.01%)</title><rect x="761.1" y="437" width="0.1" height="15.0" fill="rgb(235,30,13)" rx="2" ry="2" />
<text  x="764.07" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Impl::~_Impl (9 samples, 0.04%)</title><rect x="904.8" y="373" width="0.5" height="15.0" fill="rgb(227,95,52)" rx="2" ry="2" />
<text  x="907.82" y="383.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (2,983 samples, 14.74%)</title><rect x="750.4" y="613" width="173.9" height="15.0" fill="rgb(238,124,24)" rx="2" ry="2" />
<text  x="753.40" y="623.5" >std::_Bind&lt;std::_Mem_f..</text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (2 samples, 0.01%)</title><rect x="156.4" y="581" width="0.1" height="15.0" fill="rgb(238,191,7)" rx="2" ry="2" />
<text  x="159.38" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::get (11 samples, 0.05%)</title><rect x="736.6" y="645" width="0.7" height="15.0" fill="rgb(234,197,30)" rx="2" ry="2" />
<text  x="739.64" y="655.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (7 samples, 0.03%)</title><rect x="899.5" y="469" width="0.4" height="15.0" fill="rgb(226,95,17)" rx="2" ry="2" />
<text  x="902.46" y="479.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::get (4 samples, 0.02%)</title><rect x="1167.9" y="741" width="0.2" height="15.0" fill="rgb(245,174,7)" rx="2" ry="2" />
<text  x="1170.91" y="751.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (109 samples, 0.54%)</title><rect x="146.6" y="581" width="6.4" height="15.0" fill="rgb(242,120,19)" rx="2" ry="2" />
<text  x="149.64" y="591.5" ></text>
</g>
<g >
<title>std::swap&lt;void (*)(std::_Any_data const&amp;, FileRequestResult*&amp;&amp;)&gt; (13 samples, 0.06%)</title><rect x="705.3" y="549" width="0.7" height="15.0" fill="rgb(252,82,27)" rx="2" ry="2" />
<text  x="708.28" y="559.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (7 samples, 0.03%)</title><rect x="1179.6" y="725" width="0.4" height="15.0" fill="rgb(245,142,48)" rx="2" ry="2" />
<text  x="1182.57" y="735.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (17 samples, 0.08%)</title><rect x="131.0" y="933" width="1.0" height="15.0" fill="rgb(222,129,14)" rx="2" ry="2" />
<text  x="133.96" y="943.5" ></text>
</g>
<g >
<title>std::forward&lt;FileRequestResult*&gt; (6 samples, 0.03%)</title><rect x="94.7" y="965" width="0.4" height="15.0" fill="rgb(252,157,16)" rx="2" ry="2" />
<text  x="97.70" y="975.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (283 samples, 1.40%)</title><rect x="957.9" y="709" width="16.5" height="15.0" fill="rgb(241,160,17)" rx="2" ry="2" />
<text  x="960.93" y="719.5" ></text>
</g>
<g >
<title>__tls_get_addr (5 samples, 0.02%)</title><rect x="857.3" y="405" width="0.2" height="15.0" fill="rgb(233,73,5)" rx="2" ry="2" />
<text  x="860.25" y="415.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (2 samples, 0.01%)</title><rect x="24.7" y="965" width="0.2" height="15.0" fill="rgb(233,157,22)" rx="2" ry="2" />
<text  x="27.75" y="975.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (91 samples, 0.45%)</title><rect x="181.9" y="597" width="5.3" height="15.0" fill="rgb(215,54,35)" rx="2" ry="2" />
<text  x="184.85" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (56 samples, 0.28%)</title><rect x="971.2" y="677" width="3.2" height="15.0" fill="rgb(207,127,9)" rx="2" ry="2" />
<text  x="974.16" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (32 samples, 0.16%)</title><rect x="988.8" y="693" width="1.8" height="15.0" fill="rgb(244,110,37)" rx="2" ry="2" />
<text  x="991.77" y="703.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;Input::UiSource::Update()::{lambda(int)#1}&gt; &gt; (6 samples, 0.03%)</title><rect x="279.5" y="789" width="0.3" height="15.0" fill="rgb(249,153,25)" rx="2" ry="2" />
<text  x="282.50" y="799.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (100 samples, 0.49%)</title><rect x="188.1" y="373" width="5.9" height="15.0" fill="rgb(237,199,25)" rx="2" ry="2" />
<text  x="191.15" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::deallocate (6 samples, 0.03%)</title><rect x="906.2" y="357" width="0.3" height="15.0" fill="rgb(232,77,16)" rx="2" ry="2" />
<text  x="909.16" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (44 samples, 0.22%)</title><rect x="199.3" y="437" width="2.5" height="15.0" fill="rgb(209,43,13)" rx="2" ry="2" />
<text  x="202.28" y="447.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_manager (4 samples, 0.02%)</title><rect x="61.0" y="965" width="0.2" height="15.0" fill="rgb(229,126,33)" rx="2" ry="2" />
<text  x="64.01" y="975.5" ></text>
</g>
<g >
<title>Bitmap::Create (17 samples, 0.08%)</title><rect x="131.0" y="629" width="1.0" height="15.0" fill="rgb(211,22,40)" rx="2" ry="2" />
<text  x="133.96" y="639.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (11 samples, 0.05%)</title><rect x="678.2" y="629" width="0.7" height="15.0" fill="rgb(234,100,19)" rx="2" ry="2" />
<text  x="681.23" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_valptr (9 samples, 0.04%)</title><rect x="779.8" y="373" width="0.5" height="15.0" fill="rgb(253,57,32)" rx="2" ry="2" />
<text  x="782.78" y="383.5" ></text>
</g>
<g >
<title>operator!= (5 samples, 0.02%)</title><rect x="966.5" y="661" width="0.3" height="15.0" fill="rgb(235,95,28)" rx="2" ry="2" />
<text  x="969.50" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt;::operator()&lt;int const*&gt; (4 samples, 0.02%)</title><rect x="50.9" y="965" width="0.3" height="15.0" fill="rgb(248,170,17)" rx="2" ry="2" />
<text  x="53.92" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (3 samples, 0.01%)</title><rect x="467.7" y="693" width="0.2" height="15.0" fill="rgb(233,45,7)" rx="2" ry="2" />
<text  x="470.73" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator* (28 samples, 0.14%)</title><rect x="769.5" y="421" width="1.7" height="15.0" fill="rgb(213,48,16)" rx="2" ry="2" />
<text  x="772.52" y="431.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (52 samples, 0.26%)</title><rect x="253.9" y="437" width="3.0" height="15.0" fill="rgb(219,49,50)" rx="2" ry="2" />
<text  x="256.90" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (16 samples, 0.08%)</title><rect x="187.2" y="517" width="0.9" height="15.0" fill="rgb(242,211,31)" rx="2" ry="2" />
<text  x="190.22" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (18 samples, 0.09%)</title><rect x="286.8" y="773" width="1.0" height="15.0" fill="rgb(238,96,44)" rx="2" ry="2" />
<text  x="289.78" y="783.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (105 samples, 0.52%)</title><rect x="207.0" y="885" width="6.1" height="15.0" fill="rgb(237,132,39)" rx="2" ry="2" />
<text  x="209.98" y="895.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (354 samples, 1.75%)</title><rect x="213.1" y="629" width="20.6" height="15.0" fill="rgb(221,64,30)" rx="2" ry="2" />
<text  x="216.10" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::begin (15 samples, 0.07%)</title><rect x="284.8" y="741" width="0.9" height="15.0" fill="rgb(205,43,15)" rx="2" ry="2" />
<text  x="287.80" y="751.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (79 samples, 0.39%)</title><rect x="142.0" y="581" width="4.6" height="15.0" fill="rgb(247,117,48)" rx="2" ry="2" />
<text  x="145.04" y="591.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (105 samples, 0.52%)</title><rect x="207.0" y="645" width="6.1" height="15.0" fill="rgb(223,153,42)" rx="2" ry="2" />
<text  x="209.98" y="655.5" ></text>
</g>
<g >
<title>flush_tlb_func_common.constprop.9 (3 samples, 0.01%)</title><rect x="206.6" y="133" width="0.2" height="15.0" fill="rgb(248,40,8)" rx="2" ry="2" />
<text  x="209.63" y="143.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (27 samples, 0.13%)</title><rect x="935.0" y="437" width="1.5" height="15.0" fill="rgb(252,73,20)" rx="2" ry="2" />
<text  x="937.96" y="447.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (32 samples, 0.16%)</title><rect x="270.3" y="309" width="1.9" height="15.0" fill="rgb(214,108,44)" rx="2" ry="2" />
<text  x="273.29" y="319.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (86 samples, 0.42%)</title><rect x="198.0" y="901" width="5.0" height="15.0" fill="rgb(233,203,30)" rx="2" ry="2" />
<text  x="201.00" y="911.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (2 samples, 0.01%)</title><rect x="1179.6" y="517" width="0.1" height="15.0" fill="rgb(219,175,19)" rx="2" ry="2" />
<text  x="1182.62" y="527.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (2 samples, 0.01%)</title><rect x="421.6" y="757" width="0.1" height="15.0" fill="rgb(236,98,27)" rx="2" ry="2" />
<text  x="424.62" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (3 samples, 0.01%)</title><rect x="983.4" y="709" width="0.2" height="15.0" fill="rgb(241,205,18)" rx="2" ry="2" />
<text  x="986.40" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (12 samples, 0.06%)</title><rect x="603.3" y="677" width="0.7" height="15.0" fill="rgb(236,133,44)" rx="2" ry="2" />
<text  x="606.26" y="687.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::~_Sp_counted_base (3 samples, 0.01%)</title><rect x="904.6" y="373" width="0.2" height="15.0" fill="rgb(209,12,7)" rx="2" ry="2" />
<text  x="907.65" y="383.5" ></text>
</g>
<g >
<title>Sprite::SetAngle (2 samples, 0.01%)</title><rect x="1163.5" y="773" width="0.1" height="15.0" fill="rgb(231,203,27)" rx="2" ry="2" />
<text  x="1166.48" y="783.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (86 samples, 0.42%)</title><rect x="198.0" y="645" width="5.0" height="15.0" fill="rgb(228,155,28)" rx="2" ry="2" />
<text  x="201.00" y="655.5" ></text>
</g>
<g >
<title>Sprite::SetOpacity (2 samples, 0.01%)</title><rect x="883.5" y="469" width="0.2" height="15.0" fill="rgb(214,4,38)" rx="2" ry="2" />
<text  x="886.55" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::destroy&lt;Bitmap&gt; (32 samples, 0.16%)</title><rect x="270.3" y="389" width="1.9" height="15.0" fill="rgb(209,154,47)" rx="2" ry="2" />
<text  x="273.29" y="399.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (15 samples, 0.07%)</title><rect x="263.8" y="277" width="0.8" height="15.0" fill="rgb(220,68,13)" rx="2" ry="2" />
<text  x="266.76" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (5 samples, 0.02%)</title><rect x="1056.6" y="741" width="0.3" height="15.0" fill="rgb(239,53,54)" rx="2" ry="2" />
<text  x="1059.56" y="751.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (17 samples, 0.08%)</title><rect x="131.0" y="869" width="1.0" height="15.0" fill="rgb(216,140,48)" rx="2" ry="2" />
<text  x="133.96" y="879.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (109 samples, 0.54%)</title><rect x="146.6" y="869" width="6.4" height="15.0" fill="rgb(220,47,0)" rx="2" ry="2" />
<text  x="149.64" y="879.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.04%)</title><rect x="267.2" y="261" width="0.5" height="15.0" fill="rgb(236,152,46)" rx="2" ry="2" />
<text  x="270.20" y="271.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (354 samples, 1.75%)</title><rect x="213.1" y="709" width="20.6" height="15.0" fill="rgb(234,95,32)" rx="2" ry="2" />
<text  x="216.10" y="719.5" ></text>
</g>
<g >
<title>memcmp (2 samples, 0.01%)</title><rect x="802.9" y="325" width="0.1" height="15.0" fill="rgb(250,205,33)" rx="2" ry="2" />
<text  x="805.92" y="335.5" ></text>
</g>
<g >
<title>Bitmap::Create (44 samples, 0.22%)</title><rect x="199.3" y="549" width="2.5" height="15.0" fill="rgb(253,5,7)" rx="2" ry="2" />
<text  x="202.28" y="559.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (2 samples, 0.01%)</title><rect x="1182.4" y="565" width="0.1" height="15.0" fill="rgb(225,112,54)" rx="2" ry="2" />
<text  x="1185.42" y="575.5" ></text>
</g>
<g >
<title>generic_file_read_iter (4 samples, 0.02%)</title><rect x="22.3" y="853" width="0.2" height="15.0" fill="rgb(247,17,27)" rx="2" ry="2" />
<text  x="25.30" y="863.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (7 samples, 0.03%)</title><rect x="633.5" y="693" width="0.4" height="15.0" fill="rgb(237,11,44)" rx="2" ry="2" />
<text  x="636.46" y="703.5" ></text>
</g>
<g >
<title>update_blocked_averages (3 samples, 0.01%)</title><rect x="21.5" y="821" width="0.2" height="15.0" fill="rgb(244,140,45)" rx="2" ry="2" />
<text  x="24.54" y="831.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (13 samples, 0.06%)</title><rect x="732.9" y="549" width="0.7" height="15.0" fill="rgb(228,112,30)" rx="2" ry="2" />
<text  x="735.85" y="559.5" ></text>
</g>
<g >
<title>Scene::MainFunction (59 samples, 0.29%)</title><rect x="268.7" y="917" width="3.5" height="15.0" fill="rgb(207,27,42)" rx="2" ry="2" />
<text  x="271.71" y="927.5" ></text>
</g>
<g >
<title>__strlen_avx2 (5 samples, 0.02%)</title><rect x="203.0" y="485" width="0.3" height="15.0" fill="rgb(252,217,3)" rx="2" ry="2" />
<text  x="206.01" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="239.1" y="517" width="0.1" height="15.0" fill="rgb(238,183,34)" rx="2" ry="2" />
<text  x="242.10" y="527.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Sprite*, false&gt;::_M_head (5 samples, 0.02%)</title><rect x="973.8" y="597" width="0.3" height="15.0" fill="rgb(243,205,23)" rx="2" ry="2" />
<text  x="976.79" y="607.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (46 samples, 0.23%)</title><rect x="626.2" y="709" width="2.7" height="15.0" fill="rgb(209,162,45)" rx="2" ry="2" />
<text  x="629.23" y="719.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (4 samples, 0.02%)</title><rect x="279.1" y="773" width="0.2" height="15.0" fill="rgb(244,0,18)" rx="2" ry="2" />
<text  x="282.09" y="783.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::get (6 samples, 0.03%)</title><rect x="969.1" y="661" width="0.3" height="15.0" fill="rgb(212,71,39)" rx="2" ry="2" />
<text  x="972.06" y="671.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (181 samples, 0.89%)</title><rect x="860.9" y="437" width="10.6" height="15.0" fill="rgb(227,49,48)" rx="2" ry="2" />
<text  x="863.93" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (3 samples, 0.01%)</title><rect x="1002.9" y="693" width="0.1" height="15.0" fill="rgb(227,79,47)" rx="2" ry="2" />
<text  x="1005.87" y="703.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_M_head (14 samples, 0.07%)</title><rect x="805.0" y="325" width="0.8" height="15.0" fill="rgb(239,193,46)" rx="2" ry="2" />
<text  x="808.02" y="335.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (498 samples, 2.46%)</title><rect x="239.2" y="645" width="29.0" height="15.0" fill="rgb(251,4,11)" rx="2" ry="2" />
<text  x="242.21" y="655.5" >st..</text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (10 samples, 0.05%)</title><rect x="969.4" y="693" width="0.6" height="15.0" fill="rgb(214,86,14)" rx="2" ry="2" />
<text  x="972.41" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.05%)</title><rect x="136.5" y="405" width="0.6" height="15.0" fill="rgb(210,17,40)" rx="2" ry="2" />
<text  x="139.50" y="415.5" ></text>
</g>
<g >
<title>std::forward&lt;FileRequestResult*&amp;&amp;&gt; (2 samples, 0.01%)</title><rect x="752.4" y="549" width="0.1" height="15.0" fill="rgb(220,78,34)" rx="2" ry="2" />
<text  x="755.38" y="559.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (8 samples, 0.04%)</title><rect x="968.9" y="693" width="0.5" height="15.0" fill="rgb(221,181,32)" rx="2" ry="2" />
<text  x="971.95" y="703.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (3 samples, 0.01%)</title><rect x="987.7" y="677" width="0.1" height="15.0" fill="rgb(223,112,23)" rx="2" ry="2" />
<text  x="990.66" y="687.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator() (2 samples, 0.01%)</title><rect x="677.4" y="629" width="0.1" height="15.0" fill="rgb(253,174,19)" rx="2" ry="2" />
<text  x="680.42" y="639.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__weak_ptr (5 samples, 0.02%)</title><rect x="706.2" y="565" width="0.2" height="15.0" fill="rgb(231,93,27)" rx="2" ry="2" />
<text  x="709.15" y="575.5" ></text>
</g>
<g >
<title>Tone::Tone (11 samples, 0.05%)</title><rect x="1159.6" y="757" width="0.6" height="15.0" fill="rgb(234,89,23)" rx="2" ry="2" />
<text  x="1162.57" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (3 samples, 0.01%)</title><rect x="607.3" y="693" width="0.2" height="15.0" fill="rgb(228,19,6)" rx="2" ry="2" />
<text  x="610.35" y="703.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (7 samples, 0.03%)</title><rect x="824.4" y="485" width="0.4" height="15.0" fill="rgb(226,74,37)" rx="2" ry="2" />
<text  x="827.38" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_Rb_tree_iterator (4 samples, 0.02%)</title><rect x="788.2" y="437" width="0.3" height="15.0" fill="rgb(247,154,43)" rx="2" ry="2" />
<text  x="791.23" y="447.5" ></text>
</g>
<g >
<title>Bitmap::Create (91 samples, 0.45%)</title><rect x="181.9" y="613" width="5.3" height="15.0" fill="rgb(231,217,11)" rx="2" ry="2" />
<text  x="184.85" y="623.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (294 samples, 1.45%)</title><rect x="760.0" y="453" width="17.2" height="15.0" fill="rgb(242,47,49)" rx="2" ry="2" />
<text  x="763.02" y="463.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (16 samples, 0.08%)</title><rect x="187.2" y="501" width="0.9" height="15.0" fill="rgb(225,5,31)" rx="2" ry="2" />
<text  x="190.22" y="511.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (109 samples, 0.54%)</title><rect x="146.6" y="613" width="6.4" height="15.0" fill="rgb(242,200,11)" rx="2" ry="2" />
<text  x="149.64" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (170 samples, 0.84%)</title><rect x="132.0" y="565" width="9.9" height="15.0" fill="rgb(228,38,3)" rx="2" ry="2" />
<text  x="134.95" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (156 samples, 0.77%)</title><rect x="988.5" y="725" width="9.1" height="15.0" fill="rgb(219,71,48)" rx="2" ry="2" />
<text  x="991.53" y="735.5" ></text>
</g>
<g >
<title>Color::Color (3 samples, 0.01%)</title><rect x="868.7" y="309" width="0.2" height="15.0" fill="rgb(217,122,19)" rx="2" ry="2" />
<text  x="871.68" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::basic_string (3 samples, 0.01%)</title><rect x="987.4" y="693" width="0.2" height="15.0" fill="rgb(206,93,40)" rx="2" ry="2" />
<text  x="990.43" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (3 samples, 0.01%)</title><rect x="822.9" y="405" width="0.1" height="15.0" fill="rgb(227,144,46)" rx="2" ry="2" />
<text  x="825.86" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::operator== (6 samples, 0.03%)</title><rect x="811.9" y="437" width="0.4" height="15.0" fill="rgb(216,61,32)" rx="2" ry="2" />
<text  x="814.90" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::get (2 samples, 0.01%)</title><rect x="110.2" y="965" width="0.1" height="15.0" fill="rgb(250,16,1)" rx="2" ry="2" />
<text  x="113.15" y="975.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (4 samples, 0.02%)</title><rect x="942.2" y="661" width="0.2" height="15.0" fill="rgb(220,93,10)" rx="2" ry="2" />
<text  x="945.19" y="671.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;BaseUi, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (9 samples, 0.04%)</title><rect x="787.4" y="453" width="0.5" height="15.0" fill="rgb(215,228,39)" rx="2" ry="2" />
<text  x="790.36" y="463.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (105 samples, 0.52%)</title><rect x="207.0" y="597" width="6.1" height="15.0" fill="rgb(242,167,36)" rx="2" ry="2" />
<text  x="209.98" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator (3 samples, 0.01%)</title><rect x="777.2" y="453" width="0.1" height="15.0" fill="rgb(219,94,27)" rx="2" ry="2" />
<text  x="780.16" y="463.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::begin (6 samples, 0.03%)</title><rect x="508.9" y="709" width="0.4" height="15.0" fill="rgb(206,57,47)" rx="2" ry="2" />
<text  x="511.94" y="719.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="161.5" y="517" width="0.2" height="15.0" fill="rgb(251,36,17)" rx="2" ry="2" />
<text  x="164.51" y="527.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl (4 samples, 0.02%)</title><rect x="75.5" y="965" width="0.2" height="15.0" fill="rgb(217,154,20)" rx="2" ry="2" />
<text  x="78.46" y="975.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (52 samples, 0.26%)</title><rect x="253.9" y="389" width="3.0" height="15.0" fill="rgb(238,92,53)" rx="2" ry="2" />
<text  x="256.90" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (40 samples, 0.20%)</title><rect x="142.0" y="533" width="2.4" height="15.0" fill="rgb(235,116,1)" rx="2" ry="2" />
<text  x="145.04" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (3 samples, 0.01%)</title><rect x="603.7" y="645" width="0.2" height="15.0" fill="rgb(246,199,4)" rx="2" ry="2" />
<text  x="606.73" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (30 samples, 0.15%)</title><rect x="644.0" y="645" width="1.7" height="15.0" fill="rgb(253,159,37)" rx="2" ry="2" />
<text  x="646.95" y="655.5" ></text>
</g>
<g >
<title>memset@plt (9 samples, 0.04%)</title><rect x="859.2" y="453" width="0.6" height="15.0" fill="rgb(225,64,51)" rx="2" ry="2" />
<text  x="862.24" y="463.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (5 samples, 0.02%)</title><rect x="156.1" y="533" width="0.3" height="15.0" fill="rgb(226,146,42)" rx="2" ry="2" />
<text  x="159.09" y="543.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.05%)</title><rect x="156.7" y="517" width="0.6" height="15.0" fill="rgb(231,173,19)" rx="2" ry="2" />
<text  x="159.73" y="527.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (498 samples, 2.46%)</title><rect x="239.2" y="581" width="29.0" height="15.0" fill="rgb(245,118,27)" rx="2" ry="2" />
<text  x="242.21" y="591.5" >st..</text>
</g>
<g >
<title>memcpy (2 samples, 0.01%)</title><rect x="745.4" y="613" width="0.1" height="15.0" fill="rgb(208,55,23)" rx="2" ry="2" />
<text  x="748.39" y="623.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl (2 samples, 0.01%)</title><rect x="709.0" y="613" width="0.1" height="15.0" fill="rgb(213,30,50)" rx="2" ry="2" />
<text  x="711.95" y="623.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_manager (175 samples, 0.86%)</title><rect x="926.6" y="501" width="10.2" height="15.0" fill="rgb(241,209,41)" rx="2" ry="2" />
<text  x="929.57" y="511.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (86 samples, 0.42%)</title><rect x="198.0" y="933" width="5.0" height="15.0" fill="rgb(210,7,48)" rx="2" ry="2" />
<text  x="201.00" y="943.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.01%)</title><rect x="272.7" y="949" width="0.1" height="15.0" fill="rgb(252,115,47)" rx="2" ry="2" />
<text  x="275.68" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (19 samples, 0.09%)</title><rect x="940.1" y="693" width="1.2" height="15.0" fill="rgb(211,65,24)" rx="2" ry="2" />
<text  x="943.15" y="703.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::get (9 samples, 0.04%)</title><rect x="969.5" y="677" width="0.5" height="15.0" fill="rgb(216,102,38)" rx="2" ry="2" />
<text  x="972.47" y="687.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (498 samples, 2.46%)</title><rect x="239.2" y="565" width="29.0" height="15.0" fill="rgb(223,149,32)" rx="2" ry="2" />
<text  x="242.21" y="575.5" >st..</text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (2 samples, 0.01%)</title><rect x="921.7" y="485" width="0.1" height="15.0" fill="rgb(210,35,42)" rx="2" ry="2" />
<text  x="924.67" y="495.5" ></text>
</g>
<g >
<title>Scene::MainFunction (68 samples, 0.34%)</title><rect x="194.0" y="933" width="4.0" height="15.0" fill="rgb(235,130,44)" rx="2" ry="2" />
<text  x="197.04" y="943.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.01%)</title><rect x="156.4" y="533" width="0.1" height="15.0" fill="rgb(230,1,38)" rx="2" ry="2" />
<text  x="159.38" y="543.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (86 samples, 0.42%)</title><rect x="198.0" y="597" width="5.0" height="15.0" fill="rgb(250,116,20)" rx="2" ry="2" />
<text  x="201.00" y="607.5" ></text>
</g>
<g >
<title>std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;::pair (62 samples, 0.31%)</title><rect x="702.8" y="597" width="3.6" height="15.0" fill="rgb(244,164,43)" rx="2" ry="2" />
<text  x="705.83" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (311 samples, 1.54%)</title><rect x="1006.3" y="725" width="18.1" height="15.0" fill="rgb(253,167,34)" rx="2" ry="2" />
<text  x="1009.31" y="735.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (7 samples, 0.03%)</title><rect x="939.6" y="661" width="0.4" height="15.0" fill="rgb(226,164,9)" rx="2" ry="2" />
<text  x="942.57" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (5 samples, 0.02%)</title><rect x="614.5" y="725" width="0.2" height="15.0" fill="rgb(207,91,51)" rx="2" ry="2" />
<text  x="617.46" y="735.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__weak_ptr (7 samples, 0.03%)</title><rect x="687.9" y="613" width="0.4" height="15.0" fill="rgb(209,145,9)" rx="2" ry="2" />
<text  x="690.85" y="623.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (53 samples, 0.26%)</title><rect x="161.7" y="549" width="3.1" height="15.0" fill="rgb(241,138,44)" rx="2" ry="2" />
<text  x="164.74" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt;::operator()&lt;int const*&gt; (2 samples, 0.01%)</title><rect x="607.1" y="645" width="0.1" height="15.0" fill="rgb(235,35,11)" rx="2" ry="2" />
<text  x="610.05" y="655.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (440 samples, 2.17%)</title><rect x="161.5" y="773" width="25.7" height="15.0" fill="rgb(223,193,46)" rx="2" ry="2" />
<text  x="164.51" y="783.5" >s..</text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (7 samples, 0.03%)</title><rect x="106.7" y="965" width="0.4" height="15.0" fill="rgb(250,219,25)" rx="2" ry="2" />
<text  x="109.71" y="975.5" ></text>
</g>
<g >
<title>std::__weak_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_get_use_count (11 samples, 0.05%)</title><rect x="749.2" y="629" width="0.6" height="15.0" fill="rgb(226,182,32)" rx="2" ry="2" />
<text  x="752.18" y="639.5" ></text>
</g>
<g >
<title>free_unref_page_commit (13 samples, 0.06%)</title><rect x="204.5" y="53" width="0.8" height="15.0" fill="rgb(233,217,6)" rx="2" ry="2" />
<text  x="207.53" y="63.5" ></text>
</g>
<g >
<title>operator== (4 samples, 0.02%)</title><rect x="1163.2" y="725" width="0.2" height="15.0" fill="rgb(222,156,33)" rx="2" ry="2" />
<text  x="1166.18" y="735.5" ></text>
</g>
<g >
<title>Scene::HasRequestedScene (94 samples, 0.46%)</title><rect x="1120.3" y="773" width="5.5" height="15.0" fill="rgb(233,160,19)" rx="2" ry="2" />
<text  x="1123.34" y="783.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (2 samples, 0.01%)</title><rect x="700.3" y="597" width="0.1" height="15.0" fill="rgb(249,63,36)" rx="2" ry="2" />
<text  x="703.33" y="607.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, true&gt; (117 samples, 0.58%)</title><rect x="175.0" y="613" width="6.9" height="15.0" fill="rgb(223,227,46)" rx="2" ry="2" />
<text  x="178.03" y="623.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (10 samples, 0.05%)</title><rect x="823.8" y="453" width="0.6" height="15.0" fill="rgb(223,205,14)" rx="2" ry="2" />
<text  x="826.79" y="463.5" ></text>
</g>
<g >
<title>malloc (30 samples, 0.15%)</title><rect x="142.6" y="437" width="1.8" height="15.0" fill="rgb(218,92,33)" rx="2" ry="2" />
<text  x="145.62" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (23 samples, 0.11%)</title><rect x="510.8" y="709" width="1.3" height="15.0" fill="rgb(250,6,22)" rx="2" ry="2" />
<text  x="513.81" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::operator[] (24 samples, 0.12%)</title><rect x="1133.9" y="773" width="1.4" height="15.0" fill="rgb(252,146,28)" rx="2" ry="2" />
<text  x="1136.92" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (22 samples, 0.11%)</title><rect x="481.8" y="661" width="1.3" height="15.0" fill="rgb(248,142,23)" rx="2" ry="2" />
<text  x="484.78" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (3 samples, 0.01%)</title><rect x="606.2" y="661" width="0.2" height="15.0" fill="rgb(235,0,28)" rx="2" ry="2" />
<text  x="609.24" y="671.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (105 samples, 0.52%)</title><rect x="207.0" y="773" width="6.1" height="15.0" fill="rgb(252,111,5)" rx="2" ry="2" />
<text  x="209.98" y="783.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (2 samples, 0.01%)</title><rect x="86.8" y="965" width="0.1" height="15.0" fill="rgb(235,201,0)" rx="2" ry="2" />
<text  x="89.77" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_M_begin (4 samples, 0.02%)</title><rect x="68.2" y="965" width="0.3" height="15.0" fill="rgb(215,55,21)" rx="2" ry="2" />
<text  x="71.24" y="975.5" ></text>
</g>
<g >
<title>_start (15,519 samples, 76.67%)</title><rect x="278.2" y="981" width="904.7" height="15.0" fill="rgb(221,218,0)" rx="2" ry="2" />
<text  x="281.21" y="991.5" >_start</text>
</g>
<g >
<title>new_sync_read (8 samples, 0.04%)</title><rect x="22.2" y="885" width="0.5" height="15.0" fill="rgb(237,156,8)" rx="2" ry="2" />
<text  x="25.24" y="895.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (7 samples, 0.03%)</title><rect x="1175.3" y="789" width="0.4" height="15.0" fill="rgb(227,91,31)" rx="2" ry="2" />
<text  x="1178.31" y="799.5" ></text>
</g>
<g >
<title>dequeue_entity (2 samples, 0.01%)</title><rect x="17.5" y="805" width="0.1" height="15.0" fill="rgb(236,125,32)" rx="2" ry="2" />
<text  x="20.46" y="815.5" ></text>
</g>
<g >
<title>std::replace&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (2 samples, 0.01%)</title><rect x="106.2" y="965" width="0.2" height="15.0" fill="rgb(223,67,23)" rx="2" ry="2" />
<text  x="109.24" y="975.5" ></text>
</g>
<g >
<title>Cache::SystemOrBlack (4 samples, 0.02%)</title><rect x="1179.0" y="789" width="0.2" height="15.0" fill="rgb(225,165,24)" rx="2" ry="2" />
<text  x="1181.98" y="799.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandJumpToLabel (2 samples, 0.01%)</title><rect x="29.5" y="965" width="0.1" height="15.0" fill="rgb(252,169,49)" rx="2" ry="2" />
<text  x="32.47" y="975.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (758 samples, 3.74%)</title><rect x="634.7" y="693" width="44.2" height="15.0" fill="rgb(253,3,17)" rx="2" ry="2" />
<text  x="637.69" y="703.5" >Asyn..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (6 samples, 0.03%)</title><rect x="194.0" y="501" width="0.4" height="15.0" fill="rgb(233,68,43)" rx="2" ry="2" />
<text  x="197.04" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (4 samples, 0.02%)</title><rect x="478.5" y="645" width="0.2" height="15.0" fill="rgb(211,89,4)" rx="2" ry="2" />
<text  x="481.51" y="655.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (24 samples, 0.12%)</title><rect x="1002.5" y="725" width="1.4" height="15.0" fill="rgb(219,159,30)" rx="2" ry="2" />
<text  x="1005.52" y="735.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (24 samples, 0.12%)</title><rect x="675.5" y="565" width="1.4" height="15.0" fill="rgb(220,209,53)" rx="2" ry="2" />
<text  x="678.55" y="575.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (17 samples, 0.08%)</title><rect x="131.0" y="645" width="1.0" height="15.0" fill="rgb(252,40,1)" rx="2" ry="2" />
<text  x="133.96" y="655.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (24 samples, 0.12%)</title><rect x="982.0" y="661" width="1.4" height="15.0" fill="rgb(249,199,2)" rx="2" ry="2" />
<text  x="985.00" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (16 samples, 0.08%)</title><rect x="818.0" y="389" width="0.9" height="15.0" fill="rgb(211,214,12)" rx="2" ry="2" />
<text  x="820.96" y="399.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="153.0" y="517" width="0.2" height="15.0" fill="rgb(222,93,20)" rx="2" ry="2" />
<text  x="156.00" y="527.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (3 samples, 0.01%)</title><rect x="212.7" y="181" width="0.2" height="15.0" fill="rgb(235,49,50)" rx="2" ry="2" />
<text  x="215.69" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (4 samples, 0.02%)</title><rect x="206.6" y="229" width="0.3" height="15.0" fill="rgb(239,139,36)" rx="2" ry="2" />
<text  x="209.63" y="239.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (5 samples, 0.02%)</title><rect x="279.1" y="789" width="0.3" height="15.0" fill="rgb(238,150,51)" rx="2" ry="2" />
<text  x="282.09" y="799.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::operator (15 samples, 0.07%)</title><rect x="1142.1" y="789" width="0.9" height="15.0" fill="rgb(215,114,4)" rx="2" ry="2" />
<text  x="1145.08" y="799.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (117 samples, 0.58%)</title><rect x="187.2" y="869" width="6.8" height="15.0" fill="rgb(253,20,29)" rx="2" ry="2" />
<text  x="190.22" y="879.5" ></text>
</g>
<g >
<title>std::allocator&lt;Bitmap&gt;::~allocator (2 samples, 0.01%)</title><rect x="905.2" y="357" width="0.1" height="15.0" fill="rgb(230,52,30)" rx="2" ry="2" />
<text  x="908.23" y="367.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (2 samples, 0.01%)</title><rect x="28.3" y="965" width="0.1" height="15.0" fill="rgb(246,120,29)" rx="2" ry="2" />
<text  x="31.30" y="975.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_destroy (2 samples, 0.01%)</title><rect x="1189.7" y="981" width="0.1" height="15.0" fill="rgb(245,208,23)" rx="2" ry="2" />
<text  x="1192.71" y="991.5" ></text>
</g>
<g >
<title>free@plt (3 samples, 0.01%)</title><rect x="918.5" y="325" width="0.2" height="15.0" fill="rgb(220,209,22)" rx="2" ry="2" />
<text  x="921.52" y="335.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (3 samples, 0.01%)</title><rect x="278.4" y="725" width="0.2" height="15.0" fill="rgb(249,202,1)" rx="2" ry="2" />
<text  x="281.39" y="735.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (105 samples, 0.52%)</title><rect x="207.0" y="725" width="6.1" height="15.0" fill="rgb(215,85,25)" rx="2" ry="2" />
<text  x="209.98" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::operator bool (6 samples, 0.03%)</title><rect x="113.2" y="965" width="0.3" height="15.0" fill="rgb(222,186,38)" rx="2" ry="2" />
<text  x="116.18" y="975.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (12 samples, 0.06%)</title><rect x="982.7" y="645" width="0.7" height="15.0" fill="rgb(228,67,5)" rx="2" ry="2" />
<text  x="985.70" y="655.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (17 samples, 0.08%)</title><rect x="131.0" y="549" width="1.0" height="15.0" fill="rgb(245,37,8)" rx="2" ry="2" />
<text  x="133.96" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::size (4 samples, 0.02%)</title><rect x="1143.5" y="789" width="0.2" height="15.0" fill="rgb(254,109,3)" rx="2" ry="2" />
<text  x="1146.48" y="799.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Picture*, std::_Placeholder&lt;1&gt; &gt; (3 samples, 0.01%)</title><rect x="923.3" y="581" width="0.2" height="15.0" fill="rgb(233,183,25)" rx="2" ry="2" />
<text  x="926.30" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (100 samples, 0.49%)</title><rect x="188.1" y="309" width="5.9" height="15.0" fill="rgb(251,17,26)" rx="2" ry="2" />
<text  x="191.15" y="319.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (22 samples, 0.11%)</title><rect x="204.2" y="165" width="1.3" height="15.0" fill="rgb(226,93,11)" rx="2" ry="2" />
<text  x="207.24" y="175.5" ></text>
</g>
<g >
<title>pixman_image_create_bits (3 samples, 0.01%)</title><rect x="868.3" y="293" width="0.2" height="15.0" fill="rgb(217,153,44)" rx="2" ry="2" />
<text  x="871.33" y="303.5" ></text>
</g>
<g >
<title>Bitmap::Create (57 samples, 0.28%)</title><rect x="209.1" y="565" width="3.3" height="15.0" fill="rgb(226,79,43)" rx="2" ry="2" />
<text  x="212.08" y="575.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (146 samples, 0.72%)</title><rect x="153.0" y="773" width="8.5" height="15.0" fill="rgb(208,73,39)" rx="2" ry="2" />
<text  x="156.00" y="783.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Picture*, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl (21 samples, 0.10%)</title><rect x="724.2" y="597" width="1.3" height="15.0" fill="rgb(222,86,35)" rx="2" ry="2" />
<text  x="727.23" y="607.5" ></text>
</g>
<g >
<title>std::replace&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (223 samples, 1.10%)</title><rect x="764.2" y="437" width="13.0" height="15.0" fill="rgb(251,148,7)" rx="2" ry="2" />
<text  x="767.16" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (96 samples, 0.47%)</title><rect x="638.0" y="645" width="5.6" height="15.0" fill="rgb(217,209,1)" rx="2" ry="2" />
<text  x="641.01" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt;::operator()&lt;int const*&gt; (30 samples, 0.15%)</title><rect x="507.0" y="661" width="1.8" height="15.0" fill="rgb(212,34,9)" rx="2" ry="2" />
<text  x="510.02" y="671.5" ></text>
</g>
<g >
<title>Game_Map::Update (117 samples, 0.58%)</title><rect x="187.2" y="885" width="6.8" height="15.0" fill="rgb(228,196,41)" rx="2" ry="2" />
<text  x="190.22" y="895.5" ></text>
</g>
<g >
<title>Game_Picture::Show (17 samples, 0.08%)</title><rect x="131.0" y="885" width="1.0" height="15.0" fill="rgb(225,118,11)" rx="2" ry="2" />
<text  x="133.96" y="895.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (68 samples, 0.34%)</title><rect x="203.0" y="581" width="4.0" height="15.0" fill="rgb(237,189,13)" rx="2" ry="2" />
<text  x="206.01" y="591.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*, std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (212 samples, 1.05%)</title><rect x="925.6" y="613" width="12.3" height="15.0" fill="rgb(205,180,18)" rx="2" ry="2" />
<text  x="928.58" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (5 samples, 0.02%)</title><rect x="482.8" y="645" width="0.3" height="15.0" fill="rgb(227,107,8)" rx="2" ry="2" />
<text  x="485.77" y="655.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Scene, (__gnu_cxx::_Lock_policy)2&gt;::get (2 samples, 0.01%)</title><rect x="128.0" y="965" width="0.2" height="15.0" fill="rgb(218,178,12)" rx="2" ry="2" />
<text  x="131.05" y="975.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt;::~_Sp_counted_ptr_inplace (4 samples, 0.02%)</title><rect x="947.2" y="597" width="0.2" height="15.0" fill="rgb(239,41,25)" rx="2" ry="2" />
<text  x="950.20" y="607.5" ></text>
</g>
<g >
<title>malloc@plt (6 samples, 0.03%)</title><rect x="868.0" y="261" width="0.3" height="15.0" fill="rgb(245,141,10)" rx="2" ry="2" />
<text  x="870.98" y="271.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (72 samples, 0.36%)</title><rect x="672.8" y="581" width="4.1" height="15.0" fill="rgb(241,13,17)" rx="2" ry="2" />
<text  x="675.75" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.05%)</title><rect x="722.4" y="549" width="0.6" height="15.0" fill="rgb(219,47,44)" rx="2" ry="2" />
<text  x="725.42" y="559.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (27 samples, 0.13%)</title><rect x="254.2" y="261" width="1.6" height="15.0" fill="rgb(232,64,43)" rx="2" ry="2" />
<text  x="257.20" y="271.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (170 samples, 0.84%)</title><rect x="132.0" y="757" width="9.9" height="15.0" fill="rgb(208,223,1)" rx="2" ry="2" />
<text  x="134.95" y="767.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (4 samples, 0.02%)</title><rect x="1151.1" y="757" width="0.2" height="15.0" fill="rgb(229,138,54)" rx="2" ry="2" />
<text  x="1154.06" y="767.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.04%)</title><rect x="198.0" y="533" width="0.5" height="15.0" fill="rgb(214,50,44)" rx="2" ry="2" />
<text  x="201.00" y="543.5" ></text>
</g>
<g >
<title>Spriteset_Map::Update (9 samples, 0.04%)</title><rect x="1178.2" y="837" width="0.5" height="15.0" fill="rgb(220,208,36)" rx="2" ry="2" />
<text  x="1181.22" y="847.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;2ul, bool&gt; (2 samples, 0.01%)</title><rect x="81.6" y="965" width="0.1" height="15.0" fill="rgb(208,194,39)" rx="2" ry="2" />
<text  x="84.59" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (39 samples, 0.19%)</title><rect x="1062.3" y="725" width="2.2" height="15.0" fill="rgb(218,62,32)" rx="2" ry="2" />
<text  x="1065.28" y="735.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (59 samples, 0.29%)</title><rect x="268.7" y="693" width="3.5" height="15.0" fill="rgb(250,135,44)" rx="2" ry="2" />
<text  x="271.71" y="703.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_destroy (114 samples, 0.56%)</title><rect x="946.9" y="613" width="6.7" height="15.0" fill="rgb(250,68,44)" rx="2" ry="2" />
<text  x="949.91" y="623.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (3 samples, 0.01%)</title><rect x="82.1" y="965" width="0.1" height="15.0" fill="rgb(213,145,54)" rx="2" ry="2" />
<text  x="85.05" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt;::__normal_iterator (9 samples, 0.04%)</title><rect x="1111.0" y="757" width="0.5" height="15.0" fill="rgb(234,2,20)" rx="2" ry="2" />
<text  x="1114.01" y="767.5" ></text>
</g>
<g >
<title>__fget_light (4 samples, 0.02%)</title><rect x="16.6" y="901" width="0.3" height="15.0" fill="rgb(215,149,19)" rx="2" ry="2" />
<text  x="19.65" y="911.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_right (4 samples, 0.02%)</title><rect x="68.9" y="965" width="0.2" height="15.0" fill="rgb(221,15,46)" rx="2" ry="2" />
<text  x="71.88" y="975.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, FileRequestResult*&amp;&amp;&gt;::_M_head (4 samples, 0.02%)</title><rect x="752.6" y="517" width="0.2" height="15.0" fill="rgb(212,9,23)" rx="2" ry="2" />
<text  x="755.56" y="527.5" ></text>
</g>
<g >
<title>operator new (17 samples, 0.08%)</title><rect x="1184.2" y="981" width="1.0" height="15.0" fill="rgb(225,184,10)" rx="2" ry="2" />
<text  x="1187.17" y="991.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (59 samples, 0.29%)</title><rect x="268.7" y="437" width="3.5" height="15.0" fill="rgb(226,191,44)" rx="2" ry="2" />
<text  x="271.71" y="447.5" ></text>
</g>
<g >
<title>max&lt;int&gt; (2 samples, 0.01%)</title><rect x="874.5" y="437" width="0.1" height="15.0" fill="rgb(218,49,17)" rx="2" ry="2" />
<text  x="877.51" y="447.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (2 samples, 0.01%)</title><rect x="750.2" y="629" width="0.1" height="15.0" fill="rgb(221,139,39)" rx="2" ry="2" />
<text  x="753.17" y="639.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (62 samples, 0.31%)</title><rect x="194.4" y="453" width="3.6" height="15.0" fill="rgb(244,174,12)" rx="2" ry="2" />
<text  x="197.39" y="463.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::~__allocated_ptr (25 samples, 0.12%)</title><rect x="256.9" y="389" width="1.5" height="15.0" fill="rgb(252,161,8)" rx="2" ry="2" />
<text  x="259.94" y="399.5" ></text>
</g>
<g >
<title>__vfs_write (10 samples, 0.05%)</title><rect x="23.1" y="901" width="0.5" height="15.0" fill="rgb(253,99,8)" rx="2" ry="2" />
<text  x="26.06" y="911.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (59 samples, 0.29%)</title><rect x="268.7" y="533" width="3.5" height="15.0" fill="rgb(220,8,5)" rx="2" ry="2" />
<text  x="271.71" y="543.5" ></text>
</g>
<g >
<title>__handle_mm_fault (80 samples, 0.40%)</title><rect x="247.0" y="357" width="4.6" height="15.0" fill="rgb(248,49,0)" rx="2" ry="2" />
<text  x="249.97" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base (12 samples, 0.06%)</title><rect x="49.1" y="965" width="0.7" height="15.0" fill="rgb(224,171,53)" rx="2" ry="2" />
<text  x="52.06" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (7 samples, 0.03%)</title><rect x="155.7" y="549" width="0.4" height="15.0" fill="rgb(206,144,18)" rx="2" ry="2" />
<text  x="158.68" y="559.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (3,444 samples, 17.01%)</title><rect x="738.0" y="677" width="200.8" height="15.0" fill="rgb(215,164,14)" rx="2" ry="2" />
<text  x="740.98" y="687.5" >FileRequestAsync::Download..</text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (23 samples, 0.11%)</title><rect x="882.1" y="421" width="1.3" height="15.0" fill="rgb(229,143,31)" rx="2" ry="2" />
<text  x="885.09" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (10 samples, 0.05%)</title><rect x="892.1" y="469" width="0.5" height="15.0" fill="rgb(221,56,4)" rx="2" ry="2" />
<text  x="895.06" y="479.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (11 samples, 0.05%)</title><rect x="262.9" y="277" width="0.7" height="15.0" fill="rgb(238,106,23)" rx="2" ry="2" />
<text  x="265.94" y="287.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.01%)</title><rect x="212.7" y="133" width="0.2" height="15.0" fill="rgb(254,133,48)" rx="2" ry="2" />
<text  x="215.75" y="143.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (20 samples, 0.10%)</title><rect x="201.8" y="533" width="1.2" height="15.0" fill="rgb(231,219,41)" rx="2" ry="2" />
<text  x="204.85" y="543.5" ></text>
</g>
<g >
<title>std::__merge_sort_with_buffer&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (2 samples, 0.01%)</title><rect x="279.0" y="773" width="0.1" height="15.0" fill="rgb(233,172,23)" rx="2" ry="2" />
<text  x="281.97" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (23 samples, 0.11%)</title><rect x="559.4" y="709" width="1.4" height="15.0" fill="rgb(249,2,31)" rx="2" ry="2" />
<text  x="562.43" y="719.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_destroy (42 samples, 0.21%)</title><rect x="904.1" y="405" width="2.5" height="15.0" fill="rgb(242,38,27)" rx="2" ry="2" />
<text  x="907.12" y="415.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.12%)</title><rect x="256.9" y="341" width="1.5" height="15.0" fill="rgb(236,220,28)" rx="2" ry="2" />
<text  x="259.94" y="351.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::~__allocated_ptr (2 samples, 0.01%)</title><rect x="700.0" y="581" width="0.2" height="15.0" fill="rgb(207,197,53)" rx="2" ry="2" />
<text  x="703.03" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (75 samples, 0.37%)</title><rect x="992.0" y="661" width="4.4" height="15.0" fill="rgb(228,91,13)" rx="2" ry="2" />
<text  x="995.03" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="239.1" y="485" width="0.1" height="15.0" fill="rgb(222,140,6)" rx="2" ry="2" />
<text  x="242.10" y="495.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (19 samples, 0.09%)</title><rect x="204.4" y="101" width="1.1" height="15.0" fill="rgb(210,5,2)" rx="2" ry="2" />
<text  x="207.41" y="111.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (11 samples, 0.05%)</title><rect x="197.4" y="325" width="0.6" height="15.0" fill="rgb(215,121,28)" rx="2" ry="2" />
<text  x="200.36" y="335.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (13 samples, 0.06%)</title><rect x="250.6" y="341" width="0.8" height="15.0" fill="rgb(245,129,8)" rx="2" ry="2" />
<text  x="253.64" y="351.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (50 samples, 0.25%)</title><rect x="740.4" y="613" width="2.9" height="15.0" fill="rgb(217,36,35)" rx="2" ry="2" />
<text  x="743.37" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (10 samples, 0.05%)</title><rect x="983.9" y="693" width="0.6" height="15.0" fill="rgb(245,53,21)" rx="2" ry="2" />
<text  x="986.93" y="703.5" ></text>
</g>
<g >
<title>page_remove_rmap (2 samples, 0.01%)</title><rect x="213.0" y="181" width="0.1" height="15.0" fill="rgb(245,222,6)" rx="2" ry="2" />
<text  x="215.98" y="191.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (21 samples, 0.10%)</title><rect x="686.0" y="517" width="1.3" height="15.0" fill="rgb(241,38,7)" rx="2" ry="2" />
<text  x="689.04" y="527.5" ></text>
</g>
<g >
<title>__GI___poll (8 samples, 0.04%)</title><rect x="1180.2" y="613" width="0.5" height="15.0" fill="rgb(205,111,5)" rx="2" ry="2" />
<text  x="1183.21" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (2 samples, 0.01%)</title><rect x="1176.4" y="789" width="0.1" height="15.0" fill="rgb(237,105,7)" rx="2" ry="2" />
<text  x="1179.36" y="799.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::_M_ptr (9 samples, 0.04%)</title><rect x="891.4" y="437" width="0.5" height="15.0" fill="rgb(233,145,49)" rx="2" ry="2" />
<text  x="894.41" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (5 samples, 0.02%)</title><rect x="1150.3" y="757" width="0.3" height="15.0" fill="rgb(237,218,16)" rx="2" ry="2" />
<text  x="1153.30" y="767.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (28 samples, 0.14%)</title><rect x="981.8" y="677" width="1.6" height="15.0" fill="rgb(237,228,43)" rx="2" ry="2" />
<text  x="984.77" y="687.5" ></text>
</g>
<g >
<title>FileRequestAsync::Bind&lt;Game_Picture&gt; (964 samples, 4.76%)</title><rect x="678.9" y="693" width="56.2" height="15.0" fill="rgb(235,137,31)" rx="2" ry="2" />
<text  x="681.87" y="703.5" >FileR..</text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (287 samples, 1.42%)</title><rect x="403.7" y="741" width="16.7" height="15.0" fill="rgb(215,56,6)" rx="2" ry="2" />
<text  x="406.66" y="751.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char32_t&gt; &gt;::allocate (3 samples, 0.01%)</title><rect x="987.4" y="613" width="0.2" height="15.0" fill="rgb(221,3,24)" rx="2" ry="2" />
<text  x="990.43" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_M_end (4 samples, 0.02%)</title><rect x="789.4" y="437" width="0.2" height="15.0" fill="rgb(219,198,10)" rx="2" ry="2" />
<text  x="792.40" y="447.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;*&gt; (3 samples, 0.01%)</title><rect x="59.4" y="965" width="0.2" height="15.0" fill="rgb(214,125,39)" rx="2" ry="2" />
<text  x="62.38" y="975.5" ></text>
</g>
<g >
<title>std::swap&lt;Bitmap*&gt; (5 samples, 0.02%)</title><rect x="920.8" y="437" width="0.3" height="15.0" fill="rgb(209,78,0)" rx="2" ry="2" />
<text  x="923.80" y="447.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (22 samples, 0.11%)</title><rect x="236.9" y="965" width="1.3" height="15.0" fill="rgb(211,182,3)" rx="2" ry="2" />
<text  x="239.94" y="975.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandElseBranch (83 samples, 0.41%)</title><rect x="602.7" y="741" width="4.8" height="15.0" fill="rgb(236,12,11)" rx="2" ry="2" />
<text  x="605.68" y="751.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (3 samples, 0.01%)</title><rect x="206.6" y="117" width="0.2" height="15.0" fill="rgb(218,198,41)" rx="2" ry="2" />
<text  x="209.63" y="127.5" ></text>
</g>
<g >
<title>pixman_image_unref (20 samples, 0.10%)</title><rect x="201.8" y="421" width="1.2" height="15.0" fill="rgb(225,196,18)" rx="2" ry="2" />
<text  x="204.85" y="431.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (109 samples, 0.54%)</title><rect x="146.6" y="933" width="6.4" height="15.0" fill="rgb(206,210,24)" rx="2" ry="2" />
<text  x="149.64" y="943.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.04%)</title><rect x="642.5" y="549" width="0.5" height="15.0" fill="rgb(244,211,13)" rx="2" ry="2" />
<text  x="645.50" y="559.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::__allocated_ptr (5 samples, 0.02%)</title><rect x="693.7" y="565" width="0.3" height="15.0" fill="rgb(230,68,46)" rx="2" ry="2" />
<text  x="696.68" y="575.5" ></text>
</g>
<g >
<title>min&lt;int&gt; (3 samples, 0.01%)</title><rect x="968.7" y="677" width="0.2" height="15.0" fill="rgb(234,135,19)" rx="2" ry="2" />
<text  x="971.71" y="687.5" ></text>
</g>
<g >
<title>page_fault (19 samples, 0.09%)</title><rect x="137.3" y="389" width="1.1" height="15.0" fill="rgb(239,56,47)" rx="2" ry="2" />
<text  x="140.32" y="399.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (354 samples, 1.75%)</title><rect x="213.1" y="773" width="20.6" height="15.0" fill="rgb(246,78,12)" rx="2" ry="2" />
<text  x="216.10" y="783.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (17 samples, 0.08%)</title><rect x="131.0" y="533" width="1.0" height="15.0" fill="rgb(236,113,53)" rx="2" ry="2" />
<text  x="133.96" y="543.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~tuple (12 samples, 0.06%)</title><rect x="823.7" y="469" width="0.7" height="15.0" fill="rgb(231,124,46)" rx="2" ry="2" />
<text  x="826.68" y="479.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (6 samples, 0.03%)</title><rect x="1160.9" y="757" width="0.4" height="15.0" fill="rgb(217,20,36)" rx="2" ry="2" />
<text  x="1163.91" y="767.5" ></text>
</g>
<g >
<title>memcpy (3 samples, 0.01%)</title><rect x="990.6" y="693" width="0.2" height="15.0" fill="rgb(226,9,41)" rx="2" ry="2" />
<text  x="993.63" y="703.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_base (3 samples, 0.01%)</title><rect x="691.4" y="565" width="0.2" height="15.0" fill="rgb(225,71,39)" rx="2" ry="2" />
<text  x="694.41" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="1182.4" y="661" width="0.2" height="15.0" fill="rgb(249,2,12)" rx="2" ry="2" />
<text  x="1185.36" y="671.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (45 samples, 0.22%)</title><rect x="803.2" y="373" width="2.6" height="15.0" fill="rgb(250,25,44)" rx="2" ry="2" />
<text  x="806.22" y="383.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (30 samples, 0.15%)</title><rect x="251.7" y="421" width="1.7" height="15.0" fill="rgb(243,223,12)" rx="2" ry="2" />
<text  x="254.69" y="431.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (146 samples, 0.72%)</title><rect x="153.0" y="901" width="8.5" height="15.0" fill="rgb(238,162,3)" rx="2" ry="2" />
<text  x="156.00" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::vector (8 samples, 0.04%)</title><rect x="869.1" y="309" width="0.5" height="15.0" fill="rgb(210,165,33)" rx="2" ry="2" />
<text  x="872.15" y="319.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (17 samples, 0.08%)</title><rect x="940.1" y="677" width="1.0" height="15.0" fill="rgb(226,17,46)" rx="2" ry="2" />
<text  x="943.15" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (5 samples, 0.02%)</title><rect x="814.4" y="357" width="0.3" height="15.0" fill="rgb(205,209,3)" rx="2" ry="2" />
<text  x="817.41" y="367.5" ></text>
</g>
<g >
<title>Sprite::SetWaverPhase (2 samples, 0.01%)</title><rect x="884.5" y="469" width="0.1" height="15.0" fill="rgb(239,43,42)" rx="2" ry="2" />
<text  x="887.48" y="479.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (155 samples, 0.77%)</title><rect x="462.3" y="725" width="9.0" height="15.0" fill="rgb(250,171,51)" rx="2" ry="2" />
<text  x="465.31" y="735.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (354 samples, 1.75%)</title><rect x="213.1" y="869" width="20.6" height="15.0" fill="rgb(233,108,8)" rx="2" ry="2" />
<text  x="216.10" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (7 samples, 0.03%)</title><rect x="420.4" y="757" width="0.4" height="15.0" fill="rgb(231,22,44)" rx="2" ry="2" />
<text  x="423.39" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::operator[] (2 samples, 0.01%)</title><rect x="604.5" y="693" width="0.1" height="15.0" fill="rgb(249,78,40)" rx="2" ry="2" />
<text  x="607.49" y="703.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::deallocate (44 samples, 0.22%)</title><rect x="194.4" y="405" width="2.6" height="15.0" fill="rgb(212,46,16)" rx="2" ry="2" />
<text  x="197.39" y="415.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (17 samples, 0.08%)</title><rect x="131.0" y="949" width="1.0" height="15.0" fill="rgb(224,199,22)" rx="2" ry="2" />
<text  x="133.96" y="959.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (7 samples, 0.03%)</title><rect x="870.2" y="341" width="0.4" height="15.0" fill="rgb(233,220,14)" rx="2" ry="2" />
<text  x="873.20" y="351.5" ></text>
</g>
<g >
<title>finish_task_switch (8 samples, 0.04%)</title><rect x="1180.2" y="453" width="0.5" height="15.0" fill="rgb(241,160,30)" rx="2" ry="2" />
<text  x="1183.21" y="463.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (2 samples, 0.01%)</title><rect x="809.6" y="389" width="0.1" height="15.0" fill="rgb(254,28,41)" rx="2" ry="2" />
<text  x="812.57" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (2 samples, 0.01%)</title><rect x="614.7" y="725" width="0.2" height="15.0" fill="rgb(247,160,18)" rx="2" ry="2" />
<text  x="617.75" y="735.5" ></text>
</g>
<g >
<title>std::max&lt;int&gt; (64 samples, 0.32%)</title><rect x="580.1" y="709" width="3.7" height="15.0" fill="rgb(208,22,19)" rx="2" ry="2" />
<text  x="583.06" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (5 samples, 0.02%)</title><rect x="156.1" y="565" width="0.3" height="15.0" fill="rgb(227,31,9)" rx="2" ry="2" />
<text  x="159.09" y="575.5" ></text>
</g>
<g >
<title>pixman_image_unref (18 samples, 0.09%)</title><rect x="197.0" y="373" width="1.0" height="15.0" fill="rgb(212,179,8)" rx="2" ry="2" />
<text  x="199.95" y="383.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (2 samples, 0.01%)</title><rect x="643.1" y="581" width="0.2" height="15.0" fill="rgb(233,189,18)" rx="2" ry="2" />
<text  x="646.14" y="591.5" ></text>
</g>
<g >
<title>Game_Picture::ShowParams::ShowParams (13 samples, 0.06%)</title><rect x="979.2" y="725" width="0.8" height="15.0" fill="rgb(213,129,13)" rx="2" ry="2" />
<text  x="982.21" y="735.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (32 samples, 0.16%)</title><rect x="889.1" y="453" width="1.9" height="15.0" fill="rgb(250,73,25)" rx="2" ry="2" />
<text  x="892.14" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.03%)</title><rect x="212.7" y="277" width="0.4" height="15.0" fill="rgb(235,54,11)" rx="2" ry="2" />
<text  x="215.69" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator (10 samples, 0.05%)</title><rect x="1177.0" y="805" width="0.6" height="15.0" fill="rgb(212,52,39)" rx="2" ry="2" />
<text  x="1180.00" y="815.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (105 samples, 0.52%)</title><rect x="207.0" y="629" width="6.1" height="15.0" fill="rgb(227,132,5)" rx="2" ry="2" />
<text  x="209.98" y="639.5" ></text>
</g>
<g >
<title>schedule (18 samples, 0.09%)</title><rect x="1181.0" y="693" width="1.1" height="15.0" fill="rgb(212,17,5)" rx="2" ry="2" />
<text  x="1184.02" y="703.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;Input::UiSource::Update()::{lambda(int)#1}&gt; &gt; (5 samples, 0.02%)</title><rect x="279.6" y="773" width="0.2" height="15.0" fill="rgb(210,63,15)" rx="2" ry="2" />
<text  x="282.55" y="783.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.01%)</title><rect x="268.3" y="965" width="0.1" height="15.0" fill="rgb(208,6,30)" rx="2" ry="2" />
<text  x="271.30" y="975.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (14 samples, 0.07%)</title><rect x="1180.0" y="757" width="0.8" height="15.0" fill="rgb(246,57,26)" rx="2" ry="2" />
<text  x="1183.03" y="767.5" ></text>
</g>
<g >
<title>__interceptor_free (62 samples, 0.31%)</title><rect x="203.3" y="373" width="3.6" height="15.0" fill="rgb(248,97,54)" rx="2" ry="2" />
<text  x="206.31" y="383.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (5 samples, 0.02%)</title><rect x="915.4" y="277" width="0.3" height="15.0" fill="rgb(213,198,34)" rx="2" ry="2" />
<text  x="918.43" y="287.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (117 samples, 0.58%)</title><rect x="187.2" y="565" width="6.8" height="15.0" fill="rgb(228,108,5)" rx="2" ry="2" />
<text  x="190.22" y="575.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (25 samples, 0.12%)</title><rect x="266.4" y="277" width="1.5" height="15.0" fill="rgb(223,216,29)" rx="2" ry="2" />
<text  x="269.44" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (3 samples, 0.01%)</title><rect x="48.6" y="965" width="0.2" height="15.0" fill="rgb(252,190,7)" rx="2" ry="2" />
<text  x="51.59" y="975.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="808.9" y="341" width="0.1" height="15.0" fill="rgb(230,155,26)" rx="2" ry="2" />
<text  x="811.87" y="351.5" ></text>
</g>
<g >
<title>Bitmap::GetOpacity (2 samples, 0.01%)</title><rect x="831.4" y="437" width="0.1" height="15.0" fill="rgb(215,200,9)" rx="2" ry="2" />
<text  x="834.37" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (9 samples, 0.04%)</title><rect x="921.1" y="421" width="0.5" height="15.0" fill="rgb(244,47,3)" rx="2" ry="2" />
<text  x="924.09" y="431.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.01%)</title><rect x="665.0" y="645" width="0.1" height="15.0" fill="rgb(252,221,33)" rx="2" ry="2" />
<text  x="668.00" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data@plt (3 samples, 0.01%)</title><rect x="644.9" y="629" width="0.2" height="15.0" fill="rgb(224,110,50)" rx="2" ry="2" />
<text  x="647.95" y="639.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (2 samples, 0.01%)</title><rect x="155.3" y="485" width="0.1" height="15.0" fill="rgb(234,92,38)" rx="2" ry="2" />
<text  x="158.27" y="495.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (17 samples, 0.08%)</title><rect x="131.0" y="773" width="1.0" height="15.0" fill="rgb(210,111,48)" rx="2" ry="2" />
<text  x="133.96" y="783.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*&gt; (6 samples, 0.03%)</title><rect x="59.6" y="965" width="0.3" height="15.0" fill="rgb(223,187,51)" rx="2" ry="2" />
<text  x="62.55" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (4 samples, 0.02%)</title><rect x="824.6" y="453" width="0.2" height="15.0" fill="rgb(213,94,6)" rx="2" ry="2" />
<text  x="827.55" y="463.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (15 samples, 0.07%)</title><rect x="139.9" y="453" width="0.9" height="15.0" fill="rgb(209,125,43)" rx="2" ry="2" />
<text  x="142.88" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (51 samples, 0.25%)</title><rect x="350.6" y="725" width="2.9" height="15.0" fill="rgb(245,199,29)" rx="2" ry="2" />
<text  x="353.56" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator bool (14 samples, 0.07%)</title><rect x="983.7" y="709" width="0.8" height="15.0" fill="rgb(208,200,26)" rx="2" ry="2" />
<text  x="986.70" y="719.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (2 samples, 0.01%)</title><rect x="130.1" y="981" width="0.2" height="15.0" fill="rgb(205,134,34)" rx="2" ry="2" />
<text  x="133.15" y="991.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (6 samples, 0.03%)</title><rect x="1055.0" y="597" width="0.3" height="15.0" fill="rgb(216,115,33)" rx="2" ry="2" />
<text  x="1057.99" y="607.5" ></text>
</g>
<g >
<title>Sprite::SetWaverPhase (3 samples, 0.01%)</title><rect x="38.4" y="965" width="0.2" height="15.0" fill="rgb(210,220,22)" rx="2" ry="2" />
<text  x="41.39" y="975.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (18 samples, 0.09%)</title><rect x="232.7" y="389" width="1.0" height="15.0" fill="rgb(233,61,17)" rx="2" ry="2" />
<text  x="235.69" y="399.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (7 samples, 0.03%)</title><rect x="83.7" y="965" width="0.5" height="15.0" fill="rgb(242,10,11)" rx="2" ry="2" />
<text  x="86.74" y="975.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;2ul, bool, false&gt;::_M_head (2 samples, 0.01%)</title><rect x="813.5" y="309" width="0.1" height="15.0" fill="rgb(231,52,46)" rx="2" ry="2" />
<text  x="816.47" y="319.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="175.0" y="533" width="0.3" height="15.0" fill="rgb(249,59,46)" rx="2" ry="2" />
<text  x="178.03" y="543.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (109 samples, 0.54%)</title><rect x="146.6" y="597" width="6.4" height="15.0" fill="rgb(243,52,28)" rx="2" ry="2" />
<text  x="149.64" y="607.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (57 samples, 0.28%)</title><rect x="161.5" y="613" width="3.3" height="15.0" fill="rgb(223,23,13)" rx="2" ry="2" />
<text  x="164.51" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::operator* (5 samples, 0.02%)</title><rect x="200.1" y="357" width="0.3" height="15.0" fill="rgb(225,188,33)" rx="2" ry="2" />
<text  x="203.10" y="367.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;2ul, bool&gt; (9 samples, 0.04%)</title><rect x="813.1" y="341" width="0.5" height="15.0" fill="rgb(218,119,43)" rx="2" ry="2" />
<text  x="816.07" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_M_lower_bound (81 samples, 0.40%)</title><rect x="778.3" y="421" width="4.7" height="15.0" fill="rgb(226,93,18)" rx="2" ry="2" />
<text  x="781.32" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (255 samples, 1.26%)</title><rect x="353.6" y="741" width="14.9" height="15.0" fill="rgb(220,82,30)" rx="2" ry="2" />
<text  x="356.59" y="751.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (2 samples, 0.01%)</title><rect x="263.4" y="245" width="0.1" height="15.0" fill="rgb(237,114,24)" rx="2" ry="2" />
<text  x="266.41" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (67 samples, 0.33%)</title><rect x="1083.6" y="725" width="3.9" height="15.0" fill="rgb(206,182,51)" rx="2" ry="2" />
<text  x="1086.61" y="735.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (22 samples, 0.11%)</title><rect x="204.2" y="149" width="1.3" height="15.0" fill="rgb(252,24,49)" rx="2" ry="2" />
<text  x="207.24" y="159.5" ></text>
</g>
<g >
<title>Player::IsRPG2k3 (13 samples, 0.06%)</title><rect x="594.0" y="725" width="0.8" height="15.0" fill="rgb(210,88,13)" rx="2" ry="2" />
<text  x="597.00" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (6 samples, 0.03%)</title><rect x="238.5" y="965" width="0.4" height="15.0" fill="rgb(212,199,53)" rx="2" ry="2" />
<text  x="241.51" y="975.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (22 samples, 0.11%)</title><rect x="742.0" y="581" width="1.3" height="15.0" fill="rgb(229,113,33)" rx="2" ry="2" />
<text  x="745.01" y="591.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (146 samples, 0.72%)</title><rect x="153.0" y="885" width="8.5" height="15.0" fill="rgb(212,93,36)" rx="2" ry="2" />
<text  x="156.00" y="895.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (20 samples, 0.10%)</title><rect x="895.4" y="405" width="1.1" height="15.0" fill="rgb(244,15,13)" rx="2" ry="2" />
<text  x="898.38" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (42 samples, 0.21%)</title><rect x="944.3" y="597" width="2.5" height="15.0" fill="rgb(206,143,15)" rx="2" ry="2" />
<text  x="947.35" y="607.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (58 samples, 0.29%)</title><rect x="806.2" y="373" width="3.4" height="15.0" fill="rgb(214,196,34)" rx="2" ry="2" />
<text  x="809.19" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_value (13 samples, 0.06%)</title><rect x="669.3" y="613" width="0.8" height="15.0" fill="rgb(206,79,8)" rx="2" ry="2" />
<text  x="672.31" y="623.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (59 samples, 0.29%)</title><rect x="268.7" y="565" width="3.5" height="15.0" fill="rgb(237,193,36)" rx="2" ry="2" />
<text  x="271.71" y="575.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.01%)</title><rect x="212.7" y="149" width="0.2" height="15.0" fill="rgb(211,50,51)" rx="2" ry="2" />
<text  x="215.75" y="159.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustId (3 samples, 0.01%)</title><rect x="617.3" y="709" width="0.2" height="15.0" fill="rgb(214,37,49)" rx="2" ry="2" />
<text  x="620.31" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::push_back (2 samples, 0.01%)</title><rect x="987.3" y="693" width="0.1" height="15.0" fill="rgb(251,188,5)" rx="2" ry="2" />
<text  x="990.31" y="703.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::~function (145 samples, 0.72%)</title><rect x="725.7" y="677" width="8.5" height="15.0" fill="rgb(238,109,46)" rx="2" ry="2" />
<text  x="728.74" y="687.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (105 samples, 0.52%)</title><rect x="207.0" y="741" width="6.1" height="15.0" fill="rgb(253,12,0)" rx="2" ry="2" />
<text  x="209.98" y="751.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (62 samples, 0.31%)</title><rect x="203.3" y="357" width="3.6" height="15.0" fill="rgb(236,50,29)" rx="2" ry="2" />
<text  x="206.31" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (2 samples, 0.01%)</title><rect x="1004.0" y="725" width="0.2" height="15.0" fill="rgb(216,141,43)" rx="2" ry="2" />
<text  x="1007.04" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (12 samples, 0.06%)</title><rect x="939.3" y="693" width="0.7" height="15.0" fill="rgb(240,81,40)" rx="2" ry="2" />
<text  x="942.27" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (6 samples, 0.03%)</title><rect x="1061.9" y="725" width="0.4" height="15.0" fill="rgb(221,122,45)" rx="2" ry="2" />
<text  x="1064.93" y="735.5" ></text>
</g>
<g >
<title>operator delete (89 samples, 0.44%)</title><rect x="948.1" y="549" width="5.2" height="15.0" fill="rgb(247,210,16)" rx="2" ry="2" />
<text  x="951.14" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_value (2 samples, 0.01%)</title><rect x="125.3" y="965" width="0.1" height="15.0" fill="rgb(241,40,43)" rx="2" ry="2" />
<text  x="128.31" y="975.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;int&gt;, int&gt; (2 samples, 0.01%)</title><rect x="239.1" y="613" width="0.1" height="15.0" fill="rgb(207,150,19)" rx="2" ry="2" />
<text  x="242.10" y="623.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (167 samples, 0.83%)</title><rect x="861.4" y="405" width="9.7" height="15.0" fill="rgb(230,102,50)" rx="2" ry="2" />
<text  x="864.39" y="415.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (3 samples, 0.01%)</title><rect x="473.6" y="709" width="0.1" height="15.0" fill="rgb(226,151,1)" rx="2" ry="2" />
<text  x="476.56" y="719.5" ></text>
</g>
<g >
<title>__sched_text_start (18 samples, 0.09%)</title><rect x="1181.0" y="677" width="1.1" height="15.0" fill="rgb(247,41,48)" rx="2" ry="2" />
<text  x="1184.02" y="687.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;int&gt;::operator= (2 samples, 0.01%)</title><rect x="107.1" y="965" width="0.1" height="15.0" fill="rgb(205,70,15)" rx="2" ry="2" />
<text  x="110.12" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (8 samples, 0.04%)</title><rect x="645.7" y="645" width="0.5" height="15.0" fill="rgb(243,172,16)" rx="2" ry="2" />
<text  x="648.70" y="655.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandConditionalBranch (1,068 samples, 5.28%)</title><rect x="457.2" y="741" width="62.3" height="15.0" fill="rgb(248,141,32)" rx="2" ry="2" />
<text  x="460.24" y="751.5" >Game_I..</text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (79 samples, 0.39%)</title><rect x="142.0" y="677" width="4.6" height="15.0" fill="rgb(241,204,20)" rx="2" ry="2" />
<text  x="145.04" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::operator[] (5 samples, 0.02%)</title><rect x="1143.2" y="789" width="0.3" height="15.0" fill="rgb(238,21,20)" rx="2" ry="2" />
<text  x="1146.19" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (14 samples, 0.07%)</title><rect x="114.3" y="965" width="0.9" height="15.0" fill="rgb(212,46,52)" rx="2" ry="2" />
<text  x="117.35" y="975.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt;::_M_head (2 samples, 0.01%)</title><rect x="969.6" y="629" width="0.2" height="15.0" fill="rgb(225,129,12)" rx="2" ry="2" />
<text  x="972.65" y="639.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (86 samples, 0.42%)</title><rect x="198.0" y="709" width="5.0" height="15.0" fill="rgb(249,13,53)" rx="2" ry="2" />
<text  x="201.00" y="719.5" ></text>
</g>
<g >
<title>pixman_image_unref (12 samples, 0.06%)</title><rect x="212.4" y="437" width="0.7" height="15.0" fill="rgb(242,65,9)" rx="2" ry="2" />
<text  x="215.40" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate (9 samples, 0.04%)</title><rect x="870.1" y="357" width="0.5" height="15.0" fill="rgb(242,24,10)" rx="2" ry="2" />
<text  x="873.08" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars@plt (3 samples, 0.01%)</title><rect x="645.4" y="629" width="0.1" height="15.0" fill="rgb(218,198,4)" rx="2" ry="2" />
<text  x="648.35" y="639.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (146 samples, 0.72%)</title><rect x="153.0" y="661" width="8.5" height="15.0" fill="rgb(237,28,21)" rx="2" ry="2" />
<text  x="156.00" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.01%)</title><rect x="77.3" y="965" width="0.1" height="15.0" fill="rgb(210,50,49)" rx="2" ry="2" />
<text  x="80.27" y="975.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (7 samples, 0.03%)</title><rect x="1169.5" y="757" width="0.4" height="15.0" fill="rgb(233,101,50)" rx="2" ry="2" />
<text  x="1172.54" y="767.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (3 samples, 0.01%)</title><rect x="691.7" y="533" width="0.2" height="15.0" fill="rgb(253,65,14)" rx="2" ry="2" />
<text  x="694.70" y="543.5" ></text>
</g>
<g >
<title>Game_Map::Update (59 samples, 0.29%)</title><rect x="268.7" y="853" width="3.5" height="15.0" fill="rgb(209,208,52)" rx="2" ry="2" />
<text  x="271.71" y="863.5" ></text>
</g>
<g >
<title>Bitmap::GetHeight (3 samples, 0.01%)</title><rect x="960.9" y="693" width="0.2" height="15.0" fill="rgb(211,105,26)" rx="2" ry="2" />
<text  x="963.90" y="703.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (8 samples, 0.04%)</title><rect x="957.5" y="693" width="0.4" height="15.0" fill="rgb(221,114,27)" rx="2" ry="2" />
<text  x="960.46" y="703.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Game_Picture*, false&gt;::_M_head (13 samples, 0.06%)</title><rect x="63.5" y="965" width="0.8" height="15.0" fill="rgb(230,219,29)" rx="2" ry="2" />
<text  x="66.51" y="975.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (68 samples, 0.34%)</title><rect x="194.0" y="661" width="4.0" height="15.0" fill="rgb(205,30,35)" rx="2" ry="2" />
<text  x="197.04" y="671.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (3 samples, 0.01%)</title><rect x="891.8" y="405" width="0.1" height="15.0" fill="rgb(214,162,37)" rx="2" ry="2" />
<text  x="894.76" y="415.5" ></text>
</g>
<g >
<title>std::max&lt;int&gt; (10 samples, 0.05%)</title><rect x="103.2" y="965" width="0.5" height="15.0" fill="rgb(236,222,22)" rx="2" ry="2" />
<text  x="106.15" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt;::new_allocator (8 samples, 0.04%)</title><rect x="54.1" y="965" width="0.5" height="15.0" fill="rgb(229,20,29)" rx="2" ry="2" />
<text  x="57.13" y="975.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="140.6" y="421" width="0.2" height="15.0" fill="rgb(226,152,11)" rx="2" ry="2" />
<text  x="143.58" y="431.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (109 samples, 0.54%)</title><rect x="146.6" y="485" width="6.4" height="15.0" fill="rgb(252,1,22)" rx="2" ry="2" />
<text  x="149.64" y="495.5" ></text>
</g>
<g >
<title>operator delete (123 samples, 0.61%)</title><rect x="726.7" y="613" width="7.1" height="15.0" fill="rgb(243,127,54)" rx="2" ry="2" />
<text  x="729.67" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::size (6 samples, 0.03%)</title><rect x="117.3" y="965" width="0.4" height="15.0" fill="rgb(216,217,49)" rx="2" ry="2" />
<text  x="120.32" y="975.5" ></text>
</g>
<g >
<title>std::move&lt;bool (*&amp;)(std::_Any_data&amp;, std::_Any_data const&amp;, std::_Manager_operation)&gt; (2 samples, 0.01%)</title><rect x="104.1" y="965" width="0.2" height="15.0" fill="rgb(251,99,13)" rx="2" ry="2" />
<text  x="107.15" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (81 samples, 0.40%)</title><rect x="1019.7" y="709" width="4.7" height="15.0" fill="rgb(243,32,16)" rx="2" ry="2" />
<text  x="1022.72" y="719.5" ></text>
</g>
<g >
<title>operator new (39 samples, 0.19%)</title><rect x="144.4" y="501" width="2.2" height="15.0" fill="rgb(221,113,29)" rx="2" ry="2" />
<text  x="147.37" y="511.5" ></text>
</g>
<g >
<title>std::swap&lt;int*&gt; (10 samples, 0.05%)</title><rect x="942.9" y="645" width="0.6" height="15.0" fill="rgb(211,73,49)" rx="2" ry="2" />
<text  x="945.89" y="655.5" ></text>
</g>
<g >
<title>pixman_image_get_height (5 samples, 0.02%)</title><rect x="898.2" y="437" width="0.3" height="15.0" fill="rgb(206,5,40)" rx="2" ry="2" />
<text  x="901.24" y="447.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (4 samples, 0.02%)</title><rect x="82.8" y="965" width="0.2" height="15.0" fill="rgb(249,26,48)" rx="2" ry="2" />
<text  x="85.81" y="975.5" ></text>
</g>
<g >
<title>uncharge_batch (3 samples, 0.01%)</title><rect x="205.3" y="53" width="0.2" height="15.0" fill="rgb(206,164,27)" rx="2" ry="2" />
<text  x="208.29" y="63.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars@plt (5 samples, 0.02%)</title><rect x="822.3" y="389" width="0.3" height="15.0" fill="rgb(205,221,20)" rx="2" ry="2" />
<text  x="825.28" y="399.5" ></text>
</g>
<g >
<title>std::_Bit_const_iterator::_Bit_const_iterator (4 samples, 0.02%)</title><rect x="285.4" y="725" width="0.3" height="15.0" fill="rgb(217,151,38)" rx="2" ry="2" />
<text  x="288.44" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;int&gt;::_M_ptr (2 samples, 0.01%)</title><rect x="953.6" y="581" width="0.1" height="15.0" fill="rgb(220,78,37)" rx="2" ry="2" />
<text  x="956.56" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.02%)</title><rect x="1179.6" y="629" width="0.3" height="15.0" fill="rgb(216,44,41)" rx="2" ry="2" />
<text  x="1182.62" y="639.5" ></text>
</g>
<g >
<title>Input::Update (18 samples, 0.09%)</title><rect x="279.5" y="869" width="1.0" height="15.0" fill="rgb(229,6,46)" rx="2" ry="2" />
<text  x="282.50" y="879.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (105 samples, 0.52%)</title><rect x="207.0" y="853" width="6.1" height="15.0" fill="rgb(208,226,4)" rx="2" ry="2" />
<text  x="209.98" y="863.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator bool (2 samples, 0.01%)</title><rect x="787.2" y="469" width="0.1" height="15.0" fill="rgb(246,151,8)" rx="2" ry="2" />
<text  x="790.18" y="479.5" ></text>
</g>
<g >
<title>enqueue_task_fair (2 samples, 0.01%)</title><rect x="23.3" y="757" width="0.1" height="15.0" fill="rgb(209,44,24)" rx="2" ry="2" />
<text  x="26.29" y="767.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (69 samples, 0.34%)</title><rect x="146.6" y="437" width="4.1" height="15.0" fill="rgb(230,73,27)" rx="2" ry="2" />
<text  x="149.64" y="447.5" ></text>
</g>
<g >
<title>operator delete (36 samples, 0.18%)</title><rect x="207.0" y="549" width="2.1" height="15.0" fill="rgb(254,6,31)" rx="2" ry="2" />
<text  x="209.98" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (3 samples, 0.01%)</title><rect x="378.7" y="741" width="0.2" height="15.0" fill="rgb(206,95,32)" rx="2" ry="2" />
<text  x="381.71" y="751.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (109 samples, 0.54%)</title><rect x="146.6" y="629" width="6.4" height="15.0" fill="rgb(222,36,39)" rx="2" ry="2" />
<text  x="149.64" y="639.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (117 samples, 0.58%)</title><rect x="187.2" y="693" width="6.8" height="15.0" fill="rgb(210,202,30)" rx="2" ry="2" />
<text  x="190.22" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::begin (9 samples, 0.04%)</title><rect x="636.7" y="661" width="0.6" height="15.0" fill="rgb(223,34,39)" rx="2" ry="2" />
<text  x="639.73" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (3 samples, 0.01%)</title><rect x="117.9" y="965" width="0.2" height="15.0" fill="rgb(209,211,5)" rx="2" ry="2" />
<text  x="120.90" y="975.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (19 samples, 0.09%)</title><rect x="204.4" y="117" width="1.1" height="15.0" fill="rgb(248,169,40)" rx="2" ry="2" />
<text  x="207.41" y="127.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_manager (100 samples, 0.49%)</title><rect x="709.5" y="661" width="5.8" height="15.0" fill="rgb(215,45,52)" rx="2" ry="2" />
<text  x="712.48" y="671.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt;::~allocator (5 samples, 0.02%)</title><rect x="919.4" y="293" width="0.3" height="15.0" fill="rgb(252,98,17)" rx="2" ry="2" />
<text  x="922.40" y="303.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (4 samples, 0.02%)</title><rect x="79.7" y="965" width="0.2" height="15.0" fill="rgb(250,144,18)" rx="2" ry="2" />
<text  x="82.66" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (121 samples, 0.60%)</title><rect x="1064.5" y="725" width="7.1" height="15.0" fill="rgb(205,17,20)" rx="2" ry="2" />
<text  x="1067.55" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (41 samples, 0.20%)</title><rect x="153.0" y="549" width="2.4" height="15.0" fill="rgb(213,99,32)" rx="2" ry="2" />
<text  x="156.00" y="559.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (50 samples, 0.25%)</title><rect x="239.5" y="437" width="2.9" height="15.0" fill="rgb(205,32,38)" rx="2" ry="2" />
<text  x="242.51" y="447.5" ></text>
</g>
<g >
<title>FileRequestAsync::SetGraphicFile (43 samples, 0.21%)</title><rect x="735.1" y="693" width="2.5" height="15.0" fill="rgb(244,129,44)" rx="2" ry="2" />
<text  x="738.07" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_valptr (2 samples, 0.01%)</title><rect x="200.3" y="341" width="0.1" height="15.0" fill="rgb(253,131,19)" rx="2" ry="2" />
<text  x="203.27" y="351.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (17 samples, 0.08%)</title><rect x="131.0" y="677" width="1.0" height="15.0" fill="rgb(209,0,43)" rx="2" ry="2" />
<text  x="133.96" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator=@plt (2 samples, 0.01%)</title><rect x="749.1" y="645" width="0.1" height="15.0" fill="rgb(224,134,36)" rx="2" ry="2" />
<text  x="752.06" y="655.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (3 samples, 0.01%)</title><rect x="953.6" y="613" width="0.1" height="15.0" fill="rgb(238,18,53)" rx="2" ry="2" />
<text  x="956.56" y="623.5" ></text>
</g>
<g >
<title>unix_stream_read_generic (2 samples, 0.01%)</title><rect x="1182.4" y="549" width="0.1" height="15.0" fill="rgb(214,208,23)" rx="2" ry="2" />
<text  x="1185.42" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_M_begin (2 samples, 0.01%)</title><rect x="66.5" y="965" width="0.2" height="15.0" fill="rgb(237,25,40)" rx="2" ry="2" />
<text  x="69.55" y="975.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="644.5" y="629" width="0.2" height="15.0" fill="rgb(250,62,2)" rx="2" ry="2" />
<text  x="647.48" y="639.5" ></text>
</g>
<g >
<title>FpsOverlay::Update (2 samples, 0.01%)</title><rect x="278.3" y="853" width="0.1" height="15.0" fill="rgb(210,120,47)" rx="2" ry="2" />
<text  x="281.27" y="863.5" ></text>
</g>
<g >
<title>select_task_rq_fair (2 samples, 0.01%)</title><rect x="23.1" y="789" width="0.1" height="15.0" fill="rgb(246,184,35)" rx="2" ry="2" />
<text  x="26.12" y="799.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (16 samples, 0.08%)</title><rect x="888.1" y="453" width="0.9" height="15.0" fill="rgb(253,57,12)" rx="2" ry="2" />
<text  x="891.09" y="463.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (6 samples, 0.03%)</title><rect x="814.3" y="373" width="0.4" height="15.0" fill="rgb(213,68,51)" rx="2" ry="2" />
<text  x="817.35" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocator&lt;Bitmap&gt; (4 samples, 0.02%)</title><rect x="93.9" y="965" width="0.2" height="15.0" fill="rgb(247,80,7)" rx="2" ry="2" />
<text  x="96.89" y="975.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (17 samples, 0.08%)</title><rect x="131.0" y="853" width="1.0" height="15.0" fill="rgb(214,22,0)" rx="2" ry="2" />
<text  x="133.96" y="863.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_ptr (10 samples, 0.05%)</title><rect x="669.5" y="581" width="0.6" height="15.0" fill="rgb(218,48,47)" rx="2" ry="2" />
<text  x="672.49" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (7 samples, 0.03%)</title><rect x="323.9" y="757" width="0.4" height="15.0" fill="rgb(220,187,26)" rx="2" ry="2" />
<text  x="326.86" y="767.5" ></text>
</g>
<g >
<title>Game_Screen::GetTone (28 samples, 0.14%)</title><rect x="964.6" y="693" width="1.7" height="15.0" fill="rgb(218,102,34)" rx="2" ry="2" />
<text  x="967.63" y="703.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (4 samples, 0.02%)</title><rect x="893.2" y="437" width="0.3" height="15.0" fill="rgb(249,24,3)" rx="2" ry="2" />
<text  x="896.22" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::~vector (16 samples, 0.08%)</title><rect x="918.8" y="341" width="0.9" height="15.0" fill="rgb(218,197,4)" rx="2" ry="2" />
<text  x="921.81" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_key (31 samples, 0.15%)</title><rect x="778.7" y="405" width="1.8" height="15.0" fill="rgb(209,135,0)" rx="2" ry="2" />
<text  x="781.73" y="415.5" ></text>
</g>
<g >
<title>Game_Screen::GetPicture (6 samples, 0.03%)</title><rect x="617.0" y="725" width="0.3" height="15.0" fill="rgb(211,97,27)" rx="2" ry="2" />
<text  x="619.96" y="735.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (4 samples, 0.02%)</title><rect x="822.6" y="389" width="0.3" height="15.0" fill="rgb(247,32,52)" rx="2" ry="2" />
<text  x="825.63" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (2 samples, 0.01%)</title><rect x="480.3" y="645" width="0.1" height="15.0" fill="rgb(234,39,39)" rx="2" ry="2" />
<text  x="483.32" y="655.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (342 samples, 1.69%)</title><rect x="899.9" y="453" width="20.0" height="15.0" fill="rgb(228,90,15)" rx="2" ry="2" />
<text  x="902.93" y="463.5" ></text>
</g>
<g >
<title>Game_Interpreter::IsAsyncPending (3 samples, 0.01%)</title><rect x="286.6" y="789" width="0.2" height="15.0" fill="rgb(247,220,19)" rx="2" ry="2" />
<text  x="289.61" y="799.5" ></text>
</g>
<g >
<title>__gthread_active_p (2 samples, 0.01%)</title><rect x="818.9" y="389" width="0.1" height="15.0" fill="rgb(239,57,37)" rx="2" ry="2" />
<text  x="821.90" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::CommonEvent, std::allocator&lt;RPG::CommonEvent&gt; &gt;::operator[] (3 samples, 0.01%)</title><rect x="1145.1" y="773" width="0.2" height="15.0" fill="rgb(233,66,14)" rx="2" ry="2" />
<text  x="1148.11" y="783.5" ></text>
</g>
<g >
<title>Color::Color (4 samples, 0.02%)</title><rect x="1161.8" y="741" width="0.2" height="15.0" fill="rgb(222,154,17)" rx="2" ry="2" />
<text  x="1164.79" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (33 samples, 0.16%)</title><rect x="463.8" y="693" width="1.9" height="15.0" fill="rgb(213,126,6)" rx="2" ry="2" />
<text  x="466.82" y="703.5" ></text>
</g>
<g >
<title>Color::Color (2 samples, 0.01%)</title><rect x="964.5" y="661" width="0.1" height="15.0" fill="rgb(237,7,25)" rx="2" ry="2" />
<text  x="967.52" y="671.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (79 samples, 0.39%)</title><rect x="142.0" y="885" width="4.6" height="15.0" fill="rgb(236,4,3)" rx="2" ry="2" />
<text  x="145.04" y="895.5" ></text>
</g>
<g >
<title>operator!= (10 samples, 0.05%)</title><rect x="883.9" y="453" width="0.6" height="15.0" fill="rgb(249,140,15)" rx="2" ry="2" />
<text  x="886.89" y="463.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (5 samples, 0.02%)</title><rect x="963.8" y="677" width="0.2" height="15.0" fill="rgb(209,63,17)" rx="2" ry="2" />
<text  x="966.76" y="687.5" ></text>
</g>
<g >
<title>do_syscall_64 (38 samples, 0.19%)</title><rect x="204.0" y="245" width="2.2" height="15.0" fill="rgb(216,116,49)" rx="2" ry="2" />
<text  x="207.00" y="255.5" ></text>
</g>
<g >
<title>Utils::DecodeUTF32 (21 samples, 0.10%)</title><rect x="986.0" y="709" width="1.2" height="15.0" fill="rgb(239,123,0)" rx="2" ry="2" />
<text  x="988.97" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (18 samples, 0.09%)</title><rect x="232.7" y="453" width="1.0" height="15.0" fill="rgb(226,185,19)" rx="2" ry="2" />
<text  x="235.69" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (9 samples, 0.04%)</title><rect x="1177.0" y="773" width="0.5" height="15.0" fill="rgb(207,7,50)" rx="2" ry="2" />
<text  x="1180.00" y="783.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (68 samples, 0.34%)</title><rect x="203.0" y="885" width="4.0" height="15.0" fill="rgb(251,105,25)" rx="2" ry="2" />
<text  x="206.01" y="895.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (10 samples, 0.05%)</title><rect x="96.2" y="965" width="0.6" height="15.0" fill="rgb(247,122,51)" rx="2" ry="2" />
<text  x="99.22" y="975.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (6 samples, 0.03%)</title><rect x="121.8" y="965" width="0.4" height="15.0" fill="rgb(240,178,16)" rx="2" ry="2" />
<text  x="124.81" y="975.5" ></text>
</g>
<g >
<title>page_fault (4 samples, 0.02%)</title><rect x="139.6" y="437" width="0.3" height="15.0" fill="rgb(246,101,1)" rx="2" ry="2" />
<text  x="142.65" y="447.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::CommonEvent&gt; (10 samples, 0.05%)</title><rect x="1146.8" y="741" width="0.6" height="15.0" fill="rgb(225,173,20)" rx="2" ry="2" />
<text  x="1149.80" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (90 samples, 0.44%)</title><rect x="654.9" y="645" width="5.2" height="15.0" fill="rgb(246,67,9)" rx="2" ry="2" />
<text  x="657.86" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (55 samples, 0.27%)</title><rect x="560.8" y="709" width="3.2" height="15.0" fill="rgb(249,163,13)" rx="2" ry="2" />
<text  x="563.77" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::destroy&lt;Bitmap&gt; (18 samples, 0.09%)</title><rect x="197.0" y="405" width="1.0" height="15.0" fill="rgb(249,99,24)" rx="2" ry="2" />
<text  x="199.95" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (11 samples, 0.05%)</title><rect x="1168.5" y="773" width="0.7" height="15.0" fill="rgb(214,23,35)" rx="2" ry="2" />
<text  x="1171.55" y="783.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (2,890 samples, 14.28%)</title><rect x="754.5" y="517" width="168.5" height="15.0" fill="rgb(238,226,32)" rx="2" ry="2" />
<text  x="757.48" y="527.5" >std::__invoke_impl&lt;vo..</text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_Rb_tree_iterator (4 samples, 0.02%)</title><rect x="783.5" y="405" width="0.2" height="15.0" fill="rgb(232,116,42)" rx="2" ry="2" />
<text  x="786.51" y="415.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Any_data&amp;&gt; (7 samples, 0.03%)</title><rect x="704.9" y="533" width="0.4" height="15.0" fill="rgb(213,204,13)" rx="2" ry="2" />
<text  x="707.87" y="543.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (62 samples, 0.31%)</title><rect x="203.3" y="325" width="3.6" height="15.0" fill="rgb(232,79,43)" rx="2" ry="2" />
<text  x="206.31" y="335.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (2 samples, 0.01%)</title><rect x="616.8" y="677" width="0.2" height="15.0" fill="rgb(236,207,33)" rx="2" ry="2" />
<text  x="619.85" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (68 samples, 0.34%)</title><rect x="639.3" y="597" width="4.0" height="15.0" fill="rgb(244,182,23)" rx="2" ry="2" />
<text  x="642.29" y="607.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.02%)</title><rect x="203.0" y="501" width="0.3" height="15.0" fill="rgb(243,52,36)" rx="2" ry="2" />
<text  x="206.01" y="511.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (68 samples, 0.34%)</title><rect x="203.0" y="645" width="4.0" height="15.0" fill="rgb(235,178,36)" rx="2" ry="2" />
<text  x="206.01" y="655.5" ></text>
</g>
<g >
<title>Opacity::IsOpaque (3 samples, 0.01%)</title><rect x="831.5" y="453" width="0.2" height="15.0" fill="rgb(244,152,10)" rx="2" ry="2" />
<text  x="834.49" y="463.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (16 samples, 0.08%)</title><rect x="174.1" y="581" width="0.9" height="15.0" fill="rgb(250,37,41)" rx="2" ry="2" />
<text  x="177.10" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (85 samples, 0.42%)</title><rect x="182.2" y="453" width="5.0" height="15.0" fill="rgb(248,8,6)" rx="2" ry="2" />
<text  x="185.20" y="463.5" ></text>
</g>
<g >
<title>Scene_Map::Update (117 samples, 0.58%)</title><rect x="187.2" y="917" width="6.8" height="15.0" fill="rgb(234,152,26)" rx="2" ry="2" />
<text  x="190.22" y="927.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (113 samples, 0.56%)</title><rect x="175.3" y="517" width="6.6" height="15.0" fill="rgb(210,138,27)" rx="2" ry="2" />
<text  x="178.27" y="527.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt;::_M_head (2 samples, 0.01%)</title><rect x="984.3" y="629" width="0.2" height="15.0" fill="rgb(224,85,24)" rx="2" ry="2" />
<text  x="987.34" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (4 samples, 0.02%)</title><rect x="421.3" y="741" width="0.2" height="15.0" fill="rgb(233,158,29)" rx="2" ry="2" />
<text  x="424.27" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt; &gt; &gt;::size (2 samples, 0.01%)</title><rect x="617.2" y="709" width="0.1" height="15.0" fill="rgb(224,126,10)" rx="2" ry="2" />
<text  x="620.20" y="719.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (10 samples, 0.05%)</title><rect x="995.8" y="645" width="0.6" height="15.0" fill="rgb(228,99,51)" rx="2" ry="2" />
<text  x="998.82" y="655.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (34 samples, 0.17%)</title><rect x="801.2" y="357" width="2.0" height="15.0" fill="rgb(221,123,25)" rx="2" ry="2" />
<text  x="804.23" y="367.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (354 samples, 1.75%)</title><rect x="213.1" y="853" width="20.6" height="15.0" fill="rgb(218,37,51)" rx="2" ry="2" />
<text  x="216.10" y="863.5" ></text>
</g>
<g >
<title>unmap_single_vma (12 samples, 0.06%)</title><rect x="205.5" y="149" width="0.7" height="15.0" fill="rgb(227,95,47)" rx="2" ry="2" />
<text  x="208.52" y="159.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (170 samples, 0.84%)</title><rect x="132.0" y="549" width="9.9" height="15.0" fill="rgb(208,158,47)" rx="2" ry="2" />
<text  x="134.95" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (175 samples, 0.86%)</title><rect x="164.8" y="597" width="10.2" height="15.0" fill="rgb(233,74,12)" rx="2" ry="2" />
<text  x="167.83" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (18 samples, 0.09%)</title><rect x="1181.0" y="757" width="1.1" height="15.0" fill="rgb(213,97,20)" rx="2" ry="2" />
<text  x="1184.02" y="767.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (5 samples, 0.02%)</title><rect x="715.3" y="645" width="0.3" height="15.0" fill="rgb(233,57,50)" rx="2" ry="2" />
<text  x="718.31" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_addr (10 samples, 0.05%)</title><rect x="43.9" y="965" width="0.6" height="15.0" fill="rgb(244,101,54)" rx="2" ry="2" />
<text  x="46.87" y="975.5" ></text>
</g>
<g >
<title>Sprite::GetBitmap (3 samples, 0.01%)</title><rect x="880.0" y="469" width="0.2" height="15.0" fill="rgb(218,163,22)" rx="2" ry="2" />
<text  x="883.05" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (3 samples, 0.01%)</title><rect x="125.7" y="965" width="0.2" height="15.0" fill="rgb(225,5,19)" rx="2" ry="2" />
<text  x="128.71" y="975.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_get_pointer (3 samples, 0.01%)</title><rect x="60.4" y="965" width="0.1" height="15.0" fill="rgb(211,124,14)" rx="2" ry="2" />
<text  x="63.37" y="975.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (44 samples, 0.22%)</title><rect x="761.6" y="437" width="2.6" height="15.0" fill="rgb(248,155,33)" rx="2" ry="2" />
<text  x="764.59" y="447.5" ></text>
</g>
<g >
<title>Scene::MainFunction (68 samples, 0.34%)</title><rect x="203.0" y="965" width="4.0" height="15.0" fill="rgb(229,164,27)" rx="2" ry="2" />
<text  x="206.01" y="975.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (59 samples, 0.29%)</title><rect x="268.7" y="485" width="3.5" height="15.0" fill="rgb(249,214,18)" rx="2" ry="2" />
<text  x="271.71" y="495.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (29 samples, 0.14%)</title><rect x="804.1" y="341" width="1.7" height="15.0" fill="rgb(231,42,2)" rx="2" ry="2" />
<text  x="807.15" y="351.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (3 samples, 0.01%)</title><rect x="88.3" y="965" width="0.2" height="15.0" fill="rgb(230,26,23)" rx="2" ry="2" />
<text  x="91.29" y="975.5" ></text>
</g>
<g >
<title>Bitmap::GetWidth (3 samples, 0.01%)</title><rect x="961.1" y="693" width="0.2" height="15.0" fill="rgb(224,222,10)" rx="2" ry="2" />
<text  x="964.08" y="703.5" ></text>
</g>
<g >
<title>read_tsc (8 samples, 0.04%)</title><rect x="228.5" y="437" width="0.5" height="15.0" fill="rgb(237,115,13)" rx="2" ry="2" />
<text  x="231.49" y="447.5" ></text>
</g>
<g >
<title>import_iovec (2 samples, 0.01%)</title><rect x="1179.6" y="533" width="0.1" height="15.0" fill="rgb(254,143,6)" rx="2" ry="2" />
<text  x="1182.62" y="543.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (34 samples, 0.17%)</title><rect x="916.5" y="309" width="2.0" height="15.0" fill="rgb(208,93,42)" rx="2" ry="2" />
<text  x="919.54" y="319.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::swap (49 samples, 0.24%)</title><rect x="703.2" y="565" width="2.8" height="15.0" fill="rgb(215,185,5)" rx="2" ry="2" />
<text  x="706.18" y="575.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.03%)</title><rect x="856.9" y="405" width="0.4" height="15.0" fill="rgb(225,102,11)" rx="2" ry="2" />
<text  x="859.90" y="415.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (9 samples, 0.04%)</title><rect x="173.4" y="469" width="0.5" height="15.0" fill="rgb(220,20,30)" rx="2" ry="2" />
<text  x="176.40" y="479.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (5 samples, 0.02%)</title><rect x="156.1" y="581" width="0.3" height="15.0" fill="rgb(230,192,29)" rx="2" ry="2" />
<text  x="159.09" y="591.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (2 samples, 0.01%)</title><rect x="29.8" y="965" width="0.1" height="15.0" fill="rgb(232,129,21)" rx="2" ry="2" />
<text  x="32.76" y="975.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="279.4" y="661" width="0.1" height="15.0" fill="rgb(205,183,12)" rx="2" ry="2" />
<text  x="282.38" y="671.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (288 samples, 1.42%)</title><rect x="215.3" y="565" width="16.8" height="15.0" fill="rgb(231,110,37)" rx="2" ry="2" />
<text  x="218.31" y="575.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (8 samples, 0.04%)</title><rect x="986.6" y="549" width="0.5" height="15.0" fill="rgb(240,49,11)" rx="2" ry="2" />
<text  x="989.61" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.02%)</title><rect x="155.4" y="533" width="0.3" height="15.0" fill="rgb(253,74,29)" rx="2" ry="2" />
<text  x="158.39" y="543.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (117 samples, 0.58%)</title><rect x="187.2" y="613" width="6.8" height="15.0" fill="rgb(243,88,17)" rx="2" ry="2" />
<text  x="190.22" y="623.5" ></text>
</g>
<g >
<title>[[stack]] (1,676 samples, 8.28%)</title><rect x="23.9" y="981" width="97.7" height="15.0" fill="rgb(218,136,51)" rx="2" ry="2" />
<text  x="26.93" y="991.5" >[[stack]]</text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (117 samples, 0.58%)</title><rect x="187.2" y="757" width="6.8" height="15.0" fill="rgb(231,133,25)" rx="2" ry="2" />
<text  x="190.22" y="767.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (288 samples, 1.42%)</title><rect x="793.6" y="421" width="16.8" height="15.0" fill="rgb(216,125,40)" rx="2" ry="2" />
<text  x="796.60" y="431.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (113 samples, 0.56%)</title><rect x="693.3" y="581" width="6.6" height="15.0" fill="rgb(234,179,34)" rx="2" ry="2" />
<text  x="696.27" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="279.4" y="645" width="0.1" height="15.0" fill="rgb(233,138,16)" rx="2" ry="2" />
<text  x="282.38" y="655.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.01%)</title><rect x="138.8" y="389" width="0.1" height="15.0" fill="rgb(243,172,38)" rx="2" ry="2" />
<text  x="141.83" y="399.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (2 samples, 0.01%)</title><rect x="27.0" y="965" width="0.1" height="15.0" fill="rgb(206,38,53)" rx="2" ry="2" />
<text  x="30.02" y="975.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (440 samples, 2.17%)</title><rect x="161.5" y="757" width="25.7" height="15.0" fill="rgb(245,203,23)" rx="2" ry="2" />
<text  x="164.51" y="767.5" >s..</text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (86 samples, 0.42%)</title><rect x="198.0" y="677" width="5.0" height="15.0" fill="rgb(247,168,11)" rx="2" ry="2" />
<text  x="201.00" y="687.5" ></text>
</g>
<g >
<title>operator new (97 samples, 0.48%)</title><rect x="991.0" y="693" width="5.6" height="15.0" fill="rgb(218,163,18)" rx="2" ry="2" />
<text  x="993.98" y="703.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (14,639 samples, 72.32%)</title><rect x="287.8" y="789" width="853.4" height="15.0" fill="rgb(241,50,53)" rx="2" ry="2" />
<text  x="290.83" y="799.5" >Game_Interpreter::Update</text>
</g>
<g >
<title>Transition::IsErased (2 samples, 0.01%)</title><rect x="39.2" y="965" width="0.1" height="15.0" fill="rgb(226,149,18)" rx="2" ry="2" />
<text  x="42.21" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::end (14 samples, 0.07%)</title><rect x="811.1" y="437" width="0.8" height="15.0" fill="rgb(220,185,11)" rx="2" ry="2" />
<text  x="814.08" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_left (12 samples, 0.06%)</title><rect x="792.4" y="421" width="0.7" height="15.0" fill="rgb(245,225,44)" rx="2" ry="2" />
<text  x="795.43" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (2 samples, 0.01%)</title><rect x="748.8" y="613" width="0.1" height="15.0" fill="rgb(224,170,28)" rx="2" ry="2" />
<text  x="751.83" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_right (12 samples, 0.06%)</title><rect x="670.5" y="629" width="0.7" height="15.0" fill="rgb(236,9,15)" rx="2" ry="2" />
<text  x="673.54" y="639.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (62 samples, 0.31%)</title><rect x="203.3" y="309" width="3.6" height="15.0" fill="rgb(246,37,28)" rx="2" ry="2" />
<text  x="206.31" y="319.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_weak_release (13 samples, 0.06%)</title><rect x="937.2" y="485" width="0.7" height="15.0" fill="rgb(213,150,7)" rx="2" ry="2" />
<text  x="940.18" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (4 samples, 0.02%)</title><rect x="1143.0" y="789" width="0.2" height="15.0" fill="rgb(209,138,44)" rx="2" ry="2" />
<text  x="1145.96" y="799.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, FileRequestResult*&amp;&amp;&gt;::_Tuple_impl&lt;FileRequestResult*&gt; (6 samples, 0.03%)</title><rect x="923.8" y="565" width="0.4" height="15.0" fill="rgb(212,15,18)" rx="2" ry="2" />
<text  x="926.83" y="575.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (136 samples, 0.67%)</title><rect x="132.0" y="453" width="7.9" height="15.0" fill="rgb(226,70,41)" rx="2" ry="2" />
<text  x="134.95" y="463.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (34 samples, 0.17%)</title><rect x="168.5" y="453" width="2.0" height="15.0" fill="rgb(251,3,28)" rx="2" ry="2" />
<text  x="171.50" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::operator[] (8 samples, 0.04%)</title><rect x="118.3" y="965" width="0.4" height="15.0" fill="rgb(227,154,42)" rx="2" ry="2" />
<text  x="121.25" y="975.5" ></text>
</g>
<g >
<title>vfs_write (11 samples, 0.05%)</title><rect x="23.1" y="917" width="0.6" height="15.0" fill="rgb(209,218,16)" rx="2" ry="2" />
<text  x="26.06" y="927.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (5 samples, 0.02%)</title><rect x="970.8" y="629" width="0.2" height="15.0" fill="rgb(228,227,4)" rx="2" ry="2" />
<text  x="973.75" y="639.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (281 samples, 1.39%)</title><rect x="215.7" y="533" width="16.4" height="15.0" fill="rgb(224,185,21)" rx="2" ry="2" />
<text  x="218.72" y="543.5" ></text>
</g>
<g >
<title>SDLAudioP2 (237 samples, 1.17%)</title><rect x="10.0" y="997" width="13.8" height="15.0" fill="rgb(207,34,37)" rx="2" ry="2" />
<text  x="13.00" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (44 samples, 0.22%)</title><rect x="194.4" y="357" width="2.6" height="15.0" fill="rgb(241,204,29)" rx="2" ry="2" />
<text  x="197.39" y="367.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.03%)</title><rect x="202.5" y="293" width="0.5" height="15.0" fill="rgb(210,52,0)" rx="2" ry="2" />
<text  x="205.55" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::new_allocator (4 samples, 0.02%)</title><rect x="53.1" y="965" width="0.2" height="15.0" fill="rgb(221,4,50)" rx="2" ry="2" />
<text  x="56.08" y="975.5" ></text>
</g>
<g >
<title>std::min&lt;int&gt; (3 samples, 0.01%)</title><rect x="1050.4" y="741" width="0.2" height="15.0" fill="rgb(210,50,52)" rx="2" ry="2" />
<text  x="1053.38" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_Rb_tree_iterator (2 samples, 0.01%)</title><rect x="793.5" y="421" width="0.1" height="15.0" fill="rgb(208,200,53)" rx="2" ry="2" />
<text  x="796.48" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char32_t&gt; &gt;::deallocate (10 samples, 0.05%)</title><rect x="986.5" y="629" width="0.6" height="15.0" fill="rgb(249,20,28)" rx="2" ry="2" />
<text  x="989.49" y="639.5" ></text>
</g>
<g >
<title>Utils::EncodeUTF (4 samples, 0.02%)</title><rect x="987.2" y="709" width="0.2" height="15.0" fill="rgb(217,61,33)" rx="2" ry="2" />
<text  x="990.19" y="719.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (16 samples, 0.08%)</title><rect x="973.1" y="613" width="1.0" height="15.0" fill="rgb(236,24,44)" rx="2" ry="2" />
<text  x="976.14" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*, std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt; &gt;::__normal_iterator (2 samples, 0.01%)</title><rect x="938.1" y="629" width="0.1" height="15.0" fill="rgb(243,178,27)" rx="2" ry="2" />
<text  x="941.11" y="639.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_destroy (25 samples, 0.12%)</title><rect x="256.9" y="405" width="1.5" height="15.0" fill="rgb(253,51,38)" rx="2" ry="2" />
<text  x="259.94" y="415.5" ></text>
</g>
<g >
<title>Player::IsRPG2k (2 samples, 0.01%)</title><rect x="36.8" y="965" width="0.1" height="15.0" fill="rgb(232,74,41)" rx="2" ry="2" />
<text  x="39.82" y="975.5" ></text>
</g>
<g >
<title>finish_task_switch (66 samples, 0.33%)</title><rect x="17.6" y="837" width="3.9" height="15.0" fill="rgb(231,164,19)" rx="2" ry="2" />
<text  x="20.64" y="847.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (23 samples, 0.11%)</title><rect x="741.9" y="597" width="1.4" height="15.0" fill="rgb(251,117,43)" rx="2" ry="2" />
<text  x="744.95" y="607.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (117 samples, 0.58%)</title><rect x="187.2" y="677" width="6.8" height="15.0" fill="rgb(212,17,45)" rx="2" ry="2" />
<text  x="190.22" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="995.5" y="613" width="0.3" height="15.0" fill="rgb(229,57,15)" rx="2" ry="2" />
<text  x="998.53" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create@plt (10 samples, 0.05%)</title><rect x="996.9" y="693" width="0.6" height="15.0" fill="rgb(252,80,31)" rx="2" ry="2" />
<text  x="999.87" y="703.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (422 samples, 2.08%)</title><rect x="759.6" y="469" width="24.6" height="15.0" fill="rgb(210,224,33)" rx="2" ry="2" />
<text  x="762.55" y="479.5" >A..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, bool&gt;::_M_head (3 samples, 0.01%)</title><rect x="797.8" y="325" width="0.2" height="15.0" fill="rgb(211,136,52)" rx="2" ry="2" />
<text  x="800.79" y="335.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 3ul, 3ul&gt;::__less (2 samples, 0.01%)</title><rect x="797.4" y="341" width="0.2" height="15.0" fill="rgb(216,27,8)" rx="2" ry="2" />
<text  x="800.44" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (23 samples, 0.11%)</title><rect x="480.4" y="661" width="1.4" height="15.0" fill="rgb(213,62,54)" rx="2" ry="2" />
<text  x="483.44" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (132 samples, 0.65%)</title><rect x="16.0" y="965" width="7.7" height="15.0" fill="rgb(254,206,54)" rx="2" ry="2" />
<text  x="19.00" y="975.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::_Vector_impl::~_Vector_impl (5 samples, 0.02%)</title><rect x="919.4" y="309" width="0.3" height="15.0" fill="rgb(231,221,17)" rx="2" ry="2" />
<text  x="922.40" y="319.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (500 samples, 2.47%)</title><rect x="239.1" y="709" width="29.1" height="15.0" fill="rgb(252,6,24)" rx="2" ry="2" />
<text  x="242.10" y="719.5" >Ga..</text>
</g>
<g >
<title>TilemapSubLayer::Draw (2 samples, 0.01%)</title><rect x="278.9" y="821" width="0.1" height="15.0" fill="rgb(226,219,52)" rx="2" ry="2" />
<text  x="281.85" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_ptr (3 samples, 0.01%)</title><rect x="791.8" y="389" width="0.2" height="15.0" fill="rgb(233,18,18)" rx="2" ry="2" />
<text  x="794.85" y="399.5" ></text>
</g>
<g >
<title>Scene_Map::AsyncNext&lt;Scene_Map::UpdateStage1(MapUpdateAsyncContext)::{lambda()#2}&gt; (6 samples, 0.03%)</title><rect x="1177.9" y="837" width="0.3" height="15.0" fill="rgb(213,9,29)" rx="2" ry="2" />
<text  x="1180.87" y="847.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate (2 samples, 0.01%)</title><rect x="239.1" y="565" width="0.1" height="15.0" fill="rgb(234,142,54)" rx="2" ry="2" />
<text  x="242.10" y="575.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::_Placeholder&lt;1&gt; &gt;::_M_head (3 samples, 0.01%)</title><rect x="75.3" y="965" width="0.2" height="15.0" fill="rgb(213,129,46)" rx="2" ry="2" />
<text  x="78.29" y="975.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (26 samples, 0.13%)</title><rect x="951.7" y="501" width="1.5" height="15.0" fill="rgb(223,36,29)" rx="2" ry="2" />
<text  x="954.69" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (201 samples, 0.99%)</title><rect x="218.5" y="501" width="11.7" height="15.0" fill="rgb(234,158,18)" rx="2" ry="2" />
<text  x="221.46" y="511.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (18 samples, 0.09%)</title><rect x="232.7" y="565" width="1.0" height="15.0" fill="rgb(212,30,52)" rx="2" ry="2" />
<text  x="235.69" y="575.5" ></text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;int&gt;, true&gt;::_Sp_ebo_helper (2 samples, 0.01%)</title><rect x="692.0" y="565" width="0.2" height="15.0" fill="rgb(226,174,8)" rx="2" ry="2" />
<text  x="695.05" y="575.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.05%)</title><rect x="174.1" y="485" width="0.6" height="15.0" fill="rgb(223,162,45)" rx="2" ry="2" />
<text  x="177.10" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (154 samples, 0.76%)</title><rect x="927.6" y="453" width="8.9" height="15.0" fill="rgb(228,160,12)" rx="2" ry="2" />
<text  x="930.56" y="463.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (101 samples, 0.50%)</title><rect x="188.1" y="501" width="5.9" height="15.0" fill="rgb(230,152,48)" rx="2" ry="2" />
<text  x="191.15" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (885 samples, 4.37%)</title><rect x="368.8" y="757" width="51.6" height="15.0" fill="rgb(247,169,19)" rx="2" ry="2" />
<text  x="371.80" y="767.5" >std::..</text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_M_head (3 samples, 0.01%)</title><rect x="815.4" y="341" width="0.2" height="15.0" fill="rgb(245,22,45)" rx="2" ry="2" />
<text  x="818.40" y="351.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (8 samples, 0.04%)</title><rect x="1172.3" y="693" width="0.4" height="15.0" fill="rgb(247,155,45)" rx="2" ry="2" />
<text  x="1175.28" y="703.5" ></text>
</g>
<g >
<title>Game_Picture::Show (6,007 samples, 29.68%)</title><rect x="629.0" y="725" width="350.2" height="15.0" fill="rgb(216,61,50)" rx="2" ry="2" />
<text  x="632.03" y="735.5" >Game_Picture::Show</text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (2 samples, 0.01%)</title><rect x="887.6" y="469" width="0.1" height="15.0" fill="rgb(244,8,39)" rx="2" ry="2" />
<text  x="890.57" y="479.5" ></text>
</g>
<g >
<title>Game_Map::Update (500 samples, 2.47%)</title><rect x="239.1" y="837" width="29.1" height="15.0" fill="rgb(215,154,51)" rx="2" ry="2" />
<text  x="242.10" y="847.5" >Ga..</text>
</g>
<g >
<title>error_entry (3 samples, 0.01%)</title><rect x="137.1" y="389" width="0.2" height="15.0" fill="rgb(216,189,38)" rx="2" ry="2" />
<text  x="140.14" y="399.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (8 samples, 0.04%)</title><rect x="1180.2" y="373" width="0.5" height="15.0" fill="rgb(219,166,1)" rx="2" ry="2" />
<text  x="1183.21" y="383.5" ></text>
</g>
<g >
<title>Bitmap::height (2 samples, 0.01%)</title><rect x="961.0" y="677" width="0.1" height="15.0" fill="rgb(224,121,19)" rx="2" ry="2" />
<text  x="963.96" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator bool (4 samples, 0.02%)</title><rect x="922.4" y="485" width="0.2" height="15.0" fill="rgb(230,133,40)" rx="2" ry="2" />
<text  x="925.37" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_key (39 samples, 0.19%)</title><rect x="668.1" y="629" width="2.3" height="15.0" fill="rgb(224,113,30)" rx="2" ry="2" />
<text  x="671.09" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator bool (2 samples, 0.01%)</title><rect x="112.3" y="965" width="0.1" height="15.0" fill="rgb(216,228,42)" rx="2" ry="2" />
<text  x="115.31" y="975.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandJumpToLabel (81 samples, 0.40%)</title><rect x="610.3" y="741" width="4.7" height="15.0" fill="rgb(236,163,23)" rx="2" ry="2" />
<text  x="613.32" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (2 samples, 0.01%)</title><rect x="421.6" y="741" width="0.1" height="15.0" fill="rgb(211,154,7)" rx="2" ry="2" />
<text  x="424.62" y="751.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (354 samples, 1.75%)</title><rect x="213.1" y="805" width="20.6" height="15.0" fill="rgb(238,219,21)" rx="2" ry="2" />
<text  x="216.10" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (2 samples, 0.01%)</title><rect x="463.7" y="693" width="0.1" height="15.0" fill="rgb(244,61,25)" rx="2" ry="2" />
<text  x="466.71" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::~vector (2 samples, 0.01%)</title><rect x="120.8" y="965" width="0.1" height="15.0" fill="rgb(244,97,32)" rx="2" ry="2" />
<text  x="123.76" y="975.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (170 samples, 0.84%)</title><rect x="132.0" y="741" width="9.9" height="15.0" fill="rgb(226,121,37)" rx="2" ry="2" />
<text  x="134.95" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt; (3 samples, 0.01%)</title><rect x="1147.6" y="757" width="0.2" height="15.0" fill="rgb(213,158,20)" rx="2" ry="2" />
<text  x="1150.62" y="767.5" ></text>
</g>
<g >
<title>malloc (15 samples, 0.07%)</title><rect x="139.9" y="485" width="0.9" height="15.0" fill="rgb(214,114,50)" rx="2" ry="2" />
<text  x="142.88" y="495.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (170 samples, 0.84%)</title><rect x="132.0" y="629" width="9.9" height="15.0" fill="rgb(251,222,32)" rx="2" ry="2" />
<text  x="134.95" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (12 samples, 0.06%)</title><rect x="378.0" y="741" width="0.7" height="15.0" fill="rgb(252,59,26)" rx="2" ry="2" />
<text  x="381.01" y="751.5" ></text>
</g>
<g >
<title>_XEventsQueued (5 samples, 0.02%)</title><rect x="1182.3" y="789" width="0.3" height="15.0" fill="rgb(227,21,27)" rx="2" ry="2" />
<text  x="1185.31" y="799.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (105 samples, 0.52%)</title><rect x="207.0" y="661" width="6.1" height="15.0" fill="rgb(241,218,25)" rx="2" ry="2" />
<text  x="209.98" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="1182.4" y="645" width="0.2" height="15.0" fill="rgb(222,22,51)" rx="2" ry="2" />
<text  x="1185.36" y="655.5" ></text>
</g>
<g >
<title>__sched_text_start (7 samples, 0.03%)</title><rect x="1055.0" y="677" width="0.4" height="15.0" fill="rgb(233,122,18)" rx="2" ry="2" />
<text  x="1057.99" y="687.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (3 samples, 0.01%)</title><rect x="28.8" y="965" width="0.2" height="15.0" fill="rgb(235,172,11)" rx="2" ry="2" />
<text  x="31.83" y="975.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Sprite*, false&gt;::_M_head (8 samples, 0.04%)</title><rect x="64.3" y="965" width="0.5" height="15.0" fill="rgb(208,69,10)" rx="2" ry="2" />
<text  x="67.33" y="975.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Player, std::default_delete&lt;Game_Player&gt; &gt;::operator (2 samples, 0.01%)</title><rect x="110.0" y="965" width="0.2" height="15.0" fill="rgb(233,201,24)" rx="2" ry="2" />
<text  x="113.03" y="975.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="1102.4" y="741" width="0.1" height="15.0" fill="rgb(229,103,53)" rx="2" ry="2" />
<text  x="1105.38" y="751.5" ></text>
</g>
<g >
<title>Tilemap::SetTone (2 samples, 0.01%)</title><rect x="1178.6" y="821" width="0.1" height="15.0" fill="rgb(231,172,7)" rx="2" ry="2" />
<text  x="1181.63" y="831.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (3 samples, 0.01%)</title><rect x="1169.8" y="741" width="0.1" height="15.0" fill="rgb(239,191,48)" rx="2" ry="2" />
<text  x="1172.77" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char32_t&gt;::allocate (3 samples, 0.01%)</title><rect x="987.4" y="597" width="0.2" height="15.0" fill="rgb(234,116,25)" rx="2" ry="2" />
<text  x="990.43" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (7 samples, 0.03%)</title><rect x="212.7" y="245" width="0.4" height="15.0" fill="rgb(212,31,31)" rx="2" ry="2" />
<text  x="215.69" y="255.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="239.1" y="533" width="0.1" height="15.0" fill="rgb(244,219,8)" rx="2" ry="2" />
<text  x="242.10" y="543.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (86 samples, 0.42%)</title><rect x="198.0" y="661" width="5.0" height="15.0" fill="rgb(224,109,4)" rx="2" ry="2" />
<text  x="201.00" y="671.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned (2 samples, 0.01%)</title><rect x="745.3" y="597" width="0.1" height="15.0" fill="rgb(230,90,40)" rx="2" ry="2" />
<text  x="748.27" y="607.5" ></text>
</g>
<g >
<title>pixman_image_composite32@plt (2 samples, 0.01%)</title><rect x="857.8" y="453" width="0.1" height="15.0" fill="rgb(218,93,42)" rx="2" ry="2" />
<text  x="860.78" y="463.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (3 samples, 0.01%)</title><rect x="796.3" y="357" width="0.2" height="15.0" fill="rgb(205,80,45)" rx="2" ry="2" />
<text  x="799.34" y="367.5" ></text>
</g>
<g >
<title>__vm_munmap (3 samples, 0.01%)</title><rect x="986.9" y="437" width="0.2" height="15.0" fill="rgb(249,16,2)" rx="2" ry="2" />
<text  x="989.90" y="447.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (201 samples, 0.99%)</title><rect x="860.2" y="453" width="11.7" height="15.0" fill="rgb(207,228,39)" rx="2" ry="2" />
<text  x="863.17" y="463.5" ></text>
</g>
<g >
<title>Bitmap::GetRect (26 samples, 0.13%)</title><rect x="897.6" y="469" width="1.5" height="15.0" fill="rgb(221,46,29)" rx="2" ry="2" />
<text  x="900.59" y="479.5" ></text>
</g>
<g >
<title>writev (2 samples, 0.01%)</title><rect x="279.4" y="709" width="0.1" height="15.0" fill="rgb(223,204,48)" rx="2" ry="2" />
<text  x="282.38" y="719.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.01%)</title><rect x="149.9" y="357" width="0.1" height="15.0" fill="rgb(208,56,6)" rx="2" ry="2" />
<text  x="152.91" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (117 samples, 0.58%)</title><rect x="175.0" y="549" width="6.9" height="15.0" fill="rgb(227,83,10)" rx="2" ry="2" />
<text  x="178.03" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (82 samples, 0.41%)</title><rect x="710.3" y="613" width="4.8" height="15.0" fill="rgb(234,61,16)" rx="2" ry="2" />
<text  x="713.29" y="623.5" ></text>
</g>
<g >
<title>Drawable::GetPriorityForMapLayer (6 samples, 0.03%)</title><rect x="962.7" y="693" width="0.4" height="15.0" fill="rgb(254,195,0)" rx="2" ry="2" />
<text  x="965.71" y="703.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (3 samples, 0.01%)</title><rect x="920.6" y="453" width="0.1" height="15.0" fill="rgb(241,205,52)" rx="2" ry="2" />
<text  x="923.56" y="463.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (59 samples, 0.29%)</title><rect x="268.7" y="629" width="3.5" height="15.0" fill="rgb(239,49,37)" rx="2" ry="2" />
<text  x="271.71" y="639.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (18 samples, 0.09%)</title><rect x="214.3" y="501" width="1.0" height="15.0" fill="rgb(233,20,48)" rx="2" ry="2" />
<text  x="217.26" y="511.5" ></text>
</g>
<g >
<title>__interceptor_free (32 samples, 0.16%)</title><rect x="270.3" y="325" width="1.9" height="15.0" fill="rgb(252,221,25)" rx="2" ry="2" />
<text  x="273.29" y="335.5" ></text>
</g>
<g >
<title>Cache::Picture (6 samples, 0.03%)</title><rect x="194.0" y="517" width="0.4" height="15.0" fill="rgb(253,80,11)" rx="2" ry="2" />
<text  x="197.04" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_valptr (3 samples, 0.01%)</title><rect x="786.3" y="453" width="0.1" height="15.0" fill="rgb(208,85,54)" rx="2" ry="2" />
<text  x="789.25" y="463.5" ></text>
</g>
<g >
<title>Sprite::Draw (8 samples, 0.04%)</title><rect x="278.4" y="821" width="0.5" height="15.0" fill="rgb(249,118,25)" rx="2" ry="2" />
<text  x="281.39" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::destroy&lt;Bitmap&gt; (101 samples, 0.50%)</title><rect x="188.1" y="421" width="5.9" height="15.0" fill="rgb(208,208,30)" rx="2" ry="2" />
<text  x="191.15" y="431.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::CommonEvent&gt; (4 samples, 0.02%)</title><rect x="286.3" y="773" width="0.2" height="15.0" fill="rgb(210,136,37)" rx="2" ry="2" />
<text  x="289.26" y="783.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (2 samples, 0.01%)</title><rect x="102.0" y="965" width="0.1" height="15.0" fill="rgb(208,41,28)" rx="2" ry="2" />
<text  x="104.99" y="975.5" ></text>
</g>
<g >
<title>XFlush (2 samples, 0.01%)</title><rect x="279.4" y="805" width="0.1" height="15.0" fill="rgb(225,176,22)" rx="2" ry="2" />
<text  x="282.38" y="815.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::operator (4 samples, 0.02%)</title><rect x="737.3" y="661" width="0.2" height="15.0" fill="rgb(250,62,10)" rx="2" ry="2" />
<text  x="740.28" y="671.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::~__weak_ptr (16 samples, 0.08%)</title><rect x="937.0" y="517" width="0.9" height="15.0" fill="rgb(226,86,44)" rx="2" ry="2" />
<text  x="940.00" y="527.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (4 samples, 0.02%)</title><rect x="1050.0" y="741" width="0.3" height="15.0" fill="rgb(243,214,1)" rx="2" ry="2" />
<text  x="1053.03" y="751.5" ></text>
</g>
<g >
<title>operator!= (2 samples, 0.01%)</title><rect x="1178.3" y="805" width="0.2" height="15.0" fill="rgb(214,28,1)" rx="2" ry="2" />
<text  x="1181.34" y="815.5" ></text>
</g>
<g >
<title>Game_Screen::GetPicture (8 samples, 0.04%)</title><rect x="34.4" y="965" width="0.4" height="15.0" fill="rgb(238,47,46)" rx="2" ry="2" />
<text  x="37.37" y="975.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (109 samples, 0.54%)</title><rect x="146.6" y="741" width="6.4" height="15.0" fill="rgb(217,92,17)" rx="2" ry="2" />
<text  x="149.64" y="751.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.01%)</title><rect x="723.1" y="581" width="0.1" height="15.0" fill="rgb(207,126,8)" rx="2" ry="2" />
<text  x="726.12" y="591.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (27 samples, 0.13%)</title><rect x="137.1" y="405" width="1.6" height="15.0" fill="rgb(207,150,12)" rx="2" ry="2" />
<text  x="140.08" y="415.5" ></text>
</g>
<g >
<title>Sdl2Ui::UpdateDisplay (5 samples, 0.02%)</title><rect x="279.1" y="837" width="0.3" height="15.0" fill="rgb(222,177,32)" rx="2" ry="2" />
<text  x="282.09" y="847.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (8 samples, 0.04%)</title><rect x="995.3" y="629" width="0.5" height="15.0" fill="rgb(228,125,54)" rx="2" ry="2" />
<text  x="998.30" y="639.5" ></text>
</g>
<g >
<title>std::__find_if&lt;int const*, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (72 samples, 0.36%)</title><rect x="504.6" y="693" width="4.2" height="15.0" fill="rgb(253,47,15)" rx="2" ry="2" />
<text  x="507.63" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (25 samples, 0.12%)</title><rect x="801.6" y="341" width="1.5" height="15.0" fill="rgb(223,34,12)" rx="2" ry="2" />
<text  x="804.64" y="351.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (40 samples, 0.20%)</title><rect x="142.0" y="501" width="2.4" height="15.0" fill="rgb(224,26,20)" rx="2" ry="2" />
<text  x="145.04" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::end (10 samples, 0.05%)</title><rect x="285.7" y="741" width="0.6" height="15.0" fill="rgb(235,148,50)" rx="2" ry="2" />
<text  x="288.68" y="751.5" ></text>
</g>
<g >
<title>Sprite::Refresh (2 samples, 0.01%)</title><rect x="278.7" y="789" width="0.2" height="15.0" fill="rgb(245,63,5)" rx="2" ry="2" />
<text  x="281.74" y="799.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::begin (14 samples, 0.07%)</title><rect x="509.6" y="693" width="0.8" height="15.0" fill="rgb(254,95,6)" rx="2" ry="2" />
<text  x="512.59" y="703.5" ></text>
</g>
<g >
<title>main (500 samples, 2.47%)</title><rect x="239.1" y="949" width="29.1" height="15.0" fill="rgb(249,106,37)" rx="2" ry="2" />
<text  x="242.10" y="959.5" >main</text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (79 samples, 0.39%)</title><rect x="142.0" y="725" width="4.6" height="15.0" fill="rgb(217,227,48)" rx="2" ry="2" />
<text  x="145.04" y="735.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::_Bind (31 samples, 0.15%)</title><rect x="723.6" y="629" width="1.9" height="15.0" fill="rgb(235,105,8)" rx="2" ry="2" />
<text  x="726.64" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (5 samples, 0.02%)</title><rect x="604.2" y="661" width="0.3" height="15.0" fill="rgb(219,140,35)" rx="2" ry="2" />
<text  x="607.20" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (58 samples, 0.29%)</title><rect x="337.0" y="741" width="3.4" height="15.0" fill="rgb(225,210,54)" rx="2" ry="2" />
<text  x="340.03" y="751.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (15,416 samples, 76.16%)</title><rect x="280.6" y="853" width="898.7" height="15.0" fill="rgb(205,84,18)" rx="2" ry="2" />
<text  x="283.60" y="863.5" >Scene_Map::UpdateStage1</text>
</g>
<g >
<title>Bitmap::Init (40 samples, 0.20%)</title><rect x="142.0" y="485" width="2.4" height="15.0" fill="rgb(225,1,17)" rx="2" ry="2" />
<text  x="145.04" y="495.5" ></text>
</g>
<g >
<title>std::none_of&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, Input::UiSource::Update()::{lambda(int)#1}&gt; (6 samples, 0.03%)</title><rect x="279.5" y="821" width="0.3" height="15.0" fill="rgb(241,212,20)" rx="2" ry="2" />
<text  x="282.50" y="831.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (170 samples, 0.84%)</title><rect x="132.0" y="597" width="9.9" height="15.0" fill="rgb(211,228,17)" rx="2" ry="2" />
<text  x="134.95" y="607.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::operator[] (2 samples, 0.01%)</title><rect x="256.8" y="293" width="0.1" height="15.0" fill="rgb(234,89,36)" rx="2" ry="2" />
<text  x="259.82" y="303.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (91 samples, 0.45%)</title><rect x="181.9" y="581" width="5.3" height="15.0" fill="rgb(240,154,17)" rx="2" ry="2" />
<text  x="184.85" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (6 samples, 0.03%)</title><rect x="502.8" y="661" width="0.3" height="15.0" fill="rgb(230,219,53)" rx="2" ry="2" />
<text  x="505.76" y="671.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (20 samples, 0.10%)</title><rect x="201.8" y="485" width="1.2" height="15.0" fill="rgb(221,78,2)" rx="2" ry="2" />
<text  x="204.85" y="495.5" ></text>
</g>
<g >
<title>Window_Selectable::Update (5 samples, 0.02%)</title><rect x="1179.0" y="821" width="0.3" height="15.0" fill="rgb(243,229,25)" rx="2" ry="2" />
<text  x="1181.98" y="831.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (40 samples, 0.20%)</title><rect x="179.2" y="485" width="2.4" height="15.0" fill="rgb(231,212,9)" rx="2" ry="2" />
<text  x="182.23" y="495.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 2ul, 3ul&gt;::__less (12 samples, 0.06%)</title><rect x="812.9" y="373" width="0.7" height="15.0" fill="rgb(247,38,17)" rx="2" ry="2" />
<text  x="815.89" y="383.5" ></text>
</g>
<g >
<title>Cache::Picture (2 samples, 0.01%)</title><rect x="26.6" y="965" width="0.1" height="15.0" fill="rgb(239,170,33)" rx="2" ry="2" />
<text  x="29.56" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (3 samples, 0.01%)</title><rect x="475.0" y="677" width="0.2" height="15.0" fill="rgb(208,61,47)" rx="2" ry="2" />
<text  x="478.02" y="687.5" ></text>
</g>
<g >
<title>Game_Interpreter::ValueOrVariable (3 samples, 0.01%)</title><rect x="616.1" y="725" width="0.2" height="15.0" fill="rgb(219,33,10)" rx="2" ry="2" />
<text  x="619.15" y="735.5" ></text>
</g>
<g >
<title>Scene::GetRequestedScene (78 samples, 0.39%)</title><rect x="1121.3" y="757" width="4.5" height="15.0" fill="rgb(227,200,29)" rx="2" ry="2" />
<text  x="1124.27" y="767.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.01%)</title><rect x="149.9" y="373" width="0.1" height="15.0" fill="rgb(237,78,10)" rx="2" ry="2" />
<text  x="152.91" y="383.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (6 samples, 0.03%)</title><rect x="700.8" y="629" width="0.4" height="15.0" fill="rgb(213,210,9)" rx="2" ry="2" />
<text  x="703.85" y="639.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (8 samples, 0.04%)</title><rect x="1180.2" y="421" width="0.5" height="15.0" fill="rgb(223,137,32)" rx="2" ry="2" />
<text  x="1183.21" y="431.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (500 samples, 2.47%)</title><rect x="239.1" y="773" width="29.1" height="15.0" fill="rgb(234,216,39)" rx="2" ry="2" />
<text  x="242.10" y="783.5" >Ga..</text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (354 samples, 1.75%)</title><rect x="213.1" y="661" width="20.6" height="15.0" fill="rgb(243,3,8)" rx="2" ry="2" />
<text  x="216.10" y="671.5" ></text>
</g>
<g >
<title>alloc_pages_vma (10 samples, 0.05%)</title><rect x="137.7" y="309" width="0.5" height="15.0" fill="rgb(209,138,23)" rx="2" ry="2" />
<text  x="140.67" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (4 samples, 0.02%)</title><rect x="15.8" y="981" width="0.2" height="15.0" fill="rgb(246,139,23)" rx="2" ry="2" />
<text  x="18.77" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (31 samples, 0.15%)</title><rect x="512.1" y="709" width="1.9" height="15.0" fill="rgb(212,196,46)" rx="2" ry="2" />
<text  x="515.15" y="719.5" ></text>
</g>
<g >
<title>Bitmap::~Bitmap (32 samples, 0.16%)</title><rect x="270.3" y="373" width="1.9" height="15.0" fill="rgb(212,51,14)" rx="2" ry="2" />
<text  x="273.29" y="383.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (23 samples, 0.11%)</title><rect x="933.4" y="405" width="1.4" height="15.0" fill="rgb(213,213,1)" rx="2" ry="2" />
<text  x="936.45" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base (21 samples, 0.10%)</title><rect x="658.9" y="629" width="1.2" height="15.0" fill="rgb(254,12,34)" rx="2" ry="2" />
<text  x="661.88" y="639.5" ></text>
</g>
<g >
<title>Game_Map::SetNeedRefresh (3 samples, 0.01%)</title><rect x="546.4" y="725" width="0.1" height="15.0" fill="rgb(250,49,18)" rx="2" ry="2" />
<text  x="549.37" y="735.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (440 samples, 2.17%)</title><rect x="161.5" y="965" width="25.7" height="15.0" fill="rgb(228,156,9)" rx="2" ry="2" />
<text  x="164.51" y="975.5" >G..</text>
</g>
<g >
<title>std::__iterator_category&lt;int const*&gt; (2 samples, 0.01%)</title><rect x="508.8" y="693" width="0.1" height="15.0" fill="rgb(233,125,17)" rx="2" ry="2" />
<text  x="511.83" y="703.5" ></text>
</g>
<g >
<title>Bitmap::Create (79 samples, 0.39%)</title><rect x="142.0" y="645" width="4.6" height="15.0" fill="rgb(231,24,16)" rx="2" ry="2" />
<text  x="145.04" y="655.5" ></text>
</g>
<g >
<title>Tone::Tone (6 samples, 0.03%)</title><rect x="877.9" y="453" width="0.3" height="15.0" fill="rgb(224,111,38)" rx="2" ry="2" />
<text  x="880.89" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (2 samples, 0.01%)</title><rect x="1003.9" y="725" width="0.1" height="15.0" fill="rgb(247,120,36)" rx="2" ry="2" />
<text  x="1006.92" y="735.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (17 samples, 0.08%)</title><rect x="131.0" y="901" width="1.0" height="15.0" fill="rgb(248,163,38)" rx="2" ry="2" />
<text  x="133.96" y="911.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (15 samples, 0.07%)</title><rect x="139.9" y="437" width="0.9" height="15.0" fill="rgb(215,140,40)" rx="2" ry="2" />
<text  x="142.88" y="447.5" ></text>
</g>
<g >
<title>std::make_pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt;&amp;&gt; (6 samples, 0.03%)</title><rect x="101.5" y="965" width="0.4" height="15.0" fill="rgb(230,222,18)" rx="2" ry="2" />
<text  x="104.52" y="975.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (4 samples, 0.02%)</title><rect x="1167.9" y="773" width="0.2" height="15.0" fill="rgb(238,227,1)" rx="2" ry="2" />
<text  x="1170.91" y="783.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingForegroundExecution (3 samples, 0.01%)</title><rect x="28.7" y="965" width="0.1" height="15.0" fill="rgb(241,49,11)" rx="2" ry="2" />
<text  x="31.65" y="975.5" ></text>
</g>
<g >
<title>Bitmap::Create (52 samples, 0.26%)</title><rect x="253.9" y="469" width="3.0" height="15.0" fill="rgb(239,55,25)" rx="2" ry="2" />
<text  x="256.90" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (91 samples, 0.45%)</title><rect x="181.9" y="485" width="5.3" height="15.0" fill="rgb(219,82,11)" rx="2" ry="2" />
<text  x="184.85" y="495.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (29 samples, 0.14%)</title><rect x="972.4" y="645" width="1.7" height="15.0" fill="rgb(235,34,3)" rx="2" ry="2" />
<text  x="975.39" y="655.5" ></text>
</g>
<g >
<title>pipe_write (2 samples, 0.01%)</title><rect x="23.5" y="869" width="0.1" height="15.0" fill="rgb(231,225,28)" rx="2" ry="2" />
<text  x="26.52" y="879.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (4 samples, 0.02%)</title><rect x="88.9" y="965" width="0.3" height="15.0" fill="rgb(248,23,39)" rx="2" ry="2" />
<text  x="91.93" y="975.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (2 samples, 0.01%)</title><rect x="687.7" y="597" width="0.2" height="15.0" fill="rgb(234,161,21)" rx="2" ry="2" />
<text  x="690.73" y="607.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (117 samples, 0.58%)</title><rect x="175.0" y="597" width="6.9" height="15.0" fill="rgb(241,1,24)" rx="2" ry="2" />
<text  x="178.03" y="607.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (109 samples, 0.54%)</title><rect x="146.6" y="725" width="6.4" height="15.0" fill="rgb(254,50,8)" rx="2" ry="2" />
<text  x="149.64" y="735.5" ></text>
</g>
<g >
<title>std::__find_if&lt;int const*, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (50 samples, 0.25%)</title><rect x="505.9" y="677" width="2.9" height="15.0" fill="rgb(250,70,42)" rx="2" ry="2" />
<text  x="508.85" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_S_left (2 samples, 0.01%)</title><rect x="210.5" y="325" width="0.2" height="15.0" fill="rgb(239,48,30)" rx="2" ry="2" />
<text  x="213.53" y="335.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (29 samples, 0.14%)</title><rect x="153.6" y="485" width="1.7" height="15.0" fill="rgb(207,100,17)" rx="2" ry="2" />
<text  x="156.58" y="495.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (5 samples, 0.02%)</title><rect x="938.2" y="661" width="0.3" height="15.0" fill="rgb(243,208,23)" rx="2" ry="2" />
<text  x="941.23" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (5 samples, 0.02%)</title><rect x="1132.9" y="773" width="0.3" height="15.0" fill="rgb(254,203,34)" rx="2" ry="2" />
<text  x="1135.93" y="783.5" ></text>
</g>
<g >
<title>Scene::GetRequestedScene (3 samples, 0.01%)</title><rect x="37.4" y="965" width="0.2" height="15.0" fill="rgb(213,5,40)" rx="2" ry="2" />
<text  x="40.40" y="975.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (86 samples, 0.42%)</title><rect x="198.0" y="821" width="5.0" height="15.0" fill="rgb(235,96,48)" rx="2" ry="2" />
<text  x="201.00" y="831.5" ></text>
</g>
<g >
<title>Cache::Picture (5 samples, 0.02%)</title><rect x="203.0" y="549" width="0.3" height="15.0" fill="rgb(207,108,20)" rx="2" ry="2" />
<text  x="206.01" y="559.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__weak_ptr&lt;int, void&gt; (13 samples, 0.06%)</title><rect x="706.5" y="645" width="0.8" height="15.0" fill="rgb(252,179,28)" rx="2" ry="2" />
<text  x="709.50" y="655.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (8 samples, 0.04%)</title><rect x="86.9" y="965" width="0.5" height="15.0" fill="rgb(221,11,20)" rx="2" ry="2" />
<text  x="89.95" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt; &gt; &gt; &gt; (3 samples, 0.01%)</title><rect x="1175.8" y="805" width="0.2" height="15.0" fill="rgb(233,215,1)" rx="2" ry="2" />
<text  x="1178.83" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_addr (2 samples, 0.01%)</title><rect x="665.9" y="629" width="0.1" height="15.0" fill="rgb(215,203,9)" rx="2" ry="2" />
<text  x="668.87" y="639.5" ></text>
</g>
<g >
<title>Rect::Rect (8 samples, 0.04%)</title><rect x="898.6" y="453" width="0.5" height="15.0" fill="rgb(227,133,7)" rx="2" ry="2" />
<text  x="901.64" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_Rb_tree_iterator (3 samples, 0.01%)</title><rect x="677.9" y="629" width="0.2" height="15.0" fill="rgb(235,9,11)" rx="2" ry="2" />
<text  x="680.88" y="639.5" ></text>
</g>
<g >
<title>Graphics::Update (21 samples, 0.10%)</title><rect x="278.3" y="869" width="1.2" height="15.0" fill="rgb(252,28,11)" rx="2" ry="2" />
<text  x="281.27" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (3 samples, 0.01%)</title><rect x="763.4" y="405" width="0.2" height="15.0" fill="rgb(244,46,14)" rx="2" ry="2" />
<text  x="766.40" y="415.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (498 samples, 2.46%)</title><rect x="239.2" y="613" width="29.0" height="15.0" fill="rgb(254,228,0)" rx="2" ry="2" />
<text  x="242.21" y="623.5" >st..</text>
</g>
<g >
<title>FileRequestAsync::Start (59 samples, 0.29%)</title><rect x="268.7" y="709" width="3.5" height="15.0" fill="rgb(213,192,11)" rx="2" ry="2" />
<text  x="271.71" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (12 samples, 0.06%)</title><rect x="1133.2" y="773" width="0.7" height="15.0" fill="rgb(220,164,23)" rx="2" ry="2" />
<text  x="1136.22" y="783.5" ></text>
</g>
<g >
<title>pixman_image_unref (189 samples, 0.93%)</title><rect x="907.7" y="341" width="11.0" height="15.0" fill="rgb(206,205,13)" rx="2" ry="2" />
<text  x="910.68" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_M_lower_bound (359 samples, 1.77%)</title><rect x="789.6" y="437" width="21.0" height="15.0" fill="rgb(209,138,4)" rx="2" ry="2" />
<text  x="792.63" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (5 samples, 0.02%)</title><rect x="155.4" y="549" width="0.3" height="15.0" fill="rgb(210,208,43)" rx="2" ry="2" />
<text  x="158.39" y="559.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::swap (18 samples, 0.09%)</title><rect x="942.4" y="661" width="1.1" height="15.0" fill="rgb(240,59,20)" rx="2" ry="2" />
<text  x="945.42" y="671.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (29 samples, 0.14%)</title><rect x="920.0" y="485" width="1.7" height="15.0" fill="rgb(216,183,31)" rx="2" ry="2" />
<text  x="922.98" y="495.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (144 samples, 0.71%)</title><rect x="725.8" y="661" width="8.4" height="15.0" fill="rgb(231,12,42)" rx="2" ry="2" />
<text  x="728.80" y="671.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (17 samples, 0.08%)</title><rect x="92.7" y="965" width="1.0" height="15.0" fill="rgb(217,157,34)" rx="2" ry="2" />
<text  x="95.66" y="975.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (2 samples, 0.01%)</title><rect x="75.2" y="965" width="0.1" height="15.0" fill="rgb(213,31,43)" rx="2" ry="2" />
<text  x="78.17" y="975.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (117 samples, 0.58%)</title><rect x="187.2" y="725" width="6.8" height="15.0" fill="rgb(244,32,30)" rx="2" ry="2" />
<text  x="190.22" y="735.5" ></text>
</g>
<g >
<title>Game_Player::Update (33 samples, 0.16%)</title><rect x="1145.9" y="821" width="2.0" height="15.0" fill="rgb(223,149,2)" rx="2" ry="2" />
<text  x="1148.93" y="831.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt;::_M_head (7 samples, 0.03%)</title><rect x="73.5" y="965" width="0.4" height="15.0" fill="rgb(226,66,15)" rx="2" ry="2" />
<text  x="76.54" y="975.5" ></text>
</g>
<g >
<title>std::__weak_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__weak_count (2 samples, 0.01%)</title><rect x="91.4" y="965" width="0.2" height="15.0" fill="rgb(235,209,28)" rx="2" ry="2" />
<text  x="94.44" y="975.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;BaseUi, (__gnu_cxx::_Lock_policy)2&gt;::get (6 samples, 0.03%)</title><rect x="787.5" y="437" width="0.4" height="15.0" fill="rgb(208,211,11)" rx="2" ry="2" />
<text  x="790.53" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (4 samples, 0.02%)</title><rect x="275.9" y="965" width="0.3" height="15.0" fill="rgb(237,20,4)" rx="2" ry="2" />
<text  x="278.94" y="975.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustParams (11 samples, 0.05%)</title><rect x="985.3" y="709" width="0.6" height="15.0" fill="rgb(253,145,8)" rx="2" ry="2" />
<text  x="988.27" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_create (5 samples, 0.02%)</title><rect x="986.1" y="661" width="0.3" height="15.0" fill="rgb(246,211,33)" rx="2" ry="2" />
<text  x="989.09" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.03%)</title><rect x="699.3" y="453" width="0.4" height="15.0" fill="rgb(245,140,25)" rx="2" ry="2" />
<text  x="702.28" y="463.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (354 samples, 1.75%)</title><rect x="213.1" y="677" width="20.6" height="15.0" fill="rgb(241,188,11)" rx="2" ry="2" />
<text  x="216.10" y="687.5" ></text>
</g>
<g >
<title>std::bitset&lt;152ul&gt;::reference::reference (2 samples, 0.01%)</title><rect x="279.6" y="709" width="0.1" height="15.0" fill="rgb(226,70,23)" rx="2" ry="2" />
<text  x="282.61" y="719.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (117 samples, 0.58%)</title><rect x="187.2" y="709" width="6.8" height="15.0" fill="rgb(249,212,40)" rx="2" ry="2" />
<text  x="190.22" y="719.5" ></text>
</g>
<g >
<title>std::swap&lt;bool (*)(std::_Any_data&amp;, std::_Any_data const&amp;, std::_Manager_operation)&gt; (16 samples, 0.08%)</title><rect x="703.3" y="549" width="0.9" height="15.0" fill="rgb(221,216,42)" rx="2" ry="2" />
<text  x="706.30" y="559.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (68 samples, 0.34%)</title><rect x="194.0" y="885" width="4.0" height="15.0" fill="rgb(213,74,23)" rx="2" ry="2" />
<text  x="197.04" y="895.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (68 samples, 0.34%)</title><rect x="203.0" y="757" width="4.0" height="15.0" fill="rgb(239,96,30)" rx="2" ry="2" />
<text  x="206.01" y="767.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (117 samples, 0.58%)</title><rect x="187.2" y="549" width="6.8" height="15.0" fill="rgb(218,117,45)" rx="2" ry="2" />
<text  x="190.22" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::max_size (2 samples, 0.01%)</title><rect x="53.0" y="965" width="0.1" height="15.0" fill="rgb(246,226,16)" rx="2" ry="2" />
<text  x="55.96" y="975.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.01%)</title><rect x="815.6" y="389" width="0.2" height="15.0" fill="rgb(216,115,45)" rx="2" ry="2" />
<text  x="818.63" y="399.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (12 samples, 0.06%)</title><rect x="34.9" y="965" width="0.7" height="15.0" fill="rgb(244,41,53)" rx="2" ry="2" />
<text  x="37.89" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_right (7 samples, 0.03%)</title><rect x="781.3" y="405" width="0.4" height="15.0" fill="rgb(224,179,31)" rx="2" ry="2" />
<text  x="784.30" y="415.5" ></text>
</g>
<g >
<title>DynamicFormat::DynamicFormat (5 samples, 0.02%)</title><rect x="868.9" y="309" width="0.2" height="15.0" fill="rgb(216,49,29)" rx="2" ry="2" />
<text  x="871.85" y="319.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (4 samples, 0.02%)</title><rect x="1169.5" y="741" width="0.3" height="15.0" fill="rgb(219,50,35)" rx="2" ry="2" />
<text  x="1172.54" y="751.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (5 samples, 0.02%)</title><rect x="975.7" y="693" width="0.2" height="15.0" fill="rgb(220,27,32)" rx="2" ry="2" />
<text  x="978.65" y="703.5" ></text>
</g>
<g >
<title>[libSDL2-2.0.so.0.9.0] (48 samples, 0.24%)</title><rect x="1179.3" y="805" width="2.8" height="15.0" fill="rgb(227,100,54)" rx="2" ry="2" />
<text  x="1182.33" y="815.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (79 samples, 0.39%)</title><rect x="142.0" y="757" width="4.6" height="15.0" fill="rgb(211,57,1)" rx="2" ry="2" />
<text  x="145.04" y="767.5" ></text>
</g>
<g >
<title>Player::Run (68 samples, 0.34%)</title><rect x="194.0" y="965" width="4.0" height="15.0" fill="rgb(241,60,48)" rx="2" ry="2" />
<text  x="197.04" y="975.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator bool (2 samples, 0.01%)</title><rect x="687.7" y="613" width="0.2" height="15.0" fill="rgb(252,166,14)" rx="2" ry="2" />
<text  x="690.73" y="623.5" ></text>
</g>
<g >
<title>std::ostream::_M_insert&lt;long&gt; (2 samples, 0.01%)</title><rect x="988.2" y="709" width="0.1" height="15.0" fill="rgb(226,147,26)" rx="2" ry="2" />
<text  x="991.18" y="719.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (59 samples, 0.29%)</title><rect x="268.7" y="645" width="3.5" height="15.0" fill="rgb(237,185,50)" rx="2" ry="2" />
<text  x="271.71" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::end (4 samples, 0.02%)</title><rect x="666.1" y="661" width="0.2" height="15.0" fill="rgb(214,117,8)" rx="2" ry="2" />
<text  x="669.11" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.03%)</title><rect x="1183.8" y="965" width="0.4" height="15.0" fill="rgb(215,19,51)" rx="2" ry="2" />
<text  x="1186.76" y="975.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="208.8" y="501" width="0.2" height="15.0" fill="rgb(248,122,17)" rx="2" ry="2" />
<text  x="211.84" y="511.5" ></text>
</g>
<g >
<title>Input::UiSource::Update()::{lambda(int)#1}::operator() (2 samples, 0.01%)</title><rect x="279.6" y="741" width="0.1" height="15.0" fill="rgb(254,191,44)" rx="2" ry="2" />
<text  x="282.61" y="751.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (75 samples, 0.37%)</title><rect x="865.2" y="357" width="4.4" height="15.0" fill="rgb(229,168,47)" rx="2" ry="2" />
<text  x="868.24" y="367.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, Game_Picture*, std::_Placeholder&lt;1&gt; &gt; (2 samples, 0.01%)</title><rect x="923.5" y="581" width="0.1" height="15.0" fill="rgb(233,168,11)" rx="2" ry="2" />
<text  x="926.48" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (11 samples, 0.05%)</title><rect x="998.9" y="725" width="0.7" height="15.0" fill="rgb(226,13,18)" rx="2" ry="2" />
<text  x="1001.91" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;int&gt;::_M_ptr (2 samples, 0.01%)</title><rect x="691.9" y="549" width="0.1" height="15.0" fill="rgb(241,174,7)" rx="2" ry="2" />
<text  x="694.93" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::operator (13 samples, 0.06%)</title><rect x="112.4" y="965" width="0.8" height="15.0" fill="rgb(215,70,29)" rx="2" ry="2" />
<text  x="115.42" y="975.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (12 samples, 0.06%)</title><rect x="212.4" y="341" width="0.7" height="15.0" fill="rgb(242,24,33)" rx="2" ry="2" />
<text  x="215.40" y="351.5" ></text>
</g>
<g >
<title>operator delete@plt (4 samples, 0.02%)</title><rect x="665.1" y="677" width="0.2" height="15.0" fill="rgb(234,135,29)" rx="2" ry="2" />
<text  x="668.12" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (31 samples, 0.15%)</title><rect x="951.4" y="517" width="1.8" height="15.0" fill="rgb(237,107,31)" rx="2" ry="2" />
<text  x="954.40" y="527.5" ></text>
</g>
<g >
<title>do_mmap (5 samples, 0.02%)</title><rect x="136.8" y="309" width="0.3" height="15.0" fill="rgb(234,24,7)" rx="2" ry="2" />
<text  x="139.79" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_M_begin (3 samples, 0.01%)</title><rect x="67.5" y="965" width="0.2" height="15.0" fill="rgb(249,77,3)" rx="2" ry="2" />
<text  x="70.54" y="975.5" ></text>
</g>
<g >
<title>Tone::Tone (2 samples, 0.01%)</title><rect x="39.1" y="965" width="0.1" height="15.0" fill="rgb(218,0,25)" rx="2" ry="2" />
<text  x="42.09" y="975.5" ></text>
</g>
<g >
<title>std::_Mu&lt;std::_Placeholder&lt;1&gt;, false, true&gt;::operator()&lt;std::tuple&lt;FileRequestResult*&amp;&amp;&gt; &gt; (2 samples, 0.01%)</title><rect x="923.6" y="597" width="0.1" height="15.0" fill="rgb(217,133,54)" rx="2" ry="2" />
<text  x="926.59" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator (3 samples, 0.01%)</title><rect x="777.4" y="453" width="0.2" height="15.0" fill="rgb(246,99,45)" rx="2" ry="2" />
<text  x="780.39" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::deallocate (93 samples, 0.46%)</title><rect x="948.0" y="581" width="5.4" height="15.0" fill="rgb(240,138,44)" rx="2" ry="2" />
<text  x="951.02" y="591.5" ></text>
</g>
<g >
<title>operator delete@plt (4 samples, 0.02%)</title><rect x="824.1" y="405" width="0.2" height="15.0" fill="rgb(225,229,33)" rx="2" ry="2" />
<text  x="827.08" y="415.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (170 samples, 0.84%)</title><rect x="132.0" y="917" width="9.9" height="15.0" fill="rgb(214,92,37)" rx="2" ry="2" />
<text  x="134.95" y="927.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::get (12 samples, 0.06%)</title><rect x="1141.4" y="773" width="0.7" height="15.0" fill="rgb(248,7,35)" rx="2" ry="2" />
<text  x="1144.38" y="783.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (3 samples, 0.01%)</title><rect x="810.4" y="421" width="0.2" height="15.0" fill="rgb(247,147,9)" rx="2" ry="2" />
<text  x="813.39" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::_M_ptr (11 samples, 0.05%)</title><rect x="1142.3" y="757" width="0.7" height="15.0" fill="rgb(211,40,46)" rx="2" ry="2" />
<text  x="1145.31" y="767.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::end (3 samples, 0.01%)</title><rect x="100.5" y="965" width="0.2" height="15.0" fill="rgb(245,164,36)" rx="2" ry="2" />
<text  x="103.53" y="975.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl (7 samples, 0.03%)</title><rect x="724.9" y="581" width="0.4" height="15.0" fill="rgb(253,205,33)" rx="2" ry="2" />
<text  x="727.87" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (9 samples, 0.04%)</title><rect x="983.9" y="677" width="0.6" height="15.0" fill="rgb(215,69,48)" rx="2" ry="2" />
<text  x="986.93" y="687.5" ></text>
</g>
<g >
<title>Game_Picture::SetNonEffectParams (6 samples, 0.03%)</title><rect x="33.4" y="965" width="0.4" height="15.0" fill="rgb(219,139,17)" rx="2" ry="2" />
<text  x="36.43" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (6 samples, 0.03%)</title><rect x="477.6" y="645" width="0.4" height="15.0" fill="rgb(253,120,29)" rx="2" ry="2" />
<text  x="480.64" y="655.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (44 samples, 0.22%)</title><rect x="199.3" y="469" width="2.5" height="15.0" fill="rgb(253,171,28)" rx="2" ry="2" />
<text  x="202.28" y="479.5" ></text>
</g>
<g >
<title>operator delete (159 samples, 0.79%)</title><rect x="927.3" y="469" width="9.2" height="15.0" fill="rgb(254,2,36)" rx="2" ry="2" />
<text  x="930.27" y="479.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (15 samples, 0.07%)</title><rect x="1184.2" y="965" width="0.8" height="15.0" fill="rgb(231,154,24)" rx="2" ry="2" />
<text  x="1187.17" y="975.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;BaseUi, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (9 samples, 0.04%)</title><rect x="787.4" y="469" width="0.5" height="15.0" fill="rgb(229,58,33)" rx="2" ry="2" />
<text  x="790.36" y="479.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (20 samples, 0.10%)</title><rect x="201.8" y="405" width="1.2" height="15.0" fill="rgb(218,199,54)" rx="2" ry="2" />
<text  x="204.85" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_value (3 samples, 0.01%)</title><rect x="68.0" y="965" width="0.2" height="15.0" fill="rgb(214,202,10)" rx="2" ry="2" />
<text  x="71.00" y="975.5" ></text>
</g>
</g>
</svg>
