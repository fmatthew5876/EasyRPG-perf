<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="998.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="981" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="981" > </text>
<g id="frames">
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (46 samples, 0.23%)</title><rect x="160.6" y="533" width="2.7" height="15.0" fill="rgb(218,17,37)" rx="2" ry="2" />
<text  x="163.55" y="543.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::_Vector_impl::~_Vector_impl (2 samples, 0.01%)</title><rect x="906.2" y="373" width="0.2" height="15.0" fill="rgb(223,225,48)" rx="2" ry="2" />
<text  x="909.25" y="383.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (182 samples, 0.91%)</title><rect x="138.0" y="693" width="10.7" height="15.0" fill="rgb(252,25,43)" rx="2" ry="2" />
<text  x="140.97" y="703.5" ></text>
</g>
<g >
<title>Color::Color (5 samples, 0.02%)</title><rect x="24.8" y="901" width="0.3" height="15.0" fill="rgb(220,167,19)" rx="2" ry="2" />
<text  x="27.82" y="911.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="959.9" y="581" width="0.1" height="15.0" fill="rgb(229,153,35)" rx="2" ry="2" />
<text  x="962.88" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="867.5" y="261" width="0.1" height="15.0" fill="rgb(230,65,27)" rx="2" ry="2" />
<text  x="870.49" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::end (7 samples, 0.03%)</title><rect x="694.7" y="501" width="0.4" height="15.0" fill="rgb(234,64,9)" rx="2" ry="2" />
<text  x="697.65" y="511.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (2 samples, 0.01%)</title><rect x="23.4" y="901" width="0.1" height="15.0" fill="rgb(233,147,21)" rx="2" ry="2" />
<text  x="26.41" y="911.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned (12 samples, 0.06%)</title><rect x="961.4" y="613" width="0.7" height="15.0" fill="rgb(241,186,27)" rx="2" ry="2" />
<text  x="964.35" y="623.5" ></text>
</g>
<g >
<title>__strlen_avx2 (10 samples, 0.05%)</title><rect x="605.9" y="549" width="0.6" height="15.0" fill="rgb(222,18,17)" rx="2" ry="2" />
<text  x="608.91" y="559.5" ></text>
</g>
<g >
<title>poll (2 samples, 0.01%)</title><rect x="1180.5" y="709" width="0.1" height="15.0" fill="rgb(252,146,16)" rx="2" ry="2" />
<text  x="1183.53" y="719.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::~__allocated_ptr (2 samples, 0.01%)</title><rect x="60.5" y="901" width="0.1" height="15.0" fill="rgb(231,224,31)" rx="2" ry="2" />
<text  x="63.46" y="911.5" ></text>
</g>
<g >
<title>free_unref_page_list (10 samples, 0.05%)</title><rect x="890.8" y="69" width="0.6" height="15.0" fill="rgb(218,156,43)" rx="2" ry="2" />
<text  x="893.84" y="79.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (6 samples, 0.03%)</title><rect x="828.6" y="533" width="0.3" height="15.0" fill="rgb(253,228,14)" rx="2" ry="2" />
<text  x="831.56" y="543.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (12 samples, 0.06%)</title><rect x="842.4" y="517" width="0.7" height="15.0" fill="rgb(232,139,25)" rx="2" ry="2" />
<text  x="845.44" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (101 samples, 0.50%)</title><rect x="15.8" y="917" width="5.9" height="15.0" fill="rgb(210,208,20)" rx="2" ry="2" />
<text  x="18.76" y="927.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (8 samples, 0.04%)</title><rect x="143.1" y="485" width="0.5" height="15.0" fill="rgb(225,211,37)" rx="2" ry="2" />
<text  x="146.14" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (65 samples, 0.32%)</title><rect x="598.4" y="533" width="3.8" height="15.0" fill="rgb(229,20,24)" rx="2" ry="2" />
<text  x="601.38" y="543.5" ></text>
</g>
<g >
<title>Tone::Tone (10 samples, 0.05%)</title><rect x="832.2" y="517" width="0.6" height="15.0" fill="rgb(251,49,1)" rx="2" ry="2" />
<text  x="835.21" y="527.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;*&gt; (2 samples, 0.01%)</title><rect x="51.2" y="901" width="0.1" height="15.0" fill="rgb(212,61,47)" rx="2" ry="2" />
<text  x="54.23" y="911.5" ></text>
</g>
<g >
<title>Game_Picture::Show (182 samples, 0.91%)</title><rect x="138.0" y="741" width="10.7" height="15.0" fill="rgb(214,137,45)" rx="2" ry="2" />
<text  x="140.97" y="751.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (23 samples, 0.11%)</title><rect x="836.2" y="517" width="1.4" height="15.0" fill="rgb(228,8,40)" rx="2" ry="2" />
<text  x="839.21" y="527.5" ></text>
</g>
<g >
<title>Transition::IsErased (3 samples, 0.01%)</title><rect x="37.0" y="901" width="0.2" height="15.0" fill="rgb(254,175,8)" rx="2" ry="2" />
<text  x="39.99" y="911.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_init_functor (5 samples, 0.02%)</title><rect x="917.2" y="597" width="0.3" height="15.0" fill="rgb(222,61,52)" rx="2" ry="2" />
<text  x="920.24" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (5 samples, 0.02%)</title><rect x="175.0" y="485" width="0.3" height="15.0" fill="rgb(232,182,11)" rx="2" ry="2" />
<text  x="177.96" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="889.9" y="261" width="0.2" height="15.0" fill="rgb(222,108,44)" rx="2" ry="2" />
<text  x="892.90" y="271.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipToNextConditional (69 samples, 0.34%)</title><rect x="560.5" y="645" width="4.1" height="15.0" fill="rgb(240,17,40)" rx="2" ry="2" />
<text  x="563.51" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::clear (3 samples, 0.01%)</title><rect x="653.5" y="597" width="0.2" height="15.0" fill="rgb(212,173,23)" rx="2" ry="2" />
<text  x="656.55" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (74 samples, 0.37%)</title><rect x="647.5" y="565" width="4.3" height="15.0" fill="rgb(231,82,41)" rx="2" ry="2" />
<text  x="650.49" y="575.5" ></text>
</g>
<g >
<title>__do_munmap (9 samples, 0.04%)</title><rect x="145.1" y="373" width="0.6" height="15.0" fill="rgb(224,147,21)" rx="2" ry="2" />
<text  x="148.14" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::operator (3 samples, 0.01%)</title><rect x="914.5" y="613" width="0.2" height="15.0" fill="rgb(238,153,11)" rx="2" ry="2" />
<text  x="917.48" y="623.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (159 samples, 0.79%)</title><rect x="149.4" y="565" width="9.4" height="15.0" fill="rgb(216,38,4)" rx="2" ry="2" />
<text  x="152.44" y="575.5" ></text>
</g>
<g >
<title>Player::Update (34 samples, 0.17%)</title><rect x="172.1" y="821" width="2.0" height="15.0" fill="rgb(216,81,43)" rx="2" ry="2" />
<text  x="175.14" y="831.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.01%)</title><rect x="15.4" y="885" width="0.1" height="15.0" fill="rgb(208,70,23)" rx="2" ry="2" />
<text  x="18.35" y="895.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (71 samples, 0.35%)</title><rect x="126.3" y="597" width="4.2" height="15.0" fill="rgb(252,180,16)" rx="2" ry="2" />
<text  x="129.32" y="607.5" ></text>
</g>
<g >
<title>std::__distance&lt;char*&gt; (3 samples, 0.01%)</title><rect x="741.6" y="453" width="0.2" height="15.0" fill="rgb(209,193,39)" rx="2" ry="2" />
<text  x="744.64" y="463.5" ></text>
</g>
<g >
<title>X11_Pending (4 samples, 0.02%)</title><rect x="1181.9" y="709" width="0.3" height="15.0" fill="rgb(229,195,12)" rx="2" ry="2" />
<text  x="1184.94" y="719.5" ></text>
</g>
<g >
<title>main (17,010 samples, 84.77%)</title><rect x="182.2" y="885" width="1000.3" height="15.0" fill="rgb(251,61,32)" rx="2" ry="2" />
<text  x="185.19" y="895.5" >main</text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (54 samples, 0.27%)</title><rect x="808.4" y="357" width="3.2" height="15.0" fill="rgb(217,94,3)" rx="2" ry="2" />
<text  x="811.39" y="367.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, true&gt; (7 samples, 0.03%)</title><rect x="149.0" y="597" width="0.4" height="15.0" fill="rgb(223,20,8)" rx="2" ry="2" />
<text  x="152.02" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator bool (2 samples, 0.01%)</title><rect x="87.0" y="901" width="0.2" height="15.0" fill="rgb(254,55,17)" rx="2" ry="2" />
<text  x="90.04" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (72 samples, 0.36%)</title><rect x="403.4" y="645" width="4.2" height="15.0" fill="rgb(218,158,46)" rx="2" ry="2" />
<text  x="406.37" y="655.5" ></text>
</g>
<g >
<title>Drawable::GetPriorityForMapLayer (3 samples, 0.01%)</title><rect x="25.1" y="901" width="0.2" height="15.0" fill="rgb(237,132,19)" rx="2" ry="2" />
<text  x="28.11" y="911.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="130.6" y="485" width="0.1" height="15.0" fill="rgb(215,96,7)" rx="2" ry="2" />
<text  x="133.56" y="495.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (2 samples, 0.01%)</title><rect x="893.1" y="293" width="0.1" height="15.0" fill="rgb(232,98,36)" rx="2" ry="2" />
<text  x="896.07" y="303.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (37 samples, 0.18%)</title><rect x="164.9" y="469" width="2.2" height="15.0" fill="rgb(250,209,5)" rx="2" ry="2" />
<text  x="167.90" y="479.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (71 samples, 0.35%)</title><rect x="731.9" y="485" width="4.2" height="15.0" fill="rgb(206,218,49)" rx="2" ry="2" />
<text  x="734.94" y="495.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (6 samples, 0.03%)</title><rect x="735.7" y="453" width="0.4" height="15.0" fill="rgb(231,74,7)" rx="2" ry="2" />
<text  x="738.70" y="463.5" ></text>
</g>
<g >
<title>Game_Interpreter::ReserveSubcommandIndex (216 samples, 1.08%)</title><rect x="415.0" y="645" width="12.7" height="15.0" fill="rgb(207,39,11)" rx="2" ry="2" />
<text  x="417.96" y="655.5" ></text>
</g>
<g >
<title>Player::Update (49 samples, 0.24%)</title><rect x="175.0" y="837" width="2.8" height="15.0" fill="rgb(241,36,34)" rx="2" ry="2" />
<text  x="177.96" y="847.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.03%)</title><rect x="867.3" y="325" width="0.4" height="15.0" fill="rgb(253,211,5)" rx="2" ry="2" />
<text  x="870.32" y="335.5" ></text>
</g>
<g >
<title>Scene_Map::Update (49 samples, 0.24%)</title><rect x="175.0" y="821" width="2.8" height="15.0" fill="rgb(233,149,27)" rx="2" ry="2" />
<text  x="177.96" y="831.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (121 samples, 0.60%)</title><rect x="861.0" y="389" width="7.1" height="15.0" fill="rgb(205,53,29)" rx="2" ry="2" />
<text  x="863.96" y="399.5" ></text>
</g>
<g >
<title>Bitmap::find_format (3 samples, 0.01%)</title><rect x="174.0" y="373" width="0.1" height="15.0" fill="rgb(249,107,19)" rx="2" ry="2" />
<text  x="176.96" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator++ (34 samples, 0.17%)</title><rect x="683.1" y="485" width="2.0" height="15.0" fill="rgb(224,221,46)" rx="2" ry="2" />
<text  x="686.13" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (9 samples, 0.04%)</title><rect x="1170.5" y="693" width="0.6" height="15.0" fill="rgb(239,31,39)" rx="2" ry="2" />
<text  x="1173.53" y="703.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (6 samples, 0.03%)</title><rect x="85.2" y="901" width="0.3" height="15.0" fill="rgb(234,28,14)" rx="2" ry="2" />
<text  x="88.16" y="911.5" ></text>
</g>
<g >
<title>Bitmap::StretchBlit (3 samples, 0.01%)</title><rect x="182.8" y="677" width="0.2" height="15.0" fill="rgb(246,199,20)" rx="2" ry="2" />
<text  x="185.78" y="687.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_get_pointer (2 samples, 0.01%)</title><rect x="911.4" y="581" width="0.1" height="15.0" fill="rgb(234,125,30)" rx="2" ry="2" />
<text  x="914.36" y="591.5" ></text>
</g>
<g >
<title>handle_mm_fault (4 samples, 0.02%)</title><rect x="116.7" y="357" width="0.3" height="15.0" fill="rgb(207,185,17)" rx="2" ry="2" />
<text  x="119.74" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (338 samples, 1.68%)</title><rect x="333.9" y="677" width="19.8" height="15.0" fill="rgb(215,190,38)" rx="2" ry="2" />
<text  x="336.86" y="687.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.01%)</title><rect x="959.5" y="597" width="0.1" height="15.0" fill="rgb(216,186,13)" rx="2" ry="2" />
<text  x="962.47" y="607.5" ></text>
</g>
<g >
<title>Sprite::SetWaverPhase (4 samples, 0.02%)</title><rect x="838.9" y="533" width="0.2" height="15.0" fill="rgb(227,115,22)" rx="2" ry="2" />
<text  x="841.91" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (4 samples, 0.02%)</title><rect x="87.6" y="901" width="0.3" height="15.0" fill="rgb(212,60,28)" rx="2" ry="2" />
<text  x="90.63" y="911.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (3 samples, 0.01%)</title><rect x="893.8" y="341" width="0.2" height="15.0" fill="rgb(251,174,41)" rx="2" ry="2" />
<text  x="896.84" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (5 samples, 0.02%)</title><rect x="48.8" y="901" width="0.2" height="15.0" fill="rgb(225,75,44)" rx="2" ry="2" />
<text  x="51.76" y="911.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.02%)</title><rect x="149.1" y="501" width="0.3" height="15.0" fill="rgb(221,140,7)" rx="2" ry="2" />
<text  x="152.14" y="511.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Sprite*, false&gt;::_M_head (11 samples, 0.05%)</title><rect x="53.1" y="901" width="0.7" height="15.0" fill="rgb(218,182,12)" rx="2" ry="2" />
<text  x="56.11" y="911.5" ></text>
</g>
<g >
<title>Game_Picture::Show (7 samples, 0.03%)</title><rect x="130.6" y="709" width="0.4" height="15.0" fill="rgb(206,18,16)" rx="2" ry="2" />
<text  x="133.56" y="719.5" ></text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.01%)</title><rect x="904.4" y="149" width="0.1" height="15.0" fill="rgb(250,224,52)" rx="2" ry="2" />
<text  x="907.37" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*, std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt; &gt;::__normal_iterator (2 samples, 0.01%)</title><rect x="652.3" y="565" width="0.1" height="15.0" fill="rgb(241,40,38)" rx="2" ry="2" />
<text  x="655.25" y="575.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (343 samples, 1.71%)</title><rect x="709.8" y="485" width="20.1" height="15.0" fill="rgb(245,68,17)" rx="2" ry="2" />
<text  x="712.77" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_ptr (3 samples, 0.01%)</title><rect x="701.1" y="501" width="0.1" height="15.0" fill="rgb(214,128,33)" rx="2" ry="2" />
<text  x="704.06" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_construct&lt;char32_t const*&gt; (3 samples, 0.01%)</title><rect x="958.9" y="613" width="0.2" height="15.0" fill="rgb(216,67,25)" rx="2" ry="2" />
<text  x="961.88" y="623.5" ></text>
</g>
<g >
<title>Rect::Rect (5 samples, 0.02%)</title><rect x="854.1" y="517" width="0.3" height="15.0" fill="rgb(239,84,29)" rx="2" ry="2" />
<text  x="857.14" y="527.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="743.1" y="453" width="0.1" height="15.0" fill="rgb(249,2,36)" rx="2" ry="2" />
<text  x="746.05" y="463.5" ></text>
</g>
<g >
<title>record_times (2 samples, 0.01%)</title><rect x="17.1" y="741" width="0.1" height="15.0" fill="rgb(239,18,54)" rx="2" ry="2" />
<text  x="20.12" y="751.5" ></text>
</g>
<g >
<title>Game_Screen::GetTone (2 samples, 0.01%)</title><rect x="34.2" y="901" width="0.1" height="15.0" fill="rgb(211,179,12)" rx="2" ry="2" />
<text  x="37.23" y="911.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (7 samples, 0.03%)</title><rect x="937.8" y="629" width="0.4" height="15.0" fill="rgb(215,103,31)" rx="2" ry="2" />
<text  x="940.77" y="639.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (297 samples, 1.48%)</title><rect x="108.9" y="517" width="17.4" height="15.0" fill="rgb(248,49,2)" rx="2" ry="2" />
<text  x="111.86" y="527.5" ></text>
</g>
<g >
<title>Game_Screen::GetTone (23 samples, 0.11%)</title><rect x="932.9" y="629" width="1.4" height="15.0" fill="rgb(248,94,46)" rx="2" ry="2" />
<text  x="935.95" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (2 samples, 0.01%)</title><rect x="106.3" y="901" width="0.1" height="15.0" fill="rgb(213,138,14)" rx="2" ry="2" />
<text  x="109.33" y="911.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (8 samples, 0.04%)</title><rect x="903.9" y="181" width="0.5" height="15.0" fill="rgb(249,59,27)" rx="2" ry="2" />
<text  x="906.89" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt;::~new_allocator (2 samples, 0.01%)</title><rect x="48.1" y="901" width="0.1" height="15.0" fill="rgb(243,16,16)" rx="2" ry="2" />
<text  x="51.11" y="911.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&amp;&gt; (2 samples, 0.01%)</title><rect x="745.2" y="485" width="0.1" height="15.0" fill="rgb(211,177,13)" rx="2" ry="2" />
<text  x="748.17" y="495.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.01%)</title><rect x="116.3" y="341" width="0.1" height="15.0" fill="rgb(226,31,13)" rx="2" ry="2" />
<text  x="119.27" y="351.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.01%)</title><rect x="1032.7" y="677" width="0.1" height="15.0" fill="rgb(224,151,17)" rx="2" ry="2" />
<text  x="1035.69" y="687.5" ></text>
</g>
<g >
<title>Bitmap::width (76 samples, 0.38%)</title><rect x="1154.1" y="693" width="4.4" height="15.0" fill="rgb(252,120,20)" rx="2" ry="2" />
<text  x="1157.07" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (4 samples, 0.02%)</title><rect x="959.8" y="613" width="0.3" height="15.0" fill="rgb(242,161,17)" rx="2" ry="2" />
<text  x="962.82" y="623.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (3 samples, 0.01%)</title><rect x="174.0" y="341" width="0.1" height="15.0" fill="rgb(229,159,3)" rx="2" ry="2" />
<text  x="176.96" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (27 samples, 0.13%)</title><rect x="1021.9" y="629" width="1.6" height="15.0" fill="rgb(214,215,38)" rx="2" ry="2" />
<text  x="1024.87" y="639.5" ></text>
</g>
<g >
<title>do_page_fault (108 samples, 0.54%)</title><rect x="789.9" y="469" width="6.4" height="15.0" fill="rgb(229,146,12)" rx="2" ry="2" />
<text  x="792.92" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (8 samples, 0.04%)</title><rect x="939.3" y="613" width="0.5" height="15.0" fill="rgb(223,49,33)" rx="2" ry="2" />
<text  x="942.30" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::operator* (2 samples, 0.01%)</title><rect x="1144.8" y="709" width="0.2" height="15.0" fill="rgb(214,102,1)" rx="2" ry="2" />
<text  x="1147.83" y="719.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (13 samples, 0.06%)</title><rect x="170.5" y="901" width="0.8" height="15.0" fill="rgb(237,55,28)" rx="2" ry="2" />
<text  x="173.49" y="911.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Transition*, std::default_delete&lt;Transition&gt; &gt;::_M_head (7 samples, 0.03%)</title><rect x="58.6" y="901" width="0.4" height="15.0" fill="rgb(249,220,26)" rx="2" ry="2" />
<text  x="61.63" y="911.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (297 samples, 1.48%)</title><rect x="108.9" y="741" width="17.4" height="15.0" fill="rgb(210,198,8)" rx="2" ry="2" />
<text  x="111.86" y="751.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (8 samples, 0.04%)</title><rect x="966.8" y="549" width="0.5" height="15.0" fill="rgb(205,24,5)" rx="2" ry="2" />
<text  x="969.82" y="559.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (317 samples, 1.58%)</title><rect x="924.7" y="645" width="18.6" height="15.0" fill="rgb(214,25,53)" rx="2" ry="2" />
<text  x="927.65" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (33 samples, 0.16%)</title><rect x="404.1" y="629" width="2.0" height="15.0" fill="rgb(214,19,35)" rx="2" ry="2" />
<text  x="407.14" y="639.5" ></text>
</g>
<g >
<title>psi_task_change (3 samples, 0.01%)</title><rect x="17.1" y="757" width="0.1" height="15.0" fill="rgb(220,179,37)" rx="2" ry="2" />
<text  x="20.06" y="767.5" ></text>
</g>
<g >
<title>Scene::MainFunction (119 samples, 0.59%)</title><rect x="131.0" y="869" width="7.0" height="15.0" fill="rgb(249,130,10)" rx="2" ry="2" />
<text  x="133.97" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (126 samples, 0.63%)</title><rect x="1016.0" y="645" width="7.5" height="15.0" fill="rgb(250,112,4)" rx="2" ry="2" />
<text  x="1019.04" y="655.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.03%)</title><rect x="49.6" y="901" width="0.3" height="15.0" fill="rgb(241,134,17)" rx="2" ry="2" />
<text  x="52.58" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (39 samples, 0.19%)</title><rect x="1084.0" y="645" width="2.3" height="15.0" fill="rgb(232,3,44)" rx="2" ry="2" />
<text  x="1087.03" y="655.5" ></text>
</g>
<g >
<title>Sprite::SetZ (26 samples, 0.13%)</title><rect x="1166.1" y="709" width="1.5" height="15.0" fill="rgb(228,54,40)" rx="2" ry="2" />
<text  x="1169.06" y="719.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (2 samples, 0.01%)</title><rect x="68.4" y="901" width="0.1" height="15.0" fill="rgb(254,190,50)" rx="2" ry="2" />
<text  x="71.40" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (412 samples, 2.05%)</title><rect x="979.7" y="661" width="24.2" height="15.0" fill="rgb(249,60,24)" rx="2" ry="2" />
<text  x="982.70" y="671.5" >s..</text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (4 samples, 0.02%)</title><rect x="102.4" y="901" width="0.3" height="15.0" fill="rgb(252,59,40)" rx="2" ry="2" />
<text  x="105.45" y="911.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.02%)</title><rect x="128.7" y="373" width="0.3" height="15.0" fill="rgb(205,32,5)" rx="2" ry="2" />
<text  x="131.74" y="383.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (37 samples, 0.18%)</title><rect x="809.2" y="325" width="2.1" height="15.0" fill="rgb(237,13,47)" rx="2" ry="2" />
<text  x="812.15" y="335.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (30 samples, 0.15%)</title><rect x="1172.3" y="661" width="1.8" height="15.0" fill="rgb(231,53,39)" rx="2" ry="2" />
<text  x="1175.30" y="671.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (4 samples, 0.02%)</title><rect x="1120.0" y="709" width="0.3" height="15.0" fill="rgb(220,141,3)" rx="2" ry="2" />
<text  x="1123.02" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (4 samples, 0.02%)</title><rect x="979.4" y="661" width="0.2" height="15.0" fill="rgb(250,82,12)" rx="2" ry="2" />
<text  x="982.41" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (19 samples, 0.09%)</title><rect x="1182.9" y="901" width="1.2" height="15.0" fill="rgb(223,204,38)" rx="2" ry="2" />
<text  x="1185.94" y="911.5" ></text>
</g>
<g >
<title>std::find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, Input::UiSource::Update()::{lambda(int)#1}&gt; (3 samples, 0.01%)</title><rect x="183.6" y="741" width="0.2" height="15.0" fill="rgb(208,140,51)" rx="2" ry="2" />
<text  x="186.60" y="751.5" ></text>
</g>
<g >
<title>Game_Picture::ShowParams::~ShowParams (74 samples, 0.37%)</title><rect x="950.2" y="661" width="4.4" height="15.0" fill="rgb(236,145,15)" rx="2" ry="2" />
<text  x="953.24" y="671.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;Bitmap&gt;&amp;&gt; (3 samples, 0.01%)</title><rect x="83.0" y="901" width="0.2" height="15.0" fill="rgb(241,97,12)" rx="2" ry="2" />
<text  x="86.04" y="911.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (49 samples, 0.24%)</title><rect x="175.0" y="773" width="2.8" height="15.0" fill="rgb(244,48,35)" rx="2" ry="2" />
<text  x="177.96" y="783.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate (7 samples, 0.03%)</title><rect x="823.2" y="421" width="0.4" height="15.0" fill="rgb(212,190,13)" rx="2" ry="2" />
<text  x="826.21" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (109 samples, 0.54%)</title><rect x="347.3" y="661" width="6.4" height="15.0" fill="rgb(237,47,14)" rx="2" ry="2" />
<text  x="350.33" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (156 samples, 0.78%)</title><rect x="896.2" y="373" width="9.2" height="15.0" fill="rgb(214,48,36)" rx="2" ry="2" />
<text  x="899.19" y="383.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;*&gt; (3 samples, 0.01%)</title><rect x="51.0" y="901" width="0.2" height="15.0" fill="rgb(208,225,24)" rx="2" ry="2" />
<text  x="54.05" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (8 samples, 0.04%)</title><rect x="138.8" y="501" width="0.5" height="15.0" fill="rgb(246,56,10)" rx="2" ry="2" />
<text  x="141.79" y="511.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (3 samples, 0.01%)</title><rect x="970.9" y="597" width="0.2" height="15.0" fill="rgb(220,92,8)" rx="2" ry="2" />
<text  x="973.88" y="607.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator bool (4 samples, 0.02%)</title><rect x="665.5" y="613" width="0.3" height="15.0" fill="rgb(211,33,12)" rx="2" ry="2" />
<text  x="668.54" y="623.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (1,798 samples, 8.96%)</title><rect x="746.8" y="549" width="105.7" height="15.0" fill="rgb(253,130,12)" rx="2" ry="2" />
<text  x="749.76" y="559.5" >Game_Picture..</text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (3 samples, 0.01%)</title><rect x="843.9" y="485" width="0.1" height="15.0" fill="rgb(231,2,27)" rx="2" ry="2" />
<text  x="846.85" y="495.5" ></text>
</g>
<g >
<title>Player::IsRPG2k3E (2 samples, 0.01%)</title><rect x="1032.6" y="677" width="0.1" height="15.0" fill="rgb(244,22,8)" rx="2" ry="2" />
<text  x="1035.57" y="687.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_invoke (2 samples, 0.01%)</title><rect x="51.8" y="901" width="0.1" height="15.0" fill="rgb(234,65,30)" rx="2" ry="2" />
<text  x="54.75" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (45 samples, 0.22%)</title><rect x="1001.3" y="629" width="2.6" height="15.0" fill="rgb(226,4,12)" rx="2" ry="2" />
<text  x="1004.28" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (2 samples, 0.01%)</title><rect x="576.8" y="661" width="0.1" height="15.0" fill="rgb(225,78,34)" rx="2" ry="2" />
<text  x="579.80" y="671.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (51 samples, 0.25%)</title><rect x="720.3" y="437" width="3.0" height="15.0" fill="rgb(250,141,4)" rx="2" ry="2" />
<text  x="723.29" y="447.5" ></text>
</g>
<g >
<title>Player::Update (185 samples, 0.92%)</title><rect x="138.0" y="901" width="10.8" height="15.0" fill="rgb(208,141,36)" rx="2" ry="2" />
<text  x="140.97" y="911.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (71 samples, 0.35%)</title><rect x="126.3" y="581" width="4.2" height="15.0" fill="rgb(214,215,22)" rx="2" ry="2" />
<text  x="129.32" y="591.5" ></text>
</g>
<g >
<title>clear_page_erms (4 samples, 0.02%)</title><rect x="127.9" y="261" width="0.2" height="15.0" fill="rgb(237,146,13)" rx="2" ry="2" />
<text  x="130.91" y="271.5" ></text>
</g>
<g >
<title>Player::Update (10 samples, 0.05%)</title><rect x="148.8" y="885" width="0.6" height="15.0" fill="rgb(252,84,14)" rx="2" ry="2" />
<text  x="151.85" y="895.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Impl::_M_alloc (10 samples, 0.05%)</title><rect x="56.6" y="901" width="0.6" height="15.0" fill="rgb(231,92,23)" rx="2" ry="2" />
<text  x="59.58" y="911.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (3 samples, 0.01%)</title><rect x="148.8" y="597" width="0.2" height="15.0" fill="rgb(212,217,3)" rx="2" ry="2" />
<text  x="151.85" y="607.5" ></text>
</g>
<g >
<title>Player::Update (17,004 samples, 84.74%)</title><rect x="182.2" y="821" width="1000.0" height="15.0" fill="rgb(246,1,18)" rx="2" ry="2" />
<text  x="185.19" y="831.5" >Player::Update</text>
</g>
<g >
<title>min&lt;int&gt; (3 samples, 0.01%)</title><rect x="828.1" y="501" width="0.2" height="15.0" fill="rgb(225,53,22)" rx="2" ry="2" />
<text  x="831.09" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_valptr (2 samples, 0.01%)</title><rect x="56.3" y="901" width="0.1" height="15.0" fill="rgb(217,164,29)" rx="2" ry="2" />
<text  x="59.28" y="911.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (12 samples, 0.06%)</title><rect x="903.8" y="245" width="0.7" height="15.0" fill="rgb(239,92,4)" rx="2" ry="2" />
<text  x="906.78" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (4 samples, 0.02%)</title><rect x="138.0" y="549" width="0.2" height="15.0" fill="rgb(209,88,32)" rx="2" ry="2" />
<text  x="140.97" y="559.5" ></text>
</g>
<g >
<title>Game_Screen::GetFlashColor (5 samples, 0.02%)</title><rect x="932.7" y="629" width="0.2" height="15.0" fill="rgb(248,175,15)" rx="2" ry="2" />
<text  x="935.65" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.05%)</title><rect x="145.1" y="437" width="0.6" height="15.0" fill="rgb(219,71,48)" rx="2" ry="2" />
<text  x="148.08" y="447.5" ></text>
</g>
<g >
<title>Window_NumberInput::Update (2 samples, 0.01%)</title><rect x="1179.6" y="757" width="0.2" height="15.0" fill="rgb(213,57,23)" rx="2" ry="2" />
<text  x="1182.65" y="767.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (439 samples, 2.19%)</title><rect x="869.9" y="389" width="25.8" height="15.0" fill="rgb(209,91,1)" rx="2" ry="2" />
<text  x="872.90" y="399.5" >[..</text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (3 samples, 0.01%)</title><rect x="651.6" y="501" width="0.2" height="15.0" fill="rgb(206,46,45)" rx="2" ry="2" />
<text  x="654.60" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (3 samples, 0.01%)</title><rect x="1010.7" y="645" width="0.2" height="15.0" fill="rgb(238,75,46)" rx="2" ry="2" />
<text  x="1013.69" y="655.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="129.0" y="437" width="0.2" height="15.0" fill="rgb(209,147,6)" rx="2" ry="2" />
<text  x="132.03" y="447.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Scene, (__gnu_cxx::_Lock_policy)2&gt;::get (30 samples, 0.15%)</title><rect x="1121.4" y="677" width="1.8" height="15.0" fill="rgb(231,120,38)" rx="2" ry="2" />
<text  x="1124.43" y="687.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (10 samples, 0.05%)</title><rect x="230.6" y="709" width="0.6" height="15.0" fill="rgb(244,32,42)" rx="2" ry="2" />
<text  x="233.59" y="719.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.04%)</title><rect x="957.5" y="533" width="0.5" height="15.0" fill="rgb(252,123,26)" rx="2" ry="2" />
<text  x="960.47" y="543.5" ></text>
</g>
<g >
<title>memcmp@plt (3 samples, 0.01%)</title><rect x="737.3" y="501" width="0.2" height="15.0" fill="rgb(232,10,45)" rx="2" ry="2" />
<text  x="740.29" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::get (8 samples, 0.04%)</title><rect x="1168.5" y="693" width="0.4" height="15.0" fill="rgb(226,90,44)" rx="2" ry="2" />
<text  x="1171.48" y="703.5" ></text>
</g>
<g >
<title>Sprite::Flash (10 samples, 0.05%)</title><rect x="1163.5" y="709" width="0.6" height="15.0" fill="rgb(210,143,31)" rx="2" ry="2" />
<text  x="1166.48" y="719.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.01%)</title><rect x="904.5" y="133" width="0.1" height="15.0" fill="rgb(247,105,22)" rx="2" ry="2" />
<text  x="907.48" y="143.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (467 samples, 2.33%)</title><rect x="755.6" y="517" width="27.4" height="15.0" fill="rgb(225,11,46)" rx="2" ry="2" />
<text  x="758.58" y="527.5" >p..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (44 samples, 0.22%)</title><rect x="175.3" y="517" width="2.5" height="15.0" fill="rgb(247,42,29)" rx="2" ry="2" />
<text  x="178.25" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (11 samples, 0.05%)</title><rect x="1168.9" y="709" width="0.7" height="15.0" fill="rgb(210,137,45)" rx="2" ry="2" />
<text  x="1171.95" y="719.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator bool (8 samples, 0.04%)</title><rect x="1170.1" y="709" width="0.4" height="15.0" fill="rgb(220,22,25)" rx="2" ry="2" />
<text  x="1173.06" y="719.5" ></text>
</g>
<g >
<title>Player::Update (119 samples, 0.59%)</title><rect x="131.0" y="853" width="7.0" height="15.0" fill="rgb(241,120,44)" rx="2" ry="2" />
<text  x="133.97" y="863.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (9 samples, 0.04%)</title><rect x="79.9" y="901" width="0.6" height="15.0" fill="rgb(253,51,52)" rx="2" ry="2" />
<text  x="82.92" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (3 samples, 0.01%)</title><rect x="673.4" y="501" width="0.2" height="15.0" fill="rgb(232,87,4)" rx="2" ry="2" />
<text  x="676.42" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (4 samples, 0.02%)</title><rect x="857.8" y="469" width="0.3" height="15.0" fill="rgb(208,77,19)" rx="2" ry="2" />
<text  x="860.85" y="479.5" ></text>
</g>
<g >
<title>Cache::Picture (7 samples, 0.03%)</title><rect x="130.6" y="597" width="0.4" height="15.0" fill="rgb(232,195,43)" rx="2" ry="2" />
<text  x="133.56" y="607.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (6 samples, 0.03%)</title><rect x="910.6" y="501" width="0.4" height="15.0" fill="rgb(205,23,26)" rx="2" ry="2" />
<text  x="913.60" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (16 samples, 0.08%)</title><rect x="463.9" y="645" width="1.0" height="15.0" fill="rgb(223,4,54)" rx="2" ry="2" />
<text  x="466.95" y="655.5" ></text>
</g>
<g >
<title>Sprite::GetBitmap (2 samples, 0.01%)</title><rect x="99.6" y="901" width="0.1" height="15.0" fill="rgb(217,104,53)" rx="2" ry="2" />
<text  x="102.57" y="911.5" ></text>
</g>
<g >
<title>Scene_Map::Update (10 samples, 0.05%)</title><rect x="148.8" y="869" width="0.6" height="15.0" fill="rgb(243,18,1)" rx="2" ry="2" />
<text  x="151.85" y="879.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, bool&gt;::_M_head (4 samples, 0.02%)</title><rect x="714.2" y="373" width="0.2" height="15.0" fill="rgb(229,198,41)" rx="2" ry="2" />
<text  x="717.18" y="383.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (49 samples, 0.24%)</title><rect x="175.0" y="805" width="2.8" height="15.0" fill="rgb(238,45,21)" rx="2" ry="2" />
<text  x="177.96" y="815.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (6 samples, 0.03%)</title><rect x="741.5" y="469" width="0.3" height="15.0" fill="rgb(211,137,52)" rx="2" ry="2" />
<text  x="744.46" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (137 samples, 0.68%)</title><rect x="995.9" y="645" width="8.0" height="15.0" fill="rgb(234,2,49)" rx="2" ry="2" />
<text  x="998.87" y="655.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (297 samples, 1.48%)</title><rect x="108.9" y="469" width="17.4" height="15.0" fill="rgb(224,147,12)" rx="2" ry="2" />
<text  x="111.86" y="479.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (10 samples, 0.05%)</title><rect x="158.0" y="485" width="0.6" height="15.0" fill="rgb(205,169,26)" rx="2" ry="2" />
<text  x="160.96" y="495.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (39 samples, 0.19%)</title><rect x="946.8" y="629" width="2.3" height="15.0" fill="rgb(229,128,18)" rx="2" ry="2" />
<text  x="949.83" y="639.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (119 samples, 0.59%)</title><rect x="131.0" y="709" width="7.0" height="15.0" fill="rgb(235,99,18)" rx="2" ry="2" />
<text  x="133.97" y="719.5" ></text>
</g>
<g >
<title>schedule (64 samples, 0.32%)</title><rect x="16.9" y="805" width="3.8" height="15.0" fill="rgb(253,177,12)" rx="2" ry="2" />
<text  x="19.94" y="815.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="959.5" y="565" width="0.1" height="15.0" fill="rgb(245,115,19)" rx="2" ry="2" />
<text  x="962.47" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (3 samples, 0.01%)</title><rect x="171.4" y="901" width="0.2" height="15.0" fill="rgb(229,228,42)" rx="2" ry="2" />
<text  x="174.43" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (4 samples, 0.02%)</title><rect x="924.4" y="597" width="0.3" height="15.0" fill="rgb(247,70,13)" rx="2" ry="2" />
<text  x="927.42" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt; (6 samples, 0.03%)</title><rect x="1144.5" y="693" width="0.3" height="15.0" fill="rgb(242,75,50)" rx="2" ry="2" />
<text  x="1147.48" y="703.5" ></text>
</g>
<g >
<title>DynamicFormat::DynamicFormat (2 samples, 0.01%)</title><rect x="822.4" y="389" width="0.2" height="15.0" fill="rgb(220,221,28)" rx="2" ry="2" />
<text  x="825.44" y="399.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (37 samples, 0.18%)</title><rect x="164.9" y="485" width="2.2" height="15.0" fill="rgb(242,179,24)" rx="2" ry="2" />
<text  x="167.90" y="495.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (15 samples, 0.07%)</title><rect x="890.8" y="133" width="0.9" height="15.0" fill="rgb(221,80,2)" rx="2" ry="2" />
<text  x="893.78" y="143.5" ></text>
</g>
<g >
<title>Game_Map::Refresh (282 samples, 1.41%)</title><rect x="1097.8" y="709" width="16.6" height="15.0" fill="rgb(206,108,32)" rx="2" ry="2" />
<text  x="1100.85" y="719.5" ></text>
</g>
<g >
<title>XFlush (7 samples, 0.03%)</title><rect x="1180.6" y="725" width="0.5" height="15.0" fill="rgb(221,100,48)" rx="2" ry="2" />
<text  x="1183.65" y="735.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (388 samples, 1.93%)</title><rect x="801.6" y="453" width="22.8" height="15.0" fill="rgb(245,23,5)" rx="2" ry="2" />
<text  x="804.57" y="463.5" >s..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.06%)</title><rect x="903.8" y="277" width="0.7" height="15.0" fill="rgb(231,94,41)" rx="2" ry="2" />
<text  x="906.78" y="287.5" ></text>
</g>
<g >
<title>Scene_Map::Update (34 samples, 0.17%)</title><rect x="172.1" y="805" width="2.0" height="15.0" fill="rgb(207,145,54)" rx="2" ry="2" />
<text  x="175.14" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h1 (3 samples, 0.01%)</title><rect x="636.8" y="565" width="0.2" height="15.0" fill="rgb(216,9,18)" rx="2" ry="2" />
<text  x="639.84" y="575.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (2 samples, 0.01%)</title><rect x="1177.9" y="693" width="0.2" height="15.0" fill="rgb(211,59,41)" rx="2" ry="2" />
<text  x="1180.94" y="703.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (297 samples, 1.48%)</title><rect x="108.9" y="613" width="17.4" height="15.0" fill="rgb(252,141,42)" rx="2" ry="2" />
<text  x="111.86" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_addr (7 samples, 0.03%)</title><rect x="40.2" y="901" width="0.4" height="15.0" fill="rgb(241,33,18)" rx="2" ry="2" />
<text  x="43.17" y="911.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.03%)</title><rect x="892.5" y="245" width="0.5" height="15.0" fill="rgb(250,63,29)" rx="2" ry="2" />
<text  x="895.54" y="255.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (86 samples, 0.43%)</title><rect x="132.9" y="485" width="5.1" height="15.0" fill="rgb(237,188,32)" rx="2" ry="2" />
<text  x="135.91" y="495.5" ></text>
</g>
<g >
<title>SDL_SoftBlit (5 samples, 0.02%)</title><rect x="183.0" y="709" width="0.3" height="15.0" fill="rgb(245,91,9)" rx="2" ry="2" />
<text  x="186.02" y="719.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (5 samples, 0.02%)</title><rect x="81.1" y="901" width="0.3" height="15.0" fill="rgb(237,171,33)" rx="2" ry="2" />
<text  x="84.10" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::size (13 samples, 0.06%)</title><rect x="426.9" y="629" width="0.8" height="15.0" fill="rgb(248,9,46)" rx="2" ry="2" />
<text  x="429.90" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (56 samples, 0.28%)</title><rect x="1171.1" y="693" width="3.3" height="15.0" fill="rgb(233,65,44)" rx="2" ry="2" />
<text  x="1174.06" y="703.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.01%)</title><rect x="116.3" y="389" width="0.1" height="15.0" fill="rgb(215,28,27)" rx="2" ry="2" />
<text  x="119.27" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt;::end (4 samples, 0.02%)</title><rect x="1123.3" y="709" width="0.2" height="15.0" fill="rgb(249,217,1)" rx="2" ry="2" />
<text  x="1126.31" y="719.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (56 samples, 0.28%)</title><rect x="163.8" y="629" width="3.3" height="15.0" fill="rgb(219,195,15)" rx="2" ry="2" />
<text  x="166.79" y="639.5" ></text>
</g>
<g >
<title>std::max&lt;int&gt; (3 samples, 0.01%)</title><rect x="576.3" y="661" width="0.1" height="15.0" fill="rgb(218,202,42)" rx="2" ry="2" />
<text  x="579.27" y="671.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (41 samples, 0.20%)</title><rect x="737.8" y="533" width="2.4" height="15.0" fill="rgb(239,108,23)" rx="2" ry="2" />
<text  x="740.76" y="543.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (13 samples, 0.06%)</title><rect x="967.5" y="581" width="0.7" height="15.0" fill="rgb(212,99,49)" rx="2" ry="2" />
<text  x="970.47" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (65 samples, 0.32%)</title><rect x="950.7" y="629" width="3.8" height="15.0" fill="rgb(240,221,17)" rx="2" ry="2" />
<text  x="953.71" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (132 samples, 0.66%)</title><rect x="1057.7" y="661" width="7.7" height="15.0" fill="rgb(212,65,19)" rx="2" ry="2" />
<text  x="1060.68" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (33 samples, 0.16%)</title><rect x="993.9" y="629" width="2.0" height="15.0" fill="rgb(253,201,5)" rx="2" ry="2" />
<text  x="996.93" y="639.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (7 samples, 0.03%)</title><rect x="130.6" y="757" width="0.4" height="15.0" fill="rgb(208,228,16)" rx="2" ry="2" />
<text  x="133.56" y="767.5" ></text>
</g>
<g >
<title>Tone::Tone (9 samples, 0.04%)</title><rect x="827.7" y="517" width="0.6" height="15.0" fill="rgb(208,228,13)" rx="2" ry="2" />
<text  x="830.74" y="527.5" ></text>
</g>
<g >
<title>activate_task (2 samples, 0.01%)</title><rect x="21.4" y="709" width="0.1" height="15.0" fill="rgb(231,18,5)" rx="2" ry="2" />
<text  x="24.41" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append@plt (8 samples, 0.04%)</title><rect x="606.7" y="581" width="0.4" height="15.0" fill="rgb(231,68,40)" rx="2" ry="2" />
<text  x="609.67" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (3 samples, 0.01%)</title><rect x="571.9" y="629" width="0.2" height="15.0" fill="rgb(208,157,46)" rx="2" ry="2" />
<text  x="574.92" y="639.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (2 samples, 0.01%)</title><rect x="867.8" y="373" width="0.2" height="15.0" fill="rgb(211,187,19)" rx="2" ry="2" />
<text  x="870.85" y="383.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::CommonEvent&gt; (2 samples, 0.01%)</title><rect x="189.8" y="709" width="0.1" height="15.0" fill="rgb(234,47,20)" rx="2" ry="2" />
<text  x="192.78" y="719.5" ></text>
</g>
<g >
<title>Game_Screen::GetFlashColor (2 samples, 0.01%)</title><rect x="852.5" y="549" width="0.1" height="15.0" fill="rgb(222,210,0)" rx="2" ry="2" />
<text  x="855.50" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="148.9" y="453" width="0.1" height="15.0" fill="rgb(207,85,8)" rx="2" ry="2" />
<text  x="151.91" y="463.5" ></text>
</g>
<g >
<title>Bitmap::GetRect (22 samples, 0.11%)</title><rect x="853.1" y="533" width="1.3" height="15.0" fill="rgb(252,180,24)" rx="2" ry="2" />
<text  x="856.14" y="543.5" ></text>
</g>
<g >
<title>page_remove_rmap (2 samples, 0.01%)</title><rect x="892.1" y="117" width="0.2" height="15.0" fill="rgb(210,85,26)" rx="2" ry="2" />
<text  x="895.13" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (72 samples, 0.36%)</title><rect x="446.1" y="629" width="4.3" height="15.0" fill="rgb(221,103,12)" rx="2" ry="2" />
<text  x="449.13" y="639.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;1ul&gt;::_M_do_count (2 samples, 0.01%)</title><rect x="1142.0" y="709" width="0.1" height="15.0" fill="rgb(240,207,34)" rx="2" ry="2" />
<text  x="1145.01" y="719.5" ></text>
</g>
<g >
<title>__GI_madvise (5 samples, 0.02%)</title><rect x="163.5" y="469" width="0.3" height="15.0" fill="rgb(213,221,13)" rx="2" ry="2" />
<text  x="166.49" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2 samples, 0.01%)</title><rect x="743.7" y="453" width="0.1" height="15.0" fill="rgb(208,50,53)" rx="2" ry="2" />
<text  x="746.70" y="463.5" ></text>
</g>
<g >
<title>__fdget (3 samples, 0.01%)</title><rect x="16.4" y="853" width="0.2" height="15.0" fill="rgb(249,0,22)" rx="2" ry="2" />
<text  x="19.41" y="863.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char32_t&gt; &gt;::deallocate (2 samples, 0.01%)</title><rect x="959.1" y="597" width="0.1" height="15.0" fill="rgb(217,89,48)" rx="2" ry="2" />
<text  x="962.12" y="607.5" ></text>
</g>
<g >
<title>Rect::Rect (4 samples, 0.02%)</title><rect x="835.7" y="501" width="0.2" height="15.0" fill="rgb(220,36,44)" rx="2" ry="2" />
<text  x="838.68" y="511.5" ></text>
</g>
<g >
<title>Game_Map::Update (235 samples, 1.17%)</title><rect x="149.4" y="869" width="13.9" height="15.0" fill="rgb(251,197,42)" rx="2" ry="2" />
<text  x="152.44" y="879.5" ></text>
</g>
<g >
<title>operator delete (86 samples, 0.43%)</title><rect x="132.9" y="501" width="5.1" height="15.0" fill="rgb(216,48,39)" rx="2" ry="2" />
<text  x="135.91" y="511.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (20 samples, 0.10%)</title><rect x="738.9" y="501" width="1.2" height="15.0" fill="rgb(254,139,5)" rx="2" ry="2" />
<text  x="741.88" y="511.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (4 samples, 0.02%)</title><rect x="890.4" y="165" width="0.2" height="15.0" fill="rgb(238,120,2)" rx="2" ry="2" />
<text  x="893.37" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (30 samples, 0.15%)</title><rect x="718.4" y="405" width="1.8" height="15.0" fill="rgb(227,52,43)" rx="2" ry="2" />
<text  x="721.41" y="415.5" ></text>
</g>
<g >
<title>DynamicFormat::DynamicFormat (4 samples, 0.02%)</title><rect x="821.7" y="373" width="0.3" height="15.0" fill="rgb(229,23,50)" rx="2" ry="2" />
<text  x="824.74" y="383.5" ></text>
</g>
<g >
<title>Bitmap::GetHeight (7 samples, 0.03%)</title><rect x="825.5" y="533" width="0.4" height="15.0" fill="rgb(227,54,24)" rx="2" ry="2" />
<text  x="828.50" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.01%)</title><rect x="741.8" y="485" width="0.1" height="15.0" fill="rgb(214,177,14)" rx="2" ry="2" />
<text  x="744.82" y="495.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (65 samples, 0.32%)</title><rect x="163.3" y="677" width="3.8" height="15.0" fill="rgb(210,60,20)" rx="2" ry="2" />
<text  x="166.26" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2 samples, 0.01%)</title><rect x="604.1" y="565" width="0.2" height="15.0" fill="rgb(250,228,3)" rx="2" ry="2" />
<text  x="607.15" y="575.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 3ul, 3ul&gt;::__less (5 samples, 0.02%)</title><rect x="70.8" y="901" width="0.3" height="15.0" fill="rgb(237,132,45)" rx="2" ry="2" />
<text  x="73.81" y="911.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (71 samples, 0.35%)</title><rect x="126.3" y="853" width="4.2" height="15.0" fill="rgb(242,68,53)" rx="2" ry="2" />
<text  x="129.32" y="863.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::~_Head_base (9 samples, 0.04%)</title><rect x="163.3" y="597" width="0.5" height="15.0" fill="rgb(235,180,12)" rx="2" ry="2" />
<text  x="166.26" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.02%)</title><rect x="163.5" y="437" width="0.3" height="15.0" fill="rgb(212,91,41)" rx="2" ry="2" />
<text  x="166.49" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (24 samples, 0.12%)</title><rect x="410.3" y="629" width="1.4" height="15.0" fill="rgb(220,13,7)" rx="2" ry="2" />
<text  x="413.31" y="639.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (83 samples, 0.41%)</title><rect x="695.1" y="517" width="4.8" height="15.0" fill="rgb(224,20,7)" rx="2" ry="2" />
<text  x="698.06" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (7 samples, 0.03%)</title><rect x="181.1" y="901" width="0.4" height="15.0" fill="rgb(213,94,7)" rx="2" ry="2" />
<text  x="184.13" y="911.5" ></text>
</g>
<g >
<title>vfs_write (7 samples, 0.03%)</title><rect x="21.3" y="853" width="0.4" height="15.0" fill="rgb(251,32,50)" rx="2" ry="2" />
<text  x="24.29" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_dispose (2 samples, 0.01%)</title><rect x="959.1" y="629" width="0.1" height="15.0" fill="rgb(243,4,35)" rx="2" ry="2" />
<text  x="962.12" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (3 samples, 0.01%)</title><rect x="71.4" y="901" width="0.2" height="15.0" fill="rgb(250,96,44)" rx="2" ry="2" />
<text  x="74.40" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (5 samples, 0.02%)</title><rect x="572.3" y="629" width="0.3" height="15.0" fill="rgb(234,202,23)" rx="2" ry="2" />
<text  x="575.27" y="639.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_destroy (157 samples, 0.78%)</title><rect x="859.3" y="469" width="9.3" height="15.0" fill="rgb(224,172,13)" rx="2" ry="2" />
<text  x="862.32" y="479.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="138.0" y="485" width="0.2" height="15.0" fill="rgb(243,189,2)" rx="2" ry="2" />
<text  x="140.97" y="495.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (235 samples, 1.17%)</title><rect x="149.4" y="741" width="13.9" height="15.0" fill="rgb(213,127,39)" rx="2" ry="2" />
<text  x="152.44" y="751.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (19 samples, 0.09%)</title><rect x="163.8" y="453" width="1.1" height="15.0" fill="rgb(206,58,31)" rx="2" ry="2" />
<text  x="166.79" y="463.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="782.2" y="469" width="0.2" height="15.0" fill="rgb(220,16,1)" rx="2" ry="2" />
<text  x="785.16" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (6 samples, 0.03%)</title><rect x="91.9" y="901" width="0.3" height="15.0" fill="rgb(232,29,2)" rx="2" ry="2" />
<text  x="94.86" y="911.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::end (12 samples, 0.06%)</title><rect x="814.4" y="325" width="0.7" height="15.0" fill="rgb(240,14,27)" rx="2" ry="2" />
<text  x="817.39" y="335.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Sprite*, false&gt;::_M_head (3 samples, 0.01%)</title><rect x="910.8" y="453" width="0.2" height="15.0" fill="rgb(240,73,2)" rx="2" ry="2" />
<text  x="913.78" y="463.5" ></text>
</g>
<g >
<title>std::swap&lt;int*&gt; (16 samples, 0.08%)</title><rect x="920.4" y="581" width="0.9" height="15.0" fill="rgb(223,31,14)" rx="2" ry="2" />
<text  x="923.36" y="591.5" ></text>
</g>
<g >
<title>Game_Picture::Show (65 samples, 0.32%)</title><rect x="163.3" y="773" width="3.8" height="15.0" fill="rgb(230,4,4)" rx="2" ry="2" />
<text  x="166.26" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (24 samples, 0.12%)</title><rect x="736.2" y="517" width="1.4" height="15.0" fill="rgb(227,39,28)" rx="2" ry="2" />
<text  x="739.23" y="527.5" ></text>
</g>
<g >
<title>Game_Map::SetNeedRefresh (3 samples, 0.01%)</title><rect x="1032.3" y="677" width="0.2" height="15.0" fill="rgb(228,196,12)" rx="2" ry="2" />
<text  x="1035.27" y="687.5" ></text>
</g>
<g >
<title>wp_page_copy (4 samples, 0.02%)</title><rect x="116.7" y="309" width="0.3" height="15.0" fill="rgb(224,5,24)" rx="2" ry="2" />
<text  x="119.74" y="319.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_invoke (119 samples, 0.59%)</title><rect x="131.0" y="629" width="7.0" height="15.0" fill="rgb(218,166,28)" rx="2" ry="2" />
<text  x="133.97" y="639.5" ></text>
</g>
<g >
<title>FileRequestAsync::BindStart (182 samples, 0.91%)</title><rect x="138.0" y="709" width="10.7" height="15.0" fill="rgb(252,184,53)" rx="2" ry="2" />
<text  x="140.97" y="719.5" ></text>
</g>
<g >
<title>DynamicFormat::code_alpha (4 samples, 0.02%)</title><rect x="812.4" y="357" width="0.3" height="15.0" fill="rgb(224,124,18)" rx="2" ry="2" />
<text  x="815.45" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt;::_M_head (5 samples, 0.02%)</title><rect x="846.0" y="453" width="0.3" height="15.0" fill="rgb(234,176,48)" rx="2" ry="2" />
<text  x="848.97" y="463.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (4 samples, 0.02%)</title><rect x="740.2" y="517" width="0.2" height="15.0" fill="rgb(224,58,41)" rx="2" ry="2" />
<text  x="743.17" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;Input::UiSource::Update()::{lambda(int)#1}&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="183.7" y="693" width="0.1" height="15.0" fill="rgb(241,22,25)" rx="2" ry="2" />
<text  x="186.66" y="703.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (2 samples, 0.01%)</title><rect x="182.8" y="645" width="0.1" height="15.0" fill="rgb(249,3,14)" rx="2" ry="2" />
<text  x="185.78" y="655.5" ></text>
</g>
<g >
<title>FileRequestAsync::BindStart (7 samples, 0.03%)</title><rect x="130.6" y="677" width="0.4" height="15.0" fill="rgb(216,187,7)" rx="2" ry="2" />
<text  x="133.56" y="687.5" ></text>
</g>
<g >
<title>operator!= (10 samples, 0.05%)</title><rect x="838.3" y="517" width="0.6" height="15.0" fill="rgb(252,21,34)" rx="2" ry="2" />
<text  x="841.26" y="527.5" ></text>
</g>
<g >
<title>__wake_up_common (4 samples, 0.02%)</title><rect x="21.4" y="789" width="0.2" height="15.0" fill="rgb(246,146,43)" rx="2" ry="2" />
<text  x="24.35" y="799.5" ></text>
</g>
<g >
<title>FlagSet&lt;Game_Interpreter::Keys, 32ul&gt;::operator[] (2 samples, 0.01%)</title><rect x="573.0" y="661" width="0.1" height="15.0" fill="rgb(213,26,12)" rx="2" ry="2" />
<text  x="575.98" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (31 samples, 0.15%)</title><rect x="133.8" y="453" width="1.8" height="15.0" fill="rgb(227,9,49)" rx="2" ry="2" />
<text  x="136.79" y="463.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_ptr (7 samples, 0.03%)</title><rect x="805.3" y="421" width="0.4" height="15.0" fill="rgb(250,32,30)" rx="2" ry="2" />
<text  x="808.33" y="431.5" ></text>
</g>
<g >
<title>Drawable::GetPriorityForMapLayer (2 samples, 0.01%)</title><rect x="828.4" y="533" width="0.2" height="15.0" fill="rgb(206,189,18)" rx="2" ry="2" />
<text  x="831.44" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (2 samples, 0.01%)</title><rect x="1148.1" y="677" width="0.1" height="15.0" fill="rgb(235,109,13)" rx="2" ry="2" />
<text  x="1151.07" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, unsigned long, true&gt;::_S_equals (24 samples, 0.12%)</title><rect x="696.8" y="437" width="1.4" height="15.0" fill="rgb(217,57,48)" rx="2" ry="2" />
<text  x="699.77" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (19 samples, 0.09%)</title><rect x="163.8" y="517" width="1.1" height="15.0" fill="rgb(242,61,14)" rx="2" ry="2" />
<text  x="166.79" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (29 samples, 0.14%)</title><rect x="448.7" y="613" width="1.7" height="15.0" fill="rgb(229,119,21)" rx="2" ry="2" />
<text  x="451.66" y="623.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::operator() (4 samples, 0.02%)</title><rect x="708.2" y="469" width="0.3" height="15.0" fill="rgb(228,80,46)" rx="2" ry="2" />
<text  x="711.24" y="479.5" ></text>
</g>
<g >
<title>std::bitset&lt;32ul&gt;::operator[] (2 samples, 0.01%)</title><rect x="573.1" y="629" width="0.1" height="15.0" fill="rgb(206,155,3)" rx="2" ry="2" />
<text  x="576.09" y="639.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (5 samples, 0.02%)</title><rect x="117.0" y="389" width="0.3" height="15.0" fill="rgb(228,156,33)" rx="2" ry="2" />
<text  x="119.97" y="399.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (71 samples, 0.35%)</title><rect x="126.3" y="869" width="4.2" height="15.0" fill="rgb(235,59,24)" rx="2" ry="2" />
<text  x="129.32" y="879.5" ></text>
</g>
<g >
<title>Scene_Map::Update (119 samples, 0.59%)</title><rect x="131.0" y="837" width="7.0" height="15.0" fill="rgb(235,169,7)" rx="2" ry="2" />
<text  x="133.97" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (2 samples, 0.01%)</title><rect x="572.0" y="613" width="0.1" height="15.0" fill="rgb(211,1,9)" rx="2" ry="2" />
<text  x="574.98" y="623.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (6 samples, 0.03%)</title><rect x="69.3" y="901" width="0.3" height="15.0" fill="rgb(228,203,54)" rx="2" ry="2" />
<text  x="72.28" y="911.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::operator== (6 samples, 0.03%)</title><rect x="731.3" y="501" width="0.4" height="15.0" fill="rgb(226,6,47)" rx="2" ry="2" />
<text  x="734.35" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (3 samples, 0.01%)</title><rect x="174.0" y="405" width="0.1" height="15.0" fill="rgb(230,69,14)" rx="2" ry="2" />
<text  x="176.96" y="415.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (2 samples, 0.01%)</title><rect x="601.7" y="485" width="0.2" height="15.0" fill="rgb(241,180,34)" rx="2" ry="2" />
<text  x="604.73" y="495.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_memcmp@plt (3 samples, 0.01%)</title><rect x="154.3" y="469" width="0.2" height="15.0" fill="rgb(221,38,41)" rx="2" ry="2" />
<text  x="157.32" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_ptr (4 samples, 0.02%)</title><rect x="40.6" y="901" width="0.3" height="15.0" fill="rgb(206,76,3)" rx="2" ry="2" />
<text  x="43.64" y="911.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (66 samples, 0.33%)</title><rect x="462.6" y="661" width="3.9" height="15.0" fill="rgb(206,56,44)" rx="2" ry="2" />
<text  x="465.59" y="671.5" ></text>
</g>
<g >
<title>Cache::Picture (189 samples, 0.94%)</title><rect x="149.4" y="645" width="11.2" height="15.0" fill="rgb(228,187,28)" rx="2" ry="2" />
<text  x="152.44" y="655.5" ></text>
</g>
<g >
<title>min&lt;int&gt; (2 samples, 0.01%)</title><rect x="930.5" y="597" width="0.2" height="15.0" fill="rgb(239,199,15)" rx="2" ry="2" />
<text  x="933.54" y="607.5" ></text>
</g>
<g >
<title>std::map&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, (anonymous namespace)::CacheItem, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (159 samples, 0.79%)</title><rect x="149.4" y="629" width="9.4" height="15.0" fill="rgb(239,14,23)" rx="2" ry="2" />
<text  x="152.44" y="639.5" ></text>
</g>
<g >
<title>Game_Map::Update (49 samples, 0.24%)</title><rect x="175.0" y="789" width="2.8" height="15.0" fill="rgb(216,147,36)" rx="2" ry="2" />
<text  x="177.96" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_v (5 samples, 0.02%)</title><rect x="632.1" y="517" width="0.3" height="15.0" fill="rgb(240,142,16)" rx="2" ry="2" />
<text  x="635.14" y="527.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.02%)</title><rect x="160.3" y="549" width="0.3" height="15.0" fill="rgb(206,86,6)" rx="2" ry="2" />
<text  x="163.26" y="559.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (2 samples, 0.01%)</title><rect x="73.3" y="901" width="0.2" height="15.0" fill="rgb(245,228,26)" rx="2" ry="2" />
<text  x="76.34" y="911.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (25 samples, 0.12%)</title><rect x="158.8" y="613" width="1.5" height="15.0" fill="rgb(216,226,39)" rx="2" ry="2" />
<text  x="161.79" y="623.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (10 samples, 0.05%)</title><rect x="138.2" y="485" width="0.6" height="15.0" fill="rgb(232,12,15)" rx="2" ry="2" />
<text  x="141.20" y="495.5" ></text>
</g>
<g >
<title>XFlush (3 samples, 0.01%)</title><rect x="1182.0" y="693" width="0.2" height="15.0" fill="rgb(215,106,26)" rx="2" ry="2" />
<text  x="1185.00" y="703.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (5 samples, 0.02%)</title><rect x="1182.2" y="789" width="0.3" height="15.0" fill="rgb(230,177,32)" rx="2" ry="2" />
<text  x="1185.18" y="799.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (13 samples, 0.06%)</title><rect x="84.0" y="901" width="0.7" height="15.0" fill="rgb(239,194,8)" rx="2" ry="2" />
<text  x="86.98" y="911.5" ></text>
</g>
<g >
<title>poll_schedule_timeout.constprop.14 (69 samples, 0.34%)</title><rect x="16.7" y="853" width="4.1" height="15.0" fill="rgb(219,62,43)" rx="2" ry="2" />
<text  x="19.70" y="863.5" ></text>
</g>
<g >
<title>perf_event_mmap_output (4 samples, 0.02%)</title><rect x="127.0" y="213" width="0.2" height="15.0" fill="rgb(235,25,4)" rx="2" ry="2" />
<text  x="129.97" y="223.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (7 samples, 0.03%)</title><rect x="149.0" y="565" width="0.4" height="15.0" fill="rgb(208,45,54)" rx="2" ry="2" />
<text  x="152.02" y="575.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, true&gt; (5 samples, 0.02%)</title><rect x="130.7" y="581" width="0.3" height="15.0" fill="rgb(239,51,5)" rx="2" ry="2" />
<text  x="133.68" y="591.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (65 samples, 0.32%)</title><rect x="163.3" y="789" width="3.8" height="15.0" fill="rgb(230,153,9)" rx="2" ry="2" />
<text  x="166.26" y="799.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (7 samples, 0.03%)</title><rect x="795.4" y="405" width="0.4" height="15.0" fill="rgb(227,46,29)" rx="2" ry="2" />
<text  x="798.39" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, false, true&gt;::operator (3 samples, 0.01%)</title><rect x="627.8" y="613" width="0.2" height="15.0" fill="rgb(214,112,17)" rx="2" ry="2" />
<text  x="630.85" y="623.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.01%)</title><rect x="1032.7" y="629" width="0.1" height="15.0" fill="rgb(248,182,35)" rx="2" ry="2" />
<text  x="1035.69" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (8 samples, 0.04%)</title><rect x="103.9" y="901" width="0.4" height="15.0" fill="rgb(214,98,15)" rx="2" ry="2" />
<text  x="106.86" y="911.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (37 samples, 0.18%)</title><rect x="164.9" y="549" width="2.2" height="15.0" fill="rgb(216,166,12)" rx="2" ry="2" />
<text  x="167.90" y="559.5" ></text>
</g>
<g >
<title>Game_Switches_Class::Get (4 samples, 0.02%)</title><rect x="462.4" y="661" width="0.2" height="15.0" fill="rgb(213,42,1)" rx="2" ry="2" />
<text  x="465.36" y="671.5" ></text>
</g>
<g >
<title>std::_Base_bitset&lt;1ul&gt;::_M_getword (2 samples, 0.01%)</title><rect x="573.1" y="597" width="0.1" height="15.0" fill="rgb(248,178,3)" rx="2" ry="2" />
<text  x="576.09" y="607.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandControlSwitches (2 samples, 0.01%)</title><rect x="468.9" y="677" width="0.2" height="15.0" fill="rgb(237,147,28)" rx="2" ry="2" />
<text  x="471.94" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (40 samples, 0.20%)</title><rect x="146.3" y="453" width="2.4" height="15.0" fill="rgb(231,42,15)" rx="2" ry="2" />
<text  x="149.32" y="463.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (35 samples, 0.17%)</title><rect x="143.7" y="501" width="2.1" height="15.0" fill="rgb(226,68,42)" rx="2" ry="2" />
<text  x="146.73" y="511.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~tuple (44 samples, 0.22%)</title><rect x="175.3" y="549" width="2.5" height="15.0" fill="rgb(224,167,9)" rx="2" ry="2" />
<text  x="178.25" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::end (10 samples, 0.05%)</title><rect x="652.8" y="581" width="0.6" height="15.0" fill="rgb(237,159,52)" rx="2" ry="2" />
<text  x="655.84" y="591.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="178.1" y="901" width="0.1" height="15.0" fill="rgb(237,41,13)" rx="2" ry="2" />
<text  x="181.08" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (8 samples, 0.04%)</title><rect x="1071.5" y="661" width="0.5" height="15.0" fill="rgb(218,121,39)" rx="2" ry="2" />
<text  x="1074.50" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (25 samples, 0.12%)</title><rect x="158.8" y="517" width="1.5" height="15.0" fill="rgb(205,12,40)" rx="2" ry="2" />
<text  x="161.79" y="527.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (8 samples, 0.04%)</title><rect x="138.8" y="485" width="0.5" height="15.0" fill="rgb(237,229,25)" rx="2" ry="2" />
<text  x="141.79" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char32_t&gt;::allocate (9 samples, 0.04%)</title><rect x="957.5" y="565" width="0.5" height="15.0" fill="rgb(232,187,3)" rx="2" ry="2" />
<text  x="960.47" y="575.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (182 samples, 0.91%)</title><rect x="138.0" y="789" width="10.7" height="15.0" fill="rgb(223,183,5)" rx="2" ry="2" />
<text  x="140.97" y="799.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (2 samples, 0.01%)</title><rect x="1177.8" y="693" width="0.1" height="15.0" fill="rgb(229,127,46)" rx="2" ry="2" />
<text  x="1180.83" y="703.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (4 samples, 0.02%)</title><rect x="745.5" y="501" width="0.2" height="15.0" fill="rgb(207,202,49)" rx="2" ry="2" />
<text  x="748.46" y="511.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="148.8" y="469" width="0.2" height="15.0" fill="rgb(228,99,39)" rx="2" ry="2" />
<text  x="151.85" y="479.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.01%)</title><rect x="129.0" y="469" width="0.2" height="15.0" fill="rgb(232,105,40)" rx="2" ry="2" />
<text  x="132.03" y="479.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (199 samples, 0.99%)</title><rect x="596.3" y="597" width="11.7" height="15.0" fill="rgb(222,221,36)" rx="2" ry="2" />
<text  x="599.32" y="607.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (56 samples, 0.28%)</title><rect x="163.8" y="661" width="3.3" height="15.0" fill="rgb(231,100,29)" rx="2" ry="2" />
<text  x="166.79" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_right (8 samples, 0.04%)</title><rect x="708.9" y="485" width="0.5" height="15.0" fill="rgb(236,171,30)" rx="2" ry="2" />
<text  x="711.94" y="495.5" ></text>
</g>
<g >
<title>FileRequestAsync::BindStart (65 samples, 0.32%)</title><rect x="163.3" y="741" width="3.8" height="15.0" fill="rgb(241,228,41)" rx="2" ry="2" />
<text  x="166.26" y="751.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (182 samples, 0.91%)</title><rect x="138.0" y="645" width="10.7" height="15.0" fill="rgb(232,114,20)" rx="2" ry="2" />
<text  x="140.97" y="655.5" ></text>
</g>
<g >
<title>std::_Bit_reference::_Bit_reference (2 samples, 0.01%)</title><rect x="50.8" y="901" width="0.1" height="15.0" fill="rgb(220,2,24)" rx="2" ry="2" />
<text  x="53.81" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (92 samples, 0.46%)</title><rect x="421.2" y="613" width="5.4" height="15.0" fill="rgb(233,142,34)" rx="2" ry="2" />
<text  x="424.19" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (11 samples, 0.05%)</title><rect x="90.2" y="901" width="0.7" height="15.0" fill="rgb(212,165,15)" rx="2" ry="2" />
<text  x="93.22" y="911.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}::operator() (119 samples, 0.59%)</title><rect x="131.0" y="613" width="7.0" height="15.0" fill="rgb(240,156,2)" rx="2" ry="2" />
<text  x="133.97" y="623.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::~__allocated_ptr (133 samples, 0.66%)</title><rect x="860.5" y="453" width="7.8" height="15.0" fill="rgb(242,124,10)" rx="2" ry="2" />
<text  x="863.49" y="463.5" ></text>
</g>
<g >
<title>calloc (216 samples, 1.08%)</title><rect x="108.9" y="453" width="12.7" height="15.0" fill="rgb(240,11,27)" rx="2" ry="2" />
<text  x="111.86" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h1 (5 samples, 0.02%)</title><rect x="698.5" y="469" width="0.3" height="15.0" fill="rgb(227,121,53)" rx="2" ry="2" />
<text  x="701.48" y="479.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_invoke (34 samples, 0.17%)</title><rect x="172.1" y="597" width="2.0" height="15.0" fill="rgb(213,45,37)" rx="2" ry="2" />
<text  x="175.14" y="607.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (40 samples, 0.20%)</title><rect x="906.8" y="533" width="2.4" height="15.0" fill="rgb(254,95,46)" rx="2" ry="2" />
<text  x="909.84" y="543.5" ></text>
</g>
<g >
<title>pixman_image_get_height (2 samples, 0.01%)</title><rect x="50.3" y="901" width="0.1" height="15.0" fill="rgb(248,89,42)" rx="2" ry="2" />
<text  x="53.28" y="911.5" ></text>
</g>
<g >
<title>Game_Interpreter::SetSubcommandIndex (270 samples, 1.35%)</title><rect x="411.8" y="661" width="15.9" height="15.0" fill="rgb(226,154,10)" rx="2" ry="2" />
<text  x="414.78" y="671.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (15 samples, 0.07%)</title><rect x="172.1" y="517" width="0.9" height="15.0" fill="rgb(212,113,31)" rx="2" ry="2" />
<text  x="175.14" y="527.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.02%)</title><rect x="175.0" y="453" width="0.3" height="15.0" fill="rgb(224,118,28)" rx="2" ry="2" />
<text  x="177.96" y="463.5" ></text>
</g>
<g >
<title>Game_Map::Refresh (9 samples, 0.04%)</title><rect x="31.9" y="901" width="0.6" height="15.0" fill="rgb(211,32,28)" rx="2" ry="2" />
<text  x="34.94" y="911.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (171 samples, 0.85%)</title><rect x="416.5" y="629" width="10.1" height="15.0" fill="rgb(231,81,36)" rx="2" ry="2" />
<text  x="419.55" y="639.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (19 samples, 0.09%)</title><rect x="163.8" y="501" width="1.1" height="15.0" fill="rgb(209,167,39)" rx="2" ry="2" />
<text  x="166.79" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (3 samples, 0.01%)</title><rect x="572.7" y="661" width="0.2" height="15.0" fill="rgb(220,195,39)" rx="2" ry="2" />
<text  x="575.74" y="671.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (5 samples, 0.02%)</title><rect x="1177.8" y="725" width="0.3" height="15.0" fill="rgb(223,16,31)" rx="2" ry="2" />
<text  x="1180.77" y="735.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Sprite*, false&gt;::_M_head (7 samples, 0.03%)</title><rect x="1173.7" y="613" width="0.4" height="15.0" fill="rgb(236,101,25)" rx="2" ry="2" />
<text  x="1176.65" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (2 samples, 0.01%)</title><rect x="955.0" y="629" width="0.1" height="15.0" fill="rgb(239,221,14)" rx="2" ry="2" />
<text  x="958.00" y="639.5" ></text>
</g>
<g >
<title>Game_Map::Update (297 samples, 1.48%)</title><rect x="108.9" y="901" width="17.4" height="15.0" fill="rgb(254,24,18)" rx="2" ry="2" />
<text  x="111.86" y="911.5" ></text>
</g>
<g >
<title>std::operator- (6 samples, 0.03%)</title><rect x="188.5" y="677" width="0.4" height="15.0" fill="rgb(215,160,40)" rx="2" ry="2" />
<text  x="191.54" y="687.5" ></text>
</g>
<g >
<title>std::__detail::operator!=&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, true&gt; (5 samples, 0.02%)</title><rect x="628.0" y="613" width="0.3" height="15.0" fill="rgb(232,144,30)" rx="2" ry="2" />
<text  x="631.02" y="623.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (3 samples, 0.01%)</title><rect x="843.7" y="485" width="0.2" height="15.0" fill="rgb(252,40,48)" rx="2" ry="2" />
<text  x="846.67" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::size (5 samples, 0.02%)</title><rect x="1139.0" y="725" width="0.3" height="15.0" fill="rgb(237,222,34)" rx="2" ry="2" />
<text  x="1142.01" y="735.5" ></text>
</g>
<g >
<title>Window_Base::Update (2 samples, 0.01%)</title><rect x="1179.6" y="725" width="0.2" height="15.0" fill="rgb(215,1,42)" rx="2" ry="2" />
<text  x="1182.65" y="735.5" ></text>
</g>
<g >
<title>memcpy@plt (2 samples, 0.01%)</title><rect x="962.3" y="629" width="0.1" height="15.0" fill="rgb(206,200,5)" rx="2" ry="2" />
<text  x="965.29" y="639.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (7 samples, 0.03%)</title><rect x="130.6" y="805" width="0.4" height="15.0" fill="rgb(251,7,6)" rx="2" ry="2" />
<text  x="133.56" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (5 samples, 0.02%)</title><rect x="354.6" y="677" width="0.3" height="15.0" fill="rgb(244,95,16)" rx="2" ry="2" />
<text  x="357.56" y="687.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (3 samples, 0.01%)</title><rect x="1178.2" y="693" width="0.2" height="15.0" fill="rgb(218,36,3)" rx="2" ry="2" />
<text  x="1181.18" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (10 samples, 0.05%)</title><rect x="572.1" y="645" width="0.6" height="15.0" fill="rgb(221,212,52)" rx="2" ry="2" />
<text  x="575.10" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create@plt (5 samples, 0.02%)</title><rect x="743.4" y="453" width="0.3" height="15.0" fill="rgb(249,9,49)" rx="2" ry="2" />
<text  x="746.41" y="463.5" ></text>
</g>
<g >
<title>Bitmap::GetOperator (3 samples, 0.01%)</title><rect x="23.9" y="901" width="0.2" height="15.0" fill="rgb(218,223,37)" rx="2" ry="2" />
<text  x="26.88" y="911.5" ></text>
</g>
<g >
<title>Sprite::Flash (3 samples, 0.01%)</title><rect x="934.4" y="629" width="0.2" height="15.0" fill="rgb(227,83,50)" rx="2" ry="2" />
<text  x="937.42" y="639.5" ></text>
</g>
<g >
<title>[easyrpg-player] (2 samples, 0.01%)</title><rect x="654.4" y="597" width="0.1" height="15.0" fill="rgb(252,137,26)" rx="2" ry="2" />
<text  x="657.43" y="607.5" ></text>
</g>
<g >
<title>Bitmap::GetHeight (5 samples, 0.02%)</title><rect x="1153.8" y="709" width="0.3" height="15.0" fill="rgb(209,204,41)" rx="2" ry="2" />
<text  x="1156.77" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (116 samples, 0.58%)</title><rect x="1086.3" y="661" width="6.8" height="15.0" fill="rgb(233,211,6)" rx="2" ry="2" />
<text  x="1089.32" y="671.5" ></text>
</g>
<g >
<title>Bitmap::height (5 samples, 0.02%)</title><rect x="1153.8" y="693" width="0.3" height="15.0" fill="rgb(210,202,5)" rx="2" ry="2" />
<text  x="1156.77" y="703.5" ></text>
</g>
<g >
<title>find_vma (2 samples, 0.01%)</title><rect x="903.8" y="197" width="0.1" height="15.0" fill="rgb(227,223,45)" rx="2" ry="2" />
<text  x="906.78" y="207.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (235 samples, 1.17%)</title><rect x="149.4" y="853" width="13.9" height="15.0" fill="rgb(214,7,44)" rx="2" ry="2" />
<text  x="152.44" y="863.5" ></text>
</g>
<g >
<title>Sprite::SetZ (7 samples, 0.03%)</title><rect x="839.6" y="533" width="0.4" height="15.0" fill="rgb(218,164,10)" rx="2" ry="2" />
<text  x="842.62" y="543.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (2 samples, 0.01%)</title><rect x="735.5" y="421" width="0.1" height="15.0" fill="rgb(233,2,23)" rx="2" ry="2" />
<text  x="738.47" y="431.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (49 samples, 0.24%)</title><rect x="175.0" y="581" width="2.8" height="15.0" fill="rgb(240,203,49)" rx="2" ry="2" />
<text  x="177.96" y="591.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (864 samples, 4.31%)</title><rect x="855.8" y="501" width="50.9" height="15.0" fill="rgb(205,10,39)" rx="2" ry="2" />
<text  x="858.85" y="511.5" >std::..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (84 samples, 0.42%)</title><rect x="689.5" y="501" width="4.9" height="15.0" fill="rgb(224,217,48)" rx="2" ry="2" />
<text  x="692.48" y="511.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::size (9 samples, 0.04%)</title><rect x="457.5" y="629" width="0.5" height="15.0" fill="rgb(210,182,19)" rx="2" ry="2" />
<text  x="460.48" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.03%)</title><rect x="892.5" y="261" width="0.5" height="15.0" fill="rgb(209,224,45)" rx="2" ry="2" />
<text  x="895.54" y="271.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator* (3 samples, 0.01%)</title><rect x="842.3" y="533" width="0.1" height="15.0" fill="rgb(246,161,10)" rx="2" ry="2" />
<text  x="845.26" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (3 samples, 0.01%)</title><rect x="975.2" y="613" width="0.1" height="15.0" fill="rgb(206,188,10)" rx="2" ry="2" />
<text  x="978.17" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (6 samples, 0.03%)</title><rect x="970.7" y="661" width="0.4" height="15.0" fill="rgb(216,201,0)" rx="2" ry="2" />
<text  x="973.70" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (106 samples, 0.53%)</title><rect x="327.6" y="661" width="6.3" height="15.0" fill="rgb(212,208,22)" rx="2" ry="2" />
<text  x="330.63" y="671.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (5 samples, 0.02%)</title><rect x="697.9" y="389" width="0.3" height="15.0" fill="rgb(210,110,18)" rx="2" ry="2" />
<text  x="700.89" y="399.5" ></text>
</g>
<g >
<title>__libc_start_main (34 samples, 0.17%)</title><rect x="172.1" y="901" width="2.0" height="15.0" fill="rgb(227,118,37)" rx="2" ry="2" />
<text  x="175.14" y="911.5" ></text>
</g>
<g >
<title>AsyncHandler::IsImportantFilePending (3 samples, 0.01%)</title><rect x="1178.8" y="741" width="0.2" height="15.0" fill="rgb(214,183,48)" rx="2" ry="2" />
<text  x="1181.83" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (37 samples, 0.18%)</title><rect x="636.8" y="581" width="2.2" height="15.0" fill="rgb(217,224,18)" rx="2" ry="2" />
<text  x="639.84" y="591.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (6 samples, 0.03%)</title><rect x="675.4" y="469" width="0.4" height="15.0" fill="rgb(246,174,28)" rx="2" ry="2" />
<text  x="678.42" y="479.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (3 samples, 0.01%)</title><rect x="174.0" y="485" width="0.1" height="15.0" fill="rgb(232,198,9)" rx="2" ry="2" />
<text  x="176.96" y="495.5" ></text>
</g>
<g >
<title>__handle_mm_fault (15 samples, 0.07%)</title><rect x="127.8" y="309" width="0.9" height="15.0" fill="rgb(208,220,2)" rx="2" ry="2" />
<text  x="130.79" y="319.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.01%)</title><rect x="904.5" y="149" width="0.1" height="15.0" fill="rgb(243,208,19)" rx="2" ry="2" />
<text  x="907.48" y="159.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (3 samples, 0.01%)</title><rect x="74.3" y="901" width="0.2" height="15.0" fill="rgb(224,82,38)" rx="2" ry="2" />
<text  x="77.28" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (437 samples, 2.18%)</title><rect x="1039.7" y="677" width="25.7" height="15.0" fill="rgb(210,42,43)" rx="2" ry="2" />
<text  x="1042.74" y="687.5" >s..</text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (10 samples, 0.05%)</title><rect x="148.8" y="741" width="0.6" height="15.0" fill="rgb(237,126,26)" rx="2" ry="2" />
<text  x="151.85" y="751.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}::operator() (2 samples, 0.01%)</title><rect x="32.9" y="901" width="0.2" height="15.0" fill="rgb(211,17,36)" rx="2" ry="2" />
<text  x="35.94" y="911.5" ></text>
</g>
<g >
<title>std::_Bit_iterator::_Bit_iterator (7 samples, 0.03%)</title><rect x="187.0" y="677" width="0.4" height="15.0" fill="rgb(254,16,5)" rx="2" ry="2" />
<text  x="190.01" y="687.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (33 samples, 0.16%)</title><rect x="738.1" y="517" width="2.0" height="15.0" fill="rgb(225,198,54)" rx="2" ry="2" />
<text  x="741.11" y="527.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (2 samples, 0.01%)</title><rect x="59.1" y="901" width="0.1" height="15.0" fill="rgb(227,196,5)" rx="2" ry="2" />
<text  x="62.11" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (4 samples, 0.02%)</title><rect x="43.5" y="901" width="0.3" height="15.0" fill="rgb(221,29,50)" rx="2" ry="2" />
<text  x="46.52" y="911.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandKeyInputProc (6 samples, 0.03%)</title><rect x="572.9" y="677" width="0.4" height="15.0" fill="rgb(213,151,3)" rx="2" ry="2" />
<text  x="575.92" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (31 samples, 0.15%)</title><rect x="94.8" y="901" width="1.8" height="15.0" fill="rgb(226,58,34)" rx="2" ry="2" />
<text  x="97.80" y="911.5" ></text>
</g>
<g >
<title>unmap_single_vma (10 samples, 0.05%)</title><rect x="891.7" y="149" width="0.6" height="15.0" fill="rgb(212,67,7)" rx="2" ry="2" />
<text  x="894.66" y="159.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 2ul, 3ul&gt;::__less (2 samples, 0.01%)</title><rect x="70.7" y="901" width="0.1" height="15.0" fill="rgb(213,53,9)" rx="2" ry="2" />
<text  x="73.69" y="911.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="867.5" y="213" width="0.1" height="15.0" fill="rgb(219,211,13)" rx="2" ry="2" />
<text  x="870.49" y="223.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (2,096 samples, 10.45%)</title><rect x="231.2" y="709" width="123.2" height="15.0" fill="rgb(230,174,33)" rx="2" ry="2" />
<text  x="234.18" y="719.5" >Game_Interprete..</text>
</g>
<g >
<title>page_fault (17 samples, 0.08%)</title><rect x="127.7" y="373" width="1.0" height="15.0" fill="rgb(232,0,29)" rx="2" ry="2" />
<text  x="130.74" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (15 samples, 0.07%)</title><rect x="943.5" y="645" width="0.9" height="15.0" fill="rgb(235,155,41)" rx="2" ry="2" />
<text  x="946.47" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_S_value (4 samples, 0.02%)</title><rect x="818.9" y="293" width="0.3" height="15.0" fill="rgb(218,161,49)" rx="2" ry="2" />
<text  x="821.92" y="303.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="959.7" y="597" width="0.1" height="15.0" fill="rgb(233,68,20)" rx="2" ry="2" />
<text  x="962.70" y="607.5" ></text>
</g>
<g >
<title>Graphics::UpdateZCallback (2 samples, 0.01%)</title><rect x="839.9" y="517" width="0.1" height="15.0" fill="rgb(206,139,40)" rx="2" ry="2" />
<text  x="842.91" y="527.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (78 samples, 0.39%)</title><rect x="963.6" y="597" width="4.6" height="15.0" fill="rgb(210,0,38)" rx="2" ry="2" />
<text  x="966.64" y="607.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandElseBranch (104 samples, 0.52%)</title><rect x="558.5" y="677" width="6.1" height="15.0" fill="rgb(242,71,25)" rx="2" ry="2" />
<text  x="561.45" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="130.6" y="453" width="0.1" height="15.0" fill="rgb(210,150,41)" rx="2" ry="2" />
<text  x="133.56" y="463.5" ></text>
</g>
<g >
<title>Player::Run (119 samples, 0.59%)</title><rect x="131.0" y="901" width="7.0" height="15.0" fill="rgb(212,68,31)" rx="2" ry="2" />
<text  x="133.97" y="911.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&amp;&gt; (2 samples, 0.01%)</title><rect x="745.7" y="517" width="0.1" height="15.0" fill="rgb(207,45,53)" rx="2" ry="2" />
<text  x="748.70" y="527.5" ></text>
</g>
<g >
<title>pixman_image_unref (5 samples, 0.02%)</title><rect x="102.7" y="901" width="0.3" height="15.0" fill="rgb(242,147,18)" rx="2" ry="2" />
<text  x="105.68" y="911.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.01%)</title><rect x="799.0" y="501" width="0.1" height="15.0" fill="rgb(224,153,21)" rx="2" ry="2" />
<text  x="801.98" y="511.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::operator= (8 samples, 0.04%)</title><rect x="68.5" y="901" width="0.5" height="15.0" fill="rgb(250,112,52)" rx="2" ry="2" />
<text  x="71.51" y="911.5" ></text>
</g>
<g >
<title>Game_Map::Update (182 samples, 0.91%)</title><rect x="138.0" y="853" width="10.7" height="15.0" fill="rgb(229,28,39)" rx="2" ry="2" />
<text  x="140.97" y="863.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (46 samples, 0.23%)</title><rect x="126.3" y="453" width="2.7" height="15.0" fill="rgb(216,31,17)" rx="2" ry="2" />
<text  x="129.32" y="463.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::swap (2 samples, 0.01%)</title><rect x="921.5" y="613" width="0.1" height="15.0" fill="rgb(212,227,31)" rx="2" ry="2" />
<text  x="924.48" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (7 samples, 0.03%)</title><rect x="449.9" y="597" width="0.5" height="15.0" fill="rgb(207,150,6)" rx="2" ry="2" />
<text  x="452.95" y="607.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (62 samples, 0.31%)</title><rect x="633.0" y="517" width="3.6" height="15.0" fill="rgb(207,42,45)" rx="2" ry="2" />
<text  x="635.96" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator bool (13 samples, 0.06%)</title><rect x="955.1" y="645" width="0.8" height="15.0" fill="rgb(207,206,47)" rx="2" ry="2" />
<text  x="958.12" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (17 samples, 0.08%)</title><rect x="974.3" y="645" width="1.0" height="15.0" fill="rgb(205,21,38)" rx="2" ry="2" />
<text  x="977.35" y="655.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.05%)</title><rect x="661.8" y="581" width="0.6" height="15.0" fill="rgb(222,58,35)" rx="2" ry="2" />
<text  x="664.78" y="591.5" ></text>
</g>
<g >
<title>operator delete@plt (2 samples, 0.01%)</title><rect x="661.1" y="597" width="0.1" height="15.0" fill="rgb(205,156,23)" rx="2" ry="2" />
<text  x="664.13" y="607.5" ></text>
</g>
<g >
<title>FileRequestAsync::BindStart (4,642 samples, 23.13%)</title><rect x="639.2" y="629" width="273.0" height="15.0" fill="rgb(211,25,21)" rx="2" ry="2" />
<text  x="642.20" y="639.5" >FileRequestAsync::BindStart</text>
</g>
<g >
<title>free_pcppages_bulk (7 samples, 0.03%)</title><rect x="891.0" y="37" width="0.4" height="15.0" fill="rgb(233,205,29)" rx="2" ry="2" />
<text  x="894.02" y="47.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (16 samples, 0.08%)</title><rect x="173.0" y="501" width="1.0" height="15.0" fill="rgb(219,79,49)" rx="2" ry="2" />
<text  x="176.02" y="511.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (7 samples, 0.03%)</title><rect x="130.6" y="613" width="0.4" height="15.0" fill="rgb(219,170,47)" rx="2" ry="2" />
<text  x="133.56" y="623.5" ></text>
</g>
<g >
<title>Sdl2Ui::ProcessActiveEvent (19 samples, 0.09%)</title><rect x="1181.1" y="773" width="1.1" height="15.0" fill="rgb(249,143,9)" rx="2" ry="2" />
<text  x="1184.06" y="783.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::operator= (8 samples, 0.04%)</title><rect x="60.0" y="901" width="0.5" height="15.0" fill="rgb(218,54,3)" rx="2" ry="2" />
<text  x="62.99" y="911.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.01%)</title><rect x="174.1" y="901" width="0.2" height="15.0" fill="rgb(211,200,39)" rx="2" ry="2" />
<text  x="177.14" y="911.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (410 samples, 2.04%)</title><rect x="800.8" y="469" width="24.1" height="15.0" fill="rgb(210,188,9)" rx="2" ry="2" />
<text  x="803.80" y="479.5" >s..</text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (15 samples, 0.07%)</title><rect x="931.8" y="629" width="0.9" height="15.0" fill="rgb(223,188,53)" rx="2" ry="2" />
<text  x="934.77" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (20 samples, 0.10%)</title><rect x="313.5" y="661" width="1.2" height="15.0" fill="rgb(219,53,10)" rx="2" ry="2" />
<text  x="316.51" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base (7 samples, 0.03%)</title><rect x="681.2" y="485" width="0.4" height="15.0" fill="rgb(225,123,9)" rx="2" ry="2" />
<text  x="684.19" y="495.5" ></text>
</g>
<g >
<title>Window_Base::Update (7 samples, 0.03%)</title><rect x="1179.8" y="741" width="0.4" height="15.0" fill="rgb(215,219,17)" rx="2" ry="2" />
<text  x="1182.77" y="751.5" ></text>
</g>
<g >
<title>schedule (14 samples, 0.07%)</title><rect x="1181.1" y="629" width="0.8" height="15.0" fill="rgb(232,130,30)" rx="2" ry="2" />
<text  x="1184.06" y="639.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.01%)</title><rect x="1032.7" y="645" width="0.1" height="15.0" fill="rgb(224,98,17)" rx="2" ry="2" />
<text  x="1035.69" y="655.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="867.5" y="277" width="0.1" height="15.0" fill="rgb(222,21,28)" rx="2" ry="2" />
<text  x="870.49" y="287.5" ></text>
</g>
<g >
<title>Opacity::IsTransparent (3 samples, 0.01%)</title><rect x="35.1" y="901" width="0.1" height="15.0" fill="rgb(212,17,33)" rx="2" ry="2" />
<text  x="38.05" y="911.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (2 samples, 0.01%)</title><rect x="36.4" y="901" width="0.1" height="15.0" fill="rgb(237,100,3)" rx="2" ry="2" />
<text  x="39.41" y="911.5" ></text>
</g>
<g >
<title>free_unref_page_commit (2 samples, 0.01%)</title><rect x="145.3" y="229" width="0.1" height="15.0" fill="rgb(215,202,0)" rx="2" ry="2" />
<text  x="148.32" y="239.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (2 samples, 0.01%)</title><rect x="955.0" y="613" width="0.1" height="15.0" fill="rgb(229,57,41)" rx="2" ry="2" />
<text  x="958.00" y="623.5" ></text>
</g>
<g >
<title>free_unref_page_list (5 samples, 0.02%)</title><rect x="904.1" y="85" width="0.3" height="15.0" fill="rgb(207,165,30)" rx="2" ry="2" />
<text  x="907.07" y="95.5" ></text>
</g>
<g >
<title>SDL_UpdateTexture_REAL (5 samples, 0.02%)</title><rect x="183.0" y="757" width="0.3" height="15.0" fill="rgb(251,189,41)" rx="2" ry="2" />
<text  x="186.02" y="767.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (9 samples, 0.04%)</title><rect x="942.4" y="549" width="0.5" height="15.0" fill="rgb(214,77,26)" rx="2" ry="2" />
<text  x="945.36" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.02%)</title><rect x="160.3" y="501" width="0.3" height="15.0" fill="rgb(242,140,50)" rx="2" ry="2" />
<text  x="163.26" y="511.5" ></text>
</g>
<g >
<title>__GI___poll (2 samples, 0.01%)</title><rect x="1180.5" y="677" width="0.1" height="15.0" fill="rgb(220,26,25)" rx="2" ry="2" />
<text  x="1183.53" y="687.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (7 samples, 0.03%)</title><rect x="30.9" y="901" width="0.4" height="15.0" fill="rgb(208,52,11)" rx="2" ry="2" />
<text  x="33.94" y="911.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (235 samples, 1.17%)</title><rect x="149.4" y="709" width="13.9" height="15.0" fill="rgb(247,4,47)" rx="2" ry="2" />
<text  x="152.44" y="719.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (25 samples, 0.12%)</title><rect x="158.8" y="533" width="1.5" height="15.0" fill="rgb(229,103,40)" rx="2" ry="2" />
<text  x="161.79" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (7 samples, 0.03%)</title><rect x="172.6" y="485" width="0.4" height="15.0" fill="rgb(206,66,50)" rx="2" ry="2" />
<text  x="175.61" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (32 samples, 0.16%)</title><rect x="625.8" y="581" width="1.9" height="15.0" fill="rgb(231,131,6)" rx="2" ry="2" />
<text  x="628.85" y="591.5" ></text>
</g>
<g >
<title>Sprite::SetZ (4 samples, 0.02%)</title><rect x="936.0" y="629" width="0.2" height="15.0" fill="rgb(215,217,2)" rx="2" ry="2" />
<text  x="939.00" y="639.5" ></text>
</g>
<g >
<title>__GI_madvise (2 samples, 0.01%)</title><rect x="145.7" y="453" width="0.1" height="15.0" fill="rgb(208,206,52)" rx="2" ry="2" />
<text  x="148.67" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (3 samples, 0.01%)</title><rect x="1097.1" y="693" width="0.2" height="15.0" fill="rgb(228,51,37)" rx="2" ry="2" />
<text  x="1100.14" y="703.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (65 samples, 0.32%)</title><rect x="16.9" y="837" width="3.8" height="15.0" fill="rgb(236,114,25)" rx="2" ry="2" />
<text  x="19.88" y="847.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (3 samples, 0.01%)</title><rect x="854.5" y="517" width="0.2" height="15.0" fill="rgb(240,31,51)" rx="2" ry="2" />
<text  x="857.50" y="527.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (119 samples, 0.59%)</title><rect x="131.0" y="773" width="7.0" height="15.0" fill="rgb(219,81,54)" rx="2" ry="2" />
<text  x="133.97" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (3 samples, 0.01%)</title><rect x="1159.9" y="677" width="0.2" height="15.0" fill="rgb(227,51,18)" rx="2" ry="2" />
<text  x="1162.95" y="687.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;*&gt; (4 samples, 0.02%)</title><rect x="905.7" y="373" width="0.3" height="15.0" fill="rgb(224,34,50)" rx="2" ry="2" />
<text  x="908.72" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;1, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt;::_S_cget (3 samples, 0.01%)</title><rect x="62.9" y="901" width="0.1" height="15.0" fill="rgb(250,85,18)" rx="2" ry="2" />
<text  x="65.87" y="911.5" ></text>
</g>
<g >
<title>std::_Bit_reference::operator bool (4 samples, 0.02%)</title><rect x="186.5" y="693" width="0.3" height="15.0" fill="rgb(235,217,44)" rx="2" ry="2" />
<text  x="189.54" y="703.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (5 samples, 0.02%)</title><rect x="735.3" y="437" width="0.3" height="15.0" fill="rgb(237,2,44)" rx="2" ry="2" />
<text  x="738.29" y="447.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, true&gt; (69 samples, 0.34%)</title><rect x="139.7" y="613" width="4.0" height="15.0" fill="rgb(220,50,37)" rx="2" ry="2" />
<text  x="142.67" y="623.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (24 samples, 0.12%)</title><rect x="974.3" y="661" width="1.4" height="15.0" fill="rgb(215,157,41)" rx="2" ry="2" />
<text  x="977.29" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::destroy&lt;Bitmap&gt; (638 samples, 3.18%)</title><rect x="869.0" y="437" width="37.5" height="15.0" fill="rgb(233,41,20)" rx="2" ry="2" />
<text  x="872.02" y="447.5" >__g..</text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (49 samples, 0.24%)</title><rect x="126.3" y="501" width="2.9" height="15.0" fill="rgb(243,36,6)" rx="2" ry="2" />
<text  x="129.32" y="511.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (7 samples, 0.03%)</title><rect x="130.6" y="693" width="0.4" height="15.0" fill="rgb(207,129,50)" rx="2" ry="2" />
<text  x="133.56" y="703.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::_M_ptr (6 samples, 0.03%)</title><rect x="1168.5" y="677" width="0.4" height="15.0" fill="rgb(212,165,29)" rx="2" ry="2" />
<text  x="1171.53" y="687.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="628.3" y="613" width="0.1" height="15.0" fill="rgb(253,33,5)" rx="2" ry="2" />
<text  x="631.32" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::begin (8 samples, 0.04%)</title><rect x="651.9" y="581" width="0.5" height="15.0" fill="rgb(231,195,2)" rx="2" ry="2" />
<text  x="654.90" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (12 samples, 0.06%)</title><rect x="353.7" y="693" width="0.7" height="15.0" fill="rgb(231,101,25)" rx="2" ry="2" />
<text  x="356.74" y="703.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (88 samples, 0.44%)</title><rect x="740.5" y="517" width="5.2" height="15.0" fill="rgb(248,24,24)" rx="2" ry="2" />
<text  x="743.52" y="527.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (10 samples, 0.05%)</title><rect x="138.2" y="469" width="0.6" height="15.0" fill="rgb(208,164,19)" rx="2" ry="2" />
<text  x="141.20" y="479.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="129.0" y="421" width="0.2" height="15.0" fill="rgb(247,146,5)" rx="2" ry="2" />
<text  x="132.03" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (104 samples, 0.52%)</title><rect x="630.7" y="565" width="6.1" height="15.0" fill="rgb(243,18,46)" rx="2" ry="2" />
<text  x="633.73" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (4 samples, 0.02%)</title><rect x="138.0" y="565" width="0.2" height="15.0" fill="rgb(221,92,39)" rx="2" ry="2" />
<text  x="140.97" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (29 samples, 0.14%)</title><rect x="418.5" y="597" width="1.7" height="15.0" fill="rgb(239,220,33)" rx="2" ry="2" />
<text  x="421.49" y="607.5" ></text>
</g>
<g >
<title>max&lt;int&gt; (2 samples, 0.01%)</title><rect x="1163.2" y="677" width="0.1" height="15.0" fill="rgb(214,8,15)" rx="2" ry="2" />
<text  x="1166.18" y="687.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (2 samples, 0.01%)</title><rect x="21.9" y="917" width="0.1" height="15.0" fill="rgb(222,68,26)" rx="2" ry="2" />
<text  x="24.88" y="927.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (35 samples, 0.17%)</title><rect x="586.2" y="645" width="2.1" height="15.0" fill="rgb(247,34,41)" rx="2" ry="2" />
<text  x="589.21" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (9 samples, 0.04%)</title><rect x="44.6" y="901" width="0.5" height="15.0" fill="rgb(214,202,13)" rx="2" ry="2" />
<text  x="47.58" y="911.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (6 samples, 0.03%)</title><rect x="945.8" y="613" width="0.3" height="15.0" fill="rgb(243,119,49)" rx="2" ry="2" />
<text  x="948.77" y="623.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (2 samples, 0.01%)</title><rect x="891.5" y="69" width="0.1" height="15.0" fill="rgb(212,84,1)" rx="2" ry="2" />
<text  x="894.49" y="79.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (10 samples, 0.05%)</title><rect x="138.2" y="549" width="0.6" height="15.0" fill="rgb(238,165,19)" rx="2" ry="2" />
<text  x="141.20" y="559.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (27 samples, 0.13%)</title><rect x="26.9" y="901" width="1.6" height="15.0" fill="rgb(249,137,8)" rx="2" ry="2" />
<text  x="29.94" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (47 samples, 0.23%)</title><rect x="545.9" y="645" width="2.7" height="15.0" fill="rgb(218,53,32)" rx="2" ry="2" />
<text  x="548.87" y="655.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="904.5" y="213" width="0.1" height="15.0" fill="rgb(212,106,37)" rx="2" ry="2" />
<text  x="907.48" y="223.5" ></text>
</g>
<g >
<title>std::_Bit_const_iterator::_Bit_const_iterator (5 samples, 0.02%)</title><rect x="189.2" y="661" width="0.3" height="15.0" fill="rgb(225,47,4)" rx="2" ry="2" />
<text  x="192.19" y="671.5" ></text>
</g>
<g >
<title>do_mmap (11 samples, 0.05%)</title><rect x="126.8" y="293" width="0.6" height="15.0" fill="rgb(227,54,1)" rx="2" ry="2" />
<text  x="129.79" y="303.5" ></text>
</g>
<g >
<title>apparmor_file_permission (2 samples, 0.01%)</title><rect x="21.1" y="805" width="0.1" height="15.0" fill="rgb(230,149,43)" rx="2" ry="2" />
<text  x="24.11" y="815.5" ></text>
</g>
<g >
<title>Cache::Picture (9 samples, 0.04%)</title><rect x="163.3" y="661" width="0.5" height="15.0" fill="rgb(242,115,26)" rx="2" ry="2" />
<text  x="166.26" y="671.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (59 samples, 0.29%)</title><rect x="848.6" y="501" width="3.5" height="15.0" fill="rgb(245,183,24)" rx="2" ry="2" />
<text  x="851.61" y="511.5" ></text>
</g>
<g >
<title>FlagSet&lt;RPG::EventPage::Trigger, 32ul&gt;::count (2 samples, 0.01%)</title><rect x="1142.0" y="741" width="0.1" height="15.0" fill="rgb(234,24,20)" rx="2" ry="2" />
<text  x="1145.01" y="751.5" ></text>
</g>
<g >
<title>__interceptor_free (398 samples, 1.98%)</title><rect x="871.8" y="373" width="23.4" height="15.0" fill="rgb(218,143,4)" rx="2" ry="2" />
<text  x="874.84" y="383.5" >_..</text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt;::operator()&lt;int const*&gt; (2 samples, 0.01%)</title><rect x="563.8" y="581" width="0.1" height="15.0" fill="rgb(219,188,18)" rx="2" ry="2" />
<text  x="566.80" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (12 samples, 0.06%)</title><rect x="1126.9" y="709" width="0.7" height="15.0" fill="rgb(216,78,29)" rx="2" ry="2" />
<text  x="1129.90" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (8 samples, 0.04%)</title><rect x="1039.0" y="677" width="0.4" height="15.0" fill="rgb(223,0,13)" rx="2" ry="2" />
<text  x="1041.98" y="687.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (12 samples, 0.06%)</title><rect x="782.1" y="485" width="0.7" height="15.0" fill="rgb(215,54,34)" rx="2" ry="2" />
<text  x="785.10" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (3 samples, 0.01%)</title><rect x="591.6" y="613" width="0.2" height="15.0" fill="rgb(246,12,51)" rx="2" ry="2" />
<text  x="594.62" y="623.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::operator= (2 samples, 0.01%)</title><rect x="823.9" y="437" width="0.1" height="15.0" fill="rgb(223,72,47)" rx="2" ry="2" />
<text  x="826.91" y="447.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_invoke (235 samples, 1.17%)</title><rect x="149.4" y="693" width="13.9" height="15.0" fill="rgb(232,110,28)" rx="2" ry="2" />
<text  x="152.44" y="703.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (5 samples, 0.02%)</title><rect x="175.0" y="549" width="0.3" height="15.0" fill="rgb(213,55,20)" rx="2" ry="2" />
<text  x="177.96" y="559.5" ></text>
</g>
<g >
<title>std::_Bit_iterator::operator* (13 samples, 0.06%)</title><rect x="187.4" y="677" width="0.8" height="15.0" fill="rgb(219,84,17)" rx="2" ry="2" />
<text  x="190.43" y="687.5" ></text>
</g>
<g >
<title>std::map&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, (anonymous namespace)::CacheItem, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::end (3 samples, 0.01%)</title><rect x="703.6" y="533" width="0.2" height="15.0" fill="rgb(240,149,51)" rx="2" ry="2" />
<text  x="706.59" y="543.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (71 samples, 0.35%)</title><rect x="126.3" y="837" width="4.2" height="15.0" fill="rgb(247,106,31)" rx="2" ry="2" />
<text  x="129.32" y="847.5" ></text>
</g>
<g >
<title>Bitmap::Init (19 samples, 0.09%)</title><rect x="163.8" y="485" width="1.1" height="15.0" fill="rgb(226,217,3)" rx="2" ry="2" />
<text  x="166.79" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.05%)</title><rect x="138.2" y="453" width="0.6" height="15.0" fill="rgb(213,131,14)" rx="2" ry="2" />
<text  x="141.20" y="463.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.01%)</title><rect x="177.9" y="901" width="0.2" height="15.0" fill="rgb(235,144,7)" rx="2" ry="2" />
<text  x="180.90" y="911.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (3 samples, 0.01%)</title><rect x="174.0" y="469" width="0.1" height="15.0" fill="rgb(214,57,27)" rx="2" ry="2" />
<text  x="176.96" y="479.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.02%)</title><rect x="693.9" y="453" width="0.3" height="15.0" fill="rgb(248,35,15)" rx="2" ry="2" />
<text  x="696.95" y="463.5" ></text>
</g>
<g >
<title>pixman_image_get_height (4 samples, 0.02%)</title><rect x="853.6" y="501" width="0.2" height="15.0" fill="rgb(254,102,10)" rx="2" ry="2" />
<text  x="856.61" y="511.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (5 samples, 0.02%)</title><rect x="857.8" y="485" width="0.3" height="15.0" fill="rgb(220,77,27)" rx="2" ry="2" />
<text  x="860.79" y="495.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (297 samples, 1.48%)</title><rect x="108.9" y="565" width="17.4" height="15.0" fill="rgb(249,13,53)" rx="2" ry="2" />
<text  x="111.86" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (2 samples, 0.01%)</title><rect x="646.8" y="565" width="0.2" height="15.0" fill="rgb(254,227,23)" rx="2" ry="2" />
<text  x="649.84" y="575.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (60 samples, 0.30%)</title><rect x="864.3" y="373" width="3.5" height="15.0" fill="rgb(231,205,2)" rx="2" ry="2" />
<text  x="867.32" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (8 samples, 0.04%)</title><rect x="1169.6" y="709" width="0.5" height="15.0" fill="rgb(221,30,1)" rx="2" ry="2" />
<text  x="1172.59" y="719.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (22 samples, 0.11%)</title><rect x="836.3" y="501" width="1.3" height="15.0" fill="rgb(207,14,35)" rx="2" ry="2" />
<text  x="839.26" y="511.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (75 samples, 0.37%)</title><rect x="731.7" y="501" width="4.4" height="15.0" fill="rgb(231,184,13)" rx="2" ry="2" />
<text  x="734.70" y="511.5" ></text>
</g>
<g >
<title>Cache::Picture (49 samples, 0.24%)</title><rect x="175.0" y="565" width="2.8" height="15.0" fill="rgb(223,180,46)" rx="2" ry="2" />
<text  x="177.96" y="575.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;2ul, bool&gt; (8 samples, 0.04%)</title><rect x="713.9" y="389" width="0.5" height="15.0" fill="rgb(229,176,46)" rx="2" ry="2" />
<text  x="716.94" y="399.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (235 samples, 1.17%)</title><rect x="149.4" y="661" width="13.9" height="15.0" fill="rgb(223,96,37)" rx="2" ry="2" />
<text  x="152.44" y="671.5" ></text>
</g>
<g >
<title>Sprite::SetFlashEffect (7 samples, 0.03%)</title><rect x="1163.7" y="693" width="0.4" height="15.0" fill="rgb(207,101,42)" rx="2" ry="2" />
<text  x="1166.65" y="703.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (3 samples, 0.01%)</title><rect x="937.9" y="581" width="0.2" height="15.0" fill="rgb(231,205,4)" rx="2" ry="2" />
<text  x="940.89" y="591.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~tuple (10 samples, 0.05%)</title><rect x="745.9" y="533" width="0.6" height="15.0" fill="rgb(232,212,34)" rx="2" ry="2" />
<text  x="748.88" y="543.5" ></text>
</g>
<g >
<title>Color::Color (4 samples, 0.02%)</title><rect x="1159.5" y="709" width="0.2" height="15.0" fill="rgb(232,14,33)" rx="2" ry="2" />
<text  x="1162.48" y="719.5" ></text>
</g>
<g >
<title>error_entry (17 samples, 0.08%)</title><rect x="788.9" y="485" width="1.0" height="15.0" fill="rgb(254,87,13)" rx="2" ry="2" />
<text  x="791.86" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt;::__normal_iterator (3 samples, 0.01%)</title><rect x="41.1" y="901" width="0.2" height="15.0" fill="rgb(231,50,28)" rx="2" ry="2" />
<text  x="44.11" y="911.5" ></text>
</g>
<g >
<title>Bitmap::GetWidth (2 samples, 0.01%)</title><rect x="24.1" y="901" width="0.1" height="15.0" fill="rgb(235,141,37)" rx="2" ry="2" />
<text  x="27.11" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;int const&gt; (4 samples, 0.02%)</title><rect x="46.9" y="901" width="0.3" height="15.0" fill="rgb(220,156,49)" rx="2" ry="2" />
<text  x="49.93" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_create (10 samples, 0.05%)</title><rect x="957.4" y="597" width="0.6" height="15.0" fill="rgb(244,162,42)" rx="2" ry="2" />
<text  x="960.41" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt; &gt; &gt; &gt; (4 samples, 0.02%)</title><rect x="1176.8" y="741" width="0.3" height="15.0" fill="rgb(215,152,11)" rx="2" ry="2" />
<text  x="1179.83" y="751.5" ></text>
</g>
<g >
<title>std::find&lt;int const*, int&gt; (86 samples, 0.43%)</title><rect x="450.5" y="645" width="5.1" height="15.0" fill="rgb(207,221,54)" rx="2" ry="2" />
<text  x="453.54" y="655.5" ></text>
</g>
<g >
<title>Player::GetTicks (5 samples, 0.02%)</title><rect x="700.2" y="533" width="0.3" height="15.0" fill="rgb(206,177,26)" rx="2" ry="2" />
<text  x="703.18" y="543.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Game_Screen*, false&gt;::_M_head (5 samples, 0.02%)</title><rect x="52.8" y="901" width="0.2" height="15.0" fill="rgb(249,24,52)" rx="2" ry="2" />
<text  x="55.75" y="911.5" ></text>
</g>
<g >
<title>std::min&lt;int&gt; (9 samples, 0.04%)</title><rect x="81.7" y="901" width="0.6" height="15.0" fill="rgb(225,110,48)" rx="2" ry="2" />
<text  x="84.75" y="911.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (46 samples, 0.23%)</title><rect x="160.6" y="613" width="2.7" height="15.0" fill="rgb(235,186,48)" rx="2" ry="2" />
<text  x="163.55" y="623.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (50 samples, 0.25%)</title><rect x="1120.3" y="709" width="2.9" height="15.0" fill="rgb(224,27,54)" rx="2" ry="2" />
<text  x="1123.25" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (143 samples, 0.71%)</title><rect x="960.4" y="645" width="8.4" height="15.0" fill="rgb(220,102,14)" rx="2" ry="2" />
<text  x="963.35" y="655.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (3 samples, 0.01%)</title><rect x="922.8" y="613" width="0.1" height="15.0" fill="rgb(216,126,39)" rx="2" ry="2" />
<text  x="925.77" y="623.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash (23 samples, 0.11%)</title><rect x="637.1" y="549" width="1.3" height="15.0" fill="rgb(247,227,20)" rx="2" ry="2" />
<text  x="640.08" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::get (5 samples, 0.02%)</title><rect x="89.2" y="901" width="0.3" height="15.0" fill="rgb(241,37,14)" rx="2" ry="2" />
<text  x="92.16" y="911.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::swap (2 samples, 0.01%)</title><rect x="68.0" y="901" width="0.2" height="15.0" fill="rgb(229,93,6)" rx="2" ry="2" />
<text  x="71.04" y="911.5" ></text>
</g>
<g >
<title>release_pages (3 samples, 0.01%)</title><rect x="163.5" y="309" width="0.2" height="15.0" fill="rgb(245,199,49)" rx="2" ry="2" />
<text  x="166.55" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (12 samples, 0.06%)</title><rect x="408.5" y="629" width="0.8" height="15.0" fill="rgb(233,220,37)" rx="2" ry="2" />
<text  x="411.55" y="639.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (14 samples, 0.07%)</title><rect x="1181.1" y="661" width="0.8" height="15.0" fill="rgb(234,190,29)" rx="2" ry="2" />
<text  x="1184.06" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (46 samples, 0.23%)</title><rect x="160.6" y="501" width="2.7" height="15.0" fill="rgb(244,118,21)" rx="2" ry="2" />
<text  x="163.55" y="511.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (5 samples, 0.02%)</title><rect x="842.0" y="533" width="0.3" height="15.0" fill="rgb(212,196,19)" rx="2" ry="2" />
<text  x="844.97" y="543.5" ></text>
</g>
<g >
<title>std::__detail::operator!=&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, true&gt; (3 samples, 0.01%)</title><rect x="694.4" y="517" width="0.2" height="15.0" fill="rgb(232,149,54)" rx="2" ry="2" />
<text  x="697.42" y="527.5" ></text>
</g>
<g >
<title>Bitmap::GetRect (8 samples, 0.04%)</title><rect x="835.4" y="517" width="0.5" height="15.0" fill="rgb(242,25,6)" rx="2" ry="2" />
<text  x="838.44" y="527.5" ></text>
</g>
<g >
<title>std::swap&lt;Bitmap*&gt; (7 samples, 0.03%)</title><rect x="907.8" y="501" width="0.4" height="15.0" fill="rgb(252,83,52)" rx="2" ry="2" />
<text  x="910.78" y="511.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="148.7" y="885" width="0.1" height="15.0" fill="rgb(250,138,10)" rx="2" ry="2" />
<text  x="151.67" y="895.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (5 samples, 0.02%)</title><rect x="890.1" y="261" width="0.3" height="15.0" fill="rgb(241,92,39)" rx="2" ry="2" />
<text  x="893.07" y="271.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (7 samples, 0.03%)</title><rect x="794.8" y="357" width="0.4" height="15.0" fill="rgb(228,155,30)" rx="2" ry="2" />
<text  x="797.80" y="367.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (65 samples, 0.32%)</title><rect x="163.3" y="901" width="3.8" height="15.0" fill="rgb(227,30,18)" rx="2" ry="2" />
<text  x="166.26" y="911.5" ></text>
</g>
<g >
<title>__vfs_read (3 samples, 0.01%)</title><rect x="20.9" y="837" width="0.2" height="15.0" fill="rgb(226,182,10)" rx="2" ry="2" />
<text  x="23.88" y="847.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (8 samples, 0.04%)</title><rect x="711.4" y="437" width="0.4" height="15.0" fill="rgb(236,74,0)" rx="2" ry="2" />
<text  x="714.35" y="447.5" ></text>
</g>
<g >
<title>Game_Screen::GetPicture (5 samples, 0.02%)</title><rect x="575.9" y="661" width="0.3" height="15.0" fill="rgb(247,48,38)" rx="2" ry="2" />
<text  x="578.86" y="671.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (54 samples, 0.27%)</title><rect x="808.4" y="341" width="3.2" height="15.0" fill="rgb(248,94,6)" rx="2" ry="2" />
<text  x="811.39" y="351.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (2 samples, 0.01%)</title><rect x="76.4" y="901" width="0.1" height="15.0" fill="rgb(206,30,21)" rx="2" ry="2" />
<text  x="79.40" y="911.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (8 samples, 0.04%)</title><rect x="138.8" y="517" width="0.5" height="15.0" fill="rgb(223,195,30)" rx="2" ry="2" />
<text  x="141.79" y="527.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator() (27 samples, 0.13%)</title><rect x="819.3" y="293" width="1.6" height="15.0" fill="rgb(247,9,47)" rx="2" ry="2" />
<text  x="822.27" y="303.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (4 samples, 0.02%)</title><rect x="138.0" y="581" width="0.2" height="15.0" fill="rgb(248,52,23)" rx="2" ry="2" />
<text  x="140.97" y="591.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::begin (6 samples, 0.03%)</title><rect x="455.6" y="645" width="0.3" height="15.0" fill="rgb(242,189,11)" rx="2" ry="2" />
<text  x="458.59" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (7 samples, 0.03%)</title><rect x="837.1" y="437" width="0.5" height="15.0" fill="rgb(249,5,5)" rx="2" ry="2" />
<text  x="840.15" y="447.5" ></text>
</g>
<g >
<title>_start (17,010 samples, 84.77%)</title><rect x="182.2" y="917" width="1000.3" height="15.0" fill="rgb(213,219,44)" rx="2" ry="2" />
<text  x="185.19" y="927.5" >_start</text>
</g>
<g >
<title>entry_SYSCALL_64 (5 samples, 0.02%)</title><rect x="15.5" y="917" width="0.3" height="15.0" fill="rgb(223,218,51)" rx="2" ry="2" />
<text  x="18.47" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (2 samples, 0.01%)</title><rect x="829.4" y="485" width="0.1" height="15.0" fill="rgb(243,160,12)" rx="2" ry="2" />
<text  x="832.38" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (297 samples, 1.48%)</title><rect x="108.9" y="533" width="17.4" height="15.0" fill="rgb(233,40,2)" rx="2" ry="2" />
<text  x="111.86" y="543.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (5 samples, 0.02%)</title><rect x="171.6" y="901" width="0.3" height="15.0" fill="rgb(217,15,5)" rx="2" ry="2" />
<text  x="174.61" y="911.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (2 samples, 0.01%)</title><rect x="576.7" y="661" width="0.1" height="15.0" fill="rgb(246,33,15)" rx="2" ry="2" />
<text  x="579.68" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (25 samples, 0.12%)</title><rect x="422.3" y="597" width="1.4" height="15.0" fill="rgb(232,94,35)" rx="2" ry="2" />
<text  x="425.25" y="607.5" ></text>
</g>
<g >
<title>vmacache_find (4 samples, 0.02%)</title><rect x="790.3" y="421" width="0.2" height="15.0" fill="rgb(238,228,0)" rx="2" ry="2" />
<text  x="793.28" y="431.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::operator() (4 samples, 0.02%)</title><rect x="818.6" y="277" width="0.3" height="15.0" fill="rgb(234,205,35)" rx="2" ry="2" />
<text  x="821.62" y="287.5" ></text>
</g>
<g >
<title>Tone::Tone (11 samples, 0.05%)</title><rect x="933.6" y="613" width="0.6" height="15.0" fill="rgb(217,177,8)" rx="2" ry="2" />
<text  x="936.59" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (2 samples, 0.01%)</title><rect x="562.9" y="597" width="0.1" height="15.0" fill="rgb(219,84,2)" rx="2" ry="2" />
<text  x="565.92" y="607.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (65 samples, 0.32%)</title><rect x="163.3" y="805" width="3.8" height="15.0" fill="rgb(247,113,7)" rx="2" ry="2" />
<text  x="166.26" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_construct&lt;char32_t const*&gt; (3 samples, 0.01%)</title><rect x="958.9" y="581" width="0.2" height="15.0" fill="rgb(220,25,28)" rx="2" ry="2" />
<text  x="961.88" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.05%)</title><rect x="943.7" y="613" width="0.6" height="15.0" fill="rgb(207,183,31)" rx="2" ry="2" />
<text  x="946.71" y="623.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (2 samples, 0.01%)</title><rect x="700.1" y="517" width="0.1" height="15.0" fill="rgb(212,227,22)" rx="2" ry="2" />
<text  x="703.06" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (4 samples, 0.02%)</title><rect x="181.6" y="901" width="0.2" height="15.0" fill="rgb(213,86,37)" rx="2" ry="2" />
<text  x="184.60" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (17 samples, 0.08%)</title><rect x="445.0" y="613" width="1.0" height="15.0" fill="rgb(237,25,39)" rx="2" ry="2" />
<text  x="448.01" y="623.5" ></text>
</g>
<g >
<title>Player::Run (49 samples, 0.24%)</title><rect x="175.0" y="885" width="2.8" height="15.0" fill="rgb(224,41,50)" rx="2" ry="2" />
<text  x="177.96" y="895.5" ></text>
</g>
<g >
<title>x86_pmu_enable (56 samples, 0.28%)</title><rect x="17.2" y="725" width="3.3" height="15.0" fill="rgb(225,198,43)" rx="2" ry="2" />
<text  x="20.23" y="735.5" ></text>
</g>
<g >
<title>std::find&lt;int const*, int&gt; (11 samples, 0.05%)</title><rect x="563.3" y="629" width="0.6" height="15.0" fill="rgb(244,58,26)" rx="2" ry="2" />
<text  x="566.27" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (137 samples, 0.68%)</title><rect x="281.4" y="661" width="8.1" height="15.0" fill="rgb(249,9,54)" rx="2" ry="2" />
<text  x="284.40" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_destroy (3 samples, 0.01%)</title><rect x="958.0" y="581" width="0.2" height="15.0" fill="rgb(213,68,36)" rx="2" ry="2" />
<text  x="961.00" y="591.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (6 samples, 0.03%)</title><rect x="914.7" y="629" width="0.3" height="15.0" fill="rgb(239,21,40)" rx="2" ry="2" />
<text  x="917.66" y="639.5" ></text>
</g>
<g >
<title>Sprite::SetFlashEffect (24 samples, 0.12%)</title><rect x="833.6" y="517" width="1.4" height="15.0" fill="rgb(213,82,11)" rx="2" ry="2" />
<text  x="836.56" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::operator bool (9 samples, 0.04%)</title><rect x="1137.2" y="725" width="0.6" height="15.0" fill="rgb(214,125,40)" rx="2" ry="2" />
<text  x="1140.25" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (3 samples, 0.01%)</title><rect x="418.1" y="597" width="0.2" height="15.0" fill="rgb(251,81,28)" rx="2" ry="2" />
<text  x="421.07" y="607.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_M_head (5 samples, 0.02%)</title><rect x="54.2" y="901" width="0.3" height="15.0" fill="rgb(229,130,18)" rx="2" ry="2" />
<text  x="57.22" y="911.5" ></text>
</g>
<g >
<title>flush_tlb_func_common.constprop.9 (2 samples, 0.01%)</title><rect x="892.7" y="133" width="0.1" height="15.0" fill="rgb(254,169,51)" rx="2" ry="2" />
<text  x="895.72" y="143.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (46 samples, 0.23%)</title><rect x="160.6" y="453" width="2.7" height="15.0" fill="rgb(229,138,39)" rx="2" ry="2" />
<text  x="163.55" y="463.5" ></text>
</g>
<g >
<title>Game_Interpreter::ValueOrVariable (7 samples, 0.03%)</title><rect x="574.6" y="661" width="0.4" height="15.0" fill="rgb(243,68,33)" rx="2" ry="2" />
<text  x="577.57" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (6 samples, 0.03%)</title><rect x="426.2" y="581" width="0.4" height="15.0" fill="rgb(223,108,23)" rx="2" ry="2" />
<text  x="429.25" y="591.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (182 samples, 0.91%)</title><rect x="138.0" y="757" width="10.7" height="15.0" fill="rgb(223,20,37)" rx="2" ry="2" />
<text  x="140.97" y="767.5" ></text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt;, 36ul&gt; (2 samples, 0.01%)</title><rect x="184.0" y="789" width="0.1" height="15.0" fill="rgb(216,32,52)" rx="2" ry="2" />
<text  x="187.02" y="799.5" ></text>
</g>
<g >
<title>free_unref_page_commit (9 samples, 0.04%)</title><rect x="890.9" y="53" width="0.5" height="15.0" fill="rgb(219,24,13)" rx="2" ry="2" />
<text  x="893.90" y="63.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (3 samples, 0.01%)</title><rect x="1178.2" y="709" width="0.2" height="15.0" fill="rgb(222,94,45)" rx="2" ry="2" />
<text  x="1181.18" y="719.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (438 samples, 2.18%)</title><rect x="799.7" y="517" width="25.8" height="15.0" fill="rgb(244,125,51)" rx="2" ry="2" />
<text  x="802.74" y="527.5" >s..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (117 samples, 0.58%)</title><rect x="551.0" y="661" width="6.9" height="15.0" fill="rgb(242,165,27)" rx="2" ry="2" />
<text  x="554.04" y="671.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::operator bool (2 samples, 0.01%)</title><rect x="1140.1" y="741" width="0.1" height="15.0" fill="rgb(225,138,29)" rx="2" ry="2" />
<text  x="1143.07" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (6 samples, 0.03%)</title><rect x="836.8" y="453" width="0.3" height="15.0" fill="rgb(215,73,39)" rx="2" ry="2" />
<text  x="839.79" y="463.5" ></text>
</g>
<g >
<title>operator== (6 samples, 0.03%)</title><rect x="1163.7" y="661" width="0.4" height="15.0" fill="rgb(248,124,36)" rx="2" ry="2" />
<text  x="1166.71" y="671.5" ></text>
</g>
<g >
<title>operator delete (93 samples, 0.46%)</title><rect x="641.4" y="565" width="5.4" height="15.0" fill="rgb(219,173,13)" rx="2" ry="2" />
<text  x="644.37" y="575.5" ></text>
</g>
<g >
<title>Color::Color (14 samples, 0.07%)</title><rect x="820.9" y="373" width="0.8" height="15.0" fill="rgb(219,0,16)" rx="2" ry="2" />
<text  x="823.92" y="383.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (7 samples, 0.03%)</title><rect x="894.0" y="341" width="0.4" height="15.0" fill="rgb(217,143,29)" rx="2" ry="2" />
<text  x="897.01" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (21 samples, 0.10%)</title><rect x="447.4" y="613" width="1.3" height="15.0" fill="rgb(253,133,52)" rx="2" ry="2" />
<text  x="450.42" y="623.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (22 samples, 0.11%)</title><rect x="98.2" y="901" width="1.3" height="15.0" fill="rgb(235,229,37)" rx="2" ry="2" />
<text  x="101.21" y="911.5" ></text>
</g>
<g >
<title>Sprite::SetWaverPhase (2 samples, 0.01%)</title><rect x="1165.2" y="709" width="0.1" height="15.0" fill="rgb(246,94,29)" rx="2" ry="2" />
<text  x="1168.18" y="719.5" ></text>
</g>
<g >
<title>Sprite::SetY (4 samples, 0.02%)</title><rect x="839.4" y="533" width="0.2" height="15.0" fill="rgb(211,215,22)" rx="2" ry="2" />
<text  x="842.38" y="543.5" ></text>
</g>
<g >
<title>Tone::Tone (3 samples, 0.01%)</title><rect x="1159.3" y="693" width="0.2" height="15.0" fill="rgb(217,69,4)" rx="2" ry="2" />
<text  x="1162.30" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (20 samples, 0.10%)</title><rect x="126.4" y="389" width="1.2" height="15.0" fill="rgb(216,186,41)" rx="2" ry="2" />
<text  x="129.38" y="399.5" ></text>
</g>
<g >
<title>release_pages (3 samples, 0.01%)</title><rect x="145.3" y="261" width="0.1" height="15.0" fill="rgb(238,18,51)" rx="2" ry="2" />
<text  x="148.26" y="271.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (34 samples, 0.17%)</title><rect x="172.1" y="677" width="2.0" height="15.0" fill="rgb(215,197,7)" rx="2" ry="2" />
<text  x="175.14" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (2 samples, 0.01%)</title><rect x="446.7" y="613" width="0.1" height="15.0" fill="rgb(210,19,38)" rx="2" ry="2" />
<text  x="449.71" y="623.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (49 samples, 0.24%)</title><rect x="145.8" y="597" width="2.9" height="15.0" fill="rgb(238,186,41)" rx="2" ry="2" />
<text  x="148.79" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (3 samples, 0.01%)</title><rect x="132.7" y="517" width="0.2" height="15.0" fill="rgb(252,40,10)" rx="2" ry="2" />
<text  x="135.68" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (6 samples, 0.03%)</title><rect x="975.3" y="645" width="0.4" height="15.0" fill="rgb(246,129,38)" rx="2" ry="2" />
<text  x="978.35" y="655.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (234 samples, 1.17%)</title><rect x="640.0" y="613" width="13.7" height="15.0" fill="rgb(241,28,7)" rx="2" ry="2" />
<text  x="642.96" y="623.5" ></text>
</g>
<g >
<title>variables (10 samples, 0.05%)</title><rect x="548.6" y="645" width="0.6" height="15.0" fill="rgb(228,74,7)" rx="2" ry="2" />
<text  x="551.63" y="655.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (297 samples, 1.48%)</title><rect x="108.9" y="677" width="17.4" height="15.0" fill="rgb(242,138,47)" rx="2" ry="2" />
<text  x="111.86" y="687.5" ></text>
</g>
<g >
<title>Color::Color (11 samples, 0.05%)</title><rect x="930.7" y="629" width="0.6" height="15.0" fill="rgb(225,123,16)" rx="2" ry="2" />
<text  x="933.65" y="639.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (3 samples, 0.01%)</title><rect x="174.0" y="549" width="0.1" height="15.0" fill="rgb(254,222,49)" rx="2" ry="2" />
<text  x="176.96" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (23 samples, 0.11%)</title><rect x="605.3" y="581" width="1.4" height="15.0" fill="rgb(215,129,2)" rx="2" ry="2" />
<text  x="608.32" y="591.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (3 samples, 0.01%)</title><rect x="932.4" y="597" width="0.2" height="15.0" fill="rgb(234,92,24)" rx="2" ry="2" />
<text  x="935.42" y="607.5" ></text>
</g>
<g >
<title>std::allocator&lt;Bitmap&gt;::allocator (6 samples, 0.03%)</title><rect x="824.9" y="501" width="0.4" height="15.0" fill="rgb(206,102,40)" rx="2" ry="2" />
<text  x="827.91" y="511.5" ></text>
</g>
<g >
<title>std::max&lt;int&gt; (8 samples, 0.04%)</title><rect x="550.0" y="661" width="0.5" height="15.0" fill="rgb(244,185,6)" rx="2" ry="2" />
<text  x="553.04" y="671.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (10 samples, 0.05%)</title><rect x="148.8" y="805" width="0.6" height="15.0" fill="rgb(236,171,47)" rx="2" ry="2" />
<text  x="151.85" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (23 samples, 0.11%)</title><rect x="985.9" y="645" width="1.3" height="15.0" fill="rgb(231,210,16)" rx="2" ry="2" />
<text  x="988.87" y="655.5" ></text>
</g>
<g >
<title>Window_Base::Update (2 samples, 0.01%)</title><rect x="1179.5" y="757" width="0.1" height="15.0" fill="rgb(208,36,50)" rx="2" ry="2" />
<text  x="1182.53" y="767.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (2 samples, 0.01%)</title><rect x="1170.1" y="693" width="0.1" height="15.0" fill="rgb(211,206,13)" rx="2" ry="2" />
<text  x="1173.06" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (191 samples, 0.95%)</title><rect x="882.5" y="325" width="11.3" height="15.0" fill="rgb(250,141,37)" rx="2" ry="2" />
<text  x="885.55" y="335.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (10 samples, 0.05%)</title><rect x="65.2" y="901" width="0.6" height="15.0" fill="rgb(238,157,51)" rx="2" ry="2" />
<text  x="68.22" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (2 samples, 0.01%)</title><rect x="566.6" y="613" width="0.1" height="15.0" fill="rgb(229,204,33)" rx="2" ry="2" />
<text  x="569.63" y="623.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (7 samples, 0.03%)</title><rect x="130.6" y="741" width="0.4" height="15.0" fill="rgb(244,184,2)" rx="2" ry="2" />
<text  x="133.56" y="751.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (12 samples, 0.06%)</title><rect x="76.9" y="901" width="0.7" height="15.0" fill="rgb(215,69,30)" rx="2" ry="2" />
<text  x="79.87" y="911.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (5 samples, 0.02%)</title><rect x="746.5" y="549" width="0.3" height="15.0" fill="rgb(214,46,45)" rx="2" ry="2" />
<text  x="749.46" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::base (2 samples, 0.01%)</title><rect x="1141.8" y="725" width="0.1" height="15.0" fill="rgb(231,164,48)" rx="2" ry="2" />
<text  x="1144.78" y="735.5" ></text>
</g>
<g >
<title>Bitmap::Init (49 samples, 0.24%)</title><rect x="126.3" y="517" width="2.9" height="15.0" fill="rgb(224,26,32)" rx="2" ry="2" />
<text  x="129.32" y="527.5" ></text>
</g>
<g >
<title>std::forward&lt;int&amp;&gt; (13 samples, 0.06%)</title><rect x="75.2" y="901" width="0.7" height="15.0" fill="rgb(239,9,34)" rx="2" ry="2" />
<text  x="78.16" y="911.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (90 samples, 0.45%)</title><rect x="963.3" y="613" width="5.3" height="15.0" fill="rgb(225,19,19)" rx="2" ry="2" />
<text  x="966.29" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.05%)</title><rect x="953.5" y="581" width="0.6" height="15.0" fill="rgb(212,129,38)" rx="2" ry="2" />
<text  x="956.47" y="591.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingForegroundExecution (22 samples, 0.11%)</title><rect x="1142.5" y="693" width="1.3" height="15.0" fill="rgb(237,119,13)" rx="2" ry="2" />
<text  x="1145.54" y="703.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_destroy (3 samples, 0.01%)</title><rect x="918.6" y="581" width="0.2" height="15.0" fill="rgb(249,20,31)" rx="2" ry="2" />
<text  x="921.60" y="591.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (4 samples, 0.02%)</title><rect x="89.6" y="901" width="0.2" height="15.0" fill="rgb(237,218,29)" rx="2" ry="2" />
<text  x="92.57" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (86 samples, 0.43%)</title><rect x="149.4" y="501" width="5.1" height="15.0" fill="rgb(252,101,7)" rx="2" ry="2" />
<text  x="152.44" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (4 samples, 0.02%)</title><rect x="715.5" y="405" width="0.3" height="15.0" fill="rgb(208,16,13)" rx="2" ry="2" />
<text  x="718.53" y="415.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="148.8" y="485" width="0.2" height="15.0" fill="rgb(239,26,36)" rx="2" ry="2" />
<text  x="151.85" y="495.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;int&gt;::shared_ptr (10 samples, 0.05%)</title><rect x="911.6" y="613" width="0.6" height="15.0" fill="rgb(233,100,3)" rx="2" ry="2" />
<text  x="914.60" y="623.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (12 samples, 0.06%)</title><rect x="126.8" y="341" width="0.7" height="15.0" fill="rgb(254,33,50)" rx="2" ry="2" />
<text  x="129.79" y="351.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (47 samples, 0.23%)</title><rect x="732.5" y="453" width="2.7" height="15.0" fill="rgb(212,31,43)" rx="2" ry="2" />
<text  x="735.47" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char32_t&gt; &gt;::allocate (9 samples, 0.04%)</title><rect x="957.5" y="581" width="0.5" height="15.0" fill="rgb(232,11,14)" rx="2" ry="2" />
<text  x="960.47" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (18 samples, 0.09%)</title><rect x="61.1" y="901" width="1.1" height="15.0" fill="rgb(243,21,38)" rx="2" ry="2" />
<text  x="64.10" y="911.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (4 samples, 0.02%)</title><rect x="846.3" y="501" width="0.2" height="15.0" fill="rgb(225,179,41)" rx="2" ry="2" />
<text  x="849.26" y="511.5" ></text>
</g>
<g >
<title>Game_Screen::GetTone (25 samples, 0.12%)</title><rect x="1162.0" y="709" width="1.5" height="15.0" fill="rgb(230,132,37)" rx="2" ry="2" />
<text  x="1165.01" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (8 samples, 0.04%)</title><rect x="908.7" y="453" width="0.5" height="15.0" fill="rgb(223,187,27)" rx="2" ry="2" />
<text  x="911.72" y="463.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (86 samples, 0.43%)</title><rect x="132.9" y="533" width="5.1" height="15.0" fill="rgb(223,67,1)" rx="2" ry="2" />
<text  x="135.91" y="543.5" ></text>
</g>
<g >
<title>Input::UiSource::Update (5 samples, 0.02%)</title><rect x="183.5" y="789" width="0.3" height="15.0" fill="rgb(234,23,47)" rx="2" ry="2" />
<text  x="186.54" y="799.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.01%)</title><rect x="148.8" y="517" width="0.2" height="15.0" fill="rgb(216,64,33)" rx="2" ry="2" />
<text  x="151.85" y="527.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (5 samples, 0.02%)</title><rect x="1147.9" y="709" width="0.3" height="15.0" fill="rgb(241,59,45)" rx="2" ry="2" />
<text  x="1150.89" y="719.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (10 samples, 0.05%)</title><rect x="148.8" y="677" width="0.6" height="15.0" fill="rgb(219,82,53)" rx="2" ry="2" />
<text  x="151.85" y="687.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (4 samples, 0.02%)</title><rect x="648.4" y="533" width="0.3" height="15.0" fill="rgb(235,164,8)" rx="2" ry="2" />
<text  x="651.43" y="543.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (16 samples, 0.08%)</title><rect x="590.9" y="645" width="0.9" height="15.0" fill="rgb(249,228,27)" rx="2" ry="2" />
<text  x="593.86" y="655.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (14 samples, 0.07%)</title><rect x="164.1" y="421" width="0.8" height="15.0" fill="rgb(245,203,34)" rx="2" ry="2" />
<text  x="167.08" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (21 samples, 0.10%)</title><rect x="71.9" y="901" width="1.3" height="15.0" fill="rgb(232,55,24)" rx="2" ry="2" />
<text  x="74.93" y="911.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (9 samples, 0.04%)</title><rect x="77.6" y="901" width="0.5" height="15.0" fill="rgb(216,101,21)" rx="2" ry="2" />
<text  x="80.57" y="911.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (35 samples, 0.17%)</title><rect x="143.7" y="517" width="2.1" height="15.0" fill="rgb(214,132,43)" rx="2" ry="2" />
<text  x="146.73" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (4 samples, 0.02%)</title><rect x="47.4" y="901" width="0.2" height="15.0" fill="rgb(249,116,46)" rx="2" ry="2" />
<text  x="50.40" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (3 samples, 0.01%)</title><rect x="1160.9" y="661" width="0.2" height="15.0" fill="rgb(236,180,52)" rx="2" ry="2" />
<text  x="1163.89" y="671.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (3 samples, 0.01%)</title><rect x="76.7" y="901" width="0.2" height="15.0" fill="rgb(228,86,38)" rx="2" ry="2" />
<text  x="79.69" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (41 samples, 0.20%)</title><rect x="459.9" y="645" width="2.4" height="15.0" fill="rgb(229,169,46)" rx="2" ry="2" />
<text  x="462.89" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::clear (8 samples, 0.04%)</title><rect x="652.4" y="581" width="0.4" height="15.0" fill="rgb(213,63,8)" rx="2" ry="2" />
<text  x="655.37" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*, std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt; &gt;::__normal_iterator (2 samples, 0.01%)</title><rect x="46.6" y="901" width="0.1" height="15.0" fill="rgb(221,185,30)" rx="2" ry="2" />
<text  x="49.58" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (35 samples, 0.17%)</title><rect x="1091.1" y="645" width="2.0" height="15.0" fill="rgb(235,44,50)" rx="2" ry="2" />
<text  x="1094.08" y="655.5" ></text>
</g>
<g >
<title>Graphics::Update (21 samples, 0.10%)</title><rect x="182.3" y="805" width="1.2" height="15.0" fill="rgb(251,171,48)" rx="2" ry="2" />
<text  x="185.31" y="815.5" ></text>
</g>
<g >
<title>operator new (46 samples, 0.23%)</title><rect x="160.6" y="485" width="2.7" height="15.0" fill="rgb(210,26,17)" rx="2" ry="2" />
<text  x="163.55" y="495.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.01%)</title><rect x="1182.6" y="917" width="0.2" height="15.0" fill="rgb(233,99,4)" rx="2" ry="2" />
<text  x="1185.65" y="927.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="1182.8" y="901" width="0.1" height="15.0" fill="rgb(239,74,15)" rx="2" ry="2" />
<text  x="1185.83" y="911.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (39 samples, 0.19%)</title><rect x="141.4" y="501" width="2.3" height="15.0" fill="rgb(212,5,38)" rx="2" ry="2" />
<text  x="144.44" y="511.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (6 samples, 0.03%)</title><rect x="64.1" y="901" width="0.4" height="15.0" fill="rgb(248,144,0)" rx="2" ry="2" />
<text  x="67.10" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (7 samples, 0.03%)</title><rect x="1031.9" y="661" width="0.4" height="15.0" fill="rgb(231,150,8)" rx="2" ry="2" />
<text  x="1034.86" y="671.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (4 samples, 0.02%)</title><rect x="1147.3" y="709" width="0.2" height="15.0" fill="rgb(229,123,3)" rx="2" ry="2" />
<text  x="1150.30" y="719.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (3 samples, 0.01%)</title><rect x="842.3" y="517" width="0.1" height="15.0" fill="rgb(225,70,26)" rx="2" ry="2" />
<text  x="845.26" y="527.5" ></text>
</g>
<g >
<title>FileRequestResult::~FileRequestResult (100 samples, 0.50%)</title><rect x="641.1" y="581" width="5.9" height="15.0" fill="rgb(230,41,24)" rx="2" ry="2" />
<text  x="644.08" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (4 samples, 0.02%)</title><rect x="408.3" y="629" width="0.2" height="15.0" fill="rgb(215,69,30)" rx="2" ry="2" />
<text  x="411.31" y="639.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (25 samples, 0.12%)</title><rect x="158.8" y="581" width="1.5" height="15.0" fill="rgb(231,220,26)" rx="2" ry="2" />
<text  x="161.79" y="591.5" ></text>
</g>
<g >
<title>Cache::Picture (133 samples, 0.66%)</title><rect x="138.0" y="629" width="7.8" height="15.0" fill="rgb(252,114,7)" rx="2" ry="2" />
<text  x="140.97" y="639.5" ></text>
</g>
<g >
<title>Game_Picture::Show (10 samples, 0.05%)</title><rect x="148.8" y="725" width="0.6" height="15.0" fill="rgb(254,80,19)" rx="2" ry="2" />
<text  x="151.85" y="735.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="148.8" y="501" width="0.2" height="15.0" fill="rgb(253,182,49)" rx="2" ry="2" />
<text  x="151.85" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_key (37 samples, 0.18%)</title><rect x="706.3" y="485" width="2.2" height="15.0" fill="rgb(208,134,0)" rx="2" ry="2" />
<text  x="709.30" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, false, true&gt;::_Node_iterator (6 samples, 0.03%)</title><rect x="699.5" y="485" width="0.4" height="15.0" fill="rgb(233,152,36)" rx="2" ry="2" />
<text  x="702.53" y="495.5" ></text>
</g>
<g >
<title>Bitmap::EffectsBlit (9 samples, 0.04%)</title><rect x="182.4" y="709" width="0.6" height="15.0" fill="rgb(236,33,46)" rx="2" ry="2" />
<text  x="185.43" y="719.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~tuple (35 samples, 0.17%)</title><rect x="143.7" y="613" width="2.1" height="15.0" fill="rgb(214,171,15)" rx="2" ry="2" />
<text  x="146.73" y="623.5" ></text>
</g>
<g >
<title>operator== (17 samples, 0.08%)</title><rect x="834.0" y="485" width="1.0" height="15.0" fill="rgb(225,6,1)" rx="2" ry="2" />
<text  x="836.97" y="495.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;2ul, bool, false&gt;::_M_head (2 samples, 0.01%)</title><rect x="714.3" y="357" width="0.1" height="15.0" fill="rgb(213,0,50)" rx="2" ry="2" />
<text  x="717.30" y="367.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.03%)</title><rect x="719.8" y="389" width="0.3" height="15.0" fill="rgb(254,124,39)" rx="2" ry="2" />
<text  x="722.76" y="399.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (3 samples, 0.01%)</title><rect x="1179.8" y="661" width="0.2" height="15.0" fill="rgb(223,54,54)" rx="2" ry="2" />
<text  x="1182.83" y="671.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (41 samples, 0.20%)</title><rect x="906.8" y="549" width="2.4" height="15.0" fill="rgb(209,74,18)" rx="2" ry="2" />
<text  x="909.84" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (12 samples, 0.06%)</title><rect x="664.4" y="533" width="0.7" height="15.0" fill="rgb(221,171,21)" rx="2" ry="2" />
<text  x="667.43" y="543.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (5 samples, 0.02%)</title><rect x="1138.2" y="661" width="0.3" height="15.0" fill="rgb(237,102,23)" rx="2" ry="2" />
<text  x="1141.25" y="671.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (4 samples, 0.02%)</title><rect x="163.5" y="357" width="0.2" height="15.0" fill="rgb(238,67,22)" rx="2" ry="2" />
<text  x="166.49" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (6 samples, 0.03%)</title><rect x="234.1" y="693" width="0.3" height="15.0" fill="rgb(222,124,40)" rx="2" ry="2" />
<text  x="237.06" y="703.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (28 samples, 0.14%)</title><rect x="659.4" y="565" width="1.7" height="15.0" fill="rgb(214,70,9)" rx="2" ry="2" />
<text  x="662.43" y="575.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (3 samples, 0.01%)</title><rect x="954.2" y="613" width="0.2" height="15.0" fill="rgb(223,114,49)" rx="2" ry="2" />
<text  x="957.24" y="623.5" ></text>
</g>
<g >
<title>Game_Interpreter::KeyInputState::CheckInput (2 samples, 0.01%)</title><rect x="573.1" y="661" width="0.1" height="15.0" fill="rgb(213,44,49)" rx="2" ry="2" />
<text  x="576.09" y="671.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::size (2 samples, 0.01%)</title><rect x="81.0" y="901" width="0.1" height="15.0" fill="rgb(232,75,3)" rx="2" ry="2" />
<text  x="83.98" y="911.5" ></text>
</g>
<g >
<title>Color::Color (15 samples, 0.07%)</title><rect x="830.3" y="501" width="0.8" height="15.0" fill="rgb(224,188,21)" rx="2" ry="2" />
<text  x="833.27" y="511.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (2 samples, 0.01%)</title><rect x="1178.1" y="725" width="0.1" height="15.0" fill="rgb(205,96,40)" rx="2" ry="2" />
<text  x="1181.06" y="735.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (12 samples, 0.06%)</title><rect x="83.3" y="901" width="0.7" height="15.0" fill="rgb(244,93,23)" rx="2" ry="2" />
<text  x="86.28" y="911.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (416 samples, 2.07%)</title><rect x="800.5" y="485" width="24.4" height="15.0" fill="rgb(215,13,15)" rx="2" ry="2" />
<text  x="803.45" y="495.5" >s..</text>
</g>
<g >
<title>do_wp_page (4 samples, 0.02%)</title><rect x="116.7" y="325" width="0.3" height="15.0" fill="rgb(217,81,41)" rx="2" ry="2" />
<text  x="119.74" y="335.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Sprite*, false&gt;::_M_head (12 samples, 0.06%)</title><rect x="851.4" y="437" width="0.7" height="15.0" fill="rgb(211,194,0)" rx="2" ry="2" />
<text  x="854.38" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (9 samples, 0.04%)</title><rect x="908.7" y="469" width="0.5" height="15.0" fill="rgb(208,215,11)" rx="2" ry="2" />
<text  x="911.66" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (6 samples, 0.03%)</title><rect x="846.5" y="533" width="0.4" height="15.0" fill="rgb(217,140,53)" rx="2" ry="2" />
<text  x="849.50" y="543.5" ></text>
</g>
<g >
<title>__interceptor_recvmsg (2 samples, 0.01%)</title><rect x="172.0" y="901" width="0.1" height="15.0" fill="rgb(236,149,43)" rx="2" ry="2" />
<text  x="175.02" y="911.5" ></text>
</g>
<g >
<title>std::allocator&lt;Bitmap&gt;::allocator (3 samples, 0.01%)</title><rect x="73.5" y="901" width="0.1" height="15.0" fill="rgb(243,47,16)" rx="2" ry="2" />
<text  x="76.45" y="911.5" ></text>
</g>
<g >
<title>Sprite::BlitScreenIntern (9 samples, 0.04%)</title><rect x="182.4" y="725" width="0.6" height="15.0" fill="rgb(230,177,31)" rx="2" ry="2" />
<text  x="185.43" y="735.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_M_head (2 samples, 0.01%)</title><rect x="54.6" y="901" width="0.1" height="15.0" fill="rgb(205,203,40)" rx="2" ry="2" />
<text  x="57.58" y="911.5" ></text>
</g>
<g >
<title>operator new (49 samples, 0.24%)</title><rect x="662.4" y="581" width="2.9" height="15.0" fill="rgb(229,190,16)" rx="2" ry="2" />
<text  x="665.43" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (38 samples, 0.19%)</title><rect x="133.5" y="469" width="2.2" height="15.0" fill="rgb(216,162,10)" rx="2" ry="2" />
<text  x="136.50" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (2 samples, 0.01%)</title><rect x="574.7" y="629" width="0.2" height="15.0" fill="rgb(225,143,21)" rx="2" ry="2" />
<text  x="577.74" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (2 samples, 0.01%)</title><rect x="107.0" y="901" width="0.2" height="15.0" fill="rgb(217,71,19)" rx="2" ry="2" />
<text  x="110.03" y="911.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (35 samples, 0.17%)</title><rect x="143.7" y="485" width="2.1" height="15.0" fill="rgb(207,89,4)" rx="2" ry="2" />
<text  x="146.73" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (7 samples, 0.03%)</title><rect x="938.8" y="629" width="0.4" height="15.0" fill="rgb(211,108,46)" rx="2" ry="2" />
<text  x="941.77" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::operator* (5 samples, 0.02%)</title><rect x="1143.9" y="693" width="0.3" height="15.0" fill="rgb(238,188,15)" rx="2" ry="2" />
<text  x="1146.89" y="703.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (6 samples, 0.03%)</title><rect x="713.0" y="421" width="0.4" height="15.0" fill="rgb(224,125,37)" rx="2" ry="2" />
<text  x="716.00" y="431.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="107.4" y="901" width="0.1" height="15.0" fill="rgb(214,170,20)" rx="2" ry="2" />
<text  x="110.39" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (2 samples, 0.01%)</title><rect x="1180.1" y="661" width="0.1" height="15.0" fill="rgb(221,32,41)" rx="2" ry="2" />
<text  x="1183.06" y="671.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (3 samples, 0.01%)</title><rect x="721.2" y="421" width="0.2" height="15.0" fill="rgb(254,175,15)" rx="2" ry="2" />
<text  x="724.18" y="431.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (10 samples, 0.05%)</title><rect x="843.4" y="501" width="0.6" height="15.0" fill="rgb(219,181,16)" rx="2" ry="2" />
<text  x="846.44" y="511.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="177.9" y="885" width="0.2" height="15.0" fill="rgb(226,38,36)" rx="2" ry="2" />
<text  x="180.90" y="895.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Impl::_M_alloc (2 samples, 0.01%)</title><rect x="859.2" y="469" width="0.1" height="15.0" fill="rgb(237,12,38)" rx="2" ry="2" />
<text  x="862.20" y="479.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.04%)</title><rect x="163.3" y="533" width="0.5" height="15.0" fill="rgb(213,132,31)" rx="2" ry="2" />
<text  x="166.26" y="543.5" ></text>
</g>
<g >
<title>operator delete (127 samples, 0.63%)</title><rect x="860.6" y="405" width="7.5" height="15.0" fill="rgb(246,141,5)" rx="2" ry="2" />
<text  x="863.61" y="415.5" ></text>
</g>
<g >
<title>std::__to_address&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; (2 samples, 0.01%)</title><rect x="823.8" y="421" width="0.1" height="15.0" fill="rgb(230,194,48)" rx="2" ry="2" />
<text  x="826.80" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (4 samples, 0.02%)</title><rect x="941.7" y="565" width="0.2" height="15.0" fill="rgb(224,45,41)" rx="2" ry="2" />
<text  x="944.71" y="575.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::swap (22 samples, 0.11%)</title><rect x="920.0" y="597" width="1.3" height="15.0" fill="rgb(216,158,25)" rx="2" ry="2" />
<text  x="923.01" y="607.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4 samples, 0.02%)</title><rect x="116.7" y="341" width="0.3" height="15.0" fill="rgb(241,60,23)" rx="2" ry="2" />
<text  x="119.74" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_ptr (4 samples, 0.02%)</title><rect x="818.2" y="261" width="0.2" height="15.0" fill="rgb(219,124,49)" rx="2" ry="2" />
<text  x="821.15" y="271.5" ></text>
</g>
<g >
<title>operator new (37 samples, 0.18%)</title><rect x="164.9" y="501" width="2.2" height="15.0" fill="rgb(214,86,40)" rx="2" ry="2" />
<text  x="167.90" y="511.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (37 samples, 0.18%)</title><rect x="742.2" y="485" width="2.1" height="15.0" fill="rgb(228,148,24)" rx="2" ry="2" />
<text  x="745.17" y="495.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_invoke (71 samples, 0.35%)</title><rect x="126.3" y="741" width="4.2" height="15.0" fill="rgb(242,18,46)" rx="2" ry="2" />
<text  x="129.32" y="751.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (17 samples, 0.08%)</title><rect x="144.8" y="469" width="1.0" height="15.0" fill="rgb(207,102,28)" rx="2" ry="2" />
<text  x="147.79" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt;::begin (2 samples, 0.01%)</title><rect x="1123.2" y="709" width="0.1" height="15.0" fill="rgb(231,111,54)" rx="2" ry="2" />
<text  x="1126.19" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (35 samples, 0.17%)</title><rect x="1095.1" y="693" width="2.0" height="15.0" fill="rgb(226,56,45)" rx="2" ry="2" />
<text  x="1098.08" y="703.5" ></text>
</g>
<g >
<title>free@plt (4 samples, 0.02%)</title><rect x="895.2" y="373" width="0.3" height="15.0" fill="rgb(216,36,4)" rx="2" ry="2" />
<text  x="898.25" y="383.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}::operator() (65 samples, 0.32%)</title><rect x="163.3" y="693" width="3.8" height="15.0" fill="rgb(208,70,54)" rx="2" ry="2" />
<text  x="166.26" y="703.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (69 samples, 0.34%)</title><rect x="732.0" y="469" width="4.1" height="15.0" fill="rgb(245,97,23)" rx="2" ry="2" />
<text  x="735.00" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (4 samples, 0.02%)</title><rect x="959.4" y="613" width="0.2" height="15.0" fill="rgb(238,184,37)" rx="2" ry="2" />
<text  x="962.41" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (26 samples, 0.13%)</title><rect x="692.8" y="469" width="1.5" height="15.0" fill="rgb(242,52,27)" rx="2" ry="2" />
<text  x="695.77" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, bool&gt;::_M_head (3 samples, 0.01%)</title><rect x="733.5" y="389" width="0.1" height="15.0" fill="rgb(240,67,25)" rx="2" ry="2" />
<text  x="736.47" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (3 samples, 0.01%)</title><rect x="404.0" y="629" width="0.1" height="15.0" fill="rgb(232,200,46)" rx="2" ry="2" />
<text  x="406.96" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (2 samples, 0.01%)</title><rect x="562.4" y="597" width="0.1" height="15.0" fill="rgb(252,191,49)" rx="2" ry="2" />
<text  x="565.39" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_ptr (3 samples, 0.01%)</title><rect x="632.3" y="485" width="0.1" height="15.0" fill="rgb(241,34,6)" rx="2" ry="2" />
<text  x="635.26" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (5 samples, 0.02%)</title><rect x="890.4" y="213" width="0.3" height="15.0" fill="rgb(221,116,28)" rx="2" ry="2" />
<text  x="893.37" y="223.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (3 samples, 0.01%)</title><rect x="128.5" y="277" width="0.2" height="15.0" fill="rgb(235,142,25)" rx="2" ry="2" />
<text  x="131.50" y="287.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::_M_ptr (2 samples, 0.01%)</title><rect x="73.2" y="901" width="0.1" height="15.0" fill="rgb(251,203,35)" rx="2" ry="2" />
<text  x="76.16" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (3 samples, 0.01%)</title><rect x="107.2" y="901" width="0.1" height="15.0" fill="rgb(209,94,21)" rx="2" ry="2" />
<text  x="110.15" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (4 samples, 0.02%)</title><rect x="190.4" y="693" width="0.3" height="15.0" fill="rgb(226,2,36)" rx="2" ry="2" />
<text  x="193.43" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (67 samples, 0.33%)</title><rect x="1061.5" y="645" width="3.9" height="15.0" fill="rgb(249,64,8)" rx="2" ry="2" />
<text  x="1064.50" y="655.5" ></text>
</g>
<g >
<title>Input::Update (10 samples, 0.05%)</title><rect x="183.5" y="805" width="0.6" height="15.0" fill="rgb(237,118,4)" rx="2" ry="2" />
<text  x="186.54" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (7 samples, 0.03%)</title><rect x="448.2" y="597" width="0.5" height="15.0" fill="rgb(223,221,23)" rx="2" ry="2" />
<text  x="451.24" y="607.5" ></text>
</g>
<g >
<title>try_to_wake_up (4 samples, 0.02%)</title><rect x="21.4" y="741" width="0.2" height="15.0" fill="rgb(218,149,25)" rx="2" ry="2" />
<text  x="24.35" y="751.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (59 samples, 0.29%)</title><rect x="714.4" y="421" width="3.5" height="15.0" fill="rgb(227,88,30)" rx="2" ry="2" />
<text  x="717.41" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::operator++ (4 samples, 0.02%)</title><rect x="1139.4" y="741" width="0.3" height="15.0" fill="rgb(252,191,45)" rx="2" ry="2" />
<text  x="1142.42" y="751.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_invoke (297 samples, 1.48%)</title><rect x="108.9" y="725" width="17.4" height="15.0" fill="rgb(205,2,13)" rx="2" ry="2" />
<text  x="111.86" y="735.5" ></text>
</g>
<g >
<title>Player::IsRPG2k3E (2 samples, 0.01%)</title><rect x="960.2" y="661" width="0.1" height="15.0" fill="rgb(244,93,24)" rx="2" ry="2" />
<text  x="963.17" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (2 samples, 0.01%)</title><rect x="1149.2" y="677" width="0.2" height="15.0" fill="rgb(238,180,31)" rx="2" ry="2" />
<text  x="1152.25" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, false, true&gt;::_Node_iterator (5 samples, 0.02%)</title><rect x="694.8" y="485" width="0.3" height="15.0" fill="rgb(252,15,26)" rx="2" ry="2" />
<text  x="697.77" y="495.5" ></text>
</g>
<g >
<title>Sprite::SetZoomX (2 samples, 0.01%)</title><rect x="936.2" y="629" width="0.2" height="15.0" fill="rgb(208,40,23)" rx="2" ry="2" />
<text  x="939.24" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size@plt (2 samples, 0.01%)</title><rect x="633.7" y="485" width="0.1" height="15.0" fill="rgb(217,97,45)" rx="2" ry="2" />
<text  x="636.67" y="495.5" ></text>
</g>
<g >
<title>Sprite::GetBitmap (3 samples, 0.01%)</title><rect x="835.0" y="533" width="0.1" height="15.0" fill="rgb(254,133,8)" rx="2" ry="2" />
<text  x="837.97" y="543.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandJumpToLabel (91 samples, 0.45%)</title><rect x="567.6" y="677" width="5.3" height="15.0" fill="rgb(252,63,6)" rx="2" ry="2" />
<text  x="570.57" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (5 samples, 0.02%)</title><rect x="566.0" y="629" width="0.3" height="15.0" fill="rgb(241,101,45)" rx="2" ry="2" />
<text  x="568.98" y="639.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_invoke (49 samples, 0.24%)</title><rect x="175.0" y="613" width="2.8" height="15.0" fill="rgb(242,184,41)" rx="2" ry="2" />
<text  x="177.96" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (15 samples, 0.07%)</title><rect x="740.9" y="485" width="0.9" height="15.0" fill="rgb(220,103,39)" rx="2" ry="2" />
<text  x="743.94" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (37 samples, 0.18%)</title><rect x="696.2" y="485" width="2.2" height="15.0" fill="rgb(214,200,19)" rx="2" ry="2" />
<text  x="699.18" y="495.5" ></text>
</g>
<g >
<title>MakeFlashColor (3 samples, 0.01%)</title><rect x="932.8" y="613" width="0.1" height="15.0" fill="rgb(241,97,10)" rx="2" ry="2" />
<text  x="935.77" y="623.5" ></text>
</g>
<g >
<title>Color::Color (7 samples, 0.03%)</title><rect x="1161.6" y="677" width="0.4" height="15.0" fill="rgb(210,71,19)" rx="2" ry="2" />
<text  x="1164.60" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::deallocate (131 samples, 0.65%)</title><rect x="860.6" y="421" width="7.7" height="15.0" fill="rgb(237,16,19)" rx="2" ry="2" />
<text  x="863.61" y="431.5" ></text>
</g>
<g >
<title>native_write_msr (55 samples, 0.27%)</title><rect x="17.3" y="677" width="3.2" height="15.0" fill="rgb(205,167,22)" rx="2" ry="2" />
<text  x="20.29" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (25 samples, 0.12%)</title><rect x="158.8" y="565" width="1.5" height="15.0" fill="rgb(232,59,0)" rx="2" ry="2" />
<text  x="161.79" y="575.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (7 samples, 0.03%)</title><rect x="149.0" y="549" width="0.4" height="15.0" fill="rgb(210,98,18)" rx="2" ry="2" />
<text  x="152.02" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare@plt (2 samples, 0.01%)</title><rect x="720.2" y="405" width="0.1" height="15.0" fill="rgb(254,29,37)" rx="2" ry="2" />
<text  x="723.18" y="415.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (7 samples, 0.03%)</title><rect x="940.9" y="581" width="0.4" height="15.0" fill="rgb(233,56,33)" rx="2" ry="2" />
<text  x="943.89" y="591.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (49 samples, 0.24%)</title><rect x="175.0" y="629" width="2.8" height="15.0" fill="rgb(208,174,12)" rx="2" ry="2" />
<text  x="177.96" y="639.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (297 samples, 1.48%)</title><rect x="108.9" y="885" width="17.4" height="15.0" fill="rgb(248,166,18)" rx="2" ry="2" />
<text  x="111.86" y="895.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (3 samples, 0.01%)</title><rect x="68.2" y="901" width="0.1" height="15.0" fill="rgb(211,162,40)" rx="2" ry="2" />
<text  x="71.16" y="911.5" ></text>
</g>
<g >
<title>__libc_start_main (17,010 samples, 84.77%)</title><rect x="182.2" y="901" width="1000.3" height="15.0" fill="rgb(228,100,33)" rx="2" ry="2" />
<text  x="185.19" y="911.5" >__libc_start_main</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (8 samples, 0.04%)</title><rect x="1076.4" y="645" width="0.5" height="15.0" fill="rgb(231,17,29)" rx="2" ry="2" />
<text  x="1079.44" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (67 samples, 0.33%)</title><rect x="661.5" y="597" width="3.9" height="15.0" fill="rgb(240,110,0)" rx="2" ry="2" />
<text  x="664.48" y="607.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="904.5" y="181" width="0.1" height="15.0" fill="rgb(222,97,9)" rx="2" ry="2" />
<text  x="907.48" y="191.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::~_Head_base (44 samples, 0.22%)</title><rect x="175.3" y="501" width="2.5" height="15.0" fill="rgb(206,43,21)" rx="2" ry="2" />
<text  x="178.25" y="511.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (5 samples, 0.02%)</title><rect x="1168.1" y="709" width="0.3" height="15.0" fill="rgb(218,78,30)" rx="2" ry="2" />
<text  x="1171.12" y="719.5" ></text>
</g>
<g >
<title>deactivate_task (3 samples, 0.01%)</title><rect x="17.1" y="773" width="0.1" height="15.0" fill="rgb(224,93,52)" rx="2" ry="2" />
<text  x="20.06" y="783.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (4 samples, 0.02%)</title><rect x="955.6" y="581" width="0.3" height="15.0" fill="rgb(251,211,30)" rx="2" ry="2" />
<text  x="958.65" y="591.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (46 samples, 0.23%)</title><rect x="160.6" y="565" width="2.7" height="15.0" fill="rgb(248,5,20)" rx="2" ry="2" />
<text  x="163.55" y="575.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (5 samples, 0.02%)</title><rect x="717.9" y="421" width="0.3" height="15.0" fill="rgb(247,100,3)" rx="2" ry="2" />
<text  x="720.88" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (326 samples, 1.62%)</title><rect x="314.7" y="677" width="19.2" height="15.0" fill="rgb(240,95,49)" rx="2" ry="2" />
<text  x="317.69" y="687.5" ></text>
</g>
<g >
<title>Tone::Tone (10 samples, 0.05%)</title><rect x="930.1" y="613" width="0.6" height="15.0" fill="rgb(220,112,31)" rx="2" ry="2" />
<text  x="933.06" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::capacity (4 samples, 0.02%)</title><rect x="958.5" y="613" width="0.2" height="15.0" fill="rgb(216,161,22)" rx="2" ry="2" />
<text  x="961.47" y="623.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (2 samples, 0.01%)</title><rect x="955.0" y="597" width="0.1" height="15.0" fill="rgb(253,34,9)" rx="2" ry="2" />
<text  x="958.00" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (68 samples, 0.34%)</title><rect x="417.2" y="613" width="4.0" height="15.0" fill="rgb(246,194,24)" rx="2" ry="2" />
<text  x="420.19" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="48.2" y="901" width="0.1" height="15.0" fill="rgb(248,154,15)" rx="2" ry="2" />
<text  x="51.23" y="911.5" ></text>
</g>
<g >
<title>std::__find_if&lt;int const*, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (69 samples, 0.34%)</title><rect x="451.5" y="629" width="4.1" height="15.0" fill="rgb(206,100,24)" rx="2" ry="2" />
<text  x="454.54" y="639.5" ></text>
</g>
<g >
<title>std::max&lt;int&gt; (2 samples, 0.01%)</title><rect x="1032.8" y="677" width="0.1" height="15.0" fill="rgb(212,145,39)" rx="2" ry="2" />
<text  x="1035.80" y="687.5" ></text>
</g>
<g >
<title>std::max&lt;int&gt; (2 samples, 0.01%)</title><rect x="106.1" y="901" width="0.1" height="15.0" fill="rgb(225,132,6)" rx="2" ry="2" />
<text  x="109.09" y="911.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (4 samples, 0.02%)</title><rect x="1170.2" y="677" width="0.3" height="15.0" fill="rgb(206,213,15)" rx="2" ry="2" />
<text  x="1173.24" y="687.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (3 samples, 0.01%)</title><rect x="1168.2" y="693" width="0.2" height="15.0" fill="rgb(250,140,36)" rx="2" ry="2" />
<text  x="1171.24" y="703.5" ></text>
</g>
<g >
<title>release_pages (3 samples, 0.01%)</title><rect x="795.2" y="357" width="0.2" height="15.0" fill="rgb(253,224,28)" rx="2" ry="2" />
<text  x="798.22" y="367.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (3 samples, 0.01%)</title><rect x="174.0" y="501" width="0.1" height="15.0" fill="rgb(227,142,46)" rx="2" ry="2" />
<text  x="176.96" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (6 samples, 0.03%)</title><rect x="836.8" y="437" width="0.3" height="15.0" fill="rgb(248,43,52)" rx="2" ry="2" />
<text  x="839.79" y="447.5" ></text>
</g>
<g >
<title>SDL_UDEV_Poll (2 samples, 0.01%)</title><rect x="1180.3" y="725" width="0.1" height="15.0" fill="rgb(240,74,6)" rx="2" ry="2" />
<text  x="1183.30" y="735.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="1032.7" y="661" width="0.1" height="15.0" fill="rgb(247,13,11)" rx="2" ry="2" />
<text  x="1035.69" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_addr (2 samples, 0.01%)</title><rect x="632.3" y="469" width="0.1" height="15.0" fill="rgb(234,221,43)" rx="2" ry="2" />
<text  x="635.32" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::operator[] (3 samples, 0.01%)</title><rect x="94.5" y="901" width="0.2" height="15.0" fill="rgb(252,93,10)" rx="2" ry="2" />
<text  x="97.51" y="911.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (12 samples, 0.06%)</title><rect x="842.4" y="533" width="0.7" height="15.0" fill="rgb(217,102,19)" rx="2" ry="2" />
<text  x="845.44" y="543.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;2ul, bool&gt; (6 samples, 0.03%)</title><rect x="733.3" y="405" width="0.3" height="15.0" fill="rgb(235,152,27)" rx="2" ry="2" />
<text  x="736.29" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (6 samples, 0.03%)</title><rect x="734.9" y="421" width="0.3" height="15.0" fill="rgb(244,124,14)" rx="2" ry="2" />
<text  x="737.88" y="431.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (2 samples, 0.01%)</title><rect x="22.2" y="917" width="0.1" height="15.0" fill="rgb(227,36,11)" rx="2" ry="2" />
<text  x="25.17" y="927.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="129.0" y="405" width="0.2" height="15.0" fill="rgb(206,170,20)" rx="2" ry="2" />
<text  x="132.03" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_M_lower_bound (85 samples, 0.42%)</title><rect x="815.9" y="309" width="5.0" height="15.0" fill="rgb(223,170,5)" rx="2" ry="2" />
<text  x="818.86" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (5 samples, 0.02%)</title><rect x="1177.1" y="741" width="0.3" height="15.0" fill="rgb(207,154,24)" rx="2" ry="2" />
<text  x="1180.06" y="751.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (2 samples, 0.01%)</title><rect x="99.6" y="885" width="0.1" height="15.0" fill="rgb(227,144,23)" rx="2" ry="2" />
<text  x="102.57" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (4 samples, 0.02%)</title><rect x="959.4" y="645" width="0.2" height="15.0" fill="rgb(209,63,54)" rx="2" ry="2" />
<text  x="962.41" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (5 samples, 0.02%)</title><rect x="180.1" y="901" width="0.3" height="15.0" fill="rgb(238,90,50)" rx="2" ry="2" />
<text  x="183.13" y="911.5" ></text>
</g>
<g >
<title>SDL_GetTicks_REAL (2 samples, 0.01%)</title><rect x="1180.2" y="789" width="0.1" height="15.0" fill="rgb(214,125,2)" rx="2" ry="2" />
<text  x="1183.18" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::vector (8 samples, 0.04%)</title><rect x="822.0" y="373" width="0.4" height="15.0" fill="rgb(242,95,31)" rx="2" ry="2" />
<text  x="824.97" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (28 samples, 0.14%)</title><rect x="890.7" y="229" width="1.6" height="15.0" fill="rgb(248,29,13)" rx="2" ry="2" />
<text  x="893.66" y="239.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (2 samples, 0.01%)</title><rect x="729.9" y="485" width="0.2" height="15.0" fill="rgb(207,103,34)" rx="2" ry="2" />
<text  x="732.94" y="495.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (2 samples, 0.01%)</title><rect x="1148.1" y="693" width="0.1" height="15.0" fill="rgb(254,228,17)" rx="2" ry="2" />
<text  x="1151.07" y="703.5" ></text>
</g>
<g >
<title>mmap_region (11 samples, 0.05%)</title><rect x="126.8" y="277" width="0.6" height="15.0" fill="rgb(245,114,4)" rx="2" ry="2" />
<text  x="129.79" y="287.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}::operator() (297 samples, 1.48%)</title><rect x="108.9" y="709" width="17.4" height="15.0" fill="rgb(232,41,50)" rx="2" ry="2" />
<text  x="111.86" y="719.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (73 samples, 0.36%)</title><rect x="154.5" y="501" width="4.3" height="15.0" fill="rgb(251,144,6)" rx="2" ry="2" />
<text  x="157.49" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (1,084 samples, 5.40%)</title><rect x="290.0" y="693" width="63.7" height="15.0" fill="rgb(216,19,51)" rx="2" ry="2" />
<text  x="292.99" y="703.5" >std::ve..</text>
</g>
<g >
<title>free_pcppages_bulk (2 samples, 0.01%)</title><rect x="163.5" y="261" width="0.2" height="15.0" fill="rgb(223,4,29)" rx="2" ry="2" />
<text  x="166.55" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt;::__normal_iterator (46 samples, 0.23%)</title><rect x="1111.7" y="677" width="2.7" height="15.0" fill="rgb(244,157,5)" rx="2" ry="2" />
<text  x="1114.73" y="687.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (9 samples, 0.04%)</title><rect x="695.7" y="485" width="0.5" height="15.0" fill="rgb(247,13,20)" rx="2" ry="2" />
<text  x="698.65" y="495.5" ></text>
</g>
<g >
<title>__strlen_avx2 (5 samples, 0.02%)</title><rect x="702.8" y="501" width="0.3" height="15.0" fill="rgb(208,200,12)" rx="2" ry="2" />
<text  x="705.77" y="511.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (23 samples, 0.11%)</title><rect x="952.8" y="613" width="1.4" height="15.0" fill="rgb(230,16,9)" rx="2" ry="2" />
<text  x="955.82" y="623.5" ></text>
</g>
<g >
<title>[[stack]] (1,281 samples, 6.38%)</title><rect x="22.7" y="917" width="75.3" height="15.0" fill="rgb(206,21,50)" rx="2" ry="2" />
<text  x="25.70" y="927.5" >[[stack]]</text>
</g>
<g >
<title>free_pages_and_swap_cache (15 samples, 0.07%)</title><rect x="890.8" y="101" width="0.9" height="15.0" fill="rgb(211,88,42)" rx="2" ry="2" />
<text  x="893.78" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::CommonEvent, std::allocator&lt;RPG::CommonEvent&gt; &gt;::operator[] (4 samples, 0.02%)</title><rect x="1143.2" y="661" width="0.3" height="15.0" fill="rgb(212,215,35)" rx="2" ry="2" />
<text  x="1146.25" y="671.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (3 samples, 0.01%)</title><rect x="829.3" y="501" width="0.2" height="15.0" fill="rgb(232,186,52)" rx="2" ry="2" />
<text  x="832.33" y="511.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (44 samples, 0.22%)</title><rect x="175.3" y="469" width="2.5" height="15.0" fill="rgb(245,189,8)" rx="2" ry="2" />
<text  x="178.25" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (35 samples, 0.17%)</title><rect x="947.0" y="565" width="2.1" height="15.0" fill="rgb(214,174,44)" rx="2" ry="2" />
<text  x="950.00" y="575.5" ></text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (14 samples, 0.07%)</title><rect x="1160.2" y="709" width="0.9" height="15.0" fill="rgb(212,207,34)" rx="2" ry="2" />
<text  x="1163.24" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (74 samples, 0.37%)</title><rect x="247.2" y="677" width="4.3" height="15.0" fill="rgb(218,139,32)" rx="2" ry="2" />
<text  x="250.18" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="1178.6" y="757" width="0.1" height="15.0" fill="rgb(230,199,0)" rx="2" ry="2" />
<text  x="1181.59" y="767.5" ></text>
</g>
<g >
<title>pollwake (4 samples, 0.02%)</title><rect x="21.4" y="773" width="0.2" height="15.0" fill="rgb(223,113,36)" rx="2" ry="2" />
<text  x="24.35" y="783.5" ></text>
</g>
<g >
<title>zap_page_range (5 samples, 0.02%)</title><rect x="890.4" y="197" width="0.3" height="15.0" fill="rgb(211,15,15)" rx="2" ry="2" />
<text  x="893.37" y="207.5" ></text>
</g>
<g >
<title>std::min&lt;int&gt; (5 samples, 0.02%)</title><rect x="550.5" y="661" width="0.3" height="15.0" fill="rgb(219,214,2)" rx="2" ry="2" />
<text  x="553.51" y="671.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (65 samples, 0.32%)</title><rect x="163.3" y="869" width="3.8" height="15.0" fill="rgb(214,216,3)" rx="2" ry="2" />
<text  x="166.26" y="879.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (4 samples, 0.02%)</title><rect x="959.8" y="629" width="0.3" height="15.0" fill="rgb(241,45,45)" rx="2" ry="2" />
<text  x="962.82" y="639.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (2 samples, 0.01%)</title><rect x="967.3" y="565" width="0.1" height="15.0" fill="rgb(228,120,47)" rx="2" ry="2" />
<text  x="970.29" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (5 samples, 0.02%)</title><rect x="911.0" y="549" width="0.3" height="15.0" fill="rgb(242,127,25)" rx="2" ry="2" />
<text  x="914.01" y="559.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (182 samples, 0.91%)</title><rect x="138.0" y="725" width="10.7" height="15.0" fill="rgb(206,185,50)" rx="2" ry="2" />
<text  x="140.97" y="735.5" ></text>
</g>
<g >
<title>Bitmap::GetWidth (76 samples, 0.38%)</title><rect x="1154.1" y="709" width="4.4" height="15.0" fill="rgb(227,161,25)" rx="2" ry="2" />
<text  x="1157.07" y="719.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (4 samples, 0.02%)</title><rect x="892.7" y="165" width="0.3" height="15.0" fill="rgb(241,18,25)" rx="2" ry="2" />
<text  x="895.72" y="175.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (27 samples, 0.13%)</title><rect x="941.3" y="581" width="1.6" height="15.0" fill="rgb(215,176,5)" rx="2" ry="2" />
<text  x="944.30" y="591.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandMovePicture (62 samples, 0.31%)</title><rect x="573.3" y="677" width="3.6" height="15.0" fill="rgb(245,181,51)" rx="2" ry="2" />
<text  x="576.27" y="687.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (297 samples, 1.48%)</title><rect x="108.9" y="773" width="17.4" height="15.0" fill="rgb(210,169,10)" rx="2" ry="2" />
<text  x="111.86" y="783.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (548 samples, 2.73%)</title><rect x="703.9" y="517" width="32.2" height="15.0" fill="rgb(246,156,14)" rx="2" ry="2" />
<text  x="706.89" y="527.5" >st..</text>
</g>
<g >
<title>max&lt;int&gt; (2 samples, 0.01%)</title><rect x="828.0" y="501" width="0.1" height="15.0" fill="rgb(246,190,1)" rx="2" ry="2" />
<text  x="830.97" y="511.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_M_head (8 samples, 0.04%)</title><rect x="717.4" y="373" width="0.5" height="15.0" fill="rgb(205,154,2)" rx="2" ry="2" />
<text  x="720.41" y="383.5" ></text>
</g>
<g >
<title>Sprite::SetTone (16 samples, 0.08%)</title><rect x="837.9" y="533" width="1.0" height="15.0" fill="rgb(207,186,13)" rx="2" ry="2" />
<text  x="840.91" y="543.5" ></text>
</g>
<g >
<title>Game_Interpreter::SetupWait (3 samples, 0.01%)</title><rect x="975.7" y="661" width="0.2" height="15.0" fill="rgb(219,171,26)" rx="2" ry="2" />
<text  x="978.70" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt;::base (3 samples, 0.01%)</title><rect x="41.3" y="901" width="0.2" height="15.0" fill="rgb(209,197,45)" rx="2" ry="2" />
<text  x="44.29" y="911.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (49 samples, 0.24%)</title><rect x="175.0" y="741" width="2.8" height="15.0" fill="rgb(228,149,39)" rx="2" ry="2" />
<text  x="177.96" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (5 samples, 0.02%)</title><rect x="633.4" y="485" width="0.3" height="15.0" fill="rgb(230,144,53)" rx="2" ry="2" />
<text  x="636.37" y="495.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (3 samples, 0.01%)</title><rect x="849.6" y="485" width="0.1" height="15.0" fill="rgb(220,101,45)" rx="2" ry="2" />
<text  x="852.56" y="495.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (4 samples, 0.02%)</title><rect x="128.4" y="293" width="0.3" height="15.0" fill="rgb(212,174,5)" rx="2" ry="2" />
<text  x="131.44" y="303.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="959.3" y="581" width="0.1" height="15.0" fill="rgb(241,187,8)" rx="2" ry="2" />
<text  x="962.29" y="591.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (4 samples, 0.02%)</title><rect x="108.0" y="917" width="0.3" height="15.0" fill="rgb(253,50,40)" rx="2" ry="2" />
<text  x="111.03" y="927.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandEndLoop (46 samples, 0.23%)</title><rect x="564.7" y="677" width="2.7" height="15.0" fill="rgb(253,183,3)" rx="2" ry="2" />
<text  x="567.69" y="687.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetSubcommandIndex (31 samples, 0.15%)</title><rect x="558.7" y="645" width="1.8" height="15.0" fill="rgb(236,210,7)" rx="2" ry="2" />
<text  x="561.69" y="655.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandErasePicture (3 samples, 0.01%)</title><rect x="567.4" y="677" width="0.2" height="15.0" fill="rgb(213,8,13)" rx="2" ry="2" />
<text  x="570.39" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator* (26 samples, 0.13%)</title><rect x="681.6" y="485" width="1.5" height="15.0" fill="rgb(225,63,1)" rx="2" ry="2" />
<text  x="684.60" y="495.5" ></text>
</g>
<g >
<title>operator== (5 samples, 0.02%)</title><rect x="935.3" y="597" width="0.3" height="15.0" fill="rgb(215,190,54)" rx="2" ry="2" />
<text  x="938.30" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (8 samples, 0.04%)</title><rect x="566.3" y="645" width="0.4" height="15.0" fill="rgb(249,82,8)" rx="2" ry="2" />
<text  x="569.27" y="655.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (235 samples, 1.17%)</title><rect x="149.4" y="805" width="13.9" height="15.0" fill="rgb(254,85,47)" rx="2" ry="2" />
<text  x="152.44" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator++ (2 samples, 0.01%)</title><rect x="595.8" y="597" width="0.1" height="15.0" fill="rgb(227,208,42)" rx="2" ry="2" />
<text  x="598.80" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_ptr (9 samples, 0.04%)</title><rect x="707.6" y="437" width="0.5" height="15.0" fill="rgb(231,218,9)" rx="2" ry="2" />
<text  x="710.59" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (19 samples, 0.09%)</title><rect x="163.8" y="549" width="1.1" height="15.0" fill="rgb(226,206,34)" rx="2" ry="2" />
<text  x="166.79" y="559.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (3 samples, 0.01%)</title><rect x="1179.8" y="645" width="0.2" height="15.0" fill="rgb(222,28,6)" rx="2" ry="2" />
<text  x="1182.83" y="655.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (65 samples, 0.32%)</title><rect x="163.3" y="725" width="3.8" height="15.0" fill="rgb(236,129,42)" rx="2" ry="2" />
<text  x="166.26" y="735.5" ></text>
</g>
<g >
<title>perf_iterate_sb (5 samples, 0.02%)</title><rect x="126.9" y="245" width="0.3" height="15.0" fill="rgb(233,10,43)" rx="2" ry="2" />
<text  x="129.91" y="255.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (46 samples, 0.23%)</title><rect x="160.6" y="597" width="2.7" height="15.0" fill="rgb(239,85,27)" rx="2" ry="2" />
<text  x="163.55" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt;::end (87 samples, 0.43%)</title><rect x="1109.3" y="693" width="5.1" height="15.0" fill="rgb(254,123,23)" rx="2" ry="2" />
<text  x="1112.31" y="703.5" ></text>
</g>
<g >
<title>FileRequestAsync::BindStart (235 samples, 1.17%)</title><rect x="149.4" y="725" width="13.9" height="15.0" fill="rgb(226,45,33)" rx="2" ry="2" />
<text  x="152.44" y="735.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (6 samples, 0.03%)</title><rect x="84.7" y="901" width="0.4" height="15.0" fill="rgb(229,219,47)" rx="2" ry="2" />
<text  x="87.75" y="911.5" ></text>
</g>
<g >
<title>release_pages (6 samples, 0.03%)</title><rect x="904.0" y="101" width="0.4" height="15.0" fill="rgb(226,101,0)" rx="2" ry="2" />
<text  x="907.01" y="111.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (24 samples, 0.12%)</title><rect x="960.6" y="629" width="1.5" height="15.0" fill="rgb(219,186,52)" rx="2" ry="2" />
<text  x="963.65" y="639.5" ></text>
</g>
<g >
<title>__vm_munmap (28 samples, 0.14%)</title><rect x="890.7" y="213" width="1.6" height="15.0" fill="rgb(217,154,43)" rx="2" ry="2" />
<text  x="893.66" y="223.5" ></text>
</g>
<g >
<title>Sprite::SetOpacity (3 samples, 0.01%)</title><rect x="1164.4" y="709" width="0.1" height="15.0" fill="rgb(212,39,24)" rx="2" ry="2" />
<text  x="1167.36" y="719.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.02%)</title><rect x="117.0" y="405" width="0.3" height="15.0" fill="rgb(207,94,38)" rx="2" ry="2" />
<text  x="119.97" y="415.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (71 samples, 0.35%)</title><rect x="126.3" y="661" width="4.2" height="15.0" fill="rgb(254,150,6)" rx="2" ry="2" />
<text  x="129.32" y="671.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~tuple (86 samples, 0.43%)</title><rect x="132.9" y="565" width="5.1" height="15.0" fill="rgb(247,118,30)" rx="2" ry="2" />
<text  x="135.91" y="575.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (10 samples, 0.05%)</title><rect x="148.8" y="789" width="0.6" height="15.0" fill="rgb(232,25,44)" rx="2" ry="2" />
<text  x="151.85" y="799.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (2 samples, 0.01%)</title><rect x="20.9" y="805" width="0.1" height="15.0" fill="rgb(218,73,8)" rx="2" ry="2" />
<text  x="23.88" y="815.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (49 samples, 0.24%)</title><rect x="145.8" y="549" width="2.9" height="15.0" fill="rgb(242,90,52)" rx="2" ry="2" />
<text  x="148.79" y="559.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (73 samples, 0.36%)</title><rect x="154.5" y="533" width="4.3" height="15.0" fill="rgb(229,224,32)" rx="2" ry="2" />
<text  x="157.49" y="543.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (25 samples, 0.12%)</title><rect x="657.6" y="549" width="1.5" height="15.0" fill="rgb(227,40,41)" rx="2" ry="2" />
<text  x="660.60" y="559.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandOptionGeneric (104 samples, 0.52%)</title><rect x="558.5" y="661" width="6.1" height="15.0" fill="rgb(244,227,40)" rx="2" ry="2" />
<text  x="561.45" y="671.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (4 samples, 0.02%)</title><rect x="59.2" y="901" width="0.3" height="15.0" fill="rgb(226,71,45)" rx="2" ry="2" />
<text  x="62.22" y="911.5" ></text>
</g>
<g >
<title>FlagSet&lt;Game_Interpreter::Keys, 32ul&gt;::operator[] (2 samples, 0.01%)</title><rect x="573.1" y="645" width="0.1" height="15.0" fill="rgb(248,199,48)" rx="2" ry="2" />
<text  x="576.09" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (3 samples, 0.01%)</title><rect x="180.7" y="901" width="0.2" height="15.0" fill="rgb(227,89,19)" rx="2" ry="2" />
<text  x="183.72" y="911.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;2ul, bool&gt; (3 samples, 0.01%)</title><rect x="733.1" y="421" width="0.2" height="15.0" fill="rgb(221,151,24)" rx="2" ry="2" />
<text  x="736.11" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (2 samples, 0.01%)</title><rect x="975.9" y="661" width="0.2" height="15.0" fill="rgb(242,21,43)" rx="2" ry="2" />
<text  x="978.94" y="671.5" ></text>
</g>
<g >
<title>unmap_single_vma (2 samples, 0.01%)</title><rect x="904.4" y="165" width="0.1" height="15.0" fill="rgb(225,14,51)" rx="2" ry="2" />
<text  x="907.37" y="175.5" ></text>
</g>
<g >
<title>__strlen_avx2 (2 samples, 0.01%)</title><rect x="172.9" y="453" width="0.1" height="15.0" fill="rgb(216,208,40)" rx="2" ry="2" />
<text  x="175.90" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::new_allocator (6 samples, 0.03%)</title><rect x="47.6" y="901" width="0.4" height="15.0" fill="rgb(232,186,16)" rx="2" ry="2" />
<text  x="50.64" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (3 samples, 0.01%)</title><rect x="443.6" y="613" width="0.2" height="15.0" fill="rgb(210,209,29)" rx="2" ry="2" />
<text  x="446.60" y="623.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (56 samples, 0.28%)</title><rect x="17.2" y="757" width="3.3" height="15.0" fill="rgb(240,167,19)" rx="2" ry="2" />
<text  x="20.23" y="767.5" ></text>
</g>
<g >
<title>std::max&lt;int&gt; (12 samples, 0.06%)</title><rect x="969.0" y="661" width="0.7" height="15.0" fill="rgb(228,222,29)" rx="2" ry="2" />
<text  x="972.00" y="671.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::~_Head_base (5 samples, 0.02%)</title><rect x="746.2" y="485" width="0.3" height="15.0" fill="rgb(212,206,1)" rx="2" ry="2" />
<text  x="749.17" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="130.6" y="469" width="0.1" height="15.0" fill="rgb(221,204,5)" rx="2" ry="2" />
<text  x="133.56" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_M_lower_bound (423 samples, 2.11%)</title><rect x="705.2" y="501" width="24.9" height="15.0" fill="rgb(242,83,29)" rx="2" ry="2" />
<text  x="708.18" y="511.5" >s..</text>
</g>
<g >
<title>Bitmap::find_format (22 samples, 0.11%)</title><rect x="129.2" y="517" width="1.3" height="15.0" fill="rgb(208,121,40)" rx="2" ry="2" />
<text  x="132.21" y="527.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="958.0" y="517" width="0.2" height="15.0" fill="rgb(249,229,16)" rx="2" ry="2" />
<text  x="961.00" y="527.5" ></text>
</g>
<g >
<title>Game_Player::UpdateSelfMovement (46 samples, 0.23%)</title><rect x="1142.3" y="725" width="2.7" height="15.0" fill="rgb(253,3,38)" rx="2" ry="2" />
<text  x="1145.31" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_Rb_tree_iterator (2 samples, 0.01%)</title><rect x="709.6" y="485" width="0.2" height="15.0" fill="rgb(225,210,28)" rx="2" ry="2" />
<text  x="712.65" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="149.0" y="517" width="0.1" height="15.0" fill="rgb(239,137,38)" rx="2" ry="2" />
<text  x="152.02" y="527.5" ></text>
</g>
<g >
<title>Spriteset_Map::Update (8 samples, 0.04%)</title><rect x="1179.1" y="773" width="0.4" height="15.0" fill="rgb(216,209,6)" rx="2" ry="2" />
<text  x="1182.06" y="783.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.05%)</title><rect x="966.7" y="565" width="0.6" height="15.0" fill="rgb(223,228,13)" rx="2" ry="2" />
<text  x="969.70" y="575.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (37 samples, 0.18%)</title><rect x="865.7" y="341" width="2.1" height="15.0" fill="rgb(217,142,3)" rx="2" ry="2" />
<text  x="868.67" y="351.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_M_head (2 samples, 0.01%)</title><rect x="734.5" y="389" width="0.1" height="15.0" fill="rgb(229,110,16)" rx="2" ry="2" />
<text  x="737.53" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (71 samples, 0.35%)</title><rect x="126.3" y="549" width="4.2" height="15.0" fill="rgb(212,205,15)" rx="2" ry="2" />
<text  x="129.32" y="559.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (4 samples, 0.02%)</title><rect x="914.8" y="613" width="0.2" height="15.0" fill="rgb(250,86,10)" rx="2" ry="2" />
<text  x="917.77" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (2 samples, 0.01%)</title><rect x="1033.0" y="677" width="0.1" height="15.0" fill="rgb(254,218,51)" rx="2" ry="2" />
<text  x="1035.98" y="687.5" ></text>
</g>
<g >
<title>FileRequestResult::~FileRequestResult (5 samples, 0.02%)</title><rect x="26.2" y="901" width="0.3" height="15.0" fill="rgb(230,195,42)" rx="2" ry="2" />
<text  x="29.23" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (13 samples, 0.06%)</title><rect x="464.9" y="645" width="0.8" height="15.0" fill="rgb(226,196,0)" rx="2" ry="2" />
<text  x="467.89" y="655.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (25 samples, 0.12%)</title><rect x="158.8" y="501" width="1.5" height="15.0" fill="rgb(217,16,19)" rx="2" ry="2" />
<text  x="161.79" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_M_begin (6 samples, 0.03%)</title><rect x="815.4" y="309" width="0.4" height="15.0" fill="rgb(219,188,29)" rx="2" ry="2" />
<text  x="818.45" y="319.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (5 samples, 0.02%)</title><rect x="130.7" y="565" width="0.3" height="15.0" fill="rgb(233,212,51)" rx="2" ry="2" />
<text  x="133.68" y="575.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (81 samples, 0.40%)</title><rect x="695.1" y="501" width="4.8" height="15.0" fill="rgb(253,75,19)" rx="2" ry="2" />
<text  x="698.12" y="511.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.01%)</title><rect x="958.0" y="533" width="0.2" height="15.0" fill="rgb(251,5,15)" rx="2" ry="2" />
<text  x="961.00" y="543.5" ></text>
</g>
<g >
<title>unmap_region (26 samples, 0.13%)</title><rect x="890.7" y="181" width="1.6" height="15.0" fill="rgb(216,149,20)" rx="2" ry="2" />
<text  x="893.72" y="191.5" ></text>
</g>
<g >
<title>Window_Selectable::Update (7 samples, 0.03%)</title><rect x="1179.8" y="757" width="0.4" height="15.0" fill="rgb(223,162,53)" rx="2" ry="2" />
<text  x="1182.77" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, unsigned long, true&gt;::_S_equals (2 samples, 0.01%)</title><rect x="104.7" y="901" width="0.2" height="15.0" fill="rgb(243,97,46)" rx="2" ry="2" />
<text  x="107.74" y="911.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (12 samples, 0.06%)</title><rect x="713.7" y="405" width="0.7" height="15.0" fill="rgb(243,71,28)" rx="2" ry="2" />
<text  x="716.71" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (13 samples, 0.06%)</title><rect x="465.7" y="645" width="0.7" height="15.0" fill="rgb(232,75,35)" rx="2" ry="2" />
<text  x="468.65" y="655.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::destroy&lt;Bitmap&gt; (639 samples, 3.18%)</title><rect x="869.0" y="453" width="37.5" height="15.0" fill="rgb(213,24,26)" rx="2" ry="2" />
<text  x="871.96" y="463.5" >std..</text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (7 samples, 0.03%)</title><rect x="822.0" y="341" width="0.4" height="15.0" fill="rgb(215,194,18)" rx="2" ry="2" />
<text  x="825.03" y="351.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (7 samples, 0.03%)</title><rect x="130.6" y="789" width="0.4" height="15.0" fill="rgb(241,172,0)" rx="2" ry="2" />
<text  x="133.56" y="799.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (8 samples, 0.04%)</title><rect x="445.5" y="597" width="0.5" height="15.0" fill="rgb(246,177,3)" rx="2" ry="2" />
<text  x="448.54" y="607.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (20 samples, 0.10%)</title><rect x="740.8" y="501" width="1.1" height="15.0" fill="rgb(237,176,17)" rx="2" ry="2" />
<text  x="743.76" y="511.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (3 samples, 0.01%)</title><rect x="1178.8" y="725" width="0.2" height="15.0" fill="rgb(228,218,1)" rx="2" ry="2" />
<text  x="1181.83" y="735.5" ></text>
</g>
<g >
<title>pick_next_task_fair (2 samples, 0.01%)</title><rect x="20.6" y="773" width="0.1" height="15.0" fill="rgb(227,206,3)" rx="2" ry="2" />
<text  x="23.59" y="783.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate (49 samples, 0.24%)</title><rect x="145.8" y="501" width="2.9" height="15.0" fill="rgb(250,123,2)" rx="2" ry="2" />
<text  x="148.79" y="511.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (2 samples, 0.01%)</title><rect x="782.3" y="453" width="0.1" height="15.0" fill="rgb(208,200,25)" rx="2" ry="2" />
<text  x="785.28" y="463.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (5 samples, 0.02%)</title><rect x="781.8" y="485" width="0.3" height="15.0" fill="rgb(235,37,13)" rx="2" ry="2" />
<text  x="784.81" y="495.5" ></text>
</g>
<g >
<title>Game_Picture::Show (34 samples, 0.17%)</title><rect x="172.1" y="661" width="2.0" height="15.0" fill="rgb(226,24,7)" rx="2" ry="2" />
<text  x="175.14" y="671.5" ></text>
</g>
<g >
<title>variables (9 samples, 0.04%)</title><rect x="513.0" y="645" width="0.5" height="15.0" fill="rgb(212,200,43)" rx="2" ry="2" />
<text  x="515.99" y="655.5" ></text>
</g>
<g >
<title>Game_Screen::GetPicture (5 samples, 0.02%)</title><rect x="33.9" y="901" width="0.3" height="15.0" fill="rgb(243,110,8)" rx="2" ry="2" />
<text  x="36.94" y="911.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::swap (9 samples, 0.04%)</title><rect x="907.7" y="517" width="0.5" height="15.0" fill="rgb(213,146,3)" rx="2" ry="2" />
<text  x="910.66" y="527.5" ></text>
</g>
<g >
<title>Graphics::IsTransitionErased (36 samples, 0.18%)</title><rect x="912.4" y="613" width="2.1" height="15.0" fill="rgb(205,207,22)" rx="2" ry="2" />
<text  x="915.36" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (32 samples, 0.16%)</title><rect x="696.5" y="469" width="1.9" height="15.0" fill="rgb(205,113,42)" rx="2" ry="2" />
<text  x="699.48" y="479.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="138.0" y="517" width="0.2" height="15.0" fill="rgb(240,15,43)" rx="2" ry="2" />
<text  x="140.97" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (17 samples, 0.08%)</title><rect x="420.2" y="597" width="1.0" height="15.0" fill="rgb(207,152,34)" rx="2" ry="2" />
<text  x="423.19" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (36 samples, 0.18%)</title><rect x="1124.1" y="709" width="2.2" height="15.0" fill="rgb(235,155,48)" rx="2" ry="2" />
<text  x="1127.13" y="719.5" ></text>
</g>
<g >
<title>try_charge (2 samples, 0.01%)</title><rect x="795.7" y="373" width="0.1" height="15.0" fill="rgb(217,215,17)" rx="2" ry="2" />
<text  x="798.69" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base (13 samples, 0.06%)</title><rect x="688.5" y="469" width="0.8" height="15.0" fill="rgb(208,143,25)" rx="2" ry="2" />
<text  x="691.54" y="479.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (3 samples, 0.01%)</title><rect x="1179.8" y="677" width="0.2" height="15.0" fill="rgb(236,140,41)" rx="2" ry="2" />
<text  x="1182.83" y="687.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (2 samples, 0.01%)</title><rect x="64.7" y="901" width="0.1" height="15.0" fill="rgb(222,60,37)" rx="2" ry="2" />
<text  x="67.69" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator* (4 samples, 0.02%)</title><rect x="595.6" y="597" width="0.2" height="15.0" fill="rgb(209,212,34)" rx="2" ry="2" />
<text  x="598.56" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (73 samples, 0.36%)</title><rect x="154.5" y="517" width="4.3" height="15.0" fill="rgb(244,39,12)" rx="2" ry="2" />
<text  x="157.49" y="527.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (5 samples, 0.02%)</title><rect x="175.0" y="533" width="0.3" height="15.0" fill="rgb(252,3,24)" rx="2" ry="2" />
<text  x="177.96" y="543.5" ></text>
</g>
<g >
<title>unmap_region (10 samples, 0.05%)</title><rect x="903.9" y="197" width="0.6" height="15.0" fill="rgb(223,84,5)" rx="2" ry="2" />
<text  x="906.89" y="207.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (5 samples, 0.02%)</title><rect x="1177.8" y="709" width="0.3" height="15.0" fill="rgb(235,180,9)" rx="2" ry="2" />
<text  x="1180.77" y="719.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.04%)</title><rect x="163.3" y="517" width="0.5" height="15.0" fill="rgb(206,96,26)" rx="2" ry="2" />
<text  x="166.26" y="527.5" ></text>
</g>
<g >
<title>Sprite::GetBitmap (3 samples, 0.01%)</title><rect x="1164.1" y="709" width="0.1" height="15.0" fill="rgb(243,25,7)" rx="2" ry="2" />
<text  x="1167.07" y="719.5" ></text>
</g>
<g >
<title>Bitmap::ZoomOpacityBlit (3 samples, 0.01%)</title><rect x="182.8" y="693" width="0.2" height="15.0" fill="rgb(219,144,52)" rx="2" ry="2" />
<text  x="185.78" y="703.5" ></text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.01%)</title><rect x="116.3" y="357" width="0.1" height="15.0" fill="rgb(248,70,51)" rx="2" ry="2" />
<text  x="119.27" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (3 samples, 0.01%)</title><rect x="91.6" y="901" width="0.2" height="15.0" fill="rgb(205,20,34)" rx="2" ry="2" />
<text  x="94.63" y="911.5" ></text>
</g>
<g >
<title>easyrpg-player (19,863 samples, 98.99%)</title><rect x="21.9" y="933" width="1168.1" height="15.0" fill="rgb(235,64,13)" rx="2" ry="2" />
<text  x="24.88" y="943.5" >easyrpg-player</text>
</g>
<g >
<title>[libasan.so.5.0.0] (12 samples, 0.06%)</title><rect x="903.8" y="293" width="0.7" height="15.0" fill="rgb(207,161,3)" rx="2" ry="2" />
<text  x="906.78" y="303.5" ></text>
</g>
<g >
<title>Scene_Map::Update (7 samples, 0.03%)</title><rect x="130.6" y="853" width="0.4" height="15.0" fill="rgb(237,190,9)" rx="2" ry="2" />
<text  x="133.56" y="863.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (6 samples, 0.03%)</title><rect x="574.6" y="645" width="0.3" height="15.0" fill="rgb(210,56,42)" rx="2" ry="2" />
<text  x="577.57" y="655.5" ></text>
</g>
<g >
<title>Game_Interpreter::IsRunning (7 samples, 0.03%)</title><rect x="354.4" y="709" width="0.5" height="15.0" fill="rgb(238,26,54)" rx="2" ry="2" />
<text  x="357.44" y="719.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~tuple (9 samples, 0.04%)</title><rect x="163.3" y="645" width="0.5" height="15.0" fill="rgb(209,213,19)" rx="2" ry="2" />
<text  x="166.26" y="655.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::_M_head (3 samples, 0.01%)</title><rect x="1138.4" y="645" width="0.1" height="15.0" fill="rgb(206,176,39)" rx="2" ry="2" />
<text  x="1141.37" y="655.5" ></text>
</g>
<g >
<title>operator new (49 samples, 0.24%)</title><rect x="145.8" y="469" width="2.9" height="15.0" fill="rgb(224,107,30)" rx="2" ry="2" />
<text  x="148.79" y="479.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (4 samples, 0.02%)</title><rect x="163.5" y="389" width="0.2" height="15.0" fill="rgb(237,197,22)" rx="2" ry="2" />
<text  x="166.49" y="399.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (5 samples, 0.02%)</title><rect x="1174.1" y="677" width="0.3" height="15.0" fill="rgb(211,101,23)" rx="2" ry="2" />
<text  x="1177.06" y="687.5" ></text>
</g>
<g >
<title>Game_Map::GetNeedRefresh (6 samples, 0.03%)</title><rect x="1097.5" y="709" width="0.3" height="15.0" fill="rgb(207,106,38)" rx="2" ry="2" />
<text  x="1100.49" y="719.5" ></text>
</g>
<g >
<title>FileRequestResult::FileRequestResult (6 samples, 0.03%)</title><rect x="653.8" y="613" width="0.4" height="15.0" fill="rgb(215,46,37)" rx="2" ry="2" />
<text  x="656.84" y="623.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (14 samples, 0.07%)</title><rect x="794.6" y="405" width="0.8" height="15.0" fill="rgb(220,20,0)" rx="2" ry="2" />
<text  x="797.57" y="415.5" ></text>
</g>
<g >
<title>Game_Picture::ShowParams::ShowParams (10 samples, 0.05%)</title><rect x="949.6" y="661" width="0.6" height="15.0" fill="rgb(240,208,42)" rx="2" ry="2" />
<text  x="952.65" y="671.5" ></text>
</g>
<g >
<title>Blend (16 samples, 0.08%)</title><rect x="1158.5" y="709" width="1.0" height="15.0" fill="rgb(225,16,22)" rx="2" ry="2" />
<text  x="1161.54" y="719.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (2 samples, 0.01%)</title><rect x="844.1" y="485" width="0.1" height="15.0" fill="rgb(225,96,3)" rx="2" ry="2" />
<text  x="847.09" y="495.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (15 samples, 0.07%)</title><rect x="890.8" y="149" width="0.9" height="15.0" fill="rgb(209,141,47)" rx="2" ry="2" />
<text  x="893.78" y="159.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (11 samples, 0.05%)</title><rect x="955.2" y="613" width="0.7" height="15.0" fill="rgb(242,129,48)" rx="2" ry="2" />
<text  x="958.23" y="623.5" ></text>
</g>
<g >
<title>std::__distance&lt;char*&gt; (2 samples, 0.01%)</title><rect x="605.0" y="549" width="0.1" height="15.0" fill="rgb(228,21,19)" rx="2" ry="2" />
<text  x="608.03" y="559.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt; (3 samples, 0.01%)</title><rect x="918.6" y="565" width="0.2" height="15.0" fill="rgb(216,30,13)" rx="2" ry="2" />
<text  x="921.60" y="575.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (8 samples, 0.04%)</title><rect x="597.4" y="549" width="0.5" height="15.0" fill="rgb(237,40,52)" rx="2" ry="2" />
<text  x="600.44" y="559.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_invoke (7 samples, 0.03%)</title><rect x="130.6" y="645" width="0.4" height="15.0" fill="rgb(215,131,20)" rx="2" ry="2" />
<text  x="133.56" y="655.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (3 samples, 0.01%)</title><rect x="174.0" y="517" width="0.1" height="15.0" fill="rgb(244,55,7)" rx="2" ry="2" />
<text  x="176.96" y="527.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (7 samples, 0.03%)</title><rect x="924.2" y="613" width="0.5" height="15.0" fill="rgb(227,7,19)" rx="2" ry="2" />
<text  x="927.24" y="623.5" ></text>
</g>
<g >
<title>SDL_ConvertPixels_REAL (5 samples, 0.02%)</title><rect x="183.0" y="725" width="0.3" height="15.0" fill="rgb(247,23,52)" rx="2" ry="2" />
<text  x="186.02" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (15 samples, 0.07%)</title><rect x="138.8" y="597" width="0.9" height="15.0" fill="rgb(246,96,17)" rx="2" ry="2" />
<text  x="141.79" y="607.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator bool (2 samples, 0.01%)</title><rect x="67.6" y="901" width="0.2" height="15.0" fill="rgb(206,149,26)" rx="2" ry="2" />
<text  x="70.63" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt;::_Iter_equals_val (3 samples, 0.01%)</title><rect x="46.8" y="901" width="0.1" height="15.0" fill="rgb(238,7,10)" rx="2" ry="2" />
<text  x="49.76" y="911.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (65 samples, 0.32%)</title><rect x="163.3" y="757" width="3.8" height="15.0" fill="rgb(206,57,24)" rx="2" ry="2" />
<text  x="166.26" y="767.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (963 samples, 4.80%)</title><rect x="1036.8" y="693" width="56.6" height="15.0" fill="rgb(240,51,11)" rx="2" ry="2" />
<text  x="1039.80" y="703.5" >Game_..</text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (4 samples, 0.02%)</title><rect x="102.0" y="901" width="0.2" height="15.0" fill="rgb(244,229,46)" rx="2" ry="2" />
<text  x="104.98" y="911.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (49 samples, 0.24%)</title><rect x="175.0" y="725" width="2.8" height="15.0" fill="rgb(211,86,53)" rx="2" ry="2" />
<text  x="177.96" y="735.5" ></text>
</g>
<g >
<title>eventfd_write (4 samples, 0.02%)</title><rect x="21.4" y="821" width="0.2" height="15.0" fill="rgb(222,127,53)" rx="2" ry="2" />
<text  x="24.35" y="831.5" ></text>
</g>
<g >
<title>Game_Map::Update (16,911 samples, 84.28%)</title><rect x="184.3" y="773" width="994.5" height="15.0" fill="rgb(228,220,48)" rx="2" ry="2" />
<text  x="187.31" y="783.5" >Game_Map::Update</text>
</g>
<g >
<title>Game_Interpreter::SkipToNextConditional (590 samples, 2.94%)</title><rect x="427.7" y="661" width="34.7" height="15.0" fill="rgb(206,92,18)" rx="2" ry="2" />
<text  x="430.66" y="671.5" >Ga..</text>
</g>
<g >
<title>Bitmap::Init (4 samples, 0.02%)</title><rect x="24.2" y="901" width="0.3" height="15.0" fill="rgb(229,14,4)" rx="2" ry="2" />
<text  x="27.23" y="911.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="959.5" y="581" width="0.1" height="15.0" fill="rgb(238,120,18)" rx="2" ry="2" />
<text  x="962.47" y="591.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator bool (2 samples, 0.01%)</title><rect x="841.8" y="533" width="0.1" height="15.0" fill="rgb(251,205,50)" rx="2" ry="2" />
<text  x="844.79" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="190.3" y="693" width="0.1" height="15.0" fill="rgb(232,167,22)" rx="2" ry="2" />
<text  x="193.31" y="703.5" ></text>
</g>
<g >
<title>std::forward&lt;FileRequestResult*&gt; (2 samples, 0.01%)</title><rect x="911.5" y="581" width="0.1" height="15.0" fill="rgb(229,40,11)" rx="2" ry="2" />
<text  x="914.48" y="591.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (7 samples, 0.03%)</title><rect x="911.8" y="581" width="0.4" height="15.0" fill="rgb(220,142,54)" rx="2" ry="2" />
<text  x="914.78" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_M_begin (7 samples, 0.03%)</title><rect x="704.8" y="501" width="0.4" height="15.0" fill="rgb(236,65,6)" rx="2" ry="2" />
<text  x="707.77" y="511.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.02%)</title><rect x="130.7" y="501" width="0.3" height="15.0" fill="rgb(231,222,51)" rx="2" ry="2" />
<text  x="133.68" y="511.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.03%)</title><rect x="957.6" y="517" width="0.4" height="15.0" fill="rgb(237,139,39)" rx="2" ry="2" />
<text  x="960.65" y="527.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Game_Picture*, false&gt;::_M_head (2 samples, 0.01%)</title><rect x="955.8" y="549" width="0.1" height="15.0" fill="rgb(211,68,39)" rx="2" ry="2" />
<text  x="958.76" y="559.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (2 samples, 0.01%)</title><rect x="893.6" y="309" width="0.1" height="15.0" fill="rgb(238,36,25)" rx="2" ry="2" />
<text  x="896.60" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (2 samples, 0.01%)</title><rect x="916.4" y="629" width="0.1" height="15.0" fill="rgb(236,128,27)" rx="2" ry="2" />
<text  x="919.42" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.02%)</title><rect x="163.5" y="453" width="0.3" height="15.0" fill="rgb(206,137,24)" rx="2" ry="2" />
<text  x="166.49" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.01%)</title><rect x="791.5" y="405" width="0.1" height="15.0" fill="rgb(233,27,11)" rx="2" ry="2" />
<text  x="794.45" y="415.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (84 samples, 0.42%)</title><rect x="641.9" y="549" width="4.9" height="15.0" fill="rgb(242,30,53)" rx="2" ry="2" />
<text  x="644.90" y="559.5" ></text>
</g>
<g >
<title>FileRequestResult::FileRequestResult (8 samples, 0.04%)</title><rect x="640.6" y="581" width="0.5" height="15.0" fill="rgb(241,99,17)" rx="2" ry="2" />
<text  x="643.61" y="591.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (4 samples, 0.02%)</title><rect x="67.3" y="901" width="0.3" height="15.0" fill="rgb(246,227,20)" rx="2" ry="2" />
<text  x="70.34" y="911.5" ></text>
</g>
<g >
<title>pthread_getspecific@plt (2 samples, 0.01%)</title><rect x="164.8" y="405" width="0.1" height="15.0" fill="rgb(248,58,40)" rx="2" ry="2" />
<text  x="167.78" y="415.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (20 samples, 0.10%)</title><rect x="952.9" y="597" width="1.2" height="15.0" fill="rgb(209,225,15)" rx="2" ry="2" />
<text  x="955.94" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (5 samples, 0.02%)</title><rect x="911.0" y="533" width="0.3" height="15.0" fill="rgb(205,144,34)" rx="2" ry="2" />
<text  x="914.01" y="543.5" ></text>
</g>
<g >
<title>do_syscall_64 (100 samples, 0.50%)</title><rect x="15.8" y="901" width="5.9" height="15.0" fill="rgb(245,16,33)" rx="2" ry="2" />
<text  x="18.82" y="911.5" ></text>
</g>
<g >
<title>__libc_recvmsg (2 samples, 0.01%)</title><rect x="1180.9" y="613" width="0.1" height="15.0" fill="rgb(240,50,48)" rx="2" ry="2" />
<text  x="1183.88" y="623.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (49 samples, 0.24%)</title><rect x="145.8" y="565" width="2.9" height="15.0" fill="rgb(235,190,39)" rx="2" ry="2" />
<text  x="148.79" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_valptr (5 samples, 0.02%)</title><rect x="632.1" y="501" width="0.3" height="15.0" fill="rgb(208,192,20)" rx="2" ry="2" />
<text  x="635.14" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::operator bool (2 samples, 0.01%)</title><rect x="86.5" y="901" width="0.1" height="15.0" fill="rgb(249,187,18)" rx="2" ry="2" />
<text  x="89.51" y="911.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (4 samples, 0.02%)</title><rect x="179.7" y="901" width="0.2" height="15.0" fill="rgb(210,86,37)" rx="2" ry="2" />
<text  x="182.66" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::base (4 samples, 0.02%)</title><rect x="1139.8" y="725" width="0.2" height="15.0" fill="rgb(236,158,42)" rx="2" ry="2" />
<text  x="1142.78" y="735.5" ></text>
</g>
<g >
<title>ksys_read (7 samples, 0.03%)</title><rect x="20.8" y="869" width="0.4" height="15.0" fill="rgb(229,212,34)" rx="2" ry="2" />
<text  x="23.82" y="879.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (2 samples, 0.01%)</title><rect x="1168.7" y="661" width="0.1" height="15.0" fill="rgb(249,33,26)" rx="2" ry="2" />
<text  x="1171.65" y="671.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (2 samples, 0.01%)</title><rect x="1182.0" y="661" width="0.1" height="15.0" fill="rgb(217,84,32)" rx="2" ry="2" />
<text  x="1185.00" y="671.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (235 samples, 1.17%)</title><rect x="149.4" y="773" width="13.9" height="15.0" fill="rgb(235,216,5)" rx="2" ry="2" />
<text  x="152.44" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (5 samples, 0.02%)</title><rect x="175.0" y="501" width="0.3" height="15.0" fill="rgb(245,130,19)" rx="2" ry="2" />
<text  x="177.96" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (26 samples, 0.13%)</title><rect x="716.4" y="389" width="1.5" height="15.0" fill="rgb(206,187,14)" rx="2" ry="2" />
<text  x="719.35" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (4 samples, 0.02%)</title><rect x="695.9" y="453" width="0.3" height="15.0" fill="rgb(239,17,43)" rx="2" ry="2" />
<text  x="698.95" y="463.5" ></text>
</g>
<g >
<title>Scene_Map::AsyncNext&lt;Scene_Map::UpdateStage1(MapUpdateAsyncContext)::{lambda()#2}&gt; (4 samples, 0.02%)</title><rect x="1178.8" y="773" width="0.3" height="15.0" fill="rgb(226,83,49)" rx="2" ry="2" />
<text  x="1181.83" y="783.5" ></text>
</g>
<g >
<title>Game_Map::GetDisplayY (4 samples, 0.02%)</title><rect x="31.6" y="901" width="0.2" height="15.0" fill="rgb(231,163,41)" rx="2" ry="2" />
<text  x="34.58" y="911.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::_M_head (2 samples, 0.01%)</title><rect x="1137.6" y="645" width="0.1" height="15.0" fill="rgb(234,202,9)" rx="2" ry="2" />
<text  x="1140.60" y="655.5" ></text>
</g>
<g >
<title>__wake_up_locked_key (4 samples, 0.02%)</title><rect x="21.4" y="805" width="0.2" height="15.0" fill="rgb(240,29,39)" rx="2" ry="2" />
<text  x="24.35" y="815.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.02%)</title><rect x="890.4" y="229" width="0.3" height="15.0" fill="rgb(207,72,3)" rx="2" ry="2" />
<text  x="893.37" y="239.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (2 samples, 0.01%)</title><rect x="20.9" y="773" width="0.1" height="15.0" fill="rgb(206,132,46)" rx="2" ry="2" />
<text  x="23.88" y="783.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (46 samples, 0.23%)</title><rect x="160.6" y="581" width="2.7" height="15.0" fill="rgb(220,88,1)" rx="2" ry="2" />
<text  x="163.55" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (13 samples, 0.06%)</title><rect x="90.9" y="901" width="0.7" height="15.0" fill="rgb(209,103,22)" rx="2" ry="2" />
<text  x="93.86" y="911.5" ></text>
</g>
<g >
<title>Bitmap::GetWidth (21 samples, 0.10%)</title><rect x="825.9" y="533" width="1.2" height="15.0" fill="rgb(219,205,0)" rx="2" ry="2" />
<text  x="828.91" y="543.5" ></text>
</g>
<g >
<title>std::swap&lt;Bitmap*&gt; (11 samples, 0.05%)</title><rect x="946.2" y="613" width="0.6" height="15.0" fill="rgb(245,207,14)" rx="2" ry="2" />
<text  x="949.18" y="623.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (86 samples, 0.43%)</title><rect x="149.4" y="533" width="5.1" height="15.0" fill="rgb(244,54,13)" rx="2" ry="2" />
<text  x="152.44" y="543.5" ></text>
</g>
<g >
<title>main (49 samples, 0.24%)</title><rect x="175.0" y="901" width="2.8" height="15.0" fill="rgb(208,165,30)" rx="2" ry="2" />
<text  x="177.96" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator()&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;&amp;&gt; (2 samples, 0.01%)</title><rect x="63.0" y="901" width="0.2" height="15.0" fill="rgb(254,54,27)" rx="2" ry="2" />
<text  x="66.05" y="911.5" ></text>
</g>
<g >
<title>clear_page_erms (31 samples, 0.15%)</title><rect x="792.1" y="373" width="1.8" height="15.0" fill="rgb(229,209,21)" rx="2" ry="2" />
<text  x="795.10" y="383.5" ></text>
</g>
<g >
<title>max&lt;int&gt; (2 samples, 0.01%)</title><rect x="1167.9" y="693" width="0.2" height="15.0" fill="rgb(233,8,31)" rx="2" ry="2" />
<text  x="1170.95" y="703.5" ></text>
</g>
<g >
<title>Bitmap::Create (297 samples, 1.48%)</title><rect x="108.9" y="661" width="17.4" height="15.0" fill="rgb(214,172,54)" rx="2" ry="2" />
<text  x="111.86" y="671.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (2 samples, 0.01%)</title><rect x="1178.9" y="709" width="0.1" height="15.0" fill="rgb(250,95,26)" rx="2" ry="2" />
<text  x="1181.89" y="719.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (3 samples, 0.01%)</title><rect x="738.7" y="501" width="0.2" height="15.0" fill="rgb(240,163,30)" rx="2" ry="2" />
<text  x="741.70" y="511.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (10 samples, 0.05%)</title><rect x="121.0" y="421" width="0.6" height="15.0" fill="rgb(222,107,36)" rx="2" ry="2" />
<text  x="123.97" y="431.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (7 samples, 0.03%)</title><rect x="139.3" y="533" width="0.4" height="15.0" fill="rgb(241,105,13)" rx="2" ry="2" />
<text  x="142.26" y="543.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (4 samples, 0.02%)</title><rect x="850.3" y="469" width="0.2" height="15.0" fill="rgb(220,87,42)" rx="2" ry="2" />
<text  x="853.26" y="479.5" ></text>
</g>
<g >
<title>FileRequestAsync::SetGraphicFile (42 samples, 0.21%)</title><rect x="912.2" y="629" width="2.5" height="15.0" fill="rgb(205,133,40)" rx="2" ry="2" />
<text  x="915.19" y="639.5" ></text>
</g>
<g >
<title>__tlb_remove_page_size (2 samples, 0.01%)</title><rect x="892.0" y="117" width="0.1" height="15.0" fill="rgb(217,1,44)" rx="2" ry="2" />
<text  x="895.02" y="127.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (41 samples, 0.20%)</title><rect x="835.1" y="533" width="2.5" height="15.0" fill="rgb(207,46,41)" rx="2" ry="2" />
<text  x="838.15" y="543.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (23 samples, 0.11%)</title><rect x="571.3" y="661" width="1.4" height="15.0" fill="rgb(237,75,20)" rx="2" ry="2" />
<text  x="574.33" y="671.5" ></text>
</g>
<g >
<title>Blend (25 samples, 0.12%)</title><rect x="929.2" y="629" width="1.5" height="15.0" fill="rgb(214,91,36)" rx="2" ry="2" />
<text  x="932.18" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (10 samples, 0.05%)</title><rect x="419.6" y="581" width="0.6" height="15.0" fill="rgb(252,67,26)" rx="2" ry="2" />
<text  x="422.60" y="591.5" ></text>
</g>
<g >
<title>Cache::System (6 samples, 0.03%)</title><rect x="1179.8" y="693" width="0.4" height="15.0" fill="rgb(214,186,13)" rx="2" ry="2" />
<text  x="1182.83" y="703.5" ></text>
</g>
<g >
<title>Sprite::SetWaverPhase (3 samples, 0.01%)</title><rect x="935.7" y="629" width="0.1" height="15.0" fill="rgb(218,162,47)" rx="2" ry="2" />
<text  x="938.65" y="639.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (4 samples, 0.02%)</title><rect x="138.0" y="597" width="0.2" height="15.0" fill="rgb(222,132,7)" rx="2" ry="2" />
<text  x="140.97" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (4 samples, 0.02%)</title><rect x="911.1" y="517" width="0.2" height="15.0" fill="rgb(239,77,45)" rx="2" ry="2" />
<text  x="914.07" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (13 samples, 0.06%)</title><rect x="915.6" y="629" width="0.8" height="15.0" fill="rgb(247,64,14)" rx="2" ry="2" />
<text  x="918.60" y="639.5" ></text>
</g>
<g >
<title>page_fault (95 samples, 0.47%)</title><rect x="1184.1" y="917" width="5.5" height="15.0" fill="rgb(211,17,7)" rx="2" ry="2" />
<text  x="1187.06" y="927.5" ></text>
</g>
<g >
<title>Cache::SystemOrBlack (6 samples, 0.03%)</title><rect x="1179.8" y="725" width="0.4" height="15.0" fill="rgb(212,24,9)" rx="2" ry="2" />
<text  x="1182.83" y="735.5" ></text>
</g>
<g >
<title>FileRequestAsync::BindStart (119 samples, 0.59%)</title><rect x="131.0" y="661" width="7.0" height="15.0" fill="rgb(218,28,47)" rx="2" ry="2" />
<text  x="133.97" y="671.5" ></text>
</g>
<g >
<title>Scene::MainFunction (49 samples, 0.24%)</title><rect x="175.0" y="853" width="2.8" height="15.0" fill="rgb(222,164,23)" rx="2" ry="2" />
<text  x="177.96" y="863.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (8 samples, 0.04%)</title><rect x="420.7" y="581" width="0.5" height="15.0" fill="rgb(228,201,12)" rx="2" ry="2" />
<text  x="423.72" y="591.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.01%)</title><rect x="15.4" y="837" width="0.1" height="15.0" fill="rgb(254,120,52)" rx="2" ry="2" />
<text  x="18.35" y="847.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::~__allocated_ptr (3 samples, 0.01%)</title><rect x="824.0" y="437" width="0.2" height="15.0" fill="rgb(239,172,6)" rx="2" ry="2" />
<text  x="827.03" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_ptr (3 samples, 0.01%)</title><rect x="707.4" y="453" width="0.1" height="15.0" fill="rgb(234,0,53)" rx="2" ry="2" />
<text  x="710.36" y="463.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.02%)</title><rect x="160.3" y="485" width="0.3" height="15.0" fill="rgb(209,141,5)" rx="2" ry="2" />
<text  x="163.26" y="495.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (48 samples, 0.24%)</title><rect x="791.7" y="389" width="2.9" height="15.0" fill="rgb(214,86,34)" rx="2" ry="2" />
<text  x="794.75" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (6 samples, 0.03%)</title><rect x="630.3" y="549" width="0.3" height="15.0" fill="rgb(221,113,45)" rx="2" ry="2" />
<text  x="633.26" y="559.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (33 samples, 0.16%)</title><rect x="797.0" y="469" width="1.9" height="15.0" fill="rgb(221,11,22)" rx="2" ry="2" />
<text  x="799.98" y="479.5" ></text>
</g>
<g >
<title>operator!= (6 samples, 0.03%)</title><rect x="49.9" y="901" width="0.4" height="15.0" fill="rgb(221,119,27)" rx="2" ry="2" />
<text  x="52.93" y="911.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (297 samples, 1.48%)</title><rect x="108.9" y="597" width="17.4" height="15.0" fill="rgb(251,98,19)" rx="2" ry="2" />
<text  x="111.86" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::_M_ptr (5 samples, 0.02%)</title><rect x="1137.4" y="693" width="0.3" height="15.0" fill="rgb(207,125,8)" rx="2" ry="2" />
<text  x="1140.42" y="703.5" ></text>
</g>
<g >
<title>Cache::System (2 samples, 0.01%)</title><rect x="1179.5" y="725" width="0.1" height="15.0" fill="rgb(229,171,36)" rx="2" ry="2" />
<text  x="1182.53" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_S_key (5 samples, 0.02%)</title><rect x="54.9" y="901" width="0.3" height="15.0" fill="rgb(213,11,32)" rx="2" ry="2" />
<text  x="57.87" y="911.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.01%)</title><rect x="904.5" y="277" width="0.2" height="15.0" fill="rgb(249,91,32)" rx="2" ry="2" />
<text  x="907.48" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator* (28 samples, 0.14%)</title><rect x="614.7" y="581" width="1.7" height="15.0" fill="rgb(236,3,7)" rx="2" ry="2" />
<text  x="617.73" y="591.5" ></text>
</g>
<g >
<title>memcmp (2 samples, 0.01%)</title><rect x="728.4" y="405" width="0.1" height="15.0" fill="rgb(214,188,22)" rx="2" ry="2" />
<text  x="731.35" y="415.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::get (4 samples, 0.02%)</title><rect x="823.7" y="437" width="0.2" height="15.0" fill="rgb(229,171,41)" rx="2" ry="2" />
<text  x="826.68" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (165 samples, 0.82%)</title><rect x="1048.0" y="661" width="9.7" height="15.0" fill="rgb(205,218,15)" rx="2" ry="2" />
<text  x="1050.98" y="671.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (3 samples, 0.01%)</title><rect x="116.5" y="405" width="0.2" height="15.0" fill="rgb(238,176,43)" rx="2" ry="2" />
<text  x="119.50" y="415.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&amp;&gt; (8 samples, 0.04%)</title><rect x="74.7" y="901" width="0.5" height="15.0" fill="rgb(246,15,36)" rx="2" ry="2" />
<text  x="77.69" y="911.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (953 samples, 4.75%)</title><rect x="976.2" y="677" width="56.1" height="15.0" fill="rgb(229,23,1)" rx="2" ry="2" />
<text  x="979.23" y="687.5" >Game_..</text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (30 samples, 0.15%)</title><rect x="458.1" y="645" width="1.8" height="15.0" fill="rgb(238,178,44)" rx="2" ry="2" />
<text  x="461.12" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt; &gt; &gt;::size (7 samples, 0.03%)</title><rect x="956.0" y="645" width="0.4" height="15.0" fill="rgb(246,36,0)" rx="2" ry="2" />
<text  x="959.00" y="655.5" ></text>
</g>
<g >
<title>std::__distance&lt;char*&gt; (11 samples, 0.05%)</title><rect x="63.2" y="901" width="0.6" height="15.0" fill="rgb(217,105,48)" rx="2" ry="2" />
<text  x="66.16" y="911.5" ></text>
</g>
<g >
<title>memset@plt (3 samples, 0.01%)</title><rect x="799.2" y="517" width="0.1" height="15.0" fill="rgb(240,96,32)" rx="2" ry="2" />
<text  x="802.16" y="527.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (46 samples, 0.23%)</title><rect x="160.6" y="469" width="2.7" height="15.0" fill="rgb(215,144,41)" rx="2" ry="2" />
<text  x="163.55" y="479.5" ></text>
</g>
<g >
<title>MakeFlashColor (17 samples, 0.08%)</title><rect x="830.1" y="517" width="1.0" height="15.0" fill="rgb(249,153,35)" rx="2" ry="2" />
<text  x="833.15" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (18 samples, 0.09%)</title><rect x="246.1" y="677" width="1.1" height="15.0" fill="rgb(248,173,32)" rx="2" ry="2" />
<text  x="249.12" y="687.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (12 samples, 0.06%)</title><rect x="126.8" y="309" width="0.7" height="15.0" fill="rgb(217,212,30)" rx="2" ry="2" />
<text  x="129.79" y="319.5" ></text>
</g>
<g >
<title>Game_Picture::Show (235 samples, 1.17%)</title><rect x="149.4" y="757" width="13.9" height="15.0" fill="rgb(245,63,10)" rx="2" ry="2" />
<text  x="152.44" y="767.5" ></text>
</g>
<g >
<title>finish_task_switch (14 samples, 0.07%)</title><rect x="1181.1" y="597" width="0.8" height="15.0" fill="rgb(223,78,40)" rx="2" ry="2" />
<text  x="1184.06" y="607.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="22.2" y="901" width="0.1" height="15.0" fill="rgb(251,38,48)" rx="2" ry="2" />
<text  x="25.17" y="911.5" ></text>
</g>
<g >
<title>unmap_region (8 samples, 0.04%)</title><rect x="145.2" y="357" width="0.5" height="15.0" fill="rgb(237,18,28)" rx="2" ry="2" />
<text  x="148.20" y="367.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (53 samples, 0.26%)</title><rect x="598.8" y="517" width="3.1" height="15.0" fill="rgb(218,173,23)" rx="2" ry="2" />
<text  x="601.79" y="527.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="1180.2" y="773" width="0.1" height="15.0" fill="rgb(236,131,19)" rx="2" ry="2" />
<text  x="1183.18" y="783.5" ></text>
</g>
<g >
<title>Scene::IsAsyncPending (3 samples, 0.01%)</title><rect x="1178.8" y="757" width="0.2" height="15.0" fill="rgb(220,194,2)" rx="2" ry="2" />
<text  x="1181.83" y="767.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="867.5" y="293" width="0.1" height="15.0" fill="rgb(251,141,0)" rx="2" ry="2" />
<text  x="870.49" y="303.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_manager (2 samples, 0.01%)</title><rect x="51.3" y="901" width="0.2" height="15.0" fill="rgb(234,207,37)" rx="2" ry="2" />
<text  x="54.34" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (94 samples, 0.47%)</title><rect x="596.7" y="565" width="5.6" height="15.0" fill="rgb(205,107,27)" rx="2" ry="2" />
<text  x="599.74" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (12 samples, 0.06%)</title><rect x="903.8" y="261" width="0.7" height="15.0" fill="rgb(249,113,26)" rx="2" ry="2" />
<text  x="906.78" y="271.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}::operator() (7 samples, 0.03%)</title><rect x="130.6" y="629" width="0.4" height="15.0" fill="rgb(205,39,12)" rx="2" ry="2" />
<text  x="133.56" y="639.5" ></text>
</g>
<g >
<title>Scene::IsAsyncPending (5 samples, 0.02%)</title><rect x="1182.2" y="821" width="0.3" height="15.0" fill="rgb(218,174,38)" rx="2" ry="2" />
<text  x="1185.18" y="831.5" ></text>
</g>
<g >
<title>__lru_cache_add (12 samples, 0.06%)</title><rect x="794.7" y="389" width="0.7" height="15.0" fill="rgb(219,184,3)" rx="2" ry="2" />
<text  x="797.69" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (353 samples, 1.76%)</title><rect x="251.5" y="677" width="20.8" height="15.0" fill="rgb(214,212,44)" rx="2" ry="2" />
<text  x="254.53" y="687.5" ></text>
</g>
<g >
<title>_XEventsQueued (5 samples, 0.02%)</title><rect x="1180.8" y="709" width="0.3" height="15.0" fill="rgb(208,202,51)" rx="2" ry="2" />
<text  x="1183.77" y="719.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::~_Sp_counted_ptr_inplace (7 samples, 0.03%)</title><rect x="860.0" y="453" width="0.4" height="15.0" fill="rgb(238,112,0)" rx="2" ry="2" />
<text  x="862.96" y="463.5" ></text>
</g>
<g >
<title>std::__find_if&lt;int const*, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (7 samples, 0.03%)</title><rect x="563.5" y="597" width="0.4" height="15.0" fill="rgb(251,96,19)" rx="2" ry="2" />
<text  x="566.51" y="607.5" ></text>
</g>
<g >
<title>main (34 samples, 0.17%)</title><rect x="172.1" y="885" width="2.0" height="15.0" fill="rgb(243,175,49)" rx="2" ry="2" />
<text  x="175.14" y="895.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (3 samples, 0.01%)</title><rect x="700.0" y="533" width="0.2" height="15.0" fill="rgb(218,208,30)" rx="2" ry="2" />
<text  x="703.00" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_ptr (3 samples, 0.01%)</title><rect x="174.0" y="245" width="0.1" height="15.0" fill="rgb(212,86,2)" rx="2" ry="2" />
<text  x="176.96" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (26 samples, 0.13%)</title><rect x="507.5" y="645" width="1.5" height="15.0" fill="rgb(218,97,35)" rx="2" ry="2" />
<text  x="510.46" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (2 samples, 0.01%)</title><rect x="829.5" y="501" width="0.1" height="15.0" fill="rgb(215,44,17)" rx="2" ry="2" />
<text  x="832.50" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (25 samples, 0.12%)</title><rect x="1174.5" y="725" width="1.5" height="15.0" fill="rgb(206,146,6)" rx="2" ry="2" />
<text  x="1177.53" y="735.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned (2 samples, 0.01%)</title><rect x="648.3" y="533" width="0.1" height="15.0" fill="rgb(248,51,36)" rx="2" ry="2" />
<text  x="651.31" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_M_lower_bound (159 samples, 0.79%)</title><rect x="149.4" y="597" width="9.4" height="15.0" fill="rgb(215,115,38)" rx="2" ry="2" />
<text  x="152.44" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (6 samples, 0.03%)</title><rect x="1035.0" y="677" width="0.3" height="15.0" fill="rgb(216,214,36)" rx="2" ry="2" />
<text  x="1037.98" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (33 samples, 0.16%)</title><rect x="1046.0" y="661" width="2.0" height="15.0" fill="rgb(242,82,30)" rx="2" ry="2" />
<text  x="1049.04" y="671.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (2 samples, 0.01%)</title><rect x="179.3" y="901" width="0.1" height="15.0" fill="rgb(225,75,30)" rx="2" ry="2" />
<text  x="182.25" y="911.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::get (17 samples, 0.08%)</title><rect x="1137.8" y="709" width="1.0" height="15.0" fill="rgb(233,36,40)" rx="2" ry="2" />
<text  x="1140.78" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (2 samples, 0.01%)</title><rect x="746.3" y="469" width="0.2" height="15.0" fill="rgb(242,211,39)" rx="2" ry="2" />
<text  x="749.35" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt; (5 samples, 0.02%)</title><rect x="1141.6" y="741" width="0.3" height="15.0" fill="rgb(251,219,31)" rx="2" ry="2" />
<text  x="1144.60" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_mutate (15 samples, 0.07%)</title><rect x="957.4" y="613" width="0.9" height="15.0" fill="rgb(243,73,40)" rx="2" ry="2" />
<text  x="960.41" y="623.5" ></text>
</g>
<g >
<title>rw_verify_area (3 samples, 0.01%)</title><rect x="21.1" y="837" width="0.1" height="15.0" fill="rgb(218,31,37)" rx="2" ry="2" />
<text  x="24.06" y="847.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="126.6" y="373" width="0.1" height="15.0" fill="rgb(223,91,34)" rx="2" ry="2" />
<text  x="129.62" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base (6 samples, 0.03%)</title><rect x="622.6" y="565" width="0.3" height="15.0" fill="rgb(222,98,49)" rx="2" ry="2" />
<text  x="625.55" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (46 samples, 0.23%)</title><rect x="602.4" y="581" width="2.7" height="15.0" fill="rgb(226,160,23)" rx="2" ry="2" />
<text  x="605.44" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (5 samples, 0.02%)</title><rect x="130.7" y="517" width="0.3" height="15.0" fill="rgb(233,135,6)" rx="2" ry="2" />
<text  x="133.68" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator bool (2 samples, 0.01%)</title><rect x="939.2" y="629" width="0.1" height="15.0" fill="rgb(206,228,21)" rx="2" ry="2" />
<text  x="942.18" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::substr (3 samples, 0.01%)</title><rect x="958.9" y="645" width="0.2" height="15.0" fill="rgb(244,94,1)" rx="2" ry="2" />
<text  x="961.88" y="655.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (7 samples, 0.03%)</title><rect x="130.6" y="773" width="0.4" height="15.0" fill="rgb(227,144,39)" rx="2" ry="2" />
<text  x="133.56" y="783.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (16 samples, 0.08%)</title><rect x="941.9" y="565" width="1.0" height="15.0" fill="rgb(208,128,47)" rx="2" ry="2" />
<text  x="944.94" y="575.5" ></text>
</g>
<g >
<title>FileRequestAsync::BindStart (34 samples, 0.17%)</title><rect x="172.1" y="629" width="2.0" height="15.0" fill="rgb(212,6,33)" rx="2" ry="2" />
<text  x="175.14" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create@plt (2 samples, 0.01%)</title><rect x="968.6" y="629" width="0.2" height="15.0" fill="rgb(248,17,22)" rx="2" ry="2" />
<text  x="971.64" y="639.5" ></text>
</g>
<g >
<title>Scene_Map::Update (182 samples, 0.91%)</title><rect x="138.0" y="885" width="10.7" height="15.0" fill="rgb(224,213,49)" rx="2" ry="2" />
<text  x="140.97" y="895.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator (5 samples, 0.02%)</title><rect x="1178.1" y="741" width="0.3" height="15.0" fill="rgb(207,134,30)" rx="2" ry="2" />
<text  x="1181.06" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (58 samples, 0.29%)</title><rect x="725.1" y="421" width="3.4" height="15.0" fill="rgb(219,200,48)" rx="2" ry="2" />
<text  x="728.12" y="431.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (10 samples, 0.05%)</title><rect x="148.8" y="853" width="0.6" height="15.0" fill="rgb(246,229,20)" rx="2" ry="2" />
<text  x="151.85" y="863.5" ></text>
</g>
<g >
<title>alloc_pages_vma (51 samples, 0.25%)</title><rect x="791.6" y="405" width="3.0" height="15.0" fill="rgb(231,218,25)" rx="2" ry="2" />
<text  x="794.57" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (11 samples, 0.05%)</title><rect x="58.0" y="901" width="0.6" height="15.0" fill="rgb(218,112,37)" rx="2" ry="2" />
<text  x="60.99" y="911.5" ></text>
</g>
<g >
<title>Scene::GetRequestedScene (4 samples, 0.02%)</title><rect x="1114.4" y="709" width="0.3" height="15.0" fill="rgb(229,89,27)" rx="2" ry="2" />
<text  x="1117.43" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (16 samples, 0.08%)</title><rect x="42.6" y="901" width="0.9" height="15.0" fill="rgb(217,170,35)" rx="2" ry="2" />
<text  x="45.58" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*, std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt; &gt; (9 samples, 0.04%)</title><rect x="647.0" y="581" width="0.5" height="15.0" fill="rgb(231,4,45)" rx="2" ry="2" />
<text  x="649.96" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (50 samples, 0.25%)</title><rect x="889.6" y="277" width="2.9" height="15.0" fill="rgb(242,112,45)" rx="2" ry="2" />
<text  x="892.60" y="287.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Transition*, std::default_delete&lt;Transition&gt; &gt; (9 samples, 0.04%)</title><rect x="913.5" y="549" width="0.6" height="15.0" fill="rgb(241,39,23)" rx="2" ry="2" />
<text  x="916.54" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (30 samples, 0.15%)</title><rect x="692.5" y="485" width="1.8" height="15.0" fill="rgb(245,204,28)" rx="2" ry="2" />
<text  x="695.54" y="495.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::operator[] (137 samples, 0.68%)</title><rect x="812.9" y="357" width="8.0" height="15.0" fill="rgb(247,115,14)" rx="2" ry="2" />
<text  x="815.86" y="367.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~tuple (16 samples, 0.08%)</title><rect x="173.0" y="533" width="1.0" height="15.0" fill="rgb(228,36,39)" rx="2" ry="2" />
<text  x="176.02" y="543.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (4 samples, 0.02%)</title><rect x="844.6" y="501" width="0.2" height="15.0" fill="rgb(234,103,14)" rx="2" ry="2" />
<text  x="847.56" y="511.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator() (3 samples, 0.01%)</title><rect x="814.2" y="341" width="0.1" height="15.0" fill="rgb(213,224,8)" rx="2" ry="2" />
<text  x="817.15" y="351.5" ></text>
</g>
<g >
<title>__GI_madvise (8 samples, 0.04%)</title><rect x="892.5" y="277" width="0.5" height="15.0" fill="rgb(243,83,25)" rx="2" ry="2" />
<text  x="895.54" y="287.5" ></text>
</g>
<g >
<title>operator!= (21 samples, 0.10%)</title><rect x="833.7" y="501" width="1.3" height="15.0" fill="rgb(244,44,0)" rx="2" ry="2" />
<text  x="836.74" y="511.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (29 samples, 0.14%)</title><rect x="152.6" y="469" width="1.7" height="15.0" fill="rgb(241,70,49)" rx="2" ry="2" />
<text  x="155.61" y="479.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char32_t&gt;::copy (2 samples, 0.01%)</title><rect x="958.2" y="581" width="0.1" height="15.0" fill="rgb(251,187,30)" rx="2" ry="2" />
<text  x="961.18" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="595.9" y="597" width="0.1" height="15.0" fill="rgb(219,43,26)" rx="2" ry="2" />
<text  x="598.91" y="607.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (25 samples, 0.12%)</title><rect x="158.8" y="485" width="1.5" height="15.0" fill="rgb(231,46,51)" rx="2" ry="2" />
<text  x="161.79" y="495.5" ></text>
</g>
<g >
<title>find_vma (5 samples, 0.02%)</title><rect x="790.2" y="437" width="0.3" height="15.0" fill="rgb(214,106,54)" rx="2" ry="2" />
<text  x="793.22" y="447.5" ></text>
</g>
<g >
<title>std::bitset&lt;36ul&gt;::reference::operator= (3 samples, 0.01%)</title><rect x="183.8" y="789" width="0.2" height="15.0" fill="rgb(246,60,30)" rx="2" ry="2" />
<text  x="186.84" y="799.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (55 samples, 0.27%)</title><rect x="17.3" y="693" width="3.2" height="15.0" fill="rgb(245,128,30)" rx="2" ry="2" />
<text  x="20.29" y="703.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (8 samples, 0.04%)</title><rect x="845.8" y="469" width="0.5" height="15.0" fill="rgb(217,18,39)" rx="2" ry="2" />
<text  x="848.79" y="479.5" ></text>
</g>
<g >
<title>X11_PumpEvents (10 samples, 0.05%)</title><rect x="1180.5" y="757" width="0.6" height="15.0" fill="rgb(253,71,1)" rx="2" ry="2" />
<text  x="1183.47" y="767.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (13 samples, 0.06%)</title><rect x="894.4" y="341" width="0.8" height="15.0" fill="rgb(245,107,26)" rx="2" ry="2" />
<text  x="897.43" y="351.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="735.1" y="405" width="0.1" height="15.0" fill="rgb(253,62,22)" rx="2" ry="2" />
<text  x="738.05" y="415.5" ></text>
</g>
<g >
<title>Game_Map::UpdateForegroundEvents (29 samples, 0.14%)</title><rect x="1140.2" y="757" width="1.7" height="15.0" fill="rgb(229,71,43)" rx="2" ry="2" />
<text  x="1143.19" y="767.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.01%)</title><rect x="892.8" y="149" width="0.2" height="15.0" fill="rgb(217,189,27)" rx="2" ry="2" />
<text  x="895.84" y="159.5" ></text>
</g>
<g >
<title>vfs_read (6 samples, 0.03%)</title><rect x="20.9" y="853" width="0.3" height="15.0" fill="rgb(245,155,42)" rx="2" ry="2" />
<text  x="23.88" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (159 samples, 0.79%)</title><rect x="149.4" y="613" width="9.4" height="15.0" fill="rgb(219,120,15)" rx="2" ry="2" />
<text  x="152.44" y="623.5" ></text>
</g>
<g >
<title>__do_munmap (28 samples, 0.14%)</title><rect x="890.7" y="197" width="1.6" height="15.0" fill="rgb(238,14,40)" rx="2" ry="2" />
<text  x="893.66" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (5 samples, 0.02%)</title><rect x="571.6" y="629" width="0.3" height="15.0" fill="rgb(234,183,38)" rx="2" ry="2" />
<text  x="574.62" y="639.5" ></text>
</g>
<g >
<title>Scene::IsAsyncPending (2 samples, 0.01%)</title><rect x="184.2" y="805" width="0.1" height="15.0" fill="rgb(228,27,47)" rx="2" ry="2" />
<text  x="187.19" y="815.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (424 samples, 2.11%)</title><rect x="1149.4" y="725" width="25.0" height="15.0" fill="rgb(209,62,53)" rx="2" ry="2" />
<text  x="1152.42" y="735.5" >G..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.03%)</title><rect x="172.6" y="469" width="0.4" height="15.0" fill="rgb(224,137,17)" rx="2" ry="2" />
<text  x="175.61" y="479.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (10 samples, 0.05%)</title><rect x="1160.5" y="693" width="0.6" height="15.0" fill="rgb(205,152,48)" rx="2" ry="2" />
<text  x="1163.48" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="145.7" y="421" width="0.1" height="15.0" fill="rgb(232,72,32)" rx="2" ry="2" />
<text  x="148.67" y="431.5" ></text>
</g>
<g >
<title>Sprite::SetX (4 samples, 0.02%)</title><rect x="839.1" y="533" width="0.3" height="15.0" fill="rgb(219,90,13)" rx="2" ry="2" />
<text  x="842.15" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (147 samples, 0.73%)</title><rect x="987.2" y="645" width="8.7" height="15.0" fill="rgb(222,206,2)" rx="2" ry="2" />
<text  x="990.23" y="655.5" ></text>
</g>
<g >
<title>unmap_single_vma (4 samples, 0.02%)</title><rect x="145.4" y="325" width="0.3" height="15.0" fill="rgb(246,71,47)" rx="2" ry="2" />
<text  x="148.44" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (28 samples, 0.14%)</title><rect x="1093.4" y="693" width="1.7" height="15.0" fill="rgb(223,205,2)" rx="2" ry="2" />
<text  x="1096.44" y="703.5" ></text>
</g>
<g >
<title>Bitmap::GetOpacity (2 samples, 0.01%)</title><rect x="754.7" y="501" width="0.1" height="15.0" fill="rgb(234,50,36)" rx="2" ry="2" />
<text  x="757.70" y="511.5" ></text>
</g>
<g >
<title>security_file_permission (3 samples, 0.01%)</title><rect x="21.1" y="821" width="0.1" height="15.0" fill="rgb(252,204,21)" rx="2" ry="2" />
<text  x="24.06" y="831.5" ></text>
</g>
<g >
<title>Sdl2Ui::ProcessEvent (19 samples, 0.09%)</title><rect x="1181.1" y="789" width="1.1" height="15.0" fill="rgb(244,187,42)" rx="2" ry="2" />
<text  x="1184.06" y="799.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (12 samples, 0.06%)</title><rect x="145.0" y="453" width="0.7" height="15.0" fill="rgb(207,119,7)" rx="2" ry="2" />
<text  x="147.97" y="463.5" ></text>
</g>
<g >
<title>unmap_vmas (10 samples, 0.05%)</title><rect x="891.7" y="165" width="0.6" height="15.0" fill="rgb(249,190,20)" rx="2" ry="2" />
<text  x="894.66" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.14%)</title><rect x="890.7" y="261" width="1.6" height="15.0" fill="rgb(234,24,4)" rx="2" ry="2" />
<text  x="893.66" y="271.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt;::_M_head (3 samples, 0.01%)</title><rect x="970.9" y="581" width="0.2" height="15.0" fill="rgb(207,13,18)" rx="2" ry="2" />
<text  x="973.88" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (56 samples, 0.28%)</title><rect x="504.2" y="645" width="3.3" height="15.0" fill="rgb(251,56,6)" rx="2" ry="2" />
<text  x="507.17" y="655.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (6 samples, 0.03%)</title><rect x="127.9" y="277" width="0.3" height="15.0" fill="rgb(222,164,9)" rx="2" ry="2" />
<text  x="130.85" y="287.5" ></text>
</g>
<g >
<title>__vm_munmap (9 samples, 0.04%)</title><rect x="145.1" y="389" width="0.6" height="15.0" fill="rgb(249,56,44)" rx="2" ry="2" />
<text  x="148.14" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_value (2 samples, 0.01%)</title><rect x="103.1" y="901" width="0.1" height="15.0" fill="rgb(253,100,23)" rx="2" ry="2" />
<text  x="106.09" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, unsigned long, true&gt;::_S_equals (10 samples, 0.05%)</title><rect x="138.2" y="517" width="0.6" height="15.0" fill="rgb(217,165,15)" rx="2" ry="2" />
<text  x="141.20" y="527.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (24 samples, 0.12%)</title><rect x="558.8" y="629" width="1.4" height="15.0" fill="rgb(210,163,13)" rx="2" ry="2" />
<text  x="561.80" y="639.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::swap (9 samples, 0.04%)</title><rect x="844.0" y="501" width="0.6" height="15.0" fill="rgb(233,141,18)" rx="2" ry="2" />
<text  x="847.03" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (35 samples, 0.17%)</title><rect x="143.7" y="581" width="2.1" height="15.0" fill="rgb(221,182,50)" rx="2" ry="2" />
<text  x="146.73" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (86 samples, 0.43%)</title><rect x="149.4" y="485" width="5.1" height="15.0" fill="rgb(245,198,50)" rx="2" ry="2" />
<text  x="152.44" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (8 samples, 0.04%)</title><rect x="107.6" y="917" width="0.4" height="15.0" fill="rgb(210,162,39)" rx="2" ry="2" />
<text  x="110.56" y="927.5" ></text>
</g>
<g >
<title>Scene::HasRequestedScene (3 samples, 0.01%)</title><rect x="36.2" y="901" width="0.1" height="15.0" fill="rgb(228,41,43)" rx="2" ry="2" />
<text  x="39.17" y="911.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (3 samples, 0.01%)</title><rect x="970.9" y="613" width="0.2" height="15.0" fill="rgb(224,14,32)" rx="2" ry="2" />
<text  x="973.88" y="623.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator bool (5 samples, 0.02%)</title><rect x="76.1" y="901" width="0.3" height="15.0" fill="rgb(244,44,20)" rx="2" ry="2" />
<text  x="79.10" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::end@plt (3 samples, 0.01%)</title><rect x="596.1" y="597" width="0.2" height="15.0" fill="rgb(248,106,3)" rx="2" ry="2" />
<text  x="599.15" y="607.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (2 samples, 0.01%)</title><rect x="1168.8" y="645" width="0.1" height="15.0" fill="rgb(245,127,39)" rx="2" ry="2" />
<text  x="1171.77" y="655.5" ></text>
</g>
<g >
<title>Tone::Tone (10 samples, 0.05%)</title><rect x="1162.8" y="693" width="0.6" height="15.0" fill="rgb(228,37,31)" rx="2" ry="2" />
<text  x="1165.83" y="703.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate (37 samples, 0.18%)</title><rect x="164.9" y="533" width="2.2" height="15.0" fill="rgb(240,197,38)" rx="2" ry="2" />
<text  x="167.90" y="543.5" ></text>
</g>
<g >
<title>Game_Picture::SyncCurrentToFinish (29 samples, 0.14%)</title><rect x="922.9" y="645" width="1.8" height="15.0" fill="rgb(245,114,23)" rx="2" ry="2" />
<text  x="925.95" y="655.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (9 samples, 0.04%)</title><rect x="734.7" y="437" width="0.5" height="15.0" fill="rgb(244,2,21)" rx="2" ry="2" />
<text  x="737.70" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (3 samples, 0.01%)</title><rect x="174.0" y="437" width="0.1" height="15.0" fill="rgb(235,66,23)" rx="2" ry="2" />
<text  x="176.96" y="447.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (4 samples, 0.02%)</title><rect x="890.4" y="149" width="0.2" height="15.0" fill="rgb(216,69,49)" rx="2" ry="2" />
<text  x="893.37" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (13 samples, 0.06%)</title><rect x="739.2" y="469" width="0.8" height="15.0" fill="rgb(234,201,31)" rx="2" ry="2" />
<text  x="742.23" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::get (4 samples, 0.02%)</title><rect x="914.2" y="581" width="0.3" height="15.0" fill="rgb(225,22,19)" rx="2" ry="2" />
<text  x="917.25" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::get (17 samples, 0.08%)</title><rect x="913.2" y="581" width="1.0" height="15.0" fill="rgb(218,49,12)" rx="2" ry="2" />
<text  x="916.19" y="591.5" ></text>
</g>
<g >
<title>__GI_madvise (3 samples, 0.01%)</title><rect x="904.5" y="293" width="0.2" height="15.0" fill="rgb(251,33,36)" rx="2" ry="2" />
<text  x="907.48" y="303.5" ></text>
</g>
<g >
<title>pixman_image_composite32@plt (2 samples, 0.01%)</title><rect x="783.0" y="517" width="0.2" height="15.0" fill="rgb(221,30,0)" rx="2" ry="2" />
<text  x="786.04" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (3 samples, 0.01%)</title><rect x="60.6" y="901" width="0.2" height="15.0" fill="rgb(227,224,36)" rx="2" ry="2" />
<text  x="63.58" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt; (40 samples, 0.20%)</title><rect x="1102.4" y="693" width="2.3" height="15.0" fill="rgb(248,100,35)" rx="2" ry="2" />
<text  x="1105.37" y="703.5" ></text>
</g>
<g >
<title>free_unref_page_list (2 samples, 0.01%)</title><rect x="163.5" y="293" width="0.2" height="15.0" fill="rgb(220,159,22)" rx="2" ry="2" />
<text  x="166.55" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;Bitmap&gt;::allocator (2 samples, 0.01%)</title><rect x="805.2" y="389" width="0.1" height="15.0" fill="rgb(213,182,32)" rx="2" ry="2" />
<text  x="808.21" y="399.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (2 samples, 0.01%)</title><rect x="21.8" y="917" width="0.1" height="15.0" fill="rgb(229,157,8)" rx="2" ry="2" />
<text  x="24.76" y="927.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (75 samples, 0.37%)</title><rect x="888.7" y="293" width="4.4" height="15.0" fill="rgb(207,16,43)" rx="2" ry="2" />
<text  x="891.66" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (13 samples, 0.06%)</title><rect x="629.8" y="565" width="0.8" height="15.0" fill="rgb(210,0,28)" rx="2" ry="2" />
<text  x="632.85" y="575.5" ></text>
</g>
<g >
<title>Bitmap::width (5 samples, 0.02%)</title><rect x="853.8" y="517" width="0.3" height="15.0" fill="rgb(249,226,11)" rx="2" ry="2" />
<text  x="856.85" y="527.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_invoke (4,166 samples, 20.76%)</title><rect x="666.6" y="597" width="245.0" height="15.0" fill="rgb(238,131,48)" rx="2" ry="2" />
<text  x="669.60" y="607.5" >std::_Function_handler&lt;void (Fil..</text>
</g>
<g >
<title>std::_Hash_bytes (7 samples, 0.03%)</title><rect x="699.1" y="437" width="0.4" height="15.0" fill="rgb(221,141,31)" rx="2" ry="2" />
<text  x="702.06" y="447.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (119 samples, 0.59%)</title><rect x="131.0" y="597" width="7.0" height="15.0" fill="rgb(207,132,53)" rx="2" ry="2" />
<text  x="133.97" y="607.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="959.3" y="597" width="0.1" height="15.0" fill="rgb(250,147,6)" rx="2" ry="2" />
<text  x="962.29" y="607.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (2 samples, 0.01%)</title><rect x="65.8" y="901" width="0.1" height="15.0" fill="rgb(247,64,32)" rx="2" ry="2" />
<text  x="68.81" y="911.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (182 samples, 0.91%)</title><rect x="138.0" y="773" width="10.7" height="15.0" fill="rgb(238,194,11)" rx="2" ry="2" />
<text  x="140.97" y="783.5" ></text>
</g>
<g >
<title>run_rebalance_domains (2 samples, 0.01%)</title><rect x="15.4" y="853" width="0.1" height="15.0" fill="rgb(207,61,46)" rx="2" ry="2" />
<text  x="18.35" y="863.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Impl::_Impl (10 samples, 0.05%)</title><rect x="804.7" y="421" width="0.6" height="15.0" fill="rgb(230,68,54)" rx="2" ry="2" />
<text  x="807.74" y="431.5" ></text>
</g>
<g >
<title>memcpy (2 samples, 0.01%)</title><rect x="597.9" y="549" width="0.1" height="15.0" fill="rgb(250,180,11)" rx="2" ry="2" />
<text  x="600.91" y="559.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (71 samples, 0.35%)</title><rect x="126.3" y="757" width="4.2" height="15.0" fill="rgb(207,105,46)" rx="2" ry="2" />
<text  x="129.32" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (4 samples, 0.02%)</title><rect x="735.8" y="437" width="0.3" height="15.0" fill="rgb(246,144,14)" rx="2" ry="2" />
<text  x="738.82" y="447.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandWait (38 samples, 0.19%)</title><rect x="974.0" y="677" width="2.2" height="15.0" fill="rgb(239,154,51)" rx="2" ry="2" />
<text  x="977.00" y="687.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.07%)</title><rect x="1181.1" y="709" width="0.8" height="15.0" fill="rgb(230,160,40)" rx="2" ry="2" />
<text  x="1184.06" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_valptr (3 samples, 0.01%)</title><rect x="813.8" y="325" width="0.2" height="15.0" fill="rgb(235,167,12)" rx="2" ry="2" />
<text  x="816.80" y="335.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (8 samples, 0.04%)</title><rect x="34.3" y="901" width="0.5" height="15.0" fill="rgb(208,54,35)" rx="2" ry="2" />
<text  x="37.35" y="911.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (158 samples, 0.79%)</title><rect x="884.3" y="309" width="9.3" height="15.0" fill="rgb(224,85,3)" rx="2" ry="2" />
<text  x="887.31" y="319.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (2 samples, 0.01%)</title><rect x="1168.8" y="661" width="0.1" height="15.0" fill="rgb(209,124,34)" rx="2" ry="2" />
<text  x="1171.77" y="671.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::~function (2 samples, 0.01%)</title><rect x="76.5" y="901" width="0.1" height="15.0" fill="rgb(230,148,39)" rx="2" ry="2" />
<text  x="79.51" y="911.5" ></text>
</g>
<g >
<title>Bitmap::Blit (6 samples, 0.03%)</title><rect x="182.4" y="693" width="0.4" height="15.0" fill="rgb(240,33,22)" rx="2" ry="2" />
<text  x="185.43" y="703.5" ></text>
</g>
<g >
<title>perf_event_mmap (6 samples, 0.03%)</title><rect x="126.9" y="261" width="0.3" height="15.0" fill="rgb(239,112,13)" rx="2" ry="2" />
<text  x="129.85" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (2 samples, 0.01%)</title><rect x="145.7" y="405" width="0.1" height="15.0" fill="rgb(225,76,36)" rx="2" ry="2" />
<text  x="148.67" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (2 samples, 0.01%)</title><rect x="924.3" y="597" width="0.1" height="15.0" fill="rgb(237,34,54)" rx="2" ry="2" />
<text  x="927.30" y="607.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (2 samples, 0.01%)</title><rect x="184.2" y="773" width="0.1" height="15.0" fill="rgb(211,19,6)" rx="2" ry="2" />
<text  x="187.19" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (4 samples, 0.02%)</title><rect x="828.7" y="501" width="0.2" height="15.0" fill="rgb(239,212,28)" rx="2" ry="2" />
<text  x="831.68" y="511.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (5 samples, 0.02%)</title><rect x="85.5" y="901" width="0.3" height="15.0" fill="rgb(231,228,18)" rx="2" ry="2" />
<text  x="88.51" y="911.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (6 samples, 0.03%)</title><rect x="67.0" y="901" width="0.3" height="15.0" fill="rgb(238,175,3)" rx="2" ry="2" />
<text  x="69.99" y="911.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.01%)</title><rect x="143.6" y="485" width="0.1" height="15.0" fill="rgb(211,201,44)" rx="2" ry="2" />
<text  x="146.61" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*, std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt; &gt;::__normal_iterator (3 samples, 0.01%)</title><rect x="653.3" y="565" width="0.1" height="15.0" fill="rgb(228,116,30)" rx="2" ry="2" />
<text  x="656.25" y="575.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (2 samples, 0.01%)</title><rect x="182.8" y="661" width="0.1" height="15.0" fill="rgb(213,203,35)" rx="2" ry="2" />
<text  x="185.78" y="671.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.01%)</title><rect x="736.9" y="485" width="0.2" height="15.0" fill="rgb(254,72,28)" rx="2" ry="2" />
<text  x="739.94" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (15 samples, 0.07%)</title><rect x="785.2" y="485" width="0.9" height="15.0" fill="rgb(241,183,46)" rx="2" ry="2" />
<text  x="788.22" y="495.5" ></text>
</g>
<g >
<title>operator new (51 samples, 0.25%)</title><rect x="648.8" y="549" width="3.0" height="15.0" fill="rgb(229,140,52)" rx="2" ry="2" />
<text  x="651.84" y="559.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::end (3 samples, 0.01%)</title><rect x="628.5" y="597" width="0.2" height="15.0" fill="rgb(227,160,11)" rx="2" ry="2" />
<text  x="631.49" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt;::begin (78 samples, 0.39%)</title><rect x="1104.7" y="693" width="4.6" height="15.0" fill="rgb(244,132,1)" rx="2" ry="2" />
<text  x="1107.73" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt;::operator()&lt;int const*&gt; (34 samples, 0.17%)</title><rect x="453.6" y="597" width="2.0" height="15.0" fill="rgb(211,117,23)" rx="2" ry="2" />
<text  x="456.60" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (4 samples, 0.02%)</title><rect x="418.3" y="597" width="0.2" height="15.0" fill="rgb(248,223,25)" rx="2" ry="2" />
<text  x="421.25" y="607.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (71 samples, 0.35%)</title><rect x="126.3" y="565" width="4.2" height="15.0" fill="rgb(219,217,16)" rx="2" ry="2" />
<text  x="129.32" y="575.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (4,156 samples, 20.71%)</title><rect x="666.9" y="565" width="244.4" height="15.0" fill="rgb(218,29,53)" rx="2" ry="2" />
<text  x="669.90" y="575.5" >Game_Picture::OnPictureSpriteReady</text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (2 samples, 0.01%)</title><rect x="572.6" y="629" width="0.1" height="15.0" fill="rgb(237,182,32)" rx="2" ry="2" />
<text  x="575.57" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::get (4 samples, 0.02%)</title><rect x="86.1" y="901" width="0.2" height="15.0" fill="rgb(218,120,36)" rx="2" ry="2" />
<text  x="89.10" y="911.5" ></text>
</g>
<g >
<title>__x64_sys_read (8 samples, 0.04%)</title><rect x="20.8" y="885" width="0.4" height="15.0" fill="rgb(218,22,42)" rx="2" ry="2" />
<text  x="23.76" y="895.5" ></text>
</g>
<g >
<title>Bitmap::Create (3 samples, 0.01%)</title><rect x="174.0" y="533" width="0.1" height="15.0" fill="rgb(230,5,39)" rx="2" ry="2" />
<text  x="176.96" y="543.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (9 samples, 0.04%)</title><rect x="1159.7" y="709" width="0.5" height="15.0" fill="rgb(243,13,45)" rx="2" ry="2" />
<text  x="1162.71" y="719.5" ></text>
</g>
<g >
<title>__strlen_avx2 (2 samples, 0.01%)</title><rect x="737.1" y="485" width="0.1" height="15.0" fill="rgb(246,59,45)" rx="2" ry="2" />
<text  x="740.11" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (47 samples, 0.23%)</title><rect x="1171.3" y="677" width="2.8" height="15.0" fill="rgb(227,120,38)" rx="2" ry="2" />
<text  x="1174.30" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (4 samples, 0.02%)</title><rect x="563.0" y="597" width="0.3" height="15.0" fill="rgb(223,118,48)" rx="2" ry="2" />
<text  x="566.04" y="607.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::get (3 samples, 0.01%)</title><rect x="1168.2" y="677" width="0.2" height="15.0" fill="rgb(231,208,26)" rx="2" ry="2" />
<text  x="1171.24" y="687.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; (3 samples, 0.01%)</title><rect x="697.5" y="405" width="0.2" height="15.0" fill="rgb(206,18,30)" rx="2" ry="2" />
<text  x="700.48" y="415.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (37 samples, 0.18%)</title><rect x="164.9" y="453" width="2.2" height="15.0" fill="rgb(221,7,27)" rx="2" ry="2" />
<text  x="167.90" y="463.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (487 samples, 2.43%)</title><rect x="594.3" y="613" width="28.6" height="15.0" fill="rgb(243,78,6)" rx="2" ry="2" />
<text  x="597.27" y="623.5" >Fi..</text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::get (2 samples, 0.01%)</title><rect x="576.7" y="645" width="0.1" height="15.0" fill="rgb(235,75,48)" rx="2" ry="2" />
<text  x="579.68" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (81 samples, 0.40%)</title><rect x="847.7" y="533" width="4.8" height="15.0" fill="rgb(244,116,16)" rx="2" ry="2" />
<text  x="850.73" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data@plt (5 samples, 0.02%)</title><rect x="638.6" y="549" width="0.3" height="15.0" fill="rgb(231,169,4)" rx="2" ry="2" />
<text  x="641.61" y="559.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (8 samples, 0.04%)</title><rect x="138.8" y="533" width="0.5" height="15.0" fill="rgb(211,168,33)" rx="2" ry="2" />
<text  x="141.79" y="543.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (297 samples, 1.48%)</title><rect x="108.9" y="693" width="17.4" height="15.0" fill="rgb(251,42,20)" rx="2" ry="2" />
<text  x="111.86" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (3 samples, 0.01%)</title><rect x="181.0" y="901" width="0.1" height="15.0" fill="rgb(219,222,44)" rx="2" ry="2" />
<text  x="183.96" y="911.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (10 samples, 0.05%)</title><rect x="845.7" y="485" width="0.6" height="15.0" fill="rgb(254,68,15)" rx="2" ry="2" />
<text  x="848.67" y="495.5" ></text>
</g>
<g >
<title>Game_Map::SetNeedRefresh (5 samples, 0.02%)</title><rect x="495.0" y="661" width="0.3" height="15.0" fill="rgb(208,163,21)" rx="2" ry="2" />
<text  x="498.00" y="671.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (39 samples, 0.19%)</title><rect x="1120.9" y="693" width="2.3" height="15.0" fill="rgb(240,87,31)" rx="2" ry="2" />
<text  x="1123.90" y="703.5" ></text>
</g>
<g >
<title>do_page_fault (3 samples, 0.01%)</title><rect x="116.3" y="373" width="0.1" height="15.0" fill="rgb(247,195,20)" rx="2" ry="2" />
<text  x="119.27" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (10 samples, 0.05%)</title><rect x="1010.1" y="645" width="0.6" height="15.0" fill="rgb(248,28,9)" rx="2" ry="2" />
<text  x="1013.10" y="655.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (46 samples, 0.23%)</title><rect x="160.6" y="549" width="2.7" height="15.0" fill="rgb(225,183,24)" rx="2" ry="2" />
<text  x="163.55" y="559.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (13 samples, 0.06%)</title><rect x="79.2" y="901" width="0.7" height="15.0" fill="rgb(236,170,26)" rx="2" ry="2" />
<text  x="82.16" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (4 samples, 0.02%)</title><rect x="857.8" y="453" width="0.3" height="15.0" fill="rgb(245,89,25)" rx="2" ry="2" />
<text  x="860.85" y="463.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::_M_enable_shared_from_this_with&lt;Bitmap, Bitmap&gt; (3 samples, 0.01%)</title><rect x="824.4" y="453" width="0.2" height="15.0" fill="rgb(214,129,49)" rx="2" ry="2" />
<text  x="827.39" y="463.5" ></text>
</g>
<g >
<title>std::forward&lt;int&amp;&gt; (3 samples, 0.01%)</title><rect x="800.3" y="485" width="0.2" height="15.0" fill="rgb(223,136,38)" rx="2" ry="2" />
<text  x="803.27" y="495.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (36 samples, 0.18%)</title><rect x="715.8" y="405" width="2.1" height="15.0" fill="rgb(220,72,0)" rx="2" ry="2" />
<text  x="718.77" y="415.5" ></text>
</g>
<g >
<title>Game_Map::Update (10 samples, 0.05%)</title><rect x="148.8" y="837" width="0.6" height="15.0" fill="rgb(226,7,21)" rx="2" ry="2" />
<text  x="151.85" y="847.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (3 samples, 0.01%)</title><rect x="904.5" y="245" width="0.2" height="15.0" fill="rgb(251,11,46)" rx="2" ry="2" />
<text  x="907.48" y="255.5" ></text>
</g>
<g >
<title>Bitmap::Clear (275 samples, 1.37%)</title><rect x="783.2" y="533" width="16.1" height="15.0" fill="rgb(222,95,43)" rx="2" ry="2" />
<text  x="786.16" y="543.5" ></text>
</g>
<g >
<title>zap_page_range (5 samples, 0.02%)</title><rect x="163.5" y="405" width="0.3" height="15.0" fill="rgb(213,50,40)" rx="2" ry="2" />
<text  x="166.49" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (8 samples, 0.04%)</title><rect x="106.5" y="901" width="0.5" height="15.0" fill="rgb(243,66,7)" rx="2" ry="2" />
<text  x="109.51" y="911.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::_M_ptr (16 samples, 0.08%)</title><rect x="845.3" y="501" width="1.0" height="15.0" fill="rgb(233,23,48)" rx="2" ry="2" />
<text  x="848.32" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_write (8 samples, 0.04%)</title><rect x="21.2" y="885" width="0.5" height="15.0" fill="rgb(219,125,52)" rx="2" ry="2" />
<text  x="24.23" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (5 samples, 0.02%)</title><rect x="695.9" y="469" width="0.3" height="15.0" fill="rgb(253,172,28)" rx="2" ry="2" />
<text  x="698.89" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (4 samples, 0.02%)</title><rect x="959.4" y="629" width="0.2" height="15.0" fill="rgb(250,130,12)" rx="2" ry="2" />
<text  x="962.41" y="639.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (6 samples, 0.03%)</title><rect x="182.4" y="677" width="0.4" height="15.0" fill="rgb(219,209,49)" rx="2" ry="2" />
<text  x="185.43" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (8 samples, 0.04%)</title><rect x="172.1" y="485" width="0.5" height="15.0" fill="rgb(220,33,54)" rx="2" ry="2" />
<text  x="175.14" y="495.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (65 samples, 0.32%)</title><rect x="163.3" y="853" width="3.8" height="15.0" fill="rgb(211,151,36)" rx="2" ry="2" />
<text  x="166.26" y="863.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (3 samples, 0.01%)</title><rect x="921.3" y="581" width="0.2" height="15.0" fill="rgb(223,42,12)" rx="2" ry="2" />
<text  x="924.30" y="591.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (15 samples, 0.07%)</title><rect x="172.1" y="501" width="0.9" height="15.0" fill="rgb(224,37,30)" rx="2" ry="2" />
<text  x="175.14" y="511.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (49 samples, 0.24%)</title><rect x="175.0" y="661" width="2.8" height="15.0" fill="rgb(238,195,4)" rx="2" ry="2" />
<text  x="177.96" y="671.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (5 samples, 0.02%)</title><rect x="160.3" y="597" width="0.3" height="15.0" fill="rgb(230,83,13)" rx="2" ry="2" />
<text  x="163.26" y="607.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (3 samples, 0.01%)</title><rect x="75.9" y="901" width="0.2" height="15.0" fill="rgb(206,90,13)" rx="2" ry="2" />
<text  x="78.92" y="911.5" ></text>
</g>
<g >
<title>vma_merge (2 samples, 0.01%)</title><rect x="127.3" y="261" width="0.1" height="15.0" fill="rgb(247,159,35)" rx="2" ry="2" />
<text  x="130.26" y="271.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt;::_M_head (3 samples, 0.01%)</title><rect x="955.7" y="565" width="0.2" height="15.0" fill="rgb(228,83,16)" rx="2" ry="2" />
<text  x="958.71" y="575.5" ></text>
</g>
<g >
<title>SDLAudioP2 (202 samples, 1.01%)</title><rect x="10.0" y="933" width="11.9" height="15.0" fill="rgb(237,42,27)" rx="2" ry="2" />
<text  x="13.00" y="943.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (80 samples, 0.40%)</title><rect x="121.6" y="421" width="4.7" height="15.0" fill="rgb(217,150,16)" rx="2" ry="2" />
<text  x="124.62" y="431.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (4 samples, 0.02%)</title><rect x="890.4" y="117" width="0.2" height="15.0" fill="rgb(207,167,12)" rx="2" ry="2" />
<text  x="893.37" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (147 samples, 0.73%)</title><rect x="960.4" y="661" width="8.6" height="15.0" fill="rgb(254,134,9)" rx="2" ry="2" />
<text  x="963.35" y="671.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (10 samples, 0.05%)</title><rect x="138.2" y="581" width="0.6" height="15.0" fill="rgb(253,64,33)" rx="2" ry="2" />
<text  x="141.20" y="591.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, bool&gt;::_M_head (2 samples, 0.01%)</title><rect x="103.5" y="901" width="0.1" height="15.0" fill="rgb(254,100,49)" rx="2" ry="2" />
<text  x="106.51" y="911.5" ></text>
</g>
<g >
<title>Cache::Picture (10 samples, 0.05%)</title><rect x="148.8" y="613" width="0.6" height="15.0" fill="rgb(246,174,15)" rx="2" ry="2" />
<text  x="151.85" y="623.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Set (607 samples, 3.03%)</title><rect x="513.5" y="661" width="35.7" height="15.0" fill="rgb(205,158,25)" rx="2" ry="2" />
<text  x="516.52" y="671.5" >Gam..</text>
</g>
<g >
<title>Sprite::BlitScreen (10 samples, 0.05%)</title><rect x="182.4" y="741" width="0.6" height="15.0" fill="rgb(241,167,10)" rx="2" ry="2" />
<text  x="185.43" y="751.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (14 samples, 0.07%)</title><rect x="739.2" y="485" width="0.9" height="15.0" fill="rgb(220,185,52)" rx="2" ry="2" />
<text  x="742.23" y="495.5" ></text>
</g>
<g >
<title>Player::Update (2 samples, 0.01%)</title><rect x="22.6" y="917" width="0.1" height="15.0" fill="rgb(243,190,37)" rx="2" ry="2" />
<text  x="25.59" y="927.5" ></text>
</g>
<g >
<title>__vfs_write (5 samples, 0.02%)</title><rect x="21.4" y="837" width="0.2" height="15.0" fill="rgb(248,203,44)" rx="2" ry="2" />
<text  x="24.35" y="847.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (27 samples, 0.13%)</title><rect x="28.5" y="901" width="1.6" height="15.0" fill="rgb(223,119,49)" rx="2" ry="2" />
<text  x="31.52" y="911.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (13 samples, 0.06%)</title><rect x="733.9" y="421" width="0.7" height="15.0" fill="rgb(237,116,23)" rx="2" ry="2" />
<text  x="736.88" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (69 samples, 0.34%)</title><rect x="139.7" y="597" width="4.0" height="15.0" fill="rgb(235,90,33)" rx="2" ry="2" />
<text  x="142.67" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (2 samples, 0.01%)</title><rect x="931.7" y="597" width="0.1" height="15.0" fill="rgb(222,5,33)" rx="2" ry="2" />
<text  x="934.65" y="607.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (8 samples, 0.04%)</title><rect x="919.5" y="597" width="0.5" height="15.0" fill="rgb(238,16,35)" rx="2" ry="2" />
<text  x="922.54" y="607.5" ></text>
</g>
<g >
<title>Tone::Tone (9 samples, 0.04%)</title><rect x="936.5" y="629" width="0.6" height="15.0" fill="rgb(214,130,26)" rx="2" ry="2" />
<text  x="939.53" y="639.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;Input::UiSource::Update()::{lambda(int)#1}&gt; &gt; (2 samples, 0.01%)</title><rect x="183.7" y="709" width="0.1" height="15.0" fill="rgb(243,95,12)" rx="2" ry="2" />
<text  x="186.66" y="719.5" ></text>
</g>
<g >
<title>Player::MainLoop (7 samples, 0.03%)</title><rect x="130.6" y="901" width="0.4" height="15.0" fill="rgb(206,64,30)" rx="2" ry="2" />
<text  x="133.56" y="911.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (290 samples, 1.45%)</title><rect x="672.2" y="517" width="17.1" height="15.0" fill="rgb(236,127,16)" rx="2" ry="2" />
<text  x="675.25" y="527.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;2ul, bool, false&gt;::_Head_base&lt;bool&amp;&gt; (9 samples, 0.04%)</title><rect x="744.6" y="469" width="0.6" height="15.0" fill="rgb(213,163,34)" rx="2" ry="2" />
<text  x="747.64" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (37 samples, 0.18%)</title><rect x="164.9" y="517" width="2.2" height="15.0" fill="rgb(214,212,5)" rx="2" ry="2" />
<text  x="167.90" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (3 samples, 0.01%)</title><rect x="976.1" y="661" width="0.1" height="15.0" fill="rgb(208,32,20)" rx="2" ry="2" />
<text  x="979.05" y="671.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (2 samples, 0.01%)</title><rect x="32.8" y="901" width="0.1" height="15.0" fill="rgb(209,142,16)" rx="2" ry="2" />
<text  x="35.82" y="911.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.01%)</title><rect x="20.6" y="757" width="0.1" height="15.0" fill="rgb(223,29,34)" rx="2" ry="2" />
<text  x="23.59" y="767.5" ></text>
</g>
<g >
<title>__do_page_fault (107 samples, 0.53%)</title><rect x="789.9" y="453" width="6.3" height="15.0" fill="rgb(237,26,30)" rx="2" ry="2" />
<text  x="792.92" y="463.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (56 samples, 0.28%)</title><rect x="864.6" y="357" width="3.2" height="15.0" fill="rgb(238,176,23)" rx="2" ry="2" />
<text  x="867.55" y="367.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (182 samples, 0.91%)</title><rect x="138.0" y="821" width="10.7" height="15.0" fill="rgb(220,215,53)" rx="2" ry="2" />
<text  x="140.97" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt;::new_allocator (2 samples, 0.01%)</title><rect x="48.0" y="901" width="0.1" height="15.0" fill="rgb(223,122,0)" rx="2" ry="2" />
<text  x="50.99" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;@plt (3 samples, 0.01%)</title><rect x="605.1" y="581" width="0.2" height="15.0" fill="rgb(212,218,50)" rx="2" ry="2" />
<text  x="608.15" y="591.5" ></text>
</g>
<g >
<title>MakeFlashColor (14 samples, 0.07%)</title><rect x="1161.2" y="693" width="0.8" height="15.0" fill="rgb(254,222,50)" rx="2" ry="2" />
<text  x="1164.18" y="703.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (119 samples, 0.59%)</title><rect x="131.0" y="677" width="7.0" height="15.0" fill="rgb(213,206,11)" rx="2" ry="2" />
<text  x="133.97" y="687.5" ></text>
</g>
<g >
<title>pixman_image_unref (603 samples, 3.01%)</title><rect x="869.9" y="405" width="35.5" height="15.0" fill="rgb(209,152,48)" rx="2" ry="2" />
<text  x="872.90" y="415.5" >pix..</text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (20 samples, 0.10%)</title><rect x="836.4" y="485" width="1.2" height="15.0" fill="rgb(247,0,34)" rx="2" ry="2" />
<text  x="839.38" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2 samples, 0.01%)</title><rect x="60.9" y="901" width="0.1" height="15.0" fill="rgb(227,216,2)" rx="2" ry="2" />
<text  x="63.93" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt;::operator()&lt;int const*&gt; (2 samples, 0.01%)</title><rect x="452.7" y="613" width="0.1" height="15.0" fill="rgb(219,61,25)" rx="2" ry="2" />
<text  x="455.65" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (3 samples, 0.01%)</title><rect x="922.8" y="597" width="0.1" height="15.0" fill="rgb(227,208,23)" rx="2" ry="2" />
<text  x="925.77" y="607.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (106 samples, 0.53%)</title><rect x="630.6" y="581" width="6.2" height="15.0" fill="rgb(235,48,14)" rx="2" ry="2" />
<text  x="633.61" y="591.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (4 samples, 0.02%)</title><rect x="743.9" y="453" width="0.2" height="15.0" fill="rgb(209,26,52)" rx="2" ry="2" />
<text  x="746.88" y="463.5" ></text>
</g>
<g >
<title>operator== (7 samples, 0.03%)</title><rect x="1164.7" y="677" width="0.4" height="15.0" fill="rgb(243,85,24)" rx="2" ry="2" />
<text  x="1167.71" y="687.5" ></text>
</g>
<g >
<title>Sprite::SetY (3 samples, 0.01%)</title><rect x="1165.9" y="709" width="0.2" height="15.0" fill="rgb(237,222,28)" rx="2" ry="2" />
<text  x="1168.89" y="719.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (45 samples, 0.22%)</title><rect x="649.2" y="533" width="2.6" height="15.0" fill="rgb(236,172,45)" rx="2" ry="2" />
<text  x="652.19" y="543.5" ></text>
</g>
<g >
<title>Bitmap::GetOperator (10 samples, 0.05%)</title><rect x="754.6" y="517" width="0.6" height="15.0" fill="rgb(206,50,32)" rx="2" ry="2" />
<text  x="757.64" y="527.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt;::_M_head (2 samples, 0.01%)</title><rect x="955.0" y="581" width="0.1" height="15.0" fill="rgb(224,216,1)" rx="2" ry="2" />
<text  x="958.00" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (17 samples, 0.08%)</title><rect x="190.0" y="709" width="1.0" height="15.0" fill="rgb(220,152,34)" rx="2" ry="2" />
<text  x="192.96" y="719.5" ></text>
</g>
<g >
<title>__interceptor_recvmsg (2 samples, 0.01%)</title><rect x="1180.9" y="629" width="0.1" height="15.0" fill="rgb(231,105,6)" rx="2" ry="2" />
<text  x="1183.88" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (3 samples, 0.01%)</title><rect x="959.2" y="645" width="0.2" height="15.0" fill="rgb(206,49,22)" rx="2" ry="2" />
<text  x="962.23" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (68 samples, 0.34%)</title><rect x="661.5" y="613" width="4.0" height="15.0" fill="rgb(212,18,36)" rx="2" ry="2" />
<text  x="664.48" y="623.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (71 samples, 0.35%)</title><rect x="126.3" y="693" width="4.2" height="15.0" fill="rgb(214,168,6)" rx="2" ry="2" />
<text  x="129.32" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (6 samples, 0.03%)</title><rect x="587.9" y="629" width="0.4" height="15.0" fill="rgb(211,75,14)" rx="2" ry="2" />
<text  x="590.91" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::size (2 samples, 0.01%)</title><rect x="560.4" y="629" width="0.1" height="15.0" fill="rgb(208,92,35)" rx="2" ry="2" />
<text  x="563.39" y="639.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (2 samples, 0.01%)</title><rect x="145.0" y="437" width="0.1" height="15.0" fill="rgb(211,26,23)" rx="2" ry="2" />
<text  x="147.97" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator bool (10 samples, 0.05%)</title><rect x="910.4" y="549" width="0.6" height="15.0" fill="rgb(234,7,34)" rx="2" ry="2" />
<text  x="913.42" y="559.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (882 samples, 4.40%)</title><rect x="854.8" y="517" width="51.9" height="15.0" fill="rgb(238,133,36)" rx="2" ry="2" />
<text  x="857.79" y="527.5" >std::..</text>
</g>
<g >
<title>handle_mm_fault (16 samples, 0.08%)</title><rect x="127.8" y="325" width="0.9" height="15.0" fill="rgb(233,134,40)" rx="2" ry="2" />
<text  x="130.79" y="335.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (43 samples, 0.21%)</title><rect x="37.3" y="901" width="2.6" height="15.0" fill="rgb(254,166,14)" rx="2" ry="2" />
<text  x="40.35" y="911.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (2 samples, 0.01%)</title><rect x="80.5" y="901" width="0.1" height="15.0" fill="rgb(243,206,17)" rx="2" ry="2" />
<text  x="83.45" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (8 samples, 0.04%)</title><rect x="915.1" y="629" width="0.4" height="15.0" fill="rgb(235,123,41)" rx="2" ry="2" />
<text  x="918.07" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt;::__normal_iterator (41 samples, 0.20%)</title><rect x="1106.9" y="677" width="2.4" height="15.0" fill="rgb(239,29,29)" rx="2" ry="2" />
<text  x="1109.90" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::size (9 samples, 0.04%)</title><rect x="93.6" y="901" width="0.6" height="15.0" fill="rgb(221,174,9)" rx="2" ry="2" />
<text  x="96.63" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (3 samples, 0.01%)</title><rect x="148.8" y="549" width="0.2" height="15.0" fill="rgb(229,67,16)" rx="2" ry="2" />
<text  x="151.85" y="559.5" ></text>
</g>
<g >
<title>max&lt;int&gt; (3 samples, 0.01%)</title><rect x="832.6" y="501" width="0.1" height="15.0" fill="rgb(253,2,2)" rx="2" ry="2" />
<text  x="835.56" y="511.5" ></text>
</g>
<g >
<title>Player::Run (34 samples, 0.17%)</title><rect x="172.1" y="869" width="2.0" height="15.0" fill="rgb(211,117,22)" rx="2" ry="2" />
<text  x="175.14" y="879.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (20 samples, 0.10%)</title><rect x="87.9" y="901" width="1.1" height="15.0" fill="rgb(218,38,50)" rx="2" ry="2" />
<text  x="90.86" y="911.5" ></text>
</g>
<g >
<title>Utils::DecodeUTF32 (24 samples, 0.12%)</title><rect x="957.3" y="645" width="1.4" height="15.0" fill="rgb(231,175,33)" rx="2" ry="2" />
<text  x="960.29" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator++ (11 samples, 0.05%)</title><rect x="45.9" y="901" width="0.7" height="15.0" fill="rgb(237,75,2)" rx="2" ry="2" />
<text  x="48.93" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt;::base (5 samples, 0.02%)</title><rect x="1104.4" y="677" width="0.3" height="15.0" fill="rgb(216,214,17)" rx="2" ry="2" />
<text  x="1107.43" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (74 samples, 0.37%)</title><rect x="848.1" y="517" width="4.4" height="15.0" fill="rgb(227,17,17)" rx="2" ry="2" />
<text  x="851.14" y="527.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="674.8" y="469" width="0.2" height="15.0" fill="rgb(249,219,0)" rx="2" ry="2" />
<text  x="677.83" y="479.5" ></text>
</g>
<g >
<title>min&lt;int&gt; (3 samples, 0.01%)</title><rect x="936.9" y="613" width="0.2" height="15.0" fill="rgb(224,45,54)" rx="2" ry="2" />
<text  x="939.89" y="623.5" ></text>
</g>
<g >
<title>FileRequestAsync::BindStart (71 samples, 0.35%)</title><rect x="126.3" y="773" width="4.2" height="15.0" fill="rgb(240,28,33)" rx="2" ry="2" />
<text  x="129.32" y="783.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::_M_deallocate (2 samples, 0.01%)</title><rect x="59.5" y="901" width="0.1" height="15.0" fill="rgb(244,199,29)" rx="2" ry="2" />
<text  x="62.52" y="911.5" ></text>
</g>
<g >
<title>Bitmap::Create (445 samples, 2.22%)</title><rect x="799.3" y="533" width="26.2" height="15.0" fill="rgb(237,82,42)" rx="2" ry="2" />
<text  x="802.33" y="543.5" >B..</text>
</g>
<g >
<title>__GI___pthread_getspecific (2 samples, 0.01%)</title><rect x="135.6" y="453" width="0.1" height="15.0" fill="rgb(212,32,8)" rx="2" ry="2" />
<text  x="138.62" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (4 samples, 0.02%)</title><rect x="87.3" y="901" width="0.3" height="15.0" fill="rgb(220,85,27)" rx="2" ry="2" />
<text  x="90.33" y="911.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (34 samples, 0.17%)</title><rect x="172.1" y="613" width="2.0" height="15.0" fill="rgb(241,153,31)" rx="2" ry="2" />
<text  x="175.14" y="623.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (32 samples, 0.16%)</title><rect x="131.0" y="533" width="1.9" height="15.0" fill="rgb(213,140,3)" rx="2" ry="2" />
<text  x="133.97" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (29 samples, 0.14%)</title><rect x="544.2" y="645" width="1.7" height="15.0" fill="rgb(248,174,18)" rx="2" ry="2" />
<text  x="547.16" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::get (3 samples, 0.01%)</title><rect x="937.6" y="629" width="0.2" height="15.0" fill="rgb(239,48,12)" rx="2" ry="2" />
<text  x="940.59" y="639.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (323 samples, 1.61%)</title><rect x="803.8" y="437" width="19.0" height="15.0" fill="rgb(228,107,14)" rx="2" ry="2" />
<text  x="806.80" y="447.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (235 samples, 1.17%)</title><rect x="149.4" y="789" width="13.9" height="15.0" fill="rgb(218,42,16)" rx="2" ry="2" />
<text  x="152.44" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (10 samples, 0.05%)</title><rect x="673.8" y="485" width="0.6" height="15.0" fill="rgb(212,200,54)" rx="2" ry="2" />
<text  x="676.83" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::operator (12 samples, 0.06%)</title><rect x="700.5" y="533" width="0.7" height="15.0" fill="rgb(237,140,28)" rx="2" ry="2" />
<text  x="703.53" y="543.5" ></text>
</g>
<g >
<title>BlitNtoNCopyAlpha (5 samples, 0.02%)</title><rect x="183.0" y="693" width="0.3" height="15.0" fill="rgb(213,90,54)" rx="2" ry="2" />
<text  x="186.02" y="703.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Transition*, std::default_delete&lt;Transition&gt; &gt; (7 samples, 0.03%)</title><rect x="64.8" y="901" width="0.4" height="15.0" fill="rgb(216,7,2)" rx="2" ry="2" />
<text  x="67.81" y="911.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (6 samples, 0.03%)</title><rect x="86.6" y="901" width="0.4" height="15.0" fill="rgb(223,110,10)" rx="2" ry="2" />
<text  x="89.63" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::end (5 samples, 0.02%)</title><rect x="189.5" y="677" width="0.3" height="15.0" fill="rgb(231,167,42)" rx="2" ry="2" />
<text  x="192.48" y="687.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.06%)</title><rect x="126.7" y="373" width="0.8" height="15.0" fill="rgb(225,208,32)" rx="2" ry="2" />
<text  x="129.74" y="383.5" ></text>
</g>
<g >
<title>Player::IsMajorUpdatedVersion (3 samples, 0.01%)</title><rect x="832.9" y="533" width="0.1" height="15.0" fill="rgb(235,73,8)" rx="2" ry="2" />
<text  x="835.85" y="543.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (8 samples, 0.04%)</title><rect x="903.9" y="165" width="0.5" height="15.0" fill="rgb(243,83,41)" rx="2" ry="2" />
<text  x="906.89" y="175.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (5 samples, 0.02%)</title><rect x="659.1" y="565" width="0.3" height="15.0" fill="rgb(215,84,22)" rx="2" ry="2" />
<text  x="662.13" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (7 samples, 0.03%)</title><rect x="837.1" y="453" width="0.5" height="15.0" fill="rgb(209,122,46)" rx="2" ry="2" />
<text  x="840.15" y="463.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (235 samples, 1.17%)</title><rect x="149.4" y="885" width="13.9" height="15.0" fill="rgb(232,209,0)" rx="2" ry="2" />
<text  x="152.44" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (69 samples, 0.34%)</title><rect x="139.7" y="549" width="4.0" height="15.0" fill="rgb(239,68,26)" rx="2" ry="2" />
<text  x="142.67" y="559.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (3 samples, 0.01%)</title><rect x="959.2" y="613" width="0.2" height="15.0" fill="rgb(237,185,14)" rx="2" ry="2" />
<text  x="962.23" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (198 samples, 0.99%)</title><rect x="882.2" y="341" width="11.6" height="15.0" fill="rgb(212,93,36)" rx="2" ry="2" />
<text  x="885.19" y="351.5" ></text>
</g>
<g >
<title>free_unref_page_commit (2 samples, 0.01%)</title><rect x="163.5" y="277" width="0.2" height="15.0" fill="rgb(244,141,46)" rx="2" ry="2" />
<text  x="166.55" y="287.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (119 samples, 0.59%)</title><rect x="131.0" y="645" width="7.0" height="15.0" fill="rgb(218,168,39)" rx="2" ry="2" />
<text  x="133.97" y="655.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (15 samples, 0.07%)</title><rect x="138.8" y="565" width="0.9" height="15.0" fill="rgb(243,149,23)" rx="2" ry="2" />
<text  x="141.79" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_set_length (3 samples, 0.01%)</title><rect x="958.3" y="613" width="0.2" height="15.0" fill="rgb(233,221,26)" rx="2" ry="2" />
<text  x="961.29" y="623.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (35 samples, 0.17%)</title><rect x="143.7" y="597" width="2.1" height="15.0" fill="rgb(212,113,22)" rx="2" ry="2" />
<text  x="146.73" y="607.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="15.4" y="869" width="0.1" height="15.0" fill="rgb(209,151,41)" rx="2" ry="2" />
<text  x="18.35" y="879.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (10 samples, 0.05%)</title><rect x="138.2" y="565" width="0.6" height="15.0" fill="rgb(211,62,14)" rx="2" ry="2" />
<text  x="141.20" y="575.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (4 samples, 0.02%)</title><rect x="575.2" y="645" width="0.2" height="15.0" fill="rgb(246,85,47)" rx="2" ry="2" />
<text  x="578.15" y="655.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (4 samples, 0.02%)</title><rect x="892.7" y="197" width="0.3" height="15.0" fill="rgb(239,4,36)" rx="2" ry="2" />
<text  x="895.72" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (159 samples, 0.79%)</title><rect x="1077.0" y="661" width="9.3" height="15.0" fill="rgb(207,210,18)" rx="2" ry="2" />
<text  x="1079.97" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (10 samples, 0.05%)</title><rect x="234.4" y="693" width="0.6" height="15.0" fill="rgb(228,211,13)" rx="2" ry="2" />
<text  x="237.41" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (29 samples, 0.14%)</title><rect x="131.0" y="501" width="1.7" height="15.0" fill="rgb(218,221,20)" rx="2" ry="2" />
<text  x="133.97" y="511.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (5 samples, 0.02%)</title><rect x="130.7" y="533" width="0.3" height="15.0" fill="rgb(231,39,3)" rx="2" ry="2" />
<text  x="133.68" y="543.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (383 samples, 1.91%)</title><rect x="872.7" y="357" width="22.5" height="15.0" fill="rgb(251,158,23)" rx="2" ry="2" />
<text  x="875.73" y="367.5" >[..</text>
</g>
<g >
<title>tlb_flush_mmu_free (3 samples, 0.01%)</title><rect x="145.3" y="293" width="0.1" height="15.0" fill="rgb(207,40,6)" rx="2" ry="2" />
<text  x="148.26" y="303.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (2 samples, 0.01%)</title><rect x="627.6" y="565" width="0.1" height="15.0" fill="rgb(230,146,51)" rx="2" ry="2" />
<text  x="630.55" y="575.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (45 samples, 0.22%)</title><rect x="796.3" y="485" width="2.6" height="15.0" fill="rgb(214,165,40)" rx="2" ry="2" />
<text  x="799.27" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::end (2 samples, 0.01%)</title><rect x="703.7" y="517" width="0.1" height="15.0" fill="rgb(225,59,28)" rx="2" ry="2" />
<text  x="706.65" y="527.5" ></text>
</g>
<g >
<title>std::_Bit_reference::_Bit_reference (4 samples, 0.02%)</title><rect x="188.0" y="661" width="0.2" height="15.0" fill="rgb(244,124,26)" rx="2" ry="2" />
<text  x="190.96" y="671.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.01%)</title><rect x="148.8" y="565" width="0.2" height="15.0" fill="rgb(238,215,40)" rx="2" ry="2" />
<text  x="151.85" y="575.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (3 samples, 0.01%)</title><rect x="145.3" y="277" width="0.1" height="15.0" fill="rgb(233,41,46)" rx="2" ry="2" />
<text  x="148.26" y="287.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (34 samples, 0.17%)</title><rect x="172.1" y="645" width="2.0" height="15.0" fill="rgb(220,196,7)" rx="2" ry="2" />
<text  x="175.14" y="655.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.03%)</title><rect x="131.0" y="485" width="0.4" height="15.0" fill="rgb(217,225,35)" rx="2" ry="2" />
<text  x="133.97" y="495.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (5 samples, 0.02%)</title><rect x="175.0" y="517" width="0.3" height="15.0" fill="rgb(240,122,54)" rx="2" ry="2" />
<text  x="177.96" y="527.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (7 samples, 0.03%)</title><rect x="904.0" y="149" width="0.4" height="15.0" fill="rgb(216,102,34)" rx="2" ry="2" />
<text  x="906.95" y="159.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_value (15 samples, 0.07%)</title><rect x="707.3" y="469" width="0.9" height="15.0" fill="rgb(228,218,45)" rx="2" ry="2" />
<text  x="710.30" y="479.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (7 samples, 0.03%)</title><rect x="904.0" y="117" width="0.4" height="15.0" fill="rgb(227,78,31)" rx="2" ry="2" />
<text  x="906.95" y="127.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&amp;&gt; (2 samples, 0.01%)</title><rect x="745.3" y="501" width="0.2" height="15.0" fill="rgb(249,151,36)" rx="2" ry="2" />
<text  x="748.35" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (75 samples, 0.37%)</title><rect x="647.5" y="581" width="4.4" height="15.0" fill="rgb(212,155,4)" rx="2" ry="2" />
<text  x="650.49" y="591.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (71 samples, 0.35%)</title><rect x="126.3" y="533" width="4.2" height="15.0" fill="rgb(234,137,23)" rx="2" ry="2" />
<text  x="129.32" y="543.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="108.7" y="885" width="0.1" height="15.0" fill="rgb(238,26,36)" rx="2" ry="2" />
<text  x="111.68" y="895.5" ></text>
</g>
<g >
<title>free_unref_page_list (3 samples, 0.01%)</title><rect x="890.4" y="85" width="0.2" height="15.0" fill="rgb(253,61,7)" rx="2" ry="2" />
<text  x="893.43" y="95.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (71 samples, 0.35%)</title><rect x="126.3" y="645" width="4.2" height="15.0" fill="rgb(236,20,11)" rx="2" ry="2" />
<text  x="129.32" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (13 samples, 0.06%)</title><rect x="858.4" y="453" width="0.8" height="15.0" fill="rgb(220,128,30)" rx="2" ry="2" />
<text  x="861.44" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (2 samples, 0.01%)</title><rect x="450.4" y="629" width="0.1" height="15.0" fill="rgb(232,205,0)" rx="2" ry="2" />
<text  x="453.36" y="639.5" ></text>
</g>
<g >
<title>Cache::System (6 samples, 0.03%)</title><rect x="1179.8" y="709" width="0.4" height="15.0" fill="rgb(211,160,48)" rx="2" ry="2" />
<text  x="1182.83" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (5 samples, 0.02%)</title><rect x="423.4" y="581" width="0.3" height="15.0" fill="rgb(251,127,28)" rx="2" ry="2" />
<text  x="426.43" y="591.5" ></text>
</g>
<g >
<title>memcmp (5 samples, 0.02%)</title><rect x="636.3" y="469" width="0.3" height="15.0" fill="rgb(233,179,0)" rx="2" ry="2" />
<text  x="639.31" y="479.5" ></text>
</g>
<g >
<title>Bitmap::height (5 samples, 0.02%)</title><rect x="783.3" y="517" width="0.3" height="15.0" fill="rgb(212,94,12)" rx="2" ry="2" />
<text  x="786.28" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_ptr (2 samples, 0.01%)</title><rect x="813.9" y="309" width="0.1" height="15.0" fill="rgb(230,89,53)" rx="2" ry="2" />
<text  x="816.86" y="319.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt;::_M_head (2 samples, 0.01%)</title><rect x="845.7" y="469" width="0.1" height="15.0" fill="rgb(236,134,11)" rx="2" ry="2" />
<text  x="848.67" y="479.5" ></text>
</g>
<g >
<title>operator new (69 samples, 0.34%)</title><rect x="139.7" y="533" width="4.0" height="15.0" fill="rgb(225,161,15)" rx="2" ry="2" />
<text  x="142.67" y="543.5" ></text>
</g>
<g >
<title>Player::MainLoop (34 samples, 0.17%)</title><rect x="172.1" y="853" width="2.0" height="15.0" fill="rgb(207,202,19)" rx="2" ry="2" />
<text  x="175.14" y="863.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (4 samples, 0.02%)</title><rect x="559.4" y="597" width="0.2" height="15.0" fill="rgb(222,134,35)" rx="2" ry="2" />
<text  x="562.39" y="607.5" ></text>
</g>
<g >
<title>FileRequestAsync::BindStart (297 samples, 1.48%)</title><rect x="108.9" y="757" width="17.4" height="15.0" fill="rgb(250,175,30)" rx="2" ry="2" />
<text  x="111.86" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (4 samples, 0.02%)</title><rect x="564.3" y="629" width="0.3" height="15.0" fill="rgb(223,93,46)" rx="2" ry="2" />
<text  x="567.33" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (27 samples, 0.13%)</title><rect x="844.9" y="533" width="1.6" height="15.0" fill="rgb(223,178,13)" rx="2" ry="2" />
<text  x="847.91" y="543.5" ></text>
</g>
<g >
<title>Game_Picture::Show (6,145 samples, 30.63%)</title><rect x="588.3" y="661" width="361.3" height="15.0" fill="rgb(246,160,8)" rx="2" ry="2" />
<text  x="591.27" y="671.5" >Game_Picture::Show</text>
</g>
<g >
<title>pixman_image_get_width (36 samples, 0.18%)</title><rect x="1156.4" y="677" width="2.1" height="15.0" fill="rgb(215,33,46)" rx="2" ry="2" />
<text  x="1159.42" y="687.5" ></text>
</g>
<g >
<title>Opacity::IsTransparent (4 samples, 0.02%)</title><rect x="755.3" y="517" width="0.3" height="15.0" fill="rgb(253,80,0)" rx="2" ry="2" />
<text  x="758.34" y="527.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (4 samples, 0.02%)</title><rect x="1138.5" y="693" width="0.3" height="15.0" fill="rgb(237,77,51)" rx="2" ry="2" />
<text  x="1141.54" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (280 samples, 1.40%)</title><rect x="806.2" y="405" width="16.5" height="15.0" fill="rgb(231,122,34)" rx="2" ry="2" />
<text  x="809.21" y="415.5" ></text>
</g>
<g >
<title>Cache::Picture (1,336 samples, 6.66%)</title><rect x="667.9" y="549" width="78.6" height="15.0" fill="rgb(205,53,47)" rx="2" ry="2" />
<text  x="670.89" y="559.5" >Cache::Pi..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (27 samples, 0.13%)</title><rect x="600.3" y="501" width="1.6" height="15.0" fill="rgb(251,108,0)" rx="2" ry="2" />
<text  x="603.26" y="511.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}::operator() (10 samples, 0.05%)</title><rect x="148.8" y="645" width="0.6" height="15.0" fill="rgb(246,193,49)" rx="2" ry="2" />
<text  x="151.85" y="655.5" ></text>
</g>
<g >
<title>__interceptor_free (2 samples, 0.01%)</title><rect x="171.9" y="901" width="0.1" height="15.0" fill="rgb(213,134,45)" rx="2" ry="2" />
<text  x="174.90" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (3 samples, 0.01%)</title><rect x="566.3" y="629" width="0.2" height="15.0" fill="rgb(219,146,42)" rx="2" ry="2" />
<text  x="569.33" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (47 samples, 0.23%)</title><rect x="1029.1" y="629" width="2.8" height="15.0" fill="rgb(253,16,30)" rx="2" ry="2" />
<text  x="1032.10" y="639.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (81 samples, 0.40%)</title><rect x="121.6" y="437" width="4.7" height="15.0" fill="rgb(229,220,2)" rx="2" ry="2" />
<text  x="124.56" y="447.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Transition*, std::default_delete&lt;Transition&gt; &gt; (5 samples, 0.02%)</title><rect x="913.8" y="533" width="0.3" height="15.0" fill="rgb(251,18,6)" rx="2" ry="2" />
<text  x="916.77" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_valptr (2 samples, 0.01%)</title><rect x="818.4" y="261" width="0.1" height="15.0" fill="rgb(254,215,19)" rx="2" ry="2" />
<text  x="821.39" y="271.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (2 samples, 0.01%)</title><rect x="105.6" y="901" width="0.1" height="15.0" fill="rgb(208,55,43)" rx="2" ry="2" />
<text  x="108.56" y="911.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingForegroundExecution (13 samples, 0.06%)</title><rect x="1140.4" y="741" width="0.8" height="15.0" fill="rgb(219,229,32)" rx="2" ry="2" />
<text  x="1143.42" y="751.5" ></text>
</g>
<g >
<title>_XEventsQueued (3 samples, 0.01%)</title><rect x="1182.0" y="677" width="0.2" height="15.0" fill="rgb(238,213,48)" rx="2" ry="2" />
<text  x="1185.00" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (5 samples, 0.02%)</title><rect x="1035.3" y="677" width="0.3" height="15.0" fill="rgb(254,127,4)" rx="2" ry="2" />
<text  x="1038.33" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (5 samples, 0.02%)</title><rect x="975.1" y="629" width="0.2" height="15.0" fill="rgb(228,167,15)" rx="2" ry="2" />
<text  x="978.05" y="639.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::size (2 samples, 0.01%)</title><rect x="458.0" y="645" width="0.1" height="15.0" fill="rgb(242,217,51)" rx="2" ry="2" />
<text  x="461.01" y="655.5" ></text>
</g>
<g >
<title>common_file_perm (2 samples, 0.01%)</title><rect x="21.1" y="789" width="0.1" height="15.0" fill="rgb(215,155,9)" rx="2" ry="2" />
<text  x="24.11" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_valptr (11 samples, 0.05%)</title><rect x="707.5" y="453" width="0.7" height="15.0" fill="rgb(240,77,39)" rx="2" ry="2" />
<text  x="710.53" y="463.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (35 samples, 0.17%)</title><rect x="143.7" y="533" width="2.1" height="15.0" fill="rgb(233,161,19)" rx="2" ry="2" />
<text  x="146.73" y="543.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (3 samples, 0.01%)</title><rect x="911.1" y="501" width="0.2" height="15.0" fill="rgb(240,25,26)" rx="2" ry="2" />
<text  x="914.13" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (24 samples, 0.12%)</title><rect x="721.9" y="405" width="1.4" height="15.0" fill="rgb(244,141,39)" rx="2" ry="2" />
<text  x="724.88" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::operator++ (5 samples, 0.02%)</title><rect x="1144.2" y="693" width="0.3" height="15.0" fill="rgb(227,164,23)" rx="2" ry="2" />
<text  x="1147.19" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base (3 samples, 0.01%)</title><rect x="614.6" y="581" width="0.1" height="15.0" fill="rgb(249,10,42)" rx="2" ry="2" />
<text  x="617.56" y="591.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (119 samples, 0.59%)</title><rect x="131.0" y="725" width="7.0" height="15.0" fill="rgb(218,165,23)" rx="2" ry="2" />
<text  x="133.97" y="735.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (4 samples, 0.02%)</title><rect x="70.5" y="901" width="0.2" height="15.0" fill="rgb(248,12,36)" rx="2" ry="2" />
<text  x="73.46" y="911.5" ></text>
</g>
<g >
<title>[unknown] (1,253 samples, 6.24%)</title><rect x="108.3" y="917" width="73.7" height="15.0" fill="rgb(210,210,14)" rx="2" ry="2" />
<text  x="111.33" y="927.5" >[unknown]</text>
</g>
<g >
<title>unmap_vmas (2 samples, 0.01%)</title><rect x="904.4" y="181" width="0.1" height="15.0" fill="rgb(248,55,50)" rx="2" ry="2" />
<text  x="907.37" y="191.5" ></text>
</g>
<g >
<title>std::__find_if&lt;int const*, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (9 samples, 0.04%)</title><rect x="563.4" y="613" width="0.5" height="15.0" fill="rgb(221,169,52)" rx="2" ry="2" />
<text  x="566.39" y="623.5" ></text>
</g>
<g >
<title>Game_Screen::GetFlashColor (26 samples, 0.13%)</title><rect x="829.6" y="533" width="1.5" height="15.0" fill="rgb(241,85,47)" rx="2" ry="2" />
<text  x="832.62" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (7 samples, 0.03%)</title><rect x="354.4" y="693" width="0.5" height="15.0" fill="rgb(225,148,15)" rx="2" ry="2" />
<text  x="357.44" y="703.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_memcmp@plt (4 samples, 0.02%)</title><rect x="158.6" y="485" width="0.2" height="15.0" fill="rgb(238,126,18)" rx="2" ry="2" />
<text  x="161.55" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::operator* (2 samples, 0.01%)</title><rect x="22.3" y="901" width="0.1" height="15.0" fill="rgb(243,220,18)" rx="2" ry="2" />
<text  x="25.29" y="911.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (11 samples, 0.05%)</title><rect x="701.5" y="517" width="0.6" height="15.0" fill="rgb(220,133,47)" rx="2" ry="2" />
<text  x="704.47" y="527.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (34 samples, 0.17%)</title><rect x="637.0" y="565" width="2.0" height="15.0" fill="rgb(224,103,27)" rx="2" ry="2" />
<text  x="640.02" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (26 samples, 0.13%)</title><rect x="406.1" y="629" width="1.5" height="15.0" fill="rgb(244,227,25)" rx="2" ry="2" />
<text  x="409.08" y="639.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (7 samples, 0.03%)</title><rect x="931.4" y="629" width="0.4" height="15.0" fill="rgb(232,48,53)" rx="2" ry="2" />
<text  x="934.36" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (70 samples, 0.35%)</title><rect x="407.6" y="645" width="4.1" height="15.0" fill="rgb(218,13,0)" rx="2" ry="2" />
<text  x="410.61" y="655.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (49 samples, 0.24%)</title><rect x="175.0" y="693" width="2.8" height="15.0" fill="rgb(225,162,2)" rx="2" ry="2" />
<text  x="177.96" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (3 samples, 0.01%)</title><rect x="559.8" y="597" width="0.2" height="15.0" fill="rgb(232,46,2)" rx="2" ry="2" />
<text  x="562.80" y="607.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (4 samples, 0.02%)</title><rect x="128.2" y="293" width="0.2" height="15.0" fill="rgb(231,212,49)" rx="2" ry="2" />
<text  x="131.21" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (20 samples, 0.10%)</title><rect x="1035.6" y="677" width="1.2" height="15.0" fill="rgb(222,189,11)" rx="2" ry="2" />
<text  x="1038.63" y="687.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.04%)</title><rect x="172.1" y="453" width="0.5" height="15.0" fill="rgb(240,99,51)" rx="2" ry="2" />
<text  x="175.14" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (5 samples, 0.02%)</title><rect x="601.9" y="517" width="0.3" height="15.0" fill="rgb(249,135,44)" rx="2" ry="2" />
<text  x="604.91" y="527.5" ></text>
</g>
<g >
<title>Game_Picture::Show (49 samples, 0.24%)</title><rect x="175.0" y="677" width="2.8" height="15.0" fill="rgb(247,229,37)" rx="2" ry="2" />
<text  x="177.96" y="687.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (62 samples, 0.31%)</title><rect x="117.3" y="421" width="3.7" height="15.0" fill="rgb(249,109,33)" rx="2" ry="2" />
<text  x="120.33" y="431.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (884 samples, 4.41%)</title><rect x="854.7" y="533" width="52.0" height="15.0" fill="rgb(224,166,50)" rx="2" ry="2" />
<text  x="857.67" y="543.5" >std::..</text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::operator= (40 samples, 0.20%)</title><rect x="919.1" y="613" width="2.4" height="15.0" fill="rgb(247,36,5)" rx="2" ry="2" />
<text  x="922.13" y="623.5" ></text>
</g>
<g >
<title>Sprite::SetZoomX (2 samples, 0.01%)</title><rect x="840.0" y="533" width="0.1" height="15.0" fill="rgb(226,187,50)" rx="2" ry="2" />
<text  x="843.03" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::get (6 samples, 0.03%)</title><rect x="1137.4" y="709" width="0.4" height="15.0" fill="rgb(230,114,43)" rx="2" ry="2" />
<text  x="1140.42" y="719.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (4 samples, 0.02%)</title><rect x="890.4" y="181" width="0.2" height="15.0" fill="rgb(208,229,23)" rx="2" ry="2" />
<text  x="893.37" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (3 samples, 0.01%)</title><rect x="174.0" y="325" width="0.1" height="15.0" fill="rgb(243,79,12)" rx="2" ry="2" />
<text  x="176.96" y="335.5" ></text>
</g>
<g >
<title>memcmp (2 samples, 0.01%)</title><rect x="735.9" y="421" width="0.2" height="15.0" fill="rgb(219,58,20)" rx="2" ry="2" />
<text  x="738.94" y="431.5" ></text>
</g>
<g >
<title>all (20,065 samples, 100%)</title><rect x="10.0" y="949" width="1180.0" height="15.0" fill="rgb(232,175,17)" rx="2" ry="2" />
<text  x="13.00" y="959.5" ></text>
</g>
<g >
<title>Scene::MainFunction (7 samples, 0.03%)</title><rect x="130.6" y="885" width="0.4" height="15.0" fill="rgb(214,83,5)" rx="2" ry="2" />
<text  x="133.56" y="895.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::_M_ptr (5 samples, 0.02%)</title><rect x="71.1" y="901" width="0.3" height="15.0" fill="rgb(223,164,14)" rx="2" ry="2" />
<text  x="74.10" y="911.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="601.4" y="469" width="0.3" height="15.0" fill="rgb(209,42,52)" rx="2" ry="2" />
<text  x="604.44" y="479.5" ></text>
</g>
<g >
<title>__fget (3 samples, 0.01%)</title><rect x="16.4" y="821" width="0.2" height="15.0" fill="rgb(210,75,49)" rx="2" ry="2" />
<text  x="19.41" y="831.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::end (4 samples, 0.02%)</title><rect x="628.4" y="613" width="0.3" height="15.0" fill="rgb(220,179,5)" rx="2" ry="2" />
<text  x="631.43" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="178.1" y="885" width="0.1" height="15.0" fill="rgb(206,20,35)" rx="2" ry="2" />
<text  x="181.08" y="895.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (9 samples, 0.04%)</title><rect x="163.3" y="613" width="0.5" height="15.0" fill="rgb(250,0,9)" rx="2" ry="2" />
<text  x="166.26" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base (7 samples, 0.03%)</title><rect x="45.1" y="901" width="0.4" height="15.0" fill="rgb(237,171,3)" rx="2" ry="2" />
<text  x="48.11" y="911.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (7 samples, 0.03%)</title><rect x="904.0" y="133" width="0.4" height="15.0" fill="rgb(234,98,2)" rx="2" ry="2" />
<text  x="906.95" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (3 samples, 0.01%)</title><rect x="410.1" y="613" width="0.2" height="15.0" fill="rgb(254,148,9)" rx="2" ry="2" />
<text  x="413.14" y="623.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (6 samples, 0.03%)</title><rect x="1160.7" y="677" width="0.4" height="15.0" fill="rgb(233,170,14)" rx="2" ry="2" />
<text  x="1163.71" y="687.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (19 samples, 0.09%)</title><rect x="163.8" y="533" width="1.1" height="15.0" fill="rgb(233,187,24)" rx="2" ry="2" />
<text  x="166.79" y="543.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (159 samples, 0.79%)</title><rect x="149.4" y="581" width="9.4" height="15.0" fill="rgb(241,64,13)" rx="2" ry="2" />
<text  x="152.44" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (3 samples, 0.01%)</title><rect x="466.8" y="661" width="0.2" height="15.0" fill="rgb(251,37,52)" rx="2" ry="2" />
<text  x="469.83" y="671.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::get (3 samples, 0.01%)</title><rect x="87.2" y="901" width="0.1" height="15.0" fill="rgb(241,141,48)" rx="2" ry="2" />
<text  x="90.16" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (8 samples, 0.04%)</title><rect x="565.8" y="645" width="0.5" height="15.0" fill="rgb(225,26,16)" rx="2" ry="2" />
<text  x="568.80" y="655.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustParams (7 samples, 0.03%)</title><rect x="956.9" y="645" width="0.4" height="15.0" fill="rgb(244,167,46)" rx="2" ry="2" />
<text  x="959.88" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::_M_ptr (4 samples, 0.02%)</title><rect x="970.8" y="629" width="0.3" height="15.0" fill="rgb(249,154,29)" rx="2" ry="2" />
<text  x="973.82" y="639.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (5 samples, 0.02%)</title><rect x="130.7" y="549" width="0.3" height="15.0" fill="rgb(250,11,6)" rx="2" ry="2" />
<text  x="133.68" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (30 samples, 0.15%)</title><rect x="657.4" y="565" width="1.7" height="15.0" fill="rgb(240,159,14)" rx="2" ry="2" />
<text  x="660.37" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::operator[] (3 samples, 0.01%)</title><rect x="560.2" y="629" width="0.2" height="15.0" fill="rgb(233,100,29)" rx="2" ry="2" />
<text  x="563.22" y="639.5" ></text>
</g>
<g >
<title>Game_Map::Update (7 samples, 0.03%)</title><rect x="130.6" y="821" width="0.4" height="15.0" fill="rgb(222,61,19)" rx="2" ry="2" />
<text  x="133.56" y="831.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (4 samples, 0.02%)</title><rect x="145.2" y="341" width="0.2" height="15.0" fill="rgb(208,132,54)" rx="2" ry="2" />
<text  x="148.20" y="351.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (4 samples, 0.02%)</title><rect x="163.5" y="325" width="0.2" height="15.0" fill="rgb(207,211,26)" rx="2" ry="2" />
<text  x="166.49" y="335.5" ></text>
</g>
<g >
<title>Utils::GetRandomNumber (2 samples, 0.01%)</title><rect x="549.9" y="661" width="0.1" height="15.0" fill="rgb(246,99,6)" rx="2" ry="2" />
<text  x="552.92" y="671.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (6 samples, 0.03%)</title><rect x="922.6" y="629" width="0.3" height="15.0" fill="rgb(213,208,28)" rx="2" ry="2" />
<text  x="925.60" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_S_key (3 samples, 0.01%)</title><rect x="174.0" y="293" width="0.1" height="15.0" fill="rgb(246,103,5)" rx="2" ry="2" />
<text  x="176.96" y="303.5" ></text>
</g>
<g >
<title>Transition::IsErased (13 samples, 0.06%)</title><rect x="912.4" y="597" width="0.7" height="15.0" fill="rgb(246,154,36)" rx="2" ry="2" />
<text  x="915.36" y="607.5" ></text>
</g>
<g >
<title>SDL_WaitEventTimeout_REAL (13 samples, 0.06%)</title><rect x="1180.3" y="789" width="0.8" height="15.0" fill="rgb(221,134,38)" rx="2" ry="2" />
<text  x="1183.30" y="799.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::operator (3 samples, 0.01%)</title><rect x="86.3" y="901" width="0.2" height="15.0" fill="rgb(236,205,46)" rx="2" ry="2" />
<text  x="89.33" y="911.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (6,752 samples, 33.65%)</title><rect x="576.9" y="677" width="397.1" height="15.0" fill="rgb(239,67,19)" rx="2" ry="2" />
<text  x="579.92" y="687.5" >Game_Interpreter::CommandShowPicture</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare@plt (2 samples, 0.01%)</title><rect x="737.6" y="517" width="0.2" height="15.0" fill="rgb(224,212,27)" rx="2" ry="2" />
<text  x="740.64" y="527.5" ></text>
</g>
<g >
<title>Graphics::LocalDraw (12 samples, 0.06%)</title><rect x="182.3" y="773" width="0.7" height="15.0" fill="rgb(234,114,49)" rx="2" ry="2" />
<text  x="185.31" y="783.5" ></text>
</g>
<g >
<title>std::replace&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (253 samples, 1.26%)</title><rect x="608.0" y="597" width="14.9" height="15.0" fill="rgb(251,125,51)" rx="2" ry="2" />
<text  x="611.03" y="607.5" ></text>
</g>
<g >
<title>Game_Map::GetDisplayX (3 samples, 0.01%)</title><rect x="31.4" y="901" width="0.2" height="15.0" fill="rgb(237,112,49)" rx="2" ry="2" />
<text  x="34.41" y="911.5" ></text>
</g>
<g >
<title>zap_page_range (3 samples, 0.01%)</title><rect x="904.5" y="229" width="0.2" height="15.0" fill="rgb(249,95,1)" rx="2" ry="2" />
<text  x="907.48" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (2 samples, 0.01%)</title><rect x="639.1" y="597" width="0.1" height="15.0" fill="rgb(230,63,21)" rx="2" ry="2" />
<text  x="642.08" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_right (2 samples, 0.01%)</title><rect x="55.6" y="901" width="0.1" height="15.0" fill="rgb(241,84,2)" rx="2" ry="2" />
<text  x="58.58" y="911.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::end (3 samples, 0.01%)</title><rect x="466.7" y="661" width="0.1" height="15.0" fill="rgb(212,194,29)" rx="2" ry="2" />
<text  x="469.65" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (4 samples, 0.02%)</title><rect x="975.5" y="629" width="0.2" height="15.0" fill="rgb(251,95,9)" rx="2" ry="2" />
<text  x="978.47" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_dispose (3 samples, 0.01%)</title><rect x="958.0" y="597" width="0.2" height="15.0" fill="rgb(228,22,46)" rx="2" ry="2" />
<text  x="961.00" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, unsigned long, true&gt;::_S_equals (85 samples, 0.42%)</title><rect x="631.7" y="533" width="5.0" height="15.0" fill="rgb(251,30,45)" rx="2" ry="2" />
<text  x="634.73" y="543.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="959.9" y="549" width="0.1" height="15.0" fill="rgb(251,147,19)" rx="2" ry="2" />
<text  x="962.88" y="559.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (7 samples, 0.03%)</title><rect x="130.6" y="837" width="0.4" height="15.0" fill="rgb(217,190,12)" rx="2" ry="2" />
<text  x="133.56" y="847.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (3 samples, 0.01%)</title><rect x="163.0" y="437" width="0.2" height="15.0" fill="rgb(248,220,54)" rx="2" ry="2" />
<text  x="166.02" y="447.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (34 samples, 0.17%)</title><rect x="172.1" y="565" width="2.0" height="15.0" fill="rgb(249,103,24)" rx="2" ry="2" />
<text  x="175.14" y="575.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char32_t&gt; &gt;::deallocate (3 samples, 0.01%)</title><rect x="958.0" y="565" width="0.2" height="15.0" fill="rgb(240,201,42)" rx="2" ry="2" />
<text  x="961.00" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (29 samples, 0.14%)</title><rect x="742.4" y="469" width="1.7" height="15.0" fill="rgb(242,111,45)" rx="2" ry="2" />
<text  x="745.41" y="479.5" ></text>
</g>
<g >
<title>unmap_vmas (4 samples, 0.02%)</title><rect x="145.4" y="341" width="0.3" height="15.0" fill="rgb(223,223,5)" rx="2" ry="2" />
<text  x="148.44" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;Bitmap&gt;::~allocator (2 samples, 0.01%)</title><rect x="73.6" y="901" width="0.1" height="15.0" fill="rgb(216,32,21)" rx="2" ry="2" />
<text  x="76.63" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (9 samples, 0.04%)</title><rect x="446.9" y="613" width="0.5" height="15.0" fill="rgb(229,159,52)" rx="2" ry="2" />
<text  x="449.89" y="623.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (4,180 samples, 20.83%)</title><rect x="665.8" y="613" width="245.8" height="15.0" fill="rgb(231,151,24)" rx="2" ry="2" />
<text  x="668.78" y="623.5" >std::function&lt;void (FileRequestR..</text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (11 samples, 0.05%)</title><rect x="1126.3" y="709" width="0.6" height="15.0" fill="rgb(218,46,11)" rx="2" ry="2" />
<text  x="1129.25" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (19 samples, 0.09%)</title><rect x="698.4" y="485" width="1.1" height="15.0" fill="rgb(240,153,40)" rx="2" ry="2" />
<text  x="701.42" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (49 samples, 0.24%)</title><rect x="145.8" y="485" width="2.9" height="15.0" fill="rgb(238,192,25)" rx="2" ry="2" />
<text  x="148.79" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (47 samples, 0.23%)</title><rect x="940.1" y="597" width="2.8" height="15.0" fill="rgb(228,71,35)" rx="2" ry="2" />
<text  x="943.12" y="607.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.01%)</title><rect x="729.8" y="453" width="0.1" height="15.0" fill="rgb(232,228,37)" rx="2" ry="2" />
<text  x="732.76" y="463.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (8 samples, 0.04%)</title><rect x="1149.0" y="709" width="0.4" height="15.0" fill="rgb(209,124,32)" rx="2" ry="2" />
<text  x="1151.95" y="719.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (65 samples, 0.32%)</title><rect x="16.9" y="821" width="3.8" height="15.0" fill="rgb(227,94,9)" rx="2" ry="2" />
<text  x="19.88" y="831.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustId (2 samples, 0.01%)</title><rect x="956.8" y="645" width="0.1" height="15.0" fill="rgb(222,190,47)" rx="2" ry="2" />
<text  x="959.76" y="655.5" ></text>
</g>
<g >
<title>Sprite::SetTone (8 samples, 0.04%)</title><rect x="1164.7" y="709" width="0.4" height="15.0" fill="rgb(236,160,52)" rx="2" ry="2" />
<text  x="1167.65" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (31 samples, 0.15%)</title><rect x="1033.1" y="677" width="1.8" height="15.0" fill="rgb(214,94,50)" rx="2" ry="2" />
<text  x="1036.10" y="687.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (86 samples, 0.43%)</title><rect x="149.4" y="517" width="5.1" height="15.0" fill="rgb(235,149,53)" rx="2" ry="2" />
<text  x="152.44" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (8 samples, 0.04%)</title><rect x="557.9" y="661" width="0.5" height="15.0" fill="rgb(218,200,22)" rx="2" ry="2" />
<text  x="560.92" y="671.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (6 samples, 0.03%)</title><rect x="733.3" y="421" width="0.3" height="15.0" fill="rgb(212,142,13)" rx="2" ry="2" />
<text  x="736.29" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; (3 samples, 0.01%)</title><rect x="79.0" y="901" width="0.2" height="15.0" fill="rgb(221,93,48)" rx="2" ry="2" />
<text  x="81.98" y="911.5" ></text>
</g>
<g >
<title>std::mersenne_twister_engine&lt;unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul&gt;::operator() (2 samples, 0.01%)</title><rect x="549.9" y="629" width="0.1" height="15.0" fill="rgb(243,83,47)" rx="2" ry="2" />
<text  x="552.92" y="639.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (3 samples, 0.01%)</title><rect x="69.0" y="901" width="0.2" height="15.0" fill="rgb(214,91,17)" rx="2" ry="2" />
<text  x="72.04" y="911.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (5 samples, 0.02%)</title><rect x="746.2" y="501" width="0.3" height="15.0" fill="rgb(214,53,6)" rx="2" ry="2" />
<text  x="749.17" y="511.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (297 samples, 1.48%)</title><rect x="108.9" y="629" width="17.4" height="15.0" fill="rgb(227,222,36)" rx="2" ry="2" />
<text  x="111.86" y="639.5" ></text>
</g>
<g >
<title>__popcountdi2 (2 samples, 0.01%)</title><rect x="1142.0" y="693" width="0.1" height="15.0" fill="rgb(254,129,53)" rx="2" ry="2" />
<text  x="1145.01" y="703.5" ></text>
</g>
<g >
<title>FileRequestResult::~FileRequestResult (124 samples, 0.62%)</title><rect x="654.2" y="613" width="7.3" height="15.0" fill="rgb(214,103,9)" rx="2" ry="2" />
<text  x="657.19" y="623.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate (46 samples, 0.23%)</title><rect x="160.6" y="517" width="2.7" height="15.0" fill="rgb(230,67,3)" rx="2" ry="2" />
<text  x="163.55" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (286 samples, 1.43%)</title><rect x="805.9" y="421" width="16.8" height="15.0" fill="rgb(215,109,21)" rx="2" ry="2" />
<text  x="808.86" y="431.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (49 samples, 0.24%)</title><rect x="145.8" y="533" width="2.9" height="15.0" fill="rgb(253,166,31)" rx="2" ry="2" />
<text  x="148.79" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string@plt (2 samples, 0.01%)</title><rect x="641.0" y="565" width="0.1" height="15.0" fill="rgb(237,199,34)" rx="2" ry="2" />
<text  x="643.96" y="575.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::function&lt;Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}, void, void&gt; (17 samples, 0.08%)</title><rect x="916.6" y="629" width="1.0" height="15.0" fill="rgb(230,131,18)" rx="2" ry="2" />
<text  x="919.60" y="639.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (4 samples, 0.02%)</title><rect x="890.4" y="133" width="0.2" height="15.0" fill="rgb(227,122,27)" rx="2" ry="2" />
<text  x="893.37" y="143.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (17 samples, 0.08%)</title><rect x="733.6" y="437" width="1.0" height="15.0" fill="rgb(226,148,29)" rx="2" ry="2" />
<text  x="736.64" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (19 samples, 0.09%)</title><rect x="41.5" y="901" width="1.1" height="15.0" fill="rgb(226,130,42)" rx="2" ry="2" />
<text  x="44.46" y="911.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::operator (2 samples, 0.01%)</title><rect x="89.5" y="901" width="0.1" height="15.0" fill="rgb(253,104,13)" rx="2" ry="2" />
<text  x="92.45" y="911.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (25 samples, 0.12%)</title><rect x="127.6" y="389" width="1.4" height="15.0" fill="rgb(208,204,33)" rx="2" ry="2" />
<text  x="130.56" y="399.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (4 samples, 0.02%)</title><rect x="795.6" y="389" width="0.2" height="15.0" fill="rgb(235,179,24)" rx="2" ry="2" />
<text  x="798.57" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (15 samples, 0.07%)</title><rect x="702.2" y="533" width="0.9" height="15.0" fill="rgb(210,94,31)" rx="2" ry="2" />
<text  x="705.18" y="543.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (15 samples, 0.07%)</title><rect x="172.1" y="533" width="0.9" height="15.0" fill="rgb(229,59,17)" rx="2" ry="2" />
<text  x="175.14" y="543.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Transition*, std::default_delete&lt;Transition&gt; &gt; (3 samples, 0.01%)</title><rect x="78.8" y="901" width="0.2" height="15.0" fill="rgb(226,56,20)" rx="2" ry="2" />
<text  x="81.81" y="911.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="130.6" y="549" width="0.1" height="15.0" fill="rgb(251,130,22)" rx="2" ry="2" />
<text  x="133.56" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h2 (3 samples, 0.01%)</title><rect x="630.1" y="549" width="0.2" height="15.0" fill="rgb(247,106,37)" rx="2" ry="2" />
<text  x="633.08" y="559.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (3 samples, 0.01%)</title><rect x="135.4" y="437" width="0.2" height="15.0" fill="rgb(218,116,23)" rx="2" ry="2" />
<text  x="138.44" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (132 samples, 0.66%)</title><rect x="264.5" y="661" width="7.8" height="15.0" fill="rgb(227,40,21)" rx="2" ry="2" />
<text  x="267.52" y="671.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (3 samples, 0.01%)</title><rect x="1178.2" y="725" width="0.2" height="15.0" fill="rgb(206,124,25)" rx="2" ry="2" />
<text  x="1181.18" y="735.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~tuple (5 samples, 0.02%)</title><rect x="160.3" y="629" width="0.3" height="15.0" fill="rgb(210,226,41)" rx="2" ry="2" />
<text  x="163.26" y="639.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (71 samples, 0.35%)</title><rect x="126.3" y="901" width="4.2" height="15.0" fill="rgb(210,74,47)" rx="2" ry="2" />
<text  x="129.32" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (88 samples, 0.44%)</title><rect x="617.7" y="581" width="5.2" height="15.0" fill="rgb(247,28,38)" rx="2" ry="2" />
<text  x="620.73" y="591.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (8 samples, 0.04%)</title><rect x="635.8" y="453" width="0.5" height="15.0" fill="rgb(230,182,4)" rx="2" ry="2" />
<text  x="638.79" y="463.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Game_Interpreter_Map*, false&gt;::_M_head (3 samples, 0.01%)</title><rect x="1138.4" y="629" width="0.1" height="15.0" fill="rgb(220,200,40)" rx="2" ry="2" />
<text  x="1141.37" y="639.5" ></text>
</g>
<g >
<title>Cache::Picture (119 samples, 0.59%)</title><rect x="131.0" y="581" width="7.0" height="15.0" fill="rgb(249,166,25)" rx="2" ry="2" />
<text  x="133.97" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (37 samples, 0.18%)</title><rect x="902.5" y="325" width="2.2" height="15.0" fill="rgb(233,167,23)" rx="2" ry="2" />
<text  x="905.48" y="335.5" ></text>
</g>
<g >
<title>Sdl2Ui::UpdateDisplay (5 samples, 0.02%)</title><rect x="183.0" y="773" width="0.3" height="15.0" fill="rgb(252,98,48)" rx="2" ry="2" />
<text  x="186.02" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_addr (2 samples, 0.01%)</title><rect x="40.0" y="901" width="0.1" height="15.0" fill="rgb(214,90,53)" rx="2" ry="2" />
<text  x="42.99" y="911.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::operator== (3 samples, 0.01%)</title><rect x="814.0" y="341" width="0.2" height="15.0" fill="rgb(212,38,7)" rx="2" ry="2" />
<text  x="816.98" y="351.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (297 samples, 1.48%)</title><rect x="108.9" y="869" width="17.4" height="15.0" fill="rgb(219,170,43)" rx="2" ry="2" />
<text  x="111.86" y="879.5" ></text>
</g>
<g >
<title>Game_Character::UpdateMovement (48 samples, 0.24%)</title><rect x="1142.2" y="741" width="2.8" height="15.0" fill="rgb(249,48,0)" rx="2" ry="2" />
<text  x="1145.19" y="751.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::operator[] (3 samples, 0.01%)</title><rect x="174.0" y="357" width="0.1" height="15.0" fill="rgb(241,174,37)" rx="2" ry="2" />
<text  x="176.96" y="367.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (10 samples, 0.05%)</title><rect x="148.8" y="709" width="0.6" height="15.0" fill="rgb(244,15,51)" rx="2" ry="2" />
<text  x="151.85" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (18 samples, 0.09%)</title><rect x="409.3" y="629" width="1.0" height="15.0" fill="rgb(240,192,41)" rx="2" ry="2" />
<text  x="412.25" y="639.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Transition*, false&gt;::_M_head (7 samples, 0.03%)</title><rect x="53.8" y="901" width="0.4" height="15.0" fill="rgb(247,82,1)" rx="2" ry="2" />
<text  x="56.75" y="911.5" ></text>
</g>
<g >
<title>Game_Interpreter::SetSubcommandIndex (4 samples, 0.02%)</title><rect x="30.1" y="901" width="0.2" height="15.0" fill="rgb(231,100,34)" rx="2" ry="2" />
<text  x="33.11" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (8 samples, 0.04%)</title><rect x="562.2" y="613" width="0.5" height="15.0" fill="rgb(252,9,34)" rx="2" ry="2" />
<text  x="565.22" y="623.5" ></text>
</g>
<g >
<title>operator delete (72 samples, 0.36%)</title><rect x="950.3" y="645" width="4.2" height="15.0" fill="rgb(206,52,24)" rx="2" ry="2" />
<text  x="953.30" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (7 samples, 0.03%)</title><rect x="149.0" y="533" width="0.4" height="15.0" fill="rgb(251,85,7)" rx="2" ry="2" />
<text  x="152.02" y="543.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (34 samples, 0.17%)</title><rect x="644.7" y="517" width="2.0" height="15.0" fill="rgb(253,187,16)" rx="2" ry="2" />
<text  x="647.67" y="527.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (7 samples, 0.03%)</title><rect x="149.0" y="581" width="0.4" height="15.0" fill="rgb(213,146,27)" rx="2" ry="2" />
<text  x="152.02" y="591.5" ></text>
</g>
<g >
<title>FileRequestAsync::SetGraphicFile (6 samples, 0.03%)</title><rect x="25.6" y="901" width="0.4" height="15.0" fill="rgb(236,108,41)" rx="2" ry="2" />
<text  x="28.64" y="911.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;Bitmap&gt;&amp;&gt; (2 samples, 0.01%)</title><rect x="740.1" y="517" width="0.1" height="15.0" fill="rgb(228,209,37)" rx="2" ry="2" />
<text  x="743.05" y="527.5" ></text>
</g>
<g >
<title>std::bitset&lt;32ul&gt;::_Unchecked_test (2 samples, 0.01%)</title><rect x="573.1" y="613" width="0.1" height="15.0" fill="rgb(227,140,15)" rx="2" ry="2" />
<text  x="576.09" y="623.5" ></text>
</g>
<g >
<title>Game_Map::GetNeedRefresh (2 samples, 0.01%)</title><rect x="31.8" y="901" width="0.1" height="15.0" fill="rgb(237,223,39)" rx="2" ry="2" />
<text  x="34.82" y="911.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (34 samples, 0.17%)</title><rect x="172.1" y="789" width="2.0" height="15.0" fill="rgb(243,12,40)" rx="2" ry="2" />
<text  x="175.14" y="799.5" ></text>
</g>
<g >
<title>Bitmap::height (4 samples, 0.02%)</title><rect x="928.4" y="613" width="0.3" height="15.0" fill="rgb(231,2,31)" rx="2" ry="2" />
<text  x="931.42" y="623.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (7 samples, 0.03%)</title><rect x="130.6" y="661" width="0.4" height="15.0" fill="rgb(234,186,25)" rx="2" ry="2" />
<text  x="133.56" y="671.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}::operator() (34 samples, 0.17%)</title><rect x="172.1" y="581" width="2.0" height="15.0" fill="rgb(215,158,0)" rx="2" ry="2" />
<text  x="175.14" y="591.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}::operator() (71 samples, 0.35%)</title><rect x="126.3" y="725" width="4.2" height="15.0" fill="rgb(225,174,49)" rx="2" ry="2" />
<text  x="129.32" y="735.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.01%)</title><rect x="892.8" y="133" width="0.2" height="15.0" fill="rgb(224,21,36)" rx="2" ry="2" />
<text  x="895.84" y="143.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (60 samples, 0.30%)</title><rect x="939.8" y="613" width="3.5" height="15.0" fill="rgb(229,87,16)" rx="2" ry="2" />
<text  x="942.77" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (75 samples, 0.37%)</title><rect x="623.4" y="597" width="4.4" height="15.0" fill="rgb(245,81,17)" rx="2" ry="2" />
<text  x="626.44" y="607.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (16,253 samples, 81.00%)</title><rect x="184.4" y="757" width="955.8" height="15.0" fill="rgb(206,187,34)" rx="2" ry="2" />
<text  x="187.37" y="767.5" >Game_Map::UpdateCommonEvents</text>
</g>
<g >
<title>operator delete (112 samples, 0.56%)</title><rect x="654.5" y="597" width="6.6" height="15.0" fill="rgb(218,108,13)" rx="2" ry="2" />
<text  x="657.55" y="607.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocator&lt;Bitmap&gt; (3 samples, 0.01%)</title><rect x="868.3" y="453" width="0.2" height="15.0" fill="rgb(232,107,32)" rx="2" ry="2" />
<text  x="871.32" y="463.5" ></text>
</g>
<g >
<title>Game_Map::Update (34 samples, 0.17%)</title><rect x="172.1" y="773" width="2.0" height="15.0" fill="rgb(224,23,42)" rx="2" ry="2" />
<text  x="175.14" y="783.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_invoke (182 samples, 0.91%)</title><rect x="138.0" y="677" width="10.7" height="15.0" fill="rgb(212,27,45)" rx="2" ry="2" />
<text  x="140.97" y="687.5" ></text>
</g>
<g >
<title>Scene::MainFunction (10 samples, 0.05%)</title><rect x="148.8" y="901" width="0.6" height="15.0" fill="rgb(223,98,47)" rx="2" ry="2" />
<text  x="151.85" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::operator[] (3 samples, 0.01%)</title><rect x="1138.8" y="725" width="0.2" height="15.0" fill="rgb(250,218,46)" rx="2" ry="2" />
<text  x="1141.84" y="735.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="867.5" y="245" width="0.1" height="15.0" fill="rgb(232,19,27)" rx="2" ry="2" />
<text  x="870.49" y="255.5" ></text>
</g>
<g >
<title>Sprite::Draw (11 samples, 0.05%)</title><rect x="182.4" y="757" width="0.6" height="15.0" fill="rgb(253,223,35)" rx="2" ry="2" />
<text  x="185.37" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt;::__normal_iterator (2 samples, 0.01%)</title><rect x="1102.3" y="693" width="0.1" height="15.0" fill="rgb(229,195,27)" rx="2" ry="2" />
<text  x="1105.26" y="703.5" ></text>
</g>
<g >
<title>SDL_UDEV_hotplug_update_available (2 samples, 0.01%)</title><rect x="1180.3" y="709" width="0.1" height="15.0" fill="rgb(241,68,50)" rx="2" ry="2" />
<text  x="1183.30" y="719.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (787 samples, 3.92%)</title><rect x="592.9" y="629" width="46.3" height="15.0" fill="rgb(237,126,22)" rx="2" ry="2" />
<text  x="595.91" y="639.5" >Asyn..</text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (2 samples, 0.01%)</title><rect x="70.3" y="901" width="0.2" height="15.0" fill="rgb(210,172,50)" rx="2" ry="2" />
<text  x="73.34" y="911.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator bool (3 samples, 0.01%)</title><rect x="835.9" y="517" width="0.2" height="15.0" fill="rgb(243,155,17)" rx="2" ry="2" />
<text  x="838.91" y="527.5" ></text>
</g>
<g >
<title>finish_task_switch (57 samples, 0.28%)</title><rect x="17.2" y="773" width="3.4" height="15.0" fill="rgb(238,54,41)" rx="2" ry="2" />
<text  x="20.23" y="783.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (40 samples, 0.20%)</title><rect x="849.7" y="485" width="2.4" height="15.0" fill="rgb(223,134,54)" rx="2" ry="2" />
<text  x="852.73" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::deallocate (131 samples, 0.65%)</title><rect x="860.6" y="437" width="7.7" height="15.0" fill="rgb(241,60,6)" rx="2" ry="2" />
<text  x="863.61" y="447.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (4 samples, 0.02%)</title><rect x="116.0" y="389" width="0.3" height="15.0" fill="rgb(236,40,11)" rx="2" ry="2" />
<text  x="119.03" y="399.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (3 samples, 0.01%)</title><rect x="174.0" y="389" width="0.1" height="15.0" fill="rgb(207,192,38)" rx="2" ry="2" />
<text  x="176.96" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::_M_ptr (13 samples, 0.06%)</title><rect x="1137.8" y="693" width="0.7" height="15.0" fill="rgb(249,168,25)" rx="2" ry="2" />
<text  x="1140.78" y="703.5" ></text>
</g>
<g >
<title>page_fault (108 samples, 0.54%)</title><rect x="789.9" y="485" width="6.4" height="15.0" fill="rgb(237,37,16)" rx="2" ry="2" />
<text  x="792.92" y="495.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (32 samples, 0.16%)</title><rect x="131.0" y="565" width="1.9" height="15.0" fill="rgb(212,22,6)" rx="2" ry="2" />
<text  x="133.97" y="575.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (5 samples, 0.02%)</title><rect x="1180.8" y="693" width="0.3" height="15.0" fill="rgb(237,62,35)" rx="2" ry="2" />
<text  x="1183.77" y="703.5" ></text>
</g>
<g >
<title>Sprite::SetZoomY (3 samples, 0.01%)</title><rect x="936.4" y="629" width="0.1" height="15.0" fill="rgb(227,225,1)" rx="2" ry="2" />
<text  x="939.36" y="639.5" ></text>
</g>
<g >
<title>operator new (69 samples, 0.34%)</title><rect x="598.1" y="549" width="4.1" height="15.0" fill="rgb(208,17,18)" rx="2" ry="2" />
<text  x="601.15" y="559.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::~_Vector_base (8 samples, 0.04%)</title><rect x="906.1" y="389" width="0.4" height="15.0" fill="rgb(238,221,21)" rx="2" ry="2" />
<text  x="909.07" y="399.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (65 samples, 0.32%)</title><rect x="163.3" y="837" width="3.8" height="15.0" fill="rgb(235,200,36)" rx="2" ry="2" />
<text  x="166.26" y="847.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (5 samples, 0.02%)</title><rect x="959.8" y="645" width="0.3" height="15.0" fill="rgb(239,164,22)" rx="2" ry="2" />
<text  x="962.82" y="655.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (15 samples, 0.07%)</title><rect x="723.3" y="437" width="0.9" height="15.0" fill="rgb(246,5,1)" rx="2" ry="2" />
<text  x="726.29" y="447.5" ></text>
</g>
<g >
<title>Bitmap::Init (73 samples, 0.36%)</title><rect x="807.6" y="373" width="4.3" height="15.0" fill="rgb(215,187,27)" rx="2" ry="2" />
<text  x="810.62" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (28 samples, 0.14%)</title><rect x="696.7" y="453" width="1.7" height="15.0" fill="rgb(252,82,47)" rx="2" ry="2" />
<text  x="699.71" y="463.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Sprite*, false&gt;::_M_head (6 samples, 0.03%)</title><rect x="942.5" y="533" width="0.4" height="15.0" fill="rgb(230,75,26)" rx="2" ry="2" />
<text  x="945.53" y="543.5" ></text>
</g>
<g >
<title>Cache::System (2 samples, 0.01%)</title><rect x="1179.5" y="709" width="0.1" height="15.0" fill="rgb(241,207,16)" rx="2" ry="2" />
<text  x="1182.53" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h1 (7 samples, 0.03%)</title><rect x="62.3" y="901" width="0.4" height="15.0" fill="rgb(219,140,17)" rx="2" ry="2" />
<text  x="65.28" y="911.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::~_Head_base (5 samples, 0.02%)</title><rect x="160.3" y="581" width="0.3" height="15.0" fill="rgb(240,182,31)" rx="2" ry="2" />
<text  x="163.26" y="591.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::reset (80 samples, 0.40%)</title><rect x="944.4" y="645" width="4.7" height="15.0" fill="rgb(238,126,33)" rx="2" ry="2" />
<text  x="947.41" y="655.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (7 samples, 0.03%)</title><rect x="33.5" y="901" width="0.4" height="15.0" fill="rgb(221,127,53)" rx="2" ry="2" />
<text  x="36.52" y="911.5" ></text>
</g>
<g >
<title>Game_Screen::GetFlashColor (16 samples, 0.08%)</title><rect x="1161.1" y="709" width="0.9" height="15.0" fill="rgb(225,189,42)" rx="2" ry="2" />
<text  x="1164.07" y="719.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (4 samples, 0.02%)</title><rect x="631.3" y="549" width="0.2" height="15.0" fill="rgb(208,78,7)" rx="2" ry="2" />
<text  x="634.26" y="559.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (2 samples, 0.01%)</title><rect x="907.5" y="501" width="0.1" height="15.0" fill="rgb(221,194,29)" rx="2" ry="2" />
<text  x="910.48" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (60 samples, 0.30%)</title><rect x="442.5" y="629" width="3.5" height="15.0" fill="rgb(224,96,18)" rx="2" ry="2" />
<text  x="445.48" y="639.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (5 samples, 0.02%)</title><rect x="66.5" y="901" width="0.3" height="15.0" fill="rgb(215,193,9)" rx="2" ry="2" />
<text  x="69.52" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (4 samples, 0.02%)</title><rect x="587.7" y="629" width="0.2" height="15.0" fill="rgb(227,153,15)" rx="2" ry="2" />
<text  x="590.68" y="639.5" ></text>
</g>
<g >
<title>max&lt;int&gt; (5 samples, 0.02%)</title><rect x="841.4" y="517" width="0.3" height="15.0" fill="rgb(233,77,9)" rx="2" ry="2" />
<text  x="844.38" y="527.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (119 samples, 0.59%)</title><rect x="131.0" y="741" width="7.0" height="15.0" fill="rgb(247,63,4)" rx="2" ry="2" />
<text  x="133.97" y="751.5" ></text>
</g>
<g >
<title>Player::IsRPG2k3 (10 samples, 0.05%)</title><rect x="531.2" y="645" width="0.6" height="15.0" fill="rgb(208,156,28)" rx="2" ry="2" />
<text  x="534.16" y="655.5" ></text>
</g>
<g >
<title>GetRandomUnsigned (2 samples, 0.01%)</title><rect x="549.9" y="645" width="0.1" height="15.0" fill="rgb(237,197,53)" rx="2" ry="2" />
<text  x="552.92" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream (3 samples, 0.01%)</title><rect x="959.6" y="645" width="0.2" height="15.0" fill="rgb(245,16,1)" rx="2" ry="2" />
<text  x="962.65" y="655.5" ></text>
</g>
<g >
<title>Game_Map::GetDisplayY (5 samples, 0.02%)</title><rect x="590.6" y="645" width="0.3" height="15.0" fill="rgb(209,109,23)" rx="2" ry="2" />
<text  x="593.56" y="655.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (235 samples, 1.17%)</title><rect x="149.4" y="821" width="13.9" height="15.0" fill="rgb(228,33,18)" rx="2" ry="2" />
<text  x="152.44" y="831.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (4 samples, 0.02%)</title><rect x="108.4" y="901" width="0.3" height="15.0" fill="rgb(221,166,43)" rx="2" ry="2" />
<text  x="111.45" y="911.5" ></text>
</g>
<g >
<title>FileRequestResult::FileRequestResult (4 samples, 0.02%)</title><rect x="26.0" y="901" width="0.2" height="15.0" fill="rgb(246,39,47)" rx="2" ry="2" />
<text  x="29.00" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (6 samples, 0.03%)</title><rect x="48.4" y="901" width="0.4" height="15.0" fill="rgb(208,181,25)" rx="2" ry="2" />
<text  x="51.40" y="911.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (5 samples, 0.02%)</title><rect x="163.5" y="421" width="0.3" height="15.0" fill="rgb(251,132,32)" rx="2" ry="2" />
<text  x="166.49" y="431.5" ></text>
</g>
<g >
<title>FileRequestAsync::BindStart (49 samples, 0.24%)</title><rect x="175.0" y="645" width="2.8" height="15.0" fill="rgb(208,199,19)" rx="2" ry="2" />
<text  x="177.96" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_S_value (9 samples, 0.04%)</title><rect x="818.0" y="277" width="0.5" height="15.0" fill="rgb(235,209,29)" rx="2" ry="2" />
<text  x="820.98" y="287.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (5 samples, 0.02%)</title><rect x="160.3" y="613" width="0.3" height="15.0" fill="rgb(227,181,52)" rx="2" ry="2" />
<text  x="163.26" y="623.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (17 samples, 0.08%)</title><rect x="908.2" y="517" width="1.0" height="15.0" fill="rgb(217,148,34)" rx="2" ry="2" />
<text  x="911.19" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (3 samples, 0.01%)</title><rect x="174.0" y="421" width="0.1" height="15.0" fill="rgb(254,185,46)" rx="2" ry="2" />
<text  x="176.96" y="431.5" ></text>
</g>
<g >
<title>Bitmap::initialize_formats (2 samples, 0.01%)</title><rect x="812.3" y="357" width="0.1" height="15.0" fill="rgb(229,127,25)" rx="2" ry="2" />
<text  x="815.33" y="367.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (7 samples, 0.03%)</title><rect x="924.2" y="629" width="0.5" height="15.0" fill="rgb(223,159,13)" rx="2" ry="2" />
<text  x="927.24" y="639.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (16 samples, 0.08%)</title><rect x="173.0" y="517" width="1.0" height="15.0" fill="rgb(233,127,47)" rx="2" ry="2" />
<text  x="176.02" y="527.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (16 samples, 0.08%)</title><rect x="1173.1" y="629" width="1.0" height="15.0" fill="rgb(235,177,52)" rx="2" ry="2" />
<text  x="1176.12" y="639.5" ></text>
</g>
<g >
<title>Bitmap::height (5 samples, 0.02%)</title><rect x="853.6" y="517" width="0.2" height="15.0" fill="rgb(220,188,2)" rx="2" ry="2" />
<text  x="856.55" y="527.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (3 samples, 0.01%)</title><rect x="51.5" y="901" width="0.2" height="15.0" fill="rgb(211,144,17)" rx="2" ry="2" />
<text  x="54.52" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (11 samples, 0.05%)</title><rect x="1045.4" y="661" width="0.6" height="15.0" fill="rgb(214,79,18)" rx="2" ry="2" />
<text  x="1048.39" y="671.5" ></text>
</g>
<g >
<title>Game_Interpreter::Clear (2 samples, 0.01%)</title><rect x="1141.2" y="741" width="0.1" height="15.0" fill="rgb(253,185,31)" rx="2" ry="2" />
<text  x="1144.19" y="751.5" ></text>
</g>
<g >
<title>Game_Screen::GetPicture (31 samples, 0.15%)</title><rect x="954.6" y="661" width="1.8" height="15.0" fill="rgb(218,97,34)" rx="2" ry="2" />
<text  x="957.59" y="671.5" ></text>
</g>
<g >
<title>Bitmap::GetOpacity (3 samples, 0.01%)</title><rect x="23.7" y="901" width="0.2" height="15.0" fill="rgb(214,153,17)" rx="2" ry="2" />
<text  x="26.70" y="911.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::_M_ptr (15 samples, 0.07%)</title><rect x="913.2" y="565" width="0.9" height="15.0" fill="rgb(208,46,12)" rx="2" ry="2" />
<text  x="916.19" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (11 samples, 0.05%)</title><rect x="974.4" y="629" width="0.7" height="15.0" fill="rgb(243,72,22)" rx="2" ry="2" />
<text  x="977.41" y="639.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Game_Picture*, false&gt;::_M_head (12 samples, 0.06%)</title><rect x="52.0" y="901" width="0.8" height="15.0" fill="rgb(230,144,14)" rx="2" ry="2" />
<text  x="55.05" y="911.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::_M_ptr (2 samples, 0.01%)</title><rect x="914.3" y="565" width="0.1" height="15.0" fill="rgb(217,75,49)" rx="2" ry="2" />
<text  x="917.30" y="575.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (25 samples, 0.12%)</title><rect x="158.8" y="597" width="1.5" height="15.0" fill="rgb(242,152,22)" rx="2" ry="2" />
<text  x="161.79" y="607.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (37 samples, 0.18%)</title><rect x="644.5" y="533" width="2.2" height="15.0" fill="rgb(216,119,7)" rx="2" ry="2" />
<text  x="647.49" y="543.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (144 samples, 0.72%)</title><rect x="711.8" y="437" width="8.5" height="15.0" fill="rgb(227,32,20)" rx="2" ry="2" />
<text  x="714.83" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_S_key (39 samples, 0.19%)</title><rect x="816.6" y="293" width="2.3" height="15.0" fill="rgb(216,18,3)" rx="2" ry="2" />
<text  x="819.56" y="303.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.02%)</title><rect x="128.8" y="357" width="0.2" height="15.0" fill="rgb(229,152,21)" rx="2" ry="2" />
<text  x="131.79" y="367.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (3 samples, 0.01%)</title><rect x="921.3" y="597" width="0.2" height="15.0" fill="rgb(213,186,40)" rx="2" ry="2" />
<text  x="924.30" y="607.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.03%)</title><rect x="915.2" y="613" width="0.3" height="15.0" fill="rgb(231,196,38)" rx="2" ry="2" />
<text  x="918.19" y="623.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (15 samples, 0.07%)</title><rect x="138.8" y="581" width="0.9" height="15.0" fill="rgb(230,211,32)" rx="2" ry="2" />
<text  x="141.79" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (2 samples, 0.01%)</title><rect x="932.4" y="581" width="0.1" height="15.0" fill="rgb(244,116,31)" rx="2" ry="2" />
<text  x="935.42" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*, std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt; &gt;::base (5 samples, 0.02%)</title><rect x="647.2" y="565" width="0.3" height="15.0" fill="rgb(252,32,27)" rx="2" ry="2" />
<text  x="650.19" y="575.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&amp;&gt; (3 samples, 0.01%)</title><rect x="745.0" y="453" width="0.2" height="15.0" fill="rgb(243,147,50)" rx="2" ry="2" />
<text  x="747.99" y="463.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (69 samples, 0.34%)</title><rect x="139.7" y="581" width="4.0" height="15.0" fill="rgb(214,74,24)" rx="2" ry="2" />
<text  x="142.67" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (65 samples, 0.32%)</title><rect x="1170.5" y="709" width="3.9" height="15.0" fill="rgb(225,46,20)" rx="2" ry="2" />
<text  x="1173.53" y="719.5" ></text>
</g>
<g >
<title>LINUX_JoystickDetect (2 samples, 0.01%)</title><rect x="1180.3" y="741" width="0.1" height="15.0" fill="rgb(215,135,52)" rx="2" ry="2" />
<text  x="1183.30" y="751.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::operator (17 samples, 0.08%)</title><rect x="1137.8" y="725" width="1.0" height="15.0" fill="rgb(217,207,46)" rx="2" ry="2" />
<text  x="1140.78" y="735.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (4 samples, 0.02%)</title><rect x="1180.8" y="661" width="0.2" height="15.0" fill="rgb(215,126,42)" rx="2" ry="2" />
<text  x="1183.77" y="671.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (12 samples, 0.06%)</title><rect x="69.6" y="901" width="0.7" height="15.0" fill="rgb(218,200,15)" rx="2" ry="2" />
<text  x="72.63" y="911.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (2 samples, 0.01%)</title><rect x="130.6" y="581" width="0.1" height="15.0" fill="rgb(254,140,11)" rx="2" ry="2" />
<text  x="133.56" y="591.5" ></text>
</g>
<g >
<title>std::allocator&lt;Bitmap&gt;::~allocator (2 samples, 0.01%)</title><rect x="824.2" y="437" width="0.1" height="15.0" fill="rgb(237,68,32)" rx="2" ry="2" />
<text  x="827.21" y="447.5" ></text>
</g>
<g >
<title>zap_page_range (4 samples, 0.02%)</title><rect x="892.7" y="213" width="0.3" height="15.0" fill="rgb(240,78,14)" rx="2" ry="2" />
<text  x="895.72" y="223.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (9 samples, 0.04%)</title><rect x="932.1" y="613" width="0.6" height="15.0" fill="rgb(232,178,4)" rx="2" ry="2" />
<text  x="935.12" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char&gt; (5 samples, 0.02%)</title><rect x="603.8" y="565" width="0.3" height="15.0" fill="rgb(212,110,32)" rx="2" ry="2" />
<text  x="606.79" y="575.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (5 samples, 0.02%)</title><rect x="910.7" y="485" width="0.3" height="15.0" fill="rgb(214,15,24)" rx="2" ry="2" />
<text  x="913.66" y="495.5" ></text>
</g>
<g >
<title>strlen (2 samples, 0.01%)</title><rect x="916.2" y="613" width="0.2" height="15.0" fill="rgb(250,208,7)" rx="2" ry="2" />
<text  x="919.24" y="623.5" ></text>
</g>
<g >
<title>Audio (2 samples, 0.01%)</title><rect x="182.2" y="805" width="0.1" height="15.0" fill="rgb(210,175,22)" rx="2" ry="2" />
<text  x="185.19" y="815.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (34 samples, 0.17%)</title><rect x="172.1" y="725" width="2.0" height="15.0" fill="rgb(251,21,41)" rx="2" ry="2" />
<text  x="175.14" y="735.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (211 samples, 1.05%)</title><rect x="786.6" y="501" width="12.4" height="15.0" fill="rgb(216,21,8)" rx="2" ry="2" />
<text  x="789.57" y="511.5" ></text>
</g>
<g >
<title>pixman_image_get_width (2 samples, 0.01%)</title><rect x="827.0" y="501" width="0.1" height="15.0" fill="rgb(233,138,7)" rx="2" ry="2" />
<text  x="830.03" y="511.5" ></text>
</g>
<g >
<title>do_nanosleep (14 samples, 0.07%)</title><rect x="1181.1" y="645" width="0.8" height="15.0" fill="rgb(211,12,4)" rx="2" ry="2" />
<text  x="1184.06" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (3 samples, 0.01%)</title><rect x="909.3" y="549" width="0.2" height="15.0" fill="rgb(210,171,30)" rx="2" ry="2" />
<text  x="912.31" y="559.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::begin (19 samples, 0.09%)</title><rect x="456.4" y="629" width="1.1" height="15.0" fill="rgb(217,213,18)" rx="2" ry="2" />
<text  x="459.36" y="639.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (14 samples, 0.07%)</title><rect x="650.8" y="501" width="0.8" height="15.0" fill="rgb(214,2,49)" rx="2" ry="2" />
<text  x="653.78" y="511.5" ></text>
</g>
<g >
<title>release_pages (14 samples, 0.07%)</title><rect x="890.8" y="85" width="0.9" height="15.0" fill="rgb(228,178,0)" rx="2" ry="2" />
<text  x="893.84" y="95.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (9 samples, 0.04%)</title><rect x="697.7" y="421" width="0.5" height="15.0" fill="rgb(229,91,2)" rx="2" ry="2" />
<text  x="700.65" y="431.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (2 samples, 0.01%)</title><rect x="746.6" y="533" width="0.2" height="15.0" fill="rgb(220,43,24)" rx="2" ry="2" />
<text  x="749.64" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (9 samples, 0.04%)</title><rect x="289.5" y="693" width="0.5" height="15.0" fill="rgb(244,229,32)" rx="2" ry="2" />
<text  x="292.46" y="703.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::end (4 samples, 0.02%)</title><rect x="563.9" y="629" width="0.3" height="15.0" fill="rgb(231,59,23)" rx="2" ry="2" />
<text  x="566.92" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (52 samples, 0.26%)</title><rect x="1054.6" y="645" width="3.1" height="15.0" fill="rgb(224,72,8)" rx="2" ry="2" />
<text  x="1057.62" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_M_lower_bound (3 samples, 0.01%)</title><rect x="174.0" y="309" width="0.1" height="15.0" fill="rgb(219,122,38)" rx="2" ry="2" />
<text  x="176.96" y="319.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.04%)</title><rect x="163.3" y="565" width="0.5" height="15.0" fill="rgb(220,71,18)" rx="2" ry="2" />
<text  x="166.26" y="575.5" ></text>
</g>
<g >
<title>std::__pair_get&lt;0ul&gt;::__get&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; (2 samples, 0.01%)</title><rect x="697.5" y="389" width="0.2" height="15.0" fill="rgb(211,57,30)" rx="2" ry="2" />
<text  x="700.53" y="399.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (61 samples, 0.30%)</title><rect x="901.1" y="341" width="3.6" height="15.0" fill="rgb(244,148,36)" rx="2" ry="2" />
<text  x="904.13" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (13 samples, 0.06%)</title><rect x="1015.3" y="629" width="0.7" height="15.0" fill="rgb(225,73,34)" rx="2" ry="2" />
<text  x="1018.28" y="639.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (14 samples, 0.07%)</title><rect x="822.8" y="437" width="0.8" height="15.0" fill="rgb(229,203,3)" rx="2" ry="2" />
<text  x="825.80" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (26 samples, 0.13%)</title><rect x="467.4" y="661" width="1.5" height="15.0" fill="rgb(242,228,1)" rx="2" ry="2" />
<text  x="470.36" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (18 samples, 0.09%)</title><rect x="605.4" y="565" width="1.1" height="15.0" fill="rgb(221,64,48)" rx="2" ry="2" />
<text  x="608.44" y="575.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Scene, (__gnu_cxx::_Lock_policy)2&gt;::get (3 samples, 0.01%)</title><rect x="1120.7" y="693" width="0.2" height="15.0" fill="rgb(236,111,7)" rx="2" ry="2" />
<text  x="1123.72" y="703.5" ></text>
</g>
<g >
<title>__vm_munmap (12 samples, 0.06%)</title><rect x="903.8" y="229" width="0.7" height="15.0" fill="rgb(236,45,54)" rx="2" ry="2" />
<text  x="906.78" y="239.5" ></text>
</g>
<g >
<title>std::map&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, (anonymous namespace)::CacheItem, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::end (3 samples, 0.01%)</title><rect x="81.4" y="901" width="0.2" height="15.0" fill="rgb(232,221,0)" rx="2" ry="2" />
<text  x="84.39" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::operator[] (5 samples, 0.02%)</title><rect x="426.6" y="629" width="0.3" height="15.0" fill="rgb(209,94,43)" rx="2" ry="2" />
<text  x="429.60" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (23 samples, 0.11%)</title><rect x="92.2" y="901" width="1.4" height="15.0" fill="rgb(222,7,37)" rx="2" ry="2" />
<text  x="95.21" y="911.5" ></text>
</g>
<g >
<title>std::min&lt;int&gt; (72 samples, 0.36%)</title><rect x="536.8" y="645" width="4.2" height="15.0" fill="rgb(243,117,7)" rx="2" ry="2" />
<text  x="539.75" y="655.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (34 samples, 0.17%)</title><rect x="172.1" y="757" width="2.0" height="15.0" fill="rgb(226,141,35)" rx="2" ry="2" />
<text  x="175.14" y="767.5" ></text>
</g>
<g >
<title>Cache::SystemOrBlack (2 samples, 0.01%)</title><rect x="1179.5" y="741" width="0.1" height="15.0" fill="rgb(230,86,40)" rx="2" ry="2" />
<text  x="1182.53" y="751.5" ></text>
</g>
<g >
<title>operator new (25 samples, 0.12%)</title><rect x="158.8" y="549" width="1.5" height="15.0" fill="rgb(219,54,21)" rx="2" ry="2" />
<text  x="161.79" y="559.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::get (3 samples, 0.01%)</title><rect x="842.3" y="501" width="0.1" height="15.0" fill="rgb(241,71,48)" rx="2" ry="2" />
<text  x="845.26" y="511.5" ></text>
</g>
<g >
<title>operator new (105 samples, 0.52%)</title><rect x="962.4" y="629" width="6.2" height="15.0" fill="rgb(232,170,9)" rx="2" ry="2" />
<text  x="965.41" y="639.5" ></text>
</g>
<g >
<title>X11_Pending (9 samples, 0.04%)</title><rect x="1180.5" y="741" width="0.6" height="15.0" fill="rgb(215,132,19)" rx="2" ry="2" />
<text  x="1183.53" y="751.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (15 samples, 0.07%)</title><rect x="890.8" y="165" width="0.9" height="15.0" fill="rgb(220,67,18)" rx="2" ry="2" />
<text  x="893.78" y="175.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="22.6" y="901" width="0.1" height="15.0" fill="rgb(246,219,43)" rx="2" ry="2" />
<text  x="25.59" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (3 samples, 0.01%)</title><rect x="564.2" y="629" width="0.1" height="15.0" fill="rgb(254,93,16)" rx="2" ry="2" />
<text  x="567.16" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_value (4 samples, 0.02%)</title><rect x="709.4" y="485" width="0.2" height="15.0" fill="rgb(247,167,11)" rx="2" ry="2" />
<text  x="712.41" y="495.5" ></text>
</g>
<g >
<title>Game_Picture::ShowParams::~ShowParams (7 samples, 0.03%)</title><rect x="33.1" y="901" width="0.4" height="15.0" fill="rgb(229,146,23)" rx="2" ry="2" />
<text  x="36.11" y="911.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (29 samples, 0.14%)</title><rect x="843.1" y="533" width="1.8" height="15.0" fill="rgb(253,88,15)" rx="2" ry="2" />
<text  x="846.15" y="543.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;int&gt;::shared_ptr (8 samples, 0.04%)</title><rect x="911.7" y="597" width="0.5" height="15.0" fill="rgb(254,9,6)" rx="2" ry="2" />
<text  x="914.72" y="607.5" ></text>
</g>
<g >
<title>Game_Screen::GetTone (28 samples, 0.14%)</title><rect x="831.1" y="533" width="1.7" height="15.0" fill="rgb(227,88,16)" rx="2" ry="2" />
<text  x="834.15" y="543.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (6 samples, 0.03%)</title><rect x="182.4" y="661" width="0.4" height="15.0" fill="rgb(232,209,40)" rx="2" ry="2" />
<text  x="185.43" y="671.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::CommonEvent&gt; (13 samples, 0.06%)</title><rect x="1143.0" y="677" width="0.7" height="15.0" fill="rgb(253,125,48)" rx="2" ry="2" />
<text  x="1145.95" y="687.5" ></text>
</g>
<g >
<title>Game_Player::UpdateScroll (2 samples, 0.01%)</title><rect x="1145.1" y="741" width="0.1" height="15.0" fill="rgb(252,185,13)" rx="2" ry="2" />
<text  x="1148.07" y="751.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (5 samples, 0.02%)</title><rect x="126.9" y="229" width="0.3" height="15.0" fill="rgb(251,101,47)" rx="2" ry="2" />
<text  x="129.91" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (25 samples, 0.12%)</title><rect x="425.1" y="597" width="1.5" height="15.0" fill="rgb(247,32,54)" rx="2" ry="2" />
<text  x="428.13" y="607.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="959.1" y="549" width="0.1" height="15.0" fill="rgb(235,102,27)" rx="2" ry="2" />
<text  x="962.12" y="559.5" ></text>
</g>
<g >
<title>free_unref_page_commit (3 samples, 0.01%)</title><rect x="904.1" y="69" width="0.2" height="15.0" fill="rgb(239,149,52)" rx="2" ry="2" />
<text  x="907.13" y="79.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (2 samples, 0.01%)</title><rect x="665.3" y="581" width="0.1" height="15.0" fill="rgb(227,168,8)" rx="2" ry="2" />
<text  x="668.31" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_valptr (2 samples, 0.01%)</title><rect x="730.7" y="469" width="0.1" height="15.0" fill="rgb(222,162,34)" rx="2" ry="2" />
<text  x="733.70" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::_M_ptr (6 samples, 0.03%)</title><rect x="71.6" y="901" width="0.3" height="15.0" fill="rgb(205,116,0)" rx="2" ry="2" />
<text  x="74.57" y="911.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.04%)</title><rect x="163.3" y="485" width="0.5" height="15.0" fill="rgb(245,47,16)" rx="2" ry="2" />
<text  x="166.26" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (12 samples, 0.06%)</title><rect x="571.4" y="645" width="0.7" height="15.0" fill="rgb(235,125,34)" rx="2" ry="2" />
<text  x="574.39" y="655.5" ></text>
</g>
<g >
<title>page_fault (4 samples, 0.02%)</title><rect x="116.7" y="405" width="0.3" height="15.0" fill="rgb(230,55,27)" rx="2" ry="2" />
<text  x="119.74" y="415.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Set (4 samples, 0.02%)</title><rect x="34.8" y="901" width="0.3" height="15.0" fill="rgb(228,108,9)" rx="2" ry="2" />
<text  x="37.82" y="911.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (46 samples, 0.23%)</title><rect x="126.3" y="437" width="2.7" height="15.0" fill="rgb(225,1,30)" rx="2" ry="2" />
<text  x="129.32" y="447.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (2 samples, 0.01%)</title><rect x="666.5" y="597" width="0.1" height="15.0" fill="rgb(213,89,28)" rx="2" ry="2" />
<text  x="669.48" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::_M_ptr (4 samples, 0.02%)</title><rect x="937.8" y="597" width="0.3" height="15.0" fill="rgb(250,149,10)" rx="2" ry="2" />
<text  x="940.83" y="607.5" ></text>
</g>
<g >
<title>std::bitset&lt;32ul&gt;::count (2 samples, 0.01%)</title><rect x="1142.0" y="725" width="0.1" height="15.0" fill="rgb(247,114,37)" rx="2" ry="2" />
<text  x="1145.01" y="735.5" ></text>
</g>
<g >
<title>Bitmap::Create (71 samples, 0.35%)</title><rect x="126.3" y="677" width="4.2" height="15.0" fill="rgb(213,191,51)" rx="2" ry="2" />
<text  x="129.32" y="687.5" ></text>
</g>
<g >
<title>Color::Color (3 samples, 0.01%)</title><rect x="828.3" y="533" width="0.1" height="15.0" fill="rgb(209,101,10)" rx="2" ry="2" />
<text  x="831.27" y="543.5" ></text>
</g>
<g >
<title>Sprite::SetAngle (2 samples, 0.01%)</title><rect x="934.7" y="629" width="0.1" height="15.0" fill="rgb(210,218,15)" rx="2" ry="2" />
<text  x="937.65" y="639.5" ></text>
</g>
<g >
<title>release_pages (3 samples, 0.01%)</title><rect x="890.4" y="101" width="0.2" height="15.0" fill="rgb(229,167,19)" rx="2" ry="2" />
<text  x="893.43" y="111.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (78 samples, 0.39%)</title><rect x="724.2" y="437" width="4.6" height="15.0" fill="rgb(240,116,51)" rx="2" ry="2" />
<text  x="727.17" y="447.5" ></text>
</g>
<g >
<title>pixman_region32_init (10 samples, 0.05%)</title><rect x="810.7" y="309" width="0.6" height="15.0" fill="rgb(234,179,34)" rx="2" ry="2" />
<text  x="813.74" y="319.5" ></text>
</g>
<g >
<title>Graphics::Draw (17 samples, 0.08%)</title><rect x="182.3" y="789" width="1.0" height="15.0" fill="rgb(247,185,32)" rx="2" ry="2" />
<text  x="185.31" y="799.5" ></text>
</g>
<g >
<title>poll (2 samples, 0.01%)</title><rect x="1180.5" y="693" width="0.1" height="15.0" fill="rgb(233,72,17)" rx="2" ry="2" />
<text  x="1183.53" y="703.5" ></text>
</g>
<g >
<title>Player::Update (7 samples, 0.03%)</title><rect x="130.6" y="869" width="0.4" height="15.0" fill="rgb(220,183,40)" rx="2" ry="2" />
<text  x="133.56" y="879.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (182 samples, 0.91%)</title><rect x="138.0" y="869" width="10.7" height="15.0" fill="rgb(205,133,0)" rx="2" ry="2" />
<text  x="140.97" y="879.5" ></text>
</g>
<g >
<title>__do_page_fault (4 samples, 0.02%)</title><rect x="116.7" y="373" width="0.3" height="15.0" fill="rgb(224,158,16)" rx="2" ry="2" />
<text  x="119.74" y="383.5" ></text>
</g>
<g >
<title>generic_file_read_iter (2 samples, 0.01%)</title><rect x="20.9" y="789" width="0.1" height="15.0" fill="rgb(220,25,40)" rx="2" ry="2" />
<text  x="23.88" y="799.5" ></text>
</g>
<g >
<title>Bitmap::pitch (5 samples, 0.02%)</title><rect x="783.6" y="517" width="0.3" height="15.0" fill="rgb(219,27,10)" rx="2" ry="2" />
<text  x="786.57" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::_Vector_base (7 samples, 0.03%)</title><rect x="822.0" y="357" width="0.4" height="15.0" fill="rgb(253,31,41)" rx="2" ry="2" />
<text  x="825.03" y="367.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (37 samples, 0.18%)</title><rect x="673.6" y="501" width="2.2" height="15.0" fill="rgb(221,71,9)" rx="2" ry="2" />
<text  x="676.60" y="511.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (16,235 samples, 80.91%)</title><rect x="184.5" y="741" width="954.8" height="15.0" fill="rgb(249,201,51)" rx="2" ry="2" />
<text  x="187.54" y="751.5" >Game_CommonEvent::Update</text>
</g>
<g >
<title>__tls_get_addr (7 samples, 0.03%)</title><rect x="782.4" y="469" width="0.4" height="15.0" fill="rgb(224,80,29)" rx="2" ry="2" />
<text  x="785.40" y="479.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (5 samples, 0.02%)</title><rect x="955.6" y="597" width="0.3" height="15.0" fill="rgb(250,5,21)" rx="2" ry="2" />
<text  x="958.59" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (49 samples, 0.24%)</title><rect x="971.1" y="661" width="2.8" height="15.0" fill="rgb(228,74,54)" rx="2" ry="2" />
<text  x="974.05" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (106 samples, 0.53%)</title><rect x="654.9" y="581" width="6.2" height="15.0" fill="rgb(236,214,43)" rx="2" ry="2" />
<text  x="657.90" y="591.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (7 samples, 0.03%)</title><rect x="942.9" y="597" width="0.4" height="15.0" fill="rgb(247,36,32)" rx="2" ry="2" />
<text  x="945.89" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign@plt (4 samples, 0.02%)</title><rect x="968.8" y="645" width="0.2" height="15.0" fill="rgb(215,32,1)" rx="2" ry="2" />
<text  x="971.76" y="655.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::_Vector_impl::~_Vector_impl (2 samples, 0.01%)</title><rect x="59.6" y="901" width="0.2" height="15.0" fill="rgb(226,128,13)" rx="2" ry="2" />
<text  x="62.63" y="911.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandControlVariables (1,520 samples, 7.58%)</title><rect x="469.1" y="677" width="89.4" height="15.0" fill="rgb(224,65,14)" rx="2" ry="2" />
<text  x="472.06" y="687.5" >Game_Inter..</text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (71 samples, 0.35%)</title><rect x="685.1" y="485" width="4.2" height="15.0" fill="rgb(229,133,37)" rx="2" ry="2" />
<text  x="688.13" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (21 samples, 0.10%)</title><rect x="443.8" y="613" width="1.2" height="15.0" fill="rgb(222,125,28)" rx="2" ry="2" />
<text  x="446.77" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator bool (4 samples, 0.02%)</title><rect x="847.5" y="533" width="0.2" height="15.0" fill="rgb(243,182,30)" rx="2" ry="2" />
<text  x="850.50" y="543.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_ptr (12 samples, 0.06%)</title><rect x="803.1" y="437" width="0.7" height="15.0" fill="rgb(247,151,6)" rx="2" ry="2" />
<text  x="806.10" y="447.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (13 samples, 0.06%)</title><rect x="1181.1" y="517" width="0.7" height="15.0" fill="rgb(245,193,49)" rx="2" ry="2" />
<text  x="1184.06" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (11 samples, 0.05%)</title><rect x="846.9" y="533" width="0.6" height="15.0" fill="rgb(250,181,29)" rx="2" ry="2" />
<text  x="849.85" y="543.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="130.6" y="501" width="0.1" height="15.0" fill="rgb(251,54,20)" rx="2" ry="2" />
<text  x="133.56" y="511.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (16 samples, 0.08%)</title><rect x="1146.7" y="725" width="0.9" height="15.0" fill="rgb(247,85,14)" rx="2" ry="2" />
<text  x="1149.66" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::basic_string (3 samples, 0.01%)</title><rect x="958.9" y="629" width="0.2" height="15.0" fill="rgb(220,72,28)" rx="2" ry="2" />
<text  x="961.88" y="639.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="1180.1" y="677" width="0.1" height="15.0" fill="rgb(229,94,28)" rx="2" ry="2" />
<text  x="1183.06" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (3 samples, 0.01%)</title><rect x="180.5" y="901" width="0.2" height="15.0" fill="rgb(231,95,54)" rx="2" ry="2" />
<text  x="183.55" y="911.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (44 samples, 0.22%)</title><rect x="175.3" y="533" width="2.5" height="15.0" fill="rgb(233,26,39)" rx="2" ry="2" />
<text  x="178.25" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (3 samples, 0.01%)</title><rect x="675.1" y="469" width="0.1" height="15.0" fill="rgb(231,73,35)" rx="2" ry="2" />
<text  x="678.07" y="479.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (4 samples, 0.02%)</title><rect x="23.2" y="901" width="0.2" height="15.0" fill="rgb(234,10,30)" rx="2" ry="2" />
<text  x="26.17" y="911.5" ></text>
</g>
<g >
<title>operator delete (35 samples, 0.17%)</title><rect x="143.7" y="549" width="2.1" height="15.0" fill="rgb(215,15,54)" rx="2" ry="2" />
<text  x="146.73" y="559.5" ></text>
</g>
<g >
<title>std::map&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, (anonymous namespace)::CacheItem, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (15 samples, 0.07%)</title><rect x="138.8" y="613" width="0.9" height="15.0" fill="rgb(207,192,5)" rx="2" ry="2" />
<text  x="141.79" y="623.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.01%)</title><rect x="867.7" y="325" width="0.1" height="15.0" fill="rgb(230,16,20)" rx="2" ry="2" />
<text  x="870.73" y="335.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (59 samples, 0.29%)</title><rect x="633.1" y="501" width="3.5" height="15.0" fill="rgb(221,70,16)" rx="2" ry="2" />
<text  x="636.14" y="511.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::swap (20 samples, 0.10%)</title><rect x="945.6" y="629" width="1.2" height="15.0" fill="rgb(237,175,2)" rx="2" ry="2" />
<text  x="948.65" y="639.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandConditionalBranch (4 samples, 0.02%)</title><rect x="26.5" y="901" width="0.3" height="15.0" fill="rgb(239,153,17)" rx="2" ry="2" />
<text  x="29.53" y="911.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (11 samples, 0.05%)</title><rect x="915.6" y="613" width="0.6" height="15.0" fill="rgb(215,104,6)" rx="2" ry="2" />
<text  x="918.60" y="623.5" ></text>
</g>
<g >
<title>do_page_fault (16 samples, 0.08%)</title><rect x="127.8" y="357" width="0.9" height="15.0" fill="rgb(210,181,5)" rx="2" ry="2" />
<text  x="130.79" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (88 samples, 0.44%)</title><rect x="1010.9" y="645" width="5.1" height="15.0" fill="rgb(237,156,38)" rx="2" ry="2" />
<text  x="1013.87" y="655.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (3 samples, 0.01%)</title><rect x="128.3" y="245" width="0.1" height="15.0" fill="rgb(233,164,19)" rx="2" ry="2" />
<text  x="131.26" y="255.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator bool (6 samples, 0.03%)</title><rect x="703.1" y="533" width="0.4" height="15.0" fill="rgb(212,216,27)" rx="2" ry="2" />
<text  x="706.12" y="543.5" ></text>
</g>
<g >
<title>Sprite::SetTone (11 samples, 0.05%)</title><rect x="934.9" y="629" width="0.7" height="15.0" fill="rgb(236,198,3)" rx="2" ry="2" />
<text  x="937.95" y="639.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="959.1" y="565" width="0.1" height="15.0" fill="rgb(234,202,44)" rx="2" ry="2" />
<text  x="962.12" y="575.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (4 samples, 0.02%)</title><rect x="1137.5" y="677" width="0.2" height="15.0" fill="rgb(250,201,50)" rx="2" ry="2" />
<text  x="1140.48" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.02%)</title><rect x="160.3" y="517" width="0.3" height="15.0" fill="rgb(214,63,38)" rx="2" ry="2" />
<text  x="163.26" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator* (6 samples, 0.03%)</title><rect x="673.0" y="501" width="0.4" height="15.0" fill="rgb(225,201,5)" rx="2" ry="2" />
<text  x="676.01" y="511.5" ></text>
</g>
<g >
<title>Sprite::SetZoomX (3 samples, 0.01%)</title><rect x="1167.6" y="709" width="0.2" height="15.0" fill="rgb(220,119,49)" rx="2" ry="2" />
<text  x="1170.59" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (4 samples, 0.02%)</title><rect x="974.8" y="613" width="0.3" height="15.0" fill="rgb(231,75,15)" rx="2" ry="2" />
<text  x="977.82" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (22 samples, 0.11%)</title><rect x="131.4" y="469" width="1.3" height="15.0" fill="rgb(242,22,6)" rx="2" ry="2" />
<text  x="134.38" y="479.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (13 samples, 0.06%)</title><rect x="1181.1" y="533" width="0.7" height="15.0" fill="rgb(227,220,36)" rx="2" ry="2" />
<text  x="1184.06" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (2 samples, 0.01%)</title><rect x="417.1" y="613" width="0.1" height="15.0" fill="rgb(243,141,12)" rx="2" ry="2" />
<text  x="420.08" y="623.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (8 samples, 0.04%)</title><rect x="836.7" y="469" width="0.4" height="15.0" fill="rgb(248,8,23)" rx="2" ry="2" />
<text  x="839.68" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (2 samples, 0.01%)</title><rect x="562.6" y="581" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="565.57" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.01%)</title><rect x="103.7" y="901" width="0.2" height="15.0" fill="rgb(219,131,23)" rx="2" ry="2" />
<text  x="106.74" y="911.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (16,934 samples, 84.40%)</title><rect x="184.3" y="789" width="995.9" height="15.0" fill="rgb(242,96,42)" rx="2" ry="2" />
<text  x="187.31" y="799.5" >Scene_Map::UpdateStage1</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (8 samples, 0.04%)</title><rect x="172.1" y="469" width="0.5" height="15.0" fill="rgb(221,155,40)" rx="2" ry="2" />
<text  x="175.14" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (86 samples, 0.43%)</title><rect x="132.9" y="549" width="5.1" height="15.0" fill="rgb(214,111,26)" rx="2" ry="2" />
<text  x="135.91" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::operator* (7 samples, 0.03%)</title><rect x="813.6" y="341" width="0.4" height="15.0" fill="rgb(249,97,31)" rx="2" ry="2" />
<text  x="816.56" y="351.5" ></text>
</g>
<g >
<title>std::map&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, (anonymous namespace)::CacheItem, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (550 samples, 2.74%)</title><rect x="703.8" y="533" width="32.3" height="15.0" fill="rgb(242,191,27)" rx="2" ry="2" />
<text  x="706.77" y="543.5" >st..</text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (7 samples, 0.03%)</title><rect x="130.6" y="725" width="0.4" height="15.0" fill="rgb(248,215,33)" rx="2" ry="2" />
<text  x="133.56" y="735.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (2 samples, 0.01%)</title><rect x="108.7" y="901" width="0.1" height="15.0" fill="rgb(215,189,24)" rx="2" ry="2" />
<text  x="111.68" y="911.5" ></text>
</g>
<g >
<title>Bitmap::Create (46 samples, 0.23%)</title><rect x="160.6" y="629" width="2.7" height="15.0" fill="rgb(240,56,39)" rx="2" ry="2" />
<text  x="163.55" y="639.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (119 samples, 0.59%)</title><rect x="131.0" y="821" width="7.0" height="15.0" fill="rgb(240,29,41)" rx="2" ry="2" />
<text  x="133.97" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (2 samples, 0.01%)</title><rect x="182.0" y="917" width="0.1" height="15.0" fill="rgb(240,109,48)" rx="2" ry="2" />
<text  x="185.02" y="927.5" ></text>
</g>
<g >
<title>Game_Picture::Show (71 samples, 0.35%)</title><rect x="126.3" y="805" width="4.2" height="15.0" fill="rgb(242,131,23)" rx="2" ry="2" />
<text  x="129.32" y="815.5" ></text>
</g>
<g >
<title>operator!= (7 samples, 0.03%)</title><rect x="1164.7" y="693" width="0.4" height="15.0" fill="rgb(248,214,40)" rx="2" ry="2" />
<text  x="1167.71" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (10 samples, 0.05%)</title><rect x="1123.5" y="709" width="0.6" height="15.0" fill="rgb(211,130,5)" rx="2" ry="2" />
<text  x="1126.55" y="719.5" ></text>
</g>
<g >
<title>Sprite::SetY (3 samples, 0.01%)</title><rect x="935.8" y="629" width="0.2" height="15.0" fill="rgb(236,1,28)" rx="2" ry="2" />
<text  x="938.83" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.01%)</title><rect x="955.9" y="645" width="0.1" height="15.0" fill="rgb(228,64,10)" rx="2" ry="2" />
<text  x="958.88" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (2 samples, 0.01%)</title><rect x="949.1" y="645" width="0.1" height="15.0" fill="rgb(239,44,25)" rx="2" ry="2" />
<text  x="952.12" y="655.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingBackgroundExecution (81 samples, 0.40%)</title><rect x="185.1" y="725" width="4.8" height="15.0" fill="rgb(235,224,46)" rx="2" ry="2" />
<text  x="188.13" y="735.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (3 samples, 0.01%)</title><rect x="148.8" y="581" width="0.2" height="15.0" fill="rgb(211,169,43)" rx="2" ry="2" />
<text  x="151.85" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (9 samples, 0.04%)</title><rect x="424.6" y="581" width="0.5" height="15.0" fill="rgb(207,136,52)" rx="2" ry="2" />
<text  x="427.60" y="591.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (482 samples, 2.40%)</title><rect x="671.6" y="533" width="28.3" height="15.0" fill="rgb(214,174,27)" rx="2" ry="2" />
<text  x="674.60" y="543.5" >As..</text>
</g>
<g >
<title>std::_Function_base::_M_empty (3 samples, 0.01%)</title><rect x="665.6" y="597" width="0.2" height="15.0" fill="rgb(232,77,8)" rx="2" ry="2" />
<text  x="668.60" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (3 samples, 0.01%)</title><rect x="560.0" y="597" width="0.2" height="15.0" fill="rgb(208,217,44)" rx="2" ry="2" />
<text  x="562.98" y="607.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.01%)</title><rect x="959.6" y="629" width="0.2" height="15.0" fill="rgb(238,177,1)" rx="2" ry="2" />
<text  x="962.65" y="639.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_manager (13 samples, 0.06%)</title><rect x="918.0" y="597" width="0.8" height="15.0" fill="rgb(252,112,32)" rx="2" ry="2" />
<text  x="921.01" y="607.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (12 samples, 0.06%)</title><rect x="126.8" y="325" width="0.7" height="15.0" fill="rgb(227,183,39)" rx="2" ry="2" />
<text  x="129.79" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator bool (8 samples, 0.04%)</title><rect x="1177.6" y="741" width="0.5" height="15.0" fill="rgb(246,11,14)" rx="2" ry="2" />
<text  x="1180.59" y="751.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::reset (3 samples, 0.01%)</title><rect x="67.9" y="901" width="0.1" height="15.0" fill="rgb(254,211,21)" rx="2" ry="2" />
<text  x="70.87" y="911.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (6 samples, 0.03%)</title><rect x="910.6" y="517" width="0.4" height="15.0" fill="rgb(207,143,34)" rx="2" ry="2" />
<text  x="913.60" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::operator bool (17 samples, 0.08%)</title><rect x="913.2" y="597" width="1.0" height="15.0" fill="rgb(246,36,53)" rx="2" ry="2" />
<text  x="916.19" y="607.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (56 samples, 0.28%)</title><rect x="163.8" y="597" width="3.3" height="15.0" fill="rgb(238,136,35)" rx="2" ry="2" />
<text  x="166.79" y="607.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (7 samples, 0.03%)</title><rect x="837.1" y="469" width="0.5" height="15.0" fill="rgb(250,146,25)" rx="2" ry="2" />
<text  x="840.15" y="479.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (297 samples, 1.48%)</title><rect x="108.9" y="485" width="17.4" height="15.0" fill="rgb(217,36,44)" rx="2" ry="2" />
<text  x="111.86" y="495.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (297 samples, 1.48%)</title><rect x="108.9" y="581" width="17.4" height="15.0" fill="rgb(246,49,40)" rx="2" ry="2" />
<text  x="111.86" y="591.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;*, std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; (5 samples, 0.02%)</title><rect x="905.7" y="389" width="0.3" height="15.0" fill="rgb(242,84,48)" rx="2" ry="2" />
<text  x="908.72" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (29 samples, 0.14%)</title><rect x="131.0" y="517" width="1.7" height="15.0" fill="rgb(236,54,6)" rx="2" ry="2" />
<text  x="133.97" y="527.5" ></text>
</g>
<g >
<title>malloc (81 samples, 0.40%)</title><rect x="121.6" y="453" width="4.7" height="15.0" fill="rgb(206,62,0)" rx="2" ry="2" />
<text  x="124.56" y="463.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (98 samples, 0.49%)</title><rect x="815.2" y="341" width="5.7" height="15.0" fill="rgb(249,101,46)" rx="2" ry="2" />
<text  x="818.15" y="351.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (3 samples, 0.01%)</title><rect x="904.7" y="341" width="0.2" height="15.0" fill="rgb(209,168,41)" rx="2" ry="2" />
<text  x="907.72" y="351.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (13 samples, 0.06%)</title><rect x="698.8" y="469" width="0.7" height="15.0" fill="rgb(220,128,0)" rx="2" ry="2" />
<text  x="701.77" y="479.5" ></text>
</g>
<g >
<title>__GI___nanosleep (14 samples, 0.07%)</title><rect x="1181.1" y="725" width="0.8" height="15.0" fill="rgb(205,113,53)" rx="2" ry="2" />
<text  x="1184.06" y="735.5" ></text>
</g>
<g >
<title>Tone::Tone (4 samples, 0.02%)</title><rect x="1167.8" y="709" width="0.3" height="15.0" fill="rgb(205,114,34)" rx="2" ry="2" />
<text  x="1170.83" y="719.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (9 samples, 0.04%)</title><rect x="604.6" y="565" width="0.5" height="15.0" fill="rgb(218,50,41)" rx="2" ry="2" />
<text  x="607.62" y="575.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (4 samples, 0.02%)</title><rect x="1137.5" y="661" width="0.2" height="15.0" fill="rgb(254,29,43)" rx="2" ry="2" />
<text  x="1140.48" y="671.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, true&gt; (25 samples, 0.12%)</title><rect x="158.8" y="629" width="1.5" height="15.0" fill="rgb(222,73,19)" rx="2" ry="2" />
<text  x="161.79" y="639.5" ></text>
</g>
<g >
<title>Bitmap::Create (49 samples, 0.24%)</title><rect x="145.8" y="613" width="2.9" height="15.0" fill="rgb(240,44,32)" rx="2" ry="2" />
<text  x="148.79" y="623.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (6 samples, 0.03%)</title><rect x="937.2" y="629" width="0.4" height="15.0" fill="rgb(215,45,38)" rx="2" ry="2" />
<text  x="940.24" y="639.5" ></text>
</g>
<g >
<title>Bitmap::find_format (153 samples, 0.76%)</title><rect x="811.9" y="373" width="9.0" height="15.0" fill="rgb(206,32,30)" rx="2" ry="2" />
<text  x="814.92" y="383.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, true&gt; (93 samples, 0.46%)</title><rect x="740.4" y="533" width="5.5" height="15.0" fill="rgb(234,14,13)" rx="2" ry="2" />
<text  x="743.41" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (24 samples, 0.12%)</title><rect x="423.7" y="597" width="1.4" height="15.0" fill="rgb(221,122,0)" rx="2" ry="2" />
<text  x="426.72" y="607.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (3 samples, 0.01%)</title><rect x="959.2" y="629" width="0.2" height="15.0" fill="rgb(229,207,43)" rx="2" ry="2" />
<text  x="962.23" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::operator* (3 samples, 0.01%)</title><rect x="1141.3" y="741" width="0.2" height="15.0" fill="rgb(227,118,36)" rx="2" ry="2" />
<text  x="1144.31" y="751.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (12 samples, 0.06%)</title><rect x="646.0" y="501" width="0.7" height="15.0" fill="rgb(250,188,30)" rx="2" ry="2" />
<text  x="648.96" y="511.5" ></text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (12 samples, 0.06%)</title><rect x="828.9" y="533" width="0.7" height="15.0" fill="rgb(226,200,18)" rx="2" ry="2" />
<text  x="831.91" y="543.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (7 samples, 0.03%)</title><rect x="893.2" y="293" width="0.4" height="15.0" fill="rgb(222,70,20)" rx="2" ry="2" />
<text  x="896.19" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (2 samples, 0.01%)</title><rect x="847.6" y="517" width="0.1" height="15.0" fill="rgb(218,196,52)" rx="2" ry="2" />
<text  x="850.61" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (297 samples, 1.48%)</title><rect x="108.9" y="549" width="17.4" height="15.0" fill="rgb(222,17,10)" rx="2" ry="2" />
<text  x="111.86" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (8 samples, 0.04%)</title><rect x="559.7" y="613" width="0.5" height="15.0" fill="rgb(209,127,31)" rx="2" ry="2" />
<text  x="562.69" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (2 samples, 0.01%)</title><rect x="443.5" y="613" width="0.1" height="15.0" fill="rgb(207,70,12)" rx="2" ry="2" />
<text  x="446.48" y="623.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_base (5 samples, 0.02%)</title><rect x="804.4" y="421" width="0.3" height="15.0" fill="rgb(213,203,30)" rx="2" ry="2" />
<text  x="807.45" y="431.5" ></text>
</g>
<g >
<title>malloc@plt (2 samples, 0.01%)</title><rect x="811.4" y="325" width="0.2" height="15.0" fill="rgb(223,82,11)" rx="2" ry="2" />
<text  x="814.45" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt;::allocator (2 samples, 0.01%)</title><rect x="822.3" y="325" width="0.1" height="15.0" fill="rgb(237,179,49)" rx="2" ry="2" />
<text  x="825.33" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (11 samples, 0.05%)</title><rect x="985.2" y="645" width="0.7" height="15.0" fill="rgb(254,106,9)" rx="2" ry="2" />
<text  x="988.23" y="655.5" ></text>
</g>
<g >
<title>std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (6 samples, 0.03%)</title><rect x="82.3" y="901" width="0.4" height="15.0" fill="rgb(253,44,29)" rx="2" ry="2" />
<text  x="85.33" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (68 samples, 0.34%)</title><rect x="509.0" y="645" width="4.0" height="15.0" fill="rgb(228,183,38)" rx="2" ry="2" />
<text  x="511.99" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;1, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt;::_S_cget (2 samples, 0.01%)</title><rect x="636.9" y="549" width="0.1" height="15.0" fill="rgb(230,208,17)" rx="2" ry="2" />
<text  x="639.90" y="559.5" ></text>
</g>
<g >
<title>std::move&lt;std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;&amp;&gt; (6 samples, 0.03%)</title><rect x="82.7" y="901" width="0.3" height="15.0" fill="rgb(233,100,4)" rx="2" ry="2" />
<text  x="85.69" y="911.5" ></text>
</g>
<g >
<title>new_sync_read (3 samples, 0.01%)</title><rect x="20.9" y="821" width="0.2" height="15.0" fill="rgb(249,184,51)" rx="2" ry="2" />
<text  x="23.88" y="831.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (3 samples, 0.01%)</title><rect x="1097.3" y="693" width="0.2" height="15.0" fill="rgb(237,155,20)" rx="2" ry="2" />
<text  x="1100.32" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::size (3 samples, 0.01%)</title><rect x="462.4" y="645" width="0.2" height="15.0" fill="rgb(240,178,6)" rx="2" ry="2" />
<text  x="465.42" y="655.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (297 samples, 1.48%)</title><rect x="108.9" y="805" width="17.4" height="15.0" fill="rgb(230,76,4)" rx="2" ry="2" />
<text  x="111.86" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_construct_aux&lt;char32_t const*&gt; (3 samples, 0.01%)</title><rect x="958.9" y="597" width="0.2" height="15.0" fill="rgb(222,33,28)" rx="2" ry="2" />
<text  x="961.88" y="607.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::~_Head_base (86 samples, 0.43%)</title><rect x="132.9" y="517" width="5.1" height="15.0" fill="rgb(220,72,14)" rx="2" ry="2" />
<text  x="135.91" y="527.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (138 samples, 0.69%)</title><rect x="442.4" y="645" width="8.1" height="15.0" fill="rgb(217,87,37)" rx="2" ry="2" />
<text  x="445.36" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (4 samples, 0.02%)</title><rect x="654.0" y="597" width="0.2" height="15.0" fill="rgb(205,218,34)" rx="2" ry="2" />
<text  x="656.96" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::operator++ (2 samples, 0.01%)</title><rect x="1141.5" y="741" width="0.1" height="15.0" fill="rgb(232,102,24)" rx="2" ry="2" />
<text  x="1144.48" y="751.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (2 samples, 0.01%)</title><rect x="938.1" y="597" width="0.1" height="15.0" fill="rgb(235,198,21)" rx="2" ry="2" />
<text  x="941.06" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (200 samples, 1.00%)</title><rect x="302.9" y="677" width="11.8" height="15.0" fill="rgb(227,229,12)" rx="2" ry="2" />
<text  x="305.93" y="687.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (55 samples, 0.27%)</title><rect x="17.3" y="709" width="3.2" height="15.0" fill="rgb(252,137,51)" rx="2" ry="2" />
<text  x="20.29" y="719.5" ></text>
</g>
<g >
<title>do_syscall_64 (28 samples, 0.14%)</title><rect x="890.7" y="245" width="1.6" height="15.0" fill="rgb(208,113,15)" rx="2" ry="2" />
<text  x="893.66" y="255.5" ></text>
</g>
<g >
<title>unmap_page_range (10 samples, 0.05%)</title><rect x="891.7" y="133" width="0.6" height="15.0" fill="rgb(215,100,29)" rx="2" ry="2" />
<text  x="894.66" y="143.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (31 samples, 0.15%)</title><rect x="165.3" y="437" width="1.8" height="15.0" fill="rgb(252,106,46)" rx="2" ry="2" />
<text  x="168.26" y="447.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (235 samples, 1.17%)</title><rect x="149.4" y="837" width="13.9" height="15.0" fill="rgb(206,59,22)" rx="2" ry="2" />
<text  x="152.44" y="847.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (17 samples, 0.08%)</title><rect x="728.8" y="453" width="1.0" height="15.0" fill="rgb(225,8,30)" rx="2" ry="2" />
<text  x="731.76" y="463.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (49 samples, 0.24%)</title><rect x="145.8" y="629" width="2.9" height="15.0" fill="rgb(233,136,42)" rx="2" ry="2" />
<text  x="148.79" y="639.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="1182.6" y="901" width="0.2" height="15.0" fill="rgb(252,60,44)" rx="2" ry="2" />
<text  x="1185.65" y="911.5" ></text>
</g>
<g >
<title>memcpy@plt (2 samples, 0.01%)</title><rect x="648.7" y="549" width="0.1" height="15.0" fill="rgb(234,225,2)" rx="2" ry="2" />
<text  x="651.72" y="559.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (182 samples, 0.91%)</title><rect x="138.0" y="837" width="10.7" height="15.0" fill="rgb(245,167,28)" rx="2" ry="2" />
<text  x="140.97" y="847.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (9 samples, 0.04%)</title><rect x="908.7" y="485" width="0.5" height="15.0" fill="rgb(237,122,1)" rx="2" ry="2" />
<text  x="911.66" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (193 samples, 0.96%)</title><rect x="110.2" y="437" width="11.4" height="15.0" fill="rgb(254,78,15)" rx="2" ry="2" />
<text  x="113.21" y="447.5" ></text>
</g>
<g >
<title>Utils::EncodeUTF (3 samples, 0.01%)</title><rect x="958.7" y="645" width="0.2" height="15.0" fill="rgb(244,190,9)" rx="2" ry="2" />
<text  x="961.70" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_left (8 samples, 0.04%)</title><rect x="708.5" y="485" width="0.4" height="15.0" fill="rgb(210,19,8)" rx="2" ry="2" />
<text  x="711.47" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (2 samples, 0.01%)</title><rect x="931.5" y="597" width="0.2" height="15.0" fill="rgb(245,100,45)" rx="2" ry="2" />
<text  x="934.54" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::end (6 samples, 0.03%)</title><rect x="731.0" y="501" width="0.3" height="15.0" fill="rgb(239,229,30)" rx="2" ry="2" />
<text  x="734.00" y="511.5" ></text>
</g>
<g >
<title>Scene::MainFunction (34 samples, 0.17%)</title><rect x="172.1" y="837" width="2.0" height="15.0" fill="rgb(224,165,30)" rx="2" ry="2" />
<text  x="175.14" y="847.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::operator* (2 samples, 0.01%)</title><rect x="812.7" y="357" width="0.1" height="15.0" fill="rgb(232,60,20)" rx="2" ry="2" />
<text  x="815.68" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (10 samples, 0.05%)</title><rect x="138.2" y="533" width="0.6" height="15.0" fill="rgb(217,11,17)" rx="2" ry="2" />
<text  x="141.20" y="543.5" ></text>
</g>
<g >
<title>Scene::GetRequestedScene (76 samples, 0.38%)</title><rect x="1115.5" y="693" width="4.5" height="15.0" fill="rgb(244,93,4)" rx="2" ry="2" />
<text  x="1118.49" y="703.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (20 samples, 0.10%)</title><rect x="850.9" y="453" width="1.2" height="15.0" fill="rgb(218,170,15)" rx="2" ry="2" />
<text  x="853.91" y="463.5" ></text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (10 samples, 0.05%)</title><rect x="1147.6" y="725" width="0.6" height="15.0" fill="rgb(211,27,44)" rx="2" ry="2" />
<text  x="1150.60" y="735.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (56 samples, 0.28%)</title><rect x="163.8" y="581" width="3.3" height="15.0" fill="rgb(240,27,8)" rx="2" ry="2" />
<text  x="166.79" y="591.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (13 samples, 0.06%)</title><rect x="1181.1" y="581" width="0.7" height="15.0" fill="rgb(251,137,28)" rx="2" ry="2" />
<text  x="1184.06" y="591.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash (10 samples, 0.05%)</title><rect x="698.9" y="453" width="0.6" height="15.0" fill="rgb(210,49,27)" rx="2" ry="2" />
<text  x="701.89" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (13 samples, 0.06%)</title><rect x="96.6" y="901" width="0.8" height="15.0" fill="rgb(214,136,25)" rx="2" ry="2" />
<text  x="99.63" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.01%)</title><rect x="60.8" y="901" width="0.1" height="15.0" fill="rgb(205,197,14)" rx="2" ry="2" />
<text  x="63.81" y="911.5" ></text>
</g>
<g >
<title>do_syscall_64 (13 samples, 0.06%)</title><rect x="126.7" y="357" width="0.8" height="15.0" fill="rgb(229,174,35)" rx="2" ry="2" />
<text  x="129.74" y="367.5" ></text>
</g>
<g >
<title>Sprite::Flash (27 samples, 0.13%)</title><rect x="833.4" y="533" width="1.6" height="15.0" fill="rgb(233,93,28)" rx="2" ry="2" />
<text  x="836.38" y="543.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (4 samples, 0.02%)</title><rect x="1159.9" y="693" width="0.3" height="15.0" fill="rgb(233,66,13)" rx="2" ry="2" />
<text  x="1162.95" y="703.5" ></text>
</g>
<g >
<title>Sdl2Ui::GetTicks (2 samples, 0.01%)</title><rect x="1180.2" y="805" width="0.1" height="15.0" fill="rgb(205,149,39)" rx="2" ry="2" />
<text  x="1183.18" y="815.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (56 samples, 0.28%)</title><rect x="163.8" y="613" width="3.3" height="15.0" fill="rgb(245,135,32)" rx="2" ry="2" />
<text  x="166.79" y="623.5" ></text>
</g>
<g >
<title>Game_Map::IsAnyEventStarting (42 samples, 0.21%)</title><rect x="1142.4" y="709" width="2.4" height="15.0" fill="rgb(249,10,3)" rx="2" ry="2" />
<text  x="1145.36" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::operator (2 samples, 0.01%)</title><rect x="179.0" y="901" width="0.1" height="15.0" fill="rgb(209,179,54)" rx="2" ry="2" />
<text  x="181.96" y="911.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="138.0" y="501" width="0.2" height="15.0" fill="rgb(231,11,29)" rx="2" ry="2" />
<text  x="140.97" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::size (2 samples, 0.01%)</title><rect x="94.7" y="901" width="0.1" height="15.0" fill="rgb(225,84,23)" rx="2" ry="2" />
<text  x="97.68" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (22 samples, 0.11%)</title><rect x="301.4" y="677" width="1.3" height="15.0" fill="rgb(245,157,14)" rx="2" ry="2" />
<text  x="304.40" y="687.5" ></text>
</g>
<g >
<title>pixman_region32_init (2 samples, 0.01%)</title><rect x="103.0" y="901" width="0.1" height="15.0" fill="rgb(251,172,5)" rx="2" ry="2" />
<text  x="105.98" y="911.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (71 samples, 0.35%)</title><rect x="126.3" y="629" width="4.2" height="15.0" fill="rgb(230,110,32)" rx="2" ry="2" />
<text  x="129.32" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (7 samples, 0.03%)</title><rect x="949.2" y="645" width="0.4" height="15.0" fill="rgb(237,49,53)" rx="2" ry="2" />
<text  x="952.24" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator (4 samples, 0.02%)</title><rect x="1177.4" y="741" width="0.2" height="15.0" fill="rgb(220,20,9)" rx="2" ry="2" />
<text  x="1180.36" y="751.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (31 samples, 0.15%)</title><rect x="114.7" y="405" width="1.8" height="15.0" fill="rgb(220,17,28)" rx="2" ry="2" />
<text  x="117.68" y="415.5" ></text>
</g>
<g >
<title>Player::MainLoop (119 samples, 0.59%)</title><rect x="131.0" y="885" width="7.0" height="15.0" fill="rgb(206,125,12)" rx="2" ry="2" />
<text  x="133.97" y="895.5" ></text>
</g>
<g >
<title>pixman_region32_fini (2 samples, 0.01%)</title><rect x="782.8" y="501" width="0.1" height="15.0" fill="rgb(249,56,13)" rx="2" ry="2" />
<text  x="785.81" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (3 samples, 0.01%)</title><rect x="148.8" y="533" width="0.2" height="15.0" fill="rgb(235,121,2)" rx="2" ry="2" />
<text  x="151.85" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::get (2 samples, 0.01%)</title><rect x="1137.1" y="725" width="0.1" height="15.0" fill="rgb(236,16,25)" rx="2" ry="2" />
<text  x="1140.13" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (83 samples, 0.41%)</title><rect x="1072.0" y="661" width="4.9" height="15.0" fill="rgb(219,63,10)" rx="2" ry="2" />
<text  x="1075.03" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_addr (4 samples, 0.02%)</title><rect x="707.9" y="421" width="0.2" height="15.0" fill="rgb(229,131,25)" rx="2" ry="2" />
<text  x="710.88" y="431.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (4 samples, 0.02%)</title><rect x="163.5" y="341" width="0.2" height="15.0" fill="rgb(207,195,38)" rx="2" ry="2" />
<text  x="166.49" y="351.5" ></text>
</g>
<g >
<title>Game_Picture::SetNonEffectParams (21 samples, 0.10%)</title><rect x="921.7" y="645" width="1.2" height="15.0" fill="rgb(206,35,28)" rx="2" ry="2" />
<text  x="924.71" y="655.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (10 samples, 0.05%)</title><rect x="148.8" y="757" width="0.6" height="15.0" fill="rgb(241,199,37)" rx="2" ry="2" />
<text  x="151.85" y="767.5" ></text>
</g>
<g >
<title>Bitmap::Create (56 samples, 0.28%)</title><rect x="163.8" y="645" width="3.3" height="15.0" fill="rgb(222,145,22)" rx="2" ry="2" />
<text  x="166.79" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::push_back (23 samples, 0.11%)</title><rect x="957.4" y="629" width="1.3" height="15.0" fill="rgb(239,127,18)" rx="2" ry="2" />
<text  x="960.35" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (7 samples, 0.03%)</title><rect x="607.1" y="581" width="0.5" height="15.0" fill="rgb(210,32,30)" rx="2" ry="2" />
<text  x="610.15" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="664.9" y="517" width="0.1" height="15.0" fill="rgb(252,167,22)" rx="2" ry="2" />
<text  x="667.90" y="527.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (5 samples, 0.02%)</title><rect x="1180.8" y="677" width="0.3" height="15.0" fill="rgb(233,9,32)" rx="2" ry="2" />
<text  x="1183.77" y="687.5" ></text>
</g>
<g >
<title>native_write_msr (13 samples, 0.06%)</title><rect x="1181.1" y="501" width="0.7" height="15.0" fill="rgb(216,116,44)" rx="2" ry="2" />
<text  x="1184.06" y="511.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (9 samples, 0.04%)</title><rect x="697.7" y="405" width="0.5" height="15.0" fill="rgb(239,75,54)" rx="2" ry="2" />
<text  x="700.65" y="415.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (48 samples, 0.24%)</title><rect x="633.8" y="485" width="2.8" height="15.0" fill="rgb(210,121,8)" rx="2" ry="2" />
<text  x="636.79" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (46 samples, 0.23%)</title><rect x="126.3" y="405" width="2.7" height="15.0" fill="rgb(246,208,46)" rx="2" ry="2" />
<text  x="129.32" y="415.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="959.7" y="581" width="0.1" height="15.0" fill="rgb(251,151,24)" rx="2" ry="2" />
<text  x="962.70" y="591.5" ></text>
</g>
<g >
<title>strlen (2 samples, 0.01%)</title><rect x="606.5" y="565" width="0.1" height="15.0" fill="rgb(211,11,30)" rx="2" ry="2" />
<text  x="609.50" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (7 samples, 0.03%)</title><rect x="139.3" y="517" width="0.4" height="15.0" fill="rgb(238,119,3)" rx="2" ry="2" />
<text  x="142.26" y="527.5" ></text>
</g>
<g >
<title>Window_Message::Update (11 samples, 0.05%)</title><rect x="1179.5" y="773" width="0.7" height="15.0" fill="rgb(215,89,8)" rx="2" ry="2" />
<text  x="1182.53" y="783.5" ></text>
</g>
<g >
<title>unmap_page_range (4 samples, 0.02%)</title><rect x="145.4" y="309" width="0.3" height="15.0" fill="rgb(211,133,25)" rx="2" ry="2" />
<text  x="148.44" y="319.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (23 samples, 0.11%)</title><rect x="784.7" y="501" width="1.4" height="15.0" fill="rgb(248,135,4)" rx="2" ry="2" />
<text  x="787.75" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (9 samples, 0.04%)</title><rect x="1176.1" y="725" width="0.5" height="15.0" fill="rgb(221,2,41)" rx="2" ry="2" />
<text  x="1179.06" y="735.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::get (8 samples, 0.04%)</title><rect x="842.7" y="501" width="0.4" height="15.0" fill="rgb(220,170,27)" rx="2" ry="2" />
<text  x="845.67" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt; &gt; &gt;::size (3 samples, 0.01%)</title><rect x="97.7" y="901" width="0.2" height="15.0" fill="rgb(242,24,13)" rx="2" ry="2" />
<text  x="100.68" y="911.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (297 samples, 1.48%)</title><rect x="108.9" y="645" width="17.4" height="15.0" fill="rgb(223,94,29)" rx="2" ry="2" />
<text  x="111.86" y="655.5" ></text>
</g>
<g >
<title>__do_munmap (12 samples, 0.06%)</title><rect x="903.8" y="213" width="0.7" height="15.0" fill="rgb(234,218,41)" rx="2" ry="2" />
<text  x="906.78" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::_M_erase_at_end (5 samples, 0.02%)</title><rect x="652.5" y="565" width="0.3" height="15.0" fill="rgb(242,153,26)" rx="2" ry="2" />
<text  x="655.55" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_S_value (3 samples, 0.01%)</title><rect x="174.0" y="277" width="0.1" height="15.0" fill="rgb(253,115,4)" rx="2" ry="2" />
<text  x="176.96" y="287.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (310 samples, 1.54%)</title><rect x="495.3" y="661" width="18.2" height="15.0" fill="rgb(216,217,21)" rx="2" ry="2" />
<text  x="498.29" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (45 samples, 0.22%)</title><rect x="662.7" y="565" width="2.6" height="15.0" fill="rgb(219,183,18)" rx="2" ry="2" />
<text  x="665.66" y="575.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (297 samples, 1.48%)</title><rect x="108.9" y="853" width="17.4" height="15.0" fill="rgb(242,21,15)" rx="2" ry="2" />
<text  x="111.86" y="863.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (58 samples, 0.29%)</title><rect x="741.9" y="501" width="3.4" height="15.0" fill="rgb(240,28,44)" rx="2" ry="2" />
<text  x="744.94" y="511.5" ></text>
</g>
<g >
<title>operator!= (5 samples, 0.02%)</title><rect x="935.3" y="613" width="0.3" height="15.0" fill="rgb(247,37,23)" rx="2" ry="2" />
<text  x="938.30" y="623.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;int&gt;::operator= (2 samples, 0.01%)</title><rect x="85.9" y="901" width="0.1" height="15.0" fill="rgb(233,176,31)" rx="2" ry="2" />
<text  x="88.86" y="911.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (3 samples, 0.01%)</title><rect x="64.5" y="901" width="0.2" height="15.0" fill="rgb(208,203,22)" rx="2" ry="2" />
<text  x="67.52" y="911.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="126.0" y="373" width="0.2" height="15.0" fill="rgb(250,129,22)" rx="2" ry="2" />
<text  x="129.03" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.01%)</title><rect x="904.5" y="261" width="0.2" height="15.0" fill="rgb(229,117,26)" rx="2" ry="2" />
<text  x="907.48" y="271.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; (2 samples, 0.01%)</title><rect x="636.6" y="517" width="0.1" height="15.0" fill="rgb(254,186,27)" rx="2" ry="2" />
<text  x="639.61" y="527.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;int&gt;::operator= (49 samples, 0.24%)</title><rect x="918.8" y="629" width="2.9" height="15.0" fill="rgb(238,89,36)" rx="2" ry="2" />
<text  x="921.77" y="639.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::begin (2 samples, 0.01%)</title><rect x="466.5" y="661" width="0.2" height="15.0" fill="rgb(246,73,35)" rx="2" ry="2" />
<text  x="469.53" y="671.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.01%)</title><rect x="868.0" y="373" width="0.1" height="15.0" fill="rgb(228,152,35)" rx="2" ry="2" />
<text  x="870.96" y="383.5" ></text>
</g>
<g >
<title>strlen (3 samples, 0.01%)</title><rect x="737.5" y="501" width="0.1" height="15.0" fill="rgb(222,163,27)" rx="2" ry="2" />
<text  x="740.47" y="511.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (4 samples, 0.02%)</title><rect x="844.6" y="485" width="0.2" height="15.0" fill="rgb(253,101,30)" rx="2" ry="2" />
<text  x="847.56" y="495.5" ></text>
</g>
<g >
<title>std::replace&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (230 samples, 1.15%)</title><rect x="675.8" y="501" width="13.5" height="15.0" fill="rgb(232,28,32)" rx="2" ry="2" />
<text  x="678.78" y="511.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (251 samples, 1.25%)</title><rect x="784.3" y="517" width="14.8" height="15.0" fill="rgb(215,73,5)" rx="2" ry="2" />
<text  x="787.34" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (12 samples, 0.06%)</title><rect x="739.3" y="453" width="0.7" height="15.0" fill="rgb(216,152,5)" rx="2" ry="2" />
<text  x="742.29" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::get (5 samples, 0.02%)</title><rect x="970.8" y="645" width="0.3" height="15.0" fill="rgb(253,165,35)" rx="2" ry="2" />
<text  x="973.76" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (15 samples, 0.07%)</title><rect x="943.5" y="629" width="0.9" height="15.0" fill="rgb(205,170,9)" rx="2" ry="2" />
<text  x="946.47" y="639.5" ></text>
</g>
<g >
<title>Game_Picture::SyncCurrentToFinish (21 samples, 0.10%)</title><rect x="1148.2" y="725" width="1.2" height="15.0" fill="rgb(218,37,21)" rx="2" ry="2" />
<text  x="1151.19" y="735.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (15 samples, 0.07%)</title><rect x="702.2" y="517" width="0.9" height="15.0" fill="rgb(245,128,37)" rx="2" ry="2" />
<text  x="705.18" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (96 samples, 0.48%)</title><rect x="815.3" y="325" width="5.6" height="15.0" fill="rgb(243,48,22)" rx="2" ry="2" />
<text  x="818.27" y="335.5" ></text>
</g>
<g >
<title>memcpy@plt (2 samples, 0.01%)</title><rect x="598.0" y="549" width="0.1" height="15.0" fill="rgb(227,35,43)" rx="2" ry="2" />
<text  x="601.03" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (13 samples, 0.06%)</title><rect x="558.9" y="613" width="0.8" height="15.0" fill="rgb(227,78,26)" rx="2" ry="2" />
<text  x="561.92" y="623.5" ></text>
</g>
<g >
<title>std::max&lt;int&gt; (3 samples, 0.01%)</title><rect x="81.6" y="901" width="0.1" height="15.0" fill="rgb(205,95,7)" rx="2" ry="2" />
<text  x="84.57" y="911.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (69 samples, 0.34%)</title><rect x="139.7" y="517" width="4.0" height="15.0" fill="rgb(224,160,23)" rx="2" ry="2" />
<text  x="142.67" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare@plt (4 samples, 0.02%)</title><rect x="728.5" y="421" width="0.3" height="15.0" fill="rgb(214,152,34)" rx="2" ry="2" />
<text  x="731.53" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::operator (5 samples, 0.02%)</title><rect x="914.2" y="597" width="0.3" height="15.0" fill="rgb(205,4,17)" rx="2" ry="2" />
<text  x="917.19" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (143 samples, 0.71%)</title><rect x="1023.5" y="645" width="8.4" height="15.0" fill="rgb(247,16,33)" rx="2" ry="2" />
<text  x="1026.45" y="655.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.04%)</title><rect x="957.5" y="549" width="0.5" height="15.0" fill="rgb(239,117,35)" rx="2" ry="2" />
<text  x="960.47" y="559.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::__allocated_ptr (6 samples, 0.03%)</title><rect x="822.9" y="421" width="0.3" height="15.0" fill="rgb(221,77,46)" rx="2" ry="2" />
<text  x="825.86" y="431.5" ></text>
</g>
<g >
<title>__vma_adjust (2 samples, 0.01%)</title><rect x="127.3" y="245" width="0.1" height="15.0" fill="rgb(236,122,9)" rx="2" ry="2" />
<text  x="130.26" y="255.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (71 samples, 0.35%)</title><rect x="126.3" y="709" width="4.2" height="15.0" fill="rgb(253,218,18)" rx="2" ry="2" />
<text  x="129.32" y="719.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::end (35 samples, 0.17%)</title><rect x="455.9" y="645" width="2.1" height="15.0" fill="rgb(249,76,48)" rx="2" ry="2" />
<text  x="458.95" y="655.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (49 samples, 0.24%)</title><rect x="175.0" y="757" width="2.8" height="15.0" fill="rgb(216,132,11)" rx="2" ry="2" />
<text  x="177.96" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (14 samples, 0.07%)</title><rect x="1181.1" y="693" width="0.8" height="15.0" fill="rgb(222,70,42)" rx="2" ry="2" />
<text  x="1184.06" y="703.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.02%)</title><rect x="138.0" y="533" width="0.2" height="15.0" fill="rgb(213,186,10)" rx="2" ry="2" />
<text  x="140.97" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_ptr (2 samples, 0.01%)</title><rect x="730.7" y="453" width="0.1" height="15.0" fill="rgb(210,34,28)" rx="2" ry="2" />
<text  x="733.70" y="463.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}::operator() (235 samples, 1.17%)</title><rect x="149.4" y="677" width="13.9" height="15.0" fill="rgb(235,72,47)" rx="2" ry="2" />
<text  x="152.44" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_Rb_tree_iterator (2 samples, 0.01%)</title><rect x="819.2" y="293" width="0.1" height="15.0" fill="rgb(246,185,45)" rx="2" ry="2" />
<text  x="822.15" y="303.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (4 samples, 0.02%)</title><rect x="740.2" y="501" width="0.2" height="15.0" fill="rgb(230,198,5)" rx="2" ry="2" />
<text  x="743.17" y="511.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;*&gt; (3 samples, 0.01%)</title><rect x="905.8" y="357" width="0.2" height="15.0" fill="rgb(223,55,43)" rx="2" ry="2" />
<text  x="908.78" y="367.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (2 samples, 0.01%)</title><rect x="179.5" y="901" width="0.2" height="15.0" fill="rgb(213,21,54)" rx="2" ry="2" />
<text  x="182.55" y="911.5" ></text>
</g>
<g >
<title>X11_PumpEvents (4 samples, 0.02%)</title><rect x="1181.9" y="725" width="0.3" height="15.0" fill="rgb(208,20,13)" rx="2" ry="2" />
<text  x="1184.94" y="735.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (34 samples, 0.17%)</title><rect x="172.1" y="741" width="2.0" height="15.0" fill="rgb(241,192,11)" rx="2" ry="2" />
<text  x="175.14" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::~vector (19 samples, 0.09%)</title><rect x="905.4" y="405" width="1.1" height="15.0" fill="rgb(247,78,40)" rx="2" ry="2" />
<text  x="908.42" y="415.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (4 samples, 0.02%)</title><rect x="163.5" y="373" width="0.2" height="15.0" fill="rgb(235,134,9)" rx="2" ry="2" />
<text  x="166.49" y="383.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (36 samples, 0.18%)</title><rect x="718.2" y="421" width="2.1" height="15.0" fill="rgb(222,206,25)" rx="2" ry="2" />
<text  x="721.18" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; (5 samples, 0.02%)</title><rect x="632.7" y="501" width="0.3" height="15.0" fill="rgb(233,154,5)" rx="2" ry="2" />
<text  x="635.67" y="511.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (49 samples, 0.24%)</title><rect x="126.3" y="485" width="2.9" height="15.0" fill="rgb(226,108,25)" rx="2" ry="2" />
<text  x="129.32" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (11 samples, 0.05%)</title><rect x="444.4" y="597" width="0.6" height="15.0" fill="rgb(220,186,18)" rx="2" ry="2" />
<text  x="447.36" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::size (27 samples, 0.13%)</title><rect x="188.2" y="693" width="1.6" height="15.0" fill="rgb(230,189,15)" rx="2" ry="2" />
<text  x="191.19" y="703.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (19 samples, 0.09%)</title><rect x="562.2" y="629" width="1.1" height="15.0" fill="rgb(254,119,48)" rx="2" ry="2" />
<text  x="565.16" y="639.5" ></text>
</g>
<g >
<title>Game_Interpreter::ValueOrVariable (43 samples, 0.21%)</title><rect x="585.7" y="661" width="2.6" height="15.0" fill="rgb(221,104,50)" rx="2" ry="2" />
<text  x="588.74" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::operator[] (40 samples, 0.20%)</title><rect x="1127.6" y="709" width="2.4" height="15.0" fill="rgb(228,206,28)" rx="2" ry="2" />
<text  x="1130.60" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, true&gt;::_Node_iterator_base (4 samples, 0.02%)</title><rect x="694.8" y="469" width="0.3" height="15.0" fill="rgb(250,227,6)" rx="2" ry="2" />
<text  x="697.83" y="479.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.02%)</title><rect x="160.3" y="533" width="0.3" height="15.0" fill="rgb(239,58,46)" rx="2" ry="2" />
<text  x="163.26" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (7 samples, 0.03%)</title><rect x="910.6" y="533" width="0.4" height="15.0" fill="rgb(221,89,20)" rx="2" ry="2" />
<text  x="913.60" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator* (7 samples, 0.03%)</title><rect x="45.5" y="901" width="0.4" height="15.0" fill="rgb(236,74,54)" rx="2" ry="2" />
<text  x="48.52" y="911.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_value (2 samples, 0.01%)</title><rect x="730.7" y="485" width="0.1" height="15.0" fill="rgb(236,152,18)" rx="2" ry="2" />
<text  x="733.70" y="495.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (2 samples, 0.01%)</title><rect x="575.7" y="629" width="0.2" height="15.0" fill="rgb(214,193,32)" rx="2" ry="2" />
<text  x="578.74" y="639.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.02%)</title><rect x="160.3" y="565" width="0.3" height="15.0" fill="rgb(215,65,31)" rx="2" ry="2" />
<text  x="163.26" y="575.5" ></text>
</g>
<g >
<title>std::max&lt;int&gt; (85 samples, 0.42%)</title><rect x="531.8" y="645" width="5.0" height="15.0" fill="rgb(211,213,2)" rx="2" ry="2" />
<text  x="534.75" y="655.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (8 samples, 0.04%)</title><rect x="603.3" y="565" width="0.5" height="15.0" fill="rgb(209,94,21)" rx="2" ry="2" />
<text  x="606.32" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_S_copy (2 samples, 0.01%)</title><rect x="958.2" y="597" width="0.1" height="15.0" fill="rgb(228,188,29)" rx="2" ry="2" />
<text  x="961.18" y="607.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (34 samples, 0.17%)</title><rect x="172.1" y="693" width="2.0" height="15.0" fill="rgb(244,2,29)" rx="2" ry="2" />
<text  x="175.14" y="703.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (20 samples, 0.10%)</title><rect x="917.6" y="613" width="1.2" height="15.0" fill="rgb(220,203,40)" rx="2" ry="2" />
<text  x="920.60" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator()&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;&amp;&gt; (5 samples, 0.02%)</title><rect x="697.4" y="421" width="0.3" height="15.0" fill="rgb(231,21,36)" rx="2" ry="2" />
<text  x="700.36" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, bool&gt;::_Tuple_impl&lt;bool&amp;&gt; (14 samples, 0.07%)</title><rect x="744.3" y="485" width="0.9" height="15.0" fill="rgb(207,109,17)" rx="2" ry="2" />
<text  x="747.35" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_valptr (3 samples, 0.01%)</title><rect x="174.0" y="261" width="0.1" height="15.0" fill="rgb(222,213,50)" rx="2" ry="2" />
<text  x="176.96" y="271.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (9 samples, 0.04%)</title><rect x="178.2" y="901" width="0.5" height="15.0" fill="rgb(247,39,24)" rx="2" ry="2" />
<text  x="181.19" y="911.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandEndBranch (2 samples, 0.01%)</title><rect x="564.6" y="677" width="0.1" height="15.0" fill="rgb(228,144,50)" rx="2" ry="2" />
<text  x="567.57" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data@plt (2 samples, 0.01%)</title><rect x="633.3" y="485" width="0.1" height="15.0" fill="rgb(233,83,26)" rx="2" ry="2" />
<text  x="636.26" y="495.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}::operator() (49 samples, 0.24%)</title><rect x="175.0" y="597" width="2.8" height="15.0" fill="rgb(234,204,46)" rx="2" ry="2" />
<text  x="177.96" y="607.5" ></text>
</g>
<g >
<title>Game_Interpreter::IsRunning (17 samples, 0.08%)</title><rect x="190.0" y="725" width="1.0" height="15.0" fill="rgb(236,53,53)" rx="2" ry="2" />
<text  x="192.96" y="735.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (29 samples, 0.14%)</title><rect x="625.8" y="565" width="1.8" height="15.0" fill="rgb(210,151,32)" rx="2" ry="2" />
<text  x="628.85" y="575.5" ></text>
</g>
<g >
<title>Game_Interpreter::ValueOrVariable (9 samples, 0.04%)</title><rect x="30.4" y="901" width="0.5" height="15.0" fill="rgb(229,110,3)" rx="2" ry="2" />
<text  x="33.41" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (2 samples, 0.01%)</title><rect x="104.3" y="901" width="0.1" height="15.0" fill="rgb(210,49,9)" rx="2" ry="2" />
<text  x="107.33" y="911.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (111 samples, 0.55%)</title><rect x="110.7" y="421" width="6.6" height="15.0" fill="rgb(232,213,22)" rx="2" ry="2" />
<text  x="113.74" y="431.5" ></text>
</g>
<g >
<title>Game_Map::Update (119 samples, 0.59%)</title><rect x="131.0" y="805" width="7.0" height="15.0" fill="rgb(241,172,54)" rx="2" ry="2" />
<text  x="133.97" y="815.5" ></text>
</g>
<g >
<title>__sched_text_start (14 samples, 0.07%)</title><rect x="1181.1" y="613" width="0.8" height="15.0" fill="rgb(253,39,17)" rx="2" ry="2" />
<text  x="1184.06" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="959.7" y="613" width="0.1" height="15.0" fill="rgb(213,102,21)" rx="2" ry="2" />
<text  x="962.70" y="623.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (119 samples, 0.59%)</title><rect x="131.0" y="757" width="7.0" height="15.0" fill="rgb(218,99,36)" rx="2" ry="2" />
<text  x="133.97" y="767.5" ></text>
</g>
<g >
<title>__libc_recvmsg (2 samples, 0.01%)</title><rect x="1180.9" y="597" width="0.1" height="15.0" fill="rgb(224,145,39)" rx="2" ry="2" />
<text  x="1183.88" y="607.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (27 samples, 0.13%)</title><rect x="843.2" y="517" width="1.6" height="15.0" fill="rgb(214,153,2)" rx="2" ry="2" />
<text  x="846.20" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::CommonEvent, std::allocator&lt;RPG::CommonEvent&gt; &gt;::size (4 samples, 0.02%)</title><rect x="1140.9" y="709" width="0.2" height="15.0" fill="rgb(232,79,21)" rx="2" ry="2" />
<text  x="1143.89" y="719.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (7 samples, 0.03%)</title><rect x="852.1" y="501" width="0.4" height="15.0" fill="rgb(249,88,20)" rx="2" ry="2" />
<text  x="855.08" y="511.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (2 samples, 0.01%)</title><rect x="67.8" y="901" width="0.1" height="15.0" fill="rgb(223,60,44)" rx="2" ry="2" />
<text  x="70.75" y="911.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::end (13 samples, 0.06%)</title><rect x="814.3" y="341" width="0.8" height="15.0" fill="rgb(242,52,9)" rx="2" ry="2" />
<text  x="817.33" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (3 samples, 0.01%)</title><rect x="562.5" y="597" width="0.2" height="15.0" fill="rgb(209,162,4)" rx="2" ry="2" />
<text  x="565.51" y="607.5" ></text>
</g>
<g >
<title>x86_pmu_enable (13 samples, 0.06%)</title><rect x="1181.1" y="549" width="0.7" height="15.0" fill="rgb(243,111,27)" rx="2" ry="2" />
<text  x="1184.06" y="559.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (919 samples, 4.58%)</title><rect x="852.6" y="549" width="54.1" height="15.0" fill="rgb(224,122,24)" rx="2" ry="2" />
<text  x="855.61" y="559.5" >Sprit..</text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (826 samples, 4.12%)</title><rect x="858.1" y="485" width="48.6" height="15.0" fill="rgb(238,181,30)" rx="2" ry="2" />
<text  x="861.08" y="495.5" >std:..</text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (2 samples, 0.01%)</title><rect x="1178.2" y="677" width="0.2" height="15.0" fill="rgb(251,65,13)" rx="2" ry="2" />
<text  x="1181.24" y="687.5" ></text>
</g>
<g >
<title>operator new (22 samples, 0.11%)</title><rect x="131.4" y="485" width="1.3" height="15.0" fill="rgb(247,141,48)" rx="2" ry="2" />
<text  x="134.38" y="495.5" ></text>
</g>
<g >
<title>__strlen_avx2 (7 samples, 0.03%)</title><rect x="915.8" y="597" width="0.4" height="15.0" fill="rgb(221,142,54)" rx="2" ry="2" />
<text  x="918.83" y="607.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (228 samples, 1.14%)</title><rect x="640.0" y="597" width="13.4" height="15.0" fill="rgb(232,81,52)" rx="2" ry="2" />
<text  x="643.02" y="607.5" ></text>
</g>
<g >
<title>Bitmap::~Bitmap (634 samples, 3.16%)</title><rect x="869.3" y="421" width="37.2" height="15.0" fill="rgb(244,96,36)" rx="2" ry="2" />
<text  x="872.26" y="431.5" >Bit..</text>
</g>
<g >
<title>Cache::Picture (31 samples, 0.15%)</title><rect x="172.1" y="549" width="1.9" height="15.0" fill="rgb(224,160,21)" rx="2" ry="2" />
<text  x="175.14" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (467 samples, 2.33%)</title><rect x="1065.7" y="677" width="27.4" height="15.0" fill="rgb(240,75,35)" rx="2" ry="2" />
<text  x="1068.68" y="687.5" >s..</text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt;::_Iter_equals_val (3 samples, 0.01%)</title><rect x="451.4" y="613" width="0.1" height="15.0" fill="rgb(249,96,27)" rx="2" ry="2" />
<text  x="454.36" y="623.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (3 samples, 0.01%)</title><rect x="890.4" y="53" width="0.2" height="15.0" fill="rgb(242,107,19)" rx="2" ry="2" />
<text  x="893.43" y="63.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char32_t&gt;::deallocate (3 samples, 0.01%)</title><rect x="958.0" y="549" width="0.2" height="15.0" fill="rgb(218,82,23)" rx="2" ry="2" />
<text  x="961.00" y="559.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (9 samples, 0.04%)</title><rect x="745.9" y="517" width="0.6" height="15.0" fill="rgb(253,64,38)" rx="2" ry="2" />
<text  x="748.93" y="527.5" ></text>
</g>
<g >
<title>Sprite::SetZoomY (3 samples, 0.01%)</title><rect x="840.1" y="533" width="0.2" height="15.0" fill="rgb(210,125,18)" rx="2" ry="2" />
<text  x="843.15" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (2 samples, 0.01%)</title><rect x="446.0" y="629" width="0.1" height="15.0" fill="rgb(244,132,0)" rx="2" ry="2" />
<text  x="449.01" y="639.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (10 samples, 0.05%)</title><rect x="794.8" y="373" width="0.6" height="15.0" fill="rgb(237,169,23)" rx="2" ry="2" />
<text  x="797.80" y="383.5" ></text>
</g>
<g >
<title>alloc_pages_vma (6 samples, 0.03%)</title><rect x="127.9" y="293" width="0.3" height="15.0" fill="rgb(216,161,21)" rx="2" ry="2" />
<text  x="130.85" y="303.5" ></text>
</g>
<g >
<title>SDL_UpdateTextureNative (5 samples, 0.02%)</title><rect x="183.0" y="741" width="0.3" height="15.0" fill="rgb(220,162,0)" rx="2" ry="2" />
<text  x="186.02" y="751.5" ></text>
</g>
<g >
<title>operator!= (6 samples, 0.03%)</title><rect x="1163.7" y="677" width="0.4" height="15.0" fill="rgb(225,81,9)" rx="2" ry="2" />
<text  x="1166.71" y="687.5" ></text>
</g>
<g >
<title>std::forward&lt;int&amp;&gt; (2 samples, 0.01%)</title><rect x="824.8" y="453" width="0.1" height="15.0" fill="rgb(235,67,41)" rx="2" ry="2" />
<text  x="827.80" y="463.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (7 samples, 0.03%)</title><rect x="1138.1" y="677" width="0.4" height="15.0" fill="rgb(242,119,6)" rx="2" ry="2" />
<text  x="1141.13" y="687.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (65 samples, 0.32%)</title><rect x="163.3" y="821" width="3.8" height="15.0" fill="rgb(206,135,53)" rx="2" ry="2" />
<text  x="166.26" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator++ (23 samples, 0.11%)</title><rect x="616.4" y="581" width="1.3" height="15.0" fill="rgb(245,207,11)" rx="2" ry="2" />
<text  x="619.38" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_key (14 samples, 0.07%)</title><rect x="730.1" y="501" width="0.8" height="15.0" fill="rgb(237,91,28)" rx="2" ry="2" />
<text  x="733.06" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (926 samples, 4.62%)</title><rect x="235.0" y="693" width="54.5" height="15.0" fill="rgb(237,115,18)" rx="2" ry="2" />
<text  x="238.00" y="703.5" >std::..</text>
</g>
<g >
<title>Game_Interpreter::Update (182 samples, 0.91%)</title><rect x="138.0" y="805" width="10.7" height="15.0" fill="rgb(212,125,28)" rx="2" ry="2" />
<text  x="140.97" y="815.5" ></text>
</g>
<g >
<title>max&lt;int&gt; (4 samples, 0.02%)</title><rect x="49.2" y="901" width="0.3" height="15.0" fill="rgb(228,167,42)" rx="2" ry="2" />
<text  x="52.23" y="911.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (5 samples, 0.02%)</title><rect x="50.5" y="901" width="0.3" height="15.0" fill="rgb(217,95,40)" rx="2" ry="2" />
<text  x="53.46" y="911.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (56 samples, 0.28%)</title><rect x="17.2" y="741" width="3.3" height="15.0" fill="rgb(228,223,47)" rx="2" ry="2" />
<text  x="20.23" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string@plt (7 samples, 0.03%)</title><rect x="607.6" y="581" width="0.4" height="15.0" fill="rgb(240,208,2)" rx="2" ry="2" />
<text  x="610.56" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="958.1" y="501" width="0.1" height="15.0" fill="rgb(221,174,47)" rx="2" ry="2" />
<text  x="961.06" y="511.5" ></text>
</g>
<g >
<title>Bitmap::Blit (499 samples, 2.49%)</title><rect x="753.8" y="533" width="29.4" height="15.0" fill="rgb(240,225,45)" rx="2" ry="2" />
<text  x="756.81" y="543.5" >Bi..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.03%)</title><rect x="651.2" y="485" width="0.4" height="15.0" fill="rgb(239,167,39)" rx="2" ry="2" />
<text  x="654.19" y="495.5" ></text>
</g>
<g >
<title>ttwu_do_activate (2 samples, 0.01%)</title><rect x="21.4" y="725" width="0.1" height="15.0" fill="rgb(252,97,20)" rx="2" ry="2" />
<text  x="24.41" y="735.5" ></text>
</g>
<g >
<title>pixman_image_create_bits (3 samples, 0.01%)</title><rect x="811.6" y="357" width="0.1" height="15.0" fill="rgb(241,141,21)" rx="2" ry="2" />
<text  x="814.56" y="367.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (4 samples, 0.02%)</title><rect x="128.2" y="261" width="0.2" height="15.0" fill="rgb(235,222,27)" rx="2" ry="2" />
<text  x="131.21" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars@plt (4 samples, 0.02%)</title><rect x="604.4" y="565" width="0.2" height="15.0" fill="rgb(246,50,50)" rx="2" ry="2" />
<text  x="607.38" y="575.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandConditionalBranch (1,232 samples, 6.14%)</title><rect x="396.5" y="677" width="72.4" height="15.0" fill="rgb(208,175,40)" rx="2" ry="2" />
<text  x="399.49" y="687.5" >Game_Int..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (17 samples, 0.08%)</title><rect x="736.2" y="501" width="1.0" height="15.0" fill="rgb(225,186,34)" rx="2" ry="2" />
<text  x="739.23" y="511.5" ></text>
</g>
<g >
<title>SDL_WaitEventTimeout_REAL (19 samples, 0.09%)</title><rect x="1181.1" y="757" width="1.1" height="15.0" fill="rgb(238,60,23)" rx="2" ry="2" />
<text  x="1184.06" y="767.5" ></text>
</g>
<g >
<title>Game_Picture::SetNonEffectParams (8 samples, 0.04%)</title><rect x="575.4" y="645" width="0.5" height="15.0" fill="rgb(230,165,3)" rx="2" ry="2" />
<text  x="578.39" y="655.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (71 samples, 0.35%)</title><rect x="126.3" y="885" width="4.2" height="15.0" fill="rgb(218,206,30)" rx="2" ry="2" />
<text  x="129.32" y="895.5" ></text>
</g>
<g >
<title>do_sys_poll (76 samples, 0.38%)</title><rect x="16.3" y="869" width="4.5" height="15.0" fill="rgb(242,80,15)" rx="2" ry="2" />
<text  x="19.29" y="879.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (14 samples, 0.07%)</title><rect x="637.2" y="533" width="0.8" height="15.0" fill="rgb(254,34,3)" rx="2" ry="2" />
<text  x="640.20" y="543.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (2 samples, 0.01%)</title><rect x="795.5" y="389" width="0.1" height="15.0" fill="rgb(205,29,8)" rx="2" ry="2" />
<text  x="798.45" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (471 samples, 2.35%)</title><rect x="1004.2" y="661" width="27.7" height="15.0" fill="rgb(218,48,21)" rx="2" ry="2" />
<text  x="1007.16" y="671.5" >s..</text>
</g>
<g >
<title>Bitmap::width (8 samples, 0.04%)</title><rect x="928.7" y="613" width="0.5" height="15.0" fill="rgb(221,224,22)" rx="2" ry="2" />
<text  x="931.71" y="623.5" ></text>
</g>
<g >
<title>std::forward&lt;FileRequestResult*&gt; (3 samples, 0.01%)</title><rect x="74.5" y="901" width="0.2" height="15.0" fill="rgb(217,197,25)" rx="2" ry="2" />
<text  x="77.51" y="911.5" ></text>
</g>
<g >
<title>pixman_image_create_bits@plt (3 samples, 0.01%)</title><rect x="811.7" y="357" width="0.2" height="15.0" fill="rgb(221,67,49)" rx="2" ry="2" />
<text  x="814.74" y="367.5" ></text>
</g>
<g >
<title>std::min&lt;int&gt; (4 samples, 0.02%)</title><rect x="576.4" y="661" width="0.3" height="15.0" fill="rgb(206,206,16)" rx="2" ry="2" />
<text  x="579.45" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (41 samples, 0.20%)</title><rect x="633.9" y="469" width="2.4" height="15.0" fill="rgb(243,107,12)" rx="2" ry="2" />
<text  x="636.90" y="479.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="959.9" y="565" width="0.1" height="15.0" fill="rgb(239,151,54)" rx="2" ry="2" />
<text  x="962.88" y="575.5" ></text>
</g>
<g >
<title>std::__find_if&lt;int const*, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (4 samples, 0.02%)</title><rect x="63.8" y="901" width="0.2" height="15.0" fill="rgb(229,143,36)" rx="2" ry="2" />
<text  x="66.81" y="911.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandBreakLoop (2 samples, 0.01%)</title><rect x="396.4" y="677" width="0.1" height="15.0" fill="rgb(209,183,29)" rx="2" ry="2" />
<text  x="399.37" y="687.5" ></text>
</g>
<g >
<title>Bitmap::GetTransparent (7 samples, 0.03%)</title><rect x="754.8" y="501" width="0.4" height="15.0" fill="rgb(226,227,8)" rx="2" ry="2" />
<text  x="757.81" y="511.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (5 samples, 0.02%)</title><rect x="931.5" y="613" width="0.3" height="15.0" fill="rgb(232,156,20)" rx="2" ry="2" />
<text  x="934.48" y="623.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Transition*, std::default_delete&lt;Transition&gt; &gt;::_M_head (2 samples, 0.01%)</title><rect x="914.0" y="517" width="0.1" height="15.0" fill="rgb(210,109,32)" rx="2" ry="2" />
<text  x="916.95" y="527.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (6 samples, 0.03%)</title><rect x="1149.1" y="693" width="0.3" height="15.0" fill="rgb(219,43,49)" rx="2" ry="2" />
<text  x="1152.07" y="703.5" ></text>
</g>
<g >
<title>SDL_Delay_REAL (14 samples, 0.07%)</title><rect x="1181.1" y="741" width="0.8" height="15.0" fill="rgb(253,220,12)" rx="2" ry="2" />
<text  x="1184.06" y="751.5" ></text>
</g>
<g >
<title>[anon] (159 samples, 0.79%)</title><rect x="98.0" y="917" width="9.4" height="15.0" fill="rgb(241,192,42)" rx="2" ry="2" />
<text  x="101.04" y="927.5" ></text>
</g>
<g >
<title>default_wake_function (4 samples, 0.02%)</title><rect x="21.4" y="757" width="0.2" height="15.0" fill="rgb(221,184,7)" rx="2" ry="2" />
<text  x="24.35" y="767.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (9 samples, 0.04%)</title><rect x="163.3" y="629" width="0.5" height="15.0" fill="rgb(237,176,28)" rx="2" ry="2" />
<text  x="166.26" y="639.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (49 samples, 0.24%)</title><rect x="145.8" y="581" width="2.9" height="15.0" fill="rgb(243,124,15)" rx="2" ry="2" />
<text  x="148.79" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.04%)</title><rect x="134.9" y="437" width="0.5" height="15.0" fill="rgb(230,23,36)" rx="2" ry="2" />
<text  x="137.91" y="447.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (71 samples, 0.35%)</title><rect x="126.3" y="821" width="4.2" height="15.0" fill="rgb(215,48,53)" rx="2" ry="2" />
<text  x="129.32" y="831.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (179 samples, 0.89%)</title><rect x="628.7" y="613" width="10.5" height="15.0" fill="rgb(209,215,18)" rx="2" ry="2" />
<text  x="631.67" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_valptr (4 samples, 0.02%)</title><rect x="701.0" y="517" width="0.2" height="15.0" fill="rgb(231,160,21)" rx="2" ry="2" />
<text  x="704.00" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.02%)</title><rect x="890.4" y="245" width="0.3" height="15.0" fill="rgb(223,209,36)" rx="2" ry="2" />
<text  x="893.37" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (4 samples, 0.02%)</title><rect x="744.1" y="469" width="0.2" height="15.0" fill="rgb(213,163,8)" rx="2" ry="2" />
<text  x="747.11" y="479.5" ></text>
</g>
<g >
<title>min&lt;int&gt; (2 samples, 0.01%)</title><rect x="1163.3" y="677" width="0.1" height="15.0" fill="rgb(208,108,49)" rx="2" ry="2" />
<text  x="1166.30" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="132.7" y="501" width="0.2" height="15.0" fill="rgb(235,189,5)" rx="2" ry="2" />
<text  x="135.68" y="511.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (71 samples, 0.35%)</title><rect x="126.3" y="613" width="4.2" height="15.0" fill="rgb(236,49,0)" rx="2" ry="2" />
<text  x="129.32" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (102 samples, 0.51%)</title><rect x="596.4" y="581" width="6.0" height="15.0" fill="rgb(251,34,45)" rx="2" ry="2" />
<text  x="599.44" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (4 samples, 0.02%)</title><rect x="1065.4" y="677" width="0.3" height="15.0" fill="rgb(220,228,27)" rx="2" ry="2" />
<text  x="1068.44" y="687.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned (2 samples, 0.01%)</title><rect x="662.2" y="565" width="0.2" height="15.0" fill="rgb(226,223,0)" rx="2" ry="2" />
<text  x="665.25" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (4 samples, 0.02%)</title><rect x="1003.9" y="661" width="0.3" height="15.0" fill="rgb(236,113,29)" rx="2" ry="2" />
<text  x="1006.93" y="671.5" ></text>
</g>
<g >
<title>Bitmap::GetWidth (9 samples, 0.04%)</title><rect x="928.7" y="629" width="0.5" height="15.0" fill="rgb(225,57,44)" rx="2" ry="2" />
<text  x="931.65" y="639.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (13 samples, 0.06%)</title><rect x="1181.1" y="565" width="0.7" height="15.0" fill="rgb(235,225,34)" rx="2" ry="2" />
<text  x="1184.06" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::get (23 samples, 0.11%)</title><rect x="845.1" y="517" width="1.4" height="15.0" fill="rgb(235,17,26)" rx="2" ry="2" />
<text  x="848.14" y="527.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (3 samples, 0.01%)</title><rect x="904.1" y="53" width="0.2" height="15.0" fill="rgb(207,82,29)" rx="2" ry="2" />
<text  x="907.13" y="63.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.01%)</title><rect x="116.3" y="325" width="0.1" height="15.0" fill="rgb(231,219,44)" rx="2" ry="2" />
<text  x="119.27" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (13 samples, 0.06%)</title><rect x="43.8" y="901" width="0.7" height="15.0" fill="rgb(236,103,45)" rx="2" ry="2" />
<text  x="46.76" y="911.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::begin (3 samples, 0.01%)</title><rect x="564.0" y="613" width="0.2" height="15.0" fill="rgb(251,107,44)" rx="2" ry="2" />
<text  x="566.98" y="623.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (11 samples, 0.05%)</title><rect x="907.0" y="517" width="0.7" height="15.0" fill="rgb(234,48,19)" rx="2" ry="2" />
<text  x="910.01" y="527.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.01%)</title><rect x="904.5" y="165" width="0.1" height="15.0" fill="rgb(240,164,36)" rx="2" ry="2" />
<text  x="907.48" y="175.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (2 samples, 0.01%)</title><rect x="66.8" y="901" width="0.1" height="15.0" fill="rgb(224,43,29)" rx="2" ry="2" />
<text  x="69.81" y="911.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (2 samples, 0.01%)</title><rect x="955.0" y="645" width="0.1" height="15.0" fill="rgb(244,224,2)" rx="2" ry="2" />
<text  x="958.00" y="655.5" ></text>
</g>
<g >
<title>Sprite::SetX (10 samples, 0.05%)</title><rect x="1165.3" y="709" width="0.6" height="15.0" fill="rgb(235,211,47)" rx="2" ry="2" />
<text  x="1168.30" y="719.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (10 samples, 0.05%)</title><rect x="78.2" y="901" width="0.6" height="15.0" fill="rgb(224,197,18)" rx="2" ry="2" />
<text  x="81.22" y="911.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_invoke (10 samples, 0.05%)</title><rect x="148.8" y="661" width="0.6" height="15.0" fill="rgb(250,51,12)" rx="2" ry="2" />
<text  x="151.85" y="671.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::get (7 samples, 0.03%)</title><rect x="937.8" y="613" width="0.4" height="15.0" fill="rgb(246,76,10)" rx="2" ry="2" />
<text  x="940.77" y="623.5" ></text>
</g>
<g >
<title>Bitmap::width (17 samples, 0.08%)</title><rect x="826.1" y="517" width="1.0" height="15.0" fill="rgb(232,199,32)" rx="2" ry="2" />
<text  x="829.15" y="527.5" ></text>
</g>
<g >
<title>Blend (18 samples, 0.09%)</title><rect x="827.2" y="533" width="1.1" height="15.0" fill="rgb(206,42,44)" rx="2" ry="2" />
<text  x="830.21" y="543.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (27 samples, 0.13%)</title><rect x="850.5" y="469" width="1.6" height="15.0" fill="rgb(241,129,5)" rx="2" ry="2" />
<text  x="853.50" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (4 samples, 0.02%)</title><rect x="661.2" y="597" width="0.3" height="15.0" fill="rgb(221,97,51)" rx="2" ry="2" />
<text  x="664.25" y="607.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (3 samples, 0.01%)</title><rect x="174.0" y="453" width="0.1" height="15.0" fill="rgb(243,8,44)" rx="2" ry="2" />
<text  x="176.96" y="463.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (5,609 samples, 27.95%)</title><rect x="591.9" y="645" width="329.8" height="15.0" fill="rgb(210,125,8)" rx="2" ry="2" />
<text  x="594.85" y="655.5" >Game_Picture::RequestPictureSprite</text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (34 samples, 0.17%)</title><rect x="172.1" y="709" width="2.0" height="15.0" fill="rgb(244,172,47)" rx="2" ry="2" />
<text  x="175.14" y="719.5" ></text>
</g>
<g >
<title>Window_Selectable::Update (2 samples, 0.01%)</title><rect x="1179.6" y="741" width="0.2" height="15.0" fill="rgb(248,163,37)" rx="2" ry="2" />
<text  x="1182.65" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (6 samples, 0.03%)</title><rect x="94.2" y="901" width="0.3" height="15.0" fill="rgb(217,47,29)" rx="2" ry="2" />
<text  x="97.16" y="911.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.01%)</title><rect x="892.8" y="117" width="0.2" height="15.0" fill="rgb(216,202,9)" rx="2" ry="2" />
<text  x="895.84" y="127.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (269 samples, 1.34%)</title><rect x="806.6" y="389" width="15.8" height="15.0" fill="rgb(252,59,14)" rx="2" ry="2" />
<text  x="809.62" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt;::_M_head (8 samples, 0.04%)</title><rect x="57.5" y="901" width="0.5" height="15.0" fill="rgb(245,215,41)" rx="2" ry="2" />
<text  x="60.52" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (5 samples, 0.02%)</title><rect x="1039.4" y="677" width="0.3" height="15.0" fill="rgb(234,155,47)" rx="2" ry="2" />
<text  x="1042.45" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (68 samples, 0.34%)</title><rect x="939.3" y="629" width="4.0" height="15.0" fill="rgb(246,18,32)" rx="2" ry="2" />
<text  x="942.30" y="639.5" ></text>
</g>
<g >
<title>Scene_Map::Update (235 samples, 1.17%)</title><rect x="149.4" y="901" width="13.9" height="15.0" fill="rgb(220,121,24)" rx="2" ry="2" />
<text  x="152.44" y="911.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (38 samples, 0.19%)</title><rect x="99.7" y="901" width="2.3" height="15.0" fill="rgb(241,76,15)" rx="2" ry="2" />
<text  x="102.74" y="911.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="1182.8" y="917" width="0.1" height="15.0" fill="rgb(249,206,20)" rx="2" ry="2" />
<text  x="1185.83" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="572.2" y="629" width="0.1" height="15.0" fill="rgb(234,201,37)" rx="2" ry="2" />
<text  x="575.15" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (13 samples, 0.06%)</title><rect x="955.1" y="629" width="0.8" height="15.0" fill="rgb(254,159,42)" rx="2" ry="2" />
<text  x="958.12" y="639.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.04%)</title><rect x="163.3" y="581" width="0.5" height="15.0" fill="rgb(205,136,11)" rx="2" ry="2" />
<text  x="166.26" y="591.5" ></text>
</g>
<g >
<title>memcpy (4 samples, 0.02%)</title><rect x="962.1" y="629" width="0.2" height="15.0" fill="rgb(219,5,2)" rx="2" ry="2" />
<text  x="965.06" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (4 samples, 0.02%)</title><rect x="550.8" y="661" width="0.2" height="15.0" fill="rgb(237,173,47)" rx="2" ry="2" />
<text  x="553.81" y="671.5" ></text>
</g>
<g >
<title>Bitmap::pixels (8 samples, 0.04%)</title><rect x="783.9" y="517" width="0.4" height="15.0" fill="rgb(211,4,22)" rx="2" ry="2" />
<text  x="786.87" y="527.5" ></text>
</g>
<g >
<title>Bitmap::height (7 samples, 0.03%)</title><rect x="825.5" y="517" width="0.4" height="15.0" fill="rgb(225,214,24)" rx="2" ry="2" />
<text  x="828.50" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (3 samples, 0.01%)</title><rect x="416.9" y="613" width="0.2" height="15.0" fill="rgb(234,193,14)" rx="2" ry="2" />
<text  x="419.90" y="623.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (16,083 samples, 80.15%)</title><rect x="191.0" y="725" width="945.8" height="15.0" fill="rgb(244,61,33)" rx="2" ry="2" />
<text  x="193.95" y="735.5" >Game_Interpreter::Update</text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (10 samples, 0.05%)</title><rect x="148.8" y="773" width="0.6" height="15.0" fill="rgb(211,178,46)" rx="2" ry="2" />
<text  x="151.85" y="783.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (4 samples, 0.02%)</title><rect x="892.7" y="181" width="0.3" height="15.0" fill="rgb(215,90,9)" rx="2" ry="2" />
<text  x="895.72" y="191.5" ></text>
</g>
<g >
<title>Scene::MainFunction (17,009 samples, 84.77%)</title><rect x="182.2" y="837" width="1000.3" height="15.0" fill="rgb(239,6,35)" rx="2" ry="2" />
<text  x="185.19" y="847.5" >Scene::MainFunction</text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (22 samples, 0.11%)</title><rect x="1172.8" y="645" width="1.3" height="15.0" fill="rgb(222,50,35)" rx="2" ry="2" />
<text  x="1175.77" y="655.5" ></text>
</g>
<g >
<title>do_syscall_64 (10 samples, 0.05%)</title><rect x="145.1" y="421" width="0.6" height="15.0" fill="rgb(209,99,35)" rx="2" ry="2" />
<text  x="148.08" y="431.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (6 samples, 0.03%)</title><rect x="968.2" y="597" width="0.4" height="15.0" fill="rgb(237,139,25)" rx="2" ry="2" />
<text  x="971.23" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (10 samples, 0.05%)</title><rect x="938.2" y="629" width="0.6" height="15.0" fill="rgb(225,97,8)" rx="2" ry="2" />
<text  x="941.18" y="639.5" ></text>
</g>
<g >
<title>sync_regs (11 samples, 0.05%)</title><rect x="789.2" y="469" width="0.7" height="15.0" fill="rgb(219,157,36)" rx="2" ry="2" />
<text  x="792.22" y="479.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (119 samples, 0.59%)</title><rect x="131.0" y="789" width="7.0" height="15.0" fill="rgb(233,137,47)" rx="2" ry="2" />
<text  x="133.97" y="799.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (5 samples, 0.02%)</title><rect x="910.7" y="469" width="0.3" height="15.0" fill="rgb(218,197,4)" rx="2" ry="2" />
<text  x="913.66" y="479.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (297 samples, 1.48%)</title><rect x="108.9" y="821" width="17.4" height="15.0" fill="rgb(241,66,37)" rx="2" ry="2" />
<text  x="111.86" y="831.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (9 samples, 0.04%)</title><rect x="1168.4" y="709" width="0.5" height="15.0" fill="rgb(223,192,44)" rx="2" ry="2" />
<text  x="1171.42" y="719.5" ></text>
</g>
<g >
<title>std::min&lt;int&gt; (15 samples, 0.07%)</title><rect x="969.7" y="661" width="0.9" height="15.0" fill="rgb(245,74,45)" rx="2" ry="2" />
<text  x="972.70" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.03%)</title><rect x="727.9" y="405" width="0.5" height="15.0" fill="rgb(246,108,27)" rx="2" ry="2" />
<text  x="730.94" y="415.5" ></text>
</g>
<g >
<title>Tone::Tone (24 samples, 0.12%)</title><rect x="840.3" y="533" width="1.4" height="15.0" fill="rgb(249,198,46)" rx="2" ry="2" />
<text  x="843.32" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt; (6 samples, 0.03%)</title><rect x="1139.7" y="741" width="0.3" height="15.0" fill="rgb(208,130,46)" rx="2" ry="2" />
<text  x="1142.66" y="751.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (3 samples, 0.01%)</title><rect x="25.5" y="901" width="0.1" height="15.0" fill="rgb(216,32,34)" rx="2" ry="2" />
<text  x="28.47" y="911.5" ></text>
</g>
<g >
<title>std::swap&lt;Bitmap*&gt; (5 samples, 0.02%)</title><rect x="844.3" y="485" width="0.3" height="15.0" fill="rgb(237,149,15)" rx="2" ry="2" />
<text  x="847.26" y="495.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::~_Head_base (35 samples, 0.17%)</title><rect x="143.7" y="565" width="2.1" height="15.0" fill="rgb(233,49,42)" rx="2" ry="2" />
<text  x="146.73" y="575.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (4 samples, 0.02%)</title><rect x="740.2" y="533" width="0.2" height="15.0" fill="rgb(252,113,19)" rx="2" ry="2" />
<text  x="743.17" y="543.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt;::_M_head (2 samples, 0.01%)</title><rect x="57.4" y="901" width="0.1" height="15.0" fill="rgb(241,29,16)" rx="2" ry="2" />
<text  x="60.40" y="911.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (155 samples, 0.77%)</title><rect x="402.7" y="661" width="9.1" height="15.0" fill="rgb(229,140,43)" rx="2" ry="2" />
<text  x="405.67" y="671.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustShowParams (14 samples, 0.07%)</title><rect x="956.5" y="661" width="0.8" height="15.0" fill="rgb(239,27,29)" rx="2" ry="2" />
<text  x="959.47" y="671.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (2 samples, 0.01%)</title><rect x="130.6" y="565" width="0.1" height="15.0" fill="rgb(246,24,29)" rx="2" ry="2" />
<text  x="133.56" y="575.5" ></text>
</g>
<g >
<title>Sdl2Ui::ProcessEvents (32 samples, 0.16%)</title><rect x="1180.3" y="805" width="1.9" height="15.0" fill="rgb(253,94,42)" rx="2" ry="2" />
<text  x="1183.30" y="815.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (3 samples, 0.01%)</title><rect x="55.8" y="901" width="0.1" height="15.0" fill="rgb(219,83,40)" rx="2" ry="2" />
<text  x="58.75" y="911.5" ></text>
</g>
<g >
<title>Bitmap::GetHeight (5 samples, 0.02%)</title><rect x="928.4" y="629" width="0.3" height="15.0" fill="rgb(249,195,9)" rx="2" ry="2" />
<text  x="931.36" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (4 samples, 0.02%)</title><rect x="302.7" y="677" width="0.2" height="15.0" fill="rgb(249,103,12)" rx="2" ry="2" />
<text  x="305.69" y="687.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (5 samples, 0.02%)</title><rect x="591.5" y="629" width="0.3" height="15.0" fill="rgb(247,181,45)" rx="2" ry="2" />
<text  x="594.50" y="639.5" ></text>
</g>
<g >
<title>std::any_of&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, Input::UiSource::Update()::{lambda(int)#1}&gt; (4 samples, 0.02%)</title><rect x="183.5" y="773" width="0.3" height="15.0" fill="rgb(242,179,40)" rx="2" ry="2" />
<text  x="186.54" y="783.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (5 samples, 0.02%)</title><rect x="105.7" y="901" width="0.3" height="15.0" fill="rgb(227,73,18)" rx="2" ry="2" />
<text  x="108.68" y="911.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (4 samples, 0.02%)</title><rect x="937.4" y="613" width="0.2" height="15.0" fill="rgb(249,200,35)" rx="2" ry="2" />
<text  x="940.36" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (13 samples, 0.06%)</title><rect x="166.3" y="421" width="0.8" height="15.0" fill="rgb(239,173,15)" rx="2" ry="2" />
<text  x="169.31" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (3 samples, 0.01%)</title><rect x="640.8" y="565" width="0.2" height="15.0" fill="rgb(247,129,24)" rx="2" ry="2" />
<text  x="643.78" y="575.5" ></text>
</g>
<g >
<title>std::__find_if&lt;int const*, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (48 samples, 0.24%)</title><rect x="452.8" y="613" width="2.8" height="15.0" fill="rgb(245,84,38)" rx="2" ry="2" />
<text  x="455.77" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.04%)</title><rect x="163.3" y="501" width="0.5" height="15.0" fill="rgb(217,165,43)" rx="2" ry="2" />
<text  x="166.26" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (6 samples, 0.03%)</title><rect x="1170.2" y="693" width="0.3" height="15.0" fill="rgb(246,53,51)" rx="2" ry="2" />
<text  x="1173.18" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (14 samples, 0.07%)</title><rect x="406.8" y="613" width="0.8" height="15.0" fill="rgb(218,11,5)" rx="2" ry="2" />
<text  x="409.78" y="623.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (2 samples, 0.01%)</title><rect x="105.4" y="901" width="0.1" height="15.0" fill="rgb(225,5,9)" rx="2" ry="2" />
<text  x="108.39" y="911.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (3 samples, 0.01%)</title><rect x="1137.0" y="725" width="0.1" height="15.0" fill="rgb(248,94,52)" rx="2" ry="2" />
<text  x="1139.95" y="735.5" ></text>
</g>
<g >
<title>Game_Screen::Update (564 samples, 2.81%)</title><rect x="1145.2" y="757" width="33.2" height="15.0" fill="rgb(226,78,24)" rx="2" ry="2" />
<text  x="1148.19" y="767.5" >Ga..</text>
</g>
<g >
<title>FileRequestAsync::IsReady (2 samples, 0.01%)</title><rect x="653.7" y="613" width="0.1" height="15.0" fill="rgb(222,192,12)" rx="2" ry="2" />
<text  x="656.72" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (2 samples, 0.01%)</title><rect x="130.6" y="533" width="0.1" height="15.0" fill="rgb(223,120,34)" rx="2" ry="2" />
<text  x="133.56" y="543.5" ></text>
</g>
<g >
<title>operator delete@plt (4 samples, 0.02%)</title><rect x="868.1" y="405" width="0.2" height="15.0" fill="rgb(209,83,27)" rx="2" ry="2" />
<text  x="871.08" y="415.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (8 samples, 0.04%)</title><rect x="829.1" y="517" width="0.5" height="15.0" fill="rgb(245,183,25)" rx="2" ry="2" />
<text  x="832.15" y="527.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.02%)</title><rect x="149.1" y="517" width="0.3" height="15.0" fill="rgb(247,59,3)" rx="2" ry="2" />
<text  x="152.14" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator()&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;&amp;&gt; (9 samples, 0.04%)</title><rect x="632.4" y="517" width="0.6" height="15.0" fill="rgb(217,217,8)" rx="2" ry="2" />
<text  x="635.43" y="527.5" ></text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;Bitmap&gt;, true&gt;::_Sp_ebo_helper (7 samples, 0.03%)</title><rect x="804.9" y="405" width="0.4" height="15.0" fill="rgb(248,190,47)" rx="2" ry="2" />
<text  x="807.92" y="415.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_memcmp (6 samples, 0.03%)</title><rect x="174.5" y="901" width="0.4" height="15.0" fill="rgb(210,118,7)" rx="2" ry="2" />
<text  x="177.55" y="911.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (16 samples, 0.08%)</title><rect x="565.8" y="661" width="0.9" height="15.0" fill="rgb(226,169,32)" rx="2" ry="2" />
<text  x="568.80" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate@plt (3 samples, 0.01%)</title><rect x="602.3" y="565" width="0.1" height="15.0" fill="rgb(207,24,10)" rx="2" ry="2" />
<text  x="605.26" y="575.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (3 samples, 0.01%)</title><rect x="854.5" y="533" width="0.2" height="15.0" fill="rgb(223,227,18)" rx="2" ry="2" />
<text  x="857.50" y="543.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="867.5" y="229" width="0.1" height="15.0" fill="rgb(220,222,27)" rx="2" ry="2" />
<text  x="870.49" y="239.5" ></text>
</g>
<g >
<title>operator delete (15 samples, 0.07%)</title><rect x="173.1" y="469" width="0.9" height="15.0" fill="rgb(236,28,17)" rx="2" ry="2" />
<text  x="176.08" y="479.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (10 samples, 0.05%)</title><rect x="148.8" y="821" width="0.6" height="15.0" fill="rgb(246,22,9)" rx="2" ry="2" />
<text  x="151.85" y="831.5" ></text>
</g>
<g >
<title>__interceptor_free (164 samples, 0.82%)</title><rect x="895.7" y="389" width="9.7" height="15.0" fill="rgb(213,94,31)" rx="2" ry="2" />
<text  x="898.72" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt; &gt; &gt; &gt;::base (2 samples, 0.01%)</title><rect x="1176.9" y="725" width="0.2" height="15.0" fill="rgb(207,116,24)" rx="2" ry="2" />
<text  x="1179.94" y="735.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (18 samples, 0.09%)</title><rect x="647.6" y="549" width="1.1" height="15.0" fill="rgb(253,60,0)" rx="2" ry="2" />
<text  x="650.61" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (7 samples, 0.03%)</title><rect x="847.7" y="517" width="0.4" height="15.0" fill="rgb(223,105,4)" rx="2" ry="2" />
<text  x="850.73" y="527.5" ></text>
</g>
<g >
<title>FileRequestAsync::BindStart (10 samples, 0.05%)</title><rect x="148.8" y="693" width="0.6" height="15.0" fill="rgb(217,14,38)" rx="2" ry="2" />
<text  x="151.85" y="703.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (2 samples, 0.01%)</title><rect x="892.7" y="117" width="0.1" height="15.0" fill="rgb(226,78,39)" rx="2" ry="2" />
<text  x="895.72" y="127.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (7 samples, 0.03%)</title><rect x="945.2" y="629" width="0.4" height="15.0" fill="rgb(219,147,41)" rx="2" ry="2" />
<text  x="948.24" y="639.5" ></text>
</g>
<g >
<title>Bitmap::Init (297 samples, 1.48%)</title><rect x="108.9" y="501" width="17.4" height="15.0" fill="rgb(242,139,19)" rx="2" ry="2" />
<text  x="111.86" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (2 samples, 0.01%)</title><rect x="937.1" y="629" width="0.1" height="15.0" fill="rgb(205,154,16)" rx="2" ry="2" />
<text  x="940.12" y="639.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (9 samples, 0.04%)</title><rect x="145.1" y="405" width="0.6" height="15.0" fill="rgb(238,16,51)" rx="2" ry="2" />
<text  x="148.14" y="415.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (4 samples, 0.02%)</title><rect x="1180.8" y="645" width="0.2" height="15.0" fill="rgb(239,222,25)" rx="2" ry="2" />
<text  x="1183.77" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="145.7" y="437" width="0.1" height="15.0" fill="rgb(232,225,36)" rx="2" ry="2" />
<text  x="148.67" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (5 samples, 0.02%)</title><rect x="190.7" y="693" width="0.3" height="15.0" fill="rgb(246,66,18)" rx="2" ry="2" />
<text  x="193.66" y="703.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::~function (20 samples, 0.10%)</title><rect x="917.6" y="629" width="1.2" height="15.0" fill="rgb(242,126,20)" rx="2" ry="2" />
<text  x="920.60" y="639.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::end (5 samples, 0.02%)</title><rect x="80.7" y="901" width="0.3" height="15.0" fill="rgb(216,138,27)" rx="2" ry="2" />
<text  x="83.69" y="911.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (159 samples, 0.79%)</title><rect x="149.4" y="549" width="9.4" height="15.0" fill="rgb(210,149,46)" rx="2" ry="2" />
<text  x="152.44" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (9 samples, 0.04%)</title><rect x="673.9" y="469" width="0.5" height="15.0" fill="rgb(213,228,45)" rx="2" ry="2" />
<text  x="676.89" y="479.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (71 samples, 0.35%)</title><rect x="126.3" y="789" width="4.2" height="15.0" fill="rgb(224,206,54)" rx="2" ry="2" />
<text  x="129.32" y="799.5" ></text>
</g>
<g >
<title>free_unref_page_commit (3 samples, 0.01%)</title><rect x="890.4" y="69" width="0.2" height="15.0" fill="rgb(232,145,28)" rx="2" ry="2" />
<text  x="893.43" y="79.5" ></text>
</g>
<g >
<title>__lru_cache_add (4 samples, 0.02%)</title><rect x="128.2" y="277" width="0.2" height="15.0" fill="rgb(250,94,34)" rx="2" ry="2" />
<text  x="131.21" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (22 samples, 0.11%)</title><rect x="674.5" y="485" width="1.3" height="15.0" fill="rgb(215,111,23)" rx="2" ry="2" />
<text  x="677.48" y="495.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (422 samples, 2.10%)</title><rect x="800.1" y="501" width="24.8" height="15.0" fill="rgb(233,210,43)" rx="2" ry="2" />
<text  x="803.10" y="511.5" >s..</text>
</g>
<g >
<title>Game_Map::Refresh (2 samples, 0.01%)</title><rect x="1136.8" y="725" width="0.1" height="15.0" fill="rgb(245,19,53)" rx="2" ry="2" />
<text  x="1139.78" y="735.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (444 samples, 2.21%)</title><rect x="756.7" y="501" width="26.1" height="15.0" fill="rgb(223,52,36)" rx="2" ry="2" />
<text  x="759.70" y="511.5" >[..</text>
</g>
<g >
<title>pixman_region32_fini (4 samples, 0.02%)</title><rect x="895.5" y="373" width="0.2" height="15.0" fill="rgb(226,3,26)" rx="2" ry="2" />
<text  x="898.49" y="383.5" ></text>
</g>
<g >
<title>Game_Player::Update (54 samples, 0.27%)</title><rect x="1142.0" y="757" width="3.2" height="15.0" fill="rgb(246,5,50)" rx="2" ry="2" />
<text  x="1145.01" y="767.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (28 samples, 0.14%)</title><rect x="736.1" y="533" width="1.7" height="15.0" fill="rgb(240,30,29)" rx="2" ry="2" />
<text  x="739.11" y="543.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (14 samples, 0.07%)</title><rect x="138.0" y="613" width="0.8" height="15.0" fill="rgb(209,104,30)" rx="2" ry="2" />
<text  x="140.97" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (40 samples, 0.20%)</title><rect x="649.4" y="517" width="2.4" height="15.0" fill="rgb(236,104,24)" rx="2" ry="2" />
<text  x="652.43" y="527.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_invoke (65 samples, 0.32%)</title><rect x="163.3" y="709" width="3.8" height="15.0" fill="rgb(228,162,29)" rx="2" ry="2" />
<text  x="166.26" y="719.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustId (7 samples, 0.03%)</title><rect x="35.2" y="901" width="0.4" height="15.0" fill="rgb(217,5,43)" rx="2" ry="2" />
<text  x="38.23" y="911.5" ></text>
</g>
<g >
<title>SDL_PumpEvents_REAL (5 samples, 0.02%)</title><rect x="1181.9" y="741" width="0.3" height="15.0" fill="rgb(219,149,51)" rx="2" ry="2" />
<text  x="1184.88" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (2 samples, 0.01%)</title><rect x="40.9" y="901" width="0.1" height="15.0" fill="rgb(211,96,11)" rx="2" ry="2" />
<text  x="43.87" y="911.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (4 samples, 0.02%)</title><rect x="892.7" y="229" width="0.3" height="15.0" fill="rgb(221,93,2)" rx="2" ry="2" />
<text  x="895.72" y="239.5" ></text>
</g>
<g >
<title>free_unref_page_list (2 samples, 0.01%)</title><rect x="145.3" y="245" width="0.1" height="15.0" fill="rgb(250,26,45)" rx="2" ry="2" />
<text  x="148.32" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_ppoll (78 samples, 0.39%)</title><rect x="16.2" y="885" width="4.6" height="15.0" fill="rgb(251,47,13)" rx="2" ry="2" />
<text  x="19.17" y="895.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="160.3" y="469" width="0.2" height="15.0" fill="rgb(246,94,37)" rx="2" ry="2" />
<text  x="163.32" y="479.5" ></text>
</g>
<g >
<title>calloc (46 samples, 0.23%)</title><rect x="126.3" y="469" width="2.7" height="15.0" fill="rgb(215,120,2)" rx="2" ry="2" />
<text  x="129.32" y="479.5" ></text>
</g>
<g >
<title>std::forward&lt;int&amp;&gt; (2 samples, 0.01%)</title><rect x="822.7" y="421" width="0.1" height="15.0" fill="rgb(252,84,11)" rx="2" ry="2" />
<text  x="825.68" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (9 samples, 0.04%)</title><rect x="405.5" y="613" width="0.6" height="15.0" fill="rgb(254,178,6)" rx="2" ry="2" />
<text  x="408.55" y="623.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 2ul, 3ul&gt;::__less (18 samples, 0.09%)</title><rect x="713.4" y="421" width="1.0" height="15.0" fill="rgb(220,102,54)" rx="2" ry="2" />
<text  x="716.35" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::begin@plt (2 samples, 0.01%)</title><rect x="596.0" y="597" width="0.1" height="15.0" fill="rgb(215,109,35)" rx="2" ry="2" />
<text  x="599.03" y="607.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="651.4" y="469" width="0.2" height="15.0" fill="rgb(251,8,40)" rx="2" ry="2" />
<text  x="654.43" y="479.5" ></text>
</g>
<g >
<title>Player::MainLoop (17,010 samples, 84.77%)</title><rect x="182.2" y="853" width="1000.3" height="15.0" fill="rgb(243,105,32)" rx="2" ry="2" />
<text  x="185.19" y="863.5" >Player::MainLoop</text>
</g>
<g >
<title>__fget_light (3 samples, 0.01%)</title><rect x="16.4" y="837" width="0.2" height="15.0" fill="rgb(244,41,17)" rx="2" ry="2" />
<text  x="19.41" y="847.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.03%)</title><rect x="125.8" y="389" width="0.4" height="15.0" fill="rgb(218,155,37)" rx="2" ry="2" />
<text  x="128.79" y="399.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (11 samples, 0.05%)</title><rect x="173.3" y="453" width="0.7" height="15.0" fill="rgb(235,131,18)" rx="2" ry="2" />
<text  x="176.31" y="463.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.02%)</title><rect x="175.0" y="469" width="0.3" height="15.0" fill="rgb(209,36,19)" rx="2" ry="2" />
<text  x="177.96" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (6 samples, 0.03%)</title><rect x="823.3" y="405" width="0.3" height="15.0" fill="rgb(230,129,23)" rx="2" ry="2" />
<text  x="826.27" y="415.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (314 samples, 1.56%)</title><rect x="710.3" y="453" width="18.5" height="15.0" fill="rgb(226,197,36)" rx="2" ry="2" />
<text  x="713.30" y="463.5" ></text>
</g>
<g >
<title>operator delete (83 samples, 0.41%)</title><rect x="623.0" y="613" width="4.8" height="15.0" fill="rgb(213,59,17)" rx="2" ry="2" />
<text  x="625.96" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (3 samples, 0.01%)</title><rect x="638.4" y="549" width="0.2" height="15.0" fill="rgb(224,205,34)" rx="2" ry="2" />
<text  x="641.43" y="559.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (2 samples, 0.01%)</title><rect x="795.8" y="405" width="0.1" height="15.0" fill="rgb(210,52,43)" rx="2" ry="2" />
<text  x="798.80" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_v (2 samples, 0.01%)</title><rect x="179.1" y="901" width="0.1" height="15.0" fill="rgb(223,171,23)" rx="2" ry="2" />
<text  x="182.08" y="911.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_Rb_tree_iterator (3 samples, 0.01%)</title><rect x="731.2" y="485" width="0.1" height="15.0" fill="rgb(208,204,6)" rx="2" ry="2" />
<text  x="734.17" y="495.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (6 samples, 0.03%)</title><rect x="920.0" y="581" width="0.4" height="15.0" fill="rgb(225,70,47)" rx="2" ry="2" />
<text  x="923.01" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.03%)</title><rect x="162.7" y="437" width="0.3" height="15.0" fill="rgb(241,58,52)" rx="2" ry="2" />
<text  x="165.67" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (54 samples, 0.27%)</title><rect x="541.0" y="645" width="3.2" height="15.0" fill="rgb(249,152,46)" rx="2" ry="2" />
<text  x="543.99" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_eq (2 samples, 0.01%)</title><rect x="698.2" y="437" width="0.1" height="15.0" fill="rgb(213,220,33)" rx="2" ry="2" />
<text  x="701.18" y="447.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="129.0" y="389" width="0.2" height="15.0" fill="rgb(214,145,44)" rx="2" ry="2" />
<text  x="132.03" y="399.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::CommonEvent&gt; (8 samples, 0.04%)</title><rect x="1140.7" y="725" width="0.4" height="15.0" fill="rgb(209,190,52)" rx="2" ry="2" />
<text  x="1143.66" y="735.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}::operator() (182 samples, 0.91%)</title><rect x="138.0" y="661" width="10.7" height="15.0" fill="rgb(245,19,27)" rx="2" ry="2" />
<text  x="140.97" y="671.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (4 samples, 0.02%)</title><rect x="174.3" y="901" width="0.2" height="15.0" fill="rgb(234,88,41)" rx="2" ry="2" />
<text  x="177.31" y="911.5" ></text>
</g>
<g >
<title>__sched_text_start (64 samples, 0.32%)</title><rect x="16.9" y="789" width="3.8" height="15.0" fill="rgb(249,108,54)" rx="2" ry="2" />
<text  x="19.94" y="799.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (2 samples, 0.01%)</title><rect x="653.4" y="597" width="0.1" height="15.0" fill="rgb(247,116,30)" rx="2" ry="2" />
<text  x="656.43" y="607.5" ></text>
</g>
<g >
<title>AsyncHandler::IsImportantFilePending (2 samples, 0.01%)</title><rect x="184.2" y="789" width="0.1" height="15.0" fill="rgb(208,99,18)" rx="2" ry="2" />
<text  x="187.19" y="799.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;2ul, bool&gt; (2 samples, 0.01%)</title><rect x="65.9" y="901" width="0.1" height="15.0" fill="rgb(206,22,36)" rx="2" ry="2" />
<text  x="68.93" y="911.5" ></text>
</g>
<g >
<title>std::forward&lt;int&amp;&gt; (3 samples, 0.01%)</title><rect x="825.3" y="501" width="0.2" height="15.0" fill="rgb(222,115,25)" rx="2" ry="2" />
<text  x="828.33" y="511.5" ></text>
</g>
<g >
<title>Bitmap::find_format (3 samples, 0.01%)</title><rect x="24.5" y="901" width="0.1" height="15.0" fill="rgb(254,38,42)" rx="2" ry="2" />
<text  x="27.47" y="911.5" ></text>
</g>
<g >
<title>SDL_PumpEvents_REAL (13 samples, 0.06%)</title><rect x="1180.3" y="773" width="0.8" height="15.0" fill="rgb(226,205,33)" rx="2" ry="2" />
<text  x="1183.30" y="783.5" ></text>
</g>
<g >
<title>Sprite_Character::Update (3 samples, 0.01%)</title><rect x="1179.2" y="757" width="0.2" height="15.0" fill="rgb(246,73,5)" rx="2" ry="2" />
<text  x="1182.18" y="767.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.04%)</title><rect x="163.3" y="549" width="0.5" height="15.0" fill="rgb(232,30,23)" rx="2" ry="2" />
<text  x="166.26" y="559.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}::operator() (4,161 samples, 20.74%)</title><rect x="666.7" y="581" width="244.7" height="15.0" fill="rgb(218,200,13)" rx="2" ry="2" />
<text  x="669.66" y="591.5" >Game_Picture::RequestPictureSpri..</text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (10 samples, 0.05%)</title><rect x="138.2" y="501" width="0.6" height="15.0" fill="rgb(254,126,17)" rx="2" ry="2" />
<text  x="141.20" y="511.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (297 samples, 1.48%)</title><rect x="108.9" y="837" width="17.4" height="15.0" fill="rgb(247,184,45)" rx="2" ry="2" />
<text  x="111.86" y="847.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (42 samples, 0.21%)</title><rect x="662.7" y="549" width="2.5" height="15.0" fill="rgb(237,193,29)" rx="2" ry="2" />
<text  x="665.72" y="559.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (12,627 samples, 62.93%)</title><rect x="354.9" y="709" width="742.6" height="15.0" fill="rgb(231,77,43)" rx="2" ry="2" />
<text  x="357.91" y="719.5" >Game_Interpreter_Map::ExecuteCommand</text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.05%)</title><rect x="601.1" y="485" width="0.6" height="15.0" fill="rgb(212,116,14)" rx="2" ry="2" />
<text  x="604.15" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (2 samples, 0.01%)</title><rect x="697.7" y="389" width="0.1" height="15.0" fill="rgb(248,94,31)" rx="2" ry="2" />
<text  x="700.71" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (2 samples, 0.01%)</title><rect x="442.4" y="629" width="0.1" height="15.0" fill="rgb(233,161,28)" rx="2" ry="2" />
<text  x="445.36" y="639.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (7 samples, 0.03%)</title><rect x="905.0" y="357" width="0.4" height="15.0" fill="rgb(234,67,24)" rx="2" ry="2" />
<text  x="907.95" y="367.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_M_head (10 samples, 0.05%)</title><rect x="722.7" y="389" width="0.6" height="15.0" fill="rgb(217,2,20)" rx="2" ry="2" />
<text  x="725.70" y="399.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::~_Head_base (16 samples, 0.08%)</title><rect x="173.0" y="485" width="1.0" height="15.0" fill="rgb(222,48,22)" rx="2" ry="2" />
<text  x="176.02" y="495.5" ></text>
</g>
<g >
<title>Sprite::SetOy (2 samples, 0.01%)</title><rect x="837.8" y="533" width="0.1" height="15.0" fill="rgb(239,98,19)" rx="2" ry="2" />
<text  x="840.79" y="543.5" ></text>
</g>
<g >
<title>Game_Map::Update (65 samples, 0.32%)</title><rect x="163.3" y="885" width="3.8" height="15.0" fill="rgb(226,31,26)" rx="2" ry="2" />
<text  x="166.26" y="895.5" ></text>
</g>
<g >
<title>Bitmap::initialize_formats (22 samples, 0.11%)</title><rect x="129.2" y="501" width="1.3" height="15.0" fill="rgb(251,166,13)" rx="2" ry="2" />
<text  x="132.21" y="511.5" ></text>
</g>
<g >
<title>Rect::Rect (3 samples, 0.01%)</title><rect x="35.9" y="901" width="0.2" height="15.0" fill="rgb(243,47,42)" rx="2" ry="2" />
<text  x="38.88" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt;::begin (6 samples, 0.03%)</title><rect x="89.8" y="901" width="0.4" height="15.0" fill="rgb(243,132,45)" rx="2" ry="2" />
<text  x="92.80" y="911.5" ></text>
</g>
<g >
<title>pthread_getspecific@plt (4 samples, 0.02%)</title><rect x="892.3" y="261" width="0.2" height="15.0" fill="rgb(207,196,8)" rx="2" ry="2" />
<text  x="895.31" y="271.5" ></text>
</g>
<g >
<title>Scene_Map::Update (16,934 samples, 84.40%)</title><rect x="184.3" y="805" width="995.9" height="15.0" fill="rgb(241,142,36)" rx="2" ry="2" />
<text  x="187.31" y="815.5" >Scene_Map::Update</text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (49 samples, 0.24%)</title><rect x="175.0" y="709" width="2.8" height="15.0" fill="rgb(241,43,14)" rx="2" ry="2" />
<text  x="177.96" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (5 samples, 0.02%)</title><rect x="55.2" y="901" width="0.3" height="15.0" fill="rgb(241,125,32)" rx="2" ry="2" />
<text  x="58.22" y="911.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (2 samples, 0.01%)</title><rect x="892.7" y="149" width="0.1" height="15.0" fill="rgb(213,107,36)" rx="2" ry="2" />
<text  x="895.72" y="159.5" ></text>
</g>
<g >
<title>do_page_fault (4 samples, 0.02%)</title><rect x="116.7" y="389" width="0.3" height="15.0" fill="rgb(248,159,26)" rx="2" ry="2" />
<text  x="119.74" y="399.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Transition*, std::default_delete&lt;Transition&gt; &gt; (2 samples, 0.01%)</title><rect x="914.1" y="565" width="0.1" height="15.0" fill="rgb(213,7,52)" rx="2" ry="2" />
<text  x="917.07" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (3 samples, 0.01%)</title><rect x="422.1" y="597" width="0.2" height="15.0" fill="rgb(247,199,37)" rx="2" ry="2" />
<text  x="425.07" y="607.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (56 samples, 0.28%)</title><rect x="163.8" y="565" width="3.3" height="15.0" fill="rgb(220,147,43)" rx="2" ry="2" />
<text  x="166.79" y="575.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (2 samples, 0.01%)</title><rect x="735.6" y="453" width="0.1" height="15.0" fill="rgb(236,54,11)" rx="2" ry="2" />
<text  x="738.58" y="463.5" ></text>
</g>
<g >
<title>handle_mm_fault (94 samples, 0.47%)</title><rect x="790.5" y="437" width="5.5" height="15.0" fill="rgb(221,39,9)" rx="2" ry="2" />
<text  x="793.51" y="447.5" ></text>
</g>
<g >
<title>SDL_IOReady (2 samples, 0.01%)</title><rect x="1180.5" y="725" width="0.1" height="15.0" fill="rgb(205,193,41)" rx="2" ry="2" />
<text  x="1183.53" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::operator[] (22 samples, 0.11%)</title><rect x="186.9" y="693" width="1.3" height="15.0" fill="rgb(228,194,23)" rx="2" ry="2" />
<text  x="189.90" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (6 samples, 0.03%)</title><rect x="411.4" y="613" width="0.3" height="15.0" fill="rgb(249,52,8)" rx="2" ry="2" />
<text  x="414.37" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (12 samples, 0.06%)</title><rect x="658.3" y="533" width="0.7" height="15.0" fill="rgb(237,176,3)" rx="2" ry="2" />
<text  x="661.31" y="543.5" ></text>
</g>
<g >
<title>std::move&lt;int*&amp;&gt; (2 samples, 0.01%)</title><rect x="921.2" y="565" width="0.1" height="15.0" fill="rgb(240,215,0)" rx="2" ry="2" />
<text  x="924.18" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::CommonEvent, std::allocator&lt;RPG::CommonEvent&gt; &gt;::size (4 samples, 0.02%)</title><rect x="1143.5" y="661" width="0.2" height="15.0" fill="rgb(213,103,37)" rx="2" ry="2" />
<text  x="1146.48" y="671.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Impl::~_Impl (2 samples, 0.01%)</title><rect x="860.3" y="437" width="0.1" height="15.0" fill="rgb(237,55,18)" rx="2" ry="2" />
<text  x="863.26" y="447.5" ></text>
</g>
<g >
<title>[easyrpg-player] (3 samples, 0.01%)</title><rect x="107.4" y="917" width="0.2" height="15.0" fill="rgb(229,207,41)" rx="2" ry="2" />
<text  x="110.39" y="927.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::__allocated_ptr (2 samples, 0.01%)</title><rect x="860.4" y="453" width="0.1" height="15.0" fill="rgb(215,27,38)" rx="2" ry="2" />
<text  x="863.38" y="463.5" ></text>
</g>
<g >
<title>Game_Picture::Update (531 samples, 2.65%)</title><rect x="1145.4" y="741" width="31.3" height="15.0" fill="rgb(208,28,6)" rx="2" ry="2" />
<text  x="1148.42" y="751.5" >Ga..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="129.0" y="453" width="0.2" height="15.0" fill="rgb(234,162,17)" rx="2" ry="2" />
<text  x="132.03" y="463.5" ></text>
</g>
<g >
<title>operator new (19 samples, 0.09%)</title><rect x="1182.9" y="917" width="1.2" height="15.0" fill="rgb(217,11,21)" rx="2" ry="2" />
<text  x="1185.94" y="927.5" ></text>
</g>
<g >
<title>__GI_madvise (5 samples, 0.02%)</title><rect x="890.4" y="261" width="0.3" height="15.0" fill="rgb(236,160,54)" rx="2" ry="2" />
<text  x="893.37" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::~basic_string (3 samples, 0.01%)</title><rect x="959.1" y="645" width="0.1" height="15.0" fill="rgb(238,220,23)" rx="2" ry="2" />
<text  x="962.06" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;Bitmap&gt;::_M_ptr (5 samples, 0.02%)</title><rect x="803.5" y="421" width="0.3" height="15.0" fill="rgb(218,91,3)" rx="2" ry="2" />
<text  x="806.51" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (3 samples, 0.01%)</title><rect x="467.0" y="661" width="0.2" height="15.0" fill="rgb(205,215,18)" rx="2" ry="2" />
<text  x="470.00" y="671.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (10 samples, 0.05%)</title><rect x="148.8" y="629" width="0.6" height="15.0" fill="rgb(233,156,50)" rx="2" ry="2" />
<text  x="151.85" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (5 samples, 0.02%)</title><rect x="1093.1" y="677" width="0.3" height="15.0" fill="rgb(208,182,24)" rx="2" ry="2" />
<text  x="1096.14" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator bool (2 samples, 0.01%)</title><rect x="89.0" y="901" width="0.2" height="15.0" fill="rgb(227,110,13)" rx="2" ry="2" />
<text  x="92.04" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;Bitmap&gt;::_M_ptr (3 samples, 0.01%)</title><rect x="805.6" y="405" width="0.1" height="15.0" fill="rgb(205,169,19)" rx="2" ry="2" />
<text  x="808.57" y="415.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_init_functor (10 samples, 0.05%)</title><rect x="917.0" y="613" width="0.5" height="15.0" fill="rgb(232,133,27)" rx="2" ry="2" />
<text  x="919.95" y="623.5" ></text>
</g>
<g >
<title>Game_Picture::Show (297 samples, 1.48%)</title><rect x="108.9" y="789" width="17.4" height="15.0" fill="rgb(214,26,46)" rx="2" ry="2" />
<text  x="111.86" y="799.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (36 samples, 0.18%)</title><rect x="947.0" y="597" width="2.1" height="15.0" fill="rgb(236,82,11)" rx="2" ry="2" />
<text  x="950.00" y="607.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (56 samples, 0.28%)</title><rect x="167.1" y="901" width="3.3" height="15.0" fill="rgb(210,96,20)" rx="2" ry="2" />
<text  x="170.14" y="911.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_ptr (2 samples, 0.01%)</title><rect x="868.8" y="453" width="0.2" height="15.0" fill="rgb(213,55,32)" rx="2" ry="2" />
<text  x="871.84" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (36 samples, 0.18%)</title><rect x="947.0" y="581" width="2.1" height="15.0" fill="rgb(235,140,26)" rx="2" ry="2" />
<text  x="950.00" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (10 samples, 0.05%)</title><rect x="562.7" y="613" width="0.6" height="15.0" fill="rgb(212,101,45)" rx="2" ry="2" />
<text  x="565.69" y="623.5" ></text>
</g>
<g >
<title>Player::IsRPG2k3 (12 samples, 0.06%)</title><rect x="549.2" y="661" width="0.7" height="15.0" fill="rgb(239,177,19)" rx="2" ry="2" />
<text  x="552.22" y="671.5" ></text>
</g>
<g >
<title>Opacity::IsOpaque (2 samples, 0.01%)</title><rect x="755.2" y="517" width="0.1" height="15.0" fill="rgb(225,180,34)" rx="2" ry="2" />
<text  x="758.23" y="527.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (32 samples, 0.16%)</title><rect x="131.0" y="549" width="1.9" height="15.0" fill="rgb(244,5,13)" rx="2" ry="2" />
<text  x="133.97" y="559.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (33 samples, 0.16%)</title><rect x="721.4" y="421" width="1.9" height="15.0" fill="rgb(218,86,49)" rx="2" ry="2" />
<text  x="724.35" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::operator== (3 samples, 0.01%)</title><rect x="56.0" y="901" width="0.2" height="15.0" fill="rgb(245,2,21)" rx="2" ry="2" />
<text  x="59.05" y="911.5" ></text>
</g>
<g >
<title>Game_Picture::Move (15 samples, 0.07%)</title><rect x="575.0" y="661" width="0.9" height="15.0" fill="rgb(244,10,50)" rx="2" ry="2" />
<text  x="577.98" y="671.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (3 samples, 0.01%)</title><rect x="145.3" y="309" width="0.1" height="15.0" fill="rgb(221,64,1)" rx="2" ry="2" />
<text  x="148.26" y="319.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.05%)</title><rect x="159.7" y="469" width="0.6" height="15.0" fill="rgb(213,127,23)" rx="2" ry="2" />
<text  x="162.67" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::begin (10 samples, 0.05%)</title><rect x="188.9" y="677" width="0.6" height="15.0" fill="rgb(254,4,16)" rx="2" ry="2" />
<text  x="191.90" y="687.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (38 samples, 0.19%)</title><rect x="135.7" y="469" width="2.3" height="15.0" fill="rgb(231,66,25)" rx="2" ry="2" />
<text  x="138.73" y="479.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="15.4" y="901" width="0.1" height="15.0" fill="rgb(225,126,24)" rx="2" ry="2" />
<text  x="18.35" y="911.5" ></text>
</g>
<g >
<title>__handle_mm_fault (81 samples, 0.40%)</title><rect x="791.2" y="421" width="4.7" height="15.0" fill="rgb(248,85,45)" rx="2" ry="2" />
<text  x="794.16" y="431.5" ></text>
</g>
<g >
<title>Player::MainLoop (49 samples, 0.24%)</title><rect x="175.0" y="869" width="2.8" height="15.0" fill="rgb(231,122,7)" rx="2" ry="2" />
<text  x="177.96" y="879.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (19 samples, 0.09%)</title><rect x="131.6" y="453" width="1.1" height="15.0" fill="rgb(207,192,27)" rx="2" ry="2" />
<text  x="134.56" y="463.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 2ul, 3ul&gt;::__less (17 samples, 0.08%)</title><rect x="732.6" y="437" width="1.0" height="15.0" fill="rgb(218,208,50)" rx="2" ry="2" />
<text  x="735.64" y="447.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (23 samples, 0.11%)</title><rect x="124.9" y="405" width="1.4" height="15.0" fill="rgb(241,77,27)" rx="2" ry="2" />
<text  x="127.91" y="415.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (36 samples, 0.18%)</title><rect x="965.4" y="581" width="2.1" height="15.0" fill="rgb(251,71,8)" rx="2" ry="2" />
<text  x="968.35" y="591.5" ></text>
</g>
<g >
<title>malloc (19 samples, 0.09%)</title><rect x="163.8" y="437" width="1.1" height="15.0" fill="rgb(225,174,37)" rx="2" ry="2" />
<text  x="166.79" y="447.5" ></text>
</g>
<g >
<title>Scene::HasRequestedScene (90 samples, 0.45%)</title><rect x="1114.7" y="709" width="5.3" height="15.0" fill="rgb(249,8,21)" rx="2" ry="2" />
<text  x="1117.67" y="719.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (4 samples, 0.02%)</title><rect x="73.7" y="901" width="0.3" height="15.0" fill="rgb(211,62,54)" rx="2" ry="2" />
<text  x="76.75" y="911.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (20 samples, 0.10%)</title><rect x="629.4" y="581" width="1.2" height="15.0" fill="rgb(215,135,32)" rx="2" ry="2" />
<text  x="632.43" y="591.5" ></text>
</g>
<g >
<title>Game_Map::GetDisplayX (5 samples, 0.02%)</title><rect x="590.3" y="645" width="0.3" height="15.0" fill="rgb(214,38,37)" rx="2" ry="2" />
<text  x="593.27" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (14 samples, 0.07%)</title><rect x="1181.1" y="677" width="0.8" height="15.0" fill="rgb(216,141,24)" rx="2" ry="2" />
<text  x="1184.06" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="354.4" y="677" width="0.2" height="15.0" fill="rgb(215,222,6)" rx="2" ry="2" />
<text  x="357.44" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="108.4" y="885" width="0.2" height="15.0" fill="rgb(224,91,6)" rx="2" ry="2" />
<text  x="111.45" y="895.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (19 samples, 0.09%)</title><rect x="163.8" y="469" width="1.1" height="15.0" fill="rgb(205,68,22)" rx="2" ry="2" />
<text  x="166.79" y="479.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (4 samples, 0.02%)</title><rect x="145.2" y="325" width="0.2" height="15.0" fill="rgb(213,8,16)" rx="2" ry="2" />
<text  x="148.20" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (15 samples, 0.07%)</title><rect x="909.5" y="549" width="0.9" height="15.0" fill="rgb(252,103,52)" rx="2" ry="2" />
<text  x="912.54" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="1180.1" y="645" width="0.1" height="15.0" fill="rgb(226,65,54)" rx="2" ry="2" />
<text  x="1183.06" y="655.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::get (4 samples, 0.02%)</title><rect x="937.4" y="597" width="0.2" height="15.0" fill="rgb(229,81,41)" rx="2" ry="2" />
<text  x="940.36" y="607.5" ></text>
</g>
<g >
<title>std::_Hash_bytes@plt (7 samples, 0.03%)</title><rect x="638.0" y="533" width="0.4" height="15.0" fill="rgb(243,103,16)" rx="2" ry="2" />
<text  x="641.02" y="543.5" ></text>
</g>
<g >
<title>std::none_of&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, Input::UiSource::Update()::{lambda(int)#1}&gt; (4 samples, 0.02%)</title><rect x="183.5" y="757" width="0.3" height="15.0" fill="rgb(219,41,25)" rx="2" ry="2" />
<text  x="186.54" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (2 samples, 0.01%)</title><rect x="104.5" y="901" width="0.1" height="15.0" fill="rgb(208,80,6)" rx="2" ry="2" />
<text  x="107.51" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (14 samples, 0.07%)</title><rect x="858.4" y="469" width="0.8" height="15.0" fill="rgb(230,133,40)" rx="2" ry="2" />
<text  x="861.38" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (5 samples, 0.02%)</title><rect x="734.3" y="405" width="0.3" height="15.0" fill="rgb(229,7,34)" rx="2" ry="2" />
<text  x="737.35" y="415.5" ></text>
</g>
<g >
<title>Sprite::SetOpacity (4 samples, 0.02%)</title><rect x="837.6" y="533" width="0.2" height="15.0" fill="rgb(227,113,51)" rx="2" ry="2" />
<text  x="840.56" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (4 samples, 0.02%)</title><rect x="979.2" y="661" width="0.2" height="15.0" fill="rgb(247,209,28)" rx="2" ry="2" />
<text  x="982.17" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (16 samples, 0.08%)</title><rect x="903.7" y="309" width="1.0" height="15.0" fill="rgb(210,41,11)" rx="2" ry="2" />
<text  x="906.72" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (4 samples, 0.02%)</title><rect x="631.3" y="533" width="0.2" height="15.0" fill="rgb(243,14,0)" rx="2" ry="2" />
<text  x="634.26" y="543.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (68 samples, 0.34%)</title><rect x="900.9" y="357" width="4.0" height="15.0" fill="rgb(229,54,40)" rx="2" ry="2" />
<text  x="903.90" y="367.5" ></text>
</g>
<g >
<title>operator delete (44 samples, 0.22%)</title><rect x="175.3" y="485" width="2.5" height="15.0" fill="rgb(231,170,9)" rx="2" ry="2" />
<text  x="178.25" y="495.5" ></text>
</g>
<g >
<title>get_page_from_freelist (10 samples, 0.05%)</title><rect x="793.9" y="373" width="0.6" height="15.0" fill="rgb(237,149,13)" rx="2" ry="2" />
<text  x="796.92" y="383.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (15 samples, 0.07%)</title><rect x="138.8" y="549" width="0.9" height="15.0" fill="rgb(207,42,44)" rx="2" ry="2" />
<text  x="141.79" y="559.5" ></text>
</g>
<g >
<title>ksys_write (8 samples, 0.04%)</title><rect x="21.2" y="869" width="0.5" height="15.0" fill="rgb(240,151,1)" rx="2" ry="2" />
<text  x="24.23" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_destroy (2 samples, 0.01%)</title><rect x="959.1" y="613" width="0.1" height="15.0" fill="rgb(250,159,41)" rx="2" ry="2" />
<text  x="962.12" y="623.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (646 samples, 3.22%)</title><rect x="868.6" y="469" width="37.9" height="15.0" fill="rgb(233,52,2)" rx="2" ry="2" />
<text  x="871.55" y="479.5" >std..</text>
</g>
<g >
<title>Game_Switches_Class::Get (61 samples, 0.30%)</title><rect x="186.2" y="709" width="3.6" height="15.0" fill="rgb(221,221,35)" rx="2" ry="2" />
<text  x="189.19" y="719.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (2 samples, 0.01%)</title><rect x="115.9" y="389" width="0.1" height="15.0" fill="rgb(233,83,19)" rx="2" ry="2" />
<text  x="118.91" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_valptr (2 samples, 0.01%)</title><rect x="818.5" y="277" width="0.1" height="15.0" fill="rgb(252,202,18)" rx="2" ry="2" />
<text  x="821.50" y="287.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.02%)</title><rect x="867.4" y="309" width="0.2" height="15.0" fill="rgb(246,45,36)" rx="2" ry="2" />
<text  x="870.37" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (90 samples, 0.45%)</title><rect x="631.6" y="549" width="5.2" height="15.0" fill="rgb(224,191,22)" rx="2" ry="2" />
<text  x="634.55" y="559.5" ></text>
</g>
<g >
<title>Color::Color (3 samples, 0.01%)</title><rect x="932.8" y="597" width="0.1" height="15.0" fill="rgb(231,84,41)" rx="2" ry="2" />
<text  x="935.77" y="607.5" ></text>
</g>
<g >
<title>std::_Bit_iterator_base::_Bit_iterator_base (6 samples, 0.03%)</title><rect x="187.1" y="661" width="0.3" height="15.0" fill="rgb(244,118,39)" rx="2" ry="2" />
<text  x="190.07" y="671.5" ></text>
</g>
<g >
<title>operator== (10 samples, 0.05%)</title><rect x="838.3" y="501" width="0.6" height="15.0" fill="rgb(232,86,53)" rx="2" ry="2" />
<text  x="841.26" y="511.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (11,158 samples, 55.61%)</title><rect x="380.6" y="693" width="656.2" height="15.0" fill="rgb(232,74,29)" rx="2" ry="2" />
<text  x="383.61" y="703.5" >Game_Interpreter::ExecuteCommand</text>
</g>
<g >
<title>PicPointerPatch::ReplaceName (49 samples, 0.24%)</title><rect x="957.3" y="661" width="2.9" height="15.0" fill="rgb(219,91,20)" rx="2" ry="2" />
<text  x="960.29" y="671.5" ></text>
</g>
<g >
<title>SDL_JoystickUpdate_REAL (2 samples, 0.01%)</title><rect x="1180.3" y="757" width="0.1" height="15.0" fill="rgb(222,63,36)" rx="2" ry="2" />
<text  x="1183.30" y="767.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (15 samples, 0.07%)</title><rect x="890.8" y="117" width="0.9" height="15.0" fill="rgb(222,182,23)" rx="2" ry="2" />
<text  x="893.78" y="127.5" ></text>
</g>
<g >
<title>operator delete (87 samples, 0.43%)</title><rect x="689.3" y="517" width="5.1" height="15.0" fill="rgb(210,103,29)" rx="2" ry="2" />
<text  x="692.30" y="527.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.01%)</title><rect x="15.4" y="917" width="0.1" height="15.0" fill="rgb(228,144,36)" rx="2" ry="2" />
<text  x="18.35" y="927.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (69 samples, 0.34%)</title><rect x="139.7" y="565" width="4.0" height="15.0" fill="rgb(223,227,23)" rx="2" ry="2" />
<text  x="142.67" y="575.5" ></text>
</g>
<g >
<title>Rect::Rect (6 samples, 0.03%)</title><rect x="833.0" y="533" width="0.4" height="15.0" fill="rgb(241,198,21)" rx="2" ry="2" />
<text  x="836.03" y="543.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (6 samples, 0.03%)</title><rect x="735.2" y="453" width="0.4" height="15.0" fill="rgb(253,64,21)" rx="2" ry="2" />
<text  x="738.23" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (172 samples, 0.86%)</title><rect x="629.0" y="597" width="10.1" height="15.0" fill="rgb(222,228,48)" rx="2" ry="2" />
<text  x="631.96" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (6 samples, 0.03%)</title><rect x="587.3" y="629" width="0.4" height="15.0" fill="rgb(222,183,8)" rx="2" ry="2" />
<text  x="590.33" y="639.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (4 samples, 0.02%)</title><rect x="828.7" y="517" width="0.2" height="15.0" fill="rgb(233,21,33)" rx="2" ry="2" />
<text  x="831.68" y="527.5" ></text>
</g>
<g >
<title>Player::Run (17,010 samples, 84.77%)</title><rect x="182.2" y="869" width="1000.3" height="15.0" fill="rgb(225,216,33)" rx="2" ry="2" />
<text  x="185.19" y="879.5" >Player::Run</text>
</g>
<g >
<title>std::vector&lt;RPG::Switch, std::allocator&lt;RPG::Switch&gt; &gt;::size (2 samples, 0.01%)</title><rect x="186.8" y="693" width="0.1" height="15.0" fill="rgb(249,137,25)" rx="2" ry="2" />
<text  x="189.78" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (46 samples, 0.23%)</title><rect x="126.3" y="421" width="2.7" height="15.0" fill="rgb(227,53,26)" rx="2" ry="2" />
<text  x="129.32" y="431.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (341 samples, 1.70%)</title><rect x="709.9" y="469" width="20.0" height="15.0" fill="rgb(240,169,24)" rx="2" ry="2" />
<text  x="712.88" y="479.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (3 samples, 0.01%)</title><rect x="66.3" y="901" width="0.2" height="15.0" fill="rgb(244,108,32)" rx="2" ry="2" />
<text  x="69.34" y="911.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (39 samples, 0.19%)</title><rect x="946.8" y="613" width="2.3" height="15.0" fill="rgb(212,148,41)" rx="2" ry="2" />
<text  x="949.83" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (4 samples, 0.02%)</title><rect x="566.5" y="629" width="0.2" height="15.0" fill="rgb(249,222,16)" rx="2" ry="2" />
<text  x="569.51" y="639.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (5 samples, 0.02%)</title><rect x="32.5" y="901" width="0.3" height="15.0" fill="rgb(207,121,28)" rx="2" ry="2" />
<text  x="35.46" y="911.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (5 samples, 0.02%)</title><rect x="945.4" y="613" width="0.2" height="15.0" fill="rgb(218,201,52)" rx="2" ry="2" />
<text  x="948.36" y="623.5" ></text>
</g>
<g >
<title>std::__pair_get&lt;0ul&gt;::__get&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; (4 samples, 0.02%)</title><rect x="66.1" y="901" width="0.2" height="15.0" fill="rgb(245,156,24)" rx="2" ry="2" />
<text  x="69.10" y="911.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (4 samples, 0.02%)</title><rect x="22.3" y="917" width="0.2" height="15.0" fill="rgb(252,86,44)" rx="2" ry="2" />
<text  x="25.29" y="927.5" ></text>
</g>
<g >
<title>AsyncHandler::IsImportantFilePending (5 samples, 0.02%)</title><rect x="1182.2" y="805" width="0.3" height="15.0" fill="rgb(228,111,32)" rx="2" ry="2" />
<text  x="1185.18" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;int const&gt; (15 samples, 0.07%)</title><rect x="450.7" y="629" width="0.8" height="15.0" fill="rgb(230,62,41)" rx="2" ry="2" />
<text  x="453.65" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (2 samples, 0.01%)</title><rect x="130.6" y="517" width="0.1" height="15.0" fill="rgb(231,144,14)" rx="2" ry="2" />
<text  x="133.56" y="527.5" ></text>
</g>
<g >
<title>down_read_trylock (2 samples, 0.01%)</title><rect x="790.1" y="437" width="0.1" height="15.0" fill="rgb(249,74,27)" rx="2" ry="2" />
<text  x="793.10" y="447.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (2 samples, 0.01%)</title><rect x="937.9" y="565" width="0.2" height="15.0" fill="rgb(231,121,21)" rx="2" ry="2" />
<text  x="940.95" y="575.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (2 samples, 0.01%)</title><rect x="912.1" y="565" width="0.1" height="15.0" fill="rgb(226,39,16)" rx="2" ry="2" />
<text  x="915.07" y="575.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (8 samples, 0.04%)</title><rect x="107.6" y="901" width="0.4" height="15.0" fill="rgb(233,19,18)" rx="2" ry="2" />
<text  x="110.56" y="911.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt;::~allocator (3 samples, 0.01%)</title><rect x="906.4" y="373" width="0.1" height="15.0" fill="rgb(238,228,18)" rx="2" ry="2" />
<text  x="909.36" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt; &gt; &gt; &gt;::operator* (2 samples, 0.01%)</title><rect x="1176.7" y="741" width="0.1" height="15.0" fill="rgb(231,191,6)" rx="2" ry="2" />
<text  x="1179.65" y="751.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (14 samples, 0.07%)</title><rect x="908.4" y="501" width="0.8" height="15.0" fill="rgb(235,161,39)" rx="2" ry="2" />
<text  x="911.36" y="511.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (10 samples, 0.05%)</title><rect x="138.2" y="597" width="0.6" height="15.0" fill="rgb(244,106,51)" rx="2" ry="2" />
<text  x="141.20" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::begin (2 samples, 0.01%)</title><rect x="97.4" y="901" width="0.1" height="15.0" fill="rgb(252,12,25)" rx="2" ry="2" />
<text  x="100.39" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (292 samples, 1.46%)</title><rect x="272.3" y="677" width="17.2" height="15.0" fill="rgb(229,179,6)" rx="2" ry="2" />
<text  x="275.29" y="687.5" ></text>
</g>
<g >
<title>__do_page_fault (16 samples, 0.08%)</title><rect x="127.8" y="341" width="0.9" height="15.0" fill="rgb(236,13,39)" rx="2" ry="2" />
<text  x="130.79" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (11 samples, 0.05%)</title><rect x="566.7" y="661" width="0.7" height="15.0" fill="rgb(215,132,24)" rx="2" ry="2" />
<text  x="569.74" y="671.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;Input::UiSource::Update()::{lambda(int)#1}&gt; &gt; (2 samples, 0.01%)</title><rect x="183.7" y="725" width="0.1" height="15.0" fill="rgb(223,112,37)" rx="2" ry="2" />
<text  x="186.66" y="735.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (49 samples, 0.24%)</title><rect x="145.8" y="517" width="2.9" height="15.0" fill="rgb(237,159,14)" rx="2" ry="2" />
<text  x="148.79" y="527.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.03%)</title><rect x="139.3" y="501" width="0.4" height="15.0" fill="rgb(236,61,2)" rx="2" ry="2" />
<text  x="142.26" y="511.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="904.5" y="197" width="0.1" height="15.0" fill="rgb(234,160,20)" rx="2" ry="2" />
<text  x="907.48" y="207.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (46 samples, 0.23%)</title><rect x="160.6" y="645" width="2.7" height="15.0" fill="rgb(236,128,28)" rx="2" ry="2" />
<text  x="163.55" y="655.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::end (8 samples, 0.04%)</title><rect x="694.6" y="517" width="0.5" height="15.0" fill="rgb(218,106,41)" rx="2" ry="2" />
<text  x="697.59" y="527.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (2 samples, 0.01%)</title><rect x="836.1" y="517" width="0.1" height="15.0" fill="rgb(218,205,39)" rx="2" ry="2" />
<text  x="839.09" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (2 samples, 0.01%)</title><rect x="563.2" y="581" width="0.1" height="15.0" fill="rgb(210,226,24)" rx="2" ry="2" />
<text  x="566.16" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char32_t&gt;::deallocate (2 samples, 0.01%)</title><rect x="959.1" y="581" width="0.1" height="15.0" fill="rgb(251,193,5)" rx="2" ry="2" />
<text  x="962.12" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (11 samples, 0.05%)</title><rect x="626.9" y="549" width="0.7" height="15.0" fill="rgb(243,106,19)" rx="2" ry="2" />
<text  x="629.91" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (14 samples, 0.07%)</title><rect x="701.4" y="533" width="0.8" height="15.0" fill="rgb(250,81,25)" rx="2" ry="2" />
<text  x="704.36" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (2 samples, 0.01%)</title><rect x="959.9" y="597" width="0.1" height="15.0" fill="rgb(229,190,30)" rx="2" ry="2" />
<text  x="962.88" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::size (116 samples, 0.58%)</title><rect x="1130.0" y="709" width="6.8" height="15.0" fill="rgb(237,64,21)" rx="2" ry="2" />
<text  x="1132.96" y="719.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned@plt (8 samples, 0.04%)</title><rect x="786.1" y="501" width="0.5" height="15.0" fill="rgb(236,178,15)" rx="2" ry="2" />
<text  x="789.10" y="511.5" ></text>
</g>
<g >
<title>Game_Picture::Show (119 samples, 0.59%)</title><rect x="131.0" y="693" width="7.0" height="15.0" fill="rgb(212,52,50)" rx="2" ry="2" />
<text  x="133.97" y="703.5" ></text>
</g>
</g>
</svg>
