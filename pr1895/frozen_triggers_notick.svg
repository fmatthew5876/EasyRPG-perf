<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1078" onload="init(evt)" viewBox="0 0 1200 1078" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1078.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1061" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="1061" > </text>
<g id="frames">
<g >
<title>zap_page_range (4 samples, 0.01%)</title><rect x="666.0" y="517" width="0.2" height="15.0" fill="rgb(218,6,12)" rx="2" ry="2" />
<text  x="669.02" y="527.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (74 samples, 0.23%)</title><rect x="19.1" y="837" width="2.8" height="15.0" fill="rgb(212,116,36)" rx="2" ry="2" />
<text  x="22.13" y="847.5" ></text>
</g>
<g >
<title>alloc_pages_vma (77 samples, 0.24%)</title><rect x="228.8" y="357" width="2.8" height="15.0" fill="rgb(238,69,48)" rx="2" ry="2" />
<text  x="231.79" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (4 samples, 0.01%)</title><rect x="816.5" y="421" width="0.2" height="15.0" fill="rgb(242,87,0)" rx="2" ry="2" />
<text  x="819.55" y="431.5" ></text>
</g>
<g >
<title>Game_Picture::ShowParams::~ShowParams (116 samples, 0.36%)</title><rect x="977.2" y="741" width="4.3" height="15.0" fill="rgb(214,126,15)" rx="2" ry="2" />
<text  x="980.20" y="751.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (13 samples, 0.04%)</title><rect x="253.9" y="981" width="0.5" height="15.0" fill="rgb(208,41,43)" rx="2" ry="2" />
<text  x="256.92" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator&lt; &lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (4 samples, 0.01%)</title><rect x="984.2" y="709" width="0.1" height="15.0" fill="rgb(242,104,1)" rx="2" ry="2" />
<text  x="987.19" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt; (8 samples, 0.03%)</title><rect x="1145.5" y="821" width="0.3" height="15.0" fill="rgb(222,201,38)" rx="2" ry="2" />
<text  x="1148.47" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (214 samples, 0.67%)</title><rect x="371.6" y="757" width="7.9" height="15.0" fill="rgb(248,8,41)" rx="2" ry="2" />
<text  x="374.55" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (4 samples, 0.01%)</title><rect x="52.7" y="981" width="0.2" height="15.0" fill="rgb(210,220,54)" rx="2" ry="2" />
<text  x="55.72" y="991.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (4 samples, 0.01%)</title><rect x="140.3" y="805" width="0.1" height="15.0" fill="rgb(238,48,45)" rx="2" ry="2" />
<text  x="143.27" y="815.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.03%)</title><rect x="210.6" y="373" width="0.4" height="15.0" fill="rgb(222,206,41)" rx="2" ry="2" />
<text  x="213.64" y="383.5" ></text>
</g>
<g >
<title>Scene::IsAsyncPending (3 samples, 0.01%)</title><rect x="1182.8" y="901" width="0.1" height="15.0" fill="rgb(233,36,32)" rx="2" ry="2" />
<text  x="1185.76" y="911.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (83 samples, 0.26%)</title><rect x="151.8" y="581" width="3.1" height="15.0" fill="rgb(233,93,54)" rx="2" ry="2" />
<text  x="154.84" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator++ (18 samples, 0.06%)</title><rect x="53.5" y="981" width="0.7" height="15.0" fill="rgb(208,16,25)" rx="2" ry="2" />
<text  x="56.50" y="991.5" ></text>
</g>
<g >
<title>Sprite::Flash (41 samples, 0.13%)</title><rect x="877.9" y="485" width="1.6" height="15.0" fill="rgb(240,109,45)" rx="2" ry="2" />
<text  x="880.94" y="495.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (427 samples, 1.34%)</title><rect x="955.4" y="725" width="15.8" height="15.0" fill="rgb(238,58,32)" rx="2" ry="2" />
<text  x="958.40" y="735.5" ></text>
</g>
<g >
<title>XFlush (11 samples, 0.03%)</title><rect x="1180.9" y="805" width="0.5" height="15.0" fill="rgb(226,202,45)" rx="2" ry="2" />
<text  x="1183.95" y="815.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (110 samples, 0.34%)</title><rect x="200.4" y="885" width="4.1" height="15.0" fill="rgb(253,94,31)" rx="2" ry="2" />
<text  x="203.40" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::_M_erase_at_end (295 samples, 0.92%)</title><rect x="924.3" y="645" width="10.9" height="15.0" fill="rgb(231,195,15)" rx="2" ry="2" />
<text  x="927.28" y="655.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (177 samples, 0.55%)</title><rect x="204.5" y="773" width="6.5" height="15.0" fill="rgb(214,138,29)" rx="2" ry="2" />
<text  x="207.47" y="783.5" ></text>
</g>
<g >
<title>__libc_start_main (776 samples, 2.43%)</title><rect x="221.2" y="981" width="28.7" height="15.0" fill="rgb(241,107,38)" rx="2" ry="2" />
<text  x="224.25" y="991.5" >__..</text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (177 samples, 0.55%)</title><rect x="204.5" y="821" width="6.5" height="15.0" fill="rgb(232,176,48)" rx="2" ry="2" />
<text  x="207.47" y="831.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (82 samples, 0.26%)</title><rect x="589.6" y="725" width="3.0" height="15.0" fill="rgb(249,227,31)" rx="2" ry="2" />
<text  x="592.56" y="735.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*, std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (277 samples, 0.87%)</title><rect x="924.9" y="629" width="10.2" height="15.0" fill="rgb(217,11,12)" rx="2" ry="2" />
<text  x="927.87" y="639.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (59 samples, 0.18%)</title><rect x="192.2" y="341" width="2.1" height="15.0" fill="rgb(223,8,53)" rx="2" ry="2" />
<text  x="195.16" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::operator bool (4 samples, 0.01%)</title><rect x="111.9" y="981" width="0.1" height="15.0" fill="rgb(252,36,24)" rx="2" ry="2" />
<text  x="114.85" y="991.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (6 samples, 0.02%)</title><rect x="819.9" y="469" width="0.2" height="15.0" fill="rgb(220,204,49)" rx="2" ry="2" />
<text  x="822.88" y="479.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (122 samples, 0.38%)</title><rect x="211.0" y="773" width="4.5" height="15.0" fill="rgb(222,18,41)" rx="2" ry="2" />
<text  x="214.01" y="783.5" ></text>
</g>
<g >
<title>Bitmap::find_format (43 samples, 0.13%)</title><rect x="138.7" y="549" width="1.6" height="15.0" fill="rgb(208,64,7)" rx="2" ry="2" />
<text  x="141.68" y="559.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::_Vector_impl::~_Vector_impl (4 samples, 0.01%)</title><rect x="77.1" y="981" width="0.2" height="15.0" fill="rgb(219,138,27)" rx="2" ry="2" />
<text  x="80.11" y="991.5" ></text>
</g>
<g >
<title>operator!= (14 samples, 0.04%)</title><rect x="1165.1" y="757" width="0.5" height="15.0" fill="rgb(237,171,39)" rx="2" ry="2" />
<text  x="1168.13" y="767.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator bool (10 samples, 0.03%)</title><rect x="1171.3" y="789" width="0.4" height="15.0" fill="rgb(219,193,54)" rx="2" ry="2" />
<text  x="1174.30" y="799.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (14 samples, 0.04%)</title><rect x="129.6" y="917" width="0.5" height="15.0" fill="rgb(223,114,0)" rx="2" ry="2" />
<text  x="132.56" y="927.5" ></text>
</g>
<g >
<title>SDL_SoftBlit (9 samples, 0.03%)</title><rect x="258.6" y="789" width="0.3" height="15.0" fill="rgb(210,123,7)" rx="2" ry="2" />
<text  x="261.61" y="799.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (247 samples, 0.77%)</title><rect x="164.0" y="549" width="9.1" height="15.0" fill="rgb(226,42,15)" rx="2" ry="2" />
<text  x="166.96" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (4 samples, 0.01%)</title><rect x="48.1" y="981" width="0.2" height="15.0" fill="rgb(219,65,47)" rx="2" ry="2" />
<text  x="51.14" y="991.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (12 samples, 0.04%)</title><rect x="86.3" y="981" width="0.4" height="15.0" fill="rgb(228,35,25)" rx="2" ry="2" />
<text  x="89.28" y="991.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (46 samples, 0.14%)</title><rect x="973.9" y="677" width="1.7" height="15.0" fill="rgb(211,221,31)" rx="2" ry="2" />
<text  x="976.95" y="687.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (122 samples, 0.38%)</title><rect x="211.0" y="805" width="4.5" height="15.0" fill="rgb(225,225,4)" rx="2" ry="2" />
<text  x="214.01" y="815.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (18 samples, 0.06%)</title><rect x="183.7" y="517" width="0.6" height="15.0" fill="rgb(252,137,54)" rx="2" ry="2" />
<text  x="186.66" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (4 samples, 0.01%)</title><rect x="885.7" y="485" width="0.2" height="15.0" fill="rgb(250,56,5)" rx="2" ry="2" />
<text  x="888.73" y="495.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandWait (43 samples, 0.13%)</title><rect x="998.0" y="757" width="1.6" height="15.0" fill="rgb(251,89,6)" rx="2" ry="2" />
<text  x="1001.05" y="767.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (30 samples, 0.09%)</title><rect x="195.4" y="565" width="1.1" height="15.0" fill="rgb(234,26,16)" rx="2" ry="2" />
<text  x="198.41" y="575.5" ></text>
</g>
<g >
<title>std::map&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, (anonymous namespace)::CacheItem, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (683 samples, 2.14%)</title><rect x="786.6" y="485" width="25.2" height="15.0" fill="rgb(212,177,17)" rx="2" ry="2" />
<text  x="789.58" y="495.5" >s..</text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (190 samples, 0.60%)</title><rect x="184.3" y="469" width="7.0" height="15.0" fill="rgb(216,185,33)" rx="2" ry="2" />
<text  x="187.33" y="479.5" ></text>
</g>
<g >
<title>operator== (22 samples, 0.07%)</title><rect x="878.6" y="437" width="0.9" height="15.0" fill="rgb(214,83,41)" rx="2" ry="2" />
<text  x="881.64" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (12 samples, 0.04%)</title><rect x="710.6" y="597" width="0.4" height="15.0" fill="rgb(233,135,10)" rx="2" ry="2" />
<text  x="713.59" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::push_back (123 samples, 0.39%)</title><rect x="705.5" y="677" width="4.5" height="15.0" fill="rgb(230,129,47)" rx="2" ry="2" />
<text  x="708.49" y="687.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (85 samples, 0.27%)</title><rect x="250.3" y="805" width="3.1" height="15.0" fill="rgb(205,188,21)" rx="2" ry="2" />
<text  x="253.29" y="815.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (4 samples, 0.01%)</title><rect x="898.6" y="485" width="0.1" height="15.0" fill="rgb(205,106,2)" rx="2" ry="2" />
<text  x="901.59" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (15 samples, 0.05%)</title><rect x="515.1" y="725" width="0.6" height="15.0" fill="rgb(245,124,30)" rx="2" ry="2" />
<text  x="518.13" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator (4 samples, 0.01%)</title><rect x="666.9" y="693" width="0.2" height="15.0" fill="rgb(208,23,51)" rx="2" ry="2" />
<text  x="669.95" y="703.5" ></text>
</g>
<g >
<title>__strlen_avx2 (3 samples, 0.01%)</title><rect x="191.7" y="485" width="0.1" height="15.0" fill="rgb(244,107,54)" rx="2" ry="2" />
<text  x="194.68" y="495.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl (12 samples, 0.04%)</title><rect x="727.4" y="597" width="0.5" height="15.0" fill="rgb(218,89,32)" rx="2" ry="2" />
<text  x="730.41" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt; (6 samples, 0.02%)</title><rect x="1148.5" y="773" width="0.3" height="15.0" fill="rgb(216,54,53)" rx="2" ry="2" />
<text  x="1151.53" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt;::new_allocator (4 samples, 0.01%)</title><rect x="57.6" y="981" width="0.1" height="15.0" fill="rgb(230,175,10)" rx="2" ry="2" />
<text  x="60.60" y="991.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 2ul, 3ul&gt;::__less (30 samples, 0.09%)</title><rect x="808.5" y="389" width="1.1" height="15.0" fill="rgb(249,160,47)" rx="2" ry="2" />
<text  x="811.49" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (91 samples, 0.29%)</title><rect x="235.2" y="357" width="3.4" height="15.0" fill="rgb(243,13,47)" rx="2" ry="2" />
<text  x="238.22" y="367.5" ></text>
</g>
<g >
<title>std::min&lt;int&gt; (89 samples, 0.28%)</title><rect x="581.8" y="725" width="3.3" height="15.0" fill="rgb(240,23,40)" rx="2" ry="2" />
<text  x="584.80" y="735.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipToNextConditional (101 samples, 0.32%)</title><rect x="605.3" y="725" width="3.7" height="15.0" fill="rgb(209,83,46)" rx="2" ry="2" />
<text  x="608.30" y="735.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::function (87 samples, 0.27%)</title><rect x="706.4" y="597" width="3.2" height="15.0" fill="rgb(214,148,27)" rx="2" ry="2" />
<text  x="709.38" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (117 samples, 0.37%)</title><rect x="316.9" y="757" width="4.4" height="15.0" fill="rgb(213,107,9)" rx="2" ry="2" />
<text  x="319.93" y="767.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (9 samples, 0.03%)</title><rect x="129.1" y="997" width="0.3" height="15.0" fill="rgb(207,196,40)" rx="2" ry="2" />
<text  x="132.08" y="1007.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::~__weak_ptr (25 samples, 0.08%)</title><rect x="934.2" y="533" width="0.9" height="15.0" fill="rgb(211,180,53)" rx="2" ry="2" />
<text  x="937.18" y="543.5" ></text>
</g>
<g >
<title>finish_task_switch (22 samples, 0.07%)</title><rect x="1181.5" y="677" width="0.8" height="15.0" fill="rgb(235,65,17)" rx="2" ry="2" />
<text  x="1184.54" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (47 samples, 0.15%)</title><rect x="1006.5" y="725" width="1.7" height="15.0" fill="rgb(227,174,54)" rx="2" ry="2" />
<text  x="1009.51" y="735.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (130 samples, 0.41%)</title><rect x="140.4" y="805" width="4.8" height="15.0" fill="rgb(231,46,12)" rx="2" ry="2" />
<text  x="143.42" y="815.5" ></text>
</g>
<g >
<title>__interceptor_free (10 samples, 0.03%)</title><rect x="210.6" y="421" width="0.4" height="15.0" fill="rgb(212,194,40)" rx="2" ry="2" />
<text  x="213.64" y="431.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (14 samples, 0.04%)</title><rect x="865.8" y="293" width="0.5" height="15.0" fill="rgb(223,13,46)" rx="2" ry="2" />
<text  x="868.81" y="303.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (257 samples, 0.80%)</title><rect x="151.8" y="757" width="9.5" height="15.0" fill="rgb(223,20,28)" rx="2" ry="2" />
<text  x="154.84" y="767.5" ></text>
</g>
<g >
<title>operator new (151 samples, 0.47%)</title><rect x="713.5" y="645" width="5.6" height="15.0" fill="rgb(215,221,42)" rx="2" ry="2" />
<text  x="716.51" y="655.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_M_head (6 samples, 0.02%)</title><rect x="66.4" y="981" width="0.2" height="15.0" fill="rgb(252,63,16)" rx="2" ry="2" />
<text  x="69.40" y="991.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::operator[] (45 samples, 0.14%)</title><rect x="213.9" y="421" width="1.6" height="15.0" fill="rgb(229,226,42)" rx="2" ry="2" />
<text  x="216.85" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator bool (6 samples, 0.02%)</title><rect x="891.1" y="485" width="0.2" height="15.0" fill="rgb(252,163,0)" rx="2" ry="2" />
<text  x="894.09" y="495.5" ></text>
</g>
<g >
<title>Game_Map::GetDisplayX (6 samples, 0.02%)</title><rect x="633.3" y="725" width="0.2" height="15.0" fill="rgb(246,78,40)" rx="2" ry="2" />
<text  x="636.28" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_M_lower_bound (45 samples, 0.14%)</title><rect x="213.9" y="373" width="1.6" height="15.0" fill="rgb(232,195,40)" rx="2" ry="2" />
<text  x="216.85" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_M_lower_bound (125 samples, 0.39%)</title><rect x="778.4" y="437" width="4.6" height="15.0" fill="rgb(221,219,0)" rx="2" ry="2" />
<text  x="781.37" y="447.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (107 samples, 0.34%)</title><rect x="687.3" y="565" width="4.0" height="15.0" fill="rgb(245,59,53)" rx="2" ry="2" />
<text  x="690.31" y="575.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (13 samples, 0.04%)</title><rect x="820.1" y="501" width="0.5" height="15.0" fill="rgb(250,44,7)" rx="2" ry="2" />
<text  x="823.13" y="511.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (3 samples, 0.01%)</title><rect x="1178.9" y="805" width="0.2" height="15.0" fill="rgb(231,189,19)" rx="2" ry="2" />
<text  x="1181.95" y="815.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (177 samples, 0.55%)</title><rect x="204.5" y="677" width="6.5" height="15.0" fill="rgb(227,62,0)" rx="2" ry="2" />
<text  x="207.47" y="687.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (54 samples, 0.17%)</title><rect x="196.5" y="453" width="2.0" height="15.0" fill="rgb(218,68,7)" rx="2" ry="2" />
<text  x="199.52" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (3 samples, 0.01%)</title><rect x="615.0" y="709" width="0.1" height="15.0" fill="rgb(238,74,54)" rx="2" ry="2" />
<text  x="617.99" y="719.5" ></text>
</g>
<g >
<title>[[stack]] (2,599 samples, 8.14%)</title><rect x="24.6" y="997" width="96.0" height="15.0" fill="rgb(249,28,49)" rx="2" ry="2" />
<text  x="27.56" y="1007.5" >[[stack]]</text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (14 samples, 0.04%)</title><rect x="129.6" y="949" width="0.5" height="15.0" fill="rgb(233,36,33)" rx="2" ry="2" />
<text  x="132.56" y="959.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (122 samples, 0.38%)</title><rect x="211.0" y="837" width="4.5" height="15.0" fill="rgb(247,132,10)" rx="2" ry="2" />
<text  x="214.01" y="847.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (47 samples, 0.15%)</title><rect x="158.2" y="517" width="1.7" height="15.0" fill="rgb(207,87,36)" rx="2" ry="2" />
<text  x="161.16" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (79 samples, 0.25%)</title><rect x="968.3" y="693" width="2.9" height="15.0" fill="rgb(230,100,22)" rx="2" ry="2" />
<text  x="971.26" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (101 samples, 0.32%)</title><rect x="200.7" y="309" width="3.8" height="15.0" fill="rgb(209,102,49)" rx="2" ry="2" />
<text  x="203.74" y="319.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl (4 samples, 0.01%)</title><rect x="712.6" y="629" width="0.1" height="15.0" fill="rgb(208,176,41)" rx="2" ry="2" />
<text  x="715.59" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (1,359 samples, 4.26%)</title><rect x="303.8" y="773" width="50.3" height="15.0" fill="rgb(232,122,45)" rx="2" ry="2" />
<text  x="306.85" y="783.5" >std::..</text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (149 samples, 0.47%)</title><rect x="194.9" y="725" width="5.5" height="15.0" fill="rgb(254,229,17)" rx="2" ry="2" />
<text  x="197.90" y="735.5" ></text>
</g>
<g >
<title>Bitmap::pixels (29 samples, 0.09%)</title><rect x="855.7" y="469" width="1.0" height="15.0" fill="rgb(211,38,24)" rx="2" ry="2" />
<text  x="858.65" y="479.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (16 samples, 0.05%)</title><rect x="854.3" y="437" width="0.6" height="15.0" fill="rgb(229,125,4)" rx="2" ry="2" />
<text  x="857.32" y="447.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (190 samples, 0.60%)</title><rect x="184.3" y="357" width="7.0" height="15.0" fill="rgb(252,57,26)" rx="2" ry="2" />
<text  x="187.33" y="367.5" ></text>
</g>
<g >
<title>Sprite::Draw (17 samples, 0.05%)</title><rect x="257.9" y="837" width="0.6" height="15.0" fill="rgb(250,95,53)" rx="2" ry="2" />
<text  x="260.87" y="847.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (75 samples, 0.23%)</title><rect x="204.5" y="581" width="2.7" height="15.0" fill="rgb(247,74,39)" rx="2" ry="2" />
<text  x="207.47" y="591.5" ></text>
</g>
<g >
<title>max&lt;int&gt; (6 samples, 0.02%)</title><rect x="885.2" y="469" width="0.2" height="15.0" fill="rgb(228,156,23)" rx="2" ry="2" />
<text  x="888.18" y="479.5" ></text>
</g>
<g >
<title>__gthread_active_p (4 samples, 0.01%)</title><rect x="58.5" y="981" width="0.1" height="15.0" fill="rgb(216,20,8)" rx="2" ry="2" />
<text  x="61.49" y="991.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (130 samples, 0.41%)</title><rect x="140.4" y="645" width="4.8" height="15.0" fill="rgb(223,92,6)" rx="2" ry="2" />
<text  x="143.42" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_left (12 samples, 0.04%)</title><rect x="790.3" y="437" width="0.4" height="15.0" fill="rgb(222,196,48)" rx="2" ry="2" />
<text  x="793.27" y="447.5" ></text>
</g>
<g >
<title>std::forward&lt;Game_Picture*&amp;&gt; (4 samples, 0.01%)</title><rect x="92.8" y="981" width="0.2" height="15.0" fill="rgb(246,107,5)" rx="2" ry="2" />
<text  x="95.82" y="991.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (14 samples, 0.04%)</title><rect x="918.7" y="469" width="0.6" height="15.0" fill="rgb(248,108,40)" rx="2" ry="2" />
<text  x="921.74" y="479.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (4 samples, 0.01%)</title><rect x="691.3" y="629" width="0.1" height="15.0" fill="rgb(252,82,11)" rx="2" ry="2" />
<text  x="694.27" y="639.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (208 samples, 0.65%)</title><rect x="183.7" y="629" width="7.6" height="15.0" fill="rgb(224,51,40)" rx="2" ry="2" />
<text  x="186.66" y="639.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (91 samples, 0.29%)</title><rect x="235.2" y="405" width="3.4" height="15.0" fill="rgb(224,171,14)" rx="2" ry="2" />
<text  x="238.22" y="415.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.02%)</title><rect x="643.6" y="565" width="0.2" height="15.0" fill="rgb(230,14,27)" rx="2" ry="2" />
<text  x="646.59" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (10 samples, 0.03%)</title><rect x="682.6" y="629" width="0.3" height="15.0" fill="rgb(205,191,54)" rx="2" ry="2" />
<text  x="685.58" y="639.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (30 samples, 0.09%)</title><rect x="853.2" y="437" width="1.1" height="15.0" fill="rgb(215,115,4)" rx="2" ry="2" />
<text  x="856.21" y="447.5" ></text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (22 samples, 0.07%)</title><rect x="960.9" y="709" width="0.8" height="15.0" fill="rgb(252,0,7)" rx="2" ry="2" />
<text  x="963.90" y="719.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (4 samples, 0.01%)</title><rect x="894.0" y="421" width="0.2" height="15.0" fill="rgb(239,19,21)" rx="2" ry="2" />
<text  x="897.05" y="431.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (276 samples, 0.86%)</title><rect x="130.1" y="613" width="10.2" height="15.0" fill="rgb(234,25,17)" rx="2" ry="2" />
<text  x="133.07" y="623.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandControlVariables (2,289 samples, 7.17%)</title><rect x="518.2" y="757" width="84.6" height="15.0" fill="rgb(251,47,43)" rx="2" ry="2" />
<text  x="521.20" y="767.5" >Game_Inte..</text>
</g>
<g >
<title>Game_Picture::SetNonEffectParams (8 samples, 0.03%)</title><rect x="618.1" y="725" width="0.3" height="15.0" fill="rgb(213,201,15)" rx="2" ry="2" />
<text  x="621.09" y="735.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;int&gt;, int&gt; (8 samples, 0.03%)</title><rect x="85.1" y="981" width="0.3" height="15.0" fill="rgb(249,13,50)" rx="2" ry="2" />
<text  x="88.10" y="991.5" ></text>
</g>
<g >
<title>pixman_image_unref (50 samples, 0.16%)</title><rect x="198.6" y="437" width="1.8" height="15.0" fill="rgb(213,221,45)" rx="2" ry="2" />
<text  x="201.55" y="447.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::size (4 samples, 0.01%)</title><rect x="608.4" y="693" width="0.2" height="15.0" fill="rgb(227,80,47)" rx="2" ry="2" />
<text  x="611.44" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (62 samples, 0.19%)</title><rect x="192.1" y="357" width="2.2" height="15.0" fill="rgb(236,116,38)" rx="2" ry="2" />
<text  x="195.05" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::operator (7 samples, 0.02%)</title><rect x="1142.8" y="805" width="0.3" height="15.0" fill="rgb(218,176,34)" rx="2" ry="2" />
<text  x="1145.81" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (11 samples, 0.03%)</title><rect x="881.6" y="389" width="0.4" height="15.0" fill="rgb(249,210,22)" rx="2" ry="2" />
<text  x="884.56" y="399.5" ></text>
</g>
<g >
<title>Game_Screen::GetTone (28 samples, 0.09%)</title><rect x="1163.9" y="789" width="1.1" height="15.0" fill="rgb(239,204,6)" rx="2" ry="2" />
<text  x="1166.95" y="799.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (177 samples, 0.55%)</title><rect x="204.5" y="629" width="6.5" height="15.0" fill="rgb(217,204,39)" rx="2" ry="2" />
<text  x="207.47" y="639.5" ></text>
</g>
<g >
<title>_raw_spin_lock (4 samples, 0.01%)</title><rect x="228.6" y="357" width="0.2" height="15.0" fill="rgb(252,181,20)" rx="2" ry="2" />
<text  x="231.64" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (190 samples, 0.60%)</title><rect x="1068.8" y="741" width="7.0" height="15.0" fill="rgb(223,188,36)" rx="2" ry="2" />
<text  x="1071.78" y="751.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;*, std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; (9 samples, 0.03%)</title><rect x="915.4" y="341" width="0.3" height="15.0" fill="rgb(222,44,1)" rx="2" ry="2" />
<text  x="918.41" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (13 samples, 0.04%)</title><rect x="1006.0" y="725" width="0.5" height="15.0" fill="rgb(231,211,8)" rx="2" ry="2" />
<text  x="1009.03" y="735.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator bool (18 samples, 0.06%)</title><rect x="95.3" y="981" width="0.7" height="15.0" fill="rgb(234,102,40)" rx="2" ry="2" />
<text  x="98.33" y="991.5" ></text>
</g>
<g >
<title>__interceptor_free (43 samples, 0.13%)</title><rect x="913.2" y="341" width="1.6" height="15.0" fill="rgb(213,89,36)" rx="2" ry="2" />
<text  x="916.19" y="351.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (190 samples, 0.60%)</title><rect x="184.3" y="533" width="7.0" height="15.0" fill="rgb(232,211,44)" rx="2" ry="2" />
<text  x="187.33" y="543.5" ></text>
</g>
<g >
<title>do_mmap (10 samples, 0.03%)</title><rect x="135.0" y="325" width="0.4" height="15.0" fill="rgb(252,104,30)" rx="2" ry="2" />
<text  x="138.03" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (44 samples, 0.14%)</title><rect x="1067.1" y="725" width="1.6" height="15.0" fill="rgb(213,208,24)" rx="2" ry="2" />
<text  x="1070.12" y="735.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::__allocated_ptr (5 samples, 0.02%)</title><rect x="868.3" y="373" width="0.1" height="15.0" fill="rgb(209,144,18)" rx="2" ry="2" />
<text  x="871.25" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (6 samples, 0.02%)</title><rect x="1050.0" y="757" width="0.2" height="15.0" fill="rgb(252,42,30)" rx="2" ry="2" />
<text  x="1052.97" y="767.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (92 samples, 0.29%)</title><rect x="207.2" y="565" width="3.4" height="15.0" fill="rgb(233,146,3)" rx="2" ry="2" />
<text  x="210.24" y="575.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (179 samples, 0.56%)</title><rect x="145.2" y="565" width="6.6" height="15.0" fill="rgb(223,175,47)" rx="2" ry="2" />
<text  x="148.23" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (43 samples, 0.13%)</title><rect x="114.0" y="981" width="1.6" height="15.0" fill="rgb(254,204,16)" rx="2" ry="2" />
<text  x="117.03" y="991.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (5,324 samples, 16.67%)</title><rect x="739.2" y="709" width="196.7" height="15.0" fill="rgb(236,190,6)" rx="2" ry="2" />
<text  x="742.16" y="719.5" >FileRequestAsync::Start</text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;*, std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; (5 samples, 0.02%)</title><rect x="914.8" y="357" width="0.2" height="15.0" fill="rgb(244,106,20)" rx="2" ry="2" />
<text  x="917.78" y="367.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (13 samples, 0.04%)</title><rect x="198.0" y="373" width="0.5" height="15.0" fill="rgb(239,79,39)" rx="2" ry="2" />
<text  x="201.04" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (9 samples, 0.03%)</title><rect x="696.0" y="549" width="0.3" height="15.0" fill="rgb(241,15,2)" rx="2" ry="2" />
<text  x="698.96" y="559.5" ></text>
</g>
<g >
<title>Sprite::SetY (5 samples, 0.02%)</title><rect x="965.2" y="709" width="0.2" height="15.0" fill="rgb(239,125,15)" rx="2" ry="2" />
<text  x="968.19" y="719.5" ></text>
</g>
<g >
<title>Bitmap::width (4 samples, 0.01%)</title><rect x="880.3" y="453" width="0.2" height="15.0" fill="rgb(241,165,18)" rx="2" ry="2" />
<text  x="883.34" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator* (6 samples, 0.02%)</title><rect x="637.9" y="677" width="0.2" height="15.0" fill="rgb(218,150,42)" rx="2" ry="2" />
<text  x="640.86" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_key (10 samples, 0.03%)</title><rect x="783.0" y="437" width="0.4" height="15.0" fill="rgb(250,175,17)" rx="2" ry="2" />
<text  x="785.99" y="447.5" ></text>
</g>
<g >
<title>FileRequestAsync::SetGraphicFile (50 samples, 0.16%)</title><rect x="737.3" y="709" width="1.9" height="15.0" fill="rgb(208,182,29)" rx="2" ry="2" />
<text  x="740.31" y="719.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::operator() (5 samples, 0.02%)</title><rect x="215.3" y="341" width="0.2" height="15.0" fill="rgb(234,42,27)" rx="2" ry="2" />
<text  x="218.30" y="351.5" ></text>
</g>
<g >
<title>eventfd_write (11 samples, 0.03%)</title><rect x="23.4" y="901" width="0.4" height="15.0" fill="rgb(244,214,47)" rx="2" ry="2" />
<text  x="26.38" y="911.5" ></text>
</g>
<g >
<title>std::forward&lt;FileRequestResult*&gt; (4 samples, 0.01%)</title><rect x="922.3" y="613" width="0.2" height="15.0" fill="rgb(217,34,6)" rx="2" ry="2" />
<text  x="925.32" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="985.2" y="565" width="0.1" height="15.0" fill="rgb(218,168,1)" rx="2" ry="2" />
<text  x="988.18" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::vector (3 samples, 0.01%)</title><rect x="867.9" y="341" width="0.1" height="15.0" fill="rgb(254,69,26)" rx="2" ry="2" />
<text  x="870.92" y="351.5" ></text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (11 samples, 0.03%)</title><rect x="1162.4" y="789" width="0.4" height="15.0" fill="rgb(216,15,7)" rx="2" ry="2" />
<text  x="1165.39" y="799.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;FileRequestResult*&gt; (9 samples, 0.03%)</title><rect x="94.7" y="981" width="0.4" height="15.0" fill="rgb(226,27,43)" rx="2" ry="2" />
<text  x="97.74" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (18 samples, 0.06%)</title><rect x="629.8" y="709" width="0.6" height="15.0" fill="rgb(248,166,20)" rx="2" ry="2" />
<text  x="632.77" y="719.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (87 samples, 0.27%)</title><rect x="722.4" y="613" width="3.2" height="15.0" fill="rgb(241,205,18)" rx="2" ry="2" />
<text  x="725.42" y="623.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (40 samples, 0.13%)</title><rect x="233.6" y="421" width="1.5" height="15.0" fill="rgb(222,113,25)" rx="2" ry="2" />
<text  x="236.59" y="431.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (35 samples, 0.11%)</title><rect x="724.3" y="581" width="1.3" height="15.0" fill="rgb(236,58,12)" rx="2" ry="2" />
<text  x="727.34" y="591.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (9 samples, 0.03%)</title><rect x="36.3" y="981" width="0.3" height="15.0" fill="rgb(224,63,33)" rx="2" ry="2" />
<text  x="39.31" y="991.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (85 samples, 0.27%)</title><rect x="250.3" y="693" width="3.1" height="15.0" fill="rgb(215,184,9)" rx="2" ry="2" />
<text  x="253.29" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (9 samples, 0.03%)</title><rect x="610.5" y="725" width="0.3" height="15.0" fill="rgb(216,52,51)" rx="2" ry="2" />
<text  x="613.48" y="735.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (62 samples, 0.19%)</title><rect x="664.1" y="645" width="2.3" height="15.0" fill="rgb(251,70,46)" rx="2" ry="2" />
<text  x="667.06" y="655.5" ></text>
</g>
<g >
<title>max&lt;int&gt; (4 samples, 0.01%)</title><rect x="1164.8" y="757" width="0.1" height="15.0" fill="rgb(245,47,23)" rx="2" ry="2" />
<text  x="1167.76" y="767.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (604 samples, 1.89%)</title><rect x="161.3" y="949" width="22.4" height="15.0" fill="rgb(242,216,6)" rx="2" ry="2" />
<text  x="164.34" y="959.5" >G..</text>
</g>
<g >
<title>Bitmap::Init (233 samples, 0.73%)</title><rect x="130.1" y="549" width="8.6" height="15.0" fill="rgb(241,223,51)" rx="2" ry="2" />
<text  x="133.07" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (20 samples, 0.06%)</title><rect x="212.3" y="517" width="0.8" height="15.0" fill="rgb(251,132,49)" rx="2" ry="2" />
<text  x="215.34" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (9 samples, 0.03%)</title><rect x="629.3" y="709" width="0.4" height="15.0" fill="rgb(224,130,35)" rx="2" ry="2" />
<text  x="632.33" y="719.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (54 samples, 0.17%)</title><rect x="196.5" y="533" width="2.0" height="15.0" fill="rgb(233,31,17)" rx="2" ry="2" />
<text  x="199.52" y="543.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (233 samples, 0.73%)</title><rect x="130.1" y="517" width="8.6" height="15.0" fill="rgb(250,73,31)" rx="2" ry="2" />
<text  x="133.07" y="527.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (4 samples, 0.01%)</title><rect x="1178.2" y="773" width="0.2" height="15.0" fill="rgb(228,186,10)" rx="2" ry="2" />
<text  x="1181.25" y="783.5" ></text>
</g>
<g >
<title>Game_Picture::Show (122 samples, 0.38%)</title><rect x="211.0" y="853" width="4.5" height="15.0" fill="rgb(246,154,0)" rx="2" ry="2" />
<text  x="214.01" y="863.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (3 samples, 0.01%)</title><rect x="1081.5" y="741" width="0.1" height="15.0" fill="rgb(254,108,31)" rx="2" ry="2" />
<text  x="1084.53" y="751.5" ></text>
</g>
<g >
<title>FileRequestResult::FileRequestResult (10 samples, 0.03%)</title><rect x="741.3" y="661" width="0.4" height="15.0" fill="rgb(242,68,23)" rx="2" ry="2" />
<text  x="744.34" y="671.5" ></text>
</g>
<g >
<title>get_page_from_freelist (5 samples, 0.02%)</title><rect x="135.8" y="293" width="0.2" height="15.0" fill="rgb(244,13,54)" rx="2" ry="2" />
<text  x="138.80" y="303.5" ></text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (12 samples, 0.04%)</title><rect x="873.8" y="485" width="0.4" height="15.0" fill="rgb(230,184,52)" rx="2" ry="2" />
<text  x="876.80" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*, std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt; &gt;::operator* (8 samples, 0.03%)</title><rect x="746.4" y="661" width="0.3" height="15.0" fill="rgb(225,167,22)" rx="2" ry="2" />
<text  x="749.37" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (7 samples, 0.02%)</title><rect x="155.0" y="565" width="0.3" height="15.0" fill="rgb(234,118,24)" rx="2" ry="2" />
<text  x="158.02" y="575.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (11 samples, 0.03%)</title><rect x="809.8" y="373" width="0.4" height="15.0" fill="rgb(251,57,40)" rx="2" ry="2" />
<text  x="812.82" y="383.5" ></text>
</g>
<g >
<title>[easyrpg-player] (7 samples, 0.02%)</title><rect x="128.2" y="997" width="0.2" height="15.0" fill="rgb(237,148,1)" rx="2" ry="2" />
<text  x="131.15" y="1007.5" ></text>
</g>
<g >
<title>min&lt;int&gt; (3 samples, 0.01%)</title><rect x="872.2" y="453" width="0.2" height="15.0" fill="rgb(207,28,50)" rx="2" ry="2" />
<text  x="875.24" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt;::operator()&lt;int const*&gt; (4 samples, 0.01%)</title><rect x="608.1" y="661" width="0.2" height="15.0" fill="rgb(227,132,33)" rx="2" ry="2" />
<text  x="611.11" y="671.5" ></text>
</g>
<g >
<title>Game_Picture::Show (4 samples, 0.01%)</title><rect x="140.3" y="949" width="0.1" height="15.0" fill="rgb(232,17,43)" rx="2" ry="2" />
<text  x="143.27" y="959.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Impl::_Impl (11 samples, 0.03%)</title><rect x="695.9" y="581" width="0.4" height="15.0" fill="rgb(232,89,42)" rx="2" ry="2" />
<text  x="698.88" y="591.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (43 samples, 0.13%)</title><rect x="795.7" y="357" width="1.6" height="15.0" fill="rgb(228,148,27)" rx="2" ry="2" />
<text  x="798.71" y="367.5" ></text>
</g>
<g >
<title>main (25,037 samples, 78.41%)</title><rect x="257.6" y="965" width="925.3" height="15.0" fill="rgb(205,105,32)" rx="2" ry="2" />
<text  x="260.57" y="975.5" >main</text>
</g>
<g >
<title>FileRequestAsync::IsReady (5 samples, 0.02%)</title><rect x="30.0" y="981" width="0.2" height="15.0" fill="rgb(245,36,21)" rx="2" ry="2" />
<text  x="32.99" y="991.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_clone (160 samples, 0.50%)</title><rect x="713.2" y="661" width="5.9" height="15.0" fill="rgb(253,208,16)" rx="2" ry="2" />
<text  x="716.22" y="671.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (122 samples, 0.38%)</title><rect x="211.0" y="901" width="4.5" height="15.0" fill="rgb(232,85,36)" rx="2" ry="2" />
<text  x="214.01" y="911.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandBreakLoop (4 samples, 0.01%)</title><rect x="452.0" y="757" width="0.2" height="15.0" fill="rgb(240,31,16)" rx="2" ry="2" />
<text  x="455.04" y="767.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (11 samples, 0.03%)</title><rect x="646.3" y="645" width="0.4" height="15.0" fill="rgb(248,69,17)" rx="2" ry="2" />
<text  x="649.33" y="655.5" ></text>
</g>
<g >
<title>Sprite_Character::Update (5 samples, 0.02%)</title><rect x="1179.2" y="837" width="0.2" height="15.0" fill="rgb(245,85,38)" rx="2" ry="2" />
<text  x="1182.17" y="847.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (208 samples, 0.65%)</title><rect x="183.7" y="661" width="7.6" height="15.0" fill="rgb(216,188,12)" rx="2" ry="2" />
<text  x="186.66" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt; (72 samples, 0.23%)</title><rect x="1109.4" y="773" width="2.7" height="15.0" fill="rgb(242,0,13)" rx="2" ry="2" />
<text  x="1112.40" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt;::_Iter_equals_val (7 samples, 0.02%)</title><rect x="503.3" y="693" width="0.3" height="15.0" fill="rgb(224,133,35)" rx="2" ry="2" />
<text  x="506.34" y="703.5" ></text>
</g>
<g >
<title>psi_task_change (4 samples, 0.01%)</title><rect x="19.0" y="837" width="0.1" height="15.0" fill="rgb(245,12,17)" rx="2" ry="2" />
<text  x="21.98" y="847.5" ></text>
</g>
<g >
<title>finish_task_switch (76 samples, 0.24%)</title><rect x="19.1" y="853" width="2.8" height="15.0" fill="rgb(213,15,16)" rx="2" ry="2" />
<text  x="22.13" y="863.5" ></text>
</g>
<g >
<title>wp_page_copy (8 samples, 0.03%)</title><rect x="137.1" y="357" width="0.3" height="15.0" fill="rgb(224,145,33)" rx="2" ry="2" />
<text  x="140.13" y="367.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_memcmp@plt (4 samples, 0.01%)</title><rect x="169.6" y="469" width="0.1" height="15.0" fill="rgb(238,219,42)" rx="2" ry="2" />
<text  x="172.58" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (27 samples, 0.08%)</title><rect x="764.4" y="437" width="1.0" height="15.0" fill="rgb(219,150,34)" rx="2" ry="2" />
<text  x="767.37" y="447.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (110 samples, 0.34%)</title><rect x="200.4" y="645" width="4.1" height="15.0" fill="rgb(242,137,43)" rx="2" ry="2" />
<text  x="203.40" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (17 samples, 0.05%)</title><rect x="499.7" y="693" width="0.6" height="15.0" fill="rgb(222,223,42)" rx="2" ry="2" />
<text  x="502.68" y="703.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (11 samples, 0.03%)</title><rect x="970.8" y="677" width="0.4" height="15.0" fill="rgb(208,226,25)" rx="2" ry="2" />
<text  x="973.77" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::get (13 samples, 0.04%)</title><rect x="111.3" y="981" width="0.4" height="15.0" fill="rgb(252,26,37)" rx="2" ry="2" />
<text  x="114.26" y="991.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (3 samples, 0.01%)</title><rect x="134.7" y="293" width="0.1" height="15.0" fill="rgb(246,33,0)" rx="2" ry="2" />
<text  x="137.73" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*, std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (8 samples, 0.03%)</title><rect x="61.1" y="981" width="0.3" height="15.0" fill="rgb(238,175,42)" rx="2" ry="2" />
<text  x="64.11" y="991.5" ></text>
</g>
<g >
<title>X11_SetWindowTitle (3 samples, 0.01%)</title><rect x="258.9" y="837" width="0.2" height="15.0" fill="rgb(224,18,20)" rx="2" ry="2" />
<text  x="261.94" y="847.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (47 samples, 0.15%)</title><rect x="251.7" y="437" width="1.7" height="15.0" fill="rgb(251,55,36)" rx="2" ry="2" />
<text  x="254.70" y="447.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (5,279 samples, 16.53%)</title><rect x="740.2" y="677" width="195.1" height="15.0" fill="rgb(234,145,39)" rx="2" ry="2" />
<text  x="743.23" y="687.5" >FileRequestAsync::CallLis..</text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator bool (19 samples, 0.06%)</title><rect x="982.1" y="725" width="0.7" height="15.0" fill="rgb(239,227,29)" rx="2" ry="2" />
<text  x="985.08" y="735.5" ></text>
</g>
<g >
<title>Bitmap::Clear (378 samples, 1.18%)</title><rect x="221.2" y="485" width="14.0" height="15.0" fill="rgb(244,197,41)" rx="2" ry="2" />
<text  x="224.25" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (121 samples, 0.38%)</title><rect x="558.5" y="725" width="4.5" height="15.0" fill="rgb(211,169,54)" rx="2" ry="2" />
<text  x="561.52" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (5 samples, 0.02%)</title><rect x="69.1" y="981" width="0.2" height="15.0" fill="rgb(225,42,51)" rx="2" ry="2" />
<text  x="72.13" y="991.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (110 samples, 0.34%)</title><rect x="200.4" y="661" width="4.1" height="15.0" fill="rgb(229,181,18)" rx="2" ry="2" />
<text  x="203.40" y="671.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::deallocate (72 samples, 0.23%)</title><rect x="191.8" y="421" width="2.7" height="15.0" fill="rgb(225,193,53)" rx="2" ry="2" />
<text  x="194.79" y="431.5" ></text>
</g>
<g >
<title>std::_Bit_iterator_base::_Bit_iterator_base (5 samples, 0.02%)</title><rect x="265.3" y="725" width="0.1" height="15.0" fill="rgb(207,35,20)" rx="2" ry="2" />
<text  x="268.26" y="735.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (22 samples, 0.07%)</title><rect x="1181.5" y="597" width="0.8" height="15.0" fill="rgb(251,49,7)" rx="2" ry="2" />
<text  x="1184.54" y="607.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (149 samples, 0.47%)</title><rect x="194.9" y="885" width="5.5" height="15.0" fill="rgb(226,19,17)" rx="2" ry="2" />
<text  x="197.90" y="895.5" ></text>
</g>
<g >
<title>Bitmap::Create (4 samples, 0.01%)</title><rect x="140.3" y="693" width="0.1" height="15.0" fill="rgb(240,23,28)" rx="2" ry="2" />
<text  x="143.27" y="703.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (4 samples, 0.01%)</title><rect x="1162.7" y="757" width="0.1" height="15.0" fill="rgb(238,182,40)" rx="2" ry="2" />
<text  x="1165.65" y="767.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (19 samples, 0.06%)</title><rect x="87.4" y="981" width="0.7" height="15.0" fill="rgb(217,221,33)" rx="2" ry="2" />
<text  x="90.42" y="991.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (21 samples, 0.07%)</title><rect x="610.4" y="741" width="0.8" height="15.0" fill="rgb(206,225,26)" rx="2" ry="2" />
<text  x="613.44" y="751.5" ></text>
</g>
<g >
<title>operator!= (7 samples, 0.02%)</title><rect x="1166.3" y="773" width="0.2" height="15.0" fill="rgb(250,138,48)" rx="2" ry="2" />
<text  x="1169.27" y="783.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (122 samples, 0.38%)</title><rect x="211.0" y="629" width="4.5" height="15.0" fill="rgb(253,64,44)" rx="2" ry="2" />
<text  x="214.01" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (38 samples, 0.12%)</title><rect x="78.3" y="981" width="1.4" height="15.0" fill="rgb(251,207,31)" rx="2" ry="2" />
<text  x="81.26" y="991.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (604 samples, 1.89%)</title><rect x="161.3" y="677" width="22.4" height="15.0" fill="rgb(237,192,22)" rx="2" ry="2" />
<text  x="164.34" y="687.5" >s..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="986.0" y="581" width="0.1" height="15.0" fill="rgb(252,162,46)" rx="2" ry="2" />
<text  x="989.00" y="591.5" ></text>
</g>
<g >
<title>__sys_recvmsg (3 samples, 0.01%)</title><rect x="1181.2" y="613" width="0.1" height="15.0" fill="rgb(205,72,6)" rx="2" ry="2" />
<text  x="1184.20" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (4 samples, 0.01%)</title><rect x="920.6" y="485" width="0.2" height="15.0" fill="rgb(236,166,41)" rx="2" ry="2" />
<text  x="923.62" y="495.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (604 samples, 1.89%)</title><rect x="161.3" y="741" width="22.4" height="15.0" fill="rgb(230,75,3)" rx="2" ry="2" />
<text  x="164.34" y="751.5" >s..</text>
</g>
<g >
<title>Cache::Picture (44 samples, 0.14%)</title><rect x="194.9" y="581" width="1.6" height="15.0" fill="rgb(206,85,39)" rx="2" ry="2" />
<text  x="197.90" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (204 samples, 0.64%)</title><rect x="130.1" y="485" width="7.5" height="15.0" fill="rgb(248,13,13)" rx="2" ry="2" />
<text  x="133.07" y="495.5" ></text>
</g>
<g >
<title>Bitmap::GetHeight (12 samples, 0.04%)</title><rect x="869.7" y="485" width="0.5" height="15.0" fill="rgb(250,83,53)" rx="2" ry="2" />
<text  x="872.73" y="495.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (179 samples, 0.56%)</title><rect x="145.2" y="949" width="6.6" height="15.0" fill="rgb(221,22,26)" rx="2" ry="2" />
<text  x="148.23" y="959.5" ></text>
</g>
<g >
<title>Player::IsRPG2k3 (4 samples, 0.01%)</title><rect x="40.5" y="981" width="0.1" height="15.0" fill="rgb(250,121,25)" rx="2" ry="2" />
<text  x="43.49" y="991.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.01%)</title><rect x="1181.2" y="661" width="0.1" height="15.0" fill="rgb(215,47,8)" rx="2" ry="2" />
<text  x="1184.17" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (108 samples, 0.34%)</title><rect x="179.7" y="469" width="4.0" height="15.0" fill="rgb(208,58,42)" rx="2" ry="2" />
<text  x="182.67" y="479.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (14 samples, 0.04%)</title><rect x="98.8" y="981" width="0.6" height="15.0" fill="rgb(205,161,7)" rx="2" ry="2" />
<text  x="101.84" y="991.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (10,241 samples, 32.07%)</title><rect x="619.6" y="757" width="378.4" height="15.0" fill="rgb(224,120,31)" rx="2" ry="2" />
<text  x="622.57" y="767.5" >Game_Interpreter::CommandShowPicture</text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (10 samples, 0.03%)</title><rect x="210.6" y="565" width="0.4" height="15.0" fill="rgb(222,156,11)" rx="2" ry="2" />
<text  x="213.64" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::end (5 samples, 0.02%)</title><rect x="667.2" y="677" width="0.2" height="15.0" fill="rgb(239,208,18)" rx="2" ry="2" />
<text  x="670.21" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (11 samples, 0.03%)</title><rect x="1133.9" y="789" width="0.4" height="15.0" fill="rgb(223,6,21)" rx="2" ry="2" />
<text  x="1136.86" y="799.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (454 samples, 1.42%)</title><rect x="899.6" y="453" width="16.8" height="15.0" fill="rgb(243,123,25)" rx="2" ry="2" />
<text  x="902.59" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (6 samples, 0.02%)</title><rect x="980.9" y="693" width="0.2" height="15.0" fill="rgb(253,89,48)" rx="2" ry="2" />
<text  x="983.90" y="703.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (130 samples, 0.41%)</title><rect x="140.4" y="693" width="4.8" height="15.0" fill="rgb(223,110,35)" rx="2" ry="2" />
<text  x="143.42" y="703.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (179 samples, 0.56%)</title><rect x="145.2" y="741" width="6.6" height="15.0" fill="rgb(218,85,30)" rx="2" ry="2" />
<text  x="148.23" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (3 samples, 0.01%)</title><rect x="998.6" y="693" width="0.1" height="15.0" fill="rgb(250,169,17)" rx="2" ry="2" />
<text  x="1001.64" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (7 samples, 0.02%)</title><rect x="1053.3" y="757" width="0.2" height="15.0" fill="rgb(251,67,34)" rx="2" ry="2" />
<text  x="1056.26" y="767.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (7 samples, 0.02%)</title><rect x="101.0" y="981" width="0.3" height="15.0" fill="rgb(239,84,32)" rx="2" ry="2" />
<text  x="104.03" y="991.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.08%)</title><rect x="1181.4" y="789" width="0.9" height="15.0" fill="rgb(238,73,11)" rx="2" ry="2" />
<text  x="1184.43" y="799.5" ></text>
</g>
<g >
<title>Game_Player::UpdateScroll (3 samples, 0.01%)</title><rect x="1148.8" y="821" width="0.1" height="15.0" fill="rgb(244,188,17)" rx="2" ry="2" />
<text  x="1151.83" y="831.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (257 samples, 0.80%)</title><rect x="151.8" y="677" width="9.5" height="15.0" fill="rgb(252,183,6)" rx="2" ry="2" />
<text  x="154.84" y="687.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate (167 samples, 0.52%)</title><rect x="697.7" y="581" width="6.1" height="15.0" fill="rgb(229,122,2)" rx="2" ry="2" />
<text  x="700.66" y="591.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (276 samples, 0.86%)</title><rect x="130.1" y="677" width="10.2" height="15.0" fill="rgb(222,79,40)" rx="2" ry="2" />
<text  x="133.07" y="687.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandJumpToLabel (120 samples, 0.38%)</title><rect x="611.9" y="757" width="4.4" height="15.0" fill="rgb(253,226,10)" rx="2" ry="2" />
<text  x="614.88" y="767.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::get (13 samples, 0.04%)</title><rect x="1169.8" y="773" width="0.5" height="15.0" fill="rgb(240,168,25)" rx="2" ry="2" />
<text  x="1172.82" y="783.5" ></text>
</g>
<g >
<title>std::map&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, (anonymous namespace)::CacheItem, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::end (4 samples, 0.01%)</title><rect x="786.4" y="485" width="0.2" height="15.0" fill="rgb(228,83,9)" rx="2" ry="2" />
<text  x="789.43" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (190 samples, 0.60%)</title><rect x="184.3" y="309" width="7.0" height="15.0" fill="rgb(246,146,13)" rx="2" ry="2" />
<text  x="187.33" y="319.5" ></text>
</g>
<g >
<title>Game_Map::Update (110 samples, 0.34%)</title><rect x="200.4" y="917" width="4.1" height="15.0" fill="rgb(253,143,51)" rx="2" ry="2" />
<text  x="203.40" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (4 samples, 0.01%)</title><rect x="1104.0" y="773" width="0.1" height="15.0" fill="rgb(240,227,2)" rx="2" ry="2" />
<text  x="1106.96" y="783.5" ></text>
</g>
<g >
<title>pixman_image_unref (47 samples, 0.15%)</title><rect x="251.7" y="373" width="1.7" height="15.0" fill="rgb(249,180,37)" rx="2" ry="2" />
<text  x="254.70" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (4 samples, 0.01%)</title><rect x="76.9" y="981" width="0.1" height="15.0" fill="rgb(214,125,33)" rx="2" ry="2" />
<text  x="79.89" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate@plt (7 samples, 0.02%)</title><rect x="644.2" y="645" width="0.2" height="15.0" fill="rgb(218,224,54)" rx="2" ry="2" />
<text  x="647.18" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (99 samples, 0.31%)</title><rect x="1171.7" y="789" width="3.6" height="15.0" fill="rgb(208,52,22)" rx="2" ry="2" />
<text  x="1174.67" y="799.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (4,468 samples, 13.99%)</title><rect x="756.5" y="549" width="165.1" height="15.0" fill="rgb(219,27,22)" rx="2" ry="2" />
<text  x="759.46" y="559.5" >std::__invoke&lt;void (G..</text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (149 samples, 0.47%)</title><rect x="194.9" y="773" width="5.5" height="15.0" fill="rgb(235,68,3)" rx="2" ry="2" />
<text  x="197.90" y="783.5" ></text>
</g>
<g >
<title>std::tuple&lt;FileRequestResult*&amp;&amp;&gt;::tuple&lt;FileRequestResult*, true&gt; (11 samples, 0.03%)</title><rect x="922.7" y="597" width="0.4" height="15.0" fill="rgb(220,16,43)" rx="2" ry="2" />
<text  x="925.65" y="607.5" ></text>
</g>
<g >
<title>std::forward&lt;std::weak_ptr&lt;int&gt; &gt; (4 samples, 0.01%)</title><rect x="94.6" y="981" width="0.1" height="15.0" fill="rgb(235,40,12)" rx="2" ry="2" />
<text  x="97.56" y="991.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (14 samples, 0.04%)</title><rect x="129.6" y="453" width="0.5" height="15.0" fill="rgb(236,124,23)" rx="2" ry="2" />
<text  x="132.56" y="463.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (776 samples, 2.43%)</title><rect x="221.2" y="869" width="28.7" height="15.0" fill="rgb(223,199,32)" rx="2" ry="2" />
<text  x="224.25" y="879.5" >Sc..</text>
</g>
<g >
<title>flush_tlb_func_common.constprop.9 (4 samples, 0.01%)</title><rect x="204.0" y="149" width="0.1" height="15.0" fill="rgb(222,136,9)" rx="2" ry="2" />
<text  x="206.99" y="159.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (5 samples, 0.02%)</title><rect x="920.8" y="469" width="0.2" height="15.0" fill="rgb(211,176,42)" rx="2" ry="2" />
<text  x="923.81" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::operator* (7 samples, 0.02%)</title><rect x="197.2" y="373" width="0.2" height="15.0" fill="rgb(227,71,21)" rx="2" ry="2" />
<text  x="200.19" y="383.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (7 samples, 0.02%)</title><rect x="1179.9" y="741" width="0.3" height="15.0" fill="rgb(230,10,54)" rx="2" ry="2" />
<text  x="1182.91" y="751.5" ></text>
</g>
<g >
<title>Game_Picture::ShowParams::~ShowParams (9 samples, 0.03%)</title><rect x="36.7" y="981" width="0.3" height="15.0" fill="rgb(219,122,15)" rx="2" ry="2" />
<text  x="39.68" y="991.5" ></text>
</g>
<g >
<title>operator delete (207 samples, 0.65%)</title><rect x="729.0" y="629" width="7.6" height="15.0" fill="rgb(241,215,25)" rx="2" ry="2" />
<text  x="732.00" y="639.5" ></text>
</g>
<g >
<title>pipe_write (3 samples, 0.01%)</title><rect x="23.8" y="885" width="0.1" height="15.0" fill="rgb(216,140,45)" rx="2" ry="2" />
<text  x="26.78" y="895.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (6 samples, 0.02%)</title><rect x="874.0" y="453" width="0.2" height="15.0" fill="rgb(241,123,0)" rx="2" ry="2" />
<text  x="876.98" y="463.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;2ul, bool&gt; (5 samples, 0.02%)</title><rect x="794.7" y="357" width="0.2" height="15.0" fill="rgb(207,211,22)" rx="2" ry="2" />
<text  x="797.67" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_addr (15 samples, 0.05%)</title><rect x="46.7" y="981" width="0.6" height="15.0" fill="rgb(222,225,34)" rx="2" ry="2" />
<text  x="49.74" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (21 samples, 0.07%)</title><rect x="370.5" y="757" width="0.8" height="15.0" fill="rgb(245,138,6)" rx="2" ry="2" />
<text  x="373.48" y="767.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (96 samples, 0.30%)</title><rect x="191.3" y="853" width="3.6" height="15.0" fill="rgb(244,67,4)" rx="2" ry="2" />
<text  x="194.35" y="863.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt;::_M_head (3 samples, 0.01%)</title><rect x="966.8" y="629" width="0.1" height="15.0" fill="rgb(214,108,15)" rx="2" ry="2" />
<text  x="969.82" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::operator[] (7 samples, 0.02%)</title><rect x="481.1" y="709" width="0.2" height="15.0" fill="rgb(237,11,9)" rx="2" ry="2" />
<text  x="484.09" y="719.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (10 samples, 0.03%)</title><rect x="811.0" y="389" width="0.3" height="15.0" fill="rgb(250,5,47)" rx="2" ry="2" />
<text  x="813.97" y="399.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (9 samples, 0.03%)</title><rect x="204.0" y="213" width="0.3" height="15.0" fill="rgb(252,220,48)" rx="2" ry="2" />
<text  x="206.99" y="223.5" ></text>
</g>
<g >
<title>memcpy (5 samples, 0.02%)</title><rect x="748.6" y="629" width="0.2" height="15.0" fill="rgb(254,33,6)" rx="2" ry="2" />
<text  x="751.59" y="639.5" ></text>
</g>
<g >
<title>Bitmap::~Bitmap (190 samples, 0.60%)</title><rect x="184.3" y="421" width="7.0" height="15.0" fill="rgb(246,164,14)" rx="2" ry="2" />
<text  x="187.33" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (159 samples, 0.50%)</title><rect x="778.0" y="453" width="5.9" height="15.0" fill="rgb(224,132,28)" rx="2" ry="2" />
<text  x="781.00" y="463.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (14 samples, 0.04%)</title><rect x="129.6" y="549" width="0.5" height="15.0" fill="rgb(235,225,2)" rx="2" ry="2" />
<text  x="132.56" y="559.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (32 samples, 0.10%)</title><rect x="813.8" y="453" width="1.2" height="15.0" fill="rgb(245,111,19)" rx="2" ry="2" />
<text  x="816.78" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string@plt (3 samples, 0.01%)</title><rect x="977.1" y="725" width="0.1" height="15.0" fill="rgb(219,165,53)" rx="2" ry="2" />
<text  x="980.09" y="735.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (307 samples, 0.96%)</title><rect x="238.6" y="453" width="11.3" height="15.0" fill="rgb(226,158,11)" rx="2" ry="2" />
<text  x="241.58" y="463.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (190 samples, 0.60%)</title><rect x="184.3" y="341" width="7.0" height="15.0" fill="rgb(233,21,2)" rx="2" ry="2" />
<text  x="187.33" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (43 samples, 0.13%)</title><rect x="974.1" y="661" width="1.5" height="15.0" fill="rgb(254,10,48)" rx="2" ry="2" />
<text  x="977.06" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (7 samples, 0.02%)</title><rect x="461.2" y="693" width="0.3" height="15.0" fill="rgb(216,211,45)" rx="2" ry="2" />
<text  x="464.24" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (40 samples, 0.13%)</title><rect x="1059.1" y="741" width="1.5" height="15.0" fill="rgb(254,12,54)" rx="2" ry="2" />
<text  x="1062.10" y="751.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="751.4" y="549" width="0.1" height="15.0" fill="rgb(210,40,54)" rx="2" ry="2" />
<text  x="754.43" y="559.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::_Placeholder&lt;1&gt;, true&gt;::_Head_base&lt;std::_Placeholder&lt;1&gt; &gt; (4 samples, 0.01%)</title><rect x="66.1" y="981" width="0.1" height="15.0" fill="rgb(239,78,46)" rx="2" ry="2" />
<text  x="69.06" y="991.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (52 samples, 0.16%)</title><rect x="701.8" y="485" width="1.9" height="15.0" fill="rgb(242,149,41)" rx="2" ry="2" />
<text  x="704.76" y="495.5" ></text>
</g>
<g >
<title>std::forward&lt;std::weak_ptr&lt;int&gt; &gt; (4 samples, 0.01%)</title><rect x="685.1" y="661" width="0.1" height="15.0" fill="rgb(251,170,3)" rx="2" ry="2" />
<text  x="688.06" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_construct&lt;char32_t const*&gt; (4 samples, 0.01%)</title><rect x="986.0" y="693" width="0.1" height="15.0" fill="rgb(241,27,49)" rx="2" ry="2" />
<text  x="988.96" y="703.5" ></text>
</g>
<g >
<title>std::__find_if&lt;int const*, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (10 samples, 0.03%)</title><rect x="607.9" y="677" width="0.4" height="15.0" fill="rgb(232,180,25)" rx="2" ry="2" />
<text  x="610.89" y="687.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (12 samples, 0.04%)</title><rect x="960.5" y="709" width="0.4" height="15.0" fill="rgb(222,222,28)" rx="2" ry="2" />
<text  x="963.46" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*, std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt; &gt;::operator++ (5 samples, 0.02%)</title><rect x="746.7" y="661" width="0.1" height="15.0" fill="rgb(244,171,34)" rx="2" ry="2" />
<text  x="749.66" y="671.5" ></text>
</g>
<g >
<title>SDL_GetTicks_REAL (3 samples, 0.01%)</title><rect x="1180.4" y="869" width="0.1" height="15.0" fill="rgb(223,34,7)" rx="2" ry="2" />
<text  x="1183.35" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (603 samples, 1.89%)</title><rect x="1053.5" y="757" width="22.3" height="15.0" fill="rgb(246,54,24)" rx="2" ry="2" />
<text  x="1056.52" y="767.5" >s..</text>
</g>
<g >
<title>Player::Update (110 samples, 0.34%)</title><rect x="200.4" y="965" width="4.1" height="15.0" fill="rgb(249,111,11)" rx="2" ry="2" />
<text  x="203.40" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (272 samples, 0.85%)</title><rect x="164.0" y="613" width="10.0" height="15.0" fill="rgb(241,195,16)" rx="2" ry="2" />
<text  x="166.96" y="623.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (85 samples, 0.27%)</title><rect x="145.5" y="437" width="3.2" height="15.0" fill="rgb(235,103,19)" rx="2" ry="2" />
<text  x="148.52" y="447.5" ></text>
</g>
<g >
<title>Sprite::SetOy (5 samples, 0.02%)</title><rect x="882.5" y="485" width="0.2" height="15.0" fill="rgb(251,180,48)" rx="2" ry="2" />
<text  x="885.52" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (65 samples, 0.20%)</title><rect x="941.7" y="613" width="2.4" height="15.0" fill="rgb(225,23,2)" rx="2" ry="2" />
<text  x="944.69" y="623.5" ></text>
</g>
<g >
<title>unmap_page_range (17 samples, 0.05%)</title><rect x="203.1" y="149" width="0.6" height="15.0" fill="rgb(221,68,36)" rx="2" ry="2" />
<text  x="206.06" y="159.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (4 samples, 0.01%)</title><rect x="231.8" y="309" width="0.2" height="15.0" fill="rgb(232,55,54)" rx="2" ry="2" />
<text  x="234.82" y="319.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;FileRequestResult*&gt; (16 samples, 0.05%)</title><rect x="922.5" y="613" width="0.6" height="15.0" fill="rgb(241,22,40)" rx="2" ry="2" />
<text  x="925.47" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (17 samples, 0.05%)</title><rect x="982.2" y="693" width="0.6" height="15.0" fill="rgb(247,132,36)" rx="2" ry="2" />
<text  x="985.15" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (4 samples, 0.01%)</title><rect x="638.3" y="677" width="0.1" height="15.0" fill="rgb(245,123,34)" rx="2" ry="2" />
<text  x="641.27" y="687.5" ></text>
</g>
<g >
<title>operator delete (107 samples, 0.34%)</title><rect x="741.9" y="645" width="4.0" height="15.0" fill="rgb(216,159,0)" rx="2" ry="2" />
<text  x="744.90" y="655.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::~_Sp_counted_base (5 samples, 0.02%)</title><rect x="944.6" y="597" width="0.2" height="15.0" fill="rgb(225,191,17)" rx="2" ry="2" />
<text  x="947.61" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_value (12 samples, 0.04%)</title><rect x="779.7" y="405" width="0.5" height="15.0" fill="rgb(227,99,5)" rx="2" ry="2" />
<text  x="782.74" y="415.5" ></text>
</g>
<g >
<title>operator new (119 samples, 0.37%)</title><rect x="179.3" y="485" width="4.4" height="15.0" fill="rgb(237,190,8)" rx="2" ry="2" />
<text  x="182.26" y="495.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (25 samples, 0.08%)</title><rect x="173.1" y="597" width="0.9" height="15.0" fill="rgb(244,32,16)" rx="2" ry="2" />
<text  x="176.09" y="607.5" ></text>
</g>
<g >
<title>Game_Interpreter::OnFinishStackFrame (4 samples, 0.01%)</title><rect x="413.2" y="789" width="0.1" height="15.0" fill="rgb(240,105,29)" rx="2" ry="2" />
<text  x="416.20" y="799.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (119 samples, 0.37%)</title><rect x="179.3" y="533" width="4.4" height="15.0" fill="rgb(248,50,14)" rx="2" ry="2" />
<text  x="182.26" y="543.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (726 samples, 2.27%)</title><rect x="828.3" y="469" width="26.8" height="15.0" fill="rgb(222,26,51)" rx="2" ry="2" />
<text  x="831.26" y="479.5" >p..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (31 samples, 0.10%)</title><rect x="460.4" y="709" width="1.1" height="15.0" fill="rgb(214,53,0)" rx="2" ry="2" />
<text  x="463.36" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base (7 samples, 0.02%)</title><rect x="652.8" y="661" width="0.2" height="15.0" fill="rgb(231,222,42)" rx="2" ry="2" />
<text  x="655.76" y="671.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (142 samples, 0.44%)</title><rect x="174.0" y="597" width="5.3" height="15.0" fill="rgb(237,165,45)" rx="2" ry="2" />
<text  x="177.02" y="607.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.03%)</title><rect x="936.4" y="693" width="0.4" height="15.0" fill="rgb(225,9,19)" rx="2" ry="2" />
<text  x="939.44" y="703.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (4 samples, 0.01%)</title><rect x="810.2" y="389" width="0.2" height="15.0" fill="rgb(213,136,12)" rx="2" ry="2" />
<text  x="813.23" y="399.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (4 samples, 0.01%)</title><rect x="235.1" y="453" width="0.1" height="15.0" fill="rgb(211,140,5)" rx="2" ry="2" />
<text  x="238.07" y="463.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (604 samples, 1.89%)</title><rect x="161.3" y="661" width="22.4" height="15.0" fill="rgb(214,29,36)" rx="2" ry="2" />
<text  x="164.34" y="671.5" >G..</text>
</g>
<g >
<title>std::min&lt;int&gt; (10 samples, 0.03%)</title><rect x="593.8" y="741" width="0.4" height="15.0" fill="rgb(239,133,46)" rx="2" ry="2" />
<text  x="596.85" y="751.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (58 samples, 0.18%)</title><rect x="152.4" y="517" width="2.1" height="15.0" fill="rgb(209,6,3)" rx="2" ry="2" />
<text  x="155.36" y="527.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (30 samples, 0.09%)</title><rect x="747.5" y="629" width="1.1" height="15.0" fill="rgb(245,148,46)" rx="2" ry="2" />
<text  x="750.48" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (90 samples, 0.28%)</title><rect x="1172.0" y="773" width="3.3" height="15.0" fill="rgb(248,218,30)" rx="2" ry="2" />
<text  x="1175.00" y="783.5" ></text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;int&gt;, true&gt;::~_Sp_ebo_helper (3 samples, 0.01%)</title><rect x="944.8" y="581" width="0.1" height="15.0" fill="rgb(234,218,22)" rx="2" ry="2" />
<text  x="947.83" y="591.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, true&gt; (142 samples, 0.44%)</title><rect x="174.0" y="629" width="5.3" height="15.0" fill="rgb(224,68,47)" rx="2" ry="2" />
<text  x="177.02" y="639.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::deallocate (39 samples, 0.12%)</title><rect x="238.6" y="389" width="1.4" height="15.0" fill="rgb(233,181,47)" rx="2" ry="2" />
<text  x="241.58" y="399.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.03%)</title><rect x="59.6" y="981" width="0.3" height="15.0" fill="rgb(237,74,22)" rx="2" ry="2" />
<text  x="62.56" y="991.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (4 samples, 0.01%)</title><rect x="140.3" y="677" width="0.1" height="15.0" fill="rgb(205,38,42)" rx="2" ry="2" />
<text  x="143.27" y="687.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (179 samples, 0.56%)</title><rect x="145.2" y="901" width="6.6" height="15.0" fill="rgb(216,71,49)" rx="2" ry="2" />
<text  x="148.23" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (12 samples, 0.04%)</title><rect x="901.5" y="421" width="0.4" height="15.0" fill="rgb(223,106,39)" rx="2" ry="2" />
<text  x="904.48" y="431.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_base (8 samples, 0.03%)</title><rect x="71.1" y="981" width="0.3" height="15.0" fill="rgb(246,199,23)" rx="2" ry="2" />
<text  x="74.13" y="991.5" ></text>
</g>
<g >
<title>SDL_LockMutex_REAL (3 samples, 0.01%)</title><rect x="1180.5" y="837" width="0.1" height="15.0" fill="rgb(236,42,15)" rx="2" ry="2" />
<text  x="1183.50" y="847.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::function&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;, void, void&gt; (6 samples, 0.02%)</title><rect x="95.1" y="981" width="0.2" height="15.0" fill="rgb(226,19,21)" rx="2" ry="2" />
<text  x="98.11" y="991.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (21 samples, 0.07%)</title><rect x="606.9" y="709" width="0.8" height="15.0" fill="rgb(236,184,27)" rx="2" ry="2" />
<text  x="609.93" y="719.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (149 samples, 0.47%)</title><rect x="194.9" y="901" width="5.5" height="15.0" fill="rgb(231,105,27)" rx="2" ry="2" />
<text  x="197.90" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (53 samples, 0.17%)</title><rect x="143.3" y="533" width="1.9" height="15.0" fill="rgb(248,22,21)" rx="2" ry="2" />
<text  x="146.27" y="543.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (15 samples, 0.05%)</title><rect x="682.5" y="645" width="0.5" height="15.0" fill="rgb(230,82,52)" rx="2" ry="2" />
<text  x="685.47" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (5 samples, 0.02%)</title><rect x="615.5" y="709" width="0.2" height="15.0" fill="rgb(235,15,7)" rx="2" ry="2" />
<text  x="618.50" y="719.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (179 samples, 0.56%)</title><rect x="145.2" y="533" width="6.6" height="15.0" fill="rgb(213,116,26)" rx="2" ry="2" />
<text  x="148.23" y="543.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;int, std::allocator&lt;int&gt;, int&gt; (4 samples, 0.01%)</title><rect x="90.1" y="981" width="0.1" height="15.0" fill="rgb(214,183,30)" rx="2" ry="2" />
<text  x="93.09" y="991.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (21 samples, 0.07%)</title><rect x="213.1" y="565" width="0.8" height="15.0" fill="rgb(238,173,35)" rx="2" ry="2" />
<text  x="216.08" y="575.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (101 samples, 0.32%)</title><rect x="200.7" y="517" width="3.8" height="15.0" fill="rgb(245,229,8)" rx="2" ry="2" />
<text  x="203.74" y="527.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (5 samples, 0.02%)</title><rect x="22.6" y="885" width="0.2" height="15.0" fill="rgb(237,7,51)" rx="2" ry="2" />
<text  x="25.64" y="895.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (156 samples, 0.49%)</title><rect x="164.0" y="533" width="5.7" height="15.0" fill="rgb(229,53,37)" rx="2" ry="2" />
<text  x="166.96" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (35 samples, 0.11%)</title><rect x="510.1" y="725" width="1.3" height="15.0" fill="rgb(245,34,1)" rx="2" ry="2" />
<text  x="513.07" y="735.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (20 samples, 0.06%)</title><rect x="931.6" y="421" width="0.7" height="15.0" fill="rgb(240,42,4)" rx="2" ry="2" />
<text  x="934.56" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (7 samples, 0.02%)</title><rect x="1171.4" y="741" width="0.2" height="15.0" fill="rgb(237,26,54)" rx="2" ry="2" />
<text  x="1174.37" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::~basic_string (3 samples, 0.01%)</title><rect x="986.1" y="725" width="0.1" height="15.0" fill="rgb(206,75,41)" rx="2" ry="2" />
<text  x="989.11" y="735.5" ></text>
</g>
<g >
<title>Bitmap::Clear (56 samples, 0.18%)</title><rect x="855.1" y="485" width="2.1" height="15.0" fill="rgb(222,227,12)" rx="2" ry="2" />
<text  x="858.10" y="495.5" ></text>
</g>
<g >
<title>Game_Picture::Show (149 samples, 0.47%)</title><rect x="194.9" y="821" width="5.5" height="15.0" fill="rgb(210,123,7)" rx="2" ry="2" />
<text  x="197.90" y="831.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (6 samples, 0.02%)</title><rect x="967.9" y="693" width="0.2" height="15.0" fill="rgb(253,50,4)" rx="2" ry="2" />
<text  x="970.89" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (13 samples, 0.04%)</title><rect x="902.1" y="405" width="0.5" height="15.0" fill="rgb(236,45,20)" rx="2" ry="2" />
<text  x="905.10" y="415.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (6 samples, 0.02%)</title><rect x="955.2" y="693" width="0.2" height="15.0" fill="rgb(212,34,20)" rx="2" ry="2" />
<text  x="958.18" y="703.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_get_pointer (3 samples, 0.01%)</title><rect x="923.2" y="629" width="0.1" height="15.0" fill="rgb(213,90,20)" rx="2" ry="2" />
<text  x="926.17" y="639.5" ></text>
</g>
<g >
<title>Bitmap::find_format (7 samples, 0.02%)</title><rect x="27.1" y="981" width="0.3" height="15.0" fill="rgb(220,211,16)" rx="2" ry="2" />
<text  x="30.11" y="991.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (164 samples, 0.51%)</title><rect x="240.0" y="341" width="6.1" height="15.0" fill="rgb(206,149,39)" rx="2" ry="2" />
<text  x="243.02" y="351.5" ></text>
</g>
<g >
<title>Game_Interpreter::SetupWait (5 samples, 0.02%)</title><rect x="33.9" y="981" width="0.2" height="15.0" fill="rgb(217,195,26)" rx="2" ry="2" />
<text  x="36.91" y="991.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_init_functor (219 samples, 0.69%)</title><rect x="720.0" y="677" width="8.1" height="15.0" fill="rgb(244,210,7)" rx="2" ry="2" />
<text  x="722.98" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (22 samples, 0.07%)</title><rect x="735.3" y="565" width="0.8" height="15.0" fill="rgb(215,105,15)" rx="2" ry="2" />
<text  x="738.32" y="575.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (6 samples, 0.02%)</title><rect x="953.4" y="709" width="0.2" height="15.0" fill="rgb(237,132,5)" rx="2" ry="2" />
<text  x="956.40" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (63 samples, 0.20%)</title><rect x="161.6" y="533" width="2.4" height="15.0" fill="rgb(243,139,1)" rx="2" ry="2" />
<text  x="164.63" y="543.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (54 samples, 0.17%)</title><rect x="196.5" y="517" width="2.0" height="15.0" fill="rgb(233,11,8)" rx="2" ry="2" />
<text  x="199.52" y="527.5" ></text>
</g>
<g >
<title>Game_Map::GetDisplayY (4 samples, 0.01%)</title><rect x="633.5" y="725" width="0.1" height="15.0" fill="rgb(246,173,49)" rx="2" ry="2" />
<text  x="636.50" y="735.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (74 samples, 0.23%)</title><rect x="641.2" y="597" width="2.7" height="15.0" fill="rgb(249,31,3)" rx="2" ry="2" />
<text  x="644.15" y="607.5" ></text>
</g>
<g >
<title>Game_Map::SetNeedRefresh (8 samples, 0.03%)</title><rect x="544.3" y="741" width="0.3" height="15.0" fill="rgb(248,195,49)" rx="2" ry="2" />
<text  x="547.32" y="751.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (423 samples, 1.32%)</title><rect x="667.4" y="693" width="15.6" height="15.0" fill="rgb(211,21,40)" rx="2" ry="2" />
<text  x="670.39" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (46 samples, 0.14%)</title><rect x="152.6" y="501" width="1.7" height="15.0" fill="rgb(226,114,40)" rx="2" ry="2" />
<text  x="155.62" y="511.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*&gt; (7 samples, 0.02%)</title><rect x="61.4" y="981" width="0.3" height="15.0" fill="rgb(245,147,49)" rx="2" ry="2" />
<text  x="64.41" y="991.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (4 samples, 0.01%)</title><rect x="666.0" y="485" width="0.2" height="15.0" fill="rgb(244,203,3)" rx="2" ry="2" />
<text  x="669.02" y="495.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_manager (4 samples, 0.01%)</title><rect x="62.7" y="981" width="0.1" height="15.0" fill="rgb(253,221,20)" rx="2" ry="2" />
<text  x="65.70" y="991.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (53 samples, 0.17%)</title><rect x="143.3" y="469" width="1.9" height="15.0" fill="rgb(210,194,0)" rx="2" ry="2" />
<text  x="146.27" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (6 samples, 0.02%)</title><rect x="256.3" y="981" width="0.2" height="15.0" fill="rgb(238,46,33)" rx="2" ry="2" />
<text  x="259.28" y="991.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (130 samples, 0.41%)</title><rect x="140.4" y="901" width="4.8" height="15.0" fill="rgb(218,142,52)" rx="2" ry="2" />
<text  x="143.42" y="911.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_M_begin (9 samples, 0.03%)</title><rect x="66.9" y="981" width="0.3" height="15.0" fill="rgb(207,25,54)" rx="2" ry="2" />
<text  x="69.88" y="991.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.01%)</title><rect x="140.3" y="469" width="0.1" height="15.0" fill="rgb(233,46,33)" rx="2" ry="2" />
<text  x="143.27" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (44 samples, 0.14%)</title><rect x="936.9" y="709" width="1.6" height="15.0" fill="rgb(209,7,22)" rx="2" ry="2" />
<text  x="939.88" y="719.5" ></text>
</g>
<g >
<title>pixman_image_get_width@plt (3 samples, 0.01%)</title><rect x="870.7" y="453" width="0.1" height="15.0" fill="rgb(218,67,9)" rx="2" ry="2" />
<text  x="873.69" y="463.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (5 samples, 0.02%)</title><rect x="1173.8" y="725" width="0.2" height="15.0" fill="rgb(212,124,29)" rx="2" ry="2" />
<text  x="1176.85" y="735.5" ></text>
</g>
<g >
<title>do_syscall_64 (61 samples, 0.19%)</title><rect x="201.5" y="261" width="2.3" height="15.0" fill="rgb(240,154,48)" rx="2" ry="2" />
<text  x="204.51" y="271.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (74 samples, 0.23%)</title><rect x="19.1" y="773" width="2.8" height="15.0" fill="rgb(231,55,17)" rx="2" ry="2" />
<text  x="22.13" y="783.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.03%)</title><rect x="153.9" y="485" width="0.3" height="15.0" fill="rgb(239,55,19)" rx="2" ry="2" />
<text  x="156.87" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.01%)</title><rect x="140.3" y="453" width="0.1" height="15.0" fill="rgb(243,190,45)" rx="2" ry="2" />
<text  x="143.27" y="463.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (138 samples, 0.43%)</title><rect x="686.2" y="581" width="5.1" height="15.0" fill="rgb(245,32,9)" rx="2" ry="2" />
<text  x="689.17" y="591.5" ></text>
</g>
<g >
<title>pixman_image_get_width (3 samples, 0.01%)</title><rect x="897.9" y="453" width="0.1" height="15.0" fill="rgb(244,133,17)" rx="2" ry="2" />
<text  x="900.89" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (66 samples, 0.21%)</title><rect x="1172.5" y="757" width="2.4" height="15.0" fill="rgb(209,133,53)" rx="2" ry="2" />
<text  x="1175.48" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (3 samples, 0.01%)</title><rect x="997.9" y="741" width="0.1" height="15.0" fill="rgb(219,173,14)" rx="2" ry="2" />
<text  x="1000.90" y="751.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.02%)</title><rect x="154.6" y="549" width="0.3" height="15.0" fill="rgb(218,93,2)" rx="2" ry="2" />
<text  x="157.65" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (210 samples, 0.66%)</title><rect x="1008.2" y="725" width="7.8" height="15.0" fill="rgb(235,129,36)" rx="2" ry="2" />
<text  x="1011.25" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (109 samples, 0.34%)</title><rect x="891.3" y="485" width="4.0" height="15.0" fill="rgb(218,7,46)" rx="2" ry="2" />
<text  x="894.31" y="495.5" ></text>
</g>
<g >
<title>std::max&lt;int&gt; (8 samples, 0.03%)</title><rect x="994.9" y="741" width="0.3" height="15.0" fill="rgb(207,108,44)" rx="2" ry="2" />
<text  x="997.90" y="751.5" ></text>
</g>
<g >
<title>Game_Screen::GetTone (44 samples, 0.14%)</title><rect x="875.9" y="485" width="1.6" height="15.0" fill="rgb(213,177,35)" rx="2" ry="2" />
<text  x="878.87" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (7 samples, 0.02%)</title><rect x="77.9" y="981" width="0.3" height="15.0" fill="rgb(251,78,54)" rx="2" ry="2" />
<text  x="80.93" y="991.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (9 samples, 0.03%)</title><rect x="200.4" y="549" width="0.3" height="15.0" fill="rgb(210,205,42)" rx="2" ry="2" />
<text  x="203.40" y="559.5" ></text>
</g>
<g >
<title>std::forward&lt;int&amp;&gt; (6 samples, 0.02%)</title><rect x="93.5" y="981" width="0.2" height="15.0" fill="rgb(212,221,45)" rx="2" ry="2" />
<text  x="96.52" y="991.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (18 samples, 0.06%)</title><rect x="245.4" y="293" width="0.7" height="15.0" fill="rgb(239,58,2)" rx="2" ry="2" />
<text  x="248.42" y="303.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (10 samples, 0.03%)</title><rect x="1143.6" y="757" width="0.4" height="15.0" fill="rgb(223,162,46)" rx="2" ry="2" />
<text  x="1146.62" y="767.5" ></text>
</g>
<g >
<title>Scene::IsAsyncPending (3 samples, 0.01%)</title><rect x="1178.9" y="837" width="0.2" height="15.0" fill="rgb(231,76,13)" rx="2" ry="2" />
<text  x="1181.95" y="847.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (17 samples, 0.05%)</title><rect x="63.0" y="981" width="0.7" height="15.0" fill="rgb(224,180,35)" rx="2" ry="2" />
<text  x="66.03" y="991.5" ></text>
</g>
<g >
<title>Rect::Rect (10 samples, 0.03%)</title><rect x="877.6" y="485" width="0.3" height="15.0" fill="rgb(205,209,5)" rx="2" ry="2" />
<text  x="880.57" y="495.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_ptr (5 samples, 0.02%)</title><rect x="694.8" y="597" width="0.2" height="15.0" fill="rgb(215,165,54)" rx="2" ry="2" />
<text  x="697.78" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator bool (3 samples, 0.01%)</title><rect x="618.6" y="725" width="0.1" height="15.0" fill="rgb(219,126,12)" rx="2" ry="2" />
<text  x="621.57" y="735.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Impl::~_Impl (13 samples, 0.04%)</title><rect x="71.7" y="981" width="0.5" height="15.0" fill="rgb(225,128,36)" rx="2" ry="2" />
<text  x="74.72" y="991.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (4 samples, 0.01%)</title><rect x="140.3" y="757" width="0.1" height="15.0" fill="rgb(247,162,47)" rx="2" ry="2" />
<text  x="143.27" y="767.5" ></text>
</g>
<g >
<title>_XEventsQueued (5 samples, 0.02%)</title><rect x="1182.5" y="757" width="0.2" height="15.0" fill="rgb(248,13,30)" rx="2" ry="2" />
<text  x="1185.53" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_valptr (18 samples, 0.06%)</title><rect x="670.4" y="613" width="0.7" height="15.0" fill="rgb(233,48,36)" rx="2" ry="2" />
<text  x="673.42" y="623.5" ></text>
</g>
<g >
<title>Bitmap::Create (119 samples, 0.37%)</title><rect x="179.3" y="629" width="4.4" height="15.0" fill="rgb(217,25,10)" rx="2" ry="2" />
<text  x="182.26" y="639.5" ></text>
</g>
<g >
<title>Window_Selectable::Update (13 samples, 0.04%)</title><rect x="1179.9" y="837" width="0.5" height="15.0" fill="rgb(240,69,37)" rx="2" ry="2" />
<text  x="1182.87" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (15 samples, 0.05%)</title><rect x="496.0" y="693" width="0.6" height="15.0" fill="rgb(235,54,16)" rx="2" ry="2" />
<text  x="499.02" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::end (18 samples, 0.06%)</title><rect x="207.2" y="373" width="0.7" height="15.0" fill="rgb(243,10,24)" rx="2" ry="2" />
<text  x="210.24" y="383.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (91 samples, 0.29%)</title><rect x="235.2" y="389" width="3.4" height="15.0" fill="rgb(254,128,23)" rx="2" ry="2" />
<text  x="238.22" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Switch, std::allocator&lt;RPG::Switch&gt; &gt;::size (5 samples, 0.02%)</title><rect x="263.0" y="773" width="0.2" height="15.0" fill="rgb(247,171,40)" rx="2" ry="2" />
<text  x="266.01" y="783.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (5 samples, 0.02%)</title><rect x="982.6" y="661" width="0.2" height="15.0" fill="rgb(214,100,37)" rx="2" ry="2" />
<text  x="985.60" y="671.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (276 samples, 0.86%)</title><rect x="130.1" y="645" width="10.2" height="15.0" fill="rgb(223,122,6)" rx="2" ry="2" />
<text  x="133.07" y="655.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (6 samples, 0.02%)</title><rect x="1162.6" y="773" width="0.2" height="15.0" fill="rgb(232,71,53)" rx="2" ry="2" />
<text  x="1165.58" y="783.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (110 samples, 0.34%)</title><rect x="200.4" y="677" width="4.1" height="15.0" fill="rgb(233,217,5)" rx="2" ry="2" />
<text  x="203.40" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (20 samples, 0.06%)</title><rect x="112.7" y="981" width="0.7" height="15.0" fill="rgb(244,87,47)" rx="2" ry="2" />
<text  x="115.67" y="991.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char32_t&gt; &gt;::deallocate (5 samples, 0.02%)</title><rect x="985.1" y="645" width="0.2" height="15.0" fill="rgb(234,37,53)" rx="2" ry="2" />
<text  x="988.11" y="655.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (149 samples, 0.47%)</title><rect x="194.9" y="757" width="5.5" height="15.0" fill="rgb(249,156,30)" rx="2" ry="2" />
<text  x="197.90" y="767.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (208 samples, 0.65%)</title><rect x="183.7" y="885" width="7.6" height="15.0" fill="rgb(227,0,8)" rx="2" ry="2" />
<text  x="186.66" y="895.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_valptr (5 samples, 0.02%)</title><rect x="69.9" y="981" width="0.2" height="15.0" fill="rgb(246,184,53)" rx="2" ry="2" />
<text  x="72.94" y="991.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (19 samples, 0.06%)</title><rect x="975.7" y="725" width="0.7" height="15.0" fill="rgb(208,189,23)" rx="2" ry="2" />
<text  x="978.69" y="735.5" ></text>
</g>
<g >
<title>Player::Run (85 samples, 0.27%)</title><rect x="250.3" y="965" width="3.1" height="15.0" fill="rgb(211,67,42)" rx="2" ry="2" />
<text  x="253.29" y="975.5" ></text>
</g>
<g >
<title>std::allocator&lt;Bitmap&gt;::allocator (8 samples, 0.03%)</title><rect x="90.2" y="981" width="0.3" height="15.0" fill="rgb(226,68,32)" rx="2" ry="2" />
<text  x="93.23" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (1,554 samples, 4.87%)</title><rect x="354.1" y="773" width="57.5" height="15.0" fill="rgb(251,109,7)" rx="2" ry="2" />
<text  x="357.14" y="783.5" >std::v..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (12 samples, 0.04%)</title><rect x="191.3" y="517" width="0.5" height="15.0" fill="rgb(253,167,0)" rx="2" ry="2" />
<text  x="194.35" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (22 samples, 0.07%)</title><rect x="971.2" y="709" width="0.8" height="15.0" fill="rgb(207,3,26)" rx="2" ry="2" />
<text  x="974.21" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (19 samples, 0.06%)</title><rect x="934.4" y="485" width="0.7" height="15.0" fill="rgb(234,218,1)" rx="2" ry="2" />
<text  x="937.41" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (10 samples, 0.03%)</title><rect x="921.1" y="469" width="0.3" height="15.0" fill="rgb(209,209,19)" rx="2" ry="2" />
<text  x="924.06" y="479.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (776 samples, 2.43%)</title><rect x="221.2" y="645" width="28.7" height="15.0" fill="rgb(208,131,39)" rx="2" ry="2" />
<text  x="224.25" y="655.5" >st..</text>
</g>
<g >
<title>Scene::MainFunction (110 samples, 0.34%)</title><rect x="200.4" y="981" width="4.1" height="15.0" fill="rgb(230,12,31)" rx="2" ry="2" />
<text  x="203.40" y="991.5" ></text>
</g>
<g >
<title>handle_mm_fault (14 samples, 0.04%)</title><rect x="135.7" y="357" width="0.5" height="15.0" fill="rgb(234,116,20)" rx="2" ry="2" />
<text  x="138.65" y="367.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Impl::~_Impl (4 samples, 0.01%)</title><rect x="944.8" y="597" width="0.1" height="15.0" fill="rgb(206,87,30)" rx="2" ry="2" />
<text  x="947.79" y="607.5" ></text>
</g>
<g >
<title>Game_Map::Update (177 samples, 0.55%)</title><rect x="204.5" y="949" width="6.5" height="15.0" fill="rgb(248,143,8)" rx="2" ry="2" />
<text  x="207.47" y="959.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (42 samples, 0.13%)</title><rect x="893.6" y="437" width="1.5" height="15.0" fill="rgb(231,49,50)" rx="2" ry="2" />
<text  x="896.57" y="447.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (276 samples, 0.86%)</title><rect x="130.1" y="853" width="10.2" height="15.0" fill="rgb(210,103,29)" rx="2" ry="2" />
<text  x="133.07" y="863.5" ></text>
</g>
<g >
<title>min&lt;int&gt; (3 samples, 0.01%)</title><rect x="1168.9" y="773" width="0.1" height="15.0" fill="rgb(225,25,24)" rx="2" ry="2" />
<text  x="1171.93" y="783.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (122 samples, 0.38%)</title><rect x="211.0" y="661" width="4.5" height="15.0" fill="rgb(243,72,21)" rx="2" ry="2" />
<text  x="214.01" y="671.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Picture*, std::_Placeholder&lt;1&gt; &gt; (3 samples, 0.01%)</title><rect x="921.9" y="581" width="0.1" height="15.0" fill="rgb(209,81,5)" rx="2" ry="2" />
<text  x="924.91" y="591.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::_Placeholder&lt;1&gt; &gt;::_M_head (4 samples, 0.01%)</title><rect x="727.6" y="581" width="0.2" height="15.0" fill="rgb(208,83,29)" rx="2" ry="2" />
<text  x="730.63" y="591.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (604 samples, 1.89%)</title><rect x="161.3" y="901" width="22.4" height="15.0" fill="rgb(211,72,5)" rx="2" ry="2" />
<text  x="164.34" y="911.5" >G..</text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (276 samples, 0.86%)</title><rect x="130.1" y="885" width="10.2" height="15.0" fill="rgb(221,54,35)" rx="2" ry="2" />
<text  x="133.07" y="895.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::__allocated_ptr (3 samples, 0.01%)</title><rect x="77.5" y="981" width="0.1" height="15.0" fill="rgb(206,33,17)" rx="2" ry="2" />
<text  x="80.52" y="991.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (8 samples, 0.03%)</title><rect x="882.0" y="421" width="0.3" height="15.0" fill="rgb(218,61,8)" rx="2" ry="2" />
<text  x="884.96" y="431.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (208 samples, 0.65%)</title><rect x="183.7" y="837" width="7.6" height="15.0" fill="rgb(235,34,50)" rx="2" ry="2" />
<text  x="186.66" y="847.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (17 samples, 0.05%)</title><rect x="173.1" y="549" width="0.6" height="15.0" fill="rgb(242,182,42)" rx="2" ry="2" />
<text  x="176.09" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (25 samples, 0.08%)</title><rect x="816.0" y="437" width="1.0" height="15.0" fill="rgb(211,186,7)" rx="2" ry="2" />
<text  x="819.03" y="447.5" ></text>
</g>
<g >
<title>Game_Interpreter::ValueOrVariable (75 samples, 0.23%)</title><rect x="627.7" y="741" width="2.8" height="15.0" fill="rgb(214,5,38)" rx="2" ry="2" />
<text  x="630.70" y="751.5" ></text>
</g>
<g >
<title>Cache::Picture (9 samples, 0.03%)</title><rect x="200.4" y="565" width="0.3" height="15.0" fill="rgb(230,176,28)" rx="2" ry="2" />
<text  x="203.40" y="575.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (246 samples, 0.77%)</title><rect x="458.6" y="741" width="9.1" height="15.0" fill="rgb(248,229,54)" rx="2" ry="2" />
<text  x="461.62" y="751.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (30 samples, 0.09%)</title><rect x="707.3" y="565" width="1.1" height="15.0" fill="rgb(245,72,34)" rx="2" ry="2" />
<text  x="710.30" y="575.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="207.1" y="533" width="0.1" height="15.0" fill="rgb(213,114,16)" rx="2" ry="2" />
<text  x="210.13" y="543.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (110 samples, 0.34%)</title><rect x="200.4" y="693" width="4.1" height="15.0" fill="rgb(241,47,2)" rx="2" ry="2" />
<text  x="203.40" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (141 samples, 0.44%)</title><rect x="713.9" y="629" width="5.2" height="15.0" fill="rgb(238,170,24)" rx="2" ry="2" />
<text  x="716.88" y="639.5" ></text>
</g>
<g >
<title>Graphics::UpdateTitle (3 samples, 0.01%)</title><rect x="258.9" y="869" width="0.2" height="15.0" fill="rgb(244,164,6)" rx="2" ry="2" />
<text  x="261.94" y="879.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (16 samples, 0.05%)</title><rect x="128.4" y="997" width="0.6" height="15.0" fill="rgb(209,38,42)" rx="2" ry="2" />
<text  x="131.45" y="1007.5" ></text>
</g>
<g >
<title>__x64_sys_ppoll (117 samples, 0.37%)</title><rect x="18.1" y="965" width="4.3" height="15.0" fill="rgb(215,24,48)" rx="2" ry="2" />
<text  x="21.06" y="975.5" ></text>
</g>
<g >
<title>AsyncHandler::IsImportantFilePending (3 samples, 0.01%)</title><rect x="1178.9" y="821" width="0.2" height="15.0" fill="rgb(247,37,44)" rx="2" ry="2" />
<text  x="1181.95" y="831.5" ></text>
</g>
<g >
<title>std::allocator&lt;Bitmap&gt;::~allocator (7 samples, 0.02%)</title><rect x="90.5" y="981" width="0.3" height="15.0" fill="rgb(214,146,52)" rx="2" ry="2" />
<text  x="93.53" y="991.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (5 samples, 0.02%)</title><rect x="961.5" y="677" width="0.2" height="15.0" fill="rgb(213,86,51)" rx="2" ry="2" />
<text  x="964.53" y="687.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (58 samples, 0.18%)</title><rect x="167.4" y="469" width="2.2" height="15.0" fill="rgb(213,191,9)" rx="2" ry="2" />
<text  x="170.44" y="479.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (3 samples, 0.01%)</title><rect x="249.9" y="981" width="0.1" height="15.0" fill="rgb(237,135,38)" rx="2" ry="2" />
<text  x="252.92" y="991.5" ></text>
</g>
<g >
<title>Graphics::LocalDraw (22 samples, 0.07%)</title><rect x="257.8" y="853" width="0.8" height="15.0" fill="rgb(236,21,48)" rx="2" ry="2" />
<text  x="260.80" y="863.5" ></text>
</g>
<g >
<title>pixman_image_create_bits@plt (3 samples, 0.01%)</title><rect x="866.5" y="309" width="0.1" height="15.0" fill="rgb(238,197,11)" rx="2" ry="2" />
<text  x="869.48" y="319.5" ></text>
</g>
<g >
<title>Color::Color (6 samples, 0.02%)</title><rect x="1163.7" y="757" width="0.2" height="15.0" fill="rgb(224,182,27)" rx="2" ry="2" />
<text  x="1166.72" y="767.5" ></text>
</g>
<g >
<title>Game_Map::Refresh (401 samples, 1.26%)</title><rect x="1104.7" y="789" width="14.9" height="15.0" fill="rgb(230,9,47)" rx="2" ry="2" />
<text  x="1107.74" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (18 samples, 0.06%)</title><rect x="183.7" y="533" width="0.6" height="15.0" fill="rgb(225,13,14)" rx="2" ry="2" />
<text  x="186.66" y="543.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_M_head (4 samples, 0.01%)</title><rect x="811.2" y="357" width="0.1" height="15.0" fill="rgb(223,112,28)" rx="2" ry="2" />
<text  x="814.19" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (106 samples, 0.33%)</title><rect x="472.2" y="693" width="3.9" height="15.0" fill="rgb(251,204,3)" rx="2" ry="2" />
<text  x="475.18" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;Bitmap&gt;::_M_ptr (4 samples, 0.01%)</title><rect x="862.9" y="357" width="0.2" height="15.0" fill="rgb(239,75,27)" rx="2" ry="2" />
<text  x="865.93" y="367.5" ></text>
</g>
<g >
<title>__interceptor_free (4 samples, 0.01%)</title><rect x="58.6" y="981" width="0.2" height="15.0" fill="rgb(214,112,22)" rx="2" ry="2" />
<text  x="61.64" y="991.5" ></text>
</g>
<g >
<title>Opacity::IsSplit (5 samples, 0.02%)</title><rect x="828.0" y="453" width="0.2" height="15.0" fill="rgb(209,35,38)" rx="2" ry="2" />
<text  x="831.01" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (14 samples, 0.04%)</title><rect x="255.5" y="981" width="0.6" height="15.0" fill="rgb(247,8,37)" rx="2" ry="2" />
<text  x="258.54" y="991.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::get (3 samples, 0.01%)</title><rect x="1169.6" y="757" width="0.1" height="15.0" fill="rgb(233,3,2)" rx="2" ry="2" />
<text  x="1172.60" y="767.5" ></text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt;, 36ul&gt; (6 samples, 0.02%)</title><rect x="259.7" y="869" width="0.2" height="15.0" fill="rgb(223,53,28)" rx="2" ry="2" />
<text  x="262.68" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::size (28 samples, 0.09%)</title><rect x="481.3" y="709" width="1.1" height="15.0" fill="rgb(215,23,37)" rx="2" ry="2" />
<text  x="484.35" y="719.5" ></text>
</g>
<g >
<title>__x64_sys_read (24 samples, 0.08%)</title><rect x="22.4" y="965" width="0.9" height="15.0" fill="rgb(239,220,3)" rx="2" ry="2" />
<text  x="25.38" y="975.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (14 samples, 0.04%)</title><rect x="129.6" y="661" width="0.5" height="15.0" fill="rgb(208,31,40)" rx="2" ry="2" />
<text  x="132.56" y="671.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (85 samples, 0.27%)</title><rect x="250.3" y="821" width="3.1" height="15.0" fill="rgb(249,104,4)" rx="2" ry="2" />
<text  x="253.29" y="831.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="987.0" y="725" width="0.1" height="15.0" fill="rgb(252,79,19)" rx="2" ry="2" />
<text  x="990.03" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (5 samples, 0.02%)</title><rect x="764.8" y="421" width="0.2" height="15.0" fill="rgb(248,156,34)" rx="2" ry="2" />
<text  x="767.85" y="431.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (4 samples, 0.01%)</title><rect x="140.3" y="501" width="0.1" height="15.0" fill="rgb(249,135,24)" rx="2" ry="2" />
<text  x="143.27" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (3 samples, 0.01%)</title><rect x="463.1" y="725" width="0.1" height="15.0" fill="rgb(206,178,50)" rx="2" ry="2" />
<text  x="466.09" y="735.5" ></text>
</g>
<g >
<title>handle_mm_fault (9 samples, 0.03%)</title><rect x="137.1" y="405" width="0.3" height="15.0" fill="rgb(238,0,23)" rx="2" ry="2" />
<text  x="140.10" y="415.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (119 samples, 0.37%)</title><rect x="179.3" y="613" width="4.4" height="15.0" fill="rgb(240,2,53)" rx="2" ry="2" />
<text  x="182.26" y="623.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (91 samples, 0.29%)</title><rect x="235.2" y="453" width="3.4" height="15.0" fill="rgb(241,8,44)" rx="2" ry="2" />
<text  x="238.22" y="463.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::~function (229 samples, 0.72%)</title><rect x="925.7" y="549" width="8.4" height="15.0" fill="rgb(216,82,44)" rx="2" ry="2" />
<text  x="928.68" y="559.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (69 samples, 0.22%)</title><rect x="879.7" y="485" width="2.6" height="15.0" fill="rgb(250,146,40)" rx="2" ry="2" />
<text  x="882.71" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt; &gt; &gt;::size (9 samples, 0.03%)</title><rect x="982.9" y="725" width="0.3" height="15.0" fill="rgb(210,32,7)" rx="2" ry="2" />
<text  x="985.86" y="735.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (130 samples, 0.41%)</title><rect x="140.4" y="677" width="4.8" height="15.0" fill="rgb(216,81,24)" rx="2" ry="2" />
<text  x="143.42" y="687.5" ></text>
</g>
<g >
<title>Game_Player::UpdateSelfMovement (48 samples, 0.15%)</title><rect x="1147.1" y="805" width="1.7" height="15.0" fill="rgb(240,176,36)" rx="2" ry="2" />
<text  x="1150.06" y="815.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (66 samples, 0.21%)</title><rect x="817.0" y="453" width="2.4" height="15.0" fill="rgb(216,56,22)" rx="2" ry="2" />
<text  x="819.99" y="463.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (8 samples, 0.03%)</title><rect x="1181.1" y="757" width="0.3" height="15.0" fill="rgb(238,104,10)" rx="2" ry="2" />
<text  x="1184.06" y="767.5" ></text>
</g>
<g >
<title>Scene_Map::Update (177 samples, 0.55%)</title><rect x="204.5" y="981" width="6.5" height="15.0" fill="rgb(213,216,47)" rx="2" ry="2" />
<text  x="207.47" y="991.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (24 samples, 0.08%)</title><rect x="881.4" y="437" width="0.9" height="15.0" fill="rgb(216,201,16)" rx="2" ry="2" />
<text  x="884.37" y="447.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (4 samples, 0.01%)</title><rect x="140.3" y="869" width="0.1" height="15.0" fill="rgb(220,1,47)" rx="2" ry="2" />
<text  x="143.27" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (10 samples, 0.03%)</title><rect x="1050.2" y="757" width="0.4" height="15.0" fill="rgb(212,10,19)" rx="2" ry="2" />
<text  x="1053.19" y="767.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (8 samples, 0.03%)</title><rect x="200.0" y="309" width="0.3" height="15.0" fill="rgb(221,109,38)" rx="2" ry="2" />
<text  x="203.03" y="319.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (4 samples, 0.01%)</title><rect x="204.0" y="165" width="0.1" height="15.0" fill="rgb(206,225,53)" rx="2" ry="2" />
<text  x="206.99" y="175.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (130 samples, 0.41%)</title><rect x="140.4" y="821" width="4.8" height="15.0" fill="rgb(215,216,16)" rx="2" ry="2" />
<text  x="143.42" y="831.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandOptionGeneric (171 samples, 0.54%)</title><rect x="602.8" y="741" width="6.3" height="15.0" fill="rgb(237,216,23)" rx="2" ry="2" />
<text  x="605.79" y="751.5" ></text>
</g>
<g >
<title>Graphics::Update (35 samples, 0.11%)</title><rect x="257.8" y="885" width="1.3" height="15.0" fill="rgb(212,169,15)" rx="2" ry="2" />
<text  x="260.80" y="895.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (50 samples, 0.16%)</title><rect x="198.6" y="389" width="1.8" height="15.0" fill="rgb(208,146,53)" rx="2" ry="2" />
<text  x="201.55" y="399.5" ></text>
</g>
<g >
<title>std::__weak_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__weak_count (24 samples, 0.08%)</title><rect x="710.3" y="645" width="0.9" height="15.0" fill="rgb(223,85,9)" rx="2" ry="2" />
<text  x="713.34" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (3 samples, 0.01%)</title><rect x="154.9" y="533" width="0.1" height="15.0" fill="rgb(218,35,30)" rx="2" ry="2" />
<text  x="157.91" y="543.5" ></text>
</g>
<g >
<title>__GI___nanosleep (27 samples, 0.08%)</title><rect x="1181.4" y="805" width="1.0" height="15.0" fill="rgb(233,132,35)" rx="2" ry="2" />
<text  x="1184.39" y="815.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (3 samples, 0.01%)</title><rect x="1101.3" y="741" width="0.1" height="15.0" fill="rgb(232,188,7)" rx="2" ry="2" />
<text  x="1104.27" y="751.5" ></text>
</g>
<g >
<title>std::tuple&lt;FileRequestResult*&amp;&amp;&gt;::tuple&lt;FileRequestResult*, true&gt; (5 samples, 0.02%)</title><rect x="107.7" y="981" width="0.2" height="15.0" fill="rgb(251,108,35)" rx="2" ry="2" />
<text  x="110.71" y="991.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;Input::UiSource::Update()::{lambda(int)#1}&gt; &gt; (7 samples, 0.02%)</title><rect x="259.2" y="805" width="0.3" height="15.0" fill="rgb(250,137,37)" rx="2" ry="2" />
<text  x="262.20" y="815.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (776 samples, 2.43%)</title><rect x="221.2" y="693" width="28.7" height="15.0" fill="rgb(219,196,15)" rx="2" ry="2" />
<text  x="224.25" y="703.5" >Fi..</text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (89 samples, 0.28%)</title><rect x="553.7" y="725" width="3.3" height="15.0" fill="rgb(241,182,11)" rx="2" ry="2" />
<text  x="556.71" y="735.5" ></text>
</g>
<g >
<title>update_blocked_averages (3 samples, 0.01%)</title><rect x="22.0" y="837" width="0.1" height="15.0" fill="rgb(217,227,28)" rx="2" ry="2" />
<text  x="24.97" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::new_allocator (7 samples, 0.02%)</title><rect x="57.3" y="981" width="0.2" height="15.0" fill="rgb(254,13,24)" rx="2" ry="2" />
<text  x="60.27" y="991.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (4 samples, 0.01%)</title><rect x="140.3" y="965" width="0.1" height="15.0" fill="rgb(245,66,53)" rx="2" ry="2" />
<text  x="143.27" y="975.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (6 samples, 0.02%)</title><rect x="966.2" y="693" width="0.2" height="15.0" fill="rgb(226,57,29)" rx="2" ry="2" />
<text  x="969.15" y="703.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (604 samples, 1.89%)</title><rect x="161.3" y="965" width="22.4" height="15.0" fill="rgb(241,114,39)" rx="2" ry="2" />
<text  x="164.34" y="975.5" >G..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (31 samples, 0.10%)</title><rect x="134.2" y="421" width="1.2" height="15.0" fill="rgb(231,106,0)" rx="2" ry="2" />
<text  x="137.25" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (3 samples, 0.01%)</title><rect x="1047.9" y="741" width="0.1" height="15.0" fill="rgb(217,185,12)" rx="2" ry="2" />
<text  x="1050.94" y="751.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (179 samples, 0.56%)</title><rect x="145.2" y="789" width="6.6" height="15.0" fill="rgb(219,156,4)" rx="2" ry="2" />
<text  x="148.23" y="799.5" ></text>
</g>
<g >
<title>Game_Screen::GetFlashColor (31 samples, 0.10%)</title><rect x="1162.8" y="789" width="1.1" height="15.0" fill="rgb(249,174,40)" rx="2" ry="2" />
<text  x="1165.80" y="799.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (28 samples, 0.09%)</title><rect x="473.7" y="677" width="1.0" height="15.0" fill="rgb(228,186,54)" rx="2" ry="2" />
<text  x="476.70" y="687.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (38 samples, 0.12%)</title><rect x="32.4" y="981" width="1.4" height="15.0" fill="rgb(227,176,29)" rx="2" ry="2" />
<text  x="35.36" y="991.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::~__allocated_ptr (72 samples, 0.23%)</title><rect x="191.8" y="437" width="2.7" height="15.0" fill="rgb(253,222,23)" rx="2" ry="2" />
<text  x="194.79" y="447.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (7 samples, 0.02%)</title><rect x="719.3" y="661" width="0.2" height="15.0" fill="rgb(221,103,21)" rx="2" ry="2" />
<text  x="722.28" y="671.5" ></text>
</g>
<g >
<title>[unknown] (3,457 samples, 10.83%)</title><rect x="129.5" y="997" width="127.8" height="15.0" fill="rgb(252,61,43)" rx="2" ry="2" />
<text  x="132.52" y="1007.5" >[unknown]</text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (257 samples, 0.80%)</title><rect x="151.8" y="853" width="9.5" height="15.0" fill="rgb(214,120,16)" rx="2" ry="2" />
<text  x="154.84" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (14 samples, 0.04%)</title><rect x="604.4" y="693" width="0.5" height="15.0" fill="rgb(234,123,51)" rx="2" ry="2" />
<text  x="607.42" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (12 samples, 0.04%)</title><rect x="881.5" y="405" width="0.5" height="15.0" fill="rgb(251,34,21)" rx="2" ry="2" />
<text  x="884.52" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (10 samples, 0.03%)</title><rect x="198.1" y="357" width="0.4" height="15.0" fill="rgb(238,154,45)" rx="2" ry="2" />
<text  x="201.15" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare@plt (9 samples, 0.03%)</title><rect x="680.8" y="613" width="0.3" height="15.0" fill="rgb(247,105,9)" rx="2" ry="2" />
<text  x="683.77" y="623.5" ></text>
</g>
<g >
<title>do_page_fault (11 samples, 0.03%)</title><rect x="137.1" y="437" width="0.4" height="15.0" fill="rgb(251,158,2)" rx="2" ry="2" />
<text  x="140.06" y="447.5" ></text>
</g>
<g >
<title>Bitmap::GetWidth (15 samples, 0.05%)</title><rect x="870.2" y="485" width="0.6" height="15.0" fill="rgb(242,99,15)" rx="2" ry="2" />
<text  x="873.25" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char32_t const*, std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt; &gt;::operator* (3 samples, 0.01%)</title><rect x="985.6" y="709" width="0.1" height="15.0" fill="rgb(224,151,41)" rx="2" ry="2" />
<text  x="988.59" y="719.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Sprite*, false&gt;::_M_head (5 samples, 0.02%)</title><rect x="1174.7" y="693" width="0.2" height="15.0" fill="rgb(231,52,50)" rx="2" ry="2" />
<text  x="1177.74" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (131 samples, 0.41%)</title><rect x="989.4" y="693" width="4.9" height="15.0" fill="rgb(224,31,49)" rx="2" ry="2" />
<text  x="992.43" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (12 samples, 0.04%)</title><rect x="194.5" y="325" width="0.4" height="15.0" fill="rgb(223,42,39)" rx="2" ry="2" />
<text  x="197.45" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (22 samples, 0.07%)</title><rect x="110.4" y="981" width="0.8" height="15.0" fill="rgb(228,149,52)" rx="2" ry="2" />
<text  x="113.38" y="991.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (17 samples, 0.05%)</title><rect x="173.1" y="533" width="0.6" height="15.0" fill="rgb(216,48,3)" rx="2" ry="2" />
<text  x="176.09" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (7 samples, 0.02%)</title><rect x="820.4" y="469" width="0.2" height="15.0" fill="rgb(254,219,50)" rx="2" ry="2" />
<text  x="823.36" y="479.5" ></text>
</g>
<g >
<title>Game_Character::GetBushDepth (3 samples, 0.01%)</title><rect x="1179.2" y="821" width="0.1" height="15.0" fill="rgb(209,214,30)" rx="2" ry="2" />
<text  x="1182.17" y="831.5" ></text>
</g>
<g >
<title>std::swap&lt;Bitmap*&gt; (6 samples, 0.02%)</title><rect x="888.4" y="437" width="0.3" height="15.0" fill="rgb(207,56,10)" rx="2" ry="2" />
<text  x="891.43" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_M_lower_bound (538 samples, 1.68%)</title><rect x="787.4" y="453" width="19.8" height="15.0" fill="rgb(236,105,5)" rx="2" ry="2" />
<text  x="790.35" y="463.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.07%)</title><rect x="213.1" y="533" width="0.8" height="15.0" fill="rgb(212,69,38)" rx="2" ry="2" />
<text  x="216.08" y="543.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (14 samples, 0.04%)</title><rect x="129.6" y="709" width="0.5" height="15.0" fill="rgb(240,82,22)" rx="2" ry="2" />
<text  x="132.56" y="719.5" ></text>
</g>
<g >
<title>Sprite::SetOpacity (4 samples, 0.01%)</title><rect x="882.3" y="485" width="0.1" height="15.0" fill="rgb(227,121,36)" rx="2" ry="2" />
<text  x="885.26" y="495.5" ></text>
</g>
<g >
<title>std::stable_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, bool (*)(Drawable const*, Drawable const*)&gt; (3 samples, 0.01%)</title><rect x="258.5" y="837" width="0.1" height="15.0" fill="rgb(218,98,45)" rx="2" ry="2" />
<text  x="261.50" y="847.5" ></text>
</g>
<g >
<title>clear_page_erms (45 samples, 0.14%)</title><rect x="228.9" y="325" width="1.7" height="15.0" fill="rgb(234,200,4)" rx="2" ry="2" />
<text  x="231.93" y="335.5" ></text>
</g>
<g >
<title>page_fault (11 samples, 0.03%)</title><rect x="137.1" y="453" width="0.4" height="15.0" fill="rgb(217,70,11)" rx="2" ry="2" />
<text  x="140.06" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (9 samples, 0.03%)</title><rect x="608.7" y="709" width="0.3" height="15.0" fill="rgb(230,184,9)" rx="2" ry="2" />
<text  x="611.70" y="719.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandConditionalBranch (5 samples, 0.02%)</title><rect x="30.8" y="981" width="0.2" height="15.0" fill="rgb(232,117,3)" rx="2" ry="2" />
<text  x="33.81" y="991.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (29 samples, 0.09%)</title><rect x="137.6" y="453" width="1.1" height="15.0" fill="rgb(235,160,32)" rx="2" ry="2" />
<text  x="140.61" y="463.5" ></text>
</g>
<g >
<title>Sprite::SetFlashEffect (11 samples, 0.03%)</title><rect x="963.7" y="693" width="0.4" height="15.0" fill="rgb(215,49,38)" rx="2" ry="2" />
<text  x="966.68" y="703.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::deallocate (147 samples, 0.46%)</title><rect x="945.5" y="597" width="5.4" height="15.0" fill="rgb(223,111,26)" rx="2" ry="2" />
<text  x="948.49" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (4 samples, 0.01%)</title><rect x="960.7" y="677" width="0.1" height="15.0" fill="rgb(247,110,43)" rx="2" ry="2" />
<text  x="963.68" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (7 samples, 0.02%)</title><rect x="920.8" y="485" width="0.2" height="15.0" fill="rgb(221,34,46)" rx="2" ry="2" />
<text  x="923.77" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (113 samples, 0.35%)</title><rect x="656.2" y="661" width="4.2" height="15.0" fill="rgb(222,92,17)" rx="2" ry="2" />
<text  x="659.19" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (8 samples, 0.03%)</title><rect x="919.0" y="421" width="0.3" height="15.0" fill="rgb(236,39,30)" rx="2" ry="2" />
<text  x="921.96" y="431.5" ></text>
</g>
<g >
<title>Game_Picture::Show (208 samples, 0.65%)</title><rect x="183.7" y="789" width="7.6" height="15.0" fill="rgb(229,44,20)" rx="2" ry="2" />
<text  x="186.66" y="799.5" ></text>
</g>
<g >
<title>Scene::GetRequestedScene (4 samples, 0.01%)</title><rect x="40.9" y="981" width="0.2" height="15.0" fill="rgb(222,200,45)" rx="2" ry="2" />
<text  x="43.93" y="991.5" ></text>
</g>
<g >
<title>Sdl2Ui::UpdateDisplay (9 samples, 0.03%)</title><rect x="258.6" y="853" width="0.3" height="15.0" fill="rgb(246,192,40)" rx="2" ry="2" />
<text  x="261.61" y="863.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (101 samples, 0.32%)</title><rect x="200.7" y="373" width="3.8" height="15.0" fill="rgb(220,84,5)" rx="2" ry="2" />
<text  x="203.74" y="383.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (72 samples, 0.23%)</title><rect x="749.2" y="613" width="2.6" height="15.0" fill="rgb(246,213,31)" rx="2" ry="2" />
<text  x="752.18" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_key (4 samples, 0.01%)</title><rect x="807.2" y="453" width="0.2" height="15.0" fill="rgb(207,69,37)" rx="2" ry="2" />
<text  x="810.24" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::destroy&lt;Bitmap&gt; (101 samples, 0.32%)</title><rect x="200.7" y="453" width="3.8" height="15.0" fill="rgb(234,145,54)" rx="2" ry="2" />
<text  x="203.74" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base (8 samples, 0.03%)</title><rect x="770.3" y="437" width="0.3" height="15.0" fill="rgb(205,66,49)" rx="2" ry="2" />
<text  x="773.32" y="447.5" ></text>
</g>
<g >
<title>Cache::System (4 samples, 0.01%)</title><rect x="1179.7" y="773" width="0.2" height="15.0" fill="rgb(218,229,0)" rx="2" ry="2" />
<text  x="1182.73" y="783.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="986.6" y="629" width="0.1" height="15.0" fill="rgb(248,51,16)" rx="2" ry="2" />
<text  x="989.63" y="639.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt;::_M_head (6 samples, 0.02%)</title><rect x="1170.0" y="709" width="0.2" height="15.0" fill="rgb(212,153,15)" rx="2" ry="2" />
<text  x="1173.01" y="719.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (276 samples, 0.86%)</title><rect x="130.1" y="901" width="10.2" height="15.0" fill="rgb(247,7,42)" rx="2" ry="2" />
<text  x="133.07" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (121 samples, 0.38%)</title><rect x="463.2" y="725" width="4.5" height="15.0" fill="rgb(238,51,2)" rx="2" ry="2" />
<text  x="466.20" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (89 samples, 0.28%)</title><rect x="391.3" y="741" width="3.3" height="15.0" fill="rgb(212,36,27)" rx="2" ry="2" />
<text  x="394.32" y="751.5" ></text>
</g>
<g >
<title>Bitmap::Blit (8 samples, 0.03%)</title><rect x="257.9" y="773" width="0.3" height="15.0" fill="rgb(215,104,53)" rx="2" ry="2" />
<text  x="260.87" y="783.5" ></text>
</g>
<g >
<title>handle_mm_fault (4 samples, 0.01%)</title><rect x="136.6" y="389" width="0.2" height="15.0" fill="rgb(253,199,11)" rx="2" ry="2" />
<text  x="139.61" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.02%)</title><rect x="210.8" y="277" width="0.2" height="15.0" fill="rgb(222,50,14)" rx="2" ry="2" />
<text  x="213.75" y="287.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (12 samples, 0.04%)</title><rect x="191.3" y="501" width="0.5" height="15.0" fill="rgb(205,172,39)" rx="2" ry="2" />
<text  x="194.35" y="511.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (4 samples, 0.01%)</title><rect x="1142.6" y="805" width="0.1" height="15.0" fill="rgb(244,167,17)" rx="2" ry="2" />
<text  x="1145.58" y="815.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (14 samples, 0.04%)</title><rect x="129.6" y="869" width="0.5" height="15.0" fill="rgb(252,10,34)" rx="2" ry="2" />
<text  x="132.56" y="879.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (77 samples, 0.24%)</title><rect x="140.4" y="469" width="2.9" height="15.0" fill="rgb(214,150,21)" rx="2" ry="2" />
<text  x="143.42" y="479.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (604 samples, 1.89%)</title><rect x="161.3" y="789" width="22.4" height="15.0" fill="rgb(206,208,16)" rx="2" ry="2" />
<text  x="164.34" y="799.5" >s..</text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (96 samples, 0.30%)</title><rect x="191.3" y="581" width="3.6" height="15.0" fill="rgb(207,11,29)" rx="2" ry="2" />
<text  x="194.35" y="591.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (84 samples, 0.26%)</title><rect x="191.8" y="469" width="3.1" height="15.0" fill="rgb(242,32,12)" rx="2" ry="2" />
<text  x="194.79" y="479.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (776 samples, 2.43%)</title><rect x="221.2" y="773" width="28.7" height="15.0" fill="rgb(233,93,16)" rx="2" ry="2" />
<text  x="224.25" y="783.5" >Ga..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::_M_ptr (7 samples, 0.02%)</title><rect x="88.1" y="981" width="0.3" height="15.0" fill="rgb(218,121,8)" rx="2" ry="2" />
<text  x="91.13" y="991.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (4 samples, 0.01%)</title><rect x="80.5" y="981" width="0.2" height="15.0" fill="rgb(224,165,35)" rx="2" ry="2" />
<text  x="83.51" y="991.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.02%)</title><rect x="134.7" y="405" width="0.2" height="15.0" fill="rgb(205,86,4)" rx="2" ry="2" />
<text  x="137.66" y="415.5" ></text>
</g>
<g >
<title>arch_get_unmapped_area_topdown (4 samples, 0.01%)</title><rect x="135.1" y="293" width="0.1" height="15.0" fill="rgb(246,15,54)" rx="2" ry="2" />
<text  x="138.06" y="303.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.01%)</title><rect x="148.4" y="357" width="0.2" height="15.0" fill="rgb(228,120,45)" rx="2" ry="2" />
<text  x="151.44" y="367.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (130 samples, 0.41%)</title><rect x="140.4" y="613" width="4.8" height="15.0" fill="rgb(208,39,18)" rx="2" ry="2" />
<text  x="143.42" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::emplace_back&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (9 samples, 0.03%)</title><rect x="119.5" y="981" width="0.3" height="15.0" fill="rgb(209,26,38)" rx="2" ry="2" />
<text  x="122.47" y="991.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (6 samples, 0.02%)</title><rect x="1178.6" y="773" width="0.2" height="15.0" fill="rgb(224,147,33)" rx="2" ry="2" />
<text  x="1181.58" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (5 samples, 0.02%)</title><rect x="611.0" y="709" width="0.2" height="15.0" fill="rgb(216,99,11)" rx="2" ry="2" />
<text  x="614.03" y="719.5" ></text>
</g>
<g >
<title>Utils::DecodeUTF32 (40 samples, 0.13%)</title><rect x="984.1" y="725" width="1.5" height="15.0" fill="rgb(225,38,14)" rx="2" ry="2" />
<text  x="987.08" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*, std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt; &gt;::__normal_iterator (3 samples, 0.01%)</title><rect x="54.2" y="981" width="0.1" height="15.0" fill="rgb(213,103,0)" rx="2" ry="2" />
<text  x="57.20" y="991.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (273 samples, 0.86%)</title><rect x="941.2" y="645" width="10.1" height="15.0" fill="rgb(216,173,23)" rx="2" ry="2" />
<text  x="944.24" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (4 samples, 0.01%)</title><rect x="666.0" y="533" width="0.2" height="15.0" fill="rgb(229,228,26)" rx="2" ry="2" />
<text  x="669.02" y="543.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (45 samples, 0.14%)</title><rect x="213.9" y="565" width="1.6" height="15.0" fill="rgb(253,226,7)" rx="2" ry="2" />
<text  x="216.85" y="575.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (110 samples, 0.34%)</title><rect x="200.4" y="725" width="4.1" height="15.0" fill="rgb(221,134,18)" rx="2" ry="2" />
<text  x="203.40" y="735.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (54 samples, 0.17%)</title><rect x="795.3" y="373" width="2.0" height="15.0" fill="rgb(234,154,52)" rx="2" ry="2" />
<text  x="798.30" y="383.5" ></text>
</g>
<g >
<title>memcmp@plt (3 samples, 0.01%)</title><rect x="799.3" y="341" width="0.1" height="15.0" fill="rgb(234,45,18)" rx="2" ry="2" />
<text  x="802.33" y="351.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (62 samples, 0.19%)</title><rect x="161.6" y="517" width="2.3" height="15.0" fill="rgb(212,139,21)" rx="2" ry="2" />
<text  x="164.63" y="527.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (108 samples, 0.34%)</title><rect x="175.3" y="517" width="4.0" height="15.0" fill="rgb(217,63,51)" rx="2" ry="2" />
<text  x="178.27" y="527.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (149 samples, 0.47%)</title><rect x="194.9" y="597" width="5.5" height="15.0" fill="rgb(208,46,40)" rx="2" ry="2" />
<text  x="197.90" y="607.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (3 samples, 0.01%)</title><rect x="1101.3" y="725" width="0.1" height="15.0" fill="rgb(246,171,40)" rx="2" ry="2" />
<text  x="1104.27" y="735.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (257 samples, 0.80%)</title><rect x="151.8" y="741" width="9.5" height="15.0" fill="rgb(226,0,49)" rx="2" ry="2" />
<text  x="154.84" y="751.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (4 samples, 0.01%)</title><rect x="140.3" y="549" width="0.1" height="15.0" fill="rgb(247,18,33)" rx="2" ry="2" />
<text  x="143.27" y="559.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (96 samples, 0.30%)</title><rect x="191.3" y="725" width="3.6" height="15.0" fill="rgb(218,177,50)" rx="2" ry="2" />
<text  x="194.35" y="735.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (96 samples, 0.30%)</title><rect x="191.3" y="597" width="3.6" height="15.0" fill="rgb(222,211,11)" rx="2" ry="2" />
<text  x="194.35" y="607.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (4,602 samples, 14.41%)</title><rect x="753.3" y="661" width="170.1" height="15.0" fill="rgb(235,115,14)" rx="2" ry="2" />
<text  x="756.32" y="671.5" >std::function&lt;void (Fi..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, FileRequestResult*&amp;&amp;&gt;::_M_head (6 samples, 0.02%)</title><rect x="73.6" y="981" width="0.3" height="15.0" fill="rgb(205,0,4)" rx="2" ry="2" />
<text  x="76.64" y="991.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::get (22 samples, 0.07%)</title><rect x="886.7" y="453" width="0.8" height="15.0" fill="rgb(220,8,27)" rx="2" ry="2" />
<text  x="889.69" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (6 samples, 0.02%)</title><rect x="891.1" y="453" width="0.2" height="15.0" fill="rgb(241,171,52)" rx="2" ry="2" />
<text  x="894.09" y="463.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.01%)</title><rect x="137.5" y="437" width="0.1" height="15.0" fill="rgb(237,111,16)" rx="2" ry="2" />
<text  x="140.46" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (37 samples, 0.12%)</title><rect x="478.2" y="677" width="1.4" height="15.0" fill="rgb(247,174,42)" rx="2" ry="2" />
<text  x="481.25" y="687.5" ></text>
</g>
<g >
<title>memcpy (6 samples, 0.02%)</title><rect x="988.4" y="709" width="0.2" height="15.0" fill="rgb(222,87,19)" rx="2" ry="2" />
<text  x="991.40" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (4 samples, 0.01%)</title><rect x="874.1" y="437" width="0.1" height="15.0" fill="rgb(232,24,22)" rx="2" ry="2" />
<text  x="877.05" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, FileRequestResult*&amp;&amp;&gt;::_M_head (4 samples, 0.01%)</title><rect x="755.8" y="533" width="0.1" height="15.0" fill="rgb(244,137,13)" rx="2" ry="2" />
<text  x="758.76" y="543.5" ></text>
</g>
<g >
<title>Sprite::SetTone (13 samples, 0.04%)</title><rect x="1166.1" y="789" width="0.4" height="15.0" fill="rgb(236,122,21)" rx="2" ry="2" />
<text  x="1169.05" y="799.5" ></text>
</g>
<g >
<title>Game_Screen::GetFlashColor (25 samples, 0.08%)</title><rect x="961.7" y="709" width="0.9" height="15.0" fill="rgb(248,142,27)" rx="2" ry="2" />
<text  x="964.72" y="719.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.02%)</title><rect x="1179.9" y="645" width="0.3" height="15.0" fill="rgb(236,46,46)" rx="2" ry="2" />
<text  x="1182.95" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (7 samples, 0.02%)</title><rect x="741.3" y="645" width="0.3" height="15.0" fill="rgb(241,222,52)" rx="2" ry="2" />
<text  x="744.34" y="655.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.02%)</title><rect x="201.0" y="277" width="0.3" height="15.0" fill="rgb(230,7,2)" rx="2" ry="2" />
<text  x="203.99" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::size (5 samples, 0.02%)</title><rect x="604.9" y="709" width="0.2" height="15.0" fill="rgb(237,19,7)" rx="2" ry="2" />
<text  x="607.93" y="719.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::CommonEvent&gt; (4 samples, 0.01%)</title><rect x="265.4" y="789" width="0.2" height="15.0" fill="rgb(249,175,7)" rx="2" ry="2" />
<text  x="268.45" y="799.5" ></text>
</g>
<g >
<title>Bitmap::GetWidth (3 samples, 0.01%)</title><rect x="958.8" y="709" width="0.1" height="15.0" fill="rgb(206,115,10)" rx="2" ry="2" />
<text  x="961.80" y="719.5" ></text>
</g>
<g >
<title>Sprite::SetY (4 samples, 0.01%)</title><rect x="1167.3" y="789" width="0.1" height="15.0" fill="rgb(233,108,52)" rx="2" ry="2" />
<text  x="1170.27" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_key (57 samples, 0.18%)</title><rect x="788.2" y="437" width="2.1" height="15.0" fill="rgb(249,174,27)" rx="2" ry="2" />
<text  x="791.17" y="447.5" ></text>
</g>
<g >
<title>Drawable::GetPriorityForMapLayer (3 samples, 0.01%)</title><rect x="960.3" y="709" width="0.2" height="15.0" fill="rgb(225,45,23)" rx="2" ry="2" />
<text  x="963.35" y="719.5" ></text>
</g>
<g >
<title>operator delete (38 samples, 0.12%)</title><rect x="250.3" y="373" width="1.4" height="15.0" fill="rgb(225,16,11)" rx="2" ry="2" />
<text  x="253.29" y="383.5" ></text>
</g>
<g >
<title>page_fault (140 samples, 0.44%)</title><rect x="227.7" y="437" width="5.2" height="15.0" fill="rgb(222,133,36)" rx="2" ry="2" />
<text  x="230.68" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_getpid (4 samples, 0.01%)</title><rect x="17.9" y="965" width="0.2" height="15.0" fill="rgb(209,99,51)" rx="2" ry="2" />
<text  x="20.91" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (6 samples, 0.02%)</title><rect x="868.5" y="357" width="0.3" height="15.0" fill="rgb(253,143,50)" rx="2" ry="2" />
<text  x="871.55" y="367.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (130 samples, 0.41%)</title><rect x="140.4" y="949" width="4.8" height="15.0" fill="rgb(253,48,33)" rx="2" ry="2" />
<text  x="143.42" y="959.5" ></text>
</g>
<g >
<title>Game_Map::Update (149 samples, 0.47%)</title><rect x="194.9" y="933" width="5.5" height="15.0" fill="rgb(229,184,39)" rx="2" ry="2" />
<text  x="197.90" y="943.5" ></text>
</g>
<g >
<title>ksys_write (17 samples, 0.05%)</title><rect x="23.3" y="949" width="0.6" height="15.0" fill="rgb(232,22,19)" rx="2" ry="2" />
<text  x="26.27" y="959.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (91 samples, 0.29%)</title><rect x="169.7" y="501" width="3.4" height="15.0" fill="rgb(215,134,10)" rx="2" ry="2" />
<text  x="172.73" y="511.5" ></text>
</g>
<g >
<title>Tone::Tone (11 samples, 0.03%)</title><rect x="871.9" y="469" width="0.5" height="15.0" fill="rgb(225,57,34)" rx="2" ry="2" />
<text  x="874.95" y="479.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (68 samples, 0.21%)</title><rect x="733.7" y="581" width="2.5" height="15.0" fill="rgb(241,0,35)" rx="2" ry="2" />
<text  x="736.65" y="591.5" ></text>
</g>
<g >
<title>Bitmap::Create (130 samples, 0.41%)</title><rect x="140.4" y="661" width="4.8" height="15.0" fill="rgb(214,57,19)" rx="2" ry="2" />
<text  x="143.42" y="671.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.03%)</title><rect x="984.6" y="629" width="0.4" height="15.0" fill="rgb(250,47,43)" rx="2" ry="2" />
<text  x="987.63" y="639.5" ></text>
</g>
<g >
<title>Drawable::GetPriorityForMapLayer (3 samples, 0.01%)</title><rect x="1161.9" y="789" width="0.2" height="15.0" fill="rgb(229,163,11)" rx="2" ry="2" />
<text  x="1164.95" y="799.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (13 samples, 0.04%)</title><rect x="939.7" y="661" width="0.5" height="15.0" fill="rgb(209,64,22)" rx="2" ry="2" />
<text  x="942.73" y="671.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (130 samples, 0.41%)</title><rect x="140.4" y="773" width="4.8" height="15.0" fill="rgb(215,84,6)" rx="2" ry="2" />
<text  x="143.42" y="783.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (7 samples, 0.02%)</title><rect x="76.3" y="981" width="0.3" height="15.0" fill="rgb(212,44,29)" rx="2" ry="2" />
<text  x="79.30" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::operator++ (3 samples, 0.01%)</title><rect x="48.7" y="981" width="0.1" height="15.0" fill="rgb(218,194,29)" rx="2" ry="2" />
<text  x="51.69" y="991.5" ></text>
</g>
<g >
<title>std::move&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;&amp;&gt; (9 samples, 0.03%)</title><rect x="104.3" y="981" width="0.3" height="15.0" fill="rgb(223,58,37)" rx="2" ry="2" />
<text  x="107.28" y="991.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_manager (166 samples, 0.52%)</title><rect x="713.0" y="677" width="6.1" height="15.0" fill="rgb(210,160,52)" rx="2" ry="2" />
<text  x="716.00" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (9 samples, 0.03%)</title><rect x="1178.5" y="805" width="0.3" height="15.0" fill="rgb(205,151,54)" rx="2" ry="2" />
<text  x="1181.47" y="815.5" ></text>
</g>
<g >
<title>Bitmap::find_format (92 samples, 0.29%)</title><rect x="207.2" y="421" width="3.4" height="15.0" fill="rgb(223,224,47)" rx="2" ry="2" />
<text  x="210.24" y="431.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (8 samples, 0.03%)</title><rect x="161.3" y="533" width="0.3" height="15.0" fill="rgb(236,160,27)" rx="2" ry="2" />
<text  x="164.34" y="543.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (96 samples, 0.30%)</title><rect x="191.3" y="565" width="3.6" height="15.0" fill="rgb(234,71,2)" rx="2" ry="2" />
<text  x="194.35" y="575.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.02%)</title><rect x="799.0" y="341" width="0.1" height="15.0" fill="rgb(222,227,16)" rx="2" ry="2" />
<text  x="801.96" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::push_back (32 samples, 0.10%)</title><rect x="984.4" y="709" width="1.2" height="15.0" fill="rgb(226,95,36)" rx="2" ry="2" />
<text  x="987.37" y="719.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (6 samples, 0.02%)</title><rect x="1179.9" y="693" width="0.3" height="15.0" fill="rgb(229,120,43)" rx="2" ry="2" />
<text  x="1182.95" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*, std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt; &gt;::__normal_iterator (4 samples, 0.01%)</title><rect x="923.8" y="645" width="0.2" height="15.0" fill="rgb(217,48,9)" rx="2" ry="2" />
<text  x="926.84" y="655.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (4 samples, 0.01%)</title><rect x="140.3" y="917" width="0.1" height="15.0" fill="rgb(205,53,6)" rx="2" ry="2" />
<text  x="143.27" y="927.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (16 samples, 0.05%)</title><rect x="868.2" y="389" width="0.6" height="15.0" fill="rgb(228,39,27)" rx="2" ry="2" />
<text  x="871.18" y="399.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (247 samples, 0.77%)</title><rect x="164.0" y="581" width="9.1" height="15.0" fill="rgb(245,134,38)" rx="2" ry="2" />
<text  x="166.96" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (4 samples, 0.01%)</title><rect x="968.1" y="693" width="0.2" height="15.0" fill="rgb(213,153,50)" rx="2" ry="2" />
<text  x="971.11" y="703.5" ></text>
</g>
<g >
<title>Sprite::SetAngle (6 samples, 0.02%)</title><rect x="879.5" y="485" width="0.2" height="15.0" fill="rgb(213,199,34)" rx="2" ry="2" />
<text  x="882.49" y="495.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, true&gt; (4 samples, 0.01%)</title><rect x="107.9" y="981" width="0.2" height="15.0" fill="rgb(230,56,38)" rx="2" ry="2" />
<text  x="110.94" y="991.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (9 samples, 0.03%)</title><rect x="85.7" y="981" width="0.3" height="15.0" fill="rgb(254,6,29)" rx="2" ry="2" />
<text  x="88.69" y="991.5" ></text>
</g>
<g >
<title>std::allocator&lt;Bitmap&gt;::~allocator (5 samples, 0.02%)</title><rect x="903.6" y="357" width="0.2" height="15.0" fill="rgb(232,178,42)" rx="2" ry="2" />
<text  x="906.62" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (8 samples, 0.03%)</title><rect x="161.3" y="581" width="0.3" height="15.0" fill="rgb(207,222,35)" rx="2" ry="2" />
<text  x="164.34" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_M_begin (8 samples, 0.03%)</title><rect x="787.1" y="453" width="0.3" height="15.0" fill="rgb(218,33,6)" rx="2" ry="2" />
<text  x="790.06" y="463.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (83 samples, 0.26%)</title><rect x="733.2" y="597" width="3.1" height="15.0" fill="rgb(205,7,29)" rx="2" ry="2" />
<text  x="736.21" y="607.5" ></text>
</g>
<g >
<title>max&lt;int&gt; (7 samples, 0.02%)</title><rect x="959.9" y="677" width="0.3" height="15.0" fill="rgb(231,164,51)" rx="2" ry="2" />
<text  x="962.91" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::base (4 samples, 0.01%)</title><rect x="1146.8" y="805" width="0.1" height="15.0" fill="rgb(211,180,38)" rx="2" ry="2" />
<text  x="1149.80" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt;::__normal_iterator (5 samples, 0.02%)</title><rect x="48.8" y="981" width="0.2" height="15.0" fill="rgb(235,192,3)" rx="2" ry="2" />
<text  x="51.80" y="991.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.02%)</title><rect x="59.3" y="981" width="0.3" height="15.0" fill="rgb(222,150,40)" rx="2" ry="2" />
<text  x="62.30" y="991.5" ></text>
</g>
<g >
<title>Bitmap::~Bitmap (288 samples, 0.90%)</title><rect x="905.5" y="373" width="10.7" height="15.0" fill="rgb(229,103,50)" rx="2" ry="2" />
<text  x="908.54" y="383.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (85 samples, 0.27%)</title><rect x="799.5" y="389" width="3.1" height="15.0" fill="rgb(242,129,9)" rx="2" ry="2" />
<text  x="802.48" y="399.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (12 samples, 0.04%)</title><rect x="231.6" y="357" width="0.5" height="15.0" fill="rgb(232,71,18)" rx="2" ry="2" />
<text  x="234.63" y="367.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (4 samples, 0.01%)</title><rect x="140.3" y="853" width="0.1" height="15.0" fill="rgb(244,174,33)" rx="2" ry="2" />
<text  x="143.27" y="863.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (168 samples, 0.53%)</title><rect x="347.9" y="741" width="6.2" height="15.0" fill="rgb(213,37,32)" rx="2" ry="2" />
<text  x="350.86" y="751.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (17 samples, 0.05%)</title><rect x="219.6" y="981" width="0.6" height="15.0" fill="rgb(219,126,16)" rx="2" ry="2" />
<text  x="222.62" y="991.5" ></text>
</g>
<g >
<title>Tone::Tone (10 samples, 0.03%)</title><rect x="1164.6" y="773" width="0.4" height="15.0" fill="rgb(241,20,41)" rx="2" ry="2" />
<text  x="1167.61" y="783.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (15 samples, 0.05%)</title><rect x="213.3" y="517" width="0.6" height="15.0" fill="rgb(251,29,43)" rx="2" ry="2" />
<text  x="216.30" y="527.5" ></text>
</g>
<g >
<title>std::replace&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (3 samples, 0.01%)</title><rect x="106.7" y="981" width="0.1" height="15.0" fill="rgb(223,38,47)" rx="2" ry="2" />
<text  x="109.72" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (5 samples, 0.02%)</title><rect x="762.9" y="453" width="0.1" height="15.0" fill="rgb(249,100,35)" rx="2" ry="2" />
<text  x="765.85" y="463.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (391 samples, 1.22%)</title><rect x="901.9" y="437" width="14.5" height="15.0" fill="rgb(245,25,36)" rx="2" ry="2" />
<text  x="904.92" y="447.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="985.2" y="581" width="0.1" height="15.0" fill="rgb(243,108,29)" rx="2" ry="2" />
<text  x="988.18" y="591.5" ></text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;int&gt;, true&gt;::~_Sp_ebo_helper (3 samples, 0.01%)</title><rect x="944.9" y="597" width="0.1" height="15.0" fill="rgb(248,25,3)" rx="2" ry="2" />
<text  x="947.94" y="607.5" ></text>
</g>
<g >
<title>x86_pmu_enable (22 samples, 0.07%)</title><rect x="1181.5" y="629" width="0.8" height="15.0" fill="rgb(208,193,31)" rx="2" ry="2" />
<text  x="1184.54" y="639.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (4,487 samples, 14.05%)</title><rect x="755.9" y="597" width="165.9" height="15.0" fill="rgb(243,33,9)" rx="2" ry="2" />
<text  x="758.94" y="607.5" >std::__invoke&lt;std::_M..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::basic_string (4 samples, 0.01%)</title><rect x="986.0" y="709" width="0.1" height="15.0" fill="rgb(212,190,33)" rx="2" ry="2" />
<text  x="988.96" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (3 samples, 0.01%)</title><rect x="472.9" y="677" width="0.1" height="15.0" fill="rgb(236,218,16)" rx="2" ry="2" />
<text  x="475.89" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (36 samples, 0.11%)</title><rect x="991.9" y="661" width="1.4" height="15.0" fill="rgb(220,220,43)" rx="2" ry="2" />
<text  x="994.95" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::operator[] (46 samples, 0.14%)</title><rect x="1134.3" y="789" width="1.7" height="15.0" fill="rgb(212,154,38)" rx="2" ry="2" />
<text  x="1137.27" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (4 samples, 0.01%)</title><rect x="1022.5" y="741" width="0.1" height="15.0" fill="rgb(234,19,50)" rx="2" ry="2" />
<text  x="1025.47" y="751.5" ></text>
</g>
<g >
<title>__strlen_avx2 (5 samples, 0.02%)</title><rect x="200.6" y="501" width="0.1" height="15.0" fill="rgb(222,136,38)" rx="2" ry="2" />
<text  x="203.55" y="511.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (51 samples, 0.16%)</title><rect x="198.5" y="533" width="1.9" height="15.0" fill="rgb(212,58,54)" rx="2" ry="2" />
<text  x="201.52" y="543.5" ></text>
</g>
<g >
<title>operator delete@plt (10 samples, 0.03%)</title><rect x="745.9" y="645" width="0.3" height="15.0" fill="rgb(222,207,44)" rx="2" ry="2" />
<text  x="748.85" y="655.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (8 samples, 0.03%)</title><rect x="105.1" y="981" width="0.3" height="15.0" fill="rgb(216,226,11)" rx="2" ry="2" />
<text  x="108.13" y="991.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (40 samples, 0.13%)</title><rect x="744.3" y="597" width="1.5" height="15.0" fill="rgb(243,101,10)" rx="2" ry="2" />
<text  x="747.30" y="607.5" ></text>
</g>
<g >
<title>std::_Bit_iterator::operator* (15 samples, 0.05%)</title><rect x="263.7" y="757" width="0.6" height="15.0" fill="rgb(232,57,28)" rx="2" ry="2" />
<text  x="266.71" y="767.5" ></text>
</g>
<g >
<title>zap_page_range (7 samples, 0.02%)</title><rect x="210.8" y="245" width="0.2" height="15.0" fill="rgb(238,119,15)" rx="2" ry="2" />
<text  x="213.75" y="255.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (54 samples, 0.17%)</title><rect x="196.5" y="501" width="2.0" height="15.0" fill="rgb(220,15,38)" rx="2" ry="2" />
<text  x="199.52" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (3 samples, 0.01%)</title><rect x="615.6" y="693" width="0.1" height="15.0" fill="rgb(211,227,6)" rx="2" ry="2" />
<text  x="618.58" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (16 samples, 0.05%)</title><rect x="614.7" y="725" width="0.6" height="15.0" fill="rgb(206,187,16)" rx="2" ry="2" />
<text  x="617.73" y="735.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (298 samples, 0.93%)</title><rect x="858.5" y="437" width="11.0" height="15.0" fill="rgb(230,152,33)" rx="2" ry="2" />
<text  x="861.50" y="447.5" ></text>
</g>
<g >
<title>Rect::Rect (8 samples, 0.03%)</title><rect x="898.0" y="469" width="0.3" height="15.0" fill="rgb(210,83,21)" rx="2" ry="2" />
<text  x="901.00" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (3 samples, 0.01%)</title><rect x="999.2" y="741" width="0.1" height="15.0" fill="rgb(225,121,11)" rx="2" ry="2" />
<text  x="1002.23" y="751.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (42 samples, 0.13%)</title><rect x="801.1" y="357" width="1.5" height="15.0" fill="rgb(234,72,50)" rx="2" ry="2" />
<text  x="804.06" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_M_lower_bound (348 samples, 1.09%)</title><rect x="668.3" y="661" width="12.9" height="15.0" fill="rgb(209,161,15)" rx="2" ry="2" />
<text  x="671.32" y="671.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate (3 samples, 0.01%)</title><rect x="92.3" y="981" width="0.2" height="15.0" fill="rgb(229,181,30)" rx="2" ry="2" />
<text  x="95.34" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_construct_aux&lt;char32_t const*&gt; (4 samples, 0.01%)</title><rect x="986.0" y="677" width="0.1" height="15.0" fill="rgb(225,218,23)" rx="2" ry="2" />
<text  x="988.96" y="687.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;int&gt;::weak_ptr (9 samples, 0.03%)</title><rect x="709.6" y="597" width="0.4" height="15.0" fill="rgb(224,1,53)" rx="2" ry="2" />
<text  x="712.63" y="607.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Sprite*, false&gt;::_M_head (6 samples, 0.02%)</title><rect x="65.4" y="981" width="0.3" height="15.0" fill="rgb(241,134,8)" rx="2" ry="2" />
<text  x="68.44" y="991.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (177 samples, 0.55%)</title><rect x="204.5" y="613" width="6.5" height="15.0" fill="rgb(207,53,43)" rx="2" ry="2" />
<text  x="207.47" y="623.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_ptr (5 samples, 0.02%)</title><rect x="862.9" y="373" width="0.2" height="15.0" fill="rgb(234,48,37)" rx="2" ry="2" />
<text  x="865.89" y="383.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (11 samples, 0.03%)</title><rect x="183.0" y="437" width="0.4" height="15.0" fill="rgb(239,35,45)" rx="2" ry="2" />
<text  x="186.03" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars@plt (6 samples, 0.02%)</title><rect x="645.4" y="645" width="0.3" height="15.0" fill="rgb(240,73,18)" rx="2" ry="2" />
<text  x="648.44" y="655.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (13 samples, 0.04%)</title><rect x="645.7" y="645" width="0.4" height="15.0" fill="rgb(229,76,48)" rx="2" ry="2" />
<text  x="648.66" y="655.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (47 samples, 0.15%)</title><rect x="235.2" y="293" width="1.8" height="15.0" fill="rgb(247,14,10)" rx="2" ry="2" />
<text  x="238.22" y="303.5" ></text>
</g>
<g >
<title>Bitmap::GetOperator (5 samples, 0.02%)</title><rect x="26.5" y="981" width="0.2" height="15.0" fill="rgb(222,114,9)" rx="2" ry="2" />
<text  x="29.52" y="991.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator bool (4 samples, 0.01%)</title><rect x="84.2" y="981" width="0.2" height="15.0" fill="rgb(209,51,26)" rx="2" ry="2" />
<text  x="87.21" y="991.5" ></text>
</g>
<g >
<title>Cache::System (13 samples, 0.04%)</title><rect x="1179.9" y="773" width="0.5" height="15.0" fill="rgb(248,126,40)" rx="2" ry="2" />
<text  x="1182.87" y="783.5" ></text>
</g>
<g >
<title>Bitmap::GetOpacity (10 samples, 0.03%)</title><rect x="26.2" y="981" width="0.3" height="15.0" fill="rgb(248,109,28)" rx="2" ry="2" />
<text  x="29.15" y="991.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (7 samples, 0.02%)</title><rect x="210.8" y="261" width="0.2" height="15.0" fill="rgb(207,94,43)" rx="2" ry="2" />
<text  x="213.75" y="271.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (7 samples, 0.02%)</title><rect x="893.3" y="437" width="0.3" height="15.0" fill="rgb(251,209,5)" rx="2" ry="2" />
<text  x="896.31" y="447.5" ></text>
</g>
<g >
<title>pixman_region32_init (6 samples, 0.02%)</title><rect x="236.6" y="261" width="0.2" height="15.0" fill="rgb(241,158,40)" rx="2" ry="2" />
<text  x="239.62" y="271.5" ></text>
</g>
<g >
<title>Cache::System (13 samples, 0.04%)</title><rect x="1179.9" y="789" width="0.5" height="15.0" fill="rgb(212,100,17)" rx="2" ry="2" />
<text  x="1182.87" y="799.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__weak_ptr (7 samples, 0.02%)</title><rect x="709.7" y="581" width="0.3" height="15.0" fill="rgb(215,180,24)" rx="2" ry="2" />
<text  x="712.71" y="591.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (5 samples, 0.02%)</title><rect x="966.7" y="661" width="0.2" height="15.0" fill="rgb(207,220,2)" rx="2" ry="2" />
<text  x="969.74" y="671.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (149 samples, 0.47%)</title><rect x="194.9" y="805" width="5.5" height="15.0" fill="rgb(242,3,23)" rx="2" ry="2" />
<text  x="197.90" y="815.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (177 samples, 0.55%)</title><rect x="204.5" y="805" width="6.5" height="15.0" fill="rgb(229,229,5)" rx="2" ry="2" />
<text  x="207.47" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::destroy&lt;Bitmap&gt; (47 samples, 0.15%)</title><rect x="251.7" y="405" width="1.7" height="15.0" fill="rgb(215,45,45)" rx="2" ry="2" />
<text  x="254.70" y="415.5" ></text>
</g>
<g >
<title>std::move&lt;std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;&amp;&gt; (3 samples, 0.01%)</title><rect x="888.8" y="453" width="0.1" height="15.0" fill="rgb(232,41,14)" rx="2" ry="2" />
<text  x="891.76" y="463.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, true&gt; (119 samples, 0.37%)</title><rect x="815.3" y="485" width="4.4" height="15.0" fill="rgb(218,209,27)" rx="2" ry="2" />
<text  x="818.33" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.03%)</title><rect x="745.3" y="581" width="0.3" height="15.0" fill="rgb(208,147,12)" rx="2" ry="2" />
<text  x="748.26" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (16 samples, 0.05%)</title><rect x="1170.3" y="789" width="0.6" height="15.0" fill="rgb(211,119,7)" rx="2" ry="2" />
<text  x="1173.30" y="799.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (85 samples, 0.27%)</title><rect x="250.3" y="517" width="3.1" height="15.0" fill="rgb(229,184,23)" rx="2" ry="2" />
<text  x="253.29" y="527.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (8 samples, 0.03%)</title><rect x="138.4" y="421" width="0.3" height="15.0" fill="rgb(241,163,39)" rx="2" ry="2" />
<text  x="141.39" y="431.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (85 samples, 0.27%)</title><rect x="250.3" y="549" width="3.1" height="15.0" fill="rgb(225,170,9)" rx="2" ry="2" />
<text  x="253.29" y="559.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (149 samples, 0.47%)</title><rect x="194.9" y="693" width="5.5" height="15.0" fill="rgb(215,81,22)" rx="2" ry="2" />
<text  x="197.90" y="703.5" ></text>
</g>
<g >
<title>Bitmap::Init (47 samples, 0.15%)</title><rect x="235.2" y="325" width="1.8" height="15.0" fill="rgb(254,2,16)" rx="2" ry="2" />
<text  x="238.22" y="335.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (6 samples, 0.02%)</title><rect x="986.3" y="709" width="0.2" height="15.0" fill="rgb(252,30,13)" rx="2" ry="2" />
<text  x="989.26" y="719.5" ></text>
</g>
<g >
<title>Player::Update (25,030 samples, 78.39%)</title><rect x="257.7" y="901" width="925.1" height="15.0" fill="rgb(214,46,33)" rx="2" ry="2" />
<text  x="260.72" y="911.5" >Player::Update</text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::swap (14 samples, 0.04%)</title><rect x="888.1" y="453" width="0.6" height="15.0" fill="rgb(239,188,44)" rx="2" ry="2" />
<text  x="891.14" y="463.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;int&gt;::~weak_ptr (3 samples, 0.01%)</title><rect x="120.5" y="981" width="0.1" height="15.0" fill="rgb(254,172,23)" rx="2" ry="2" />
<text  x="123.50" y="991.5" ></text>
</g>
<g >
<title>page_fault (5 samples, 0.02%)</title><rect x="136.6" y="437" width="0.2" height="15.0" fill="rgb(231,147,24)" rx="2" ry="2" />
<text  x="139.58" y="447.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (3 samples, 0.01%)</title><rect x="413.2" y="773" width="0.1" height="15.0" fill="rgb(251,76,22)" rx="2" ry="2" />
<text  x="416.24" y="783.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (109 samples, 0.34%)</title><rect x="807.8" y="453" width="4.0" height="15.0" fill="rgb(208,161,14)" rx="2" ry="2" />
<text  x="810.79" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (9 samples, 0.03%)</title><rect x="891.3" y="469" width="0.3" height="15.0" fill="rgb(222,16,40)" rx="2" ry="2" />
<text  x="894.31" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (8 samples, 0.03%)</title><rect x="1178.5" y="789" width="0.3" height="15.0" fill="rgb(219,220,38)" rx="2" ry="2" />
<text  x="1181.51" y="799.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (4 samples, 0.01%)</title><rect x="920.8" y="437" width="0.2" height="15.0" fill="rgb(206,155,22)" rx="2" ry="2" />
<text  x="923.84" y="447.5" ></text>
</g>
<g >
<title>Bitmap::find_format (45 samples, 0.14%)</title><rect x="213.9" y="437" width="1.6" height="15.0" fill="rgb(246,183,39)" rx="2" ry="2" />
<text  x="216.85" y="447.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (257 samples, 0.80%)</title><rect x="151.8" y="821" width="9.5" height="15.0" fill="rgb(210,200,29)" rx="2" ry="2" />
<text  x="154.84" y="831.5" ></text>
</g>
<g >
<title>__strlen_avx2 (20 samples, 0.06%)</title><rect x="937.3" y="677" width="0.8" height="15.0" fill="rgb(230,152,19)" rx="2" ry="2" />
<text  x="940.33" y="687.5" ></text>
</g>
<g >
<title>do_syscall_64 (176 samples, 0.55%)</title><rect x="17.4" y="981" width="6.5" height="15.0" fill="rgb(219,11,6)" rx="2" ry="2" />
<text  x="20.43" y="991.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (4 samples, 0.01%)</title><rect x="920.8" y="453" width="0.2" height="15.0" fill="rgb(217,8,37)" rx="2" ry="2" />
<text  x="923.84" y="463.5" ></text>
</g>
<g >
<title>Input::UiSource::Update (15 samples, 0.05%)</title><rect x="259.1" y="869" width="0.5" height="15.0" fill="rgb(236,208,49)" rx="2" ry="2" />
<text  x="262.09" y="879.5" ></text>
</g>
<g >
<title>max&lt;int&gt; (3 samples, 0.01%)</title><rect x="877.3" y="453" width="0.1" height="15.0" fill="rgb(236,226,39)" rx="2" ry="2" />
<text  x="880.31" y="463.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (208 samples, 0.65%)</title><rect x="183.7" y="645" width="7.6" height="15.0" fill="rgb(245,179,48)" rx="2" ry="2" />
<text  x="186.66" y="655.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (208 samples, 0.65%)</title><rect x="183.7" y="581" width="7.6" height="15.0" fill="rgb(236,103,8)" rx="2" ry="2" />
<text  x="186.66" y="591.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (568 samples, 1.78%)</title><rect x="895.4" y="501" width="21.0" height="15.0" fill="rgb(239,5,7)" rx="2" ry="2" />
<text  x="898.38" y="511.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (3 samples, 0.01%)</title><rect x="154.9" y="565" width="0.1" height="15.0" fill="rgb(245,133,2)" rx="2" ry="2" />
<text  x="157.91" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (61 samples, 0.19%)</title><rect x="201.5" y="277" width="2.3" height="15.0" fill="rgb(217,137,21)" rx="2" ry="2" />
<text  x="204.51" y="287.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (4 samples, 0.01%)</title><rect x="891.2" y="437" width="0.1" height="15.0" fill="rgb(248,78,40)" rx="2" ry="2" />
<text  x="894.17" y="447.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;int, std::allocator&lt;int&gt;, int&gt; (323 samples, 1.01%)</title><rect x="692.8" y="661" width="12.0" height="15.0" fill="rgb(213,214,38)" rx="2" ry="2" />
<text  x="695.82" y="671.5" ></text>
</g>
<g >
<title>SDL_WaitEventTimeout_REAL (24 samples, 0.08%)</title><rect x="1180.5" y="869" width="0.9" height="15.0" fill="rgb(219,180,19)" rx="2" ry="2" />
<text  x="1183.47" y="879.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (18 samples, 0.06%)</title><rect x="806.4" y="405" width="0.7" height="15.0" fill="rgb(230,157,25)" rx="2" ry="2" />
<text  x="809.39" y="415.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*&gt; (272 samples, 0.85%)</title><rect x="925.1" y="613" width="10.0" height="15.0" fill="rgb(218,139,31)" rx="2" ry="2" />
<text  x="928.06" y="623.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_memcmp@plt (5 samples, 0.02%)</title><rect x="172.9" y="485" width="0.2" height="15.0" fill="rgb(223,97,16)" rx="2" ry="2" />
<text  x="175.91" y="495.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (86 samples, 0.27%)</title><rect x="151.8" y="613" width="3.2" height="15.0" fill="rgb(237,103,5)" rx="2" ry="2" />
<text  x="154.84" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt;::__normal_iterator (44 samples, 0.14%)</title><rect x="1117.9" y="757" width="1.7" height="15.0" fill="rgb(230,165,28)" rx="2" ry="2" />
<text  x="1120.93" y="767.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (8 samples, 0.03%)</title><rect x="1173.3" y="741" width="0.3" height="15.0" fill="rgb(229,36,19)" rx="2" ry="2" />
<text  x="1176.30" y="751.5" ></text>
</g>
<g >
<title>Player::IsRPG2k (5 samples, 0.02%)</title><rect x="40.3" y="981" width="0.2" height="15.0" fill="rgb(251,141,12)" rx="2" ry="2" />
<text  x="43.30" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::destroy&lt;Bitmap&gt; (12 samples, 0.04%)</title><rect x="194.5" y="421" width="0.4" height="15.0" fill="rgb(228,190,6)" rx="2" ry="2" />
<text  x="197.45" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (148 samples, 0.46%)</title><rect x="1027.9" y="725" width="5.5" height="15.0" fill="rgb(223,129,15)" rx="2" ry="2" />
<text  x="1030.91" y="735.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (17 samples, 0.05%)</title><rect x="811.8" y="485" width="0.6" height="15.0" fill="rgb(243,192,27)" rx="2" ry="2" />
<text  x="814.82" y="495.5" ></text>
</g>
<g >
<title>Cache::System (6 samples, 0.02%)</title><rect x="1179.5" y="789" width="0.2" height="15.0" fill="rgb(232,32,35)" rx="2" ry="2" />
<text  x="1182.50" y="799.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.02%)</title><rect x="155.3" y="533" width="0.2" height="15.0" fill="rgb(239,89,54)" rx="2" ry="2" />
<text  x="158.28" y="543.5" ></text>
</g>
<g >
<title>Player::MainLoop (25,035 samples, 78.41%)</title><rect x="257.6" y="933" width="925.3" height="15.0" fill="rgb(230,122,15)" rx="2" ry="2" />
<text  x="260.65" y="943.5" >Player::MainLoop</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (4 samples, 0.01%)</title><rect x="257.4" y="997" width="0.1" height="15.0" fill="rgb(209,125,1)" rx="2" ry="2" />
<text  x="260.39" y="1007.5" ></text>
</g>
<g >
<title>Bitmap::GetOperator (7 samples, 0.02%)</title><rect x="827.7" y="469" width="0.3" height="15.0" fill="rgb(231,159,11)" rx="2" ry="2" />
<text  x="830.71" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (52 samples, 0.16%)</title><rect x="1014.1" y="709" width="1.9" height="15.0" fill="rgb(222,94,52)" rx="2" ry="2" />
<text  x="1017.08" y="719.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingBackgroundExecution (4 samples, 0.01%)</title><rect x="30.6" y="981" width="0.1" height="15.0" fill="rgb(225,206,18)" rx="2" ry="2" />
<text  x="33.59" y="991.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~tuple (21 samples, 0.07%)</title><rect x="213.1" y="597" width="0.8" height="15.0" fill="rgb(249,37,46)" rx="2" ry="2" />
<text  x="216.08" y="607.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (3 samples, 0.01%)</title><rect x="880.9" y="469" width="0.1" height="15.0" fill="rgb(211,4,48)" rx="2" ry="2" />
<text  x="883.85" y="479.5" ></text>
</g>
<g >
<title>std::__weak_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__weak_count (5 samples, 0.02%)</title><rect x="692.0" y="613" width="0.2" height="15.0" fill="rgb(217,64,49)" rx="2" ry="2" />
<text  x="695.04" y="623.5" ></text>
</g>
<g >
<title>Bitmap::height (3 samples, 0.01%)</title><rect x="880.2" y="453" width="0.1" height="15.0" fill="rgb(207,22,30)" rx="2" ry="2" />
<text  x="883.23" y="463.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (4 samples, 0.01%)</title><rect x="666.0" y="437" width="0.2" height="15.0" fill="rgb(228,137,48)" rx="2" ry="2" />
<text  x="669.02" y="447.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (110 samples, 0.34%)</title><rect x="200.4" y="709" width="4.1" height="15.0" fill="rgb(213,116,45)" rx="2" ry="2" />
<text  x="203.40" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (10 samples, 0.03%)</title><rect x="57.7" y="981" width="0.4" height="15.0" fill="rgb(249,144,8)" rx="2" ry="2" />
<text  x="60.75" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (3 samples, 0.01%)</title><rect x="783.7" y="405" width="0.1" height="15.0" fill="rgb(222,177,9)" rx="2" ry="2" />
<text  x="786.73" y="415.5" ></text>
</g>
<g >
<title>free_unref_page_commit (23 samples, 0.07%)</title><rect x="202.0" y="69" width="0.9" height="15.0" fill="rgb(240,59,23)" rx="2" ry="2" />
<text  x="205.03" y="79.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length@plt (3 samples, 0.01%)</title><rect x="645.3" y="645" width="0.1" height="15.0" fill="rgb(238,175,44)" rx="2" ry="2" />
<text  x="648.33" y="655.5" ></text>
</g>
<g >
<title>operator delete (146 samples, 0.46%)</title><rect x="155.9" y="549" width="5.4" height="15.0" fill="rgb(243,6,51)" rx="2" ry="2" />
<text  x="158.94" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.03%)</title><rect x="210.6" y="341" width="0.4" height="15.0" fill="rgb(233,86,31)" rx="2" ry="2" />
<text  x="213.64" y="351.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_ptr (21 samples, 0.07%)</title><rect x="860.5" y="389" width="0.8" height="15.0" fill="rgb(245,148,9)" rx="2" ry="2" />
<text  x="863.49" y="399.5" ></text>
</g>
<g >
<title>Bitmap::GetRect (20 samples, 0.06%)</title><rect x="880.0" y="469" width="0.7" height="15.0" fill="rgb(228,28,27)" rx="2" ry="2" />
<text  x="883.00" y="479.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (85 samples, 0.27%)</title><rect x="250.3" y="613" width="3.1" height="15.0" fill="rgb(223,8,17)" rx="2" ry="2" />
<text  x="253.29" y="623.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (179 samples, 0.56%)</title><rect x="145.2" y="773" width="6.6" height="15.0" fill="rgb(230,60,4)" rx="2" ry="2" />
<text  x="148.23" y="783.5" ></text>
</g>
<g >
<title>strlen@plt (3 samples, 0.01%)</title><rect x="938.4" y="693" width="0.1" height="15.0" fill="rgb(205,4,29)" rx="2" ry="2" />
<text  x="941.40" y="703.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (10 samples, 0.03%)</title><rect x="210.6" y="437" width="0.4" height="15.0" fill="rgb(244,80,48)" rx="2" ry="2" />
<text  x="213.64" y="447.5" ></text>
</g>
<g >
<title>Bitmap::GetWidth (3 samples, 0.01%)</title><rect x="26.9" y="981" width="0.1" height="15.0" fill="rgb(223,2,26)" rx="2" ry="2" />
<text  x="29.85" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (26 samples, 0.08%)</title><rect x="477.3" y="677" width="0.9" height="15.0" fill="rgb(223,178,46)" rx="2" ry="2" />
<text  x="480.28" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::end (7 samples, 0.02%)</title><rect x="777.7" y="453" width="0.2" height="15.0" fill="rgb(244,53,26)" rx="2" ry="2" />
<text  x="780.67" y="463.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.03%)</title><rect x="751.2" y="565" width="0.4" height="15.0" fill="rgb(235,101,32)" rx="2" ry="2" />
<text  x="754.25" y="575.5" ></text>
</g>
<g >
<title>Bitmap::Create (92 samples, 0.29%)</title><rect x="207.2" y="581" width="3.4" height="15.0" fill="rgb(254,126,19)" rx="2" ry="2" />
<text  x="210.24" y="591.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::_Bind&lt;Game_Picture*&amp;, std::_Placeholder&lt;1&gt; const&amp;&gt; (30 samples, 0.09%)</title><rect x="711.7" y="677" width="1.1" height="15.0" fill="rgb(237,169,14)" rx="2" ry="2" />
<text  x="714.70" y="687.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Sprite*, false&gt;::_M_head (6 samples, 0.02%)</title><rect x="894.9" y="389" width="0.2" height="15.0" fill="rgb(254,171,11)" rx="2" ry="2" />
<text  x="897.90" y="399.5" ></text>
</g>
<g >
<title>__sched_text_start (24 samples, 0.08%)</title><rect x="1181.5" y="693" width="0.8" height="15.0" fill="rgb(219,106,45)" rx="2" ry="2" />
<text  x="1184.46" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (9 samples, 0.03%)</title><rect x="200.4" y="533" width="0.3" height="15.0" fill="rgb(212,143,43)" rx="2" ry="2" />
<text  x="203.40" y="543.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::_Placeholder&lt;1&gt;, true&gt;::_M_head (4 samples, 0.01%)</title><rect x="727.6" y="565" width="0.2" height="15.0" fill="rgb(248,16,12)" rx="2" ry="2" />
<text  x="730.63" y="575.5" ></text>
</g>
<g >
<title>Game_Map::GetNeedRefresh (17 samples, 0.05%)</title><rect x="1104.1" y="789" width="0.6" height="15.0" fill="rgb(228,98,27)" rx="2" ry="2" />
<text  x="1107.11" y="799.5" ></text>
</g>
<g >
<title>vfs_write (14 samples, 0.04%)</title><rect x="23.4" y="933" width="0.5" height="15.0" fill="rgb(243,49,49)" rx="2" ry="2" />
<text  x="26.38" y="943.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (45 samples, 0.14%)</title><rect x="213.9" y="469" width="1.6" height="15.0" fill="rgb(209,145,45)" rx="2" ry="2" />
<text  x="216.85" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (146 samples, 0.46%)</title><rect x="155.9" y="581" width="5.4" height="15.0" fill="rgb(227,50,12)" rx="2" ry="2" />
<text  x="158.94" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (25 samples, 0.08%)</title><rect x="1181.4" y="773" width="0.9" height="15.0" fill="rgb(208,177,48)" rx="2" ry="2" />
<text  x="1184.43" y="783.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (27 samples, 0.08%)</title><rect x="1183.5" y="981" width="1.0" height="15.0" fill="rgb(232,40,37)" rx="2" ry="2" />
<text  x="1186.46" y="991.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (9 samples, 0.03%)</title><rect x="105.5" y="981" width="0.3" height="15.0" fill="rgb(248,160,41)" rx="2" ry="2" />
<text  x="108.46" y="991.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (50 samples, 0.16%)</title><rect x="198.6" y="357" width="1.8" height="15.0" fill="rgb(209,27,48)" rx="2" ry="2" />
<text  x="201.55" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::clear (303 samples, 0.95%)</title><rect x="924.0" y="661" width="11.2" height="15.0" fill="rgb(224,120,53)" rx="2" ry="2" />
<text  x="926.98" y="671.5" ></text>
</g>
<g >
<title>Color::Color (23 samples, 0.07%)</title><rect x="875.0" y="453" width="0.9" height="15.0" fill="rgb(224,148,34)" rx="2" ry="2" />
<text  x="878.02" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (3 samples, 0.01%)</title><rect x="986.6" y="693" width="0.1" height="15.0" fill="rgb(245,161,39)" rx="2" ry="2" />
<text  x="989.63" y="703.5" ></text>
</g>
<g >
<title>std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (3 samples, 0.01%)</title><rect x="103.8" y="981" width="0.1" height="15.0" fill="rgb(230,103,22)" rx="2" ry="2" />
<text  x="106.76" y="991.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (130 samples, 0.41%)</title><rect x="721.0" y="629" width="4.8" height="15.0" fill="rgb(252,57,21)" rx="2" ry="2" />
<text  x="723.98" y="639.5" ></text>
</g>
<g >
<title>Player::GetTicks (7 samples, 0.02%)</title><rect x="784.1" y="485" width="0.2" height="15.0" fill="rgb(223,217,51)" rx="2" ry="2" />
<text  x="787.06" y="495.5" ></text>
</g>
<g >
<title>Tone::Tone (9 samples, 0.03%)</title><rect x="965.6" y="709" width="0.3" height="15.0" fill="rgb(246,173,28)" rx="2" ry="2" />
<text  x="968.60" y="719.5" ></text>
</g>
<g >
<title>__wake_up_common (10 samples, 0.03%)</title><rect x="23.4" y="869" width="0.3" height="15.0" fill="rgb(248,2,51)" rx="2" ry="2" />
<text  x="26.38" y="879.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::~__allocated_ptr (38 samples, 0.12%)</title><rect x="250.3" y="421" width="1.4" height="15.0" fill="rgb(250,23,20)" rx="2" ry="2" />
<text  x="253.29" y="431.5" ></text>
</g>
<g >
<title>Bitmap::width (12 samples, 0.04%)</title><rect x="870.4" y="469" width="0.4" height="15.0" fill="rgb(219,26,27)" rx="2" ry="2" />
<text  x="873.36" y="479.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (4 samples, 0.01%)</title><rect x="1178.2" y="757" width="0.2" height="15.0" fill="rgb(250,26,31)" rx="2" ry="2" />
<text  x="1181.25" y="767.5" ></text>
</g>
<g >
<title>std::any_of&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, Input::UiSource::Update()::{lambda(int)#1}&gt; (10 samples, 0.03%)</title><rect x="259.1" y="853" width="0.4" height="15.0" fill="rgb(220,80,54)" rx="2" ry="2" />
<text  x="262.09" y="863.5" ></text>
</g>
<g >
<title>Graphics::UpdateZCallback (3 samples, 0.01%)</title><rect x="884.4" y="469" width="0.1" height="15.0" fill="rgb(226,175,49)" rx="2" ry="2" />
<text  x="887.37" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator++ (5 samples, 0.02%)</title><rect x="762.7" y="453" width="0.2" height="15.0" fill="rgb(215,139,27)" rx="2" ry="2" />
<text  x="765.67" y="463.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_destroy (214 samples, 0.67%)</title><rect x="728.8" y="645" width="7.9" height="15.0" fill="rgb(228,220,44)" rx="2" ry="2" />
<text  x="731.81" y="655.5" ></text>
</g>
<g >
<title>std::replace&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (316 samples, 0.99%)</title><rect x="765.5" y="453" width="11.7" height="15.0" fill="rgb(236,168,18)" rx="2" ry="2" />
<text  x="768.55" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt;::_Iter_equals_val (6 samples, 0.02%)</title><rect x="54.5" y="981" width="0.3" height="15.0" fill="rgb(234,78,35)" rx="2" ry="2" />
<text  x="57.53" y="991.5" ></text>
</g>
<g >
<title>Opacity::IsOpaque (6 samples, 0.02%)</title><rect x="828.0" y="469" width="0.2" height="15.0" fill="rgb(239,117,17)" rx="2" ry="2" />
<text  x="830.97" y="479.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (67 samples, 0.21%)</title><rect x="149.4" y="453" width="2.4" height="15.0" fill="rgb(237,207,26)" rx="2" ry="2" />
<text  x="152.36" y="463.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_M_head (3 samples, 0.01%)</title><rect x="66.0" y="981" width="0.1" height="15.0" fill="rgb(230,150,40)" rx="2" ry="2" />
<text  x="68.95" y="991.5" ></text>
</g>
<g >
<title>Game_Picture::Show (177 samples, 0.55%)</title><rect x="204.5" y="837" width="6.5" height="15.0" fill="rgb(229,160,29)" rx="2" ry="2" />
<text  x="207.47" y="847.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (11 samples, 0.03%)</title><rect x="135.0" y="341" width="0.4" height="15.0" fill="rgb(220,5,32)" rx="2" ry="2" />
<text  x="137.99" y="351.5" ></text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;Bitmap&gt;, true&gt;::_S_get (5 samples, 0.02%)</title><rect x="905.0" y="389" width="0.1" height="15.0" fill="rgb(222,149,20)" rx="2" ry="2" />
<text  x="907.95" y="399.5" ></text>
</g>
<g >
<title>schedule (24 samples, 0.08%)</title><rect x="1181.5" y="709" width="0.8" height="15.0" fill="rgb(247,49,25)" rx="2" ry="2" />
<text  x="1184.46" y="719.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (50 samples, 0.16%)</title><rect x="198.6" y="373" width="1.8" height="15.0" fill="rgb(232,173,51)" rx="2" ry="2" />
<text  x="201.55" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator@plt (3 samples, 0.01%)</title><rect x="786.2" y="485" width="0.1" height="15.0" fill="rgb(243,187,33)" rx="2" ry="2" />
<text  x="789.21" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (146 samples, 0.46%)</title><rect x="639.0" y="661" width="5.4" height="15.0" fill="rgb(205,183,36)" rx="2" ry="2" />
<text  x="642.05" y="671.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (3 samples, 0.01%)</title><rect x="1182.8" y="869" width="0.1" height="15.0" fill="rgb(218,75,53)" rx="2" ry="2" />
<text  x="1185.76" y="879.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (20 samples, 0.06%)</title><rect x="633.6" y="725" width="0.8" height="15.0" fill="rgb(206,203,44)" rx="2" ry="2" />
<text  x="636.65" y="735.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (3 samples, 0.01%)</title><rect x="972.6" y="709" width="0.1" height="15.0" fill="rgb(210,20,47)" rx="2" ry="2" />
<text  x="975.62" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (15 samples, 0.05%)</title><rect x="646.2" y="661" width="0.6" height="15.0" fill="rgb(242,47,39)" rx="2" ry="2" />
<text  x="649.21" y="671.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (257 samples, 0.80%)</title><rect x="151.8" y="917" width="9.5" height="15.0" fill="rgb(211,195,13)" rx="2" ry="2" />
<text  x="154.84" y="927.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (7 samples, 0.02%)</title><rect x="249.7" y="309" width="0.2" height="15.0" fill="rgb(249,220,38)" rx="2" ry="2" />
<text  x="252.67" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char32_t const*, std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt; &gt; (4 samples, 0.01%)</title><rect x="985.7" y="709" width="0.1" height="15.0" fill="rgb(227,125,0)" rx="2" ry="2" />
<text  x="988.70" y="719.5" ></text>
</g>
<g >
<title>operator new (82 samples, 0.26%)</title><rect x="748.8" y="629" width="3.0" height="15.0" fill="rgb(250,192,15)" rx="2" ry="2" />
<text  x="751.81" y="639.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (149 samples, 0.47%)</title><rect x="194.9" y="837" width="5.5" height="15.0" fill="rgb(236,14,42)" rx="2" ry="2" />
<text  x="197.90" y="847.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (130 samples, 0.41%)</title><rect x="140.4" y="981" width="4.8" height="15.0" fill="rgb(242,124,28)" rx="2" ry="2" />
<text  x="143.42" y="991.5" ></text>
</g>
<g >
<title>rw_verify_area (8 samples, 0.03%)</title><rect x="23.0" y="917" width="0.3" height="15.0" fill="rgb(209,160,28)" rx="2" ry="2" />
<text  x="25.97" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (4 samples, 0.01%)</title><rect x="303.7" y="773" width="0.1" height="15.0" fill="rgb(228,3,39)" rx="2" ry="2" />
<text  x="306.66" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::base (3 samples, 0.01%)</title><rect x="48.6" y="981" width="0.1" height="15.0" fill="rgb(246,225,35)" rx="2" ry="2" />
<text  x="51.58" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (429 samples, 1.34%)</title><rect x="338.2" y="757" width="15.9" height="15.0" fill="rgb(205,190,37)" rx="2" ry="2" />
<text  x="341.22" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (10 samples, 0.03%)</title><rect x="467.3" y="693" width="0.4" height="15.0" fill="rgb(218,22,26)" rx="2" ry="2" />
<text  x="470.31" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (41 samples, 0.13%)</title><rect x="557.0" y="725" width="1.5" height="15.0" fill="rgb(236,32,21)" rx="2" ry="2" />
<text  x="560.00" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (64 samples, 0.20%)</title><rect x="585.1" y="725" width="2.4" height="15.0" fill="rgb(225,177,13)" rx="2" ry="2" />
<text  x="588.09" y="735.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (4 samples, 0.01%)</title><rect x="80.7" y="981" width="0.2" height="15.0" fill="rgb(208,143,7)" rx="2" ry="2" />
<text  x="83.74" y="991.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (5 samples, 0.02%)</title><rect x="633.1" y="725" width="0.2" height="15.0" fill="rgb(238,134,28)" rx="2" ry="2" />
<text  x="636.09" y="735.5" ></text>
</g>
<g >
<title>Game_Interpreter::ValueOrVariable (6 samples, 0.02%)</title><rect x="617.4" y="741" width="0.2" height="15.0" fill="rgb(227,3,3)" rx="2" ry="2" />
<text  x="620.43" y="751.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (13 samples, 0.04%)</title><rect x="810.4" y="389" width="0.5" height="15.0" fill="rgb(246,189,1)" rx="2" ry="2" />
<text  x="813.38" y="399.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.02%)</title><rect x="984.7" y="597" width="0.3" height="15.0" fill="rgb(242,37,18)" rx="2" ry="2" />
<text  x="987.74" y="607.5" ></text>
</g>
<g >
<title>std::__weak_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_get_use_count (28 samples, 0.09%)</title><rect x="752.3" y="645" width="1.0" height="15.0" fill="rgb(206,51,44)" rx="2" ry="2" />
<text  x="755.28" y="655.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&gt; (57 samples, 0.18%)</title><rect x="695.0" y="597" width="2.1" height="15.0" fill="rgb(226,39,41)" rx="2" ry="2" />
<text  x="697.96" y="607.5" ></text>
</g>
<g >
<title>Game_Picture::Show (96 samples, 0.30%)</title><rect x="191.3" y="773" width="3.6" height="15.0" fill="rgb(241,72,37)" rx="2" ry="2" />
<text  x="194.35" y="783.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_key (12 samples, 0.04%)</title><rect x="681.2" y="661" width="0.4" height="15.0" fill="rgb(220,159,39)" rx="2" ry="2" />
<text  x="684.18" y="671.5" ></text>
</g>
<g >
<title>Game_Map::UpdateForegroundEvents (30 samples, 0.09%)</title><rect x="1145.8" y="837" width="1.1" height="15.0" fill="rgb(238,35,19)" rx="2" ry="2" />
<text  x="1148.84" y="847.5" ></text>
</g>
<g >
<title>Bitmap::Init (38 samples, 0.12%)</title><rect x="865.2" y="325" width="1.4" height="15.0" fill="rgb(237,78,28)" rx="2" ry="2" />
<text  x="868.18" y="335.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (4 samples, 0.01%)</title><rect x="140.3" y="885" width="0.1" height="15.0" fill="rgb(236,78,2)" rx="2" ry="2" />
<text  x="143.27" y="895.5" ></text>
</g>
<g >
<title>MakeFlashColor (6 samples, 0.02%)</title><rect x="39.5" y="981" width="0.3" height="15.0" fill="rgb(252,56,46)" rx="2" ry="2" />
<text  x="42.53" y="991.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (130 samples, 0.41%)</title><rect x="140.4" y="597" width="4.8" height="15.0" fill="rgb(218,99,42)" rx="2" ry="2" />
<text  x="143.42" y="607.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (119 samples, 0.37%)</title><rect x="179.3" y="645" width="4.4" height="15.0" fill="rgb(231,219,13)" rx="2" ry="2" />
<text  x="182.26" y="655.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::expired (33 samples, 0.10%)</title><rect x="752.1" y="661" width="1.2" height="15.0" fill="rgb(238,207,51)" rx="2" ry="2" />
<text  x="755.10" y="671.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (208 samples, 0.65%)</title><rect x="183.7" y="709" width="7.6" height="15.0" fill="rgb(229,202,34)" rx="2" ry="2" />
<text  x="186.66" y="719.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::destroy&lt;Bitmap&gt; (10 samples, 0.03%)</title><rect x="210.6" y="501" width="0.4" height="15.0" fill="rgb(217,177,38)" rx="2" ry="2" />
<text  x="213.64" y="511.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.03%)</title><rect x="854.5" y="421" width="0.3" height="15.0" fill="rgb(214,37,0)" rx="2" ry="2" />
<text  x="857.47" y="431.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustMoveParams (3 samples, 0.01%)</title><rect x="618.7" y="741" width="0.1" height="15.0" fill="rgb(254,49,5)" rx="2" ry="2" />
<text  x="621.72" y="751.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::end (3 samples, 0.01%)</title><rect x="100.0" y="981" width="0.1" height="15.0" fill="rgb(246,201,25)" rx="2" ry="2" />
<text  x="102.95" y="991.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (3 samples, 0.01%)</title><rect x="981.1" y="693" width="0.1" height="15.0" fill="rgb(209,107,22)" rx="2" ry="2" />
<text  x="984.12" y="703.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (110 samples, 0.34%)</title><rect x="200.4" y="901" width="4.1" height="15.0" fill="rgb(229,109,16)" rx="2" ry="2" />
<text  x="203.40" y="911.5" ></text>
</g>
<g >
<title>Sprite::Flash (20 samples, 0.06%)</title><rect x="1165.0" y="789" width="0.7" height="15.0" fill="rgb(226,197,40)" rx="2" ry="2" />
<text  x="1167.98" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_valptr (15 samples, 0.05%)</title><rect x="789.3" y="405" width="0.6" height="15.0" fill="rgb(241,216,50)" rx="2" ry="2" />
<text  x="792.35" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::operator (24 samples, 0.08%)</title><rect x="784.4" y="485" width="0.9" height="15.0" fill="rgb(229,98,7)" rx="2" ry="2" />
<text  x="787.43" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (53 samples, 0.17%)</title><rect x="143.3" y="453" width="1.9" height="15.0" fill="rgb(253,195,31)" rx="2" ry="2" />
<text  x="146.27" y="463.5" ></text>
</g>
<g >
<title>__do_page_fault (11 samples, 0.03%)</title><rect x="137.1" y="421" width="0.4" height="15.0" fill="rgb(226,211,17)" rx="2" ry="2" />
<text  x="140.06" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (9 samples, 0.03%)</title><rect x="1171.7" y="773" width="0.3" height="15.0" fill="rgb(212,31,54)" rx="2" ry="2" />
<text  x="1174.67" y="783.5" ></text>
</g>
<g >
<title>__interceptor_free (190 samples, 0.60%)</title><rect x="184.3" y="373" width="7.0" height="15.0" fill="rgb(208,194,46)" rx="2" ry="2" />
<text  x="187.33" y="383.5" ></text>
</g>
<g >
<title>Scene::HasRequestedScene (186 samples, 0.58%)</title><rect x="1119.6" y="789" width="6.9" height="15.0" fill="rgb(205,125,50)" rx="2" ry="2" />
<text  x="1122.63" y="799.5" ></text>
</g>
<g >
<title>__vm_munmap (61 samples, 0.19%)</title><rect x="201.5" y="229" width="2.3" height="15.0" fill="rgb(218,29,47)" rx="2" ry="2" />
<text  x="204.51" y="239.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="810.7" y="357" width="0.1" height="15.0" fill="rgb(241,82,6)" rx="2" ry="2" />
<text  x="813.71" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::_M_head (3 samples, 0.01%)</title><rect x="1144.5" y="725" width="0.2" height="15.0" fill="rgb(220,63,48)" rx="2" ry="2" />
<text  x="1147.54" y="735.5" ></text>
</g>
<g >
<title>Player::MainLoop (208 samples, 0.65%)</title><rect x="183.7" y="981" width="7.6" height="15.0" fill="rgb(228,20,23)" rx="2" ry="2" />
<text  x="186.66" y="991.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_M_begin (5 samples, 0.02%)</title><rect x="778.2" y="437" width="0.2" height="15.0" fill="rgb(235,20,33)" rx="2" ry="2" />
<text  x="781.19" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (8 samples, 0.03%)</title><rect x="882.0" y="389" width="0.3" height="15.0" fill="rgb(253,180,23)" rx="2" ry="2" />
<text  x="884.96" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::operator bool (21 samples, 0.07%)</title><rect x="738.1" y="677" width="0.7" height="15.0" fill="rgb(219,213,26)" rx="2" ry="2" />
<text  x="741.05" y="687.5" ></text>
</g>
<g >
<title>__do_page_fault (5 samples, 0.02%)</title><rect x="136.6" y="405" width="0.2" height="15.0" fill="rgb(213,8,44)" rx="2" ry="2" />
<text  x="139.58" y="415.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*&gt; (15 samples, 0.05%)</title><rect x="61.8" y="981" width="0.5" height="15.0" fill="rgb(223,200,41)" rx="2" ry="2" />
<text  x="64.78" y="991.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (20 samples, 0.06%)</title><rect x="814.2" y="437" width="0.8" height="15.0" fill="rgb(254,61,32)" rx="2" ry="2" />
<text  x="817.22" y="447.5" ></text>
</g>
<g >
<title>up_read (3 samples, 0.01%)</title><rect x="232.7" y="389" width="0.1" height="15.0" fill="rgb(207,10,41)" rx="2" ry="2" />
<text  x="235.67" y="399.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (4 samples, 0.01%)</title><rect x="136.2" y="389" width="0.2" height="15.0" fill="rgb(219,115,43)" rx="2" ry="2" />
<text  x="139.25" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (7 samples, 0.02%)</title><rect x="981.2" y="725" width="0.3" height="15.0" fill="rgb(217,220,20)" rx="2" ry="2" />
<text  x="984.23" y="735.5" ></text>
</g>
<g >
<title>pixman_image_get_height (30 samples, 0.09%)</title><rect x="896.5" y="453" width="1.1" height="15.0" fill="rgb(212,76,54)" rx="2" ry="2" />
<text  x="899.52" y="463.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (30 samples, 0.09%)</title><rect x="815.9" y="453" width="1.1" height="15.0" fill="rgb(253,225,44)" rx="2" ry="2" />
<text  x="818.88" y="463.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;*&gt; (3 samples, 0.01%)</title><rect x="61.7" y="981" width="0.1" height="15.0" fill="rgb(254,123,33)" rx="2" ry="2" />
<text  x="64.67" y="991.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (130 samples, 0.41%)</title><rect x="140.4" y="741" width="4.8" height="15.0" fill="rgb(216,225,37)" rx="2" ry="2" />
<text  x="143.42" y="751.5" ></text>
</g>
<g >
<title>operator new (100 samples, 0.31%)</title><rect x="640.4" y="629" width="3.7" height="15.0" fill="rgb(231,96,6)" rx="2" ry="2" />
<text  x="643.38" y="639.5" ></text>
</g>
<g >
<title>Game_Interpreter::ValueOrVariable (12 samples, 0.04%)</title><rect x="34.1" y="981" width="0.5" height="15.0" fill="rgb(221,65,20)" rx="2" ry="2" />
<text  x="37.13" y="991.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned (3 samples, 0.01%)</title><rect x="640.2" y="613" width="0.1" height="15.0" fill="rgb(234,196,4)" rx="2" ry="2" />
<text  x="643.19" y="623.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (84 samples, 0.26%)</title><rect x="191.8" y="517" width="3.1" height="15.0" fill="rgb(253,132,18)" rx="2" ry="2" />
<text  x="194.79" y="527.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (42 samples, 0.13%)</title><rect x="248.0" y="293" width="1.6" height="15.0" fill="rgb(225,189,32)" rx="2" ry="2" />
<text  x="251.04" y="303.5" ></text>
</g>
<g >
<title>memset@plt (9 samples, 0.03%)</title><rect x="856.8" y="469" width="0.4" height="15.0" fill="rgb(221,101,24)" rx="2" ry="2" />
<text  x="859.83" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_value (6 samples, 0.02%)</title><rect x="781.1" y="421" width="0.3" height="15.0" fill="rgb(212,207,10)" rx="2" ry="2" />
<text  x="784.14" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (89 samples, 0.28%)</title><rect x="334.9" y="741" width="3.3" height="15.0" fill="rgb(238,192,8)" rx="2" ry="2" />
<text  x="337.89" y="751.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (276 samples, 0.86%)</title><rect x="130.1" y="629" width="10.2" height="15.0" fill="rgb(236,137,15)" rx="2" ry="2" />
<text  x="133.07" y="639.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (85 samples, 0.27%)</title><rect x="250.3" y="741" width="3.1" height="15.0" fill="rgb(215,220,5)" rx="2" ry="2" />
<text  x="253.29" y="751.5" ></text>
</g>
<g >
<title>Game_Picture::Show (9,361 samples, 29.32%)</title><rect x="630.5" y="741" width="346.0" height="15.0" fill="rgb(236,159,7)" rx="2" ry="2" />
<text  x="633.51" y="751.5" >Game_Picture::Show</text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_ptr (8 samples, 0.03%)</title><rect x="670.8" y="597" width="0.3" height="15.0" fill="rgb(222,156,27)" rx="2" ry="2" />
<text  x="673.79" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (411 samples, 1.29%)</title><rect x="379.5" y="757" width="15.1" height="15.0" fill="rgb(253,22,33)" rx="2" ry="2" />
<text  x="382.46" y="767.5" ></text>
</g>
<g >
<title>Bitmap::Create (45 samples, 0.14%)</title><rect x="213.9" y="597" width="1.6" height="15.0" fill="rgb(223,182,41)" rx="2" ry="2" />
<text  x="216.85" y="607.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (597 samples, 1.87%)</title><rect x="1153.3" y="805" width="22.0" height="15.0" fill="rgb(251,69,29)" rx="2" ry="2" />
<text  x="1156.26" y="815.5" >G..</text>
</g>
<g >
<title>Bitmap::ZoomOpacityBlit (4 samples, 0.01%)</title><rect x="258.2" y="773" width="0.1" height="15.0" fill="rgb(249,228,32)" rx="2" ry="2" />
<text  x="261.17" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;Input::UiSource::Update()::{lambda(int)#1}&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (4 samples, 0.01%)</title><rect x="259.3" y="773" width="0.2" height="15.0" fill="rgb(217,176,49)" rx="2" ry="2" />
<text  x="262.31" y="783.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (42 samples, 0.13%)</title><rect x="222.7" y="437" width="1.6" height="15.0" fill="rgb(232,5,35)" rx="2" ry="2" />
<text  x="225.72" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (6 samples, 0.02%)</title><rect x="70.3" y="981" width="0.2" height="15.0" fill="rgb(242,187,9)" rx="2" ry="2" />
<text  x="73.31" y="991.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (276 samples, 0.86%)</title><rect x="130.1" y="757" width="10.2" height="15.0" fill="rgb(230,188,51)" rx="2" ry="2" />
<text  x="133.07" y="767.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (604 samples, 1.89%)</title><rect x="161.3" y="757" width="22.4" height="15.0" fill="rgb(239,128,18)" rx="2" ry="2" />
<text  x="164.34" y="767.5" >s..</text>
</g>
<g >
<title>Game_Screen::GetTone (9 samples, 0.03%)</title><rect x="38.4" y="981" width="0.4" height="15.0" fill="rgb(206,46,34)" rx="2" ry="2" />
<text  x="41.42" y="991.5" ></text>
</g>
<g >
<title>MakeFlashColor (19 samples, 0.06%)</title><rect x="1163.2" y="773" width="0.7" height="15.0" fill="rgb(238,174,14)" rx="2" ry="2" />
<text  x="1166.24" y="783.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (63 samples, 0.20%)</title><rect x="161.6" y="597" width="2.4" height="15.0" fill="rgb(243,105,37)" rx="2" ry="2" />
<text  x="164.63" y="607.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (776 samples, 2.43%)</title><rect x="221.2" y="597" width="28.7" height="15.0" fill="rgb(225,227,46)" rx="2" ry="2" />
<text  x="224.25" y="607.5" >st..</text>
</g>
<g >
<title>Sprite::SetBitmap (307 samples, 0.96%)</title><rect x="238.6" y="501" width="11.3" height="15.0" fill="rgb(231,120,32)" rx="2" ry="2" />
<text  x="241.58" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::operator (7 samples, 0.02%)</title><rect x="108.5" y="981" width="0.2" height="15.0" fill="rgb(246,130,8)" rx="2" ry="2" />
<text  x="111.45" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (30 samples, 0.09%)</title><rect x="195.4" y="549" width="1.1" height="15.0" fill="rgb(220,39,27)" rx="2" ry="2" />
<text  x="198.41" y="559.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (214 samples, 0.67%)</title><rect x="673.2" y="629" width="7.9" height="15.0" fill="rgb(238,172,14)" rx="2" ry="2" />
<text  x="676.19" y="639.5" ></text>
</g>
<g >
<title>pollwake (10 samples, 0.03%)</title><rect x="23.4" y="853" width="0.3" height="15.0" fill="rgb(251,160,44)" rx="2" ry="2" />
<text  x="26.38" y="863.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;Input::UiSource::Update()::{lambda(int)#1}&gt; &gt; (6 samples, 0.02%)</title><rect x="259.2" y="789" width="0.3" height="15.0" fill="rgb(243,48,11)" rx="2" ry="2" />
<text  x="262.24" y="799.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (10 samples, 0.03%)</title><rect x="210.6" y="517" width="0.4" height="15.0" fill="rgb(228,99,34)" rx="2" ry="2" />
<text  x="213.64" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::destroy&lt;Bitmap&gt; (291 samples, 0.91%)</title><rect x="905.5" y="389" width="10.7" height="15.0" fill="rgb(206,77,4)" rx="2" ry="2" />
<text  x="908.47" y="399.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.03%)</title><rect x="210.6" y="325" width="0.4" height="15.0" fill="rgb(254,207,2)" rx="2" ry="2" />
<text  x="213.64" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (7 samples, 0.02%)</title><rect x="967.6" y="709" width="0.3" height="15.0" fill="rgb(243,137,39)" rx="2" ry="2" />
<text  x="970.63" y="719.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (22 samples, 0.07%)</title><rect x="1181.5" y="661" width="0.8" height="15.0" fill="rgb(234,176,4)" rx="2" ry="2" />
<text  x="1184.54" y="671.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (6 samples, 0.02%)</title><rect x="108.8" y="981" width="0.2" height="15.0" fill="rgb(223,177,52)" rx="2" ry="2" />
<text  x="111.79" y="991.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Transition*, std::default_delete&lt;Transition&gt; &gt; (5 samples, 0.02%)</title><rect x="81.3" y="981" width="0.2" height="15.0" fill="rgb(254,123,53)" rx="2" ry="2" />
<text  x="84.29" y="991.5" ></text>
</g>
<g >
<title>memcmp@plt (4 samples, 0.01%)</title><rect x="680.6" y="597" width="0.2" height="15.0" fill="rgb(212,102,19)" rx="2" ry="2" />
<text  x="683.62" y="607.5" ></text>
</g>
<g >
<title>operator new (53 samples, 0.17%)</title><rect x="143.3" y="517" width="1.9" height="15.0" fill="rgb(235,227,4)" rx="2" ry="2" />
<text  x="146.27" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::deallocate (72 samples, 0.23%)</title><rect x="191.8" y="405" width="2.7" height="15.0" fill="rgb(248,49,51)" rx="2" ry="2" />
<text  x="194.79" y="415.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (25 samples, 0.08%)</title><rect x="998.3" y="741" width="0.9" height="15.0" fill="rgb(254,80,7)" rx="2" ry="2" />
<text  x="1001.27" y="751.5" ></text>
</g>
<g >
<title>Bitmap::~Bitmap (12 samples, 0.04%)</title><rect x="194.5" y="405" width="0.4" height="15.0" fill="rgb(220,19,3)" rx="2" ry="2" />
<text  x="197.45" y="415.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (179 samples, 0.56%)</title><rect x="145.2" y="885" width="6.6" height="15.0" fill="rgb(220,124,40)" rx="2" ry="2" />
<text  x="148.23" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (3 samples, 0.01%)</title><rect x="818.6" y="421" width="0.1" height="15.0" fill="rgb(248,24,33)" rx="2" ry="2" />
<text  x="821.58" y="431.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, true&gt; (25 samples, 0.08%)</title><rect x="155.0" y="613" width="0.9" height="15.0" fill="rgb(212,6,51)" rx="2" ry="2" />
<text  x="158.02" y="623.5" ></text>
</g>
<g >
<title>std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt;&amp;, true&gt; (10 samples, 0.03%)</title><rect x="106.2" y="981" width="0.4" height="15.0" fill="rgb(251,53,5)" rx="2" ry="2" />
<text  x="109.20" y="991.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (110 samples, 0.34%)</title><rect x="200.4" y="597" width="4.1" height="15.0" fill="rgb(210,5,5)" rx="2" ry="2" />
<text  x="203.40" y="607.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (47 samples, 0.15%)</title><rect x="251.7" y="309" width="1.7" height="15.0" fill="rgb(214,53,2)" rx="2" ry="2" />
<text  x="254.70" y="319.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (20 samples, 0.06%)</title><rect x="193.6" y="325" width="0.7" height="15.0" fill="rgb(205,93,25)" rx="2" ry="2" />
<text  x="196.57" y="335.5" ></text>
</g>
<g >
<title>memcpy@plt (3 samples, 0.01%)</title><rect x="988.6" y="709" width="0.1" height="15.0" fill="rgb(248,26,25)" rx="2" ry="2" />
<text  x="991.62" y="719.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Scene, (__gnu_cxx::_Lock_policy)2&gt;::get (77 samples, 0.24%)</title><rect x="1127.9" y="757" width="2.9" height="15.0" fill="rgb(211,128,53)" rx="2" ry="2" />
<text  x="1130.91" y="767.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (257 samples, 0.80%)</title><rect x="151.8" y="773" width="9.5" height="15.0" fill="rgb(232,189,27)" rx="2" ry="2" />
<text  x="154.84" y="783.5" ></text>
</g>
<g >
<title>__gthread_active_p (4 samples, 0.01%)</title><rect x="814.8" y="405" width="0.2" height="15.0" fill="rgb(214,97,46)" rx="2" ry="2" />
<text  x="817.81" y="415.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (9 samples, 0.03%)</title><rect x="232.1" y="357" width="0.3" height="15.0" fill="rgb(218,64,28)" rx="2" ry="2" />
<text  x="235.07" y="367.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (101 samples, 0.32%)</title><rect x="200.7" y="325" width="3.8" height="15.0" fill="rgb(245,45,11)" rx="2" ry="2" />
<text  x="203.74" y="335.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (122 samples, 0.38%)</title><rect x="211.0" y="917" width="4.5" height="15.0" fill="rgb(209,62,4)" rx="2" ry="2" />
<text  x="214.01" y="927.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_ptr (3 samples, 0.01%)</title><rect x="72.3" y="981" width="0.1" height="15.0" fill="rgb(233,66,53)" rx="2" ry="2" />
<text  x="75.27" y="991.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandOptionGeneric (3 samples, 0.01%)</title><rect x="31.2" y="981" width="0.1" height="15.0" fill="rgb(224,53,0)" rx="2" ry="2" />
<text  x="34.21" y="991.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (96 samples, 0.30%)</title><rect x="191.3" y="901" width="3.6" height="15.0" fill="rgb(211,1,38)" rx="2" ry="2" />
<text  x="194.35" y="911.5" ></text>
</g>
<g >
<title>std::min&lt;int&gt; (18 samples, 0.06%)</title><rect x="995.2" y="741" width="0.7" height="15.0" fill="rgb(212,215,3)" rx="2" ry="2" />
<text  x="998.20" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt;::operator()&lt;int const*&gt; (33 samples, 0.10%)</title><rect x="506.7" y="677" width="1.2" height="15.0" fill="rgb(214,33,25)" rx="2" ry="2" />
<text  x="509.70" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (16 samples, 0.05%)</title><rect x="814.4" y="421" width="0.6" height="15.0" fill="rgb(228,116,34)" rx="2" ry="2" />
<text  x="817.37" y="431.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (10 samples, 0.03%)</title><rect x="210.6" y="533" width="0.4" height="15.0" fill="rgb(247,8,34)" rx="2" ry="2" />
<text  x="213.64" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (10 samples, 0.03%)</title><rect x="1171.3" y="773" width="0.4" height="15.0" fill="rgb(219,153,49)" rx="2" ry="2" />
<text  x="1174.30" y="783.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (60 samples, 0.19%)</title><rect x="232.9" y="437" width="2.2" height="15.0" fill="rgb(219,3,48)" rx="2" ry="2" />
<text  x="235.85" y="447.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (177 samples, 0.55%)</title><rect x="204.5" y="901" width="6.5" height="15.0" fill="rgb(223,149,12)" rx="2" ry="2" />
<text  x="207.47" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (49 samples, 0.15%)</title><rect x="996.1" y="741" width="1.8" height="15.0" fill="rgb(220,88,32)" rx="2" ry="2" />
<text  x="999.09" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (27 samples, 0.08%)</title><rect x="265.9" y="789" width="1.0" height="15.0" fill="rgb(234,133,28)" rx="2" ry="2" />
<text  x="268.93" y="799.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (64 samples, 0.20%)</title><rect x="121.7" y="981" width="2.4" height="15.0" fill="rgb(237,14,41)" rx="2" ry="2" />
<text  x="124.72" y="991.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (16,600 samples, 51.99%)</title><rect x="438.1" y="773" width="613.5" height="15.0" fill="rgb(209,90,15)" rx="2" ry="2" />
<text  x="441.07" y="783.5" >Game_Interpreter::ExecuteCommand</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (8 samples, 0.03%)</title><rect x="173.7" y="533" width="0.3" height="15.0" fill="rgb(230,113,25)" rx="2" ry="2" />
<text  x="176.72" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_left (5 samples, 0.02%)</title><rect x="780.5" y="421" width="0.2" height="15.0" fill="rgb(228,70,11)" rx="2" ry="2" />
<text  x="783.48" y="431.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (19 samples, 0.06%)</title><rect x="248.8" y="277" width="0.7" height="15.0" fill="rgb(252,205,42)" rx="2" ry="2" />
<text  x="251.78" y="287.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (130 samples, 0.41%)</title><rect x="140.4" y="581" width="4.8" height="15.0" fill="rgb(226,15,32)" rx="2" ry="2" />
<text  x="143.42" y="591.5" ></text>
</g>
<g >
<title>Color::Color (9 samples, 0.03%)</title><rect x="28.6" y="981" width="0.3" height="15.0" fill="rgb(230,19,20)" rx="2" ry="2" />
<text  x="31.59" y="991.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (17 samples, 0.05%)</title><rect x="173.1" y="501" width="0.6" height="15.0" fill="rgb(233,208,28)" rx="2" ry="2" />
<text  x="176.09" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (178 samples, 0.56%)</title><rect x="17.4" y="997" width="6.5" height="15.0" fill="rgb(245,146,48)" rx="2" ry="2" />
<text  x="20.35" y="1007.5" ></text>
</g>
<g >
<title>operator new (145 samples, 0.45%)</title><rect x="685.9" y="597" width="5.4" height="15.0" fill="rgb(228,209,33)" rx="2" ry="2" />
<text  x="688.91" y="607.5" ></text>
</g>
<g >
<title>SDL_WaitEventTimeout_REAL (37 samples, 0.12%)</title><rect x="1181.4" y="837" width="1.3" height="15.0" fill="rgb(234,89,53)" rx="2" ry="2" />
<text  x="1184.35" y="847.5" ></text>
</g>
<g >
<title>Cache::System (4 samples, 0.01%)</title><rect x="1179.7" y="757" width="0.2" height="15.0" fill="rgb(239,31,34)" rx="2" ry="2" />
<text  x="1182.73" y="767.5" ></text>
</g>
<g >
<title>MakeFlashColor (15 samples, 0.05%)</title><rect x="962.1" y="693" width="0.5" height="15.0" fill="rgb(215,146,1)" rx="2" ry="2" />
<text  x="965.09" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_M_begin (6 samples, 0.02%)</title><rect x="668.1" y="661" width="0.2" height="15.0" fill="rgb(244,71,4)" rx="2" ry="2" />
<text  x="671.09" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_ptr (4 samples, 0.01%)</title><rect x="780.0" y="373" width="0.2" height="15.0" fill="rgb(242,22,23)" rx="2" ry="2" />
<text  x="783.04" y="383.5" ></text>
</g>
<g >
<title>free_unref_page_list (23 samples, 0.07%)</title><rect x="202.0" y="85" width="0.9" height="15.0" fill="rgb(250,227,16)" rx="2" ry="2" />
<text  x="205.03" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::size (13 samples, 0.04%)</title><rect x="116.1" y="981" width="0.4" height="15.0" fill="rgb(248,21,42)" rx="2" ry="2" />
<text  x="119.07" y="991.5" ></text>
</g>
<g >
<title>Scene::GetRequestedScene (156 samples, 0.49%)</title><rect x="1120.7" y="773" width="5.8" height="15.0" fill="rgb(218,191,22)" rx="2" ry="2" />
<text  x="1123.74" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt;::begin (110 samples, 0.34%)</title><rect x="1112.1" y="773" width="4.0" height="15.0" fill="rgb(251,222,27)" rx="2" ry="2" />
<text  x="1115.06" y="783.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (7 samples, 0.02%)</title><rect x="960.6" y="693" width="0.3" height="15.0" fill="rgb(233,215,10)" rx="2" ry="2" />
<text  x="963.64" y="703.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (96 samples, 0.30%)</title><rect x="191.3" y="629" width="3.6" height="15.0" fill="rgb(251,17,52)" rx="2" ry="2" />
<text  x="194.35" y="639.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (6 samples, 0.02%)</title><rect x="210.8" y="213" width="0.2" height="15.0" fill="rgb(232,105,17)" rx="2" ry="2" />
<text  x="213.75" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (92 samples, 0.29%)</title><rect x="207.2" y="469" width="3.4" height="15.0" fill="rgb(209,44,33)" rx="2" ry="2" />
<text  x="210.24" y="479.5" ></text>
</g>
<g >
<title>Game_Map::Refresh (11 samples, 0.03%)</title><rect x="35.9" y="981" width="0.4" height="15.0" fill="rgb(212,137,35)" rx="2" ry="2" />
<text  x="38.91" y="991.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (24 samples, 0.08%)</title><rect x="993.3" y="661" width="0.9" height="15.0" fill="rgb(239,67,16)" rx="2" ry="2" />
<text  x="996.28" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator (3 samples, 0.01%)</title><rect x="777.3" y="469" width="0.1" height="15.0" fill="rgb(220,193,33)" rx="2" ry="2" />
<text  x="780.26" y="479.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (110 samples, 0.34%)</title><rect x="200.4" y="853" width="4.1" height="15.0" fill="rgb(253,146,18)" rx="2" ry="2" />
<text  x="203.40" y="863.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (53 samples, 0.17%)</title><rect x="143.3" y="565" width="1.9" height="15.0" fill="rgb(251,84,33)" rx="2" ry="2" />
<text  x="146.27" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_create (11 samples, 0.03%)</title><rect x="984.6" y="677" width="0.4" height="15.0" fill="rgb(254,100,32)" rx="2" ry="2" />
<text  x="987.56" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="128.2" y="981" width="0.1" height="15.0" fill="rgb(213,80,41)" rx="2" ry="2" />
<text  x="131.19" y="991.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (12 samples, 0.04%)</title><rect x="961.3" y="693" width="0.4" height="15.0" fill="rgb(239,210,34)" rx="2" ry="2" />
<text  x="964.27" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (72 samples, 0.23%)</title><rect x="151.8" y="565" width="2.7" height="15.0" fill="rgb(227,133,3)" rx="2" ry="2" />
<text  x="154.84" y="575.5" ></text>
</g>
<g >
<title>std::none_of&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, Input::UiSource::Update()::{lambda(int)#1}&gt; (10 samples, 0.03%)</title><rect x="259.1" y="837" width="0.4" height="15.0" fill="rgb(238,86,6)" rx="2" ry="2" />
<text  x="262.09" y="847.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator bool (7 samples, 0.02%)</title><rect x="785.9" y="485" width="0.3" height="15.0" fill="rgb(215,27,4)" rx="2" ry="2" />
<text  x="788.91" y="495.5" ></text>
</g>
<g >
<title>zap_page_range (12 samples, 0.04%)</title><rect x="204.0" y="229" width="0.4" height="15.0" fill="rgb(242,89,22)" rx="2" ry="2" />
<text  x="206.99" y="239.5" ></text>
</g>
<g >
<title>alloc_pages_vma (7 samples, 0.02%)</title><rect x="135.7" y="325" width="0.3" height="15.0" fill="rgb(247,0,7)" rx="2" ry="2" />
<text  x="138.73" y="335.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.01%)</title><rect x="807.1" y="405" width="0.1" height="15.0" fill="rgb(230,193,11)" rx="2" ry="2" />
<text  x="810.05" y="415.5" ></text>
</g>
<g >
<title>Sprite::BlitScreenIntern (12 samples, 0.04%)</title><rect x="257.9" y="805" width="0.4" height="15.0" fill="rgb(218,159,6)" rx="2" ry="2" />
<text  x="260.87" y="815.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_right (13 samples, 0.04%)</title><rect x="780.7" y="421" width="0.4" height="15.0" fill="rgb(208,46,3)" rx="2" ry="2" />
<text  x="783.66" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (14 samples, 0.04%)</title><rect x="1169.8" y="789" width="0.5" height="15.0" fill="rgb(220,146,42)" rx="2" ry="2" />
<text  x="1172.78" y="799.5" ></text>
</g>
<g >
<title>Bitmap::GetHeight (6 samples, 0.02%)</title><rect x="958.6" y="709" width="0.2" height="15.0" fill="rgb(229,218,43)" rx="2" ry="2" />
<text  x="961.58" y="719.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.02%)</title><rect x="195.2" y="533" width="0.2" height="15.0" fill="rgb(251,144,47)" rx="2" ry="2" />
<text  x="198.19" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (3 samples, 0.01%)</title><rect x="56.6" y="981" width="0.2" height="15.0" fill="rgb(239,5,11)" rx="2" ry="2" />
<text  x="59.64" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (14 samples, 0.04%)</title><rect x="256.5" y="981" width="0.6" height="15.0" fill="rgb(251,170,44)" rx="2" ry="2" />
<text  x="259.54" y="991.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (92 samples, 0.29%)</title><rect x="207.2" y="501" width="3.4" height="15.0" fill="rgb(250,10,31)" rx="2" ry="2" />
<text  x="210.24" y="511.5" ></text>
</g>
<g >
<title>pixman_image_unref (190 samples, 0.60%)</title><rect x="184.3" y="405" width="7.0" height="15.0" fill="rgb(244,43,53)" rx="2" ry="2" />
<text  x="187.33" y="415.5" ></text>
</g>
<g >
<title>std::forward&lt;FileRequestResult*&gt; (3 samples, 0.01%)</title><rect x="922.9" y="565" width="0.2" height="15.0" fill="rgb(222,11,45)" rx="2" ry="2" />
<text  x="925.95" y="575.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (85 samples, 0.27%)</title><rect x="250.3" y="565" width="3.1" height="15.0" fill="rgb(212,113,6)" rx="2" ry="2" />
<text  x="253.29" y="575.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (25 samples, 0.08%)</title><rect x="894.2" y="421" width="0.9" height="15.0" fill="rgb(245,87,19)" rx="2" ry="2" />
<text  x="897.20" y="431.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (10 samples, 0.03%)</title><rect x="918.9" y="437" width="0.4" height="15.0" fill="rgb(208,108,11)" rx="2" ry="2" />
<text  x="921.88" y="447.5" ></text>
</g>
<g >
<title>Rect::Rect (7 samples, 0.02%)</title><rect x="880.5" y="453" width="0.2" height="15.0" fill="rgb(246,84,6)" rx="2" ry="2" />
<text  x="883.49" y="463.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (73 samples, 0.23%)</title><rect x="808.2" y="405" width="2.7" height="15.0" fill="rgb(228,34,22)" rx="2" ry="2" />
<text  x="811.16" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_addr (5 samples, 0.02%)</title><rect x="670.9" y="581" width="0.2" height="15.0" fill="rgb(247,63,25)" rx="2" ry="2" />
<text  x="673.90" y="591.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (11 samples, 0.03%)</title><rect x="34.6" y="981" width="0.4" height="15.0" fill="rgb(245,87,10)" rx="2" ry="2" />
<text  x="37.58" y="991.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (100 samples, 0.31%)</title><rect x="891.6" y="469" width="3.7" height="15.0" fill="rgb(223,188,40)" rx="2" ry="2" />
<text  x="894.65" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_valptr (7 samples, 0.02%)</title><rect x="779.9" y="389" width="0.3" height="15.0" fill="rgb(238,14,54)" rx="2" ry="2" />
<text  x="782.93" y="399.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (10 samples, 0.03%)</title><rect x="210.6" y="581" width="0.4" height="15.0" fill="rgb(223,64,15)" rx="2" ry="2" />
<text  x="213.64" y="591.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (59 samples, 0.18%)</title><rect x="677.8" y="581" width="2.2" height="15.0" fill="rgb(231,77,37)" rx="2" ry="2" />
<text  x="680.78" y="591.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (9 samples, 0.03%)</title><rect x="94.0" y="981" width="0.3" height="15.0" fill="rgb(235,210,33)" rx="2" ry="2" />
<text  x="97.00" y="991.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (5 samples, 0.02%)</title><rect x="783.9" y="485" width="0.2" height="15.0" fill="rgb(252,50,13)" rx="2" ry="2" />
<text  x="786.88" y="495.5" ></text>
</g>
<g >
<title>std::move&lt;Bitmap*&amp;&gt; (3 samples, 0.01%)</title><rect x="918.6" y="437" width="0.1" height="15.0" fill="rgb(234,103,50)" rx="2" ry="2" />
<text  x="921.62" y="447.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetSubcommandIndex (58 samples, 0.18%)</title><rect x="603.0" y="725" width="2.1" height="15.0" fill="rgb(236,13,38)" rx="2" ry="2" />
<text  x="605.98" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_M_begin (5 samples, 0.02%)</title><rect x="68.3" y="981" width="0.2" height="15.0" fill="rgb(224,21,3)" rx="2" ry="2" />
<text  x="71.32" y="991.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (103 samples, 0.32%)</title><rect x="706.2" y="645" width="3.8" height="15.0" fill="rgb(246,179,54)" rx="2" ry="2" />
<text  x="709.23" y="655.5" ></text>
</g>
<g >
<title>__strlen_avx2 (5 samples, 0.02%)</title><rect x="646.5" y="629" width="0.2" height="15.0" fill="rgb(224,134,44)" rx="2" ry="2" />
<text  x="649.55" y="639.5" ></text>
</g>
<g >
<title>__gthread_active_p (5 samples, 0.02%)</title><rect x="711.0" y="597" width="0.2" height="15.0" fill="rgb(252,212,14)" rx="2" ry="2" />
<text  x="714.04" y="607.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 2ul, 3ul&gt;::__less (33 samples, 0.10%)</title><rect x="794.1" y="373" width="1.2" height="15.0" fill="rgb(213,55,27)" rx="2" ry="2" />
<text  x="797.08" y="383.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (12 samples, 0.04%)</title><rect x="194.5" y="373" width="0.4" height="15.0" fill="rgb(252,209,21)" rx="2" ry="2" />
<text  x="197.45" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (19 samples, 0.06%)</title><rect x="464.2" y="709" width="0.7" height="15.0" fill="rgb(218,60,1)" rx="2" ry="2" />
<text  x="467.24" y="719.5" ></text>
</g>
<g >
<title>Bitmap::GetRect (68 samples, 0.21%)</title><rect x="895.8" y="485" width="2.5" height="15.0" fill="rgb(252,48,5)" rx="2" ry="2" />
<text  x="898.79" y="495.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (92 samples, 0.29%)</title><rect x="207.2" y="485" width="3.4" height="15.0" fill="rgb(239,185,1)" rx="2" ry="2" />
<text  x="210.24" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (33 samples, 0.10%)</title><rect x="987.2" y="709" width="1.2" height="15.0" fill="rgb(225,80,15)" rx="2" ry="2" />
<text  x="990.18" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (3 samples, 0.01%)</title><rect x="502.6" y="709" width="0.1" height="15.0" fill="rgb(213,37,45)" rx="2" ry="2" />
<text  x="505.56" y="719.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.03%)</title><rect x="151.8" y="533" width="0.4" height="15.0" fill="rgb(238,215,28)" rx="2" ry="2" />
<text  x="154.84" y="543.5" ></text>
</g>
<g >
<title>Bitmap::height (6 samples, 0.02%)</title><rect x="958.6" y="693" width="0.2" height="15.0" fill="rgb(249,69,27)" rx="2" ry="2" />
<text  x="961.58" y="703.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (7 samples, 0.02%)</title><rect x="1181.1" y="725" width="0.2" height="15.0" fill="rgb(248,229,20)" rx="2" ry="2" />
<text  x="1184.06" y="735.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (49 samples, 0.15%)</title><rect x="973.8" y="709" width="1.8" height="15.0" fill="rgb(213,31,16)" rx="2" ry="2" />
<text  x="976.84" y="719.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Graphics::State, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (3 samples, 0.01%)</title><rect x="86.2" y="981" width="0.1" height="15.0" fill="rgb(210,153,36)" rx="2" ry="2" />
<text  x="89.17" y="991.5" ></text>
</g>
<g >
<title>std::max&lt;int&gt; (114 samples, 0.36%)</title><rect x="577.6" y="725" width="4.2" height="15.0" fill="rgb(212,98,26)" rx="2" ry="2" />
<text  x="580.59" y="735.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (8 samples, 0.03%)</title><rect x="17.1" y="997" width="0.3" height="15.0" fill="rgb(207,26,2)" rx="2" ry="2" />
<text  x="20.06" y="1007.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (177 samples, 0.55%)</title><rect x="204.5" y="645" width="6.5" height="15.0" fill="rgb(248,102,21)" rx="2" ry="2" />
<text  x="207.47" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (8 samples, 0.03%)</title><rect x="986.2" y="725" width="0.3" height="15.0" fill="rgb(214,14,22)" rx="2" ry="2" />
<text  x="989.22" y="735.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (13 samples, 0.04%)</title><rect x="970.3" y="629" width="0.5" height="15.0" fill="rgb(243,97,29)" rx="2" ry="2" />
<text  x="973.29" y="639.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (6 samples, 0.02%)</title><rect x="107.1" y="981" width="0.2" height="15.0" fill="rgb(235,18,41)" rx="2" ry="2" />
<text  x="110.09" y="991.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::destroy&lt;Bitmap&gt; (12 samples, 0.04%)</title><rect x="194.5" y="437" width="0.4" height="15.0" fill="rgb(215,107,33)" rx="2" ry="2" />
<text  x="197.45" y="447.5" ></text>
</g>
<g >
<title>pixman_region32_fini (10 samples, 0.03%)</title><rect x="912.8" y="325" width="0.4" height="15.0" fill="rgb(250,141,23)" rx="2" ry="2" />
<text  x="915.82" y="335.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (69 samples, 0.22%)</title><rect x="812.4" y="485" width="2.6" height="15.0" fill="rgb(251,99,33)" rx="2" ry="2" />
<text  x="815.45" y="495.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (698 samples, 2.19%)</title><rect x="829.2" y="453" width="25.8" height="15.0" fill="rgb(234,195,30)" rx="2" ry="2" />
<text  x="832.23" y="463.5" >[..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.03%)</title><rect x="992.8" y="645" width="0.4" height="15.0" fill="rgb(246,60,30)" rx="2" ry="2" />
<text  x="995.83" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator (4 samples, 0.01%)</title><rect x="1177.8" y="821" width="0.2" height="15.0" fill="rgb(249,223,1)" rx="2" ry="2" />
<text  x="1180.80" y="831.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Picture*, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl&lt;Game_Picture*&amp;, std::_Placeholder&lt;1&gt; const&amp;, void&gt; (7 samples, 0.02%)</title><rect x="74.2" y="981" width="0.3" height="15.0" fill="rgb(248,58,34)" rx="2" ry="2" />
<text  x="77.19" y="991.5" ></text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;Bitmap&gt;, true&gt;::_Sp_ebo_helper (9 samples, 0.03%)</title><rect x="862.6" y="357" width="0.3" height="15.0" fill="rgb(254,90,43)" rx="2" ry="2" />
<text  x="865.56" y="367.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (33 samples, 0.10%)</title><rect x="665.0" y="629" width="1.2" height="15.0" fill="rgb(239,51,42)" rx="2" ry="2" />
<text  x="668.03" y="639.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (208 samples, 0.65%)</title><rect x="183.7" y="805" width="7.6" height="15.0" fill="rgb(221,77,20)" rx="2" ry="2" />
<text  x="186.66" y="815.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (190 samples, 0.60%)</title><rect x="184.3" y="517" width="7.0" height="15.0" fill="rgb(248,19,52)" rx="2" ry="2" />
<text  x="187.33" y="527.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (776 samples, 2.43%)</title><rect x="221.2" y="805" width="28.7" height="15.0" fill="rgb(248,34,11)" rx="2" ry="2" />
<text  x="224.25" y="815.5" >Ga..</text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingForegroundExecution (25 samples, 0.08%)</title><rect x="1147.4" y="773" width="0.9" height="15.0" fill="rgb(223,193,51)" rx="2" ry="2" />
<text  x="1150.39" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (29 samples, 0.09%)</title><rect x="603.3" y="693" width="1.1" height="15.0" fill="rgb(221,14,53)" rx="2" ry="2" />
<text  x="606.34" y="703.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, Game_Picture*, std::_Placeholder&lt;1&gt; &gt; (8 samples, 0.03%)</title><rect x="922.0" y="597" width="0.3" height="15.0" fill="rgb(253,56,30)" rx="2" ry="2" />
<text  x="925.02" y="607.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (7 samples, 0.02%)</title><rect x="888.2" y="437" width="0.2" height="15.0" fill="rgb(211,125,27)" rx="2" ry="2" />
<text  x="891.17" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (83 samples, 0.26%)</title><rect x="968.1" y="709" width="3.1" height="15.0" fill="rgb(239,151,11)" rx="2" ry="2" />
<text  x="971.11" y="719.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (257 samples, 0.80%)</title><rect x="151.8" y="837" width="9.5" height="15.0" fill="rgb(231,80,42)" rx="2" ry="2" />
<text  x="154.84" y="847.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (208 samples, 0.65%)</title><rect x="183.7" y="613" width="7.6" height="15.0" fill="rgb(209,153,50)" rx="2" ry="2" />
<text  x="186.66" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::operator++ (4 samples, 0.01%)</title><rect x="1148.4" y="773" width="0.1" height="15.0" fill="rgb(230,114,46)" rx="2" ry="2" />
<text  x="1151.39" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (4 samples, 0.01%)</title><rect x="1103.8" y="773" width="0.2" height="15.0" fill="rgb(217,188,14)" rx="2" ry="2" />
<text  x="1106.82" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (5 samples, 0.02%)</title><rect x="999.0" y="709" width="0.2" height="15.0" fill="rgb(241,72,2)" rx="2" ry="2" />
<text  x="1002.01" y="719.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (85 samples, 0.27%)</title><rect x="250.3" y="629" width="3.1" height="15.0" fill="rgb(218,105,1)" rx="2" ry="2" />
<text  x="253.29" y="639.5" ></text>
</g>
<g >
<title>Sprite::SetTone (14 samples, 0.04%)</title><rect x="964.5" y="709" width="0.5" height="15.0" fill="rgb(242,169,21)" rx="2" ry="2" />
<text  x="967.45" y="719.5" ></text>
</g>
<g >
<title>__handle_mm_fault (9 samples, 0.03%)</title><rect x="137.1" y="389" width="0.3" height="15.0" fill="rgb(219,161,48)" rx="2" ry="2" />
<text  x="140.10" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator bool (11 samples, 0.03%)</title><rect x="920.6" y="501" width="0.4" height="15.0" fill="rgb(223,92,38)" rx="2" ry="2" />
<text  x="923.62" y="511.5" ></text>
</g>
<g >
<title>Game_Interpreter::SetSubcommandIndex (398 samples, 1.25%)</title><rect x="467.7" y="741" width="14.7" height="15.0" fill="rgb(231,174,32)" rx="2" ry="2" />
<text  x="470.71" y="751.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (14 samples, 0.04%)</title><rect x="129.6" y="741" width="0.5" height="15.0" fill="rgb(244,30,31)" rx="2" ry="2" />
<text  x="132.56" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (11 samples, 0.03%)</title><rect x="602.4" y="741" width="0.4" height="15.0" fill="rgb(222,7,38)" rx="2" ry="2" />
<text  x="605.38" y="751.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (5 samples, 0.02%)</title><rect x="29.7" y="981" width="0.2" height="15.0" fill="rgb(237,60,42)" rx="2" ry="2" />
<text  x="32.74" y="991.5" ></text>
</g>
<g >
<title>Sprite::SetZ (31 samples, 0.10%)</title><rect x="1167.4" y="789" width="1.2" height="15.0" fill="rgb(225,116,6)" rx="2" ry="2" />
<text  x="1170.42" y="799.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (8 samples, 0.03%)</title><rect x="173.7" y="517" width="0.3" height="15.0" fill="rgb(231,215,13)" rx="2" ry="2" />
<text  x="176.72" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_key (67 samples, 0.21%)</title><rect x="669.1" y="645" width="2.5" height="15.0" fill="rgb(248,97,18)" rx="2" ry="2" />
<text  x="672.13" y="655.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (208 samples, 0.65%)</title><rect x="183.7" y="597" width="7.6" height="15.0" fill="rgb(241,105,38)" rx="2" ry="2" />
<text  x="186.66" y="607.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;int&gt;::weak_ptr&lt;int, void&gt; (32 samples, 0.10%)</title><rect x="710.0" y="677" width="1.2" height="15.0" fill="rgb(253,0,54)" rx="2" ry="2" />
<text  x="713.04" y="687.5" ></text>
</g>
<g >
<title>PicPointerPatch::ReplaceName (76 samples, 0.24%)</title><rect x="984.0" y="741" width="2.8" height="15.0" fill="rgb(235,229,27)" rx="2" ry="2" />
<text  x="987.04" y="751.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (208 samples, 0.65%)</title><rect x="183.7" y="773" width="7.6" height="15.0" fill="rgb(245,213,43)" rx="2" ry="2" />
<text  x="186.66" y="783.5" ></text>
</g>
<g >
<title>do_sys_poll (114 samples, 0.36%)</title><rect x="18.1" y="949" width="4.2" height="15.0" fill="rgb(229,136,0)" rx="2" ry="2" />
<text  x="21.13" y="959.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (32 samples, 0.10%)</title><rect x="886.3" y="469" width="1.2" height="15.0" fill="rgb(219,46,7)" rx="2" ry="2" />
<text  x="889.32" y="479.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (3 samples, 0.01%)</title><rect x="127.0" y="981" width="0.2" height="15.0" fill="rgb(247,44,17)" rx="2" ry="2" />
<text  x="130.04" y="991.5" ></text>
</g>
<g >
<title>std::forward&lt;int&amp;&gt; (4 samples, 0.01%)</title><rect x="869.4" y="405" width="0.1" height="15.0" fill="rgb(247,1,3)" rx="2" ry="2" />
<text  x="872.36" y="415.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (179 samples, 0.56%)</title><rect x="145.2" y="485" width="6.6" height="15.0" fill="rgb(232,214,33)" rx="2" ry="2" />
<text  x="148.23" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator (3 samples, 0.01%)</title><rect x="666.7" y="693" width="0.1" height="15.0" fill="rgb(238,213,41)" rx="2" ry="2" />
<text  x="669.73" y="703.5" ></text>
</g>
<g >
<title>X11_Pending (12 samples, 0.04%)</title><rect x="1180.9" y="821" width="0.5" height="15.0" fill="rgb(206,127,8)" rx="2" ry="2" />
<text  x="1183.91" y="831.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (5 samples, 0.02%)</title><rect x="154.3" y="501" width="0.2" height="15.0" fill="rgb(207,135,22)" rx="2" ry="2" />
<text  x="157.32" y="511.5" ></text>
</g>
<g >
<title>Game_Map::GetNeedRefresh (9 samples, 0.03%)</title><rect x="35.5" y="981" width="0.4" height="15.0" fill="rgb(227,115,16)" rx="2" ry="2" />
<text  x="38.54" y="991.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (9 samples, 0.03%)</title><rect x="1171.3" y="757" width="0.3" height="15.0" fill="rgb(239,76,27)" rx="2" ry="2" />
<text  x="1174.30" y="767.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustShowParams (21 samples, 0.07%)</title><rect x="983.3" y="741" width="0.7" height="15.0" fill="rgb(226,173,22)" rx="2" ry="2" />
<text  x="986.26" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_valptr (5 samples, 0.02%)</title><rect x="197.3" y="357" width="0.1" height="15.0" fill="rgb(233,167,2)" rx="2" ry="2" />
<text  x="200.26" y="367.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (12 samples, 0.04%)</title><rect x="135.0" y="357" width="0.4" height="15.0" fill="rgb(247,68,1)" rx="2" ry="2" />
<text  x="137.95" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::get (25 samples, 0.08%)</title><rect x="1143.2" y="789" width="0.9" height="15.0" fill="rgb(253,211,30)" rx="2" ry="2" />
<text  x="1146.18" y="799.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (5 samples, 0.02%)</title><rect x="105.8" y="981" width="0.2" height="15.0" fill="rgb(210,220,33)" rx="2" ry="2" />
<text  x="108.79" y="991.5" ></text>
</g>
<g >
<title>operator delete (56 samples, 0.18%)</title><rect x="211.0" y="581" width="2.1" height="15.0" fill="rgb(235,158,37)" rx="2" ry="2" />
<text  x="214.01" y="591.5" ></text>
</g>
<g >
<title>operator new@plt (3 samples, 0.01%)</title><rect x="868.7" y="341" width="0.1" height="15.0" fill="rgb(233,84,17)" rx="2" ry="2" />
<text  x="871.66" y="351.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (3 samples, 0.01%)</title><rect x="917.7" y="453" width="0.1" height="15.0" fill="rgb(224,105,1)" rx="2" ry="2" />
<text  x="920.70" y="463.5" ></text>
</g>
<g >
<title>Game_Interpreter::IsRunning (31 samples, 0.10%)</title><rect x="412.1" y="789" width="1.1" height="15.0" fill="rgb(238,194,8)" rx="2" ry="2" />
<text  x="415.06" y="799.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (776 samples, 2.43%)</title><rect x="221.2" y="549" width="28.7" height="15.0" fill="rgb(214,116,41)" rx="2" ry="2" />
<text  x="224.25" y="559.5" >st..</text>
</g>
<g >
<title>new_sync_write (3 samples, 0.01%)</title><rect x="23.8" y="901" width="0.1" height="15.0" fill="rgb(249,227,39)" rx="2" ry="2" />
<text  x="26.78" y="911.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (11 samples, 0.03%)</title><rect x="244.9" y="277" width="0.4" height="15.0" fill="rgb(225,60,18)" rx="2" ry="2" />
<text  x="247.90" y="287.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (130 samples, 0.41%)</title><rect x="140.4" y="629" width="4.8" height="15.0" fill="rgb(210,205,2)" rx="2" ry="2" />
<text  x="143.42" y="639.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (122 samples, 0.38%)</title><rect x="211.0" y="741" width="4.5" height="15.0" fill="rgb(219,179,28)" rx="2" ry="2" />
<text  x="214.01" y="751.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (6 samples, 0.02%)</title><rect x="891.1" y="469" width="0.2" height="15.0" fill="rgb(235,207,18)" rx="2" ry="2" />
<text  x="894.09" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (18 samples, 0.06%)</title><rect x="894.5" y="405" width="0.6" height="15.0" fill="rgb(225,224,34)" rx="2" ry="2" />
<text  x="897.45" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (676 samples, 2.12%)</title><rect x="1075.9" y="757" width="25.0" height="15.0" fill="rgb(223,170,17)" rx="2" ry="2" />
<text  x="1078.91" y="767.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (3 samples, 0.01%)</title><rect x="154.9" y="581" width="0.1" height="15.0" fill="rgb(252,9,29)" rx="2" ry="2" />
<text  x="157.91" y="591.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (8 samples, 0.03%)</title><rect x="873.5" y="469" width="0.3" height="15.0" fill="rgb(243,105,29)" rx="2" ry="2" />
<text  x="876.50" y="479.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (5 samples, 0.02%)</title><rect x="792.5" y="389" width="0.2" height="15.0" fill="rgb(228,82,5)" rx="2" ry="2" />
<text  x="795.53" y="399.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (5 samples, 0.02%)</title><rect x="793.9" y="373" width="0.2" height="15.0" fill="rgb(223,136,4)" rx="2" ry="2" />
<text  x="796.89" y="383.5" ></text>
</g>
<g >
<title>do_page_fault (138 samples, 0.43%)</title><rect x="227.8" y="421" width="5.1" height="15.0" fill="rgb(232,24,21)" rx="2" ry="2" />
<text  x="230.75" y="431.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.01%)</title><rect x="134.7" y="389" width="0.2" height="15.0" fill="rgb(226,48,50)" rx="2" ry="2" />
<text  x="137.73" y="399.5" ></text>
</g>
<g >
<title>unmap_single_vma (17 samples, 0.05%)</title><rect x="203.1" y="165" width="0.6" height="15.0" fill="rgb(254,2,18)" rx="2" ry="2" />
<text  x="206.06" y="175.5" ></text>
</g>
<g >
<title>sock_poll (5 samples, 0.02%)</title><rect x="22.1" y="933" width="0.2" height="15.0" fill="rgb(209,108,39)" rx="2" ry="2" />
<text  x="25.12" y="943.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (4 samples, 0.01%)</title><rect x="1169.6" y="773" width="0.1" height="15.0" fill="rgb(252,156,16)" rx="2" ry="2" />
<text  x="1172.56" y="783.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (17 samples, 0.05%)</title><rect x="639.7" y="629" width="0.6" height="15.0" fill="rgb(251,3,38)" rx="2" ry="2" />
<text  x="642.67" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (6 samples, 0.02%)</title><rect x="615.1" y="709" width="0.2" height="15.0" fill="rgb(229,181,2)" rx="2" ry="2" />
<text  x="618.10" y="719.5" ></text>
</g>
<g >
<title>Window_Message::Update (23 samples, 0.07%)</title><rect x="1179.5" y="853" width="0.9" height="15.0" fill="rgb(216,181,47)" rx="2" ry="2" />
<text  x="1182.50" y="863.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="764.7" y="421" width="0.1" height="15.0" fill="rgb(218,80,3)" rx="2" ry="2" />
<text  x="767.70" y="431.5" ></text>
</g>
<g >
<title>[unknown] (/tmp/.glbNhnWa (3 samples, 0.01%)</title><rect x="129.4" y="997" width="0.1" height="15.0" fill="rgb(249,197,10)" rx="2" ry="2" />
<text  x="132.41" y="1007.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (4 samples, 0.01%)</title><rect x="1153.0" y="789" width="0.1" height="15.0" fill="rgb(253,168,38)" rx="2" ry="2" />
<text  x="1155.97" y="799.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (39 samples, 0.12%)</title><rect x="689.8" y="533" width="1.4" height="15.0" fill="rgb(241,174,14)" rx="2" ry="2" />
<text  x="692.75" y="543.5" ></text>
</g>
<g >
<title>std::__weak_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__weak_count (4 samples, 0.01%)</title><rect x="705.3" y="629" width="0.2" height="15.0" fill="rgb(230,190,26)" rx="2" ry="2" />
<text  x="708.35" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (61 samples, 0.19%)</title><rect x="1091.7" y="725" width="2.2" height="15.0" fill="rgb(228,183,0)" rx="2" ry="2" />
<text  x="1094.66" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (45 samples, 0.14%)</title><rect x="50.1" y="981" width="1.7" height="15.0" fill="rgb(230,172,7)" rx="2" ry="2" />
<text  x="53.10" y="991.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (45 samples, 0.14%)</title><rect x="717.2" y="597" width="1.7" height="15.0" fill="rgb(254,227,27)" rx="2" ry="2" />
<text  x="720.25" y="607.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (3 samples, 0.01%)</title><rect x="136.1" y="293" width="0.1" height="15.0" fill="rgb(212,120,17)" rx="2" ry="2" />
<text  x="139.06" y="303.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (6 samples, 0.02%)</title><rect x="86.8" y="981" width="0.3" height="15.0" fill="rgb(231,31,46)" rx="2" ry="2" />
<text  x="89.83" y="991.5" ></text>
</g>
<g >
<title>error_entry (3 samples, 0.01%)</title><rect x="135.4" y="405" width="0.1" height="15.0" fill="rgb(217,145,46)" rx="2" ry="2" />
<text  x="138.43" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.01%)</title><rect x="134.7" y="357" width="0.1" height="15.0" fill="rgb(254,186,16)" rx="2" ry="2" />
<text  x="137.73" y="367.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_destroy (185 samples, 0.58%)</title><rect x="944.2" y="629" width="6.8" height="15.0" fill="rgb(248,7,41)" rx="2" ry="2" />
<text  x="947.20" y="639.5" ></text>
</g>
<g >
<title>free@plt (3 samples, 0.01%)</title><rect x="912.7" y="325" width="0.1" height="15.0" fill="rgb(244,25,35)" rx="2" ry="2" />
<text  x="915.71" y="335.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (5 samples, 0.02%)</title><rect x="919.4" y="485" width="0.2" height="15.0" fill="rgb(210,121,13)" rx="2" ry="2" />
<text  x="922.40" y="495.5" ></text>
</g>
<g >
<title>__interceptor_free (101 samples, 0.32%)</title><rect x="200.7" y="389" width="3.8" height="15.0" fill="rgb(212,41,54)" rx="2" ry="2" />
<text  x="203.74" y="399.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (604 samples, 1.89%)</title><rect x="161.3" y="773" width="22.4" height="15.0" fill="rgb(237,183,27)" rx="2" ry="2" />
<text  x="164.34" y="783.5" >s..</text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (7 samples, 0.02%)</title><rect x="919.3" y="501" width="0.3" height="15.0" fill="rgb(217,86,34)" rx="2" ry="2" />
<text  x="922.33" y="511.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_weak_add_ref (5 samples, 0.02%)</title><rect x="70.6" y="981" width="0.2" height="15.0" fill="rgb(233,10,14)" rx="2" ry="2" />
<text  x="73.61" y="991.5" ></text>
</g>
<g >
<title>Bitmap::GetHeight (7 samples, 0.02%)</title><rect x="1157.0" y="789" width="0.3" height="15.0" fill="rgb(214,99,9)" rx="2" ry="2" />
<text  x="1160.03" y="799.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (74 samples, 0.23%)</title><rect x="19.1" y="821" width="2.8" height="15.0" fill="rgb(230,164,19)" rx="2" ry="2" />
<text  x="22.13" y="831.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (91 samples, 0.29%)</title><rect x="169.7" y="533" width="3.4" height="15.0" fill="rgb(233,213,2)" rx="2" ry="2" />
<text  x="172.73" y="543.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (3 samples, 0.01%)</title><rect x="258.5" y="805" width="0.1" height="15.0" fill="rgb(215,106,40)" rx="2" ry="2" />
<text  x="261.50" y="815.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (38 samples, 0.12%)</title><rect x="887.5" y="485" width="1.4" height="15.0" fill="rgb(248,17,12)" rx="2" ry="2" />
<text  x="890.51" y="495.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.01%)</title><rect x="784.3" y="485" width="0.1" height="15.0" fill="rgb(248,8,26)" rx="2" ry="2" />
<text  x="787.32" y="495.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (7 samples, 0.02%)</title><rect x="865.9" y="277" width="0.2" height="15.0" fill="rgb(242,42,24)" rx="2" ry="2" />
<text  x="868.85" y="287.5" ></text>
</g>
<g >
<title>operator== (3 samples, 0.01%)</title><rect x="60.2" y="981" width="0.1" height="15.0" fill="rgb(242,189,47)" rx="2" ry="2" />
<text  x="63.22" y="991.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocator&lt;Bitmap&gt; (3 samples, 0.01%)</title><rect x="916.3" y="421" width="0.1" height="15.0" fill="rgb(208,57,38)" rx="2" ry="2" />
<text  x="919.26" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt;::_M_head (5 samples, 0.02%)</title><rect x="982.6" y="645" width="0.2" height="15.0" fill="rgb(206,16,2)" rx="2" ry="2" />
<text  x="985.60" y="655.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (149 samples, 0.47%)</title><rect x="194.9" y="709" width="5.5" height="15.0" fill="rgb(206,38,11)" rx="2" ry="2" />
<text  x="197.90" y="719.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (85 samples, 0.27%)</title><rect x="250.3" y="597" width="3.1" height="15.0" fill="rgb(252,109,24)" rx="2" ry="2" />
<text  x="253.29" y="607.5" ></text>
</g>
<g >
<title>__split_vma (3 samples, 0.01%)</title><rect x="201.5" y="197" width="0.1" height="15.0" fill="rgb(219,50,8)" rx="2" ry="2" />
<text  x="204.51" y="207.5" ></text>
</g>
<g >
<title>std::make_pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt;&amp;&gt; (196 samples, 0.61%)</title><rect x="685.0" y="677" width="7.3" height="15.0" fill="rgb(215,106,24)" rx="2" ry="2" />
<text  x="688.02" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::destroy&lt;Bitmap&gt; (190 samples, 0.60%)</title><rect x="184.3" y="437" width="7.0" height="15.0" fill="rgb(207,18,22)" rx="2" ry="2" />
<text  x="187.33" y="447.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (56 samples, 0.18%)</title><rect x="211.0" y="549" width="2.1" height="15.0" fill="rgb(218,117,14)" rx="2" ry="2" />
<text  x="214.01" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (111 samples, 0.35%)</title><rect x="215.5" y="981" width="4.1" height="15.0" fill="rgb(211,48,26)" rx="2" ry="2" />
<text  x="218.52" y="991.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (284 samples, 0.89%)</title><rect x="224.6" y="453" width="10.5" height="15.0" fill="rgb(211,145,11)" rx="2" ry="2" />
<text  x="227.57" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (13 samples, 0.04%)</title><rect x="936.3" y="709" width="0.5" height="15.0" fill="rgb(220,203,9)" rx="2" ry="2" />
<text  x="939.33" y="719.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_init_functor (206 samples, 0.65%)</title><rect x="720.5" y="661" width="7.6" height="15.0" fill="rgb(225,160,21)" rx="2" ry="2" />
<text  x="723.46" y="671.5" ></text>
</g>
<g >
<title>std::move&lt;void (*&amp;)(std::_Any_data const&amp;, FileRequestResult*&amp;&amp;)&gt; (7 samples, 0.02%)</title><rect x="709.3" y="549" width="0.3" height="15.0" fill="rgb(240,167,32)" rx="2" ry="2" />
<text  x="712.34" y="559.5" ></text>
</g>
<g >
<title>Sprite::SetTone (26 samples, 0.08%)</title><rect x="882.7" y="485" width="1.0" height="15.0" fill="rgb(211,41,23)" rx="2" ry="2" />
<text  x="885.70" y="495.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::_M_head (6 samples, 0.02%)</title><rect x="73.9" y="981" width="0.2" height="15.0" fill="rgb(218,226,41)" rx="2" ry="2" />
<text  x="76.90" y="991.5" ></text>
</g>
<g >
<title>std::_Bit_const_iterator::_Bit_const_iterator (9 samples, 0.03%)</title><rect x="264.8" y="741" width="0.3" height="15.0" fill="rgb(240,162,44)" rx="2" ry="2" />
<text  x="267.78" y="751.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (54 samples, 0.17%)</title><rect x="196.5" y="581" width="2.0" height="15.0" fill="rgb(248,57,47)" rx="2" ry="2" />
<text  x="199.52" y="591.5" ></text>
</g>
<g >
<title>operator new@plt (5 samples, 0.02%)</title><rect x="994.3" y="709" width="0.2" height="15.0" fill="rgb(214,183,14)" rx="2" ry="2" />
<text  x="997.28" y="719.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (8 samples, 0.03%)</title><rect x="815.0" y="469" width="0.3" height="15.0" fill="rgb(244,59,32)" rx="2" ry="2" />
<text  x="818.03" y="479.5" ></text>
</g>
<g >
<title>std::tuple&lt;Game_Picture*, std::_Placeholder&lt;1&gt; &gt;::tuple&lt;Game_Picture*&amp;, std::_Placeholder&lt;1&gt; const&amp;, true&gt; (15 samples, 0.05%)</title><rect x="712.3" y="661" width="0.5" height="15.0" fill="rgb(231,57,25)" rx="2" ry="2" />
<text  x="715.26" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (5 samples, 0.02%)</title><rect x="616.0" y="741" width="0.2" height="15.0" fill="rgb(226,3,17)" rx="2" ry="2" />
<text  x="618.98" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::~vector (31 samples, 0.10%)</title><rect x="915.0" y="357" width="1.2" height="15.0" fill="rgb(226,6,53)" rx="2" ry="2" />
<text  x="918.04" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (5 samples, 0.02%)</title><rect x="515.9" y="741" width="0.2" height="15.0" fill="rgb(243,108,37)" rx="2" ry="2" />
<text  x="518.94" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt;::begin (6 samples, 0.02%)</title><rect x="112.0" y="981" width="0.3" height="15.0" fill="rgb(240,85,15)" rx="2" ry="2" />
<text  x="115.04" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::deallocate (38 samples, 0.12%)</title><rect x="250.3" y="389" width="1.4" height="15.0" fill="rgb(218,178,11)" rx="2" ry="2" />
<text  x="253.29" y="399.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_M_head (6 samples, 0.02%)</title><rect x="797.1" y="325" width="0.2" height="15.0" fill="rgb(253,152,0)" rx="2" ry="2" />
<text  x="800.07" y="335.5" ></text>
</g>
<g >
<title>std::_Bit_reference::operator bool (8 samples, 0.03%)</title><rect x="262.7" y="773" width="0.3" height="15.0" fill="rgb(228,183,22)" rx="2" ry="2" />
<text  x="265.71" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (4 samples, 0.01%)</title><rect x="477.1" y="677" width="0.1" height="15.0" fill="rgb(210,38,18)" rx="2" ry="2" />
<text  x="480.10" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (11 samples, 0.03%)</title><rect x="1170.9" y="789" width="0.4" height="15.0" fill="rgb(205,175,13)" rx="2" ry="2" />
<text  x="1173.89" y="799.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator* (44 samples, 0.14%)</title><rect x="653.0" y="661" width="1.6" height="15.0" fill="rgb(252,171,43)" rx="2" ry="2" />
<text  x="656.01" y="671.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (5 samples, 0.02%)</title><rect x="886.0" y="485" width="0.2" height="15.0" fill="rgb(227,158,10)" rx="2" ry="2" />
<text  x="888.99" y="495.5" ></text>
</g>
<g >
<title>generic_file_read_iter (5 samples, 0.02%)</title><rect x="22.6" y="869" width="0.2" height="15.0" fill="rgb(213,208,31)" rx="2" ry="2" />
<text  x="25.64" y="879.5" ></text>
</g>
<g >
<title>Game_Picture::Update (768 samples, 2.41%)</title><rect x="1149.1" y="821" width="28.4" height="15.0" fill="rgb(250,221,20)" rx="2" ry="2" />
<text  x="1152.09" y="831.5" >Ga..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.02%)</title><rect x="140.9" y="437" width="0.2" height="15.0" fill="rgb(228,147,46)" rx="2" ry="2" />
<text  x="143.90" y="447.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, FileRequestResult*&amp;&amp;, false&gt;::_Head_base&lt;FileRequestResult*&gt; (5 samples, 0.02%)</title><rect x="922.8" y="565" width="0.1" height="15.0" fill="rgb(212,154,14)" rx="2" ry="2" />
<text  x="925.76" y="575.5" ></text>
</g>
<g >
<title>Spriteset_Map::Update (12 samples, 0.04%)</title><rect x="1179.1" y="853" width="0.4" height="15.0" fill="rgb(249,169,1)" rx="2" ry="2" />
<text  x="1182.06" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (208 samples, 0.65%)</title><rect x="987.1" y="741" width="7.7" height="15.0" fill="rgb(218,125,54)" rx="2" ry="2" />
<text  x="990.14" y="751.5" ></text>
</g>
<g >
<title>operator new (142 samples, 0.44%)</title><rect x="174.0" y="549" width="5.3" height="15.0" fill="rgb(217,88,19)" rx="2" ry="2" />
<text  x="177.02" y="559.5" ></text>
</g>
<g >
<title>dequeue_entity (4 samples, 0.01%)</title><rect x="18.8" y="821" width="0.1" height="15.0" fill="rgb(239,68,1)" rx="2" ry="2" />
<text  x="21.80" y="831.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (10 samples, 0.03%)</title><rect x="210.6" y="597" width="0.4" height="15.0" fill="rgb(221,137,2)" rx="2" ry="2" />
<text  x="213.64" y="607.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (276 samples, 0.86%)</title><rect x="130.1" y="821" width="10.2" height="15.0" fill="rgb(218,184,10)" rx="2" ry="2" />
<text  x="133.07" y="831.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Impl::_M_alloc (5 samples, 0.02%)</title><rect x="905.0" y="405" width="0.1" height="15.0" fill="rgb(207,114,8)" rx="2" ry="2" />
<text  x="907.95" y="415.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (177 samples, 0.55%)</title><rect x="204.5" y="853" width="6.5" height="15.0" fill="rgb(233,179,45)" rx="2" ry="2" />
<text  x="207.47" y="863.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (3 samples, 0.01%)</title><rect x="998.4" y="709" width="0.1" height="15.0" fill="rgb(233,39,15)" rx="2" ry="2" />
<text  x="1001.41" y="719.5" ></text>
</g>
<g >
<title>Blend (41 samples, 0.13%)</title><rect x="870.9" y="485" width="1.5" height="15.0" fill="rgb(206,145,27)" rx="2" ry="2" />
<text  x="873.88" y="495.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (177 samples, 0.55%)</title><rect x="204.5" y="885" width="6.5" height="15.0" fill="rgb(241,147,31)" rx="2" ry="2" />
<text  x="207.47" y="895.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_ptr (17 samples, 0.05%)</title><rect x="47.3" y="981" width="0.6" height="15.0" fill="rgb(253,127,23)" rx="2" ry="2" />
<text  x="50.29" y="991.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (5 samples, 0.02%)</title><rect x="66.2" y="981" width="0.2" height="15.0" fill="rgb(252,155,35)" rx="2" ry="2" />
<text  x="69.21" y="991.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (8 samples, 0.03%)</title><rect x="888.9" y="485" width="0.3" height="15.0" fill="rgb(232,182,44)" rx="2" ry="2" />
<text  x="891.91" y="495.5" ></text>
</g>
<g >
<title>Game_Interpreter::ReserveSubcommandIndex (4 samples, 0.01%)</title><rect x="605.2" y="709" width="0.1" height="15.0" fill="rgb(244,169,48)" rx="2" ry="2" />
<text  x="608.16" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (4 samples, 0.01%)</title><rect x="604.8" y="661" width="0.1" height="15.0" fill="rgb(251,107,39)" rx="2" ry="2" />
<text  x="607.79" y="671.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (604 samples, 1.89%)</title><rect x="161.3" y="917" width="22.4" height="15.0" fill="rgb(252,114,10)" rx="2" ry="2" />
<text  x="164.34" y="927.5" >G..</text>
</g>
<g >
<title>std::__find_if&lt;int const*, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (11 samples, 0.03%)</title><rect x="80.1" y="981" width="0.4" height="15.0" fill="rgb(226,58,20)" rx="2" ry="2" />
<text  x="83.07" y="991.5" ></text>
</g>
<g >
<title>_start (25,037 samples, 78.41%)</title><rect x="257.6" y="997" width="925.3" height="15.0" fill="rgb(233,186,42)" rx="2" ry="2" />
<text  x="260.57" y="1007.5" >_start</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (7 samples, 0.02%)</title><rect x="1189.6" y="997" width="0.3" height="15.0" fill="rgb(248,29,25)" rx="2" ry="2" />
<text  x="1192.59" y="1007.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::~_Sp_counted_ptr_inplace (21 samples, 0.07%)</title><rect x="903.1" y="405" width="0.7" height="15.0" fill="rgb(251,197,53)" rx="2" ry="2" />
<text  x="906.07" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_addr (6 samples, 0.02%)</title><rect x="214.9" y="293" width="0.2" height="15.0" fill="rgb(218,129,25)" rx="2" ry="2" />
<text  x="217.93" y="303.5" ></text>
</g>
<g >
<title>Game_Screen::GetFlashColor (44 samples, 0.14%)</title><rect x="874.2" y="485" width="1.7" height="15.0" fill="rgb(251,153,49)" rx="2" ry="2" />
<text  x="877.24" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (3 samples, 0.01%)</title><rect x="785.8" y="485" width="0.1" height="15.0" fill="rgb(222,93,5)" rx="2" ry="2" />
<text  x="788.76" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (8 samples, 0.03%)</title><rect x="474.4" y="661" width="0.3" height="15.0" fill="rgb(244,189,3)" rx="2" ry="2" />
<text  x="477.44" y="671.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (85 samples, 0.27%)</title><rect x="250.3" y="485" width="3.1" height="15.0" fill="rgb(241,28,2)" rx="2" ry="2" />
<text  x="253.29" y="495.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::~_Sp_counted_ptr_inplace (7 samples, 0.02%)</title><rect x="72.5" y="981" width="0.2" height="15.0" fill="rgb(209,12,6)" rx="2" ry="2" />
<text  x="75.46" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::deallocate (39 samples, 0.12%)</title><rect x="238.6" y="373" width="1.4" height="15.0" fill="rgb(236,10,6)" rx="2" ry="2" />
<text  x="241.58" y="383.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (3 samples, 0.01%)</title><rect x="888.0" y="437" width="0.1" height="15.0" fill="rgb(242,116,12)" rx="2" ry="2" />
<text  x="890.95" y="447.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (63 samples, 0.20%)</title><rect x="161.6" y="565" width="2.4" height="15.0" fill="rgb(250,212,54)" rx="2" ry="2" />
<text  x="164.63" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (11 samples, 0.03%)</title><rect x="1027.5" y="725" width="0.4" height="15.0" fill="rgb(251,218,12)" rx="2" ry="2" />
<text  x="1030.46" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create@plt (6 samples, 0.02%)</title><rect x="994.5" y="709" width="0.3" height="15.0" fill="rgb(253,126,31)" rx="2" ry="2" />
<text  x="997.53" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (161 samples, 0.50%)</title><rect x="697.9" y="565" width="5.9" height="15.0" fill="rgb(237,201,45)" rx="2" ry="2" />
<text  x="700.88" y="575.5" ></text>
</g>
<g >
<title>Sprite::SetOx (4 samples, 0.01%)</title><rect x="1165.9" y="789" width="0.1" height="15.0" fill="rgb(212,39,42)" rx="2" ry="2" />
<text  x="1168.87" y="799.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.03%)</title><rect x="1183.1" y="997" width="0.4" height="15.0" fill="rgb(217,221,52)" rx="2" ry="2" />
<text  x="1186.13" y="1007.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (4 samples, 0.01%)</title><rect x="140.3" y="725" width="0.1" height="15.0" fill="rgb(213,94,4)" rx="2" ry="2" />
<text  x="143.27" y="735.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Game_Screen*, false&gt;::_M_head (3 samples, 0.01%)</title><rect x="1170.1" y="693" width="0.1" height="15.0" fill="rgb(241,172,22)" rx="2" ry="2" />
<text  x="1173.12" y="703.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocator&lt;int&gt; (3 samples, 0.01%)</title><rect x="91.5" y="981" width="0.1" height="15.0" fill="rgb(245,212,45)" rx="2" ry="2" />
<text  x="94.53" y="991.5" ></text>
</g>
<g >
<title>Game_Picture::Show (110 samples, 0.34%)</title><rect x="200.4" y="805" width="4.1" height="15.0" fill="rgb(253,224,51)" rx="2" ry="2" />
<text  x="203.40" y="815.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::operator== (8 samples, 0.03%)</title><rect x="197.4" y="373" width="0.3" height="15.0" fill="rgb(211,99,5)" rx="2" ry="2" />
<text  x="200.45" y="383.5" ></text>
</g>
<g >
<title>new_sync_read (9 samples, 0.03%)</title><rect x="22.6" y="901" width="0.4" height="15.0" fill="rgb(216,134,29)" rx="2" ry="2" />
<text  x="25.64" y="911.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandMovePicture (81 samples, 0.25%)</title><rect x="616.6" y="757" width="3.0" height="15.0" fill="rgb(230,98,38)" rx="2" ry="2" />
<text  x="619.58" y="767.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (10 samples, 0.03%)</title><rect x="99.4" y="981" width="0.4" height="15.0" fill="rgb(220,91,11)" rx="2" ry="2" />
<text  x="102.44" y="991.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.03%)</title><rect x="210.6" y="405" width="0.4" height="15.0" fill="rgb(235,73,47)" rx="2" ry="2" />
<text  x="213.64" y="415.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_init_functor (6 samples, 0.02%)</title><rect x="62.5" y="981" width="0.2" height="15.0" fill="rgb(226,0,28)" rx="2" ry="2" />
<text  x="65.48" y="991.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (276 samples, 0.86%)</title><rect x="130.1" y="565" width="10.2" height="15.0" fill="rgb(247,225,22)" rx="2" ry="2" />
<text  x="133.07" y="575.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (183 samples, 0.57%)</title><rect x="697.1" y="597" width="6.7" height="15.0" fill="rgb(219,32,31)" rx="2" ry="2" />
<text  x="700.07" y="607.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (119 samples, 0.37%)</title><rect x="179.3" y="581" width="4.4" height="15.0" fill="rgb(254,121,52)" rx="2" ry="2" />
<text  x="182.26" y="591.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (149 samples, 0.47%)</title><rect x="194.9" y="613" width="5.5" height="15.0" fill="rgb(211,229,7)" rx="2" ry="2" />
<text  x="197.90" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (10 samples, 0.03%)</title><rect x="1081.2" y="741" width="0.3" height="15.0" fill="rgb(219,138,37)" rx="2" ry="2" />
<text  x="1084.16" y="751.5" ></text>
</g>
<g >
<title>variables (7 samples, 0.02%)</title><rect x="592.6" y="725" width="0.2" height="15.0" fill="rgb(254,51,20)" rx="2" ry="2" />
<text  x="595.59" y="735.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (4 samples, 0.01%)</title><rect x="77.4" y="981" width="0.1" height="15.0" fill="rgb(211,162,1)" rx="2" ry="2" />
<text  x="80.37" y="991.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (3 samples, 0.01%)</title><rect x="966.8" y="645" width="0.1" height="15.0" fill="rgb(247,48,22)" rx="2" ry="2" />
<text  x="969.82" y="655.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (257 samples, 0.80%)</title><rect x="151.8" y="805" width="9.5" height="15.0" fill="rgb(212,140,8)" rx="2" ry="2" />
<text  x="154.84" y="815.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (776 samples, 2.43%)</title><rect x="221.2" y="757" width="28.7" height="15.0" fill="rgb(245,180,7)" rx="2" ry="2" />
<text  x="224.25" y="767.5" >Ga..</text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (432 samples, 1.35%)</title><rect x="791.2" y="437" width="16.0" height="15.0" fill="rgb(244,154,49)" rx="2" ry="2" />
<text  x="794.20" y="447.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (122 samples, 0.38%)</title><rect x="211.0" y="933" width="4.5" height="15.0" fill="rgb(232,77,43)" rx="2" ry="2" />
<text  x="214.01" y="943.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (5 samples, 0.02%)</title><rect x="81.9" y="981" width="0.2" height="15.0" fill="rgb(207,62,13)" rx="2" ry="2" />
<text  x="84.92" y="991.5" ></text>
</g>
<g >
<title>Bitmap::width (10 samples, 0.03%)</title><rect x="897.6" y="469" width="0.4" height="15.0" fill="rgb(206,168,49)" rx="2" ry="2" />
<text  x="900.63" y="479.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (208 samples, 0.65%)</title><rect x="183.7" y="725" width="7.6" height="15.0" fill="rgb(237,84,49)" rx="2" ry="2" />
<text  x="186.66" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::destroy&lt;Bitmap&gt; (10 samples, 0.03%)</title><rect x="210.6" y="485" width="0.4" height="15.0" fill="rgb(213,183,2)" rx="2" ry="2" />
<text  x="213.64" y="495.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (183 samples, 0.57%)</title><rect x="792.7" y="389" width="6.8" height="15.0" fill="rgb(254,103,22)" rx="2" ry="2" />
<text  x="795.71" y="399.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (142 samples, 0.44%)</title><rect x="174.0" y="533" width="5.3" height="15.0" fill="rgb(224,104,4)" rx="2" ry="2" />
<text  x="177.02" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_ptr (15 samples, 0.05%)</title><rect x="46.2" y="981" width="0.5" height="15.0" fill="rgb(228,203,52)" rx="2" ry="2" />
<text  x="49.18" y="991.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (130 samples, 0.41%)</title><rect x="140.4" y="853" width="4.8" height="15.0" fill="rgb(242,27,53)" rx="2" ry="2" />
<text  x="143.42" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::end (9 samples, 0.03%)</title><rect x="265.1" y="757" width="0.3" height="15.0" fill="rgb(233,159,49)" rx="2" ry="2" />
<text  x="268.11" y="767.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (5 samples, 0.02%)</title><rect x="1171.4" y="709" width="0.2" height="15.0" fill="rgb(242,50,38)" rx="2" ry="2" />
<text  x="1174.45" y="719.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (18 samples, 0.06%)</title><rect x="155.3" y="565" width="0.6" height="15.0" fill="rgb(252,195,38)" rx="2" ry="2" />
<text  x="158.28" y="575.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::reset (97 samples, 0.30%)</title><rect x="972.1" y="725" width="3.5" height="15.0" fill="rgb(209,3,41)" rx="2" ry="2" />
<text  x="975.06" y="735.5" ></text>
</g>
<g >
<title>Player::IsRPG2k3E (3 samples, 0.01%)</title><rect x="1048.3" y="757" width="0.2" height="15.0" fill="rgb(207,207,6)" rx="2" ry="2" />
<text  x="1051.34" y="767.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (8 samples, 0.03%)</title><rect x="196.2" y="517" width="0.3" height="15.0" fill="rgb(220,18,25)" rx="2" ry="2" />
<text  x="199.19" y="527.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.01%)</title><rect x="1180.4" y="821" width="0.1" height="15.0" fill="rgb(221,41,37)" rx="2" ry="2" />
<text  x="1183.35" y="831.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (67 samples, 0.21%)</title><rect x="149.4" y="437" width="2.4" height="15.0" fill="rgb(251,153,36)" rx="2" ry="2" />
<text  x="152.36" y="447.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~tuple (146 samples, 0.46%)</title><rect x="155.9" y="613" width="5.4" height="15.0" fill="rgb(252,13,43)" rx="2" ry="2" />
<text  x="158.94" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (53 samples, 0.17%)</title><rect x="177.3" y="485" width="2.0" height="15.0" fill="rgb(213,165,1)" rx="2" ry="2" />
<text  x="180.30" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::end (17 samples, 0.05%)</title><rect x="681.7" y="661" width="0.6" height="15.0" fill="rgb(240,53,40)" rx="2" ry="2" />
<text  x="684.69" y="671.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (14 samples, 0.04%)</title><rect x="129.6" y="965" width="0.5" height="15.0" fill="rgb(242,159,43)" rx="2" ry="2" />
<text  x="132.56" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (7 samples, 0.02%)</title><rect x="1179.9" y="725" width="0.3" height="15.0" fill="rgb(219,112,5)" rx="2" ry="2" />
<text  x="1182.91" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (16 samples, 0.05%)</title><rect x="266.3" y="773" width="0.6" height="15.0" fill="rgb(242,161,8)" rx="2" ry="2" />
<text  x="269.33" y="783.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (14 samples, 0.04%)</title><rect x="178.7" y="469" width="0.5" height="15.0" fill="rgb(249,61,35)" rx="2" ry="2" />
<text  x="181.71" y="479.5" ></text>
</g>
<g >
<title>__gthread_active_p (3 samples, 0.01%)</title><rect x="944.1" y="613" width="0.1" height="15.0" fill="rgb(248,228,11)" rx="2" ry="2" />
<text  x="947.09" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (94 samples, 0.29%)</title><rect x="700.2" y="517" width="3.5" height="15.0" fill="rgb(220,105,48)" rx="2" ry="2" />
<text  x="703.25" y="527.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (4 samples, 0.01%)</title><rect x="1048.2" y="757" width="0.1" height="15.0" fill="rgb(219,163,31)" rx="2" ry="2" />
<text  x="1051.20" y="767.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (4 samples, 0.01%)</title><rect x="818.4" y="405" width="0.2" height="15.0" fill="rgb(206,39,54)" rx="2" ry="2" />
<text  x="821.43" y="415.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (51 samples, 0.16%)</title><rect x="198.5" y="549" width="1.9" height="15.0" fill="rgb(212,154,19)" rx="2" ry="2" />
<text  x="201.52" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (42 samples, 0.13%)</title><rect x="974.1" y="645" width="1.5" height="15.0" fill="rgb(251,15,8)" rx="2" ry="2" />
<text  x="977.06" y="655.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::function (166 samples, 0.52%)</title><rect x="685.4" y="645" width="6.1" height="15.0" fill="rgb(250,113,16)" rx="2" ry="2" />
<text  x="688.39" y="655.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (8 samples, 0.03%)</title><rect x="24.0" y="997" width="0.3" height="15.0" fill="rgb(215,32,34)" rx="2" ry="2" />
<text  x="27.01" y="1007.5" ></text>
</g>
<g >
<title>Tone::Tone (6 samples, 0.02%)</title><rect x="963.3" y="693" width="0.2" height="15.0" fill="rgb(231,24,2)" rx="2" ry="2" />
<text  x="966.27" y="703.5" ></text>
</g>
<g >
<title>mmap_region (4 samples, 0.01%)</title><rect x="135.2" y="309" width="0.2" height="15.0" fill="rgb(237,49,41)" rx="2" ry="2" />
<text  x="138.21" y="319.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (503 samples, 1.58%)</title><rect x="544.6" y="741" width="18.6" height="15.0" fill="rgb(220,58,16)" rx="2" ry="2" />
<text  x="547.62" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (12 samples, 0.04%)</title><rect x="514.5" y="725" width="0.4" height="15.0" fill="rgb(233,11,14)" rx="2" ry="2" />
<text  x="517.50" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::destroy&lt;Bitmap&gt; (268 samples, 0.84%)</title><rect x="240.0" y="389" width="9.9" height="15.0" fill="rgb(216,98,18)" rx="2" ry="2" />
<text  x="243.02" y="399.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (63 samples, 0.20%)</title><rect x="812.6" y="469" width="2.4" height="15.0" fill="rgb(229,36,36)" rx="2" ry="2" />
<text  x="815.63" y="479.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (13 samples, 0.04%)</title><rect x="718.4" y="565" width="0.4" height="15.0" fill="rgb(205,27,10)" rx="2" ry="2" />
<text  x="721.35" y="575.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (208 samples, 0.65%)</title><rect x="183.7" y="565" width="7.6" height="15.0" fill="rgb(240,205,37)" rx="2" ry="2" />
<text  x="186.66" y="575.5" ></text>
</g>
<g >
<title>do_mmap (3 samples, 0.01%)</title><rect x="134.7" y="277" width="0.1" height="15.0" fill="rgb(227,63,45)" rx="2" ry="2" />
<text  x="137.73" y="287.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (146 samples, 0.46%)</title><rect x="155.9" y="533" width="5.4" height="15.0" fill="rgb(245,2,15)" rx="2" ry="2" />
<text  x="158.94" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (3 samples, 0.01%)</title><rect x="610.7" y="709" width="0.1" height="15.0" fill="rgb(229,29,40)" rx="2" ry="2" />
<text  x="613.70" y="719.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::size (16 samples, 0.05%)</title><rect x="509.4" y="709" width="0.6" height="15.0" fill="rgb(248,22,16)" rx="2" ry="2" />
<text  x="512.44" y="719.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (77 samples, 0.24%)</title><rect x="140.4" y="565" width="2.9" height="15.0" fill="rgb(220,41,50)" rx="2" ry="2" />
<text  x="143.42" y="575.5" ></text>
</g>
<g >
<title>Scene::MainFunction (25,033 samples, 78.40%)</title><rect x="257.7" y="917" width="925.2" height="15.0" fill="rgb(229,55,16)" rx="2" ry="2" />
<text  x="260.72" y="927.5" >Scene::MainFunction</text>
</g>
<g >
<title>operator!= (9 samples, 0.03%)</title><rect x="964.6" y="693" width="0.3" height="15.0" fill="rgb(251,157,39)" rx="2" ry="2" />
<text  x="967.60" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (4 samples, 0.01%)</title><rect x="499.5" y="693" width="0.2" height="15.0" fill="rgb(217,22,35)" rx="2" ry="2" />
<text  x="502.53" y="703.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (110 samples, 0.34%)</title><rect x="200.4" y="933" width="4.1" height="15.0" fill="rgb(232,100,4)" rx="2" ry="2" />
<text  x="203.40" y="943.5" ></text>
</g>
<g >
<title>std::move&lt;std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;&amp;&gt; (4 samples, 0.01%)</title><rect x="103.9" y="981" width="0.1" height="15.0" fill="rgb(205,24,46)" rx="2" ry="2" />
<text  x="106.87" y="991.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_left (9 samples, 0.03%)</title><rect x="671.6" y="645" width="0.3" height="15.0" fill="rgb(251,70,35)" rx="2" ry="2" />
<text  x="674.60" y="655.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (21 samples, 0.07%)</title><rect x="213.1" y="581" width="0.8" height="15.0" fill="rgb(222,207,0)" rx="2" ry="2" />
<text  x="216.08" y="591.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (51 samples, 0.16%)</title><rect x="198.5" y="517" width="1.9" height="15.0" fill="rgb(219,156,23)" rx="2" ry="2" />
<text  x="201.52" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (10 samples, 0.03%)</title><rect x="412.5" y="757" width="0.4" height="15.0" fill="rgb(232,84,7)" rx="2" ry="2" />
<text  x="415.54" y="767.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.01%)</title><rect x="137.5" y="453" width="0.1" height="15.0" fill="rgb(214,12,36)" rx="2" ry="2" />
<text  x="140.46" y="463.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (604 samples, 1.89%)</title><rect x="161.3" y="693" width="22.4" height="15.0" fill="rgb(234,77,50)" rx="2" ry="2" />
<text  x="164.34" y="703.5" >s..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Picture*, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl&lt;Game_Picture*&amp;, std::_Placeholder&lt;1&gt; const&amp;, void&gt; (8 samples, 0.03%)</title><rect x="712.5" y="645" width="0.3" height="15.0" fill="rgb(209,19,1)" rx="2" ry="2" />
<text  x="715.48" y="655.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (39 samples, 0.12%)</title><rect x="932.5" y="453" width="1.4" height="15.0" fill="rgb(225,32,6)" rx="2" ry="2" />
<text  x="935.48" y="463.5" ></text>
</g>
<g >
<title>Game_Map::GetDisplayY (11 samples, 0.03%)</title><rect x="35.1" y="981" width="0.4" height="15.0" fill="rgb(236,91,23)" rx="2" ry="2" />
<text  x="38.13" y="991.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (96 samples, 0.30%)</title><rect x="191.3" y="869" width="3.6" height="15.0" fill="rgb(245,172,52)" rx="2" ry="2" />
<text  x="194.35" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::end@plt (6 samples, 0.02%)</title><rect x="638.5" y="677" width="0.2" height="15.0" fill="rgb(207,116,6)" rx="2" ry="2" />
<text  x="641.53" y="687.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::get (8 samples, 0.03%)</title><rect x="83.9" y="981" width="0.3" height="15.0" fill="rgb(223,118,33)" rx="2" ry="2" />
<text  x="86.91" y="991.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (51 samples, 0.16%)</title><rect x="198.5" y="565" width="1.9" height="15.0" fill="rgb(217,174,42)" rx="2" ry="2" />
<text  x="201.52" y="575.5" ></text>
</g>
<g >
<title>__fget_light (4 samples, 0.01%)</title><rect x="18.2" y="917" width="0.1" height="15.0" fill="rgb(219,106,33)" rx="2" ry="2" />
<text  x="21.17" y="927.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Impl::~_Impl (10 samples, 0.03%)</title><rect x="903.4" y="389" width="0.4" height="15.0" fill="rgb(221,92,52)" rx="2" ry="2" />
<text  x="906.44" y="399.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (395 samples, 1.24%)</title><rect x="791.8" y="405" width="14.6" height="15.0" fill="rgb(229,76,19)" rx="2" ry="2" />
<text  x="794.79" y="415.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (4 samples, 0.01%)</title><rect x="140.3" y="933" width="0.1" height="15.0" fill="rgb(213,161,14)" rx="2" ry="2" />
<text  x="143.27" y="943.5" ></text>
</g>
<g >
<title>Bitmap::initialize_formats (43 samples, 0.13%)</title><rect x="138.7" y="533" width="1.6" height="15.0" fill="rgb(234,133,14)" rx="2" ry="2" />
<text  x="141.68" y="543.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (776 samples, 2.43%)</title><rect x="221.2" y="661" width="28.7" height="15.0" fill="rgb(212,40,34)" rx="2" ry="2" />
<text  x="224.25" y="671.5" >st..</text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;int&gt;&amp;&gt; (7 samples, 0.02%)</title><rect x="104.8" y="981" width="0.3" height="15.0" fill="rgb(254,217,10)" rx="2" ry="2" />
<text  x="107.79" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_ptr (5 samples, 0.02%)</title><rect x="681.4" y="613" width="0.2" height="15.0" fill="rgb(215,77,0)" rx="2" ry="2" />
<text  x="684.40" y="623.5" ></text>
</g>
<g >
<title>do_nanosleep (24 samples, 0.08%)</title><rect x="1181.5" y="725" width="0.8" height="15.0" fill="rgb(246,67,10)" rx="2" ry="2" />
<text  x="1184.46" y="735.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::~__allocated_ptr (3 samples, 0.01%)</title><rect x="77.7" y="981" width="0.1" height="15.0" fill="rgb(248,46,44)" rx="2" ry="2" />
<text  x="80.71" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_construct&lt;char32_t const*&gt; (4 samples, 0.01%)</title><rect x="986.0" y="661" width="0.1" height="15.0" fill="rgb(238,117,7)" rx="2" ry="2" />
<text  x="988.96" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_valptr (9 samples, 0.03%)</title><rect x="214.8" y="325" width="0.3" height="15.0" fill="rgb(254,210,12)" rx="2" ry="2" />
<text  x="217.82" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (276 samples, 0.86%)</title><rect x="130.1" y="597" width="10.2" height="15.0" fill="rgb(230,80,23)" rx="2" ry="2" />
<text  x="133.07" y="607.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (10 samples, 0.03%)</title><rect x="64.1" y="981" width="0.3" height="15.0" fill="rgb(234,150,8)" rx="2" ry="2" />
<text  x="67.07" y="991.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::operator bool (28 samples, 0.09%)</title><rect x="1143.1" y="805" width="1.0" height="15.0" fill="rgb(232,105,35)" rx="2" ry="2" />
<text  x="1146.06" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (25 samples, 0.08%)</title><rect x="1101.4" y="773" width="0.9" height="15.0" fill="rgb(230,147,28)" rx="2" ry="2" />
<text  x="1104.41" y="783.5" ></text>
</g>
<g >
<title>__interceptor_free (50 samples, 0.16%)</title><rect x="198.6" y="405" width="1.8" height="15.0" fill="rgb(219,100,12)" rx="2" ry="2" />
<text  x="201.55" y="415.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (9 samples, 0.03%)</title><rect x="82.1" y="981" width="0.3" height="15.0" fill="rgb(231,76,23)" rx="2" ry="2" />
<text  x="85.10" y="991.5" ></text>
</g>
<g >
<title>__handle_mm_fault (114 samples, 0.36%)</title><rect x="228.2" y="373" width="4.2" height="15.0" fill="rgb(241,45,35)" rx="2" ry="2" />
<text  x="231.23" y="383.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (6 samples, 0.02%)</title><rect x="617.9" y="725" width="0.2" height="15.0" fill="rgb(215,183,6)" rx="2" ry="2" />
<text  x="620.87" y="735.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::_M_ptr (18 samples, 0.06%)</title><rect x="738.2" y="645" width="0.6" height="15.0" fill="rgb(247,211,29)" rx="2" ry="2" />
<text  x="741.16" y="655.5" ></text>
</g>
<g >
<title>FileRequestAsync::SetGraphicFile (5 samples, 0.02%)</title><rect x="30.2" y="981" width="0.2" height="15.0" fill="rgb(227,24,48)" rx="2" ry="2" />
<text  x="33.18" y="991.5" ></text>
</g>
<g >
<title>Sprite::SetOy (3 samples, 0.01%)</title><rect x="964.3" y="709" width="0.2" height="15.0" fill="rgb(232,150,45)" rx="2" ry="2" />
<text  x="967.34" y="719.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::~_Head_base (146 samples, 0.46%)</title><rect x="155.9" y="565" width="5.4" height="15.0" fill="rgb(232,102,38)" rx="2" ry="2" />
<text  x="158.94" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (53 samples, 0.17%)</title><rect x="377.5" y="741" width="2.0" height="15.0" fill="rgb(210,228,12)" rx="2" ry="2" />
<text  x="380.50" y="751.5" ></text>
</g>
<g >
<title>operator delete (144 samples, 0.45%)</title><rect x="945.6" y="565" width="5.3" height="15.0" fill="rgb(219,150,45)" rx="2" ry="2" />
<text  x="948.60" y="575.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (64 samples, 0.20%)</title><rect x="176.9" y="501" width="2.4" height="15.0" fill="rgb(220,223,28)" rx="2" ry="2" />
<text  x="179.90" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_valptr (3 samples, 0.01%)</title><rect x="667.0" y="677" width="0.1" height="15.0" fill="rgb(214,166,49)" rx="2" ry="2" />
<text  x="669.98" y="687.5" ></text>
</g>
<g >
<title>Sdl2Ui::ProcessEvents (61 samples, 0.19%)</title><rect x="1180.5" y="885" width="2.2" height="15.0" fill="rgb(248,124,3)" rx="2" ry="2" />
<text  x="1183.47" y="895.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (6 samples, 0.02%)</title><rect x="617.4" y="725" width="0.2" height="15.0" fill="rgb(206,163,31)" rx="2" ry="2" />
<text  x="620.43" y="735.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (103 samples, 0.32%)</title><rect x="715.3" y="613" width="3.8" height="15.0" fill="rgb(222,85,23)" rx="2" ry="2" />
<text  x="718.25" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (119 samples, 0.37%)</title><rect x="179.3" y="501" width="4.4" height="15.0" fill="rgb(241,130,13)" rx="2" ry="2" />
<text  x="182.26" y="511.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (3 samples, 0.01%)</title><rect x="1126.5" y="789" width="0.1" height="15.0" fill="rgb(227,167,54)" rx="2" ry="2" />
<text  x="1129.51" y="799.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (34 samples, 0.11%)</title><rect x="201.8" y="181" width="1.3" height="15.0" fill="rgb(253,143,9)" rx="2" ry="2" />
<text  x="204.81" y="191.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (776 samples, 2.43%)</title><rect x="221.2" y="613" width="28.7" height="15.0" fill="rgb(207,141,44)" rx="2" ry="2" />
<text  x="224.25" y="623.5" >st..</text>
</g>
<g >
<title>std::__weak_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::~__weak_ptr (5 samples, 0.02%)</title><rect x="711.3" y="661" width="0.2" height="15.0" fill="rgb(222,69,17)" rx="2" ry="2" />
<text  x="714.33" y="671.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__weak_ptr&lt;int, void&gt; (31 samples, 0.10%)</title><rect x="710.1" y="661" width="1.1" height="15.0" fill="rgb(236,43,23)" rx="2" ry="2" />
<text  x="713.08" y="671.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::_M_ptr (5 samples, 0.02%)</title><rect x="87.2" y="981" width="0.2" height="15.0" fill="rgb(235,39,10)" rx="2" ry="2" />
<text  x="90.24" y="991.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (6 samples, 0.02%)</title><rect x="867.5" y="293" width="0.2" height="15.0" fill="rgb(236,29,11)" rx="2" ry="2" />
<text  x="870.48" y="303.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (279 samples, 0.87%)</title><rect x="941.0" y="677" width="10.3" height="15.0" fill="rgb(225,156,39)" rx="2" ry="2" />
<text  x="944.02" y="687.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (4 samples, 0.01%)</title><rect x="136.0" y="309" width="0.2" height="15.0" fill="rgb(250,94,38)" rx="2" ry="2" />
<text  x="139.02" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_Rb_tree_iterator (7 samples, 0.02%)</title><rect x="682.1" y="645" width="0.2" height="15.0" fill="rgb(205,121,12)" rx="2" ry="2" />
<text  x="685.06" y="655.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (5 samples, 0.02%)</title><rect x="912.5" y="293" width="0.2" height="15.0" fill="rgb(247,213,32)" rx="2" ry="2" />
<text  x="915.53" y="303.5" ></text>
</g>
<g >
<title>Cache::Picture (77 samples, 0.24%)</title><rect x="211.0" y="613" width="2.9" height="15.0" fill="rgb(223,79,2)" rx="2" ry="2" />
<text  x="214.01" y="623.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (19 samples, 0.06%)</title><rect x="74.8" y="981" width="0.7" height="15.0" fill="rgb(236,217,31)" rx="2" ry="2" />
<text  x="77.82" y="991.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (9 samples, 0.03%)</title><rect x="204.0" y="197" width="0.3" height="15.0" fill="rgb(229,78,2)" rx="2" ry="2" />
<text  x="206.99" y="207.5" ></text>
</g>
<g >
<title>page_fault (16 samples, 0.05%)</title><rect x="135.6" y="405" width="0.6" height="15.0" fill="rgb(228,215,16)" rx="2" ry="2" />
<text  x="138.58" y="415.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (179 samples, 0.56%)</title><rect x="145.2" y="501" width="6.6" height="15.0" fill="rgb(253,23,27)" rx="2" ry="2" />
<text  x="148.23" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator++ (5 samples, 0.02%)</title><rect x="638.1" y="677" width="0.2" height="15.0" fill="rgb(223,174,40)" rx="2" ry="2" />
<text  x="641.08" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (54 samples, 0.17%)</title><rect x="196.5" y="437" width="2.0" height="15.0" fill="rgb(209,229,2)" rx="2" ry="2" />
<text  x="199.52" y="447.5" ></text>
</g>
<g >
<title>Drawable::GetPriorityForMapLayer (5 samples, 0.02%)</title><rect x="29.0" y="981" width="0.2" height="15.0" fill="rgb(214,208,47)" rx="2" ry="2" />
<text  x="32.00" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (14 samples, 0.04%)</title><rect x="594.2" y="741" width="0.5" height="15.0" fill="rgb(214,161,31)" rx="2" ry="2" />
<text  x="597.22" y="751.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (5,310 samples, 16.63%)</title><rect x="739.5" y="693" width="196.2" height="15.0" fill="rgb(219,166,53)" rx="2" ry="2" />
<text  x="742.46" y="703.5" >FileRequestAsync::Downloa..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (4 samples, 0.01%)</title><rect x="76.2" y="981" width="0.1" height="15.0" fill="rgb(242,210,50)" rx="2" ry="2" />
<text  x="79.15" y="991.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (177 samples, 0.55%)</title><rect x="204.5" y="757" width="6.5" height="15.0" fill="rgb(239,212,27)" rx="2" ry="2" />
<text  x="207.47" y="767.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (8 samples, 0.03%)</title><rect x="161.3" y="613" width="0.3" height="15.0" fill="rgb(240,219,35)" rx="2" ry="2" />
<text  x="164.34" y="623.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Game_Screen*, false&gt;::_M_head (13 samples, 0.04%)</title><rect x="65.0" y="981" width="0.4" height="15.0" fill="rgb(211,98,21)" rx="2" ry="2" />
<text  x="67.96" y="991.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (3 samples, 0.01%)</title><rect x="932.4" y="453" width="0.1" height="15.0" fill="rgb(226,70,7)" rx="2" ry="2" />
<text  x="935.37" y="463.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (776 samples, 2.43%)</title><rect x="221.2" y="677" width="28.7" height="15.0" fill="rgb(251,162,25)" rx="2" ry="2" />
<text  x="224.25" y="687.5" >Fi..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (66 samples, 0.21%)</title><rect x="134.1" y="437" width="2.4" height="15.0" fill="rgb(249,178,27)" rx="2" ry="2" />
<text  x="137.10" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (189 samples, 0.59%)</title><rect x="1093.9" y="741" width="7.0" height="15.0" fill="rgb(216,134,23)" rx="2" ry="2" />
<text  x="1096.91" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (6 samples, 0.02%)</title><rect x="266.1" y="773" width="0.2" height="15.0" fill="rgb(236,99,50)" rx="2" ry="2" />
<text  x="269.11" y="783.5" ></text>
</g>
<g >
<title>unmap_region (52 samples, 0.16%)</title><rect x="201.8" y="197" width="1.9" height="15.0" fill="rgb(215,24,3)" rx="2" ry="2" />
<text  x="204.77" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (45 samples, 0.14%)</title><rect x="213.9" y="389" width="1.6" height="15.0" fill="rgb(218,89,38)" rx="2" ry="2" />
<text  x="216.85" y="399.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (193 samples, 0.60%)</title><rect x="906.1" y="341" width="7.1" height="15.0" fill="rgb(240,51,37)" rx="2" ry="2" />
<text  x="909.06" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_M_begin (5 samples, 0.02%)</title><rect x="198.2" y="341" width="0.2" height="15.0" fill="rgb(247,0,29)" rx="2" ry="2" />
<text  x="201.22" y="351.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.02%)</title><rect x="782.5" y="373" width="0.2" height="15.0" fill="rgb(221,20,43)" rx="2" ry="2" />
<text  x="785.48" y="383.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (3 samples, 0.01%)</title><rect x="258.2" y="725" width="0.1" height="15.0" fill="rgb(241,16,12)" rx="2" ry="2" />
<text  x="261.20" y="735.5" ></text>
</g>
<g >
<title>Scene_Map::Update (149 samples, 0.47%)</title><rect x="194.9" y="965" width="5.5" height="15.0" fill="rgb(253,190,52)" rx="2" ry="2" />
<text  x="197.90" y="975.5" ></text>
</g>
<g >
<title>Game_Player::Update (52 samples, 0.16%)</title><rect x="1147.0" y="837" width="1.9" height="15.0" fill="rgb(206,57,1)" rx="2" ry="2" />
<text  x="1150.02" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (3 samples, 0.01%)</title><rect x="607.6" y="677" width="0.1" height="15.0" fill="rgb(215,66,47)" rx="2" ry="2" />
<text  x="610.59" y="687.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (37 samples, 0.12%)</title><rect x="614.6" y="741" width="1.4" height="15.0" fill="rgb(205,219,26)" rx="2" ry="2" />
<text  x="617.62" y="751.5" ></text>
</g>
<g >
<title>SDL_PumpEvents_REAL (20 samples, 0.06%)</title><rect x="1180.6" y="853" width="0.8" height="15.0" fill="rgb(209,135,12)" rx="2" ry="2" />
<text  x="1183.61" y="863.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (3 samples, 0.01%)</title><rect x="464.8" y="693" width="0.1" height="15.0" fill="rgb(209,37,37)" rx="2" ry="2" />
<text  x="467.83" y="703.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (45 samples, 0.14%)</title><rect x="213.9" y="613" width="1.6" height="15.0" fill="rgb(209,61,42)" rx="2" ry="2" />
<text  x="216.85" y="623.5" ></text>
</g>
<g >
<title>do_wp_page (8 samples, 0.03%)</title><rect x="137.1" y="373" width="0.3" height="15.0" fill="rgb(220,123,31)" rx="2" ry="2" />
<text  x="140.13" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate (3 samples, 0.01%)</title><rect x="92.2" y="981" width="0.1" height="15.0" fill="rgb(221,219,35)" rx="2" ry="2" />
<text  x="95.23" y="991.5" ></text>
</g>
<g >
<title>std::forward&lt;std::_Placeholder&lt;1&gt; const&amp;&gt; (7 samples, 0.02%)</title><rect x="93.7" y="981" width="0.3" height="15.0" fill="rgb(232,3,6)" rx="2" ry="2" />
<text  x="96.74" y="991.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (14 samples, 0.04%)</title><rect x="918.7" y="453" width="0.6" height="15.0" fill="rgb(206,83,12)" rx="2" ry="2" />
<text  x="921.74" y="463.5" ></text>
</g>
<g >
<title>Sprite::SetZoomX (3 samples, 0.01%)</title><rect x="42.1" y="981" width="0.1" height="15.0" fill="rgb(228,115,12)" rx="2" ry="2" />
<text  x="45.12" y="991.5" ></text>
</g>
<g >
<title>std::allocator&lt;Bitmap&gt;::allocator (4 samples, 0.01%)</title><rect x="862.7" y="341" width="0.2" height="15.0" fill="rgb(221,42,10)" rx="2" ry="2" />
<text  x="865.75" y="351.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::swap (42 samples, 0.13%)</title><rect x="939.5" y="677" width="1.5" height="15.0" fill="rgb(228,54,49)" rx="2" ry="2" />
<text  x="942.47" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (8 samples, 0.03%)</title><rect x="412.9" y="757" width="0.3" height="15.0" fill="rgb(254,151,17)" rx="2" ry="2" />
<text  x="415.91" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_key (4 samples, 0.01%)</title><rect x="68.8" y="981" width="0.2" height="15.0" fill="rgb(222,37,53)" rx="2" ry="2" />
<text  x="71.84" y="991.5" ></text>
</g>
<g >
<title>std::__stable_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (3 samples, 0.01%)</title><rect x="258.5" y="821" width="0.1" height="15.0" fill="rgb(253,127,41)" rx="2" ry="2" />
<text  x="261.50" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (3 samples, 0.01%)</title><rect x="986.6" y="677" width="0.1" height="15.0" fill="rgb(245,68,40)" rx="2" ry="2" />
<text  x="989.63" y="687.5" ></text>
</g>
<g >
<title>memcmp (6 samples, 0.02%)</title><rect x="812.0" y="453" width="0.3" height="15.0" fill="rgb(253,62,53)" rx="2" ry="2" />
<text  x="815.04" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::emplace_back&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (113 samples, 0.35%)</title><rect x="705.9" y="661" width="4.1" height="15.0" fill="rgb(244,171,12)" rx="2" ry="2" />
<text  x="708.86" y="671.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (23 samples, 0.07%)</title><rect x="796.4" y="341" width="0.9" height="15.0" fill="rgb(230,27,46)" rx="2" ry="2" />
<text  x="799.44" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_mutate (25 samples, 0.08%)</title><rect x="984.5" y="693" width="0.9" height="15.0" fill="rgb(222,190,46)" rx="2" ry="2" />
<text  x="987.48" y="703.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.04%)</title><rect x="134.9" y="405" width="0.5" height="15.0" fill="rgb(217,197,41)" rx="2" ry="2" />
<text  x="137.88" y="415.5" ></text>
</g>
<g >
<title>__do_page_fault (133 samples, 0.42%)</title><rect x="227.9" y="405" width="4.9" height="15.0" fill="rgb(242,213,49)" rx="2" ry="2" />
<text  x="230.86" y="415.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&gt; (5 samples, 0.02%)</title><rect x="73.0" y="981" width="0.2" height="15.0" fill="rgb(222,204,0)" rx="2" ry="2" />
<text  x="75.97" y="991.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (3 samples, 0.01%)</title><rect x="154.9" y="597" width="0.1" height="15.0" fill="rgb(228,141,42)" rx="2" ry="2" />
<text  x="157.91" y="607.5" ></text>
</g>
<g >
<title>Game_Map::GetBushDepth (3 samples, 0.01%)</title><rect x="1179.2" y="805" width="0.1" height="15.0" fill="rgb(245,169,2)" rx="2" ry="2" />
<text  x="1182.17" y="815.5" ></text>
</g>
<g >
<title>operator delete (14 samples, 0.04%)</title><rect x="194.9" y="549" width="0.5" height="15.0" fill="rgb(209,20,34)" rx="2" ry="2" />
<text  x="197.90" y="559.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (25 samples, 0.08%)</title><rect x="155.0" y="597" width="0.9" height="15.0" fill="rgb(227,17,8)" rx="2" ry="2" />
<text  x="158.02" y="607.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (122 samples, 0.38%)</title><rect x="211.0" y="645" width="4.5" height="15.0" fill="rgb(233,40,4)" rx="2" ry="2" />
<text  x="214.01" y="655.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (41 samples, 0.13%)</title><rect x="158.3" y="501" width="1.6" height="15.0" fill="rgb(236,9,25)" rx="2" ry="2" />
<text  x="161.35" y="511.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (43 samples, 0.13%)</title><rect x="141.7" y="437" width="1.6" height="15.0" fill="rgb(237,25,15)" rx="2" ry="2" />
<text  x="144.68" y="447.5" ></text>
</g>
<g >
<title>all (31,929 samples, 100%)</title><rect x="10.0" y="1029" width="1180.0" height="15.0" fill="rgb(211,225,41)" rx="2" ry="2" />
<text  x="13.00" y="1039.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (177 samples, 0.55%)</title><rect x="204.5" y="965" width="6.5" height="15.0" fill="rgb(232,205,3)" rx="2" ry="2" />
<text  x="207.47" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (4 samples, 0.01%)</title><rect x="936.2" y="677" width="0.1" height="15.0" fill="rgb(254,62,21)" rx="2" ry="2" />
<text  x="939.18" y="687.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (149 samples, 0.47%)</title><rect x="194.9" y="741" width="5.5" height="15.0" fill="rgb(212,18,51)" rx="2" ry="2" />
<text  x="197.90" y="751.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (20 samples, 0.06%)</title><rect x="144.5" y="437" width="0.7" height="15.0" fill="rgb(229,77,24)" rx="2" ry="2" />
<text  x="147.49" y="447.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (276 samples, 0.86%)</title><rect x="130.1" y="773" width="10.2" height="15.0" fill="rgb(209,29,32)" rx="2" ry="2" />
<text  x="133.07" y="783.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (179 samples, 0.56%)</title><rect x="145.2" y="629" width="6.6" height="15.0" fill="rgb(250,80,32)" rx="2" ry="2" />
<text  x="148.23" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (87 samples, 0.27%)</title><rect x="408.4" y="741" width="3.2" height="15.0" fill="rgb(209,171,33)" rx="2" ry="2" />
<text  x="411.36" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (5 samples, 0.02%)</title><rect x="51.8" y="981" width="0.1" height="15.0" fill="rgb(232,119,23)" rx="2" ry="2" />
<text  x="54.76" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (125 samples, 0.39%)</title><rect x="863.4" y="357" width="4.6" height="15.0" fill="rgb(217,142,15)" rx="2" ry="2" />
<text  x="866.41" y="367.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (23 samples, 0.07%)</title><rect x="202.0" y="53" width="0.9" height="15.0" fill="rgb(239,40,46)" rx="2" ry="2" />
<text  x="205.03" y="63.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_addr (3 samples, 0.01%)</title><rect x="681.5" y="597" width="0.1" height="15.0" fill="rgb(237,173,12)" rx="2" ry="2" />
<text  x="684.47" y="607.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (7 samples, 0.02%)</title><rect x="155.0" y="581" width="0.3" height="15.0" fill="rgb(252,67,21)" rx="2" ry="2" />
<text  x="158.02" y="591.5" ></text>
</g>
<g >
<title>tick_sched_timer (3 samples, 0.01%)</title><rect x="1101.3" y="709" width="0.1" height="15.0" fill="rgb(224,143,16)" rx="2" ry="2" />
<text  x="1104.27" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_destroy (7 samples, 0.02%)</title><rect x="985.0" y="661" width="0.3" height="15.0" fill="rgb(205,21,6)" rx="2" ry="2" />
<text  x="988.04" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_write (17 samples, 0.05%)</title><rect x="23.3" y="965" width="0.6" height="15.0" fill="rgb(254,28,45)" rx="2" ry="2" />
<text  x="26.27" y="975.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (177 samples, 0.55%)</title><rect x="204.5" y="869" width="6.5" height="15.0" fill="rgb(244,229,23)" rx="2" ry="2" />
<text  x="207.47" y="879.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (3 samples, 0.01%)</title><rect x="888.7" y="453" width="0.1" height="15.0" fill="rgb(241,113,7)" rx="2" ry="2" />
<text  x="891.65" y="463.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (276 samples, 0.86%)</title><rect x="130.1" y="725" width="10.2" height="15.0" fill="rgb(211,48,53)" rx="2" ry="2" />
<text  x="133.07" y="735.5" ></text>
</g>
<g >
<title>operator delete (39 samples, 0.12%)</title><rect x="238.6" y="357" width="1.4" height="15.0" fill="rgb(238,220,31)" rx="2" ry="2" />
<text  x="241.58" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (3 samples, 0.01%)</title><rect x="705.6" y="661" width="0.2" height="15.0" fill="rgb(229,152,31)" rx="2" ry="2" />
<text  x="708.64" y="671.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (63 samples, 0.20%)</title><rect x="161.6" y="549" width="2.4" height="15.0" fill="rgb(228,49,54)" rx="2" ry="2" />
<text  x="164.63" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::new_allocator (3 samples, 0.01%)</title><rect x="696.2" y="533" width="0.1" height="15.0" fill="rgb(231,83,23)" rx="2" ry="2" />
<text  x="699.18" y="543.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.01%)</title><rect x="161.5" y="485" width="0.1" height="15.0" fill="rgb(219,42,22)" rx="2" ry="2" />
<text  x="164.49" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator* (9 samples, 0.03%)</title><rect x="762.3" y="453" width="0.4" height="15.0" fill="rgb(206,212,4)" rx="2" ry="2" />
<text  x="765.33" y="463.5" ></text>
</g>
<g >
<title>std::forward&lt;int&amp;&gt; (4 samples, 0.01%)</title><rect x="858.3" y="437" width="0.2" height="15.0" fill="rgb(217,85,0)" rx="2" ry="2" />
<text  x="861.35" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base (8 samples, 0.03%)</title><rect x="52.9" y="981" width="0.3" height="15.0" fill="rgb(229,33,45)" rx="2" ry="2" />
<text  x="55.91" y="991.5" ></text>
</g>
<g >
<title>std::move&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;&amp;&gt; (3 samples, 0.01%)</title><rect x="705.8" y="661" width="0.1" height="15.0" fill="rgb(210,176,49)" rx="2" ry="2" />
<text  x="708.75" y="671.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (12 samples, 0.04%)</title><rect x="901.5" y="437" width="0.4" height="15.0" fill="rgb(240,63,52)" rx="2" ry="2" />
<text  x="904.48" y="447.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (3 samples, 0.01%)</title><rect x="203.0" y="85" width="0.1" height="15.0" fill="rgb(226,43,33)" rx="2" ry="2" />
<text  x="205.95" y="95.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::swap (6 samples, 0.02%)</title><rect x="84.4" y="981" width="0.3" height="15.0" fill="rgb(219,100,51)" rx="2" ry="2" />
<text  x="87.43" y="991.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (8 samples, 0.03%)</title><rect x="232.1" y="341" width="0.3" height="15.0" fill="rgb(254,2,37)" rx="2" ry="2" />
<text  x="235.11" y="351.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (257 samples, 0.80%)</title><rect x="151.8" y="965" width="9.5" height="15.0" fill="rgb(242,187,29)" rx="2" ry="2" />
<text  x="154.84" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int&gt; (7 samples, 0.02%)</title><rect x="696.7" y="565" width="0.3" height="15.0" fill="rgb(225,57,51)" rx="2" ry="2" />
<text  x="699.73" y="575.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (149 samples, 0.47%)</title><rect x="194.9" y="677" width="5.5" height="15.0" fill="rgb(219,195,1)" rx="2" ry="2" />
<text  x="197.90" y="687.5" ></text>
</g>
<g >
<title>Game_Screen::GetPicture (9 samples, 0.03%)</title><rect x="38.1" y="981" width="0.3" height="15.0" fill="rgb(239,64,53)" rx="2" ry="2" />
<text  x="41.09" y="991.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (432 samples, 1.35%)</title><rect x="761.3" y="469" width="15.9" height="15.0" fill="rgb(232,177,49)" rx="2" ry="2" />
<text  x="764.26" y="479.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::~__allocated_ptr (152 samples, 0.48%)</title><rect x="945.3" y="613" width="5.6" height="15.0" fill="rgb(227,28,15)" rx="2" ry="2" />
<text  x="948.31" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char32_t&gt;::allocate (9 samples, 0.03%)</title><rect x="984.6" y="645" width="0.4" height="15.0" fill="rgb(252,112,50)" rx="2" ry="2" />
<text  x="987.63" y="655.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (3 samples, 0.01%)</title><rect x="1143.5" y="757" width="0.1" height="15.0" fill="rgb(250,155,30)" rx="2" ry="2" />
<text  x="1146.51" y="767.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (14 samples, 0.04%)</title><rect x="1151.8" y="789" width="0.5" height="15.0" fill="rgb(215,80,34)" rx="2" ry="2" />
<text  x="1154.79" y="799.5" ></text>
</g>
<g >
<title>Sdl2Ui::ProcessActiveEvent (37 samples, 0.12%)</title><rect x="1181.4" y="853" width="1.3" height="15.0" fill="rgb(222,12,46)" rx="2" ry="2" />
<text  x="1184.35" y="863.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandEndBranch (4 samples, 0.01%)</title><rect x="609.1" y="757" width="0.2" height="15.0" fill="rgb(229,137,21)" rx="2" ry="2" />
<text  x="612.11" y="767.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (5 samples, 0.02%)</title><rect x="921.2" y="453" width="0.2" height="15.0" fill="rgb(217,30,25)" rx="2" ry="2" />
<text  x="924.25" y="463.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Impl::_M_alloc (3 samples, 0.01%)</title><rect x="71.6" y="981" width="0.1" height="15.0" fill="rgb(215,40,27)" rx="2" ry="2" />
<text  x="74.61" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (17 samples, 0.05%)</title><rect x="1133.2" y="789" width="0.7" height="15.0" fill="rgb(220,62,15)" rx="2" ry="2" />
<text  x="1136.23" y="799.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (91 samples, 0.29%)</title><rect x="235.2" y="469" width="3.4" height="15.0" fill="rgb(252,99,41)" rx="2" ry="2" />
<text  x="238.22" y="479.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (179 samples, 0.56%)</title><rect x="145.2" y="613" width="6.6" height="15.0" fill="rgb(216,87,53)" rx="2" ry="2" />
<text  x="148.23" y="623.5" ></text>
</g>
<g >
<title>Sprite::SetFlashEffect (27 samples, 0.08%)</title><rect x="878.5" y="469" width="1.0" height="15.0" fill="rgb(216,141,1)" rx="2" ry="2" />
<text  x="881.45" y="479.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::swap (82 samples, 0.26%)</title><rect x="706.6" y="581" width="3.0" height="15.0" fill="rgb(235,104,47)" rx="2" ry="2" />
<text  x="709.57" y="591.5" ></text>
</g>
<g >
<title>__interceptor_recvmsg (7 samples, 0.02%)</title><rect x="1181.1" y="709" width="0.2" height="15.0" fill="rgb(236,1,46)" rx="2" ry="2" />
<text  x="1184.06" y="719.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (149 samples, 0.47%)</title><rect x="194.9" y="917" width="5.5" height="15.0" fill="rgb(243,130,38)" rx="2" ry="2" />
<text  x="197.90" y="927.5" ></text>
</g>
<g >
<title>DynamicFormat::code_alpha (9 samples, 0.03%)</title><rect x="29.4" y="981" width="0.3" height="15.0" fill="rgb(249,157,2)" rx="2" ry="2" />
<text  x="32.40" y="991.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_valptr (7 samples, 0.02%)</title><rect x="681.3" y="629" width="0.3" height="15.0" fill="rgb(210,45,4)" rx="2" ry="2" />
<text  x="684.32" y="639.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (122 samples, 0.38%)</title><rect x="211.0" y="693" width="4.5" height="15.0" fill="rgb(206,28,41)" rx="2" ry="2" />
<text  x="214.01" y="703.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (14 samples, 0.04%)</title><rect x="194.9" y="565" width="0.5" height="15.0" fill="rgb(245,189,19)" rx="2" ry="2" />
<text  x="197.90" y="575.5" ></text>
</g>
<g >
<title>Game_Map::GetDisplayX (4 samples, 0.01%)</title><rect x="35.0" y="981" width="0.1" height="15.0" fill="rgb(245,6,14)" rx="2" ry="2" />
<text  x="37.98" y="991.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (84 samples, 0.26%)</title><rect x="191.8" y="533" width="3.1" height="15.0" fill="rgb(206,130,50)" rx="2" ry="2" />
<text  x="194.79" y="543.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (34 samples, 0.11%)</title><rect x="201.8" y="149" width="1.3" height="15.0" fill="rgb(245,154,19)" rx="2" ry="2" />
<text  x="204.81" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (3 samples, 0.01%)</title><rect x="608.6" y="709" width="0.1" height="15.0" fill="rgb(223,12,28)" rx="2" ry="2" />
<text  x="611.59" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (3 samples, 0.01%)</title><rect x="1075.8" y="757" width="0.1" height="15.0" fill="rgb(214,142,51)" rx="2" ry="2" />
<text  x="1078.80" y="767.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.02%)</title><rect x="666.0" y="565" width="0.2" height="15.0" fill="rgb(249,100,28)" rx="2" ry="2" />
<text  x="669.02" y="575.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (331 samples, 1.04%)</title><rect x="857.5" y="469" width="12.2" height="15.0" fill="rgb(243,23,6)" rx="2" ry="2" />
<text  x="860.50" y="479.5" ></text>
</g>
<g >
<title>Game_Interpreter::IsRunning (28 samples, 0.09%)</title><rect x="265.9" y="805" width="1.0" height="15.0" fill="rgb(219,207,20)" rx="2" ry="2" />
<text  x="268.89" y="815.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (84 samples, 0.26%)</title><rect x="191.8" y="485" width="3.1" height="15.0" fill="rgb(236,33,38)" rx="2" ry="2" />
<text  x="194.79" y="495.5" ></text>
</g>
<g >
<title>strlen (9 samples, 0.03%)</title><rect x="938.1" y="693" width="0.3" height="15.0" fill="rgb(249,177,3)" rx="2" ry="2" />
<text  x="941.06" y="703.5" ></text>
</g>
<g >
<title>Player::MainLoop (776 samples, 2.43%)</title><rect x="221.2" y="933" width="28.7" height="15.0" fill="rgb(230,140,54)" rx="2" ry="2" />
<text  x="224.25" y="943.5" >Pl..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::_M_ptr (14 samples, 0.04%)</title><rect x="1144.1" y="773" width="0.6" height="15.0" fill="rgb(244,20,37)" rx="2" ry="2" />
<text  x="1147.14" y="783.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandElseBranch (171 samples, 0.54%)</title><rect x="602.8" y="757" width="6.3" height="15.0" fill="rgb(252,185,9)" rx="2" ry="2" />
<text  x="605.79" y="767.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (11 samples, 0.03%)</title><rect x="921.0" y="501" width="0.4" height="15.0" fill="rgb(249,98,12)" rx="2" ry="2" />
<text  x="924.03" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::operator== (3 samples, 0.01%)</title><rect x="807.7" y="453" width="0.1" height="15.0" fill="rgb(253,179,40)" rx="2" ry="2" />
<text  x="810.68" y="463.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Set (802 samples, 2.51%)</title><rect x="563.2" y="741" width="29.6" height="15.0" fill="rgb(222,183,43)" rx="2" ry="2" />
<text  x="566.21" y="751.5" >Ga..</text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Transition*, false&gt;::_M_head (6 samples, 0.02%)</title><rect x="65.7" y="981" width="0.2" height="15.0" fill="rgb(236,225,1)" rx="2" ry="2" />
<text  x="68.66" y="991.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (10 samples, 0.03%)</title><rect x="887.8" y="453" width="0.3" height="15.0" fill="rgb(234,222,36)" rx="2" ry="2" />
<text  x="890.77" y="463.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Picture*, std::_Placeholder&lt;1&gt; &gt; (3 samples, 0.01%)</title><rect x="921.9" y="597" width="0.1" height="15.0" fill="rgb(218,163,4)" rx="2" ry="2" />
<text  x="924.91" y="607.5" ></text>
</g>
<g >
<title>memcmp (16 samples, 0.05%)</title><rect x="680.0" y="597" width="0.6" height="15.0" fill="rgb(207,78,33)" rx="2" ry="2" />
<text  x="683.03" y="607.5" ></text>
</g>
<g >
<title>Bitmap::Init (4 samples, 0.01%)</title><rect x="140.3" y="533" width="0.1" height="15.0" fill="rgb(217,25,5)" rx="2" ry="2" />
<text  x="143.27" y="543.5" ></text>
</g>
<g >
<title>Bitmap::Create (54 samples, 0.17%)</title><rect x="196.5" y="565" width="2.0" height="15.0" fill="rgb(210,60,46)" rx="2" ry="2" />
<text  x="199.52" y="575.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (177 samples, 0.55%)</title><rect x="204.5" y="693" width="6.5" height="15.0" fill="rgb(211,78,20)" rx="2" ry="2" />
<text  x="207.47" y="703.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (8 samples, 0.03%)</title><rect x="257.9" y="741" width="0.3" height="15.0" fill="rgb(229,224,26)" rx="2" ry="2" />
<text  x="260.87" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (49 samples, 0.15%)</title><rect x="511.4" y="725" width="1.8" height="15.0" fill="rgb(234,30,38)" rx="2" ry="2" />
<text  x="514.36" y="735.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (179 samples, 0.56%)</title><rect x="145.2" y="597" width="6.6" height="15.0" fill="rgb(230,185,3)" rx="2" ry="2" />
<text  x="148.23" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_key (41 samples, 0.13%)</title><rect x="779.0" y="421" width="1.5" height="15.0" fill="rgb(241,215,14)" rx="2" ry="2" />
<text  x="781.96" y="431.5" ></text>
</g>
<g >
<title>std::find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, Input::UiSource::Update()::{lambda(int)#1}&gt; (9 samples, 0.03%)</title><rect x="259.1" y="821" width="0.4" height="15.0" fill="rgb(253,210,39)" rx="2" ry="2" />
<text  x="262.13" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::deallocate (145 samples, 0.45%)</title><rect x="945.6" y="581" width="5.3" height="15.0" fill="rgb(249,48,47)" rx="2" ry="2" />
<text  x="948.57" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (40 samples, 0.13%)</title><rect x="466.2" y="709" width="1.5" height="15.0" fill="rgb(211,195,1)" rx="2" ry="2" />
<text  x="469.20" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (10 samples, 0.03%)</title><rect x="465.8" y="693" width="0.4" height="15.0" fill="rgb(249,206,36)" rx="2" ry="2" />
<text  x="468.83" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (10 samples, 0.03%)</title><rect x="1100.9" y="757" width="0.4" height="15.0" fill="rgb(236,173,27)" rx="2" ry="2" />
<text  x="1103.90" y="767.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__weak_ptr (14 samples, 0.04%)</title><rect x="691.7" y="629" width="0.5" height="15.0" fill="rgb(218,81,5)" rx="2" ry="2" />
<text  x="694.71" y="639.5" ></text>
</g>
<g >
<title>Game_Map::Update (776 samples, 2.43%)</title><rect x="221.2" y="853" width="28.7" height="15.0" fill="rgb(227,37,53)" rx="2" ry="2" />
<text  x="224.25" y="863.5" >Ga..</text>
</g>
<g >
<title>std::max&lt;int&gt; (6 samples, 0.02%)</title><rect x="618.9" y="741" width="0.2" height="15.0" fill="rgb(220,124,54)" rx="2" ry="2" />
<text  x="621.87" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (175 samples, 0.55%)</title><rect x="1016.0" y="725" width="6.5" height="15.0" fill="rgb(236,76,17)" rx="2" ry="2" />
<text  x="1019.01" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (10 samples, 0.03%)</title><rect x="1001.2" y="741" width="0.4" height="15.0" fill="rgb(252,8,18)" rx="2" ry="2" />
<text  x="1004.19" y="751.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (3 samples, 0.01%)</title><rect x="250.1" y="981" width="0.1" height="15.0" fill="rgb(243,217,19)" rx="2" ry="2" />
<text  x="253.07" y="991.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int&gt; (11 samples, 0.03%)</title><rect x="696.6" y="581" width="0.4" height="15.0" fill="rgb(205,32,43)" rx="2" ry="2" />
<text  x="699.62" y="591.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (36 samples, 0.11%)</title><rect x="887.5" y="469" width="1.4" height="15.0" fill="rgb(215,144,0)" rx="2" ry="2" />
<text  x="890.54" y="479.5" ></text>
</g>
<g >
<title>std::min&lt;int&gt; (16 samples, 0.05%)</title><rect x="102.9" y="981" width="0.6" height="15.0" fill="rgb(247,175,15)" rx="2" ry="2" />
<text  x="105.87" y="991.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (122 samples, 0.38%)</title><rect x="211.0" y="789" width="4.5" height="15.0" fill="rgb(236,220,10)" rx="2" ry="2" />
<text  x="214.01" y="799.5" ></text>
</g>
<g >
<title>std::swap&lt;bool (*)(std::_Any_data&amp;, std::_Any_data const&amp;, std::_Manager_operation)&gt; (15 samples, 0.05%)</title><rect x="706.8" y="565" width="0.5" height="15.0" fill="rgb(220,102,16)" rx="2" ry="2" />
<text  x="709.75" y="575.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.01%)</title><rect x="155.8" y="517" width="0.1" height="15.0" fill="rgb(246,158,34)" rx="2" ry="2" />
<text  x="158.80" y="527.5" ></text>
</g>
<g >
<title>__vma_adjust (3 samples, 0.01%)</title><rect x="135.2" y="277" width="0.2" height="15.0" fill="rgb(206,147,22)" rx="2" ry="2" />
<text  x="138.25" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::new_allocator (19 samples, 0.06%)</title><rect x="55.3" y="981" width="0.7" height="15.0" fill="rgb(236,119,38)" rx="2" ry="2" />
<text  x="58.27" y="991.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (101 samples, 0.32%)</title><rect x="200.7" y="357" width="3.8" height="15.0" fill="rgb(234,108,23)" rx="2" ry="2" />
<text  x="203.74" y="367.5" ></text>
</g>
<g >
<title>mmap_region (3 samples, 0.01%)</title><rect x="134.7" y="261" width="0.1" height="15.0" fill="rgb(243,35,1)" rx="2" ry="2" />
<text  x="137.73" y="271.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (149 samples, 0.47%)</title><rect x="194.9" y="629" width="5.5" height="15.0" fill="rgb(242,44,8)" rx="2" ry="2" />
<text  x="197.90" y="639.5" ></text>
</g>
<g >
<title>Bitmap::~Bitmap (47 samples, 0.15%)</title><rect x="251.7" y="389" width="1.7" height="15.0" fill="rgb(241,224,37)" rx="2" ry="2" />
<text  x="254.70" y="399.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (47 samples, 0.15%)</title><rect x="251.7" y="325" width="1.7" height="15.0" fill="rgb(246,13,11)" rx="2" ry="2" />
<text  x="254.70" y="335.5" ></text>
</g>
<g >
<title>Game_Picture::Show (604 samples, 1.89%)</title><rect x="161.3" y="885" width="22.4" height="15.0" fill="rgb(215,65,33)" rx="2" ry="2" />
<text  x="164.34" y="895.5" >G..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (6 samples, 0.02%)</title><rect x="1179.9" y="661" width="0.3" height="15.0" fill="rgb(224,97,45)" rx="2" ry="2" />
<text  x="1182.95" y="671.5" ></text>
</g>
<g >
<title>Scene_Map::Update (24,905 samples, 78.00%)</title><rect x="259.9" y="885" width="920.5" height="15.0" fill="rgb(227,57,31)" rx="2" ry="2" />
<text  x="262.94" y="895.5" >Scene_Map::Update</text>
</g>
<g >
<title>std::min&lt;int&gt; (7 samples, 0.02%)</title><rect x="619.1" y="741" width="0.2" height="15.0" fill="rgb(253,176,35)" rx="2" ry="2" />
<text  x="622.09" y="751.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (179 samples, 0.56%)</title><rect x="145.2" y="965" width="6.6" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="148.23" y="975.5" ></text>
</g>
<g >
<title>Sprite::SetX (17 samples, 0.05%)</title><rect x="1166.6" y="789" width="0.7" height="15.0" fill="rgb(239,169,29)" rx="2" ry="2" />
<text  x="1169.64" y="799.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_ptr (9 samples, 0.03%)</title><rect x="785.0" y="453" width="0.3" height="15.0" fill="rgb(229,164,53)" rx="2" ry="2" />
<text  x="787.99" y="463.5" ></text>
</g>
<g >
<title>Bitmap::initialize_formats (5 samples, 0.02%)</title><rect x="237.6" y="309" width="0.2" height="15.0" fill="rgb(222,223,18)" rx="2" ry="2" />
<text  x="240.58" y="319.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (3 samples, 0.01%)</title><rect x="951.7" y="677" width="0.1" height="15.0" fill="rgb(244,48,8)" rx="2" ry="2" />
<text  x="954.70" y="687.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (4 samples, 0.01%)</title><rect x="140.3" y="773" width="0.1" height="15.0" fill="rgb(242,23,31)" rx="2" ry="2" />
<text  x="143.27" y="783.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (4 samples, 0.01%)</title><rect x="140.3" y="837" width="0.1" height="15.0" fill="rgb(207,154,28)" rx="2" ry="2" />
<text  x="143.27" y="847.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (130 samples, 0.41%)</title><rect x="140.4" y="725" width="4.8" height="15.0" fill="rgb(240,14,29)" rx="2" ry="2" />
<text  x="143.42" y="735.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned (5 samples, 0.02%)</title><rect x="748.3" y="613" width="0.2" height="15.0" fill="rgb(207,31,14)" rx="2" ry="2" />
<text  x="751.33" y="623.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (35 samples, 0.11%)</title><rect x="881.0" y="469" width="1.3" height="15.0" fill="rgb(247,154,10)" rx="2" ry="2" />
<text  x="883.97" y="479.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (286 samples, 0.90%)</title><rect x="858.9" y="421" width="10.6" height="15.0" fill="rgb(225,164,7)" rx="2" ry="2" />
<text  x="861.94" y="431.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (268 samples, 0.84%)</title><rect x="240.0" y="421" width="9.9" height="15.0" fill="rgb(239,128,11)" rx="2" ry="2" />
<text  x="243.02" y="431.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (257 samples, 0.80%)</title><rect x="151.8" y="645" width="9.5" height="15.0" fill="rgb(210,96,22)" rx="2" ry="2" />
<text  x="154.84" y="655.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (16 samples, 0.05%)</title><rect x="82.4" y="981" width="0.6" height="15.0" fill="rgb(243,184,25)" rx="2" ry="2" />
<text  x="85.44" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (12 samples, 0.04%)</title><rect x="934.4" y="469" width="0.4" height="15.0" fill="rgb(214,148,29)" rx="2" ry="2" />
<text  x="937.41" y="479.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (276 samples, 0.86%)</title><rect x="130.1" y="869" width="10.2" height="15.0" fill="rgb(211,14,47)" rx="2" ry="2" />
<text  x="133.07" y="879.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Game_Picture*, false&gt;::_M_head (4 samples, 0.01%)</title><rect x="982.6" y="629" width="0.2" height="15.0" fill="rgb(219,125,25)" rx="2" ry="2" />
<text  x="985.63" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_Rb_tree_iterator (7 samples, 0.02%)</title><rect x="209.0" y="341" width="0.3" height="15.0" fill="rgb(209,124,45)" rx="2" ry="2" />
<text  x="212.01" y="351.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (34 samples, 0.11%)</title><rect x="881.0" y="453" width="1.3" height="15.0" fill="rgb(241,155,9)" rx="2" ry="2" />
<text  x="884.00" y="463.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::swap (7 samples, 0.02%)</title><rect x="96.0" y="981" width="0.3" height="15.0" fill="rgb(254,68,28)" rx="2" ry="2" />
<text  x="99.00" y="991.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_not_empty_function&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt; (5 samples, 0.02%)</title><rect x="62.8" y="981" width="0.2" height="15.0" fill="rgb(207,6,12)" rx="2" ry="2" />
<text  x="65.85" y="991.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (77 samples, 0.24%)</title><rect x="140.4" y="517" width="2.9" height="15.0" fill="rgb(249,224,34)" rx="2" ry="2" />
<text  x="143.42" y="527.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, FileRequestResult*&amp;&amp;&gt; (4 samples, 0.01%)</title><rect x="755.8" y="565" width="0.1" height="15.0" fill="rgb(232,16,38)" rx="2" ry="2" />
<text  x="758.76" y="575.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (1,310 samples, 4.10%)</title><rect x="999.6" y="757" width="48.4" height="15.0" fill="rgb(231,226,2)" rx="2" ry="2" />
<text  x="1002.63" y="767.5" >Game..</text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (34 samples, 0.11%)</title><rect x="464.9" y="709" width="1.3" height="15.0" fill="rgb(223,42,10)" rx="2" ry="2" />
<text  x="467.94" y="719.5" ></text>
</g>
<g >
<title>main (776 samples, 2.43%)</title><rect x="221.2" y="965" width="28.7" height="15.0" fill="rgb(224,38,4)" rx="2" ry="2" />
<text  x="224.25" y="975.5" >main</text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::size (176 samples, 0.55%)</title><rect x="1136.0" y="789" width="6.5" height="15.0" fill="rgb(211,201,25)" rx="2" ry="2" />
<text  x="1138.97" y="799.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (54 samples, 0.17%)</title><rect x="196.5" y="421" width="2.0" height="15.0" fill="rgb(217,80,42)" rx="2" ry="2" />
<text  x="199.52" y="431.5" ></text>
</g>
<g >
<title>Graphics::IsTransitionErased (43 samples, 0.13%)</title><rect x="737.5" y="693" width="1.6" height="15.0" fill="rgb(244,1,14)" rx="2" ry="2" />
<text  x="740.50" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::operator[] (3 samples, 0.01%)</title><rect x="1144.8" y="805" width="0.1" height="15.0" fill="rgb(252,214,19)" rx="2" ry="2" />
<text  x="1147.80" y="815.5" ></text>
</g>
<g >
<title>activate_task (4 samples, 0.01%)</title><rect x="23.5" y="789" width="0.2" height="15.0" fill="rgb(234,159,21)" rx="2" ry="2" />
<text  x="26.53" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (18 samples, 0.06%)</title><rect x="155.3" y="549" width="0.6" height="15.0" fill="rgb(252,63,1)" rx="2" ry="2" />
<text  x="158.28" y="559.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;*&gt; (4 samples, 0.01%)</title><rect x="726.1" y="645" width="0.2" height="15.0" fill="rgb(250,215,9)" rx="2" ry="2" />
<text  x="729.12" y="655.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (14 samples, 0.04%)</title><rect x="129.6" y="613" width="0.5" height="15.0" fill="rgb(244,217,32)" rx="2" ry="2" />
<text  x="132.56" y="623.5" ></text>
</g>
<g >
<title>page_fault (136 samples, 0.43%)</title><rect x="1184.6" y="997" width="5.0" height="15.0" fill="rgb(206,16,33)" rx="2" ry="2" />
<text  x="1187.57" y="1007.5" ></text>
</g>
<g >
<title>Game_Picture::Show (179 samples, 0.56%)</title><rect x="145.2" y="933" width="6.6" height="15.0" fill="rgb(211,83,35)" rx="2" ry="2" />
<text  x="148.23" y="943.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (20 samples, 0.06%)</title><rect x="949.9" y="501" width="0.7" height="15.0" fill="rgb(249,156,7)" rx="2" ry="2" />
<text  x="952.89" y="511.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (148 samples, 0.46%)</title><rect x="698.3" y="533" width="5.5" height="15.0" fill="rgb(220,227,52)" rx="2" ry="2" />
<text  x="701.32" y="543.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Impl::_Impl (3 samples, 0.01%)</title><rect x="860.4" y="389" width="0.1" height="15.0" fill="rgb(237,176,14)" rx="2" ry="2" />
<text  x="863.38" y="399.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::__allocated_ptr (7 samples, 0.02%)</title><rect x="945.0" y="613" width="0.3" height="15.0" fill="rgb(218,171,14)" rx="2" ry="2" />
<text  x="948.05" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_Rb_tree_iterator (3 samples, 0.01%)</title><rect x="672.9" y="645" width="0.1" height="15.0" fill="rgb(234,184,51)" rx="2" ry="2" />
<text  x="675.93" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (18 samples, 0.06%)</title><rect x="967.0" y="709" width="0.6" height="15.0" fill="rgb(242,166,2)" rx="2" ry="2" />
<text  x="969.96" y="719.5" ></text>
</g>
<g >
<title>error_entry (49 samples, 0.15%)</title><rect x="225.8" y="437" width="1.8" height="15.0" fill="rgb(225,152,33)" rx="2" ry="2" />
<text  x="228.83" y="447.5" ></text>
</g>
<g >
<title>Game_Map::Update (96 samples, 0.30%)</title><rect x="191.3" y="885" width="3.6" height="15.0" fill="rgb(221,145,30)" rx="2" ry="2" />
<text  x="194.35" y="895.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (104 samples, 0.33%)</title><rect x="808.0" y="437" width="3.8" height="15.0" fill="rgb(207,39,34)" rx="2" ry="2" />
<text  x="810.98" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (26 samples, 0.08%)</title><rect x="316.0" y="757" width="0.9" height="15.0" fill="rgb(215,34,19)" rx="2" ry="2" />
<text  x="318.97" y="767.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.01%)</title><rect x="140.3" y="437" width="0.1" height="15.0" fill="rgb(233,227,43)" rx="2" ry="2" />
<text  x="143.27" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (5 samples, 0.02%)</title><rect x="497.5" y="677" width="0.2" height="15.0" fill="rgb(217,43,42)" rx="2" ry="2" />
<text  x="500.50" y="687.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (604 samples, 1.89%)</title><rect x="161.3" y="821" width="22.4" height="15.0" fill="rgb(206,103,18)" rx="2" ry="2" />
<text  x="164.34" y="831.5" >F..</text>
</g>
<g >
<title>Game_Interpreter::GetFrame (249 samples, 0.78%)</title><rect x="471.8" y="709" width="9.2" height="15.0" fill="rgb(251,216,8)" rx="2" ry="2" />
<text  x="474.81" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (4 samples, 0.01%)</title><rect x="604.3" y="677" width="0.1" height="15.0" fill="rgb(253,130,22)" rx="2" ry="2" />
<text  x="607.27" y="687.5" ></text>
</g>
<g >
<title>Game_Interpreter::ReserveSubcommandIndex (326 samples, 1.02%)</title><rect x="470.3" y="725" width="12.1" height="15.0" fill="rgb(207,119,21)" rx="2" ry="2" />
<text  x="473.34" y="735.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (776 samples, 2.43%)</title><rect x="221.2" y="789" width="28.7" height="15.0" fill="rgb(225,70,31)" rx="2" ry="2" />
<text  x="224.25" y="799.5" >Ga..</text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (3 samples, 0.01%)</title><rect x="666.5" y="661" width="0.1" height="15.0" fill="rgb(247,125,31)" rx="2" ry="2" />
<text  x="669.47" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (204 samples, 0.64%)</title><rect x="130.1" y="469" width="7.5" height="15.0" fill="rgb(240,147,18)" rx="2" ry="2" />
<text  x="133.07" y="479.5" ></text>
</g>
<g >
<title>Tone::Tone (18 samples, 0.06%)</title><rect x="1161.1" y="773" width="0.7" height="15.0" fill="rgb(236,6,50)" rx="2" ry="2" />
<text  x="1164.10" y="783.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (5 samples, 0.02%)</title><rect x="810.0" y="357" width="0.2" height="15.0" fill="rgb(242,7,1)" rx="2" ry="2" />
<text  x="813.05" y="367.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (17 samples, 0.05%)</title><rect x="682.4" y="661" width="0.6" height="15.0" fill="rgb(232,189,37)" rx="2" ry="2" />
<text  x="685.40" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator!= (4 samples, 0.01%)</title><rect x="777.4" y="469" width="0.1" height="15.0" fill="rgb(229,80,21)" rx="2" ry="2" />
<text  x="780.38" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt;::construct&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (101 samples, 0.32%)</title><rect x="706.3" y="629" width="3.7" height="15.0" fill="rgb(217,149,7)" rx="2" ry="2" />
<text  x="709.27" y="639.5" ></text>
</g>
<g >
<title>Sprite::SetZ (8 samples, 0.03%)</title><rect x="884.2" y="485" width="0.3" height="15.0" fill="rgb(205,81,5)" rx="2" ry="2" />
<text  x="887.18" y="495.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (4,574 samples, 14.33%)</title><rect x="754.3" y="645" width="169.1" height="15.0" fill="rgb(210,140,8)" rx="2" ry="2" />
<text  x="757.31" y="655.5" >std::_Function_handle..</text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;*&gt; (4 samples, 0.01%)</title><rect x="60.4" y="981" width="0.2" height="15.0" fill="rgb(250,63,33)" rx="2" ry="2" />
<text  x="63.45" y="991.5" ></text>
</g>
<g >
<title>std::forward&lt;int&gt; (3 samples, 0.01%)</title><rect x="704.6" y="629" width="0.2" height="15.0" fill="rgb(208,82,36)" rx="2" ry="2" />
<text  x="707.64" y="639.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (177 samples, 0.55%)</title><rect x="204.5" y="917" width="6.5" height="15.0" fill="rgb(229,188,45)" rx="2" ry="2" />
<text  x="207.47" y="927.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (91 samples, 0.29%)</title><rect x="235.2" y="341" width="3.4" height="15.0" fill="rgb(206,128,2)" rx="2" ry="2" />
<text  x="238.22" y="351.5" ></text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;Bitmap&gt;, true&gt;::~_Sp_ebo_helper (7 samples, 0.02%)</title><rect x="903.5" y="373" width="0.3" height="15.0" fill="rgb(232,120,44)" rx="2" ry="2" />
<text  x="906.55" y="383.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (6 samples, 0.02%)</title><rect x="889.0" y="469" width="0.2" height="15.0" fill="rgb(214,162,30)" rx="2" ry="2" />
<text  x="891.99" y="479.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (97 samples, 0.30%)</title><rect x="18.5" y="917" width="3.6" height="15.0" fill="rgb(233,166,42)" rx="2" ry="2" />
<text  x="21.54" y="927.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="986.6" y="645" width="0.1" height="15.0" fill="rgb(215,50,32)" rx="2" ry="2" />
<text  x="989.63" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (142 samples, 0.44%)</title><rect x="174.0" y="565" width="5.3" height="15.0" fill="rgb(249,118,26)" rx="2" ry="2" />
<text  x="177.02" y="575.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (52 samples, 0.16%)</title><rect x="930.5" y="453" width="1.9" height="15.0" fill="rgb(244,184,36)" rx="2" ry="2" />
<text  x="933.45" y="463.5" ></text>
</g>
<g >
<title>X11_PumpEvents (16 samples, 0.05%)</title><rect x="1180.8" y="837" width="0.6" height="15.0" fill="rgb(239,195,43)" rx="2" ry="2" />
<text  x="1183.76" y="847.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (18,691 samples, 58.54%)</title><rect x="413.3" y="789" width="690.8" height="15.0" fill="rgb(215,105,11)" rx="2" ry="2" />
<text  x="416.35" y="799.5" >Game_Interpreter_Map::ExecuteCommand</text>
</g>
<g >
<title>Window_Selectable::Update (4 samples, 0.01%)</title><rect x="1179.7" y="821" width="0.2" height="15.0" fill="rgb(228,184,9)" rx="2" ry="2" />
<text  x="1182.73" y="831.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (276 samples, 0.86%)</title><rect x="941.1" y="661" width="10.2" height="15.0" fill="rgb(215,131,21)" rx="2" ry="2" />
<text  x="944.13" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (82 samples, 0.26%)</title><rect x="1072.8" y="725" width="3.0" height="15.0" fill="rgb(244,127,39)" rx="2" ry="2" />
<text  x="1075.77" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base (15 samples, 0.05%)</title><rect x="776.7" y="421" width="0.5" height="15.0" fill="rgb(221,180,49)" rx="2" ry="2" />
<text  x="779.67" y="431.5" ></text>
</g>
<g >
<title>operator delete (106 samples, 0.33%)</title><rect x="977.3" y="725" width="3.9" height="15.0" fill="rgb(212,118,48)" rx="2" ry="2" />
<text  x="980.31" y="735.5" ></text>
</g>
<g >
<title>std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;::~pair (258 samples, 0.81%)</title><rect x="925.6" y="565" width="9.5" height="15.0" fill="rgb(241,178,19)" rx="2" ry="2" />
<text  x="928.57" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (126 samples, 0.39%)</title><rect x="1081.6" y="741" width="4.7" height="15.0" fill="rgb(210,33,0)" rx="2" ry="2" />
<text  x="1084.64" y="751.5" ></text>
</g>
<g >
<title>__do_page_fault (6 samples, 0.02%)</title><rect x="148.4" y="389" width="0.2" height="15.0" fill="rgb(223,70,2)" rx="2" ry="2" />
<text  x="151.37" y="399.5" ></text>
</g>
<g >
<title>Bitmap::Create (91 samples, 0.29%)</title><rect x="235.2" y="485" width="3.4" height="15.0" fill="rgb(252,23,19)" rx="2" ry="2" />
<text  x="238.22" y="495.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (149 samples, 0.47%)</title><rect x="194.9" y="789" width="5.5" height="15.0" fill="rgb(205,98,24)" rx="2" ry="2" />
<text  x="197.90" y="799.5" ></text>
</g>
<g >
<title>Game_Picture::Move (22 samples, 0.07%)</title><rect x="617.6" y="741" width="0.9" height="15.0" fill="rgb(205,51,10)" rx="2" ry="2" />
<text  x="620.65" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (26 samples, 0.08%)</title><rect x="1050.6" y="757" width="0.9" height="15.0" fill="rgb(241,89,15)" rx="2" ry="2" />
<text  x="1053.56" y="767.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (63 samples, 0.20%)</title><rect x="161.6" y="613" width="2.4" height="15.0" fill="rgb(253,163,19)" rx="2" ry="2" />
<text  x="164.63" y="623.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (7 samples, 0.02%)</title><rect x="135.7" y="309" width="0.3" height="15.0" fill="rgb(220,75,3)" rx="2" ry="2" />
<text  x="138.73" y="319.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (96 samples, 0.30%)</title><rect x="191.3" y="805" width="3.6" height="15.0" fill="rgb(217,205,18)" rx="2" ry="2" />
<text  x="194.35" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (13 samples, 0.04%)</title><rect x="763.7" y="421" width="0.5" height="15.0" fill="rgb(238,208,3)" rx="2" ry="2" />
<text  x="766.74" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate (9 samples, 0.03%)</title><rect x="868.4" y="373" width="0.4" height="15.0" fill="rgb(212,135,44)" rx="2" ry="2" />
<text  x="871.44" y="383.5" ></text>
</g>
<g >
<title>std::max&lt;int&gt; (7 samples, 0.02%)</title><rect x="593.6" y="741" width="0.2" height="15.0" fill="rgb(239,155,15)" rx="2" ry="2" />
<text  x="596.59" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (39 samples, 0.12%)</title><rect x="516.6" y="741" width="1.4" height="15.0" fill="rgb(219,187,0)" rx="2" ry="2" />
<text  x="519.57" y="751.5" ></text>
</g>
<g >
<title>__handle_mm_fault (13 samples, 0.04%)</title><rect x="135.7" y="341" width="0.5" height="15.0" fill="rgb(236,189,21)" rx="2" ry="2" />
<text  x="138.69" y="351.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (15 samples, 0.05%)</title><rect x="809.0" y="373" width="0.6" height="15.0" fill="rgb(243,227,2)" rx="2" ry="2" />
<text  x="812.05" y="383.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (77 samples, 0.24%)</title><rect x="140.4" y="485" width="2.9" height="15.0" fill="rgb(245,59,25)" rx="2" ry="2" />
<text  x="143.42" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_create (4 samples, 0.01%)</title><rect x="986.0" y="645" width="0.1" height="15.0" fill="rgb(239,135,45)" rx="2" ry="2" />
<text  x="988.96" y="655.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (18 samples, 0.06%)</title><rect x="83.2" y="981" width="0.7" height="15.0" fill="rgb(208,41,35)" rx="2" ry="2" />
<text  x="86.21" y="991.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (85 samples, 0.27%)</title><rect x="250.3" y="773" width="3.1" height="15.0" fill="rgb(225,197,8)" rx="2" ry="2" />
<text  x="253.29" y="783.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator@plt (3 samples, 0.01%)</title><rect x="786.3" y="485" width="0.1" height="15.0" fill="rgb(208,200,37)" rx="2" ry="2" />
<text  x="789.32" y="495.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (47 samples, 0.15%)</title><rect x="251.7" y="357" width="1.7" height="15.0" fill="rgb(242,152,14)" rx="2" ry="2" />
<text  x="254.70" y="367.5" ></text>
</g>
<g >
<title>SDL_Delay_REAL (28 samples, 0.09%)</title><rect x="1181.4" y="821" width="1.0" height="15.0" fill="rgb(206,80,3)" rx="2" ry="2" />
<text  x="1184.35" y="831.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (8 samples, 0.03%)</title><rect x="257.9" y="757" width="0.3" height="15.0" fill="rgb(225,68,15)" rx="2" ry="2" />
<text  x="260.87" y="767.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (21 samples, 0.07%)</title><rect x="252.7" y="277" width="0.7" height="15.0" fill="rgb(228,40,22)" rx="2" ry="2" />
<text  x="255.66" y="287.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (99 samples, 0.31%)</title><rect x="977.6" y="709" width="3.6" height="15.0" fill="rgb(240,13,11)" rx="2" ry="2" />
<text  x="980.57" y="719.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (36 samples, 0.11%)</title><rect x="1173.6" y="741" width="1.3" height="15.0" fill="rgb(243,180,12)" rx="2" ry="2" />
<text  x="1176.59" y="751.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (43 samples, 0.13%)</title><rect x="603.3" y="709" width="1.6" height="15.0" fill="rgb(250,114,3)" rx="2" ry="2" />
<text  x="606.34" y="719.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (8 samples, 0.03%)</title><rect x="220.9" y="981" width="0.3" height="15.0" fill="rgb(254,163,50)" rx="2" ry="2" />
<text  x="223.88" y="991.5" ></text>
</g>
<g >
<title>operator== (7 samples, 0.02%)</title><rect x="1166.3" y="757" width="0.2" height="15.0" fill="rgb(235,140,24)" rx="2" ry="2" />
<text  x="1169.27" y="767.5" ></text>
</g>
<g >
<title>Game_Interpreter::Clear (3 samples, 0.01%)</title><rect x="1146.6" y="821" width="0.1" height="15.0" fill="rgb(205,180,4)" rx="2" ry="2" />
<text  x="1149.58" y="831.5" ></text>
</g>
<g >
<title>pipe_read (4 samples, 0.01%)</title><rect x="22.8" y="885" width="0.2" height="15.0" fill="rgb(231,186,47)" rx="2" ry="2" />
<text  x="25.82" y="895.5" ></text>
</g>
<g >
<title>std::__find_if&lt;int const*, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (11 samples, 0.03%)</title><rect x="607.9" y="693" width="0.4" height="15.0" fill="rgb(231,86,31)" rx="2" ry="2" />
<text  x="610.85" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (45 samples, 0.14%)</title><rect x="1046.3" y="709" width="1.6" height="15.0" fill="rgb(212,26,48)" rx="2" ry="2" />
<text  x="1049.27" y="719.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (85 samples, 0.27%)</title><rect x="250.3" y="645" width="3.1" height="15.0" fill="rgb(225,110,1)" rx="2" ry="2" />
<text  x="253.29" y="655.5" ></text>
</g>
<g >
<title>__vfs_write (14 samples, 0.04%)</title><rect x="23.4" y="917" width="0.5" height="15.0" fill="rgb(220,156,40)" rx="2" ry="2" />
<text  x="26.38" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_Rb_tree_iterator (6 samples, 0.02%)</title><rect x="207.7" y="357" width="0.2" height="15.0" fill="rgb(225,130,18)" rx="2" ry="2" />
<text  x="210.68" y="367.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (276 samples, 0.86%)</title><rect x="130.1" y="981" width="10.2" height="15.0" fill="rgb(207,137,22)" rx="2" ry="2" />
<text  x="133.07" y="991.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (776 samples, 2.43%)</title><rect x="221.2" y="517" width="28.7" height="15.0" fill="rgb(220,90,7)" rx="2" ry="2" />
<text  x="224.25" y="527.5" >Ga..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (179 samples, 0.56%)</title><rect x="145.2" y="549" width="6.6" height="15.0" fill="rgb(253,108,9)" rx="2" ry="2" />
<text  x="148.23" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator* (8 samples, 0.03%)</title><rect x="53.2" y="981" width="0.3" height="15.0" fill="rgb(208,112,0)" rx="2" ry="2" />
<text  x="56.20" y="991.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.02%)</title><rect x="136.2" y="405" width="0.2" height="15.0" fill="rgb(205,191,1)" rx="2" ry="2" />
<text  x="139.21" y="415.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (96 samples, 0.30%)</title><rect x="191.3" y="741" width="3.6" height="15.0" fill="rgb(244,50,28)" rx="2" ry="2" />
<text  x="194.35" y="751.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (12 samples, 0.04%)</title><rect x="135.0" y="373" width="0.4" height="15.0" fill="rgb(237,103,32)" rx="2" ry="2" />
<text  x="137.95" y="383.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (164 samples, 0.51%)</title><rect x="240.0" y="309" width="6.1" height="15.0" fill="rgb(205,139,54)" rx="2" ry="2" />
<text  x="243.02" y="319.5" ></text>
</g>
<g >
<title>easyrpg-player (31,542 samples, 98.79%)</title><rect x="24.3" y="1013" width="1165.7" height="15.0" fill="rgb(216,6,26)" rx="2" ry="2" />
<text  x="27.30" y="1023.5" >easyrpg-player</text>
</g>
<g >
<title>std::__get_helper&lt;2ul, bool&gt; (4 samples, 0.01%)</title><rect x="795.2" y="341" width="0.1" height="15.0" fill="rgb(235,174,41)" rx="2" ry="2" />
<text  x="798.15" y="351.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&amp;&gt; (14 samples, 0.04%)</title><rect x="93.0" y="981" width="0.5" height="15.0" fill="rgb(219,78,28)" rx="2" ry="2" />
<text  x="96.01" y="991.5" ></text>
</g>
<g >
<title>pick_next_task_fair (4 samples, 0.01%)</title><rect x="21.9" y="853" width="0.2" height="15.0" fill="rgb(244,171,1)" rx="2" ry="2" />
<text  x="24.94" y="863.5" ></text>
</g>
<g >
<title>std::replace&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (343 samples, 1.07%)</title><rect x="647.7" y="677" width="12.7" height="15.0" fill="rgb(243,45,40)" rx="2" ry="2" />
<text  x="650.69" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;Bitmap&gt;::_M_ptr (5 samples, 0.02%)</title><rect x="905.1" y="389" width="0.2" height="15.0" fill="rgb(220,195,13)" rx="2" ry="2" />
<text  x="908.14" y="399.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::_Bind (46 samples, 0.14%)</title><rect x="726.3" y="645" width="1.7" height="15.0" fill="rgb(247,56,17)" rx="2" ry="2" />
<text  x="729.26" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string@plt (3 samples, 0.01%)</title><rect x="741.6" y="645" width="0.1" height="15.0" fill="rgb(225,96,29)" rx="2" ry="2" />
<text  x="744.60" y="655.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (6 samples, 0.02%)</title><rect x="101.3" y="981" width="0.2" height="15.0" fill="rgb(252,129,14)" rx="2" ry="2" />
<text  x="104.28" y="991.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (4,460 samples, 13.97%)</title><rect x="756.7" y="533" width="164.8" height="15.0" fill="rgb(214,144,6)" rx="2" ry="2" />
<text  x="759.68" y="543.5" >std::__invoke_impl&lt;vo..</text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (260 samples, 0.81%)</title><rect x="925.5" y="581" width="9.6" height="15.0" fill="rgb(226,171,17)" rx="2" ry="2" />
<text  x="928.50" y="591.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (122 samples, 0.38%)</title><rect x="211.0" y="725" width="4.5" height="15.0" fill="rgb(237,28,53)" rx="2" ry="2" />
<text  x="214.01" y="735.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (56 samples, 0.18%)</title><rect x="211.0" y="597" width="2.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="214.01" y="607.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (4 samples, 0.01%)</title><rect x="891.2" y="421" width="0.1" height="15.0" fill="rgb(214,51,2)" rx="2" ry="2" />
<text  x="894.17" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (77 samples, 0.24%)</title><rect x="140.4" y="549" width="2.9" height="15.0" fill="rgb(221,21,10)" rx="2" ry="2" />
<text  x="143.42" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.01%)</title><rect x="1181.2" y="645" width="0.1" height="15.0" fill="rgb(238,187,5)" rx="2" ry="2" />
<text  x="1184.17" y="655.5" ></text>
</g>
<g >
<title>Cache::SystemOrBlack (13 samples, 0.04%)</title><rect x="1179.9" y="805" width="0.5" height="15.0" fill="rgb(246,213,32)" rx="2" ry="2" />
<text  x="1182.87" y="815.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (307 samples, 0.96%)</title><rect x="238.6" y="485" width="11.3" height="15.0" fill="rgb(212,92,28)" rx="2" ry="2" />
<text  x="241.58" y="495.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (233 samples, 0.73%)</title><rect x="130.1" y="533" width="8.6" height="15.0" fill="rgb(252,90,42)" rx="2" ry="2" />
<text  x="133.07" y="543.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (5 samples, 0.02%)</title><rect x="22.6" y="853" width="0.2" height="15.0" fill="rgb(206,216,47)" rx="2" ry="2" />
<text  x="25.64" y="863.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::_M_ptr (10 samples, 0.03%)</title><rect x="966.6" y="677" width="0.3" height="15.0" fill="rgb(226,196,0)" rx="2" ry="2" />
<text  x="969.56" y="687.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (96 samples, 0.30%)</title><rect x="191.3" y="661" width="3.6" height="15.0" fill="rgb(246,70,46)" rx="2" ry="2" />
<text  x="194.35" y="671.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (3 samples, 0.01%)</title><rect x="725.6" y="613" width="0.1" height="15.0" fill="rgb(247,83,50)" rx="2" ry="2" />
<text  x="728.64" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (37 samples, 0.12%)</title><rect x="474.7" y="677" width="1.4" height="15.0" fill="rgb(206,17,24)" rx="2" ry="2" />
<text  x="477.73" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::operator++ (5 samples, 0.02%)</title><rect x="1145.3" y="821" width="0.2" height="15.0" fill="rgb(215,171,34)" rx="2" ry="2" />
<text  x="1148.28" y="831.5" ></text>
</g>
<g >
<title>Graphics::Draw (31 samples, 0.10%)</title><rect x="257.8" y="869" width="1.1" height="15.0" fill="rgb(244,141,45)" rx="2" ry="2" />
<text  x="260.80" y="879.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (7 samples, 0.02%)</title><rect x="1181.1" y="741" width="0.2" height="15.0" fill="rgb(253,212,8)" rx="2" ry="2" />
<text  x="1184.06" y="751.5" ></text>
</g>
<g >
<title>[anon] (204 samples, 0.64%)</title><rect x="120.6" y="997" width="7.6" height="15.0" fill="rgb(207,100,19)" rx="2" ry="2" />
<text  x="123.61" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (156 samples, 0.49%)</title><rect x="164.0" y="485" width="5.7" height="15.0" fill="rgb(229,140,35)" rx="2" ry="2" />
<text  x="166.96" y="495.5" ></text>
</g>
<g >
<title>std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt;&amp;, true&gt; (190 samples, 0.60%)</title><rect x="685.2" y="661" width="7.0" height="15.0" fill="rgb(247,141,29)" rx="2" ry="2" />
<text  x="688.20" y="671.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::destroy&lt;Bitmap&gt; (50 samples, 0.16%)</title><rect x="198.6" y="485" width="1.8" height="15.0" fill="rgb(242,126,49)" rx="2" ry="2" />
<text  x="201.55" y="495.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (8 samples, 0.03%)</title><rect x="1169.9" y="725" width="0.3" height="15.0" fill="rgb(253,225,38)" rx="2" ry="2" />
<text  x="1172.93" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (15 samples, 0.05%)</title><rect x="966.4" y="709" width="0.6" height="15.0" fill="rgb(224,120,24)" rx="2" ry="2" />
<text  x="969.41" y="719.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (112 samples, 0.35%)</title><rect x="145.2" y="453" width="4.2" height="15.0" fill="rgb(249,108,17)" rx="2" ry="2" />
<text  x="148.23" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (10 samples, 0.03%)</title><rect x="647.1" y="661" width="0.4" height="15.0" fill="rgb(216,61,20)" rx="2" ry="2" />
<text  x="650.10" y="671.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&amp;&gt; (3 samples, 0.01%)</title><rect x="819.4" y="453" width="0.1" height="15.0" fill="rgb(233,97,38)" rx="2" ry="2" />
<text  x="822.43" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_addr (6 samples, 0.02%)</title><rect x="789.7" y="373" width="0.2" height="15.0" fill="rgb(239,77,27)" rx="2" ry="2" />
<text  x="792.68" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate (14 samples, 0.04%)</title><rect x="129.6" y="533" width="0.5" height="15.0" fill="rgb(215,49,33)" rx="2" ry="2" />
<text  x="132.56" y="543.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (142 samples, 0.44%)</title><rect x="174.0" y="581" width="5.3" height="15.0" fill="rgb(235,187,15)" rx="2" ry="2" />
<text  x="177.02" y="591.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (23,931 samples, 74.95%)</title><rect x="260.7" y="821" width="884.4" height="15.0" fill="rgb(246,200,9)" rx="2" ry="2" />
<text  x="263.68" y="831.5" >Game_CommonEvent::Update</text>
</g>
<g >
<title>std::get&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (10 samples, 0.03%)</title><rect x="96.8" y="981" width="0.3" height="15.0" fill="rgb(239,138,53)" rx="2" ry="2" />
<text  x="99.78" y="991.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (14 samples, 0.04%)</title><rect x="129.6" y="677" width="0.5" height="15.0" fill="rgb(230,4,34)" rx="2" ry="2" />
<text  x="132.56" y="687.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (58 samples, 0.18%)</title><rect x="797.3" y="373" width="2.2" height="15.0" fill="rgb(208,10,18)" rx="2" ry="2" />
<text  x="800.33" y="383.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (30 samples, 0.09%)</title><rect x="238.9" y="341" width="1.1" height="15.0" fill="rgb(205,176,17)" rx="2" ry="2" />
<text  x="241.91" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (8 samples, 0.03%)</title><rect x="52.4" y="981" width="0.3" height="15.0" fill="rgb(220,8,2)" rx="2" ry="2" />
<text  x="55.43" y="991.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (3 samples, 0.01%)</title><rect x="1180.5" y="821" width="0.1" height="15.0" fill="rgb(206,16,2)" rx="2" ry="2" />
<text  x="1183.50" y="831.5" ></text>
</g>
<g >
<title>poll_schedule_timeout.constprop.14 (97 samples, 0.30%)</title><rect x="18.5" y="933" width="3.6" height="15.0" fill="rgb(241,21,11)" rx="2" ry="2" />
<text  x="21.54" y="943.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (1,297 samples, 4.06%)</title><rect x="635.1" y="709" width="48.0" height="15.0" fill="rgb(216,181,33)" rx="2" ry="2" />
<text  x="638.13" y="719.5" >Asyn..</text>
</g>
<g >
<title>Sprite::Flash (15 samples, 0.05%)</title><rect x="963.5" y="709" width="0.6" height="15.0" fill="rgb(250,0,37)" rx="2" ry="2" />
<text  x="966.53" y="719.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;int&gt;::~weak_ptr (8 samples, 0.03%)</title><rect x="711.2" y="677" width="0.3" height="15.0" fill="rgb(217,58,12)" rx="2" ry="2" />
<text  x="714.22" y="687.5" ></text>
</g>
<g >
<title>SDL_UpdateTextureNative (9 samples, 0.03%)</title><rect x="258.6" y="821" width="0.3" height="15.0" fill="rgb(224,224,45)" rx="2" ry="2" />
<text  x="261.61" y="831.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_manager (223 samples, 0.70%)</title><rect x="728.5" y="661" width="8.2" height="15.0" fill="rgb(249,39,22)" rx="2" ry="2" />
<text  x="731.48" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_Rb_tree_iterator (3 samples, 0.01%)</title><rect x="807.5" y="437" width="0.1" height="15.0" fill="rgb(214,73,45)" rx="2" ry="2" />
<text  x="810.53" y="447.5" ></text>
</g>
<g >
<title>Game_Picture::Show (130 samples, 0.41%)</title><rect x="140.4" y="917" width="4.8" height="15.0" fill="rgb(249,91,11)" rx="2" ry="2" />
<text  x="143.42" y="927.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::__allocated_ptr (9 samples, 0.03%)</title><rect x="903.8" y="405" width="0.4" height="15.0" fill="rgb(247,153,46)" rx="2" ry="2" />
<text  x="906.84" y="415.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (110 samples, 0.34%)</title><rect x="200.4" y="821" width="4.1" height="15.0" fill="rgb(218,188,49)" rx="2" ry="2" />
<text  x="203.40" y="831.5" ></text>
</g>
<g >
<title>try_to_wake_up (9 samples, 0.03%)</title><rect x="23.4" y="821" width="0.3" height="15.0" fill="rgb(226,51,3)" rx="2" ry="2" />
<text  x="26.42" y="831.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (179 samples, 0.56%)</title><rect x="145.2" y="821" width="6.6" height="15.0" fill="rgb(221,202,26)" rx="2" ry="2" />
<text  x="148.23" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (26 samples, 0.08%)</title><rect x="781.9" y="389" width="0.9" height="15.0" fill="rgb(218,171,13)" rx="2" ry="2" />
<text  x="784.88" y="399.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (101 samples, 0.32%)</title><rect x="200.7" y="549" width="3.8" height="15.0" fill="rgb(248,227,44)" rx="2" ry="2" />
<text  x="203.74" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (4 samples, 0.01%)</title><rect x="412.4" y="757" width="0.1" height="15.0" fill="rgb(245,7,39)" rx="2" ry="2" />
<text  x="415.39" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*, std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt; &gt; (7 samples, 0.02%)</title><rect x="746.8" y="661" width="0.3" height="15.0" fill="rgb(247,40,22)" rx="2" ry="2" />
<text  x="749.85" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (5 samples, 0.02%)</title><rect x="514.9" y="725" width="0.2" height="15.0" fill="rgb(243,190,20)" rx="2" ry="2" />
<text  x="517.94" y="735.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Impl::_Impl (11 samples, 0.03%)</title><rect x="862.5" y="373" width="0.4" height="15.0" fill="rgb(215,21,11)" rx="2" ry="2" />
<text  x="865.49" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.05%)</title><rect x="203.8" y="277" width="0.6" height="15.0" fill="rgb(251,31,33)" rx="2" ry="2" />
<text  x="206.84" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::_Vector_base (6 samples, 0.02%)</title><rect x="867.5" y="309" width="0.2" height="15.0" fill="rgb(243,23,19)" rx="2" ry="2" />
<text  x="870.48" y="319.5" ></text>
</g>
<g >
<title>std::move&lt;std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;&amp;&gt; (7 samples, 0.02%)</title><rect x="104.0" y="981" width="0.3" height="15.0" fill="rgb(254,40,20)" rx="2" ry="2" />
<text  x="107.02" y="991.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.01%)</title><rect x="987.0" y="741" width="0.1" height="15.0" fill="rgb(225,226,16)" rx="2" ry="2" />
<text  x="990.00" y="751.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (6 samples, 0.02%)</title><rect x="210.8" y="197" width="0.2" height="15.0" fill="rgb(217,119,35)" rx="2" ry="2" />
<text  x="213.75" y="207.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (74 samples, 0.23%)</title><rect x="207.9" y="389" width="2.7" height="15.0" fill="rgb(217,194,17)" rx="2" ry="2" />
<text  x="210.90" y="399.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (177 samples, 0.55%)</title><rect x="204.5" y="661" width="6.5" height="15.0" fill="rgb(218,14,52)" rx="2" ry="2" />
<text  x="207.47" y="671.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (85 samples, 0.27%)</title><rect x="250.3" y="501" width="3.1" height="15.0" fill="rgb(228,111,16)" rx="2" ry="2" />
<text  x="253.29" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (10 samples, 0.03%)</title><rect x="1058.7" y="741" width="0.4" height="15.0" fill="rgb(249,117,24)" rx="2" ry="2" />
<text  x="1061.73" y="751.5" ></text>
</g>
<g >
<title>Sprite::SetWaverDepth (5 samples, 0.02%)</title><rect x="883.7" y="485" width="0.1" height="15.0" fill="rgb(249,53,35)" rx="2" ry="2" />
<text  x="886.66" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (94 samples, 0.29%)</title><rect x="133.3" y="453" width="3.5" height="15.0" fill="rgb(206,173,2)" rx="2" ry="2" />
<text  x="136.29" y="463.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (72 samples, 0.23%)</title><rect x="191.8" y="373" width="2.7" height="15.0" fill="rgb(229,128,34)" rx="2" ry="2" />
<text  x="194.79" y="383.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (3 samples, 0.01%)</title><rect x="811.7" y="421" width="0.1" height="15.0" fill="rgb(206,184,43)" rx="2" ry="2" />
<text  x="814.71" y="431.5" ></text>
</g>
<g >
<title>update_process_times (3 samples, 0.01%)</title><rect x="1101.3" y="677" width="0.1" height="15.0" fill="rgb(211,113,26)" rx="2" ry="2" />
<text  x="1104.27" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (560 samples, 1.75%)</title><rect x="1001.8" y="741" width="20.7" height="15.0" fill="rgb(242,117,38)" rx="2" ry="2" />
<text  x="1004.78" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (5 samples, 0.02%)</title><rect x="811.5" y="389" width="0.2" height="15.0" fill="rgb(207,163,47)" rx="2" ry="2" />
<text  x="814.52" y="399.5" ></text>
</g>
<g >
<title>Game_Picture::Show (776 samples, 2.43%)</title><rect x="221.2" y="741" width="28.7" height="15.0" fill="rgb(243,13,45)" rx="2" ry="2" />
<text  x="224.25" y="751.5" >Ga..</text>
</g>
<g >
<title>memcpy (3 samples, 0.01%)</title><rect x="785.7" y="469" width="0.1" height="15.0" fill="rgb(205,93,44)" rx="2" ry="2" />
<text  x="788.65" y="479.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (156 samples, 0.49%)</title><rect x="164.0" y="517" width="5.7" height="15.0" fill="rgb(231,158,48)" rx="2" ry="2" />
<text  x="166.96" y="527.5" ></text>
</g>
<g >
<title>__interceptor_free (47 samples, 0.15%)</title><rect x="251.7" y="341" width="1.7" height="15.0" fill="rgb(226,133,39)" rx="2" ry="2" />
<text  x="254.70" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (3 samples, 0.01%)</title><rect x="257.3" y="997" width="0.1" height="15.0" fill="rgb(208,225,26)" rx="2" ry="2" />
<text  x="260.28" y="1007.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.03%)</title><rect x="253.4" y="965" width="0.4" height="15.0" fill="rgb(224,181,3)" rx="2" ry="2" />
<text  x="256.44" y="975.5" ></text>
</g>
<g >
<title>Game_Interpreter::SetSubcommandIndex (5 samples, 0.02%)</title><rect x="605.1" y="725" width="0.2" height="15.0" fill="rgb(208,1,11)" rx="2" ry="2" />
<text  x="608.12" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::size (5 samples, 0.02%)</title><rect x="1144.9" y="805" width="0.2" height="15.0" fill="rgb(247,141,3)" rx="2" ry="2" />
<text  x="1147.91" y="815.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;int&gt;::~weak_ptr (26 samples, 0.08%)</title><rect x="934.1" y="549" width="1.0" height="15.0" fill="rgb(220,84,30)" rx="2" ry="2" />
<text  x="937.15" y="559.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (149 samples, 0.47%)</title><rect x="194.9" y="949" width="5.5" height="15.0" fill="rgb(232,27,54)" rx="2" ry="2" />
<text  x="197.90" y="959.5" ></text>
</g>
<g >
<title>Game_Screen::GetPicture (7 samples, 0.02%)</title><rect x="618.5" y="741" width="0.2" height="15.0" fill="rgb(229,101,48)" rx="2" ry="2" />
<text  x="621.46" y="751.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::~function (3 samples, 0.01%)</title><rect x="705.1" y="661" width="0.1" height="15.0" fill="rgb(233,12,1)" rx="2" ry="2" />
<text  x="708.12" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (100 samples, 0.31%)</title><rect x="742.2" y="629" width="3.7" height="15.0" fill="rgb(241,68,39)" rx="2" ry="2" />
<text  x="745.16" y="639.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (11 samples, 0.03%)</title><rect x="80.9" y="981" width="0.4" height="15.0" fill="rgb(209,22,47)" rx="2" ry="2" />
<text  x="83.88" y="991.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::function (180 samples, 0.56%)</title><rect x="712.9" y="693" width="6.6" height="15.0" fill="rgb(221,29,14)" rx="2" ry="2" />
<text  x="715.89" y="703.5" ></text>
</g>
<g >
<title>Game_Map::Update (24,866 samples, 77.88%)</title><rect x="260.0" y="853" width="918.9" height="15.0" fill="rgb(217,115,9)" rx="2" ry="2" />
<text  x="262.98" y="863.5" >Game_Map::Update</text>
</g>
<g >
<title>DynamicFormat::DynamicFormat (7 samples, 0.02%)</title><rect x="867.2" y="325" width="0.2" height="15.0" fill="rgb(210,136,39)" rx="2" ry="2" />
<text  x="870.18" y="335.5" ></text>
</g>
<g >
<title>Cache::Picture (12 samples, 0.04%)</title><rect x="191.3" y="533" width="0.5" height="15.0" fill="rgb(222,163,17)" rx="2" ry="2" />
<text  x="194.35" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int&gt; (6 samples, 0.02%)</title><rect x="91.9" y="981" width="0.2" height="15.0" fill="rgb(233,150,35)" rx="2" ry="2" />
<text  x="94.90" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (8 samples, 0.03%)</title><rect x="999.3" y="741" width="0.3" height="15.0" fill="rgb(216,224,15)" rx="2" ry="2" />
<text  x="1002.34" y="751.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::_M_head (4 samples, 0.01%)</title><rect x="1143.8" y="725" width="0.2" height="15.0" fill="rgb(250,119,29)" rx="2" ry="2" />
<text  x="1146.84" y="735.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (177 samples, 0.55%)</title><rect x="204.5" y="933" width="6.5" height="15.0" fill="rgb(251,12,1)" rx="2" ry="2" />
<text  x="207.47" y="943.5" ></text>
</g>
<g >
<title>std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;::pair (98 samples, 0.31%)</title><rect x="706.3" y="613" width="3.7" height="15.0" fill="rgb(227,153,38)" rx="2" ry="2" />
<text  x="709.34" y="623.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (4 samples, 0.01%)</title><rect x="140.3" y="597" width="0.1" height="15.0" fill="rgb(247,204,12)" rx="2" ry="2" />
<text  x="143.27" y="607.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (5 samples, 0.02%)</title><rect x="986.6" y="709" width="0.1" height="15.0" fill="rgb(244,136,40)" rx="2" ry="2" />
<text  x="989.55" y="719.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::~__allocated_ptr (18 samples, 0.06%)</title><rect x="904.2" y="405" width="0.6" height="15.0" fill="rgb(224,64,3)" rx="2" ry="2" />
<text  x="907.17" y="415.5" ></text>
</g>
<g >
<title>pixman_image_get_stride@plt (5 samples, 0.02%)</title><rect x="855.5" y="453" width="0.2" height="15.0" fill="rgb(252,153,42)" rx="2" ry="2" />
<text  x="858.47" y="463.5" ></text>
</g>
<g >
<title>std::tuple&lt;Game_Picture*, std::_Placeholder&lt;1&gt; &gt;::tuple (39 samples, 0.12%)</title><rect x="726.5" y="629" width="1.5" height="15.0" fill="rgb(225,16,26)" rx="2" ry="2" />
<text  x="729.52" y="639.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Sprite*, false&gt;::_M_head (6 samples, 0.02%)</title><rect x="970.5" y="613" width="0.3" height="15.0" fill="rgb(254,174,19)" rx="2" ry="2" />
<text  x="973.55" y="623.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.01%)</title><rect x="134.7" y="341" width="0.1" height="15.0" fill="rgb(241,14,42)" rx="2" ry="2" />
<text  x="137.73" y="351.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (6 samples, 0.02%)</title><rect x="1179.9" y="677" width="0.3" height="15.0" fill="rgb(207,222,15)" rx="2" ry="2" />
<text  x="1182.95" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (17 samples, 0.05%)</title><rect x="173.1" y="517" width="0.6" height="15.0" fill="rgb(215,143,7)" rx="2" ry="2" />
<text  x="176.09" y="527.5" ></text>
</g>
<g >
<title>Player::Run (96 samples, 0.30%)</title><rect x="191.3" y="981" width="3.6" height="15.0" fill="rgb(210,188,7)" rx="2" ry="2" />
<text  x="194.35" y="991.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_value (5 samples, 0.02%)</title><rect x="672.7" y="645" width="0.2" height="15.0" fill="rgb(216,196,28)" rx="2" ry="2" />
<text  x="675.75" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (13 samples, 0.04%)</title><rect x="109.9" y="981" width="0.5" height="15.0" fill="rgb(226,150,39)" rx="2" ry="2" />
<text  x="112.89" y="991.5" ></text>
</g>
<g >
<title>native_write_msr (74 samples, 0.23%)</title><rect x="19.1" y="757" width="2.8" height="15.0" fill="rgb(253,187,28)" rx="2" ry="2" />
<text  x="22.13" y="767.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (14 samples, 0.04%)</title><rect x="129.6" y="581" width="0.5" height="15.0" fill="rgb(246,10,7)" rx="2" ry="2" />
<text  x="132.56" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (4 samples, 0.01%)</title><rect x="140.3" y="565" width="0.1" height="15.0" fill="rgb(236,207,12)" rx="2" ry="2" />
<text  x="143.27" y="575.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (5 samples, 0.02%)</title><rect x="25.0" y="981" width="0.2" height="15.0" fill="rgb(214,42,12)" rx="2" ry="2" />
<text  x="28.00" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt;::__normal_iterator (5 samples, 0.02%)</title><rect x="1109.2" y="773" width="0.2" height="15.0" fill="rgb(229,42,21)" rx="2" ry="2" />
<text  x="1112.21" y="783.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::~_Head_base (21 samples, 0.07%)</title><rect x="213.1" y="549" width="0.8" height="15.0" fill="rgb(247,30,41)" rx="2" ry="2" />
<text  x="216.08" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::operator (17 samples, 0.05%)</title><rect x="1144.1" y="805" width="0.6" height="15.0" fill="rgb(220,2,24)" rx="2" ry="2" />
<text  x="1147.10" y="815.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (179 samples, 0.56%)</title><rect x="145.2" y="917" width="6.6" height="15.0" fill="rgb(220,68,20)" rx="2" ry="2" />
<text  x="148.23" y="927.5" ></text>
</g>
<g >
<title>ksys_read (22 samples, 0.07%)</title><rect x="22.5" y="949" width="0.8" height="15.0" fill="rgb(235,213,39)" rx="2" ry="2" />
<text  x="25.45" y="959.5" ></text>
</g>
<g >
<title>Bitmap::~Bitmap (6 samples, 0.02%)</title><rect x="28.3" y="981" width="0.2" height="15.0" fill="rgb(216,187,41)" rx="2" ry="2" />
<text  x="31.29" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_dispose (10 samples, 0.03%)</title><rect x="985.0" y="677" width="0.4" height="15.0" fill="rgb(220,181,17)" rx="2" ry="2" />
<text  x="988.00" y="687.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (6 samples, 0.02%)</title><rect x="190.5" y="293" width="0.2" height="15.0" fill="rgb(230,38,16)" rx="2" ry="2" />
<text  x="193.46" y="303.5" ></text>
</g>
<g >
<title>Bitmap::Create (179 samples, 0.56%)</title><rect x="145.2" y="677" width="6.6" height="15.0" fill="rgb(208,7,18)" rx="2" ry="2" />
<text  x="148.23" y="687.5" ></text>
</g>
<g >
<title>calloc (112 samples, 0.35%)</title><rect x="145.2" y="469" width="4.2" height="15.0" fill="rgb(235,187,54)" rx="2" ry="2" />
<text  x="148.23" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_valptr (8 samples, 0.03%)</title><rect x="69.6" y="981" width="0.3" height="15.0" fill="rgb(250,63,30)" rx="2" ry="2" />
<text  x="72.65" y="991.5" ></text>
</g>
<g >
<title>Bitmap::StretchBlit (4 samples, 0.01%)</title><rect x="258.2" y="757" width="0.1" height="15.0" fill="rgb(239,81,1)" rx="2" ry="2" />
<text  x="261.17" y="767.5" ></text>
</g>
<g >
<title>__sched_text_start (96 samples, 0.30%)</title><rect x="18.5" y="869" width="3.6" height="15.0" fill="rgb(217,127,19)" rx="2" ry="2" />
<text  x="21.54" y="879.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::_M_ptr (13 samples, 0.04%)</title><rect x="889.5" y="453" width="0.5" height="15.0" fill="rgb(210,167,35)" rx="2" ry="2" />
<text  x="892.54" y="463.5" ></text>
</g>
<g >
<title>pixman_image_unref (236 samples, 0.74%)</title><rect x="906.1" y="357" width="8.7" height="15.0" fill="rgb(230,200,38)" rx="2" ry="2" />
<text  x="909.06" y="367.5" ></text>
</g>
<g >
<title>Color::Color (15 samples, 0.05%)</title><rect x="866.6" y="325" width="0.6" height="15.0" fill="rgb(237,14,12)" rx="2" ry="2" />
<text  x="869.63" y="335.5" ></text>
</g>
<g >
<title>Drawable::GetPriorityForMapLayer (16 samples, 0.05%)</title><rect x="872.6" y="485" width="0.6" height="15.0" fill="rgb(221,42,10)" rx="2" ry="2" />
<text  x="875.58" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.03%)</title><rect x="128.7" y="981" width="0.3" height="15.0" fill="rgb(239,186,6)" rx="2" ry="2" />
<text  x="131.67" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char&gt; (3 samples, 0.01%)</title><rect x="817.7" y="405" width="0.1" height="15.0" fill="rgb(229,10,16)" rx="2" ry="2" />
<text  x="820.73" y="415.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_destroy (38 samples, 0.12%)</title><rect x="250.3" y="437" width="1.4" height="15.0" fill="rgb(249,47,28)" rx="2" ry="2" />
<text  x="253.29" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate (119 samples, 0.37%)</title><rect x="179.3" y="517" width="4.4" height="15.0" fill="rgb(212,155,24)" rx="2" ry="2" />
<text  x="182.26" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (22 samples, 0.07%)</title><rect x="462.3" y="693" width="0.8" height="15.0" fill="rgb(208,67,24)" rx="2" ry="2" />
<text  x="465.28" y="703.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (218 samples, 0.68%)</title><rect x="673.0" y="645" width="8.1" height="15.0" fill="rgb(216,63,3)" rx="2" ry="2" />
<text  x="676.05" y="655.5" ></text>
</g>
<g >
<title>operator!= (22 samples, 0.07%)</title><rect x="878.6" y="453" width="0.9" height="15.0" fill="rgb(244,6,47)" rx="2" ry="2" />
<text  x="881.64" y="463.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandControlVariables (4 samples, 0.01%)</title><rect x="31.0" y="981" width="0.1" height="15.0" fill="rgb(232,152,30)" rx="2" ry="2" />
<text  x="33.99" y="991.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (87 samples, 0.27%)</title><rect x="42.5" y="981" width="3.2" height="15.0" fill="rgb(247,159,13)" rx="2" ry="2" />
<text  x="45.52" y="991.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (14 samples, 0.04%)</title><rect x="129.6" y="469" width="0.5" height="15.0" fill="rgb(245,209,3)" rx="2" ry="2" />
<text  x="132.56" y="479.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (49 samples, 0.15%)</title><rect x="198.6" y="325" width="1.8" height="15.0" fill="rgb(212,121,22)" rx="2" ry="2" />
<text  x="201.59" y="335.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (142 samples, 0.44%)</title><rect x="174.0" y="613" width="5.3" height="15.0" fill="rgb(248,168,41)" rx="2" ry="2" />
<text  x="177.02" y="623.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, FileRequestResult*&amp;&amp;&gt; (7 samples, 0.02%)</title><rect x="96.4" y="981" width="0.3" height="15.0" fill="rgb(224,65,51)" rx="2" ry="2" />
<text  x="99.41" y="991.5" ></text>
</g>
<g >
<title>Game_Map::IsAnyEventStarting (43 samples, 0.13%)</title><rect x="1147.2" y="789" width="1.6" height="15.0" fill="rgb(237,73,35)" rx="2" ry="2" />
<text  x="1150.17" y="799.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator bool (10 samples, 0.03%)</title><rect x="719.2" y="677" width="0.3" height="15.0" fill="rgb(242,118,29)" rx="2" ry="2" />
<text  x="722.17" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (9 samples, 0.03%)</title><rect x="1177.1" y="805" width="0.3" height="15.0" fill="rgb(213,60,33)" rx="2" ry="2" />
<text  x="1180.07" y="815.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (5 samples, 0.02%)</title><rect x="106.0" y="981" width="0.2" height="15.0" fill="rgb(245,182,26)" rx="2" ry="2" />
<text  x="108.98" y="991.5" ></text>
</g>
<g >
<title>std::_Bit_reference::_Bit_reference (3 samples, 0.01%)</title><rect x="264.2" y="741" width="0.1" height="15.0" fill="rgb(214,86,31)" rx="2" ry="2" />
<text  x="267.15" y="751.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (7 samples, 0.02%)</title><rect x="916.4" y="501" width="0.3" height="15.0" fill="rgb(214,135,22)" rx="2" ry="2" />
<text  x="919.41" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (12 samples, 0.04%)</title><rect x="811.9" y="469" width="0.5" height="15.0" fill="rgb(213,46,38)" rx="2" ry="2" />
<text  x="814.93" y="479.5" ></text>
</g>
<g >
<title>Window_Base::Update (6 samples, 0.02%)</title><rect x="1179.5" y="837" width="0.2" height="15.0" fill="rgb(246,18,44)" rx="2" ry="2" />
<text  x="1182.50" y="847.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (122 samples, 0.38%)</title><rect x="211.0" y="949" width="4.5" height="15.0" fill="rgb(252,150,5)" rx="2" ry="2" />
<text  x="214.01" y="959.5" ></text>
</g>
<g >
<title>XFlush (5 samples, 0.02%)</title><rect x="1182.5" y="773" width="0.2" height="15.0" fill="rgb(218,134,16)" rx="2" ry="2" />
<text  x="1185.53" y="783.5" ></text>
</g>
<g >
<title>std::_Bit_const_iterator::_Bit_const_iterator (4 samples, 0.01%)</title><rect x="60.7" y="981" width="0.2" height="15.0" fill="rgb(223,199,32)" rx="2" ry="2" />
<text  x="63.74" y="991.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (122 samples, 0.38%)</title><rect x="211.0" y="757" width="4.5" height="15.0" fill="rgb(242,94,36)" rx="2" ry="2" />
<text  x="214.01" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (16 samples, 0.05%)</title><rect x="902.0" y="421" width="0.6" height="15.0" fill="rgb(215,73,17)" rx="2" ry="2" />
<text  x="904.99" y="431.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (14 samples, 0.04%)</title><rect x="129.6" y="885" width="0.5" height="15.0" fill="rgb(253,118,20)" rx="2" ry="2" />
<text  x="132.56" y="895.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (3 samples, 0.01%)</title><rect x="55.0" y="981" width="0.1" height="15.0" fill="rgb(208,165,27)" rx="2" ry="2" />
<text  x="57.98" y="991.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (14 samples, 0.04%)</title><rect x="129.6" y="485" width="0.5" height="15.0" fill="rgb(213,190,53)" rx="2" ry="2" />
<text  x="132.56" y="495.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (11 samples, 0.03%)</title><rect x="1174.9" y="757" width="0.4" height="15.0" fill="rgb(243,128,14)" rx="2" ry="2" />
<text  x="1177.92" y="767.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::~_Sp_counted_base (3 samples, 0.01%)</title><rect x="903.3" y="389" width="0.1" height="15.0" fill="rgb(248,106,25)" rx="2" ry="2" />
<text  x="906.32" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (72 samples, 0.23%)</title><rect x="151.8" y="549" width="2.7" height="15.0" fill="rgb(244,218,41)" rx="2" ry="2" />
<text  x="154.84" y="559.5" ></text>
</g>
<g >
<title>AsyncHandler::IsImportantFilePending (3 samples, 0.01%)</title><rect x="1182.8" y="885" width="0.1" height="15.0" fill="rgb(223,91,10)" rx="2" ry="2" />
<text  x="1185.76" y="895.5" ></text>
</g>
<g >
<title>malloc (67 samples, 0.21%)</title><rect x="149.4" y="469" width="2.4" height="15.0" fill="rgb(248,91,47)" rx="2" ry="2" />
<text  x="152.36" y="479.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (6 samples, 0.02%)</title><rect x="951.0" y="629" width="0.3" height="15.0" fill="rgb(237,199,41)" rx="2" ry="2" />
<text  x="954.04" y="639.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (45 samples, 0.14%)</title><rect x="213.9" y="501" width="1.6" height="15.0" fill="rgb(205,129,53)" rx="2" ry="2" />
<text  x="216.85" y="511.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (6 samples, 0.02%)</title><rect x="935.7" y="693" width="0.2" height="15.0" fill="rgb(214,147,33)" rx="2" ry="2" />
<text  x="938.70" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (53 samples, 0.17%)</title><rect x="143.3" y="485" width="1.9" height="15.0" fill="rgb(205,124,30)" rx="2" ry="2" />
<text  x="146.27" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (30 samples, 0.09%)</title><rect x="412.1" y="773" width="1.1" height="15.0" fill="rgb(218,53,41)" rx="2" ry="2" />
<text  x="415.09" y="783.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (4,531 samples, 14.19%)</title><rect x="754.9" y="613" width="167.4" height="15.0" fill="rgb(233,226,17)" rx="2" ry="2" />
<text  x="757.87" y="623.5" >std::_Bind&lt;std::_Mem_..</text>
</g>
<g >
<title>Color::Color (5 samples, 0.02%)</title><rect x="1161.8" y="789" width="0.1" height="15.0" fill="rgb(238,216,25)" rx="2" ry="2" />
<text  x="1164.76" y="799.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator() (4 samples, 0.01%)</title><rect x="197.8" y="373" width="0.1" height="15.0" fill="rgb(251,219,12)" rx="2" ry="2" />
<text  x="200.78" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::get (17 samples, 0.05%)</title><rect x="1144.1" y="789" width="0.6" height="15.0" fill="rgb(209,94,18)" rx="2" ry="2" />
<text  x="1147.10" y="799.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (3 samples, 0.01%)</title><rect x="127.2" y="981" width="0.1" height="15.0" fill="rgb(220,151,46)" rx="2" ry="2" />
<text  x="130.15" y="991.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocator&lt;Bitmap&gt; (3 samples, 0.01%)</title><rect x="91.4" y="981" width="0.1" height="15.0" fill="rgb(213,0,46)" rx="2" ry="2" />
<text  x="94.42" y="991.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Transition*, std::default_delete&lt;Transition&gt; &gt; (6 samples, 0.02%)</title><rect x="738.6" y="629" width="0.2" height="15.0" fill="rgb(225,216,43)" rx="2" ry="2" />
<text  x="741.61" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_value (10 samples, 0.03%)</title><rect x="681.2" y="645" width="0.4" height="15.0" fill="rgb(236,4,42)" rx="2" ry="2" />
<text  x="684.21" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (3 samples, 0.01%)</title><rect x="953.5" y="677" width="0.1" height="15.0" fill="rgb(212,91,30)" rx="2" ry="2" />
<text  x="956.48" y="687.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (97 samples, 0.30%)</title><rect x="18.5" y="901" width="3.6" height="15.0" fill="rgb(218,208,18)" rx="2" ry="2" />
<text  x="21.54" y="911.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (110 samples, 0.34%)</title><rect x="200.4" y="773" width="4.1" height="15.0" fill="rgb(223,192,30)" rx="2" ry="2" />
<text  x="203.40" y="783.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (776 samples, 2.43%)</title><rect x="221.2" y="837" width="28.7" height="15.0" fill="rgb(227,140,8)" rx="2" ry="2" />
<text  x="224.25" y="847.5" >Ga..</text>
</g>
<g >
<title>__tls_get_addr (3 samples, 0.01%)</title><rect x="854.8" y="421" width="0.1" height="15.0" fill="rgb(228,179,15)" rx="2" ry="2" />
<text  x="857.80" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_value (9 samples, 0.03%)</title><rect x="67.9" y="981" width="0.3" height="15.0" fill="rgb(230,6,48)" rx="2" ry="2" />
<text  x="70.91" y="991.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (17 samples, 0.05%)</title><rect x="97.7" y="981" width="0.7" height="15.0" fill="rgb(215,30,22)" rx="2" ry="2" />
<text  x="100.74" y="991.5" ></text>
</g>
<g >
<title>std::map&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, (anonymous namespace)::CacheItem, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (3 samples, 0.01%)</title><rect x="1179.6" y="773" width="0.1" height="15.0" fill="rgb(227,83,31)" rx="2" ry="2" />
<text  x="1182.58" y="783.5" ></text>
</g>
<g >
<title>Color::Color (4 samples, 0.01%)</title><rect x="960.2" y="709" width="0.1" height="15.0" fill="rgb(220,42,46)" rx="2" ry="2" />
<text  x="963.20" y="719.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (307 samples, 0.96%)</title><rect x="904.9" y="421" width="11.3" height="15.0" fill="rgb(225,194,32)" rx="2" ry="2" />
<text  x="907.88" y="431.5" ></text>
</g>
<g >
<title>pixman_image_unref (268 samples, 0.84%)</title><rect x="240.0" y="357" width="9.9" height="15.0" fill="rgb(243,160,27)" rx="2" ry="2" />
<text  x="243.02" y="367.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (276 samples, 0.86%)</title><rect x="130.1" y="661" width="10.2" height="15.0" fill="rgb(208,150,17)" rx="2" ry="2" />
<text  x="133.07" y="671.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (5 samples, 0.02%)</title><rect x="815.1" y="453" width="0.2" height="15.0" fill="rgb(221,121,36)" rx="2" ry="2" />
<text  x="818.15" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;int const&gt; (4 samples, 0.01%)</title><rect x="607.7" y="693" width="0.2" height="15.0" fill="rgb(236,95,21)" rx="2" ry="2" />
<text  x="610.71" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (30 samples, 0.09%)</title><rect x="496.6" y="693" width="1.1" height="15.0" fill="rgb(222,47,12)" rx="2" ry="2" />
<text  x="499.58" y="703.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (3 samples, 0.01%)</title><rect x="899.5" y="453" width="0.1" height="15.0" fill="rgb(211,144,34)" rx="2" ry="2" />
<text  x="902.48" y="463.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (130 samples, 0.41%)</title><rect x="140.4" y="885" width="4.8" height="15.0" fill="rgb(209,157,20)" rx="2" ry="2" />
<text  x="143.42" y="895.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (8 samples, 0.03%)</title><rect x="1179.9" y="757" width="0.3" height="15.0" fill="rgb(223,138,7)" rx="2" ry="2" />
<text  x="1182.87" y="767.5" ></text>
</g>
<g >
<title>operator== (8 samples, 0.03%)</title><rect x="964.6" y="677" width="0.3" height="15.0" fill="rgb(213,62,44)" rx="2" ry="2" />
<text  x="967.64" y="687.5" ></text>
</g>
<g >
<title>Game_Screen::GetPicture (46 samples, 0.14%)</title><rect x="981.5" y="741" width="1.7" height="15.0" fill="rgb(254,39,36)" rx="2" ry="2" />
<text  x="984.49" y="751.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_get_use_count (16 samples, 0.05%)</title><rect x="752.7" y="629" width="0.6" height="15.0" fill="rgb(236,151,28)" rx="2" ry="2" />
<text  x="755.72" y="639.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (49 samples, 0.15%)</title><rect x="973.8" y="693" width="1.8" height="15.0" fill="rgb(223,125,37)" rx="2" ry="2" />
<text  x="976.84" y="703.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (7 samples, 0.02%)</title><rect x="982.5" y="677" width="0.3" height="15.0" fill="rgb(232,14,15)" rx="2" ry="2" />
<text  x="985.52" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (7 samples, 0.02%)</title><rect x="154.6" y="565" width="0.3" height="15.0" fill="rgb(240,80,53)" rx="2" ry="2" />
<text  x="157.65" y="575.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (3 samples, 0.01%)</title><rect x="202.8" y="37" width="0.1" height="15.0" fill="rgb(218,219,40)" rx="2" ry="2" />
<text  x="205.77" y="47.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (4 samples, 0.01%)</title><rect x="718.9" y="597" width="0.2" height="15.0" fill="rgb(239,57,4)" rx="2" ry="2" />
<text  x="721.91" y="607.5" ></text>
</g>
<g >
<title>memcmp (5 samples, 0.02%)</title><rect x="799.1" y="341" width="0.2" height="15.0" fill="rgb(226,27,4)" rx="2" ry="2" />
<text  x="802.14" y="351.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (4 samples, 0.01%)</title><rect x="140.3" y="629" width="0.1" height="15.0" fill="rgb(212,158,34)" rx="2" ry="2" />
<text  x="143.27" y="639.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (110 samples, 0.34%)</title><rect x="200.4" y="869" width="4.1" height="15.0" fill="rgb(249,106,12)" rx="2" ry="2" />
<text  x="203.40" y="879.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (122 samples, 0.38%)</title><rect x="211.0" y="885" width="4.5" height="15.0" fill="rgb(238,137,14)" rx="2" ry="2" />
<text  x="214.01" y="895.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_value (22 samples, 0.07%)</title><rect x="670.3" y="629" width="0.8" height="15.0" fill="rgb(221,213,47)" rx="2" ry="2" />
<text  x="673.27" y="639.5" ></text>
</g>
<g >
<title>operator!= (10 samples, 0.03%)</title><rect x="59.9" y="981" width="0.3" height="15.0" fill="rgb(205,52,15)" rx="2" ry="2" />
<text  x="62.85" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (72 samples, 0.23%)</title><rect x="941.5" y="629" width="2.7" height="15.0" fill="rgb(234,205,7)" rx="2" ry="2" />
<text  x="944.54" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt;::end (93 samples, 0.29%)</title><rect x="1116.1" y="773" width="3.5" height="15.0" fill="rgb(208,31,25)" rx="2" ry="2" />
<text  x="1119.12" y="783.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (34 samples, 0.11%)</title><rect x="201.8" y="117" width="1.3" height="15.0" fill="rgb(219,59,35)" rx="2" ry="2" />
<text  x="204.81" y="127.5" ></text>
</g>
<g >
<title>Transition::IsErased (4 samples, 0.01%)</title><rect x="42.3" y="981" width="0.1" height="15.0" fill="rgb(222,223,19)" rx="2" ry="2" />
<text  x="45.30" y="991.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (276 samples, 0.86%)</title><rect x="130.1" y="693" width="10.2" height="15.0" fill="rgb(217,122,28)" rx="2" ry="2" />
<text  x="133.07" y="703.5" ></text>
</g>
<g >
<title>Cache::Picture (75 samples, 0.23%)</title><rect x="204.5" y="597" width="2.7" height="15.0" fill="rgb(215,82,29)" rx="2" ry="2" />
<text  x="207.47" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;int&gt;::_M_ptr (5 samples, 0.02%)</title><rect x="694.8" y="581" width="0.2" height="15.0" fill="rgb(220,87,8)" rx="2" ry="2" />
<text  x="697.78" y="591.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (202 samples, 0.63%)</title><rect x="495.2" y="725" width="7.5" height="15.0" fill="rgb(249,66,6)" rx="2" ry="2" />
<text  x="498.21" y="735.5" ></text>
</g>
<g >
<title>std::allocator&lt;Bitmap&gt;::allocator (4 samples, 0.01%)</title><rect x="868.8" y="389" width="0.2" height="15.0" fill="rgb(248,187,27)" rx="2" ry="2" />
<text  x="871.84" y="399.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (23,967 samples, 75.06%)</title><rect x="260.1" y="837" width="885.7" height="15.0" fill="rgb(211,188,3)" rx="2" ry="2" />
<text  x="263.09" y="847.5" >Game_Map::UpdateCommonEvents</text>
</g>
<g >
<title>Cache::System (6 samples, 0.02%)</title><rect x="1179.5" y="805" width="0.2" height="15.0" fill="rgb(249,6,38)" rx="2" ry="2" />
<text  x="1182.50" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (11 samples, 0.03%)</title><rect x="998.3" y="725" width="0.4" height="15.0" fill="rgb(209,214,1)" rx="2" ry="2" />
<text  x="1001.34" y="735.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (190 samples, 0.60%)</title><rect x="184.3" y="501" width="7.0" height="15.0" fill="rgb(245,192,37)" rx="2" ry="2" />
<text  x="187.33" y="511.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::CommonEvent&gt; (8 samples, 0.03%)</title><rect x="1146.3" y="805" width="0.3" height="15.0" fill="rgb(217,215,9)" rx="2" ry="2" />
<text  x="1149.28" y="815.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (122 samples, 0.38%)</title><rect x="211.0" y="821" width="4.5" height="15.0" fill="rgb(225,216,37)" rx="2" ry="2" />
<text  x="214.01" y="831.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (208 samples, 0.65%)</title><rect x="183.7" y="869" width="7.6" height="15.0" fill="rgb(225,16,25)" rx="2" ry="2" />
<text  x="186.66" y="879.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (190 samples, 0.60%)</title><rect x="184.3" y="549" width="7.0" height="15.0" fill="rgb(238,42,5)" rx="2" ry="2" />
<text  x="187.33" y="559.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (15 samples, 0.05%)</title><rect x="299.3" y="789" width="0.5" height="15.0" fill="rgb(238,216,42)" rx="2" ry="2" />
<text  x="302.26" y="799.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (18 samples, 0.06%)</title><rect x="603.6" y="677" width="0.7" height="15.0" fill="rgb(222,76,51)" rx="2" ry="2" />
<text  x="606.60" y="687.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;*&gt; (6 samples, 0.02%)</title><rect x="915.5" y="325" width="0.2" height="15.0" fill="rgb(252,154,6)" rx="2" ry="2" />
<text  x="918.52" y="335.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (3 samples, 0.01%)</title><rect x="63.7" y="981" width="0.1" height="15.0" fill="rgb(242,196,13)" rx="2" ry="2" />
<text  x="66.66" y="991.5" ></text>
</g>
<g >
<title>handle_mm_fault (123 samples, 0.39%)</title><rect x="228.0" y="389" width="4.6" height="15.0" fill="rgb(254,159,18)" rx="2" ry="2" />
<text  x="231.05" y="399.5" ></text>
</g>
<g >
<title>Player::Update (85 samples, 0.27%)</title><rect x="250.3" y="917" width="3.1" height="15.0" fill="rgb(238,59,30)" rx="2" ry="2" />
<text  x="253.29" y="927.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;int&gt;::~shared_ptr (7 samples, 0.02%)</title><rect x="951.6" y="709" width="0.2" height="15.0" fill="rgb(206,88,22)" rx="2" ry="2" />
<text  x="954.55" y="719.5" ></text>
</g>
<g >
<title>__libc_recvmsg (7 samples, 0.02%)</title><rect x="1181.1" y="677" width="0.2" height="15.0" fill="rgb(239,43,32)" rx="2" ry="2" />
<text  x="1184.06" y="687.5" ></text>
</g>
<g >
<title>operator new (150 samples, 0.47%)</title><rect x="988.7" y="709" width="5.6" height="15.0" fill="rgb(211,58,12)" rx="2" ry="2" />
<text  x="991.73" y="719.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::operator (7 samples, 0.02%)</title><rect x="738.8" y="677" width="0.3" height="15.0" fill="rgb(225,76,8)" rx="2" ry="2" />
<text  x="741.83" y="687.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (3 samples, 0.01%)</title><rect x="1181.2" y="629" width="0.1" height="15.0" fill="rgb(248,61,7)" rx="2" ry="2" />
<text  x="1184.20" y="639.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (14 samples, 0.04%)</title><rect x="129.6" y="725" width="0.5" height="15.0" fill="rgb(252,179,54)" rx="2" ry="2" />
<text  x="132.56" y="735.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (21 samples, 0.07%)</title><rect x="120.8" y="981" width="0.8" height="15.0" fill="rgb(224,76,27)" rx="2" ry="2" />
<text  x="123.80" y="991.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::key_comp (3 samples, 0.01%)</title><rect x="197.9" y="373" width="0.1" height="15.0" fill="rgb(235,0,3)" rx="2" ry="2" />
<text  x="200.93" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (156 samples, 0.49%)</title><rect x="164.0" y="501" width="5.7" height="15.0" fill="rgb(242,24,26)" rx="2" ry="2" />
<text  x="166.96" y="511.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (11 samples, 0.03%)</title><rect x="939.1" y="677" width="0.4" height="15.0" fill="rgb(207,107,50)" rx="2" ry="2" />
<text  x="942.06" y="687.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4 samples, 0.01%)</title><rect x="173.6" y="485" width="0.1" height="15.0" fill="rgb(219,82,43)" rx="2" ry="2" />
<text  x="176.57" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (21 samples, 0.07%)</title><rect x="919.8" y="501" width="0.8" height="15.0" fill="rgb(235,103,17)" rx="2" ry="2" />
<text  x="922.84" y="511.5" ></text>
</g>
<g >
<title>Player::Update (208 samples, 0.65%)</title><rect x="183.7" y="949" width="7.6" height="15.0" fill="rgb(233,151,8)" rx="2" ry="2" />
<text  x="186.66" y="959.5" ></text>
</g>
<g >
<title>do_page_fault (15 samples, 0.05%)</title><rect x="135.6" y="389" width="0.6" height="15.0" fill="rgb(226,11,34)" rx="2" ry="2" />
<text  x="138.62" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (3 samples, 0.01%)</title><rect x="969.9" y="645" width="0.1" height="15.0" fill="rgb(221,102,19)" rx="2" ry="2" />
<text  x="972.88" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (23 samples, 0.07%)</title><rect x="763.5" y="437" width="0.9" height="15.0" fill="rgb(230,51,24)" rx="2" ry="2" />
<text  x="766.52" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::substr (4 samples, 0.01%)</title><rect x="986.0" y="725" width="0.1" height="15.0" fill="rgb(216,197,26)" rx="2" ry="2" />
<text  x="988.96" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (92 samples, 0.29%)</title><rect x="207.2" y="453" width="3.4" height="15.0" fill="rgb(247,113,2)" rx="2" ry="2" />
<text  x="210.24" y="463.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (17 samples, 0.05%)</title><rect x="100.4" y="981" width="0.6" height="15.0" fill="rgb(233,72,37)" rx="2" ry="2" />
<text  x="103.40" y="991.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (92 samples, 0.29%)</title><rect x="207.2" y="533" width="3.4" height="15.0" fill="rgb(248,56,46)" rx="2" ry="2" />
<text  x="210.24" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::operator[] (29 samples, 0.09%)</title><rect x="263.2" y="773" width="1.1" height="15.0" fill="rgb(243,151,21)" rx="2" ry="2" />
<text  x="266.19" y="783.5" ></text>
</g>
<g >
<title>Game_Screen::Update (808 samples, 2.53%)</title><rect x="1148.9" y="837" width="29.9" height="15.0" fill="rgb(214,225,47)" rx="2" ry="2" />
<text  x="1151.94" y="847.5" >Ga..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.03%)</title><rect x="200.4" y="517" width="0.3" height="15.0" fill="rgb(227,130,24)" rx="2" ry="2" />
<text  x="203.40" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (8 samples, 0.03%)</title><rect x="615.7" y="709" width="0.3" height="15.0" fill="rgb(231,39,20)" rx="2" ry="2" />
<text  x="618.69" y="719.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (11 samples, 0.03%)</title><rect x="935.9" y="709" width="0.4" height="15.0" fill="rgb(244,11,34)" rx="2" ry="2" />
<text  x="938.92" y="719.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (56 samples, 0.18%)</title><rect x="968.7" y="677" width="2.1" height="15.0" fill="rgb(245,69,33)" rx="2" ry="2" />
<text  x="971.70" y="687.5" ></text>
</g>
<g >
<title>Sprite::SetZoomX (4 samples, 0.01%)</title><rect x="884.5" y="485" width="0.1" height="15.0" fill="rgb(230,130,43)" rx="2" ry="2" />
<text  x="887.48" y="495.5" ></text>
</g>
<g >
<title>X11_Pending (5 samples, 0.02%)</title><rect x="1182.5" y="789" width="0.2" height="15.0" fill="rgb(215,138,7)" rx="2" ry="2" />
<text  x="1185.53" y="799.5" ></text>
</g>
<g >
<title>SDL_PeepEvents_REAL (4 samples, 0.01%)</title><rect x="1180.5" y="853" width="0.1" height="15.0" fill="rgb(252,115,2)" rx="2" ry="2" />
<text  x="1183.47" y="863.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (105 samples, 0.33%)</title><rect x="815.7" y="469" width="3.9" height="15.0" fill="rgb(224,33,48)" rx="2" ry="2" />
<text  x="818.74" y="479.5" ></text>
</g>
<g >
<title>Sprite::SetOx (3 samples, 0.01%)</title><rect x="882.4" y="485" width="0.1" height="15.0" fill="rgb(237,85,18)" rx="2" ry="2" />
<text  x="885.41" y="495.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (7 samples, 0.02%)</title><rect x="765.1" y="421" width="0.3" height="15.0" fill="rgb(218,18,48)" rx="2" ry="2" />
<text  x="768.11" y="431.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (776 samples, 2.43%)</title><rect x="221.2" y="629" width="28.7" height="15.0" fill="rgb(207,178,9)" rx="2" ry="2" />
<text  x="224.25" y="639.5" >st..</text>
</g>
<g >
<title>std::_Function_base::~_Function_base (227 samples, 0.71%)</title><rect x="925.8" y="533" width="8.3" height="15.0" fill="rgb(219,200,11)" rx="2" ry="2" />
<text  x="928.76" y="543.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (130 samples, 0.41%)</title><rect x="140.4" y="757" width="4.8" height="15.0" fill="rgb(219,117,45)" rx="2" ry="2" />
<text  x="143.42" y="767.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Picture*, std::_Placeholder&lt;1&gt; &gt;::_M_head (4 samples, 0.01%)</title><rect x="727.2" y="597" width="0.1" height="15.0" fill="rgb(248,67,9)" rx="2" ry="2" />
<text  x="730.19" y="607.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (134 samples, 0.42%)</title><rect x="863.2" y="373" width="4.9" height="15.0" fill="rgb(206,172,33)" rx="2" ry="2" />
<text  x="866.19" y="383.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.03%)</title><rect x="210.6" y="389" width="0.4" height="15.0" fill="rgb(240,15,49)" rx="2" ry="2" />
<text  x="213.64" y="399.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_destroy (61 samples, 0.19%)</title><rect x="902.6" y="421" width="2.3" height="15.0" fill="rgb(252,143,46)" rx="2" ry="2" />
<text  x="905.62" y="431.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (108 samples, 0.34%)</title><rect x="908.7" y="309" width="4.0" height="15.0" fill="rgb(205,129,35)" rx="2" ry="2" />
<text  x="911.72" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (39 samples, 0.12%)</title><rect x="117.1" y="981" width="1.4" height="15.0" fill="rgb(231,121,18)" rx="2" ry="2" />
<text  x="120.06" y="991.5" ></text>
</g>
<g >
<title>Tone::Tone (30 samples, 0.09%)</title><rect x="884.6" y="485" width="1.1" height="15.0" fill="rgb(234,16,51)" rx="2" ry="2" />
<text  x="887.62" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (13 samples, 0.04%)</title><rect x="411.6" y="773" width="0.5" height="15.0" fill="rgb(235,142,9)" rx="2" ry="2" />
<text  x="414.57" y="783.5" ></text>
</g>
<g >
<title>pixman_region32_init (5 samples, 0.02%)</title><rect x="865.9" y="261" width="0.2" height="15.0" fill="rgb(252,148,6)" rx="2" ry="2" />
<text  x="868.92" y="271.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (19 samples, 0.06%)</title><rect x="148.7" y="437" width="0.7" height="15.0" fill="rgb(243,99,49)" rx="2" ry="2" />
<text  x="151.66" y="447.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustId (4 samples, 0.01%)</title><rect x="983.5" y="725" width="0.2" height="15.0" fill="rgb(205,227,33)" rx="2" ry="2" />
<text  x="986.52" y="735.5" ></text>
</g>
<g >
<title>Blend (38 samples, 0.12%)</title><rect x="1160.4" y="789" width="1.4" height="15.0" fill="rgb(220,34,50)" rx="2" ry="2" />
<text  x="1163.36" y="799.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (34 samples, 0.11%)</title><rect x="886.3" y="485" width="1.2" height="15.0" fill="rgb(223,176,11)" rx="2" ry="2" />
<text  x="889.25" y="495.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (25 samples, 0.08%)</title><rect x="173.1" y="581" width="0.9" height="15.0" fill="rgb(241,38,32)" rx="2" ry="2" />
<text  x="176.09" y="591.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (3 samples, 0.01%)</title><rect x="245.3" y="293" width="0.1" height="15.0" fill="rgb(217,31,6)" rx="2" ry="2" />
<text  x="248.31" y="303.5" ></text>
</g>
<g >
<title>Game_Interpreter::IsAsyncPending (6 samples, 0.02%)</title><rect x="265.7" y="805" width="0.2" height="15.0" fill="rgb(218,198,16)" rx="2" ry="2" />
<text  x="268.67" y="815.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (59 samples, 0.18%)</title><rect x="701.5" y="501" width="2.2" height="15.0" fill="rgb(250,188,20)" rx="2" ry="2" />
<text  x="704.50" y="511.5" ></text>
</g>
<g >
<title>pixman_image_get_data@plt (12 samples, 0.04%)</title><rect x="856.3" y="453" width="0.4" height="15.0" fill="rgb(209,105,5)" rx="2" ry="2" />
<text  x="859.28" y="463.5" ></text>
</g>
<g >
<title>std::__weak_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__weak_count (4 samples, 0.01%)</title><rect x="711.4" y="645" width="0.1" height="15.0" fill="rgb(210,220,51)" rx="2" ry="2" />
<text  x="714.37" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (8 samples, 0.03%)</title><rect x="58.2" y="981" width="0.3" height="15.0" fill="rgb(218,92,43)" rx="2" ry="2" />
<text  x="61.15" y="991.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.03%)</title><rect x="210.6" y="357" width="0.4" height="15.0" fill="rgb(213,109,3)" rx="2" ry="2" />
<text  x="213.64" y="367.5" ></text>
</g>
<g >
<title>native_write_msr (22 samples, 0.07%)</title><rect x="1181.5" y="581" width="0.8" height="15.0" fill="rgb(250,214,7)" rx="2" ry="2" />
<text  x="1184.54" y="591.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_destroy (209 samples, 0.65%)</title><rect x="926.4" y="501" width="7.7" height="15.0" fill="rgb(220,160,0)" rx="2" ry="2" />
<text  x="929.42" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (12 samples, 0.04%)</title><rect x="502.1" y="677" width="0.5" height="15.0" fill="rgb(232,31,41)" rx="2" ry="2" />
<text  x="505.12" y="687.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (96 samples, 0.30%)</title><rect x="191.3" y="709" width="3.6" height="15.0" fill="rgb(214,149,12)" rx="2" ry="2" />
<text  x="194.35" y="719.5" ></text>
</g>
<g >
<title>deactivate_task (9 samples, 0.03%)</title><rect x="18.8" y="853" width="0.3" height="15.0" fill="rgb(251,213,32)" rx="2" ry="2" />
<text  x="21.80" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (37 samples, 0.12%)</title><rect x="479.6" y="677" width="1.4" height="15.0" fill="rgb(223,26,1)" rx="2" ry="2" />
<text  x="482.61" y="687.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (67 samples, 0.21%)</title><rect x="513.3" y="741" width="2.5" height="15.0" fill="rgb(220,213,54)" rx="2" ry="2" />
<text  x="516.28" y="751.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (8 samples, 0.03%)</title><rect x="76.6" y="981" width="0.3" height="15.0" fill="rgb(254,187,27)" rx="2" ry="2" />
<text  x="79.56" y="991.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_M_head (20 samples, 0.06%)</title><rect x="801.9" y="341" width="0.7" height="15.0" fill="rgb(227,76,42)" rx="2" ry="2" />
<text  x="804.88" y="351.5" ></text>
</g>
<g >
<title>std::max&lt;int&gt; (5 samples, 0.02%)</title><rect x="102.7" y="981" width="0.1" height="15.0" fill="rgb(220,198,45)" rx="2" ry="2" />
<text  x="105.65" y="991.5" ></text>
</g>
<g >
<title>Cache::SystemOrBlack (4 samples, 0.01%)</title><rect x="1179.7" y="789" width="0.2" height="15.0" fill="rgb(220,97,16)" rx="2" ry="2" />
<text  x="1182.73" y="799.5" ></text>
</g>
<g >
<title>__task_pid_nr_ns (4 samples, 0.01%)</title><rect x="17.9" y="949" width="0.2" height="15.0" fill="rgb(238,181,38)" rx="2" ry="2" />
<text  x="20.91" y="959.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (3 samples, 0.01%)</title><rect x="151.7" y="421" width="0.1" height="15.0" fill="rgb(230,223,38)" rx="2" ry="2" />
<text  x="154.73" y="431.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (119 samples, 0.37%)</title><rect x="179.3" y="597" width="4.4" height="15.0" fill="rgb(213,189,24)" rx="2" ry="2" />
<text  x="182.26" y="607.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_ptr (5 samples, 0.02%)</title><rect x="905.1" y="405" width="0.2" height="15.0" fill="rgb(237,132,45)" rx="2" ry="2" />
<text  x="908.14" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (6 samples, 0.02%)</title><rect x="1001.6" y="741" width="0.2" height="15.0" fill="rgb(228,34,7)" rx="2" ry="2" />
<text  x="1004.56" y="751.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (11 samples, 0.03%)</title><rect x="91.0" y="981" width="0.4" height="15.0" fill="rgb(212,201,29)" rx="2" ry="2" />
<text  x="93.97" y="991.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (51 samples, 0.16%)</title><rect x="689.3" y="549" width="1.9" height="15.0" fill="rgb(231,83,8)" rx="2" ry="2" />
<text  x="692.31" y="559.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (101 samples, 0.32%)</title><rect x="200.7" y="533" width="3.8" height="15.0" fill="rgb(240,87,3)" rx="2" ry="2" />
<text  x="203.74" y="543.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (6 samples, 0.02%)</title><rect x="210.8" y="229" width="0.2" height="15.0" fill="rgb(249,56,53)" rx="2" ry="2" />
<text  x="213.75" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (107 samples, 0.34%)</title><rect x="773.3" y="437" width="3.9" height="15.0" fill="rgb(221,220,27)" rx="2" ry="2" />
<text  x="776.27" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::size (4 samples, 0.01%)</title><rect x="116.9" y="981" width="0.2" height="15.0" fill="rgb(245,131,44)" rx="2" ry="2" />
<text  x="119.92" y="991.5" ></text>
</g>
<g >
<title>Player::GetTicks (7 samples, 0.02%)</title><rect x="40.0" y="981" width="0.3" height="15.0" fill="rgb(233,55,29)" rx="2" ry="2" />
<text  x="43.05" y="991.5" ></text>
</g>
<g >
<title>__libc_start_main (25,037 samples, 78.41%)</title><rect x="257.6" y="981" width="925.3" height="15.0" fill="rgb(243,52,11)" rx="2" ry="2" />
<text  x="260.57" y="991.5" >__libc_start_main</text>
</g>
<g >
<title>__memcmp_avx2_movbe (11 samples, 0.03%)</title><rect x="172.5" y="485" width="0.4" height="15.0" fill="rgb(246,57,3)" rx="2" ry="2" />
<text  x="175.50" y="495.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned@plt (8 samples, 0.03%)</title><rect x="224.3" y="453" width="0.3" height="15.0" fill="rgb(237,154,27)" rx="2" ry="2" />
<text  x="227.28" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate (53 samples, 0.17%)</title><rect x="143.3" y="549" width="1.9" height="15.0" fill="rgb(205,109,7)" rx="2" ry="2" />
<text  x="146.27" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (8 samples, 0.03%)</title><rect x="682.6" y="613" width="0.3" height="15.0" fill="rgb(209,29,46)" rx="2" ry="2" />
<text  x="685.62" y="623.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (14 samples, 0.04%)</title><rect x="129.6" y="757" width="0.5" height="15.0" fill="rgb(234,141,19)" rx="2" ry="2" />
<text  x="132.56" y="767.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (96 samples, 0.30%)</title><rect x="191.3" y="613" width="3.6" height="15.0" fill="rgb(208,148,28)" rx="2" ry="2" />
<text  x="194.35" y="623.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::~_Sp_counted_base (4 samples, 0.01%)</title><rect x="71.4" y="981" width="0.2" height="15.0" fill="rgb(254,136,42)" rx="2" ry="2" />
<text  x="74.42" y="991.5" ></text>
</g>
<g >
<title>Game_Character::UpdateMovement (48 samples, 0.15%)</title><rect x="1147.1" y="821" width="1.7" height="15.0" fill="rgb(224,116,50)" rx="2" ry="2" />
<text  x="1150.06" y="831.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::_Placeholder&lt;1&gt;&gt; (5 samples, 0.02%)</title><rect x="922.1" y="581" width="0.2" height="15.0" fill="rgb(230,92,6)" rx="2" ry="2" />
<text  x="925.14" y="591.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (179 samples, 0.56%)</title><rect x="145.2" y="853" width="6.6" height="15.0" fill="rgb(232,222,19)" rx="2" ry="2" />
<text  x="148.23" y="863.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, FileRequestResult*&amp;&amp;&gt; (3 samples, 0.01%)</title><rect x="921.8" y="597" width="0.1" height="15.0" fill="rgb(209,192,19)" rx="2" ry="2" />
<text  x="924.80" y="607.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator() (8 samples, 0.03%)</title><rect x="780.2" y="405" width="0.3" height="15.0" fill="rgb(232,179,5)" rx="2" ry="2" />
<text  x="783.18" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (10 samples, 0.03%)</title><rect x="1178.0" y="805" width="0.4" height="15.0" fill="rgb(224,110,35)" rx="2" ry="2" />
<text  x="1181.03" y="815.5" ></text>
</g>
<g >
<title>__GI_madvise (7 samples, 0.02%)</title><rect x="210.8" y="309" width="0.2" height="15.0" fill="rgb(220,62,38)" rx="2" ry="2" />
<text  x="213.75" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::end (4 samples, 0.01%)</title><rect x="935.2" y="661" width="0.1" height="15.0" fill="rgb(247,94,12)" rx="2" ry="2" />
<text  x="938.18" y="671.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (3 samples, 0.01%)</title><rect x="950.7" y="517" width="0.2" height="15.0" fill="rgb(223,191,24)" rx="2" ry="2" />
<text  x="953.74" y="527.5" ></text>
</g>
<g >
<title>Blend (35 samples, 0.11%)</title><rect x="958.9" y="709" width="1.3" height="15.0" fill="rgb(212,89,29)" rx="2" ry="2" />
<text  x="961.91" y="719.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (179 samples, 0.56%)</title><rect x="145.2" y="709" width="6.6" height="15.0" fill="rgb(242,30,46)" rx="2" ry="2" />
<text  x="148.23" y="719.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (54 samples, 0.17%)</title><rect x="196.5" y="485" width="2.0" height="15.0" fill="rgb(222,129,10)" rx="2" ry="2" />
<text  x="199.52" y="495.5" ></text>
</g>
<g >
<title>do_page_fault (6 samples, 0.02%)</title><rect x="148.4" y="405" width="0.2" height="15.0" fill="rgb(234,222,20)" rx="2" ry="2" />
<text  x="151.37" y="415.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (228 samples, 0.71%)</title><rect x="728.3" y="677" width="8.4" height="15.0" fill="rgb(235,117,4)" rx="2" ry="2" />
<text  x="731.30" y="687.5" ></text>
</g>
<g >
<title>std::bitset&lt;36ul&gt;::reference::operator= (3 samples, 0.01%)</title><rect x="259.5" y="853" width="0.1" height="15.0" fill="rgb(240,131,20)" rx="2" ry="2" />
<text  x="262.46" y="863.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (8 samples, 0.03%)</title><rect x="63.8" y="981" width="0.3" height="15.0" fill="rgb(208,8,44)" rx="2" ry="2" />
<text  x="66.77" y="991.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (45 samples, 0.14%)</title><rect x="213.9" y="533" width="1.6" height="15.0" fill="rgb(207,167,12)" rx="2" ry="2" />
<text  x="216.85" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::new_allocator (10 samples, 0.03%)</title><rect x="56.2" y="981" width="0.4" height="15.0" fill="rgb(235,60,40)" rx="2" ry="2" />
<text  x="59.23" y="991.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (3 samples, 0.01%)</title><rect x="124.1" y="981" width="0.1" height="15.0" fill="rgb(208,88,1)" rx="2" ry="2" />
<text  x="127.09" y="991.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (23 samples, 0.07%)</title><rect x="1150.6" y="805" width="0.9" height="15.0" fill="rgb(235,133,15)" rx="2" ry="2" />
<text  x="1153.60" y="815.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::deallocate (38 samples, 0.12%)</title><rect x="250.3" y="405" width="1.4" height="15.0" fill="rgb(252,73,25)" rx="2" ry="2" />
<text  x="253.29" y="415.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (4 samples, 0.01%)</title><rect x="140.3" y="789" width="0.1" height="15.0" fill="rgb(217,58,53)" rx="2" ry="2" />
<text  x="143.27" y="799.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (14 samples, 0.04%)</title><rect x="129.6" y="773" width="0.5" height="15.0" fill="rgb(241,152,37)" rx="2" ry="2" />
<text  x="132.56" y="783.5" ></text>
</g>
<g >
<title>release_pages (31 samples, 0.10%)</title><rect x="201.9" y="101" width="1.2" height="15.0" fill="rgb(225,166,33)" rx="2" ry="2" />
<text  x="204.92" y="111.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, bool&gt;::_M_head (5 samples, 0.02%)</title><rect x="809.4" y="341" width="0.2" height="15.0" fill="rgb(208,116,19)" rx="2" ry="2" />
<text  x="812.42" y="351.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (4 samples, 0.01%)</title><rect x="140.3" y="709" width="0.1" height="15.0" fill="rgb(247,98,35)" rx="2" ry="2" />
<text  x="143.27" y="719.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (6 samples, 0.02%)</title><rect x="81.7" y="981" width="0.2" height="15.0" fill="rgb(232,209,46)" rx="2" ry="2" />
<text  x="84.66" y="991.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (130 samples, 0.41%)</title><rect x="140.4" y="789" width="4.8" height="15.0" fill="rgb(208,180,2)" rx="2" ry="2" />
<text  x="143.42" y="799.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (21 samples, 0.07%)</title><rect x="970.0" y="645" width="0.8" height="15.0" fill="rgb(211,102,4)" rx="2" ry="2" />
<text  x="972.99" y="655.5" ></text>
</g>
<g >
<title>std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;::_Mem_fn_base (5 samples, 0.02%)</title><rect x="736.9" y="677" width="0.2" height="15.0" fill="rgb(208,13,19)" rx="2" ry="2" />
<text  x="739.94" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (40 samples, 0.13%)</title><rect x="979.4" y="693" width="1.5" height="15.0" fill="rgb(224,96,0)" rx="2" ry="2" />
<text  x="982.42" y="703.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Any_data&amp;&gt; (3 samples, 0.01%)</title><rect x="708.3" y="549" width="0.1" height="15.0" fill="rgb(212,184,42)" rx="2" ry="2" />
<text  x="711.30" y="559.5" ></text>
</g>
<g >
<title>Game_Picture::Show (257 samples, 0.80%)</title><rect x="151.8" y="869" width="9.5" height="15.0" fill="rgb(246,118,16)" rx="2" ry="2" />
<text  x="154.84" y="879.5" ></text>
</g>
<g >
<title>Window_Base::Update (4 samples, 0.01%)</title><rect x="1179.7" y="805" width="0.2" height="15.0" fill="rgb(230,5,24)" rx="2" ry="2" />
<text  x="1182.73" y="815.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (6 samples, 0.02%)</title><rect x="754.1" y="645" width="0.2" height="15.0" fill="rgb(209,160,39)" rx="2" ry="2" />
<text  x="757.09" y="655.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (776 samples, 2.43%)</title><rect x="221.2" y="821" width="28.7" height="15.0" fill="rgb(239,204,23)" rx="2" ry="2" />
<text  x="224.25" y="831.5" >Ga..</text>
</g>
<g >
<title>__sanitizer_weak_hook_memcmp (3 samples, 0.01%)</title><rect x="250.2" y="981" width="0.1" height="15.0" fill="rgb(245,167,23)" rx="2" ry="2" />
<text  x="253.18" y="991.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (257 samples, 0.80%)</title><rect x="151.8" y="949" width="9.5" height="15.0" fill="rgb(221,16,9)" rx="2" ry="2" />
<text  x="154.84" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (201 samples, 0.63%)</title><rect x="673.3" y="613" width="7.5" height="15.0" fill="rgb(248,178,24)" rx="2" ry="2" />
<text  x="676.34" y="623.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (65 samples, 0.20%)</title><rect x="916.9" y="485" width="2.4" height="15.0" fill="rgb(213,11,50)" rx="2" ry="2" />
<text  x="919.92" y="495.5" ></text>
</g>
<g >
<title>get_page_from_freelist (25 samples, 0.08%)</title><rect x="230.6" y="325" width="0.9" height="15.0" fill="rgb(254,184,17)" rx="2" ry="2" />
<text  x="233.60" y="335.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_weak_add_ref (19 samples, 0.06%)</title><rect x="710.5" y="629" width="0.7" height="15.0" fill="rgb(238,154,41)" rx="2" ry="2" />
<text  x="713.52" y="639.5" ></text>
</g>
<g >
<title>Cache::Picture (18 samples, 0.06%)</title><rect x="183.7" y="549" width="0.6" height="15.0" fill="rgb(225,223,12)" rx="2" ry="2" />
<text  x="186.66" y="559.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (13 samples, 0.04%)</title><rect x="881.5" y="421" width="0.5" height="15.0" fill="rgb(235,229,30)" rx="2" ry="2" />
<text  x="884.48" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.02%)</title><rect x="666.0" y="549" width="0.2" height="15.0" fill="rgb(233,221,7)" rx="2" ry="2" />
<text  x="669.02" y="559.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (25 samples, 0.08%)</title><rect x="173.1" y="565" width="0.9" height="15.0" fill="rgb(225,125,15)" rx="2" ry="2" />
<text  x="176.09" y="575.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (4 samples, 0.01%)</title><rect x="140.3" y="741" width="0.1" height="15.0" fill="rgb(236,22,5)" rx="2" ry="2" />
<text  x="143.27" y="751.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (11 samples, 0.03%)</title><rect x="890.7" y="485" width="0.4" height="15.0" fill="rgb(215,200,43)" rx="2" ry="2" />
<text  x="893.69" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (194 samples, 0.61%)</title><rect x="926.9" y="469" width="7.1" height="15.0" fill="rgb(242,72,47)" rx="2" ry="2" />
<text  x="929.87" y="479.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (6 samples, 0.02%)</title><rect x="201.3" y="277" width="0.2" height="15.0" fill="rgb(231,179,30)" rx="2" ry="2" />
<text  x="204.25" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (3 samples, 0.01%)</title><rect x="629.7" y="709" width="0.1" height="15.0" fill="rgb(226,210,47)" rx="2" ry="2" />
<text  x="632.66" y="719.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Transition*, std::default_delete&lt;Transition&gt; &gt;::_M_head (3 samples, 0.01%)</title><rect x="75.5" y="981" width="0.1" height="15.0" fill="rgb(208,8,4)" rx="2" ry="2" />
<text  x="78.52" y="991.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (85 samples, 0.27%)</title><rect x="250.3" y="469" width="3.1" height="15.0" fill="rgb(236,93,16)" rx="2" ry="2" />
<text  x="253.29" y="479.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::end (18 samples, 0.06%)</title><rect x="207.2" y="389" width="0.7" height="15.0" fill="rgb(229,209,25)" rx="2" ry="2" />
<text  x="210.24" y="399.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (5 samples, 0.02%)</title><rect x="1182.5" y="741" width="0.2" height="15.0" fill="rgb(248,226,33)" rx="2" ry="2" />
<text  x="1185.53" y="751.5" ></text>
</g>
<g >
<title>std::make_shared&lt;int, int&gt; (341 samples, 1.07%)</title><rect x="692.3" y="677" width="12.6" height="15.0" fill="rgb(215,170,39)" rx="2" ry="2" />
<text  x="695.26" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (149 samples, 0.47%)</title><rect x="674.5" y="597" width="5.5" height="15.0" fill="rgb(214,206,18)" rx="2" ry="2" />
<text  x="677.52" y="607.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (5 samples, 0.02%)</title><rect x="210.8" y="181" width="0.2" height="15.0" fill="rgb(213,23,2)" rx="2" ry="2" />
<text  x="213.79" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (34 samples, 0.11%)</title><rect x="501.3" y="693" width="1.3" height="15.0" fill="rgb(254,3,19)" rx="2" ry="2" />
<text  x="504.31" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.02%)</title><rect x="151.5" y="421" width="0.2" height="15.0" fill="rgb(222,201,43)" rx="2" ry="2" />
<text  x="154.55" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (55 samples, 0.17%)</title><rect x="1131.2" y="789" width="2.0" height="15.0" fill="rgb(223,19,48)" rx="2" ry="2" />
<text  x="1134.20" y="799.5" ></text>
</g>
<g >
<title>X11_PumpEvents (8 samples, 0.03%)</title><rect x="1182.4" y="805" width="0.3" height="15.0" fill="rgb(207,120,14)" rx="2" ry="2" />
<text  x="1185.42" y="815.5" ></text>
</g>
<g >
<title>common_file_perm (6 samples, 0.02%)</title><rect x="23.0" y="869" width="0.2" height="15.0" fill="rgb(218,193,5)" rx="2" ry="2" />
<text  x="26.01" y="879.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (5 samples, 0.02%)</title><rect x="204.1" y="149" width="0.2" height="15.0" fill="rgb(212,136,27)" rx="2" ry="2" />
<text  x="207.14" y="159.5" ></text>
</g>
<g >
<title>Scene_Map::Update (85 samples, 0.27%)</title><rect x="250.3" y="901" width="3.1" height="15.0" fill="rgb(219,221,33)" rx="2" ry="2" />
<text  x="253.29" y="911.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (14 samples, 0.04%)</title><rect x="129.6" y="693" width="0.5" height="15.0" fill="rgb(207,149,50)" rx="2" ry="2" />
<text  x="132.56" y="703.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (3 samples, 0.01%)</title><rect x="134.7" y="325" width="0.1" height="15.0" fill="rgb(241,226,0)" rx="2" ry="2" />
<text  x="137.73" y="335.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.03%)</title><rect x="161.3" y="549" width="0.3" height="15.0" fill="rgb(245,38,2)" rx="2" ry="2" />
<text  x="164.34" y="559.5" ></text>
</g>
<g >
<title>operator delete (168 samples, 0.53%)</title><rect x="660.4" y="693" width="6.2" height="15.0" fill="rgb(227,95,21)" rx="2" ry="2" />
<text  x="663.41" y="703.5" ></text>
</g>
<g >
<title>Player::IsRPG2k3E (3 samples, 0.01%)</title><rect x="986.9" y="741" width="0.1" height="15.0" fill="rgb(220,160,50)" rx="2" ry="2" />
<text  x="989.88" y="751.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (604 samples, 1.89%)</title><rect x="161.3" y="869" width="22.4" height="15.0" fill="rgb(235,229,27)" rx="2" ry="2" />
<text  x="164.34" y="879.5" >G..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (63 samples, 0.20%)</title><rect x="948.4" y="517" width="2.3" height="15.0" fill="rgb(232,209,46)" rx="2" ry="2" />
<text  x="951.41" y="527.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::end (7 samples, 0.02%)</title><rect x="667.1" y="693" width="0.3" height="15.0" fill="rgb(216,194,17)" rx="2" ry="2" />
<text  x="670.13" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (22 samples, 0.07%)</title><rect x="118.5" y="981" width="0.8" height="15.0" fill="rgb(238,97,11)" rx="2" ry="2" />
<text  x="121.51" y="991.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (4 samples, 0.01%)</title><rect x="643.9" y="597" width="0.1" height="15.0" fill="rgb(230,118,40)" rx="2" ry="2" />
<text  x="646.89" y="607.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (45 samples, 0.14%)</title><rect x="213.9" y="405" width="1.6" height="15.0" fill="rgb(237,227,20)" rx="2" ry="2" />
<text  x="216.85" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (7 samples, 0.02%)</title><rect x="811.1" y="373" width="0.2" height="15.0" fill="rgb(211,97,50)" rx="2" ry="2" />
<text  x="814.08" y="383.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (4,565 samples, 14.30%)</title><rect x="754.5" y="629" width="168.7" height="15.0" fill="rgb(242,154,40)" rx="2" ry="2" />
<text  x="757.46" y="639.5" >std::_Bind&lt;std::_Mem_..</text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator bool (6 samples, 0.02%)</title><rect x="967.9" y="709" width="0.2" height="15.0" fill="rgb(212,95,37)" rx="2" ry="2" />
<text  x="970.89" y="719.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (5 samples, 0.02%)</title><rect x="953.4" y="693" width="0.2" height="15.0" fill="rgb(243,183,37)" rx="2" ry="2" />
<text  x="956.44" y="703.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (5 samples, 0.02%)</title><rect x="783.7" y="437" width="0.1" height="15.0" fill="rgb(242,98,0)" rx="2" ry="2" />
<text  x="786.66" y="447.5" ></text>
</g>
<g >
<title>Game_Screen::GetTone (23 samples, 0.07%)</title><rect x="962.6" y="709" width="0.9" height="15.0" fill="rgb(214,101,31)" rx="2" ry="2" />
<text  x="965.64" y="719.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (604 samples, 1.89%)</title><rect x="161.3" y="709" width="22.4" height="15.0" fill="rgb(249,224,5)" rx="2" ry="2" />
<text  x="164.34" y="719.5" >s..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (53 samples, 0.17%)</title><rect x="143.3" y="501" width="1.9" height="15.0" fill="rgb(242,149,15)" rx="2" ry="2" />
<text  x="146.27" y="511.5" ></text>
</g>
<g >
<title>std::forward&lt;std::function&lt;void (FileRequestResult*)&gt;&amp;&gt; (6 samples, 0.02%)</title><rect x="94.3" y="981" width="0.3" height="15.0" fill="rgb(225,13,44)" rx="2" ry="2" />
<text  x="97.34" y="991.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (12 samples, 0.04%)</title><rect x="204.0" y="245" width="0.4" height="15.0" fill="rgb(207,138,27)" rx="2" ry="2" />
<text  x="206.99" y="255.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_base (9 samples, 0.03%)</title><rect x="862.2" y="373" width="0.3" height="15.0" fill="rgb(252,214,46)" rx="2" ry="2" />
<text  x="865.15" y="383.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_clone (152 samples, 0.48%)</title><rect x="685.6" y="613" width="5.7" height="15.0" fill="rgb(239,102,19)" rx="2" ry="2" />
<text  x="688.65" y="623.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (22 samples, 0.07%)</title><rect x="1181.5" y="613" width="0.8" height="15.0" fill="rgb(239,134,29)" rx="2" ry="2" />
<text  x="1184.54" y="623.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, FileRequestResult*&amp;&amp;&gt;::_Tuple_impl&lt;FileRequestResult*&gt; (8 samples, 0.03%)</title><rect x="922.8" y="581" width="0.3" height="15.0" fill="rgb(240,121,47)" rx="2" ry="2" />
<text  x="925.76" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (13 samples, 0.04%)</title><rect x="611.2" y="741" width="0.5" height="15.0" fill="rgb(210,216,48)" rx="2" ry="2" />
<text  x="614.22" y="751.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (34 samples, 0.11%)</title><rect x="781.7" y="405" width="1.2" height="15.0" fill="rgb(225,66,26)" rx="2" ry="2" />
<text  x="784.66" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (107 samples, 0.34%)</title><rect x="459.1" y="725" width="4.0" height="15.0" fill="rgb(214,48,54)" rx="2" ry="2" />
<text  x="462.14" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::operator (3 samples, 0.01%)</title><rect x="111.7" y="981" width="0.2" height="15.0" fill="rgb(235,82,16)" rx="2" ry="2" />
<text  x="114.74" y="991.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (42 samples, 0.13%)</title><rect x="781.4" y="421" width="1.5" height="15.0" fill="rgb(242,184,26)" rx="2" ry="2" />
<text  x="784.37" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::_Placeholder&lt;1&gt; &gt;::_M_head (6 samples, 0.02%)</title><rect x="75.9" y="981" width="0.2" height="15.0" fill="rgb(228,31,50)" rx="2" ry="2" />
<text  x="78.86" y="991.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (177 samples, 0.55%)</title><rect x="204.5" y="789" width="6.5" height="15.0" fill="rgb(228,157,19)" rx="2" ry="2" />
<text  x="207.47" y="799.5" ></text>
</g>
<g >
<title>Bitmap::Init (179 samples, 0.56%)</title><rect x="145.2" y="517" width="6.6" height="15.0" fill="rgb(252,35,4)" rx="2" ry="2" />
<text  x="148.23" y="527.5" ></text>
</g>
<g >
<title>std::_Mu&lt;std::_Placeholder&lt;1&gt;, false, true&gt;::operator()&lt;std::tuple&lt;FileRequestResult*&amp;&amp;&gt; &gt; (19 samples, 0.06%)</title><rect x="755.2" y="597" width="0.7" height="15.0" fill="rgb(248,191,23)" rx="2" ry="2" />
<text  x="758.24" y="607.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (101 samples, 0.32%)</title><rect x="200.7" y="565" width="3.8" height="15.0" fill="rgb(249,88,33)" rx="2" ry="2" />
<text  x="203.74" y="575.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.01%)</title><rect x="986.0" y="597" width="0.1" height="15.0" fill="rgb(207,40,10)" rx="2" ry="2" />
<text  x="989.00" y="607.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (257 samples, 0.80%)</title><rect x="151.8" y="709" width="9.5" height="15.0" fill="rgb(214,29,47)" rx="2" ry="2" />
<text  x="154.84" y="719.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.03%)</title><rect x="155.5" y="533" width="0.4" height="15.0" fill="rgb(206,109,32)" rx="2" ry="2" />
<text  x="158.54" y="543.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (39 samples, 0.12%)</title><rect x="159.9" y="517" width="1.4" height="15.0" fill="rgb(225,84,41)" rx="2" ry="2" />
<text  x="162.90" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (423 samples, 1.32%)</title><rect x="667.4" y="677" width="15.6" height="15.0" fill="rgb(243,42,12)" rx="2" ry="2" />
<text  x="670.39" y="687.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (4 samples, 0.01%)</title><rect x="125.6" y="981" width="0.1" height="15.0" fill="rgb(235,47,22)" rx="2" ry="2" />
<text  x="128.56" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (9 samples, 0.03%)</title><rect x="607.4" y="693" width="0.3" height="15.0" fill="rgb(222,17,27)" rx="2" ry="2" />
<text  x="610.37" y="703.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (469 samples, 1.47%)</title><rect x="221.2" y="501" width="17.4" height="15.0" fill="rgb(237,162,35)" rx="2" ry="2" />
<text  x="224.25" y="511.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (74 samples, 0.23%)</title><rect x="228.8" y="341" width="2.7" height="15.0" fill="rgb(207,102,19)" rx="2" ry="2" />
<text  x="231.79" y="351.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (9 samples, 0.03%)</title><rect x="204.0" y="181" width="0.3" height="15.0" fill="rgb(217,21,31)" rx="2" ry="2" />
<text  x="206.99" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (3 samples, 0.01%)</title><rect x="478.1" y="661" width="0.1" height="15.0" fill="rgb(236,218,45)" rx="2" ry="2" />
<text  x="481.13" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.03%)</title><rect x="1183.1" y="981" width="0.4" height="15.0" fill="rgb(244,94,38)" rx="2" ry="2" />
<text  x="1186.13" y="991.5" ></text>
</g>
<g >
<title>Color::Color (6 samples, 0.02%)</title><rect x="962.4" y="677" width="0.2" height="15.0" fill="rgb(227,198,39)" rx="2" ry="2" />
<text  x="965.42" y="687.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (3 samples, 0.01%)</title><rect x="249.5" y="277" width="0.1" height="15.0" fill="rgb(254,27,8)" rx="2" ry="2" />
<text  x="252.48" y="287.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Game_Interpreter_Map*, false&gt;::_M_head (7 samples, 0.02%)</title><rect x="64.5" y="981" width="0.2" height="15.0" fill="rgb(225,7,30)" rx="2" ry="2" />
<text  x="67.47" y="991.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (7 samples, 0.02%)</title><rect x="972.9" y="693" width="0.2" height="15.0" fill="rgb(236,210,54)" rx="2" ry="2" />
<text  x="975.88" y="703.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::~_Vector_base (9 samples, 0.03%)</title><rect x="915.9" y="341" width="0.3" height="15.0" fill="rgb(205,153,43)" rx="2" ry="2" />
<text  x="918.85" y="351.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (1,345 samples, 4.21%)</title><rect x="1051.6" y="773" width="49.7" height="15.0" fill="rgb(243,85,31)" rx="2" ry="2" />
<text  x="1054.56" y="783.5" >Game_..</text>
</g>
<g >
<title>__fdget (4 samples, 0.01%)</title><rect x="18.2" y="933" width="0.1" height="15.0" fill="rgb(247,117,29)" rx="2" ry="2" />
<text  x="21.17" y="943.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (474 samples, 1.48%)</title><rect x="898.9" y="469" width="17.5" height="15.0" fill="rgb(227,89,17)" rx="2" ry="2" />
<text  x="901.85" y="479.5" ></text>
</g>
<g >
<title>operator delete (72 samples, 0.23%)</title><rect x="191.8" y="389" width="2.7" height="15.0" fill="rgb(246,64,18)" rx="2" ry="2" />
<text  x="194.79" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::~vector (3 samples, 0.01%)</title><rect x="120.0" y="981" width="0.1" height="15.0" fill="rgb(251,14,2)" rx="2" ry="2" />
<text  x="122.98" y="991.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_valptr (3 samples, 0.01%)</title><rect x="785.4" y="485" width="0.1" height="15.0" fill="rgb(245,118,13)" rx="2" ry="2" />
<text  x="788.36" y="495.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (4 samples, 0.01%)</title><rect x="136.0" y="325" width="0.2" height="15.0" fill="rgb(211,171,9)" rx="2" ry="2" />
<text  x="139.02" y="335.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandConditionalBranch (1,782 samples, 5.58%)</title><rect x="452.2" y="757" width="65.8" height="15.0" fill="rgb(249,173,1)" rx="2" ry="2" />
<text  x="455.19" y="767.5" >Game_In..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (3 samples, 0.01%)</title><rect x="610.6" y="709" width="0.1" height="15.0" fill="rgb(254,117,5)" rx="2" ry="2" />
<text  x="613.59" y="719.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::operator= (340 samples, 1.06%)</title><rect x="938.9" y="693" width="12.5" height="15.0" fill="rgb(243,144,18)" rx="2" ry="2" />
<text  x="941.88" y="703.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::deallocate (11 samples, 0.03%)</title><rect x="904.4" y="389" width="0.4" height="15.0" fill="rgb(218,200,52)" rx="2" ry="2" />
<text  x="907.43" y="399.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (310 samples, 0.97%)</title><rect x="858.1" y="453" width="11.4" height="15.0" fill="rgb(215,40,20)" rx="2" ry="2" />
<text  x="861.05" y="463.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.01%)</title><rect x="148.4" y="373" width="0.2" height="15.0" fill="rgb(226,9,38)" rx="2" ry="2" />
<text  x="151.44" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (16 samples, 0.05%)</title><rect x="203.8" y="261" width="0.6" height="15.0" fill="rgb(237,4,27)" rx="2" ry="2" />
<text  x="206.84" y="271.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Set (9 samples, 0.03%)</title><rect x="39.0" y="981" width="0.4" height="15.0" fill="rgb(229,74,53)" rx="2" ry="2" />
<text  x="42.05" y="991.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_manager (155 samples, 0.49%)</title><rect x="685.5" y="629" width="5.8" height="15.0" fill="rgb(229,10,36)" rx="2" ry="2" />
<text  x="688.54" y="639.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (85 samples, 0.27%)</title><rect x="250.3" y="885" width="3.1" height="15.0" fill="rgb(205,42,5)" rx="2" ry="2" />
<text  x="253.29" y="895.5" ></text>
</g>
<g >
<title>Player::IsRPG2k3 (18 samples, 0.06%)</title><rect x="576.9" y="725" width="0.7" height="15.0" fill="rgb(213,159,42)" rx="2" ry="2" />
<text  x="579.92" y="735.5" ></text>
</g>
<g >
<title>__do_page_fault (15 samples, 0.05%)</title><rect x="135.6" y="373" width="0.6" height="15.0" fill="rgb(239,180,17)" rx="2" ry="2" />
<text  x="138.62" y="383.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (4 samples, 0.01%)</title><rect x="140.3" y="901" width="0.1" height="15.0" fill="rgb(245,158,33)" rx="2" ry="2" />
<text  x="143.27" y="911.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (130 samples, 0.41%)</title><rect x="140.4" y="709" width="4.8" height="15.0" fill="rgb(232,217,1)" rx="2" ry="2" />
<text  x="143.42" y="719.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (112 samples, 0.35%)</title><rect x="1126.6" y="789" width="4.2" height="15.0" fill="rgb(240,174,19)" rx="2" ry="2" />
<text  x="1129.62" y="799.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (23,691 samples, 74.20%)</title><rect x="266.9" y="805" width="875.6" height="15.0" fill="rgb(249,70,30)" rx="2" ry="2" />
<text  x="269.93" y="815.5" >Game_Interpreter::Update</text>
</g>
<g >
<title>[libasan.so.5.0.0] (157 samples, 0.49%)</title><rect x="660.8" y="677" width="5.8" height="15.0" fill="rgb(205,90,1)" rx="2" ry="2" />
<text  x="663.81" y="687.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (85 samples, 0.27%)</title><rect x="250.3" y="853" width="3.1" height="15.0" fill="rgb(252,170,31)" rx="2" ry="2" />
<text  x="253.29" y="863.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (10 samples, 0.03%)</title><rect x="820.2" y="485" width="0.4" height="15.0" fill="rgb(206,110,7)" rx="2" ry="2" />
<text  x="823.25" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (206 samples, 0.65%)</title><rect x="987.1" y="725" width="7.7" height="15.0" fill="rgb(226,174,11)" rx="2" ry="2" />
<text  x="990.14" y="735.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Transition*, std::default_delete&lt;Transition&gt; &gt; (3 samples, 0.01%)</title><rect x="738.7" y="613" width="0.1" height="15.0" fill="rgb(249,75,37)" rx="2" ry="2" />
<text  x="741.72" y="623.5" ></text>
</g>
<g >
<title>SDL_PumpEvents_REAL (9 samples, 0.03%)</title><rect x="1182.4" y="821" width="0.3" height="15.0" fill="rgb(226,39,10)" rx="2" ry="2" />
<text  x="1185.39" y="831.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (16 samples, 0.05%)</title><rect x="1174.3" y="709" width="0.6" height="15.0" fill="rgb(248,81,30)" rx="2" ry="2" />
<text  x="1177.33" y="719.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (307 samples, 0.96%)</title><rect x="238.6" y="469" width="11.3" height="15.0" fill="rgb(211,61,10)" rx="2" ry="2" />
<text  x="241.58" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (27 samples, 0.08%)</title><rect x="500.3" y="693" width="1.0" height="15.0" fill="rgb(226,10,8)" rx="2" ry="2" />
<text  x="503.31" y="703.5" ></text>
</g>
<g >
<title>Sprite::SetOpacity (3 samples, 0.01%)</title><rect x="964.2" y="709" width="0.1" height="15.0" fill="rgb(243,51,5)" rx="2" ry="2" />
<text  x="967.19" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt;::base (16 samples, 0.05%)</title><rect x="1111.5" y="757" width="0.6" height="15.0" fill="rgb(214,198,44)" rx="2" ry="2" />
<text  x="1114.47" y="767.5" ></text>
</g>
<g >
<title>Game_Picture::Show (85 samples, 0.27%)</title><rect x="250.3" y="757" width="3.1" height="15.0" fill="rgb(231,208,43)" rx="2" ry="2" />
<text  x="253.29" y="767.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_base (9 samples, 0.03%)</title><rect x="695.6" y="581" width="0.3" height="15.0" fill="rgb(238,139,36)" rx="2" ry="2" />
<text  x="698.55" y="591.5" ></text>
</g>
<g >
<title>pixman_image_unref (101 samples, 0.32%)</title><rect x="200.7" y="421" width="3.8" height="15.0" fill="rgb(205,86,15)" rx="2" ry="2" />
<text  x="203.74" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_ptr (8 samples, 0.03%)</title><rect x="214.9" y="309" width="0.2" height="15.0" fill="rgb(237,110,1)" rx="2" ry="2" />
<text  x="217.85" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator!= (3 samples, 0.01%)</title><rect x="666.8" y="693" width="0.1" height="15.0" fill="rgb(231,8,26)" rx="2" ry="2" />
<text  x="669.84" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="1180.4" y="853" width="0.1" height="15.0" fill="rgb(209,2,21)" rx="2" ry="2" />
<text  x="1183.35" y="863.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (5 samples, 0.02%)</title><rect x="90.8" y="981" width="0.2" height="15.0" fill="rgb(234,32,3)" rx="2" ry="2" />
<text  x="93.79" y="991.5" ></text>
</g>
<g >
<title>Scene_Map::Update (208 samples, 0.65%)</title><rect x="183.7" y="933" width="7.6" height="15.0" fill="rgb(217,170,4)" rx="2" ry="2" />
<text  x="186.66" y="943.5" ></text>
</g>
<g >
<title>Scene::MainFunction (776 samples, 2.43%)</title><rect x="221.2" y="917" width="28.7" height="15.0" fill="rgb(236,106,24)" rx="2" ry="2" />
<text  x="224.25" y="927.5" >Sc..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (12 samples, 0.04%)</title><rect x="194.5" y="309" width="0.4" height="15.0" fill="rgb(251,92,22)" rx="2" ry="2" />
<text  x="197.45" y="319.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.02%)</title><rect x="985.1" y="613" width="0.2" height="15.0" fill="rgb(254,93,50)" rx="2" ry="2" />
<text  x="988.11" y="623.5" ></text>
</g>
<g >
<title>BlitNtoNCopyAlpha (9 samples, 0.03%)</title><rect x="258.6" y="773" width="0.3" height="15.0" fill="rgb(212,193,52)" rx="2" ry="2" />
<text  x="261.61" y="783.5" ></text>
</g>
<g >
<title>dequeue_task_fair (5 samples, 0.02%)</title><rect x="18.8" y="837" width="0.2" height="15.0" fill="rgb(239,148,20)" rx="2" ry="2" />
<text  x="21.80" y="847.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (651 samples, 2.04%)</title><rect x="636.3" y="693" width="24.1" height="15.0" fill="rgb(241,122,22)" rx="2" ry="2" />
<text  x="639.31" y="703.5" >F..</text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (4 samples, 0.01%)</title><rect x="116.7" y="981" width="0.1" height="15.0" fill="rgb(241,228,28)" rx="2" ry="2" />
<text  x="119.66" y="991.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::destroy&lt;Bitmap&gt; (295 samples, 0.92%)</title><rect x="905.3" y="405" width="10.9" height="15.0" fill="rgb(227,59,2)" rx="2" ry="2" />
<text  x="908.32" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (23 samples, 0.07%)</title><rect x="88.4" y="981" width="0.8" height="15.0" fill="rgb(224,224,51)" rx="2" ry="2" />
<text  x="91.39" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (8 samples, 0.03%)</title><rect x="161.3" y="565" width="0.3" height="15.0" fill="rgb(213,217,47)" rx="2" ry="2" />
<text  x="164.34" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.02%)</title><rect x="210.8" y="293" width="0.2" height="15.0" fill="rgb(206,166,11)" rx="2" ry="2" />
<text  x="213.75" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_addr (4 samples, 0.01%)</title><rect x="785.2" y="437" width="0.1" height="15.0" fill="rgb(211,202,20)" rx="2" ry="2" />
<text  x="788.17" y="447.5" ></text>
</g>
<g >
<title>release_pages (4 samples, 0.01%)</title><rect x="210.8" y="149" width="0.2" height="15.0" fill="rgb(214,4,12)" rx="2" ry="2" />
<text  x="213.82" y="159.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (14 samples, 0.04%)</title><rect x="129.6" y="837" width="0.5" height="15.0" fill="rgb(239,25,35)" rx="2" ry="2" />
<text  x="132.56" y="847.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="817.6" y="405" width="0.1" height="15.0" fill="rgb(251,186,46)" rx="2" ry="2" />
<text  x="820.62" y="415.5" ></text>
</g>
<g >
<title>_XEventsQueued (9 samples, 0.03%)</title><rect x="1181.0" y="789" width="0.4" height="15.0" fill="rgb(239,76,32)" rx="2" ry="2" />
<text  x="1184.02" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_S_right (10 samples, 0.03%)</title><rect x="208.6" y="341" width="0.4" height="15.0" fill="rgb(217,33,39)" rx="2" ry="2" />
<text  x="211.64" y="351.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (179 samples, 0.56%)</title><rect x="145.2" y="757" width="6.6" height="15.0" fill="rgb(254,85,11)" rx="2" ry="2" />
<text  x="148.23" y="767.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (110 samples, 0.34%)</title><rect x="200.4" y="613" width="4.1" height="15.0" fill="rgb(234,21,38)" rx="2" ry="2" />
<text  x="203.40" y="623.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_weak_release (22 samples, 0.07%)</title><rect x="934.3" y="501" width="0.8" height="15.0" fill="rgb(222,20,49)" rx="2" ry="2" />
<text  x="937.29" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator@plt (3 samples, 0.01%)</title><rect x="938.7" y="709" width="0.1" height="15.0" fill="rgb(228,167,45)" rx="2" ry="2" />
<text  x="941.69" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_key (7 samples, 0.02%)</title><rect x="67.7" y="981" width="0.2" height="15.0" fill="rgb(222,69,3)" rx="2" ry="2" />
<text  x="70.65" y="991.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (54 samples, 0.17%)</title><rect x="196.5" y="549" width="2.0" height="15.0" fill="rgb(237,107,41)" rx="2" ry="2" />
<text  x="199.52" y="559.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (71 samples, 0.22%)</title><rect x="161.3" y="629" width="2.7" height="15.0" fill="rgb(215,217,3)" rx="2" ry="2" />
<text  x="164.34" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::begin (3 samples, 0.01%)</title><rect x="638.4" y="677" width="0.1" height="15.0" fill="rgb(214,0,8)" rx="2" ry="2" />
<text  x="641.42" y="687.5" ></text>
</g>
<g >
<title>Bitmap::pitch (10 samples, 0.03%)</title><rect x="855.3" y="469" width="0.4" height="15.0" fill="rgb(206,155,49)" rx="2" ry="2" />
<text  x="858.28" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (13 samples, 0.04%)</title><rect x="498.1" y="677" width="0.4" height="15.0" fill="rgb(236,39,1)" rx="2" ry="2" />
<text  x="501.05" y="687.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (91 samples, 0.29%)</title><rect x="235.2" y="421" width="3.4" height="15.0" fill="rgb(227,40,14)" rx="2" ry="2" />
<text  x="238.22" y="431.5" ></text>
</g>
<g >
<title>operator delete@plt (3 samples, 0.01%)</title><rect x="666.6" y="693" width="0.1" height="15.0" fill="rgb(210,141,23)" rx="2" ry="2" />
<text  x="669.61" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (13 samples, 0.04%)</title><rect x="725.2" y="565" width="0.4" height="15.0" fill="rgb(219,80,4)" rx="2" ry="2" />
<text  x="728.15" y="575.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (130 samples, 0.41%)</title><rect x="946.1" y="549" width="4.8" height="15.0" fill="rgb(237,98,15)" rx="2" ry="2" />
<text  x="949.12" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (12 samples, 0.04%)</title><rect x="690.7" y="517" width="0.4" height="15.0" fill="rgb(209,51,38)" rx="2" ry="2" />
<text  x="693.67" y="527.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (91 samples, 0.29%)</title><rect x="235.2" y="437" width="3.4" height="15.0" fill="rgb(220,164,52)" rx="2" ry="2" />
<text  x="238.22" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (54 samples, 0.17%)</title><rect x="196.5" y="469" width="2.0" height="15.0" fill="rgb(238,176,32)" rx="2" ry="2" />
<text  x="199.52" y="479.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;int const*&gt; (3 samples, 0.01%)</title><rect x="507.9" y="693" width="0.1" height="15.0" fill="rgb(233,162,53)" rx="2" ry="2" />
<text  x="510.92" y="703.5" ></text>
</g>
<g >
<title>__interceptor_free (164 samples, 0.51%)</title><rect x="240.0" y="325" width="6.1" height="15.0" fill="rgb(225,77,0)" rx="2" ry="2" />
<text  x="243.02" y="335.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;int&gt;::operator= (5 samples, 0.02%)</title><rect x="107.4" y="981" width="0.2" height="15.0" fill="rgb(244,175,33)" rx="2" ry="2" />
<text  x="110.38" y="991.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (9 samples, 0.03%)</title><rect x="231.7" y="325" width="0.4" height="15.0" fill="rgb(238,102,8)" rx="2" ry="2" />
<text  x="234.74" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (25 samples, 0.08%)</title><rect x="1181.4" y="757" width="0.9" height="15.0" fill="rgb(252,188,42)" rx="2" ry="2" />
<text  x="1184.43" y="767.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (64 samples, 0.20%)</title><rect x="221.9" y="453" width="2.4" height="15.0" fill="rgb(208,214,41)" rx="2" ry="2" />
<text  x="224.91" y="463.5" ></text>
</g>
<g >
<title>Bitmap::height (10 samples, 0.03%)</title><rect x="869.8" y="469" width="0.4" height="15.0" fill="rgb(238,209,30)" rx="2" ry="2" />
<text  x="872.80" y="479.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.02%)</title><rect x="992.9" y="629" width="0.3" height="15.0" fill="rgb(248,53,32)" rx="2" ry="2" />
<text  x="995.91" y="639.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::CommonEvent&gt; (11 samples, 0.03%)</title><rect x="1147.8" y="757" width="0.4" height="15.0" fill="rgb(212,169,7)" rx="2" ry="2" />
<text  x="1150.80" y="767.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="643.7" y="549" width="0.1" height="15.0" fill="rgb(250,162,16)" rx="2" ry="2" />
<text  x="646.70" y="559.5" ></text>
</g>
<g >
<title>unmap_vmas (17 samples, 0.05%)</title><rect x="203.1" y="181" width="0.6" height="15.0" fill="rgb(237,149,36)" rx="2" ry="2" />
<text  x="206.06" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_S_right (4 samples, 0.01%)</title><rect x="67.4" y="981" width="0.1" height="15.0" fill="rgb(243,9,46)" rx="2" ry="2" />
<text  x="70.36" y="991.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;int&gt;::weak_ptr (18 samples, 0.06%)</title><rect x="691.6" y="645" width="0.6" height="15.0" fill="rgb(232,45,38)" rx="2" ry="2" />
<text  x="694.56" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_M_lower_bound (63 samples, 0.20%)</title><rect x="161.6" y="581" width="2.4" height="15.0" fill="rgb(222,62,19)" rx="2" ry="2" />
<text  x="164.63" y="591.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (477 samples, 1.49%)</title><rect x="898.7" y="485" width="17.7" height="15.0" fill="rgb(235,107,21)" rx="2" ry="2" />
<text  x="901.74" y="495.5" ></text>
</g>
<g >
<title>do_page_fault (5 samples, 0.02%)</title><rect x="136.6" y="421" width="0.2" height="15.0" fill="rgb(220,41,35)" rx="2" ry="2" />
<text  x="139.58" y="431.5" ></text>
</g>
<g >
<title>Game_Picture::SyncCurrentToFinish (23 samples, 0.07%)</title><rect x="1152.3" y="805" width="0.9" height="15.0" fill="rgb(216,188,26)" rx="2" ry="2" />
<text  x="1155.30" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;int const&gt; (21 samples, 0.07%)</title><rect x="502.8" y="709" width="0.8" height="15.0" fill="rgb(242,103,50)" rx="2" ry="2" />
<text  x="505.82" y="719.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (130 samples, 0.41%)</title><rect x="140.4" y="837" width="4.8" height="15.0" fill="rgb(237,85,49)" rx="2" ry="2" />
<text  x="143.42" y="847.5" ></text>
</g>
<g >
<title>Cache::SystemOrBlack (6 samples, 0.02%)</title><rect x="1179.5" y="821" width="0.2" height="15.0" fill="rgb(216,105,47)" rx="2" ry="2" />
<text  x="1182.50" y="831.5" ></text>
</g>
<g >
<title>Bitmap::pixels (8 samples, 0.03%)</title><rect x="27.7" y="981" width="0.3" height="15.0" fill="rgb(222,89,51)" rx="2" ry="2" />
<text  x="30.67" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (20 samples, 0.06%)</title><rect x="1085.6" y="725" width="0.7" height="15.0" fill="rgb(239,185,10)" rx="2" ry="2" />
<text  x="1088.56" y="735.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt;::_M_head (6 samples, 0.02%)</title><rect x="74.6" y="981" width="0.2" height="15.0" fill="rgb(253,61,19)" rx="2" ry="2" />
<text  x="77.60" y="991.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (776 samples, 2.43%)</title><rect x="221.2" y="565" width="28.7" height="15.0" fill="rgb(239,84,3)" rx="2" ry="2" />
<text  x="224.25" y="575.5" >st..</text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::operator[] (92 samples, 0.29%)</title><rect x="207.2" y="405" width="3.4" height="15.0" fill="rgb(251,186,23)" rx="2" ry="2" />
<text  x="210.24" y="415.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (79 samples, 0.25%)</title><rect x="180.6" y="453" width="2.9" height="15.0" fill="rgb(232,42,49)" rx="2" ry="2" />
<text  x="183.59" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (40 samples, 0.13%)</title><rect x="1102.3" y="773" width="1.5" height="15.0" fill="rgb(226,90,14)" rx="2" ry="2" />
<text  x="1105.34" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (40 samples, 0.13%)</title><rect x="1175.5" y="805" width="1.5" height="15.0" fill="rgb(216,137,45)" rx="2" ry="2" />
<text  x="1178.48" y="815.5" ></text>
</g>
<g >
<title>Bitmap::GetWidth (83 samples, 0.26%)</title><rect x="1157.3" y="789" width="3.1" height="15.0" fill="rgb(223,8,14)" rx="2" ry="2" />
<text  x="1160.29" y="799.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (74 samples, 0.23%)</title><rect x="19.1" y="789" width="2.8" height="15.0" fill="rgb(225,218,23)" rx="2" ry="2" />
<text  x="22.13" y="799.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (36 samples, 0.11%)</title><rect x="235.5" y="277" width="1.3" height="15.0" fill="rgb(207,182,47)" rx="2" ry="2" />
<text  x="238.51" y="287.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingForegroundExecution (18 samples, 0.06%)</title><rect x="1145.9" y="821" width="0.7" height="15.0" fill="rgb(214,135,21)" rx="2" ry="2" />
<text  x="1148.91" y="831.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (96 samples, 0.30%)</title><rect x="191.3" y="693" width="3.6" height="15.0" fill="rgb(211,212,40)" rx="2" ry="2" />
<text  x="194.35" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (14 samples, 0.04%)</title><rect x="134.9" y="389" width="0.5" height="15.0" fill="rgb(235,90,33)" rx="2" ry="2" />
<text  x="137.88" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (14 samples, 0.04%)</title><rect x="129.6" y="517" width="0.5" height="15.0" fill="rgb(211,64,53)" rx="2" ry="2" />
<text  x="132.56" y="527.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.01%)</title><rect x="136.7" y="373" width="0.1" height="15.0" fill="rgb(229,46,42)" rx="2" ry="2" />
<text  x="139.65" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (459 samples, 1.44%)</title><rect x="321.3" y="757" width="16.9" height="15.0" fill="rgb(229,212,5)" rx="2" ry="2" />
<text  x="324.25" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (19 samples, 0.06%)</title><rect x="473.0" y="677" width="0.7" height="15.0" fill="rgb(237,1,51)" rx="2" ry="2" />
<text  x="476.00" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt;::__normal_iterator (39 samples, 0.12%)</title><rect x="1114.7" y="757" width="1.4" height="15.0" fill="rgb(217,40,24)" rx="2" ry="2" />
<text  x="1117.68" y="767.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (24 samples, 0.08%)</title><rect x="1174.0" y="725" width="0.9" height="15.0" fill="rgb(242,225,41)" rx="2" ry="2" />
<text  x="1177.03" y="735.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (13 samples, 0.04%)</title><rect x="971.4" y="693" width="0.5" height="15.0" fill="rgb(241,7,16)" rx="2" ry="2" />
<text  x="974.44" y="703.5" ></text>
</g>
<g >
<title>unmap_page_range (3 samples, 0.01%)</title><rect x="204.3" y="197" width="0.1" height="15.0" fill="rgb(210,225,12)" rx="2" ry="2" />
<text  x="207.32" y="207.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (14 samples, 0.04%)</title><rect x="129.6" y="629" width="0.5" height="15.0" fill="rgb(214,226,15)" rx="2" ry="2" />
<text  x="132.56" y="639.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (47 samples, 0.15%)</title><rect x="930.6" y="437" width="1.7" height="15.0" fill="rgb(224,165,46)" rx="2" ry="2" />
<text  x="933.60" y="447.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (8 samples, 0.03%)</title><rect x="813.5" y="453" width="0.3" height="15.0" fill="rgb(241,73,13)" rx="2" ry="2" />
<text  x="816.48" y="463.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::swap (30 samples, 0.09%)</title><rect x="972.7" y="709" width="1.1" height="15.0" fill="rgb(223,155,32)" rx="2" ry="2" />
<text  x="975.73" y="719.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (179 samples, 0.56%)</title><rect x="145.2" y="869" width="6.6" height="15.0" fill="rgb(227,171,31)" rx="2" ry="2" />
<text  x="148.23" y="879.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (6 samples, 0.02%)</title><rect x="969.4" y="661" width="0.2" height="15.0" fill="rgb(226,157,14)" rx="2" ry="2" />
<text  x="972.40" y="671.5" ></text>
</g>
<g >
<title>std::find&lt;int const*, int&gt; (15 samples, 0.05%)</title><rect x="607.7" y="709" width="0.6" height="15.0" fill="rgb(211,22,19)" rx="2" ry="2" />
<text  x="610.71" y="719.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::destroy&lt;Bitmap&gt; (101 samples, 0.32%)</title><rect x="200.7" y="469" width="3.8" height="15.0" fill="rgb(220,146,8)" rx="2" ry="2" />
<text  x="203.74" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (18 samples, 0.06%)</title><rect x="155.3" y="581" width="0.6" height="15.0" fill="rgb(249,31,7)" rx="2" ry="2" />
<text  x="158.28" y="591.5" ></text>
</g>
<g >
<title>Sprite::SetZ (3 samples, 0.01%)</title><rect x="965.4" y="709" width="0.1" height="15.0" fill="rgb(244,85,26)" rx="2" ry="2" />
<text  x="968.38" y="719.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Transition*, std::default_delete&lt;Transition&gt; &gt; (13 samples, 0.04%)</title><rect x="98.4" y="981" width="0.4" height="15.0" fill="rgb(236,154,48)" rx="2" ry="2" />
<text  x="101.36" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (3 samples, 0.01%)</title><rect x="998.9" y="709" width="0.1" height="15.0" fill="rgb(207,215,6)" rx="2" ry="2" />
<text  x="1001.86" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (3 samples, 0.01%)</title><rect x="1053.1" y="757" width="0.2" height="15.0" fill="rgb(237,57,7)" rx="2" ry="2" />
<text  x="1056.15" y="767.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (8 samples, 0.03%)</title><rect x="1181.1" y="773" width="0.3" height="15.0" fill="rgb(214,191,22)" rx="2" ry="2" />
<text  x="1184.06" y="783.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (50 samples, 0.16%)</title><rect x="198.6" y="501" width="1.8" height="15.0" fill="rgb(254,110,50)" rx="2" ry="2" />
<text  x="201.55" y="511.5" ></text>
</g>
<g >
<title>__do_munmap (61 samples, 0.19%)</title><rect x="201.5" y="213" width="2.3" height="15.0" fill="rgb(230,139,8)" rx="2" ry="2" />
<text  x="204.51" y="223.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt;::~_Sp_counted_ptr_inplace (15 samples, 0.05%)</title><rect x="944.5" y="613" width="0.5" height="15.0" fill="rgb(207,45,31)" rx="2" ry="2" />
<text  x="947.49" y="623.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (14 samples, 0.04%)</title><rect x="129.6" y="565" width="0.5" height="15.0" fill="rgb(217,126,38)" rx="2" ry="2" />
<text  x="132.56" y="575.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (122 samples, 0.38%)</title><rect x="211.0" y="869" width="4.5" height="15.0" fill="rgb(245,161,13)" rx="2" ry="2" />
<text  x="214.01" y="879.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (64 samples, 0.20%)</title><rect x="800.3" y="373" width="2.3" height="15.0" fill="rgb(228,149,7)" rx="2" ry="2" />
<text  x="803.25" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (189 samples, 0.59%)</title><rect x="1041.0" y="725" width="6.9" height="15.0" fill="rgb(221,91,15)" rx="2" ry="2" />
<text  x="1043.95" y="735.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (8 samples, 0.03%)</title><rect x="917.3" y="469" width="0.3" height="15.0" fill="rgb(243,162,31)" rx="2" ry="2" />
<text  x="920.33" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char32_t&gt;::allocate (3 samples, 0.01%)</title><rect x="986.0" y="613" width="0.1" height="15.0" fill="rgb(210,124,31)" rx="2" ry="2" />
<text  x="989.00" y="623.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (257 samples, 0.80%)</title><rect x="151.8" y="725" width="9.5" height="15.0" fill="rgb(251,68,3)" rx="2" ry="2" />
<text  x="154.84" y="735.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (4 samples, 0.01%)</title><rect x="751.7" y="597" width="0.1" height="15.0" fill="rgb(214,119,19)" rx="2" ry="2" />
<text  x="754.69" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append@plt (9 samples, 0.03%)</title><rect x="646.8" y="661" width="0.3" height="15.0" fill="rgb(207,43,14)" rx="2" ry="2" />
<text  x="649.77" y="671.5" ></text>
</g>
<g >
<title>Sprite::Refresh (4 samples, 0.01%)</title><rect x="258.3" y="805" width="0.2" height="15.0" fill="rgb(207,215,30)" rx="2" ry="2" />
<text  x="261.31" y="815.5" ></text>
</g>
<g >
<title>Tone::Tone (17 samples, 0.05%)</title><rect x="959.6" y="693" width="0.6" height="15.0" fill="rgb(223,132,25)" rx="2" ry="2" />
<text  x="962.57" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator* (36 samples, 0.11%)</title><rect x="770.6" y="437" width="1.3" height="15.0" fill="rgb(225,158,39)" rx="2" ry="2" />
<text  x="773.61" y="447.5" ></text>
</g>
<g >
<title>std::forward&lt;FileRequestResult*&gt; (6 samples, 0.02%)</title><rect x="92.6" y="981" width="0.2" height="15.0" fill="rgb(231,40,13)" rx="2" ry="2" />
<text  x="95.60" y="991.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (5 samples, 0.02%)</title><rect x="124.3" y="981" width="0.2" height="15.0" fill="rgb(235,101,6)" rx="2" ry="2" />
<text  x="127.34" y="991.5" ></text>
</g>
<g >
<title>RPG::SavePicture::SavePicture (3 samples, 0.01%)</title><rect x="1175.3" y="805" width="0.1" height="15.0" fill="rgb(215,166,54)" rx="2" ry="2" />
<text  x="1178.33" y="815.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (4 samples, 0.01%)</title><rect x="140.3" y="613" width="0.1" height="15.0" fill="rgb(234,167,23)" rx="2" ry="2" />
<text  x="143.27" y="623.5" ></text>
</g>
<g >
<title>release_pages (5 samples, 0.02%)</title><rect x="204.1" y="133" width="0.2" height="15.0" fill="rgb(227,41,40)" rx="2" ry="2" />
<text  x="207.14" y="143.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&amp;&gt; (3 samples, 0.01%)</title><rect x="819.1" y="421" width="0.1" height="15.0" fill="rgb(248,209,11)" rx="2" ry="2" />
<text  x="822.14" y="431.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (45 samples, 0.14%)</title><rect x="248.0" y="309" width="1.7" height="15.0" fill="rgb(228,95,38)" rx="2" ry="2" />
<text  x="251.00" y="319.5" ></text>
</g>
<g >
<title>tick_sched_handle (3 samples, 0.01%)</title><rect x="1101.3" y="693" width="0.1" height="15.0" fill="rgb(217,60,50)" rx="2" ry="2" />
<text  x="1104.27" y="703.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (85 samples, 0.27%)</title><rect x="250.3" y="789" width="3.1" height="15.0" fill="rgb(251,113,31)" rx="2" ry="2" />
<text  x="253.29" y="799.5" ></text>
</g>
<g >
<title>__gthread_active_p (7 samples, 0.02%)</title><rect x="934.8" y="469" width="0.3" height="15.0" fill="rgb(218,106,37)" rx="2" ry="2" />
<text  x="937.85" y="479.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;int&gt;::~weak_ptr (7 samples, 0.02%)</title><rect x="705.2" y="661" width="0.3" height="15.0" fill="rgb(244,209,18)" rx="2" ry="2" />
<text  x="708.24" y="671.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (100 samples, 0.31%)</title><rect x="808.0" y="421" width="3.7" height="15.0" fill="rgb(228,90,25)" rx="2" ry="2" />
<text  x="811.01" y="431.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="154.9" y="517" width="0.1" height="15.0" fill="rgb(219,86,29)" rx="2" ry="2" />
<text  x="157.91" y="527.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (3 samples, 0.01%)</title><rect x="800.1" y="373" width="0.2" height="15.0" fill="rgb(226,25,41)" rx="2" ry="2" />
<text  x="803.14" y="383.5" ></text>
</g>
<g >
<title>Game_Map::Update (122 samples, 0.38%)</title><rect x="211.0" y="965" width="4.5" height="15.0" fill="rgb(233,71,8)" rx="2" ry="2" />
<text  x="214.01" y="975.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Picture*, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl (36 samples, 0.11%)</title><rect x="726.6" y="613" width="1.4" height="15.0" fill="rgb(237,204,34)" rx="2" ry="2" />
<text  x="729.63" y="623.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (208 samples, 0.65%)</title><rect x="183.7" y="693" width="7.6" height="15.0" fill="rgb(209,157,7)" rx="2" ry="2" />
<text  x="186.66" y="703.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (17 samples, 0.05%)</title><rect x="873.2" y="485" width="0.6" height="15.0" fill="rgb(234,67,36)" rx="2" ry="2" />
<text  x="876.17" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (109 samples, 0.34%)</title><rect x="498.5" y="709" width="4.1" height="15.0" fill="rgb(226,74,18)" rx="2" ry="2" />
<text  x="501.53" y="719.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (14 samples, 0.04%)</title><rect x="129.6" y="789" width="0.5" height="15.0" fill="rgb(247,103,12)" rx="2" ry="2" />
<text  x="132.56" y="799.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (97 samples, 0.30%)</title><rect x="864.1" y="341" width="3.6" height="15.0" fill="rgb(231,29,20)" rx="2" ry="2" />
<text  x="867.11" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base (22 samples, 0.07%)</title><rect x="659.6" y="645" width="0.8" height="15.0" fill="rgb(207,123,21)" rx="2" ry="2" />
<text  x="662.56" y="655.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::destroy&lt;Bitmap&gt; (190 samples, 0.60%)</title><rect x="184.3" y="453" width="7.0" height="15.0" fill="rgb(253,116,48)" rx="2" ry="2" />
<text  x="187.33" y="463.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_destroy (39 samples, 0.12%)</title><rect x="238.6" y="421" width="1.4" height="15.0" fill="rgb(245,55,10)" rx="2" ry="2" />
<text  x="241.58" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (77 samples, 0.24%)</title><rect x="140.4" y="533" width="2.9" height="15.0" fill="rgb(210,150,28)" rx="2" ry="2" />
<text  x="143.42" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (23 samples, 0.07%)</title><rect x="497.7" y="693" width="0.8" height="15.0" fill="rgb(237,203,14)" rx="2" ry="2" />
<text  x="500.68" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (69 samples, 0.22%)</title><rect x="948.3" y="533" width="2.6" height="15.0" fill="rgb(241,49,26)" rx="2" ry="2" />
<text  x="951.30" y="543.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (149 samples, 0.47%)</title><rect x="194.9" y="853" width="5.5" height="15.0" fill="rgb(251,127,8)" rx="2" ry="2" />
<text  x="197.90" y="863.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="914.6" y="309" width="0.1" height="15.0" fill="rgb(249,145,32)" rx="2" ry="2" />
<text  x="917.63" y="319.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (31 samples, 0.10%)</title><rect x="969.6" y="661" width="1.2" height="15.0" fill="rgb(237,69,53)" rx="2" ry="2" />
<text  x="972.63" y="671.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (247 samples, 0.77%)</title><rect x="164.0" y="565" width="9.1" height="15.0" fill="rgb(227,32,2)" rx="2" ry="2" />
<text  x="166.96" y="575.5" ></text>
</g>
<g >
<title>operator new (155 samples, 0.49%)</title><rect x="698.1" y="549" width="5.7" height="15.0" fill="rgb(211,36,0)" rx="2" ry="2" />
<text  x="701.07" y="559.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (177 samples, 0.55%)</title><rect x="204.5" y="709" width="6.5" height="15.0" fill="rgb(250,53,5)" rx="2" ry="2" />
<text  x="207.47" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (14 samples, 0.04%)</title><rect x="475.6" y="661" width="0.5" height="15.0" fill="rgb(209,53,11)" rx="2" ry="2" />
<text  x="478.58" y="671.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_destroy (72 samples, 0.23%)</title><rect x="191.8" y="453" width="2.7" height="15.0" fill="rgb(243,207,2)" rx="2" ry="2" />
<text  x="194.79" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::get (19 samples, 0.06%)</title><rect x="738.1" y="661" width="0.7" height="15.0" fill="rgb(214,62,42)" rx="2" ry="2" />
<text  x="741.13" y="671.5" ></text>
</g>
<g >
<title>operator== (13 samples, 0.04%)</title><rect x="883.2" y="453" width="0.5" height="15.0" fill="rgb(225,172,37)" rx="2" ry="2" />
<text  x="886.18" y="463.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (46 samples, 0.14%)</title><rect x="723.9" y="597" width="1.7" height="15.0" fill="rgb(240,38,22)" rx="2" ry="2" />
<text  x="726.94" y="607.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (146 samples, 0.46%)</title><rect x="155.9" y="597" width="5.4" height="15.0" fill="rgb(220,226,37)" rx="2" ry="2" />
<text  x="158.94" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char&gt; (5 samples, 0.02%)</title><rect x="48.4" y="981" width="0.2" height="15.0" fill="rgb(225,186,28)" rx="2" ry="2" />
<text  x="51.40" y="991.5" ></text>
</g>
<g >
<title>Bitmap::Blit (764 samples, 2.39%)</title><rect x="826.9" y="485" width="28.2" height="15.0" fill="rgb(208,44,2)" rx="2" ry="2" />
<text  x="829.86" y="495.5" >B..</text>
</g>
<g >
<title>Game_Picture::GetData (8 samples, 0.03%)</title><rect x="873.9" y="469" width="0.3" height="15.0" fill="rgb(215,71,19)" rx="2" ry="2" />
<text  x="876.94" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate@plt (4 samples, 0.01%)</title><rect x="764.2" y="421" width="0.2" height="15.0" fill="rgb(223,73,48)" rx="2" ry="2" />
<text  x="767.22" y="431.5" ></text>
</g>
<g >
<title>FileRequestResult::~FileRequestResult (126 samples, 0.39%)</title><rect x="741.7" y="661" width="4.7" height="15.0" fill="rgb(209,202,7)" rx="2" ry="2" />
<text  x="744.71" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (10 samples, 0.03%)</title><rect x="516.1" y="741" width="0.4" height="15.0" fill="rgb(210,55,2)" rx="2" ry="2" />
<text  x="519.13" y="751.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (4 samples, 0.01%)</title><rect x="1101.3" y="773" width="0.1" height="15.0" fill="rgb(237,29,25)" rx="2" ry="2" />
<text  x="1104.27" y="783.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (242 samples, 0.76%)</title><rect x="638.7" y="677" width="9.0" height="15.0" fill="rgb(246,107,45)" rx="2" ry="2" />
<text  x="641.75" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (11 samples, 0.03%)</title><rect x="303.3" y="773" width="0.4" height="15.0" fill="rgb(221,91,4)" rx="2" ry="2" />
<text  x="306.25" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char32_t&gt;::deallocate (5 samples, 0.02%)</title><rect x="985.1" y="629" width="0.2" height="15.0" fill="rgb(241,93,39)" rx="2" ry="2" />
<text  x="988.11" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (11 samples, 0.03%)</title><rect x="901.5" y="405" width="0.4" height="15.0" fill="rgb(228,200,35)" rx="2" ry="2" />
<text  x="904.51" y="415.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (40 samples, 0.13%)</title><rect x="817.2" y="437" width="1.5" height="15.0" fill="rgb(205,196,49)" rx="2" ry="2" />
<text  x="820.21" y="447.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (85 samples, 0.27%)</title><rect x="250.3" y="533" width="3.1" height="15.0" fill="rgb(237,118,45)" rx="2" ry="2" />
<text  x="253.29" y="543.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (6 samples, 0.02%)</title><rect x="986.3" y="693" width="0.2" height="15.0" fill="rgb(219,155,42)" rx="2" ry="2" />
<text  x="989.26" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (8 samples, 0.03%)</title><rect x="161.3" y="517" width="0.3" height="15.0" fill="rgb(220,101,21)" rx="2" ry="2" />
<text  x="164.34" y="527.5" ></text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;int&gt;, true&gt;::_Sp_ebo_helper (11 samples, 0.03%)</title><rect x="695.9" y="565" width="0.4" height="15.0" fill="rgb(210,156,12)" rx="2" ry="2" />
<text  x="698.88" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (91 samples, 0.29%)</title><rect x="169.7" y="517" width="3.4" height="15.0" fill="rgb(211,107,26)" rx="2" ry="2" />
<text  x="172.73" y="527.5" ></text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;int&gt;, true&gt;::_Sp_ebo_helper (4 samples, 0.01%)</title><rect x="73.5" y="981" width="0.1" height="15.0" fill="rgb(239,209,28)" rx="2" ry="2" />
<text  x="76.49" y="991.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (122 samples, 0.38%)</title><rect x="211.0" y="677" width="4.5" height="15.0" fill="rgb(232,72,6)" rx="2" ry="2" />
<text  x="214.01" y="687.5" ></text>
</g>
<g >
<title>Utils::GetRandomNumber (3 samples, 0.01%)</title><rect x="593.4" y="741" width="0.1" height="15.0" fill="rgb(219,20,45)" rx="2" ry="2" />
<text  x="596.40" y="751.5" ></text>
</g>
<g >
<title>Cache::Picture (485 samples, 1.52%)</title><rect x="161.3" y="645" width="18.0" height="15.0" fill="rgb(216,89,20)" rx="2" ry="2" />
<text  x="164.34" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::operator[] (12 samples, 0.04%)</title><rect x="115.6" y="981" width="0.5" height="15.0" fill="rgb(219,107,28)" rx="2" ry="2" />
<text  x="118.62" y="991.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (3 samples, 0.01%)</title><rect x="994.2" y="677" width="0.1" height="15.0" fill="rgb(215,51,15)" rx="2" ry="2" />
<text  x="997.16" y="687.5" ></text>
</g>
<g >
<title>Scene_Map::Update (96 samples, 0.30%)</title><rect x="191.3" y="917" width="3.6" height="15.0" fill="rgb(209,22,4)" rx="2" ry="2" />
<text  x="194.35" y="927.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (6 samples, 0.02%)</title><rect x="895.1" y="453" width="0.2" height="15.0" fill="rgb(253,190,46)" rx="2" ry="2" />
<text  x="898.12" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (3 samples, 0.01%)</title><rect x="459.0" y="725" width="0.1" height="15.0" fill="rgb(208,184,11)" rx="2" ry="2" />
<text  x="462.03" y="735.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::begin (8 samples, 0.03%)</title><rect x="508.1" y="725" width="0.3" height="15.0" fill="rgb(230,228,6)" rx="2" ry="2" />
<text  x="511.11" y="735.5" ></text>
</g>
<g >
<title>Sdl2Ui::SetTitle (3 samples, 0.01%)</title><rect x="258.9" y="853" width="0.2" height="15.0" fill="rgb(244,73,45)" rx="2" ry="2" />
<text  x="261.94" y="863.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (26 samples, 0.08%)</title><rect x="31.4" y="981" width="1.0" height="15.0" fill="rgb(208,0,30)" rx="2" ry="2" />
<text  x="34.40" y="991.5" ></text>
</g>
<g >
<title>Game_Picture::Show (276 samples, 0.86%)</title><rect x="130.1" y="965" width="10.2" height="15.0" fill="rgb(208,167,38)" rx="2" ry="2" />
<text  x="133.07" y="975.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (11 samples, 0.03%)</title><rect x="101.9" y="981" width="0.5" height="15.0" fill="rgb(247,189,25)" rx="2" ry="2" />
<text  x="104.95" y="991.5" ></text>
</g>
<g >
<title>Game_Map::Update (208 samples, 0.65%)</title><rect x="183.7" y="901" width="7.6" height="15.0" fill="rgb(248,87,43)" rx="2" ry="2" />
<text  x="186.66" y="911.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (17 samples, 0.05%)</title><rect x="809.6" y="389" width="0.6" height="15.0" fill="rgb(243,139,35)" rx="2" ry="2" />
<text  x="812.60" y="399.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4 samples, 0.01%)</title><rect x="58.8" y="981" width="0.1" height="15.0" fill="rgb(250,101,19)" rx="2" ry="2" />
<text  x="61.78" y="991.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::operator= (6 samples, 0.02%)</title><rect x="85.4" y="981" width="0.2" height="15.0" fill="rgb(213,130,9)" rx="2" ry="2" />
<text  x="88.39" y="991.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (276 samples, 0.86%)</title><rect x="130.1" y="917" width="10.2" height="15.0" fill="rgb(216,152,33)" rx="2" ry="2" />
<text  x="133.07" y="927.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (4 samples, 0.01%)</title><rect x="204.0" y="133" width="0.1" height="15.0" fill="rgb(244,103,44)" rx="2" ry="2" />
<text  x="206.99" y="143.5" ></text>
</g>
<g >
<title>std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;::~pair (4 samples, 0.01%)</title><rect x="106.6" y="981" width="0.1" height="15.0" fill="rgb(205,200,47)" rx="2" ry="2" />
<text  x="109.57" y="991.5" ></text>
</g>
<g >
<title>calloc (204 samples, 0.64%)</title><rect x="130.1" y="501" width="7.5" height="15.0" fill="rgb(251,129,18)" rx="2" ry="2" />
<text  x="133.07" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (4 samples, 0.01%)</title><rect x="610.9" y="709" width="0.1" height="15.0" fill="rgb(212,56,17)" rx="2" ry="2" />
<text  x="613.88" y="719.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (5 samples, 0.02%)</title><rect x="204.1" y="165" width="0.2" height="15.0" fill="rgb(239,42,40)" rx="2" ry="2" />
<text  x="207.14" y="175.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (52 samples, 0.16%)</title><rect x="211.2" y="533" width="1.9" height="15.0" fill="rgb(226,108,12)" rx="2" ry="2" />
<text  x="214.16" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_valptr (3 samples, 0.01%)</title><rect x="125.3" y="981" width="0.2" height="15.0" fill="rgb(243,207,40)" rx="2" ry="2" />
<text  x="128.34" y="991.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (5 samples, 0.02%)</title><rect x="704.0" y="597" width="0.2" height="15.0" fill="rgb(248,55,49)" rx="2" ry="2" />
<text  x="706.98" y="607.5" ></text>
</g>
<g >
<title>Game_Picture::SetNonEffectParams (49 samples, 0.15%)</title><rect x="951.8" y="725" width="1.8" height="15.0" fill="rgb(216,59,49)" rx="2" ry="2" />
<text  x="954.81" y="735.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned (19 samples, 0.06%)</title><rect x="987.7" y="693" width="0.7" height="15.0" fill="rgb(249,212,10)" rx="2" ry="2" />
<text  x="990.70" y="703.5" ></text>
</g>
<g >
<title>Bitmap::EffectsBlit (12 samples, 0.04%)</title><rect x="257.9" y="789" width="0.4" height="15.0" fill="rgb(212,48,13)" rx="2" ry="2" />
<text  x="260.87" y="799.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (130 samples, 0.41%)</title><rect x="140.4" y="965" width="4.8" height="15.0" fill="rgb(248,91,39)" rx="2" ry="2" />
<text  x="143.42" y="975.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (9 samples, 0.03%)</title><rect x="966.0" y="709" width="0.4" height="15.0" fill="rgb(227,93,15)" rx="2" ry="2" />
<text  x="969.04" y="719.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Game_Picture*, false&gt;::_Head_base&lt;Game_Picture*&gt; (12 samples, 0.04%)</title><rect x="726.7" y="597" width="0.5" height="15.0" fill="rgb(231,170,23)" rx="2" ry="2" />
<text  x="729.74" y="607.5" ></text>
</g>
<g >
<title>Scene_Map::Update (110 samples, 0.34%)</title><rect x="200.4" y="949" width="4.1" height="15.0" fill="rgb(248,173,13)" rx="2" ry="2" />
<text  x="203.40" y="959.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (25 samples, 0.08%)</title><rect x="702.7" y="469" width="0.9" height="15.0" fill="rgb(245,105,38)" rx="2" ry="2" />
<text  x="705.69" y="479.5" ></text>
</g>
<g >
<title>Bitmap::~Bitmap (101 samples, 0.32%)</title><rect x="200.7" y="437" width="3.8" height="15.0" fill="rgb(243,147,28)" rx="2" ry="2" />
<text  x="203.74" y="447.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (110 samples, 0.34%)</title><rect x="200.4" y="581" width="4.1" height="15.0" fill="rgb(242,174,54)" rx="2" ry="2" />
<text  x="203.40" y="591.5" ></text>
</g>
<g >
<title>Bitmap::Create (340 samples, 1.06%)</title><rect x="857.2" y="485" width="12.5" height="15.0" fill="rgb(243,152,38)" rx="2" ry="2" />
<text  x="860.17" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (56 samples, 0.18%)</title><rect x="211.0" y="565" width="2.1" height="15.0" fill="rgb(239,131,17)" rx="2" ry="2" />
<text  x="214.01" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (11 samples, 0.03%)</title><rect x="1130.8" y="789" width="0.4" height="15.0" fill="rgb(251,211,12)" rx="2" ry="2" />
<text  x="1133.79" y="799.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::end (9 samples, 0.03%)</title><rect x="777.6" y="469" width="0.3" height="15.0" fill="rgb(219,17,38)" rx="2" ry="2" />
<text  x="780.60" y="479.5" ></text>
</g>
<g >
<title>std::_Bit_iterator::_Bit_iterator (5 samples, 0.02%)</title><rect x="263.5" y="757" width="0.2" height="15.0" fill="rgb(248,54,34)" rx="2" ry="2" />
<text  x="266.53" y="767.5" ></text>
</g>
<g >
<title>Transition::IsErased (12 samples, 0.04%)</title><rect x="737.5" y="677" width="0.5" height="15.0" fill="rgb(251,85,38)" rx="2" ry="2" />
<text  x="740.54" y="687.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (6 samples, 0.02%)</title><rect x="38.8" y="981" width="0.2" height="15.0" fill="rgb(253,112,30)" rx="2" ry="2" />
<text  x="41.83" y="991.5" ></text>
</g>
<g >
<title>Sdl2Ui::ProcessEvent (37 samples, 0.12%)</title><rect x="1181.4" y="869" width="1.3" height="15.0" fill="rgb(234,112,20)" rx="2" ry="2" />
<text  x="1184.35" y="879.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (177 samples, 0.55%)</title><rect x="204.5" y="725" width="6.5" height="15.0" fill="rgb(222,149,13)" rx="2" ry="2" />
<text  x="207.47" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (11 samples, 0.03%)</title><rect x="480.6" y="661" width="0.4" height="15.0" fill="rgb(232,43,12)" rx="2" ry="2" />
<text  x="483.57" y="671.5" ></text>
</g>
<g >
<title>calloc (19 samples, 0.06%)</title><rect x="140.4" y="453" width="0.7" height="15.0" fill="rgb(236,71,28)" rx="2" ry="2" />
<text  x="143.42" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (3 samples, 0.01%)</title><rect x="604.2" y="661" width="0.1" height="15.0" fill="rgb(219,93,51)" rx="2" ry="2" />
<text  x="607.16" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (190 samples, 0.60%)</title><rect x="729.6" y="613" width="7.0" height="15.0" fill="rgb(230,107,30)" rx="2" ry="2" />
<text  x="732.63" y="623.5" ></text>
</g>
<g >
<title>FileRequestAsync::Bind (749 samples, 2.35%)</title><rect x="683.8" y="693" width="27.7" height="15.0" fill="rgb(251,11,3)" rx="2" ry="2" />
<text  x="686.84" y="703.5" >F..</text>
</g>
<g >
<title>schedule (97 samples, 0.30%)</title><rect x="18.5" y="885" width="3.6" height="15.0" fill="rgb(209,22,53)" rx="2" ry="2" />
<text  x="21.54" y="895.5" ></text>
</g>
<g >
<title>operator!= (8 samples, 0.03%)</title><rect x="963.7" y="677" width="0.3" height="15.0" fill="rgb(252,68,30)" rx="2" ry="2" />
<text  x="966.75" y="687.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::_M_ptr (10 samples, 0.03%)</title><rect x="1169.9" y="757" width="0.3" height="15.0" fill="rgb(244,52,36)" rx="2" ry="2" />
<text  x="1172.86" y="767.5" ></text>
</g>
<g >
<title>std::bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;, Game_Picture*&amp;, std::_Placeholder&lt;1&gt; const&amp;&gt; (37 samples, 0.12%)</title><rect x="711.5" y="693" width="1.4" height="15.0" fill="rgb(222,142,29)" rx="2" ry="2" />
<text  x="714.52" y="703.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (4 samples, 0.01%)</title><rect x="919.7" y="501" width="0.1" height="15.0" fill="rgb(209,64,47)" rx="2" ry="2" />
<text  x="922.70" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (70 samples, 0.22%)</title><rect x="803.8" y="373" width="2.6" height="15.0" fill="rgb(219,150,12)" rx="2" ry="2" />
<text  x="806.80" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (18 samples, 0.06%)</title><rect x="615.3" y="725" width="0.7" height="15.0" fill="rgb(211,35,12)" rx="2" ry="2" />
<text  x="618.32" y="735.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::begin (3 samples, 0.01%)</title><rect x="608.3" y="693" width="0.1" height="15.0" fill="rgb(248,112,26)" rx="2" ry="2" />
<text  x="611.33" y="703.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::operator() (9 samples, 0.03%)</title><rect x="789.9" y="421" width="0.4" height="15.0" fill="rgb(237,64,24)" rx="2" ry="2" />
<text  x="792.94" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_ptr (3 samples, 0.01%)</title><rect x="779.8" y="389" width="0.1" height="15.0" fill="rgb(247,15,8)" rx="2" ry="2" />
<text  x="782.81" y="399.5" ></text>
</g>
<g >
<title>Player::MainLoop (96 samples, 0.30%)</title><rect x="191.3" y="965" width="3.6" height="15.0" fill="rgb(242,181,8)" rx="2" ry="2" />
<text  x="194.35" y="975.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (4 samples, 0.01%)</title><rect x="666.0" y="469" width="0.2" height="15.0" fill="rgb(205,221,15)" rx="2" ry="2" />
<text  x="669.02" y="479.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;int&gt;, int&gt; (309 samples, 0.97%)</title><rect x="693.2" y="629" width="11.4" height="15.0" fill="rgb(218,55,51)" rx="2" ry="2" />
<text  x="696.22" y="639.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::end (44 samples, 0.14%)</title><rect x="508.4" y="725" width="1.6" height="15.0" fill="rgb(217,26,25)" rx="2" ry="2" />
<text  x="511.40" y="735.5" ></text>
</g>
<g >
<title>uncharge_batch (3 samples, 0.01%)</title><rect x="203.0" y="69" width="0.1" height="15.0" fill="rgb(233,13,49)" rx="2" ry="2" />
<text  x="205.95" y="79.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (4 samples, 0.01%)</title><rect x="1169.1" y="789" width="0.1" height="15.0" fill="rgb(217,167,34)" rx="2" ry="2" />
<text  x="1172.08" y="799.5" ></text>
</g>
<g >
<title>operator new (63 samples, 0.20%)</title><rect x="152.2" y="533" width="2.3" height="15.0" fill="rgb(249,74,36)" rx="2" ry="2" />
<text  x="155.17" y="543.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (190 samples, 0.60%)</title><rect x="184.3" y="485" width="7.0" height="15.0" fill="rgb(241,29,46)" rx="2" ry="2" />
<text  x="187.33" y="495.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator() (36 samples, 0.11%)</title><rect x="209.3" y="341" width="1.3" height="15.0" fill="rgb(207,198,12)" rx="2" ry="2" />
<text  x="212.27" y="351.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*&gt; (267 samples, 0.84%)</title><rect x="925.2" y="597" width="9.9" height="15.0" fill="rgb(233,31,24)" rx="2" ry="2" />
<text  x="928.24" y="607.5" ></text>
</g>
<g >
<title>std::__find_if&lt;int const*, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (120 samples, 0.38%)</title><rect x="503.6" y="709" width="4.4" height="15.0" fill="rgb(215,91,44)" rx="2" ry="2" />
<text  x="506.60" y="719.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (257 samples, 0.80%)</title><rect x="151.8" y="661" width="9.5" height="15.0" fill="rgb(250,229,42)" rx="2" ry="2" />
<text  x="154.84" y="671.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (85 samples, 0.27%)</title><rect x="250.3" y="453" width="3.1" height="15.0" fill="rgb(243,53,24)" rx="2" ry="2" />
<text  x="253.29" y="463.5" ></text>
</g>
<g >
<title>Rect::Rect (3 samples, 0.01%)</title><rect x="40.7" y="981" width="0.2" height="15.0" fill="rgb(236,13,25)" rx="2" ry="2" />
<text  x="43.75" y="991.5" ></text>
</g>
<g >
<title>operator new@plt (9 samples, 0.03%)</title><rect x="725.8" y="645" width="0.3" height="15.0" fill="rgb(240,31,14)" rx="2" ry="2" />
<text  x="728.78" y="655.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (85 samples, 0.27%)</title><rect x="250.3" y="661" width="3.1" height="15.0" fill="rgb(235,101,8)" rx="2" ry="2" />
<text  x="253.29" y="671.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (45 samples, 0.14%)</title><rect x="213.9" y="485" width="1.6" height="15.0" fill="rgb(243,193,25)" rx="2" ry="2" />
<text  x="216.85" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (11 samples, 0.03%)</title><rect x="921.0" y="485" width="0.4" height="15.0" fill="rgb(207,104,20)" rx="2" ry="2" />
<text  x="924.03" y="495.5" ></text>
</g>
<g >
<title>std::_Bit_iterator_base::_Bit_iterator_base (4 samples, 0.01%)</title><rect x="265.0" y="725" width="0.1" height="15.0" fill="rgb(239,152,29)" rx="2" ry="2" />
<text  x="267.97" y="735.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (92 samples, 0.29%)</title><rect x="207.2" y="549" width="3.4" height="15.0" fill="rgb(211,11,9)" rx="2" ry="2" />
<text  x="210.24" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (6 samples, 0.02%)</title><rect x="785.5" y="485" width="0.3" height="15.0" fill="rgb(247,209,37)" rx="2" ry="2" />
<text  x="788.54" y="495.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (4 samples, 0.01%)</title><rect x="605.2" y="693" width="0.1" height="15.0" fill="rgb(220,164,5)" rx="2" ry="2" />
<text  x="608.16" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (3 samples, 0.01%)</title><rect x="126.5" y="981" width="0.1" height="15.0" fill="rgb(252,195,35)" rx="2" ry="2" />
<text  x="129.49" y="991.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (26 samples, 0.08%)</title><rect x="37.1" y="981" width="0.9" height="15.0" fill="rgb(224,95,5)" rx="2" ry="2" />
<text  x="40.05" y="991.5" ></text>
</g>
<g >
<title>get_unmapped_area (4 samples, 0.01%)</title><rect x="135.1" y="309" width="0.1" height="15.0" fill="rgb(245,184,2)" rx="2" ry="2" />
<text  x="138.06" y="319.5" ></text>
</g>
<g >
<title>std::swap&lt;Bitmap*&gt; (25 samples, 0.08%)</title><rect x="917.8" y="453" width="0.9" height="15.0" fill="rgb(232,37,43)" rx="2" ry="2" />
<text  x="920.81" y="463.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (11 samples, 0.03%)</title><rect x="802.6" y="389" width="0.4" height="15.0" fill="rgb(210,168,6)" rx="2" ry="2" />
<text  x="805.62" y="399.5" ></text>
</g>
<g >
<title>Player::Update (149 samples, 0.47%)</title><rect x="194.9" y="981" width="5.5" height="15.0" fill="rgb(221,14,45)" rx="2" ry="2" />
<text  x="197.90" y="991.5" ></text>
</g>
<g >
<title>x86_pmu_enable (74 samples, 0.23%)</title><rect x="19.1" y="805" width="2.8" height="15.0" fill="rgb(246,117,29)" rx="2" ry="2" />
<text  x="22.13" y="815.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (8 samples, 0.03%)</title><rect x="736.3" y="597" width="0.3" height="15.0" fill="rgb(232,14,52)" rx="2" ry="2" />
<text  x="739.32" y="607.5" ></text>
</g>
<g >
<title>malloc (4 samples, 0.01%)</title><rect x="140.3" y="485" width="0.1" height="15.0" fill="rgb(205,79,23)" rx="2" ry="2" />
<text  x="143.27" y="495.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (18 samples, 0.06%)</title><rect x="190.7" y="293" width="0.6" height="15.0" fill="rgb(246,118,18)" rx="2" ry="2" />
<text  x="193.68" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (24 samples, 0.08%)</title><rect x="889.3" y="485" width="0.9" height="15.0" fill="rgb(222,41,40)" rx="2" ry="2" />
<text  x="892.32" y="495.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (179 samples, 0.56%)</title><rect x="145.2" y="805" width="6.6" height="15.0" fill="rgb(229,69,29)" rx="2" ry="2" />
<text  x="148.23" y="815.5" ></text>
</g>
<g >
<title>__interceptor_free (104 samples, 0.33%)</title><rect x="246.1" y="341" width="3.8" height="15.0" fill="rgb(209,6,29)" rx="2" ry="2" />
<text  x="249.08" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (5 samples, 0.02%)</title><rect x="645.1" y="645" width="0.2" height="15.0" fill="rgb(229,46,11)" rx="2" ry="2" />
<text  x="648.14" y="655.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (4 samples, 0.01%)</title><rect x="140.3" y="661" width="0.1" height="15.0" fill="rgb(231,176,2)" rx="2" ry="2" />
<text  x="143.27" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (8 samples, 0.03%)</title><rect x="460.1" y="709" width="0.3" height="15.0" fill="rgb(210,73,12)" rx="2" ry="2" />
<text  x="463.06" y="719.5" ></text>
</g>
<g >
<title>Player::MainLoop (85 samples, 0.27%)</title><rect x="250.3" y="949" width="3.1" height="15.0" fill="rgb(249,41,19)" rx="2" ry="2" />
<text  x="253.29" y="959.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (6 samples, 0.02%)</title><rect x="696.4" y="581" width="0.2" height="15.0" fill="rgb(239,158,3)" rx="2" ry="2" />
<text  x="699.40" y="591.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (17 samples, 0.05%)</title><rect x="163.3" y="501" width="0.6" height="15.0" fill="rgb(231,213,50)" rx="2" ry="2" />
<text  x="166.26" y="511.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (4 samples, 0.01%)</title><rect x="89.9" y="981" width="0.2" height="15.0" fill="rgb(207,202,23)" rx="2" ry="2" />
<text  x="92.94" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (3 samples, 0.01%)</title><rect x="127.7" y="981" width="0.1" height="15.0" fill="rgb(253,99,16)" rx="2" ry="2" />
<text  x="130.71" y="991.5" ></text>
</g>
<g >
<title>__interceptor_free (12 samples, 0.04%)</title><rect x="194.5" y="357" width="0.4" height="15.0" fill="rgb(227,222,10)" rx="2" ry="2" />
<text  x="197.45" y="367.5" ></text>
</g>
<g >
<title>std::__weak_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__weak_count (25 samples, 0.08%)</title><rect x="934.2" y="517" width="0.9" height="15.0" fill="rgb(215,126,34)" rx="2" ry="2" />
<text  x="937.18" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (4 samples, 0.01%)</title><rect x="257.1" y="981" width="0.1" height="15.0" fill="rgb(254,190,16)" rx="2" ry="2" />
<text  x="260.06" y="991.5" ></text>
</g>
<g >
<title>Window_Base::Update (13 samples, 0.04%)</title><rect x="1179.9" y="821" width="0.5" height="15.0" fill="rgb(221,176,24)" rx="2" ry="2" />
<text  x="1182.87" y="831.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (208 samples, 0.65%)</title><rect x="183.7" y="757" width="7.6" height="15.0" fill="rgb(243,92,29)" rx="2" ry="2" />
<text  x="186.66" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create@plt (3 samples, 0.01%)</title><rect x="818.2" y="405" width="0.1" height="15.0" fill="rgb(229,192,0)" rx="2" ry="2" />
<text  x="821.18" y="415.5" ></text>
</g>
<g >
<title>Cache::Picture (1,687 samples, 5.28%)</title><rect x="757.8" y="501" width="62.3" height="15.0" fill="rgb(209,169,50)" rx="2" ry="2" />
<text  x="760.79" y="511.5" >Cache:..</text>
</g>
<g >
<title>operator new (30 samples, 0.09%)</title><rect x="1183.5" y="997" width="1.1" height="15.0" fill="rgb(245,68,39)" rx="2" ry="2" />
<text  x="1186.46" y="1007.5" ></text>
</g>
<g >
<title>MakeFlashColor (36 samples, 0.11%)</title><rect x="874.5" y="469" width="1.4" height="15.0" fill="rgb(236,168,43)" rx="2" ry="2" />
<text  x="877.54" y="479.5" ></text>
</g>
<g >
<title>Bitmap::width (9 samples, 0.03%)</title><rect x="28.0" y="981" width="0.3" height="15.0" fill="rgb(225,216,7)" rx="2" ry="2" />
<text  x="30.96" y="991.5" ></text>
</g>
<g >
<title>pixman_image_get_width (46 samples, 0.14%)</title><rect x="1158.6" y="757" width="1.7" height="15.0" fill="rgb(220,102,6)" rx="2" ry="2" />
<text  x="1161.62" y="767.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.01%)</title><rect x="783.7" y="421" width="0.1" height="15.0" fill="rgb(246,214,12)" rx="2" ry="2" />
<text  x="786.73" y="431.5" ></text>
</g>
<g >
<title>vfs_read (20 samples, 0.06%)</title><rect x="22.5" y="933" width="0.8" height="15.0" fill="rgb(214,227,0)" rx="2" ry="2" />
<text  x="25.53" y="943.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::end (3 samples, 0.01%)</title><rect x="783.5" y="437" width="0.2" height="15.0" fill="rgb(214,99,28)" rx="2" ry="2" />
<text  x="786.55" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator bool (12 samples, 0.04%)</title><rect x="1178.0" y="821" width="0.4" height="15.0" fill="rgb(206,136,0)" rx="2" ry="2" />
<text  x="1180.95" y="831.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator (11 samples, 0.03%)</title><rect x="1178.4" y="821" width="0.4" height="15.0" fill="rgb(239,127,43)" rx="2" ry="2" />
<text  x="1181.40" y="831.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (4 samples, 0.01%)</title><rect x="140.3" y="821" width="0.1" height="15.0" fill="rgb(217,88,6)" rx="2" ry="2" />
<text  x="143.27" y="831.5" ></text>
</g>
<g >
<title>Color::Color (5 samples, 0.02%)</title><rect x="872.4" y="485" width="0.2" height="15.0" fill="rgb(239,92,13)" rx="2" ry="2" />
<text  x="875.39" y="495.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (8 samples, 0.03%)</title><rect x="1151.1" y="789" width="0.3" height="15.0" fill="rgb(233,215,47)" rx="2" ry="2" />
<text  x="1154.12" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (207 samples, 0.65%)</title><rect x="594.7" y="741" width="7.7" height="15.0" fill="rgb(223,118,30)" rx="2" ry="2" />
<text  x="597.73" y="751.5" ></text>
</g>
<g >
<title>Scene_Map::Update (776 samples, 2.43%)</title><rect x="221.2" y="885" width="28.7" height="15.0" fill="rgb(231,176,31)" rx="2" ry="2" />
<text  x="224.25" y="895.5" >Sc..</text>
</g>
<g >
<title>std::get&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (3 samples, 0.01%)</title><rect x="1144.0" y="773" width="0.1" height="15.0" fill="rgb(230,122,23)" rx="2" ry="2" />
<text  x="1146.99" y="783.5" ></text>
</g>
<g >
<title>variables (6 samples, 0.02%)</title><rect x="563.0" y="725" width="0.2" height="15.0" fill="rgb(234,107,2)" rx="2" ry="2" />
<text  x="565.99" y="735.5" ></text>
</g>
<g >
<title>Bitmap::width (82 samples, 0.26%)</title><rect x="1157.3" y="773" width="3.1" height="15.0" fill="rgb(216,138,1)" rx="2" ry="2" />
<text  x="1160.33" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity@plt (4 samples, 0.01%)</title><rect x="818.0" y="405" width="0.1" height="15.0" fill="rgb(244,222,37)" rx="2" ry="2" />
<text  x="820.99" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (17 samples, 0.05%)</title><rect x="982.2" y="709" width="0.6" height="15.0" fill="rgb(240,151,1)" rx="2" ry="2" />
<text  x="985.15" y="719.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (4 samples, 0.01%)</title><rect x="995.9" y="741" width="0.2" height="15.0" fill="rgb(214,68,41)" rx="2" ry="2" />
<text  x="998.94" y="751.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (85 samples, 0.27%)</title><rect x="250.3" y="837" width="3.1" height="15.0" fill="rgb(223,21,29)" rx="2" ry="2" />
<text  x="253.29" y="847.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (428 samples, 1.34%)</title><rect x="791.3" y="421" width="15.9" height="15.0" fill="rgb(229,5,1)" rx="2" ry="2" />
<text  x="794.34" y="431.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (101 samples, 0.32%)</title><rect x="200.7" y="405" width="3.8" height="15.0" fill="rgb(250,208,35)" rx="2" ry="2" />
<text  x="203.74" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (6 samples, 0.02%)</title><rect x="967.9" y="677" width="0.2" height="15.0" fill="rgb(251,77,46)" rx="2" ry="2" />
<text  x="970.89" y="687.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (604 samples, 1.89%)</title><rect x="161.3" y="933" width="22.4" height="15.0" fill="rgb(243,32,28)" rx="2" ry="2" />
<text  x="164.34" y="943.5" >G..</text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (4 samples, 0.01%)</title><rect x="140.3" y="517" width="0.1" height="15.0" fill="rgb(254,115,15)" rx="2" ry="2" />
<text  x="143.27" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator++ (42 samples, 0.13%)</title><rect x="654.6" y="661" width="1.6" height="15.0" fill="rgb(245,191,15)" rx="2" ry="2" />
<text  x="657.64" y="671.5" ></text>
</g>
<g >
<title>security_file_permission (7 samples, 0.02%)</title><rect x="23.0" y="901" width="0.3" height="15.0" fill="rgb(228,160,21)" rx="2" ry="2" />
<text  x="26.01" y="911.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (72 samples, 0.23%)</title><rect x="916.7" y="501" width="2.6" height="15.0" fill="rgb(234,153,3)" rx="2" ry="2" />
<text  x="919.67" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (5 samples, 0.02%)</title><rect x="256.1" y="981" width="0.2" height="15.0" fill="rgb(208,200,50)" rx="2" ry="2" />
<text  x="259.10" y="991.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_M_lower_bound (247 samples, 0.77%)</title><rect x="164.0" y="597" width="9.1" height="15.0" fill="rgb(221,5,30)" rx="2" ry="2" />
<text  x="166.96" y="607.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (208 samples, 0.65%)</title><rect x="183.7" y="821" width="7.6" height="15.0" fill="rgb(242,222,23)" rx="2" ry="2" />
<text  x="186.66" y="831.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (8 samples, 0.03%)</title><rect x="1144.4" y="757" width="0.3" height="15.0" fill="rgb(223,28,33)" rx="2" ry="2" />
<text  x="1147.36" y="767.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (85 samples, 0.27%)</title><rect x="250.3" y="709" width="3.1" height="15.0" fill="rgb(247,143,50)" rx="2" ry="2" />
<text  x="253.29" y="719.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (179 samples, 0.56%)</title><rect x="145.2" y="725" width="6.6" height="15.0" fill="rgb(218,181,37)" rx="2" ry="2" />
<text  x="148.23" y="735.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (61 samples, 0.19%)</title><rect x="763.3" y="453" width="2.2" height="15.0" fill="rgb(221,49,14)" rx="2" ry="2" />
<text  x="766.29" y="463.5" ></text>
</g>
<g >
<title>Game_Picture::SyncCurrentToFinish (48 samples, 0.15%)</title><rect x="953.6" y="725" width="1.8" height="15.0" fill="rgb(234,181,34)" rx="2" ry="2" />
<text  x="956.62" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (132 samples, 0.41%)</title><rect x="747.1" y="645" width="4.9" height="15.0" fill="rgb(209,108,21)" rx="2" ry="2" />
<text  x="750.11" y="655.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (28 samples, 0.09%)</title><rect x="135.4" y="421" width="1.0" height="15.0" fill="rgb(215,163,37)" rx="2" ry="2" />
<text  x="138.40" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (13 samples, 0.04%)</title><rect x="810.9" y="405" width="0.4" height="15.0" fill="rgb(229,221,34)" rx="2" ry="2" />
<text  x="813.86" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (13 samples, 0.04%)</title><rect x="890.2" y="485" width="0.5" height="15.0" fill="rgb(220,145,30)" rx="2" ry="2" />
<text  x="893.20" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::max_size (14 samples, 0.04%)</title><rect x="56.8" y="981" width="0.5" height="15.0" fill="rgb(234,185,51)" rx="2" ry="2" />
<text  x="59.75" y="991.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.02%)</title><rect x="155.0" y="549" width="0.3" height="15.0" fill="rgb(252,64,15)" rx="2" ry="2" />
<text  x="158.02" y="559.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (3 samples, 0.01%)</title><rect x="634.2" y="709" width="0.1" height="15.0" fill="rgb(227,154,34)" rx="2" ry="2" />
<text  x="637.20" y="719.5" ></text>
</g>
<g >
<title>__interceptor_free (137 samples, 0.43%)</title><rect x="907.6" y="325" width="5.1" height="15.0" fill="rgb(217,104,54)" rx="2" ry="2" />
<text  x="910.65" y="335.5" ></text>
</g>
<g >
<title>std::map&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, (anonymous namespace)::CacheItem, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (272 samples, 0.85%)</title><rect x="164.0" y="629" width="10.0" height="15.0" fill="rgb(227,213,42)" rx="2" ry="2" />
<text  x="166.96" y="639.5" ></text>
</g>
<g >
<title>unmapped_area_topdown (4 samples, 0.01%)</title><rect x="135.1" y="277" width="0.1" height="15.0" fill="rgb(240,197,52)" rx="2" ry="2" />
<text  x="138.06" y="287.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (3 samples, 0.01%)</title><rect x="618.0" y="709" width="0.1" height="15.0" fill="rgb(215,146,45)" rx="2" ry="2" />
<text  x="620.98" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (43 samples, 0.13%)</title><rect x="461.5" y="709" width="1.6" height="15.0" fill="rgb(237,200,42)" rx="2" ry="2" />
<text  x="464.50" y="719.5" ></text>
</g>
<g >
<title>unmap_single_vma (3 samples, 0.01%)</title><rect x="204.3" y="213" width="0.1" height="15.0" fill="rgb(238,74,49)" rx="2" ry="2" />
<text  x="207.32" y="223.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (604 samples, 1.89%)</title><rect x="161.3" y="853" width="22.4" height="15.0" fill="rgb(238,159,17)" rx="2" ry="2" />
<text  x="164.34" y="863.5" >F..</text>
</g>
<g >
<title>sync_regs (25 samples, 0.08%)</title><rect x="226.7" y="421" width="0.9" height="15.0" fill="rgb(222,204,37)" rx="2" ry="2" />
<text  x="229.72" y="431.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (34 samples, 0.11%)</title><rect x="201.8" y="165" width="1.3" height="15.0" fill="rgb(252,11,30)" rx="2" ry="2" />
<text  x="204.81" y="175.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (24,904 samples, 78.00%)</title><rect x="260.0" y="869" width="920.4" height="15.0" fill="rgb(205,148,33)" rx="2" ry="2" />
<text  x="262.98" y="879.5" >Scene_Map::UpdateStage1</text>
</g>
<g >
<title>std::get&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (5 samples, 0.02%)</title><rect x="890.0" y="453" width="0.2" height="15.0" fill="rgb(254,215,27)" rx="2" ry="2" />
<text  x="893.02" y="463.5" ></text>
</g>
<g >
<title>DynamicFormat::DynamicFormat (6 samples, 0.02%)</title><rect x="29.2" y="981" width="0.2" height="15.0" fill="rgb(219,178,45)" rx="2" ry="2" />
<text  x="32.18" y="991.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (96 samples, 0.30%)</title><rect x="191.3" y="837" width="3.6" height="15.0" fill="rgb(217,20,37)" rx="2" ry="2" />
<text  x="194.35" y="847.5" ></text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (23 samples, 0.07%)</title><rect x="1151.5" y="805" width="0.8" height="15.0" fill="rgb(244,76,28)" rx="2" ry="2" />
<text  x="1154.45" y="815.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_M_lower_bound (73 samples, 0.23%)</title><rect x="207.9" y="357" width="2.7" height="15.0" fill="rgb(249,68,0)" rx="2" ry="2" />
<text  x="210.90" y="367.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (92 samples, 0.29%)</title><rect x="207.2" y="437" width="3.4" height="15.0" fill="rgb(234,46,50)" rx="2" ry="2" />
<text  x="210.24" y="447.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::begin (17 samples, 0.05%)</title><rect x="508.8" y="709" width="0.6" height="15.0" fill="rgb(222,127,34)" rx="2" ry="2" />
<text  x="511.81" y="719.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (776 samples, 2.43%)</title><rect x="221.2" y="581" width="28.7" height="15.0" fill="rgb(240,157,14)" rx="2" ry="2" />
<text  x="224.25" y="591.5" >st..</text>
</g>
<g >
<title>__GI___pthread_getspecific (3 samples, 0.01%)</title><rect x="195.3" y="517" width="0.1" height="15.0" fill="rgb(228,200,37)" rx="2" ry="2" />
<text  x="198.30" y="527.5" ></text>
</g>
<g >
<title>Player::Run (25,037 samples, 78.41%)</title><rect x="257.6" y="949" width="925.3" height="15.0" fill="rgb(241,106,1)" rx="2" ry="2" />
<text  x="260.57" y="959.5" >Player::Run</text>
</g>
<g >
<title>SDL_ConvertPixels_REAL (9 samples, 0.03%)</title><rect x="258.6" y="805" width="0.3" height="15.0" fill="rgb(239,202,11)" rx="2" ry="2" />
<text  x="261.61" y="815.5" ></text>
</g>
<g >
<title>Bitmap::Create (276 samples, 0.86%)</title><rect x="130.1" y="709" width="10.2" height="15.0" fill="rgb(208,119,22)" rx="2" ry="2" />
<text  x="133.07" y="719.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandControlSwitches (4 samples, 0.01%)</title><rect x="518.0" y="757" width="0.2" height="15.0" fill="rgb(239,10,41)" rx="2" ry="2" />
<text  x="521.05" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (7 samples, 0.02%)</title><rect x="919.0" y="405" width="0.2" height="15.0" fill="rgb(225,114,31)" rx="2" ry="2" />
<text  x="921.96" y="415.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (3 samples, 0.01%)</title><rect x="784.3" y="469" width="0.1" height="15.0" fill="rgb(232,88,38)" rx="2" ry="2" />
<text  x="787.32" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::vector (7 samples, 0.02%)</title><rect x="867.4" y="325" width="0.3" height="15.0" fill="rgb(234,7,11)" rx="2" ry="2" />
<text  x="870.44" y="335.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (12 samples, 0.04%)</title><rect x="41.5" y="981" width="0.4" height="15.0" fill="rgb(217,78,21)" rx="2" ry="2" />
<text  x="44.49" y="991.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (6 samples, 0.02%)</title><rect x="136.8" y="453" width="0.3" height="15.0" fill="rgb(216,218,53)" rx="2" ry="2" />
<text  x="139.84" y="463.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (51 samples, 0.16%)</title><rect x="198.5" y="581" width="1.9" height="15.0" fill="rgb(223,41,8)" rx="2" ry="2" />
<text  x="201.52" y="591.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (6 samples, 0.02%)</title><rect x="1171.4" y="725" width="0.2" height="15.0" fill="rgb(227,41,50)" rx="2" ry="2" />
<text  x="1174.41" y="735.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (3 samples, 0.01%)</title><rect x="258.2" y="741" width="0.1" height="15.0" fill="rgb(250,122,31)" rx="2" ry="2" />
<text  x="261.20" y="751.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (8 samples, 0.03%)</title><rect x="811.4" y="405" width="0.3" height="15.0" fill="rgb(207,16,11)" rx="2" ry="2" />
<text  x="814.41" y="415.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (110 samples, 0.34%)</title><rect x="200.4" y="741" width="4.1" height="15.0" fill="rgb(219,102,20)" rx="2" ry="2" />
<text  x="203.40" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_addr (7 samples, 0.02%)</title><rect x="45.9" y="981" width="0.3" height="15.0" fill="rgb(240,91,46)" rx="2" ry="2" />
<text  x="48.92" y="991.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (4 samples, 0.01%)</title><rect x="704.2" y="597" width="0.1" height="15.0" fill="rgb(248,219,12)" rx="2" ry="2" />
<text  x="707.16" y="607.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::operator() (12 samples, 0.04%)</title><rect x="671.2" y="629" width="0.4" height="15.0" fill="rgb(207,28,19)" rx="2" ry="2" />
<text  x="674.16" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (204 samples, 0.64%)</title><rect x="1033.4" y="725" width="7.6" height="15.0" fill="rgb(247,226,42)" rx="2" ry="2" />
<text  x="1036.41" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (81 samples, 0.25%)</title><rect x="1019.5" y="709" width="3.0" height="15.0" fill="rgb(221,91,10)" rx="2" ry="2" />
<text  x="1022.48" y="719.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (14 samples, 0.04%)</title><rect x="129.6" y="821" width="0.5" height="15.0" fill="rgb(214,174,36)" rx="2" ry="2" />
<text  x="132.56" y="831.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;int, std::allocator&lt;int&gt;, int&gt; (289 samples, 0.91%)</title><rect x="693.8" y="613" width="10.7" height="15.0" fill="rgb(210,100,26)" rx="2" ry="2" />
<text  x="696.78" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (4 samples, 0.01%)</title><rect x="615.8" y="693" width="0.2" height="15.0" fill="rgb(208,44,2)" rx="2" ry="2" />
<text  x="618.84" y="703.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (276 samples, 0.86%)</title><rect x="130.1" y="933" width="10.2" height="15.0" fill="rgb(208,122,15)" rx="2" ry="2" />
<text  x="133.07" y="943.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (77 samples, 0.24%)</title><rect x="892.3" y="453" width="2.8" height="15.0" fill="rgb(209,211,35)" rx="2" ry="2" />
<text  x="895.27" y="463.5" ></text>
</g>
<g >
<title>Sprite::SetFlashEffect (18 samples, 0.06%)</title><rect x="1165.1" y="773" width="0.6" height="15.0" fill="rgb(249,89,8)" rx="2" ry="2" />
<text  x="1168.05" y="783.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_ptr (3 samples, 0.01%)</title><rect x="696.3" y="581" width="0.1" height="15.0" fill="rgb(221,3,15)" rx="2" ry="2" />
<text  x="699.29" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;Bitmap&gt;::_M_ptr (7 samples, 0.02%)</title><rect x="861.0" y="373" width="0.3" height="15.0" fill="rgb(214,105,37)" rx="2" ry="2" />
<text  x="864.01" y="383.5" ></text>
</g>
<g >
<title>default_wake_function (9 samples, 0.03%)</title><rect x="23.4" y="837" width="0.3" height="15.0" fill="rgb(251,103,36)" rx="2" ry="2" />
<text  x="26.42" y="847.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt;::_M_head (4 samples, 0.01%)</title><rect x="74.5" y="981" width="0.1" height="15.0" fill="rgb(210,139,42)" rx="2" ry="2" />
<text  x="77.45" y="991.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (8,589 samples, 26.90%)</title><rect x="634.4" y="725" width="317.4" height="15.0" fill="rgb(221,224,42)" rx="2" ry="2" />
<text  x="637.39" y="735.5" >Game_Picture::RequestPictureSprite</text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.02%)</title><rect x="985.1" y="597" width="0.2" height="15.0" fill="rgb(248,133,23)" rx="2" ry="2" />
<text  x="988.11" y="607.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (75 samples, 0.23%)</title><rect x="204.5" y="549" width="2.7" height="15.0" fill="rgb(247,225,25)" rx="2" ry="2" />
<text  x="207.47" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (6 samples, 0.02%)</title><rect x="109.7" y="981" width="0.2" height="15.0" fill="rgb(220,176,23)" rx="2" ry="2" />
<text  x="112.67" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (4 samples, 0.01%)</title><rect x="607.1" y="677" width="0.1" height="15.0" fill="rgb(253,68,24)" rx="2" ry="2" />
<text  x="610.08" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (685 samples, 2.15%)</title><rect x="1022.6" y="741" width="25.3" height="15.0" fill="rgb(236,90,43)" rx="2" ry="2" />
<text  x="1025.62" y="751.5" >s..</text>
</g>
<g >
<title>operator new (3 samples, 0.01%)</title><rect x="986.6" y="661" width="0.1" height="15.0" fill="rgb(220,95,1)" rx="2" ry="2" />
<text  x="989.63" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::begin (16 samples, 0.05%)</title><rect x="264.5" y="757" width="0.6" height="15.0" fill="rgb(207,169,4)" rx="2" ry="2" />
<text  x="267.52" y="767.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (307 samples, 0.96%)</title><rect x="238.6" y="437" width="11.3" height="15.0" fill="rgb(219,78,42)" rx="2" ry="2" />
<text  x="241.58" y="447.5" ></text>
</g>
<g >
<title>Bitmap::Init (77 samples, 0.24%)</title><rect x="140.4" y="501" width="2.9" height="15.0" fill="rgb(238,91,35)" rx="2" ry="2" />
<text  x="143.42" y="511.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.02%)</title><rect x="644.8" y="645" width="0.2" height="15.0" fill="rgb(238,41,34)" rx="2" ry="2" />
<text  x="647.77" y="655.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (50 samples, 0.16%)</title><rect x="198.6" y="421" width="1.8" height="15.0" fill="rgb(229,173,22)" rx="2" ry="2" />
<text  x="201.55" y="431.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (14 samples, 0.04%)</title><rect x="129.6" y="853" width="0.5" height="15.0" fill="rgb(247,32,20)" rx="2" ry="2" />
<text  x="132.56" y="863.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (187 samples, 0.59%)</title><rect x="861.3" y="389" width="6.9" height="15.0" fill="rgb(232,200,43)" rx="2" ry="2" />
<text  x="864.27" y="399.5" ></text>
</g>
<g >
<title>operator!= (15 samples, 0.05%)</title><rect x="883.1" y="469" width="0.6" height="15.0" fill="rgb(233,83,39)" rx="2" ry="2" />
<text  x="886.11" y="479.5" ></text>
</g>
<g >
<title>Bitmap::height (44 samples, 0.14%)</title><rect x="896.0" y="469" width="1.6" height="15.0" fill="rgb(229,203,16)" rx="2" ry="2" />
<text  x="899.01" y="479.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (4,473 samples, 14.01%)</title><rect x="756.3" y="565" width="165.4" height="15.0" fill="rgb(223,130,39)" rx="2" ry="2" />
<text  x="759.35" y="575.5" >std::_Mem_fn_base&lt;voi..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_right (11 samples, 0.03%)</title><rect x="790.7" y="437" width="0.4" height="15.0" fill="rgb(235,42,38)" rx="2" ry="2" />
<text  x="793.72" y="447.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (36 samples, 0.11%)</title><rect x="913.5" y="325" width="1.3" height="15.0" fill="rgb(251,213,14)" rx="2" ry="2" />
<text  x="916.45" y="335.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (4 samples, 0.01%)</title><rect x="140.3" y="981" width="0.1" height="15.0" fill="rgb(207,191,1)" rx="2" ry="2" />
<text  x="143.27" y="991.5" ></text>
</g>
<g >
<title>std::swap&lt;void (*)(std::_Any_data const&amp;, FileRequestResult*&amp;&amp;)&gt; (32 samples, 0.10%)</title><rect x="708.4" y="565" width="1.2" height="15.0" fill="rgb(233,201,18)" rx="2" ry="2" />
<text  x="711.41" y="575.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (4 samples, 0.01%)</title><rect x="1144.5" y="741" width="0.2" height="15.0" fill="rgb(219,76,10)" rx="2" ry="2" />
<text  x="1147.51" y="751.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (3,037 samples, 9.51%)</title><rect x="299.8" y="789" width="112.3" height="15.0" fill="rgb(227,187,53)" rx="2" ry="2" />
<text  x="302.82" y="799.5" >Game_Interpre..</text>
</g>
<g >
<title>FileRequestAsync::Start (85 samples, 0.27%)</title><rect x="250.3" y="725" width="3.1" height="15.0" fill="rgb(224,65,31)" rx="2" ry="2" />
<text  x="253.29" y="735.5" ></text>
</g>
<g >
<title>pixman_image_unref (12 samples, 0.04%)</title><rect x="194.5" y="389" width="0.4" height="15.0" fill="rgb(211,93,46)" rx="2" ry="2" />
<text  x="197.45" y="399.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (3 samples, 0.01%)</title><rect x="819.3" y="437" width="0.1" height="15.0" fill="rgb(242,30,48)" rx="2" ry="2" />
<text  x="822.32" y="447.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (11 samples, 0.03%)</title><rect x="665.8" y="613" width="0.4" height="15.0" fill="rgb(247,47,52)" rx="2" ry="2" />
<text  x="668.84" y="623.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (110 samples, 0.34%)</title><rect x="200.4" y="837" width="4.1" height="15.0" fill="rgb(235,179,47)" rx="2" ry="2" />
<text  x="203.40" y="847.5" ></text>
</g>
<g >
<title>std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;::~pair (17 samples, 0.05%)</title><rect x="704.9" y="677" width="0.6" height="15.0" fill="rgb(242,81,11)" rx="2" ry="2" />
<text  x="707.87" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_M_lower_bound (6 samples, 0.02%)</title><rect x="1179.9" y="709" width="0.3" height="15.0" fill="rgb(239,159,33)" rx="2" ry="2" />
<text  x="1182.95" y="719.5" ></text>
</g>
<g >
<title>FileRequestAsync::Start (776 samples, 2.43%)</title><rect x="221.2" y="709" width="28.7" height="15.0" fill="rgb(248,117,47)" rx="2" ry="2" />
<text  x="224.25" y="719.5" >Fi..</text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingBackgroundExecution (127 samples, 0.40%)</title><rect x="260.9" y="805" width="4.7" height="15.0" fill="rgb(230,217,31)" rx="2" ry="2" />
<text  x="263.94" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (56 samples, 0.18%)</title><rect x="1098.8" y="725" width="2.1" height="15.0" fill="rgb(237,159,18)" rx="2" ry="2" />
<text  x="1101.83" y="735.5" ></text>
</g>
<g >
<title>Sdl2Ui::GetTicks (3 samples, 0.01%)</title><rect x="1180.4" y="885" width="0.1" height="15.0" fill="rgb(249,31,24)" rx="2" ry="2" />
<text  x="1183.35" y="895.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (276 samples, 0.86%)</title><rect x="130.1" y="741" width="10.2" height="15.0" fill="rgb(233,117,28)" rx="2" ry="2" />
<text  x="133.07" y="751.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (4 samples, 0.01%)</title><rect x="140.3" y="581" width="0.1" height="15.0" fill="rgb(209,151,51)" rx="2" ry="2" />
<text  x="143.27" y="591.5" ></text>
</g>
<g >
<title>operator== (8 samples, 0.03%)</title><rect x="963.7" y="661" width="0.3" height="15.0" fill="rgb(214,91,47)" rx="2" ry="2" />
<text  x="966.75" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (74 samples, 0.23%)</title><rect x="207.9" y="373" width="2.7" height="15.0" fill="rgb(233,84,20)" rx="2" ry="2" />
<text  x="210.90" y="383.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Scene, (__gnu_cxx::_Lock_policy)2&gt;::get (7 samples, 0.02%)</title><rect x="84.8" y="981" width="0.3" height="15.0" fill="rgb(235,132,39)" rx="2" ry="2" />
<text  x="87.80" y="991.5" ></text>
</g>
<g >
<title>Scene::MainFunction (85 samples, 0.27%)</title><rect x="250.3" y="933" width="3.1" height="15.0" fill="rgb(245,116,37)" rx="2" ry="2" />
<text  x="253.29" y="943.5" ></text>
</g>
<g >
<title>min&lt;int&gt; (9 samples, 0.03%)</title><rect x="885.4" y="469" width="0.3" height="15.0" fill="rgb(233,91,30)" rx="2" ry="2" />
<text  x="888.40" y="479.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (149 samples, 0.47%)</title><rect x="194.9" y="645" width="5.5" height="15.0" fill="rgb(239,216,37)" rx="2" ry="2" />
<text  x="197.90" y="655.5" ></text>
</g>
<g >
<title>__lru_cache_add (12 samples, 0.04%)</title><rect x="231.6" y="341" width="0.5" height="15.0" fill="rgb(209,2,42)" rx="2" ry="2" />
<text  x="234.63" y="351.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; (3 samples, 0.01%)</title><rect x="61.0" y="981" width="0.1" height="15.0" fill="rgb(209,28,46)" rx="2" ry="2" />
<text  x="64.00" y="991.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (3 samples, 0.01%)</title><rect x="1177.7" y="821" width="0.1" height="15.0" fill="rgb(245,36,8)" rx="2" ry="2" />
<text  x="1180.69" y="831.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::begin (16 samples, 0.05%)</title><rect x="923.4" y="661" width="0.6" height="15.0" fill="rgb(209,189,13)" rx="2" ry="2" />
<text  x="926.39" y="671.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (91 samples, 0.29%)</title><rect x="803.0" y="389" width="3.4" height="15.0" fill="rgb(208,39,12)" rx="2" ry="2" />
<text  x="806.02" y="399.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandKeyInputProc (7 samples, 0.02%)</title><rect x="616.3" y="757" width="0.3" height="15.0" fill="rgb(248,9,28)" rx="2" ry="2" />
<text  x="619.32" y="767.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (3 samples, 0.01%)</title><rect x="726.2" y="629" width="0.1" height="15.0" fill="rgb(207,140,37)" rx="2" ry="2" />
<text  x="729.15" y="639.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (31 samples, 0.10%)</title><rect x="936.9" y="693" width="1.2" height="15.0" fill="rgb(220,80,10)" rx="2" ry="2" />
<text  x="939.92" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::deallocate (10 samples, 0.03%)</title><rect x="904.5" y="373" width="0.3" height="15.0" fill="rgb(233,215,27)" rx="2" ry="2" />
<text  x="907.47" y="383.5" ></text>
</g>
<g >
<title>std::make_shared&lt;int, int&gt; (11 samples, 0.03%)</title><rect x="101.5" y="981" width="0.4" height="15.0" fill="rgb(233,172,10)" rx="2" ry="2" />
<text  x="104.51" y="991.5" ></text>
</g>
<g >
<title>operator== (12 samples, 0.04%)</title><rect x="1165.2" y="741" width="0.4" height="15.0" fill="rgb(205,157,26)" rx="2" ry="2" />
<text  x="1168.20" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (15 samples, 0.05%)</title><rect x="113.5" y="981" width="0.5" height="15.0" fill="rgb(252,52,31)" rx="2" ry="2" />
<text  x="116.48" y="991.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustParams (10 samples, 0.03%)</title><rect x="983.7" y="725" width="0.3" height="15.0" fill="rgb(206,195,40)" rx="2" ry="2" />
<text  x="986.67" y="735.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::~function (4 samples, 0.01%)</title><rect x="96.3" y="981" width="0.1" height="15.0" fill="rgb(254,19,22)" rx="2" ry="2" />
<text  x="99.26" y="991.5" ></text>
</g>
<g >
<title>SDLAudioP2 (387 samples, 1.21%)</title><rect x="10.0" y="1013" width="14.3" height="15.0" fill="rgb(242,1,52)" rx="2" ry="2" />
<text  x="13.00" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (47 samples, 0.15%)</title><rect x="797.7" y="357" width="1.7" height="15.0" fill="rgb(250,94,22)" rx="2" ry="2" />
<text  x="800.70" y="367.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (208 samples, 0.65%)</title><rect x="183.7" y="917" width="7.6" height="15.0" fill="rgb(225,198,4)" rx="2" ry="2" />
<text  x="186.66" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_valptr (4 samples, 0.01%)</title><rect x="215.1" y="341" width="0.2" height="15.0" fill="rgb(243,86,4)" rx="2" ry="2" />
<text  x="218.15" y="351.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (149 samples, 0.47%)</title><rect x="194.9" y="661" width="5.5" height="15.0" fill="rgb(209,225,29)" rx="2" ry="2" />
<text  x="197.90" y="671.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (276 samples, 0.86%)</title><rect x="130.1" y="837" width="10.2" height="15.0" fill="rgb(219,29,23)" rx="2" ry="2" />
<text  x="133.07" y="847.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::get (21 samples, 0.07%)</title><rect x="889.4" y="469" width="0.8" height="15.0" fill="rgb(249,24,41)" rx="2" ry="2" />
<text  x="892.43" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::clear (3 samples, 0.01%)</title><rect x="935.6" y="677" width="0.1" height="15.0" fill="rgb(246,87,27)" rx="2" ry="2" />
<text  x="938.59" y="687.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::_Placeholder&lt;1&gt; &gt;::_M_head (4 samples, 0.01%)</title><rect x="922.2" y="565" width="0.1" height="15.0" fill="rgb(239,103,38)" rx="2" ry="2" />
<text  x="925.17" y="575.5" ></text>
</g>
<g >
<title>main (85 samples, 0.27%)</title><rect x="250.3" y="981" width="3.1" height="15.0" fill="rgb(225,144,14)" rx="2" ry="2" />
<text  x="253.29" y="991.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::~function (228 samples, 0.71%)</title><rect x="728.3" y="693" width="8.4" height="15.0" fill="rgb(252,128,23)" rx="2" ry="2" />
<text  x="731.30" y="703.5" ></text>
</g>
<g >
<title>Bitmap::Clear (15 samples, 0.05%)</title><rect x="25.3" y="981" width="0.6" height="15.0" fill="rgb(227,217,1)" rx="2" ry="2" />
<text  x="28.34" y="991.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (8 samples, 0.03%)</title><rect x="161.3" y="501" width="0.3" height="15.0" fill="rgb(243,98,34)" rx="2" ry="2" />
<text  x="164.34" y="511.5" ></text>
</g>
<g >
<title>Scene::MainFunction (208 samples, 0.65%)</title><rect x="183.7" y="965" width="7.6" height="15.0" fill="rgb(235,104,10)" rx="2" ry="2" />
<text  x="186.66" y="975.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (4 samples, 0.01%)</title><rect x="86.0" y="981" width="0.2" height="15.0" fill="rgb(205,144,49)" rx="2" ry="2" />
<text  x="89.02" y="991.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (625 samples, 1.96%)</title><rect x="760.8" y="485" width="23.1" height="15.0" fill="rgb(225,195,4)" rx="2" ry="2" />
<text  x="763.78" y="495.5" >A..</text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (3 samples, 0.01%)</title><rect x="919.6" y="501" width="0.1" height="15.0" fill="rgb(216,152,7)" rx="2" ry="2" />
<text  x="922.59" y="511.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (79 samples, 0.25%)</title><rect x="200.9" y="293" width="2.9" height="15.0" fill="rgb(214,126,31)" rx="2" ry="2" />
<text  x="203.92" y="303.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::operator()&lt;FileRequestResult*, void&gt; (208 samples, 0.65%)</title><rect x="183.7" y="677" width="7.6" height="15.0" fill="rgb(243,135,9)" rx="2" ry="2" />
<text  x="186.66" y="687.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (276 samples, 0.86%)</title><rect x="130.1" y="805" width="10.2" height="15.0" fill="rgb(208,226,6)" rx="2" ry="2" />
<text  x="133.07" y="815.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;2ul, bool, false&gt;::_Head_base&lt;bool&amp;&gt; (7 samples, 0.02%)</title><rect x="818.9" y="421" width="0.2" height="15.0" fill="rgb(231,115,51)" rx="2" ry="2" />
<text  x="821.88" y="431.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (604 samples, 1.89%)</title><rect x="161.3" y="981" width="22.4" height="15.0" fill="rgb(237,75,40)" rx="2" ry="2" />
<text  x="164.34" y="991.5" >G..</text>
</g>
<g >
<title>Tone::Tone (11 samples, 0.03%)</title><rect x="1168.6" y="789" width="0.4" height="15.0" fill="rgb(208,199,38)" rx="2" ry="2" />
<text  x="1171.64" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::end (7 samples, 0.02%)</title><rect x="807.4" y="453" width="0.2" height="15.0" fill="rgb(217,218,11)" rx="2" ry="2" />
<text  x="810.38" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (4 samples, 0.01%)</title><rect x="746.2" y="645" width="0.2" height="15.0" fill="rgb(219,30,39)" rx="2" ry="2" />
<text  x="749.22" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt; (6 samples, 0.02%)</title><rect x="1146.7" y="821" width="0.2" height="15.0" fill="rgb(220,28,5)" rx="2" ry="2" />
<text  x="1149.72" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (3 samples, 0.01%)</title><rect x="48.0" y="981" width="0.1" height="15.0" fill="rgb(253,128,2)" rx="2" ry="2" />
<text  x="51.03" y="991.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (177 samples, 0.55%)</title><rect x="204.5" y="741" width="6.5" height="15.0" fill="rgb(245,202,28)" rx="2" ry="2" />
<text  x="207.47" y="751.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (18 samples, 0.06%)</title><rect x="751.0" y="581" width="0.7" height="15.0" fill="rgb(230,127,31)" rx="2" ry="2" />
<text  x="753.99" y="591.5" ></text>
</g>
<g >
<title>std::map&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, (anonymous namespace)::CacheItem, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (4 samples, 0.01%)</title><rect x="102.5" y="981" width="0.2" height="15.0" fill="rgb(252,139,20)" rx="2" ry="2" />
<text  x="105.50" y="991.5" ></text>
</g>
<g >
<title>Cache::Picture (257 samples, 0.80%)</title><rect x="151.8" y="629" width="9.5" height="15.0" fill="rgb(233,43,19)" rx="2" ry="2" />
<text  x="154.84" y="639.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (8 samples, 0.03%)</title><rect x="173.7" y="549" width="0.3" height="15.0" fill="rgb(214,3,38)" rx="2" ry="2" />
<text  x="176.72" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (66 samples, 0.21%)</title><rect x="664.0" y="661" width="2.4" height="15.0" fill="rgb(224,220,17)" rx="2" ry="2" />
<text  x="666.95" y="671.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (45 samples, 0.14%)</title><rect x="213.9" y="581" width="1.6" height="15.0" fill="rgb(207,92,36)" rx="2" ry="2" />
<text  x="216.85" y="591.5" ></text>
</g>
<g >
<title>operator delete (75 samples, 0.23%)</title><rect x="204.5" y="565" width="2.7" height="15.0" fill="rgb(214,213,9)" rx="2" ry="2" />
<text  x="207.47" y="575.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.01%)</title><rect x="253.8" y="981" width="0.1" height="15.0" fill="rgb(221,39,13)" rx="2" ry="2" />
<text  x="256.77" y="991.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (130 samples, 0.41%)</title><rect x="140.4" y="933" width="4.8" height="15.0" fill="rgb(207,163,23)" rx="2" ry="2" />
<text  x="143.42" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Switch, std::allocator&lt;RPG::Switch&gt; &gt;::size (3 samples, 0.01%)</title><rect x="116.5" y="981" width="0.2" height="15.0" fill="rgb(254,16,25)" rx="2" ry="2" />
<text  x="119.55" y="991.5" ></text>
</g>
<g >
<title>Bitmap::~Bitmap (268 samples, 0.84%)</title><rect x="240.0" y="373" width="9.9" height="15.0" fill="rgb(205,145,29)" rx="2" ry="2" />
<text  x="243.02" y="383.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandEndLoop (66 samples, 0.21%)</title><rect x="609.3" y="757" width="2.5" height="15.0" fill="rgb(241,67,20)" rx="2" ry="2" />
<text  x="612.33" y="767.5" ></text>
</g>
<g >
<title>Player::Update (96 samples, 0.30%)</title><rect x="191.3" y="933" width="3.6" height="15.0" fill="rgb(254,168,34)" rx="2" ry="2" />
<text  x="194.35" y="943.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (119 samples, 0.37%)</title><rect x="179.3" y="549" width="4.4" height="15.0" fill="rgb(248,57,28)" rx="2" ry="2" />
<text  x="182.26" y="559.5" ></text>
</g>
<g >
<title>SDL_JoystickUpdate_REAL (3 samples, 0.01%)</title><rect x="1180.6" y="837" width="0.2" height="15.0" fill="rgb(235,210,45)" rx="2" ry="2" />
<text  x="1183.65" y="847.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (5 samples, 0.02%)</title><rect x="75.6" y="981" width="0.2" height="15.0" fill="rgb(250,105,42)" rx="2" ry="2" />
<text  x="78.64" y="991.5" ></text>
</g>
<g >
<title>Player::Update (776 samples, 2.43%)</title><rect x="221.2" y="901" width="28.7" height="15.0" fill="rgb(246,208,38)" rx="2" ry="2" />
<text  x="224.25" y="911.5" >Pl..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (4 samples, 0.01%)</title><rect x="1101.3" y="757" width="0.1" height="15.0" fill="rgb(206,151,51)" rx="2" ry="2" />
<text  x="1104.27" y="767.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (14 samples, 0.04%)</title><rect x="129.6" y="981" width="0.5" height="15.0" fill="rgb(220,148,32)" rx="2" ry="2" />
<text  x="132.56" y="991.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (66 samples, 0.21%)</title><rect x="628.0" y="725" width="2.4" height="15.0" fill="rgb(252,61,25)" rx="2" ry="2" />
<text  x="630.99" y="735.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_manager (215 samples, 0.67%)</title><rect x="926.2" y="517" width="7.9" height="15.0" fill="rgb(206,48,24)" rx="2" ry="2" />
<text  x="929.20" y="527.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (30 samples, 0.09%)</title><rect x="642.7" y="581" width="1.1" height="15.0" fill="rgb(252,175,44)" rx="2" ry="2" />
<text  x="645.74" y="591.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::swap (30 samples, 0.09%)</title><rect x="917.6" y="469" width="1.1" height="15.0" fill="rgb(215,124,10)" rx="2" ry="2" />
<text  x="920.63" y="479.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~tuple (11 samples, 0.03%)</title><rect x="819.7" y="485" width="0.4" height="15.0" fill="rgb(229,41,37)" rx="2" ry="2" />
<text  x="822.73" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (32 samples, 0.10%)</title><rect x="979.7" y="677" width="1.2" height="15.0" fill="rgb(217,119,1)" rx="2" ry="2" />
<text  x="982.68" y="687.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (276 samples, 0.86%)</title><rect x="130.1" y="789" width="10.2" height="15.0" fill="rgb(208,1,51)" rx="2" ry="2" />
<text  x="133.07" y="799.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (119 samples, 0.37%)</title><rect x="179.3" y="565" width="4.4" height="15.0" fill="rgb(250,162,34)" rx="2" ry="2" />
<text  x="182.26" y="575.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (85 samples, 0.27%)</title><rect x="250.3" y="677" width="3.1" height="15.0" fill="rgb(236,81,14)" rx="2" ry="2" />
<text  x="253.29" y="687.5" ></text>
</g>
<g >
<title>Bitmap::find_format (44 samples, 0.14%)</title><rect x="237.0" y="325" width="1.6" height="15.0" fill="rgb(236,57,29)" rx="2" ry="2" />
<text  x="239.95" y="335.5" ></text>
</g>
<g >
<title>page_fault (6 samples, 0.02%)</title><rect x="148.4" y="421" width="0.2" height="15.0" fill="rgb(248,35,2)" rx="2" ry="2" />
<text  x="151.37" y="431.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::end (9 samples, 0.03%)</title><rect x="608.3" y="709" width="0.3" height="15.0" fill="rgb(231,72,21)" rx="2" ry="2" />
<text  x="611.26" y="719.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (101 samples, 0.32%)</title><rect x="200.7" y="501" width="3.8" height="15.0" fill="rgb(206,48,54)" rx="2" ry="2" />
<text  x="203.74" y="511.5" ></text>
</g>
<g >
<title>Scene::MainFunction (96 samples, 0.30%)</title><rect x="191.3" y="949" width="3.6" height="15.0" fill="rgb(239,75,50)" rx="2" ry="2" />
<text  x="194.35" y="959.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (257 samples, 0.80%)</title><rect x="151.8" y="933" width="9.5" height="15.0" fill="rgb(224,4,4)" rx="2" ry="2" />
<text  x="154.84" y="943.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (14 samples, 0.04%)</title><rect x="129.6" y="933" width="0.5" height="15.0" fill="rgb(225,153,39)" rx="2" ry="2" />
<text  x="132.56" y="943.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (4,445 samples, 13.92%)</title><rect x="757.2" y="517" width="164.2" height="15.0" fill="rgb(218,106,50)" rx="2" ry="2" />
<text  x="760.16" y="527.5" >Game_Picture::OnPictu..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_value (18 samples, 0.06%)</title><rect x="789.2" y="421" width="0.7" height="15.0" fill="rgb(205,47,45)" rx="2" ry="2" />
<text  x="792.24" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, FileRequestResult*&amp;&amp;&gt; (12 samples, 0.04%)</title><rect x="755.5" y="581" width="0.4" height="15.0" fill="rgb(227,187,44)" rx="2" ry="2" />
<text  x="758.46" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::get (6 samples, 0.02%)</title><rect x="738.9" y="661" width="0.2" height="15.0" fill="rgb(249,54,2)" rx="2" ry="2" />
<text  x="741.87" y="671.5" ></text>
</g>
<g >
<title>Player::Run (776 samples, 2.43%)</title><rect x="221.2" y="949" width="28.7" height="15.0" fill="rgb(247,77,39)" rx="2" ry="2" />
<text  x="224.25" y="959.5" >Pl..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.01%)</title><rect x="154.5" y="549" width="0.1" height="15.0" fill="rgb(226,16,43)" rx="2" ry="2" />
<text  x="157.50" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::destroy&lt;Bitmap&gt; (268 samples, 0.84%)</title><rect x="240.0" y="405" width="9.9" height="15.0" fill="rgb(244,218,31)" rx="2" ry="2" />
<text  x="243.02" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt;::operator()&lt;int const*&gt; (4 samples, 0.01%)</title><rect x="54.8" y="981" width="0.1" height="15.0" fill="rgb(252,198,17)" rx="2" ry="2" />
<text  x="57.75" y="991.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (130 samples, 0.41%)</title><rect x="140.4" y="869" width="4.8" height="15.0" fill="rgb(210,176,30)" rx="2" ry="2" />
<text  x="143.42" y="879.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (4 samples, 0.01%)</title><rect x="140.3" y="645" width="0.1" height="15.0" fill="rgb(217,215,14)" rx="2" ry="2" />
<text  x="143.27" y="655.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (9 samples, 0.03%)</title><rect x="1162.1" y="789" width="0.3" height="15.0" fill="rgb(205,60,45)" rx="2" ry="2" />
<text  x="1165.06" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (23 samples, 0.07%)</title><rect x="971.2" y="725" width="0.9" height="15.0" fill="rgb(214,171,36)" rx="2" ry="2" />
<text  x="974.21" y="735.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (96 samples, 0.30%)</title><rect x="191.3" y="677" width="3.6" height="15.0" fill="rgb(211,188,46)" rx="2" ry="2" />
<text  x="194.35" y="687.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (8 samples, 0.03%)</title><rect x="1143.7" y="741" width="0.3" height="15.0" fill="rgb(236,68,34)" rx="2" ry="2" />
<text  x="1146.69" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (39 samples, 0.12%)</title><rect x="1048.5" y="757" width="1.4" height="15.0" fill="rgb(249,212,45)" rx="2" ry="2" />
<text  x="1051.49" y="767.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (604 samples, 1.89%)</title><rect x="161.3" y="837" width="22.4" height="15.0" fill="rgb(249,189,50)" rx="2" ry="2" />
<text  x="164.34" y="847.5" >F..</text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (257 samples, 0.80%)</title><rect x="151.8" y="901" width="9.5" height="15.0" fill="rgb(219,212,17)" rx="2" ry="2" />
<text  x="154.84" y="911.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Game_Picture*, false&gt;::_M_head (6 samples, 0.02%)</title><rect x="64.7" y="981" width="0.3" height="15.0" fill="rgb(223,108,37)" rx="2" ry="2" />
<text  x="67.73" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (11 samples, 0.03%)</title><rect x="610.8" y="725" width="0.4" height="15.0" fill="rgb(248,153,46)" rx="2" ry="2" />
<text  x="613.81" y="735.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (776 samples, 2.43%)</title><rect x="221.2" y="725" width="28.7" height="15.0" fill="rgb(251,107,10)" rx="2" ry="2" />
<text  x="224.25" y="735.5" >Ga..</text>
</g>
<g >
<title>Game_Interpreter::SkipToNextConditional (834 samples, 2.61%)</title><rect x="482.4" y="741" width="30.8" height="15.0" fill="rgb(228,191,12)" rx="2" ry="2" />
<text  x="485.42" y="751.5" >Ga..</text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (96 samples, 0.30%)</title><rect x="191.3" y="821" width="3.6" height="15.0" fill="rgb(237,19,21)" rx="2" ry="2" />
<text  x="194.35" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (222 samples, 0.70%)</title><rect x="1060.6" y="741" width="8.2" height="15.0" fill="rgb(221,112,17)" rx="2" ry="2" />
<text  x="1063.58" y="751.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (3 samples, 0.01%)</title><rect x="919.5" y="469" width="0.1" height="15.0" fill="rgb(245,13,4)" rx="2" ry="2" />
<text  x="922.47" y="479.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (92 samples, 0.29%)</title><rect x="207.2" y="517" width="3.4" height="15.0" fill="rgb(207,52,19)" rx="2" ry="2" />
<text  x="210.24" y="527.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (190 samples, 0.60%)</title><rect x="184.3" y="325" width="7.0" height="15.0" fill="rgb(236,135,23)" rx="2" ry="2" />
<text  x="187.33" y="335.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, bool&gt;::_Tuple_impl&lt;bool&amp;&gt; (14 samples, 0.04%)</title><rect x="818.7" y="437" width="0.5" height="15.0" fill="rgb(226,92,30)" rx="2" ry="2" />
<text  x="821.73" y="447.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;int&gt;::shared_ptr&lt;std::allocator&lt;int&gt;, int&gt; (318 samples, 1.00%)</title><rect x="693.0" y="645" width="11.8" height="15.0" fill="rgb(250,206,13)" rx="2" ry="2" />
<text  x="696.00" y="655.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (4 samples, 0.01%)</title><rect x="666.0" y="501" width="0.2" height="15.0" fill="rgb(212,28,8)" rx="2" ry="2" />
<text  x="669.02" y="511.5" ></text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;Bitmap&gt;, true&gt;::_S_get (5 samples, 0.02%)</title><rect x="73.2" y="981" width="0.1" height="15.0" fill="rgb(226,140,23)" rx="2" ry="2" />
<text  x="76.16" y="991.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (4 samples, 0.01%)</title><rect x="666.0" y="453" width="0.2" height="15.0" fill="rgb(254,39,25)" rx="2" ry="2" />
<text  x="669.02" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (135 samples, 0.42%)</title><rect x="639.2" y="645" width="5.0" height="15.0" fill="rgb(235,29,44)" rx="2" ry="2" />
<text  x="642.19" y="655.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (4,479 samples, 14.03%)</title><rect x="756.2" y="581" width="165.5" height="15.0" fill="rgb(254,134,43)" rx="2" ry="2" />
<text  x="759.20" y="591.5" >std::__invoke_impl&lt;vo..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char32_t&gt; &gt;::allocate (3 samples, 0.01%)</title><rect x="986.0" y="629" width="0.1" height="15.0" fill="rgb(212,119,2)" rx="2" ry="2" />
<text  x="989.00" y="639.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (8 samples, 0.03%)</title><rect x="245.0" y="261" width="0.3" height="15.0" fill="rgb(239,25,37)" rx="2" ry="2" />
<text  x="247.97" y="271.5" ></text>
</g>
<g >
<title>std::__distance&lt;char*&gt; (3 samples, 0.01%)</title><rect x="765.3" y="405" width="0.1" height="15.0" fill="rgb(216,56,13)" rx="2" ry="2" />
<text  x="768.25" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::size (32 samples, 0.10%)</title><rect x="264.3" y="773" width="1.1" height="15.0" fill="rgb(240,44,37)" rx="2" ry="2" />
<text  x="267.26" y="783.5" ></text>
</g>
<g >
<title>find_vma (4 samples, 0.01%)</title><rect x="201.6" y="197" width="0.2" height="15.0" fill="rgb(212,187,4)" rx="2" ry="2" />
<text  x="204.62" y="207.5" ></text>
</g>
<g >
<title>std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;::__call&lt;void, FileRequestResult*&amp;&amp;, 0ul, 1ul&gt; (96 samples, 0.30%)</title><rect x="191.3" y="645" width="3.6" height="15.0" fill="rgb(231,146,13)" rx="2" ry="2" />
<text  x="194.35" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (16 samples, 0.05%)</title><rect x="479.0" y="661" width="0.6" height="15.0" fill="rgb(211,69,38)" rx="2" ry="2" />
<text  x="482.02" y="671.5" ></text>
</g>
<g >
<title>pixman_image_unref (10 samples, 0.03%)</title><rect x="210.6" y="453" width="0.4" height="15.0" fill="rgb(242,181,2)" rx="2" ry="2" />
<text  x="213.64" y="463.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (208 samples, 0.65%)</title><rect x="183.7" y="741" width="7.6" height="15.0" fill="rgb(218,113,36)" rx="2" ry="2" />
<text  x="186.66" y="751.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (5 samples, 0.02%)</title><rect x="986.6" y="725" width="0.1" height="15.0" fill="rgb(241,121,8)" rx="2" ry="2" />
<text  x="989.55" y="735.5" ></text>
</g>
<g >
<title>apparmor_file_permission (6 samples, 0.02%)</title><rect x="23.0" y="885" width="0.2" height="15.0" fill="rgb(252,158,8)" rx="2" ry="2" />
<text  x="26.01" y="895.5" ></text>
</g>
<g >
<title>Scene_Map::AsyncNext&lt;Scene_Map::UpdateStage1(MapUpdateAsyncContext)::{lambda()#2}&gt; (3 samples, 0.01%)</title><rect x="1178.9" y="853" width="0.2" height="15.0" fill="rgb(240,95,23)" rx="2" ry="2" />
<text  x="1181.95" y="863.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (8 samples, 0.03%)</title><rect x="814.5" y="405" width="0.3" height="15.0" fill="rgb(220,197,11)" rx="2" ry="2" />
<text  x="817.52" y="415.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (104 samples, 0.33%)</title><rect x="246.1" y="325" width="3.8" height="15.0" fill="rgb(213,83,21)" rx="2" ry="2" />
<text  x="249.08" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::size (7 samples, 0.02%)</title><rect x="120.2" y="981" width="0.2" height="15.0" fill="rgb(213,165,50)" rx="2" ry="2" />
<text  x="123.17" y="991.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (12 samples, 0.04%)</title><rect x="194.5" y="453" width="0.4" height="15.0" fill="rgb(240,111,47)" rx="2" ry="2" />
<text  x="197.45" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::destroy&lt;Bitmap&gt; (50 samples, 0.16%)</title><rect x="198.6" y="469" width="1.8" height="15.0" fill="rgb(213,219,10)" rx="2" ry="2" />
<text  x="201.55" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (458 samples, 1.43%)</title><rect x="394.6" y="757" width="17.0" height="15.0" fill="rgb(211,18,13)" rx="2" ry="2" />
<text  x="397.65" y="767.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (22 samples, 0.07%)</title><rect x="1181.5" y="645" width="0.8" height="15.0" fill="rgb(228,206,26)" rx="2" ry="2" />
<text  x="1184.54" y="655.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (5 samples, 0.02%)</title><rect x="706.4" y="581" width="0.2" height="15.0" fill="rgb(215,187,27)" rx="2" ry="2" />
<text  x="709.38" y="591.5" ></text>
</g>
<g >
<title>Game_Picture::ShowParams::ShowParams (20 samples, 0.06%)</title><rect x="976.5" y="741" width="0.7" height="15.0" fill="rgb(252,127,19)" rx="2" ry="2" />
<text  x="979.46" y="751.5" ></text>
</g>
<g >
<title>Player::IsRPG2k3 (15 samples, 0.05%)</title><rect x="592.8" y="741" width="0.6" height="15.0" fill="rgb(224,69,10)" rx="2" ry="2" />
<text  x="595.85" y="751.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.04%)</title><rect x="129.6" y="501" width="0.5" height="15.0" fill="rgb(239,152,1)" rx="2" ry="2" />
<text  x="132.56" y="511.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (9 samples, 0.03%)</title><rect x="815.0" y="485" width="0.3" height="15.0" fill="rgb(240,51,23)" rx="2" ry="2" />
<text  x="818.00" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (47 samples, 0.15%)</title><rect x="744.1" y="613" width="1.7" height="15.0" fill="rgb(241,215,5)" rx="2" ry="2" />
<text  x="747.08" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (85 samples, 0.27%)</title><rect x="495.4" y="709" width="3.1" height="15.0" fill="rgb(248,37,48)" rx="2" ry="2" />
<text  x="498.39" y="719.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (3 samples, 0.01%)</title><rect x="194.3" y="357" width="0.2" height="15.0" fill="rgb(243,112,28)" rx="2" ry="2" />
<text  x="197.34" y="367.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (15 samples, 0.05%)</title><rect x="97.2" y="981" width="0.5" height="15.0" fill="rgb(248,191,7)" rx="2" ry="2" />
<text  x="100.18" y="991.5" ></text>
</g>
<g >
<title>Utils::EncodeUTF (10 samples, 0.03%)</title><rect x="985.6" y="725" width="0.3" height="15.0" fill="rgb(205,158,23)" rx="2" ry="2" />
<text  x="988.55" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::get (12 samples, 0.04%)</title><rect x="966.5" y="693" width="0.5" height="15.0" fill="rgb(254,43,51)" rx="2" ry="2" />
<text  x="969.52" y="703.5" ></text>
</g>
<g >
<title>pixman_image_create_bits (4 samples, 0.01%)</title><rect x="866.3" y="309" width="0.2" height="15.0" fill="rgb(217,180,36)" rx="2" ry="2" />
<text  x="869.33" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (5 samples, 0.02%)</title><rect x="126.3" y="981" width="0.2" height="15.0" fill="rgb(249,75,5)" rx="2" ry="2" />
<text  x="129.30" y="991.5" ></text>
</g>
<g >
<title>__GI_madvise (5 samples, 0.02%)</title><rect x="666.0" y="581" width="0.2" height="15.0" fill="rgb(206,100,15)" rx="2" ry="2" />
<text  x="669.02" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (45 samples, 0.14%)</title><rect x="251.8" y="293" width="1.6" height="15.0" fill="rgb(221,147,5)" rx="2" ry="2" />
<text  x="254.77" y="303.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (115 samples, 0.36%)</title><rect x="989.9" y="677" width="4.3" height="15.0" fill="rgb(243,101,14)" rx="2" ry="2" />
<text  x="992.91" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (3 samples, 0.01%)</title><rect x="616.2" y="741" width="0.1" height="15.0" fill="rgb(243,15,22)" rx="2" ry="2" />
<text  x="619.17" y="751.5" ></text>
</g>
<g >
<title>std::forward&lt;int&gt; (3 samples, 0.01%)</title><rect x="692.9" y="645" width="0.1" height="15.0" fill="rgb(254,157,41)" rx="2" ry="2" />
<text  x="695.89" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (5 samples, 0.02%)</title><rect x="619.3" y="741" width="0.2" height="15.0" fill="rgb(223,179,2)" rx="2" ry="2" />
<text  x="622.35" y="751.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;2ul, bool&gt; (8 samples, 0.03%)</title><rect x="809.3" y="357" width="0.3" height="15.0" fill="rgb(246,163,29)" rx="2" ry="2" />
<text  x="812.31" y="367.5" ></text>
</g>
<g >
<title>std::_Bit_const_iterator::_Bit_const_iterator (8 samples, 0.03%)</title><rect x="265.2" y="741" width="0.2" height="15.0" fill="rgb(238,185,27)" rx="2" ry="2" />
<text  x="268.15" y="751.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (38 samples, 0.12%)</title><rect x="250.3" y="357" width="1.4" height="15.0" fill="rgb(225,99,34)" rx="2" ry="2" />
<text  x="253.29" y="367.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (4 samples, 0.01%)</title><rect x="889.9" y="421" width="0.1" height="15.0" fill="rgb(251,209,23)" rx="2" ry="2" />
<text  x="892.87" y="431.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (34 samples, 0.11%)</title><rect x="201.8" y="133" width="1.3" height="15.0" fill="rgb(214,194,3)" rx="2" ry="2" />
<text  x="204.81" y="143.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (10 samples, 0.03%)</title><rect x="1178.0" y="789" width="0.4" height="15.0" fill="rgb(244,32,32)" rx="2" ry="2" />
<text  x="1181.03" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_S_value (16 samples, 0.05%)</title><rect x="214.6" y="341" width="0.5" height="15.0" fill="rgb(246,9,49)" rx="2" ry="2" />
<text  x="217.56" y="351.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (14 samples, 0.04%)</title><rect x="129.6" y="597" width="0.5" height="15.0" fill="rgb(215,88,8)" rx="2" ry="2" />
<text  x="132.56" y="607.5" ></text>
</g>
<g >
<title>vma_merge (3 samples, 0.01%)</title><rect x="135.2" y="293" width="0.2" height="15.0" fill="rgb(242,26,30)" rx="2" ry="2" />
<text  x="138.25" y="303.5" ></text>
</g>
<g >
<title>Game_Picture::Show (14 samples, 0.04%)</title><rect x="129.6" y="901" width="0.5" height="15.0" fill="rgb(242,38,42)" rx="2" ry="2" />
<text  x="132.56" y="911.5" ></text>
</g>
<g >
<title>Bitmap::height (7 samples, 0.02%)</title><rect x="1157.0" y="773" width="0.3" height="15.0" fill="rgb(232,178,25)" rx="2" ry="2" />
<text  x="1160.03" y="783.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (96 samples, 0.30%)</title><rect x="191.3" y="757" width="3.6" height="15.0" fill="rgb(214,112,40)" rx="2" ry="2" />
<text  x="194.35" y="767.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (604 samples, 1.89%)</title><rect x="161.3" y="805" width="22.4" height="15.0" fill="rgb(229,108,49)" rx="2" ry="2" />
<text  x="164.34" y="815.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_valptr (9 samples, 0.03%)</title><rect x="785.0" y="469" width="0.3" height="15.0" fill="rgb(224,192,8)" rx="2" ry="2" />
<text  x="787.99" y="479.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (96 samples, 0.30%)</title><rect x="191.3" y="789" width="3.6" height="15.0" fill="rgb(235,167,37)" rx="2" ry="2" />
<text  x="194.35" y="799.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (11 samples, 0.03%)</title><rect x="665.8" y="597" width="0.4" height="15.0" fill="rgb(209,109,45)" rx="2" ry="2" />
<text  x="668.84" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (3 samples, 0.01%)</title><rect x="955.2" y="677" width="0.2" height="15.0" fill="rgb(215,196,35)" rx="2" ry="2" />
<text  x="958.25" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::begin (3 samples, 0.01%)</title><rect x="116.8" y="981" width="0.1" height="15.0" fill="rgb(217,39,30)" rx="2" ry="2" />
<text  x="119.81" y="991.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::destroy&lt;Bitmap&gt; (47 samples, 0.15%)</title><rect x="251.7" y="421" width="1.7" height="15.0" fill="rgb(223,23,7)" rx="2" ry="2" />
<text  x="254.70" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_M_end (9 samples, 0.03%)</title><rect x="68.5" y="981" width="0.3" height="15.0" fill="rgb(238,178,11)" rx="2" ry="2" />
<text  x="71.50" y="991.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::~__allocated_ptr (39 samples, 0.12%)</title><rect x="238.6" y="405" width="1.4" height="15.0" fill="rgb(205,185,30)" rx="2" ry="2" />
<text  x="241.58" y="415.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (18 samples, 0.06%)</title><rect x="244.6" y="293" width="0.7" height="15.0" fill="rgb(218,64,44)" rx="2" ry="2" />
<text  x="247.64" y="303.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (3 samples, 0.01%)</title><rect x="1182.9" y="997" width="0.1" height="15.0" fill="rgb(206,200,18)" rx="2" ry="2" />
<text  x="1185.87" y="1007.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (24 samples, 0.08%)</title><rect x="1181.5" y="741" width="0.8" height="15.0" fill="rgb(205,97,40)" rx="2" ry="2" />
<text  x="1184.46" y="751.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (179 samples, 0.56%)</title><rect x="145.2" y="693" width="6.6" height="15.0" fill="rgb(247,215,15)" rx="2" ry="2" />
<text  x="148.23" y="703.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (268 samples, 0.84%)</title><rect x="859.3" y="405" width="10.0" height="15.0" fill="rgb(245,85,26)" rx="2" ry="2" />
<text  x="862.35" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create@plt (3 samples, 0.01%)</title><rect x="751.9" y="629" width="0.1" height="15.0" fill="rgb(209,177,9)" rx="2" ry="2" />
<text  x="754.87" y="639.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (86 samples, 0.27%)</title><rect x="640.9" y="613" width="3.2" height="15.0" fill="rgb(205,63,3)" rx="2" ry="2" />
<text  x="643.89" y="623.5" ></text>
</g>
<g >
<title>Bitmap::~Bitmap (50 samples, 0.16%)</title><rect x="198.6" y="453" width="1.8" height="15.0" fill="rgb(233,171,39)" rx="2" ry="2" />
<text  x="201.55" y="463.5" ></text>
</g>
<g >
<title>Game_Switches_Class::Get (91 samples, 0.29%)</title><rect x="262.1" y="789" width="3.3" height="15.0" fill="rgb(218,110,48)" rx="2" ry="2" />
<text  x="265.08" y="799.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (45 samples, 0.14%)</title><rect x="213.9" y="549" width="1.6" height="15.0" fill="rgb(233,215,52)" rx="2" ry="2" />
<text  x="216.85" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::_M_ptr (20 samples, 0.06%)</title><rect x="1143.2" y="773" width="0.8" height="15.0" fill="rgb(213,129,44)" rx="2" ry="2" />
<text  x="1146.25" y="783.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;int&gt;::operator= (344 samples, 1.08%)</title><rect x="938.8" y="709" width="12.8" height="15.0" fill="rgb(220,90,39)" rx="2" ry="2" />
<text  x="941.84" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_S_key (44 samples, 0.14%)</title><rect x="213.9" y="357" width="1.6" height="15.0" fill="rgb(221,13,27)" rx="2" ry="2" />
<text  x="216.85" y="367.5" ></text>
</g>
<g >
<title>Bitmap::Init (4 samples, 0.01%)</title><rect x="27.0" y="981" width="0.1" height="15.0" fill="rgb(232,202,51)" rx="2" ry="2" />
<text  x="29.96" y="991.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::destroy&lt;Bitmap&gt; (4 samples, 0.01%)</title><rect x="91.7" y="981" width="0.2" height="15.0" fill="rgb(244,26,27)" rx="2" ry="2" />
<text  x="94.75" y="991.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandErasePicture (3 samples, 0.01%)</title><rect x="611.8" y="757" width="0.1" height="15.0" fill="rgb(231,42,27)" rx="2" ry="2" />
<text  x="614.77" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (10 samples, 0.03%)</title><rect x="112.3" y="981" width="0.4" height="15.0" fill="rgb(227,82,39)" rx="2" ry="2" />
<text  x="115.30" y="991.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (83 samples, 0.26%)</title><rect x="151.8" y="597" width="3.1" height="15.0" fill="rgb(224,19,7)" rx="2" ry="2" />
<text  x="154.84" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (680 samples, 2.13%)</title><rect x="786.7" y="469" width="25.1" height="15.0" fill="rgb(205,18,24)" rx="2" ry="2" />
<text  x="789.69" y="479.5" >s..</text>
</g>
<g >
<title>__vfs_read (10 samples, 0.03%)</title><rect x="22.6" y="917" width="0.4" height="15.0" fill="rgb(246,214,15)" rx="2" ry="2" />
<text  x="25.60" y="927.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (2,021 samples, 6.33%)</title><rect x="820.7" y="501" width="74.6" height="15.0" fill="rgb(213,104,18)" rx="2" ry="2" />
<text  x="823.65" y="511.5" >Game_Pic..</text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (6 samples, 0.02%)</title><rect x="998.5" y="709" width="0.2" height="15.0" fill="rgb(236,115,25)" rx="2" ry="2" />
<text  x="1001.53" y="719.5" ></text>
</g>
<g >
<title>__wake_up_locked_key (10 samples, 0.03%)</title><rect x="23.4" y="885" width="0.3" height="15.0" fill="rgb(205,60,30)" rx="2" ry="2" />
<text  x="26.38" y="895.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (5 samples, 0.02%)</title><rect x="210.8" y="165" width="0.2" height="15.0" fill="rgb(216,223,16)" rx="2" ry="2" />
<text  x="213.79" y="175.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_memcmp (4 samples, 0.01%)</title><rect x="58.9" y="981" width="0.2" height="15.0" fill="rgb(226,144,40)" rx="2" ry="2" />
<text  x="61.93" y="991.5" ></text>
</g>
<g >
<title>operator new (139 samples, 0.44%)</title><rect x="720.6" y="645" width="5.2" height="15.0" fill="rgb(248,70,39)" rx="2" ry="2" />
<text  x="723.65" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (206 samples, 0.65%)</title><rect x="1086.3" y="741" width="7.6" height="15.0" fill="rgb(249,78,12)" rx="2" ry="2" />
<text  x="1089.30" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string@plt (5 samples, 0.02%)</title><rect x="647.5" y="661" width="0.2" height="15.0" fill="rgb(225,60,7)" rx="2" ry="2" />
<text  x="650.47" y="671.5" ></text>
</g>
<g >
<title>malloc (29 samples, 0.09%)</title><rect x="137.6" y="501" width="1.1" height="15.0" fill="rgb(208,32,46)" rx="2" ry="2" />
<text  x="140.61" y="511.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (15 samples, 0.05%)</title><rect x="865.8" y="309" width="0.5" height="15.0" fill="rgb(231,101,0)" rx="2" ry="2" />
<text  x="868.78" y="319.5" ></text>
</g>
<g >
<title>Tone::Tone (10 samples, 0.03%)</title><rect x="877.1" y="469" width="0.4" height="15.0" fill="rgb(214,99,23)" rx="2" ry="2" />
<text  x="880.12" y="479.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (179 samples, 0.56%)</title><rect x="145.2" y="581" width="6.6" height="15.0" fill="rgb(237,61,35)" rx="2" ry="2" />
<text  x="148.23" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (33 samples, 0.10%)</title><rect x="717.7" y="581" width="1.2" height="15.0" fill="rgb(212,12,40)" rx="2" ry="2" />
<text  x="720.65" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (4 samples, 0.01%)</title><rect x="607.2" y="677" width="0.2" height="15.0" fill="rgb(243,153,31)" rx="2" ry="2" />
<text  x="610.23" y="687.5" ></text>
</g>
<g >
<title>Game_Map::Update (85 samples, 0.27%)</title><rect x="250.3" y="869" width="3.1" height="15.0" fill="rgb(242,84,45)" rx="2" ry="2" />
<text  x="253.29" y="879.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (6 samples, 0.02%)</title><rect x="816.7" y="421" width="0.3" height="15.0" fill="rgb(212,116,38)" rx="2" ry="2" />
<text  x="819.73" y="431.5" ></text>
</g>
<g >
<title>std::__find_if&lt;int const*, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (90 samples, 0.28%)</title><rect x="504.6" y="693" width="3.3" height="15.0" fill="rgb(210,107,34)" rx="2" ry="2" />
<text  x="507.60" y="703.5" ></text>
</g>
<g >
<title>Bitmap::GetTransparent (3 samples, 0.01%)</title><rect x="827.9" y="453" width="0.1" height="15.0" fill="rgb(231,42,40)" rx="2" ry="2" />
<text  x="830.86" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_ptr (11 samples, 0.03%)</title><rect x="789.5" y="389" width="0.4" height="15.0" fill="rgb(244,17,38)" rx="2" ry="2" />
<text  x="792.50" y="399.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (179 samples, 0.56%)</title><rect x="145.2" y="837" width="6.6" height="15.0" fill="rgb(246,104,50)" rx="2" ry="2" />
<text  x="148.23" y="847.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (208 samples, 0.65%)</title><rect x="183.7" y="853" width="7.6" height="15.0" fill="rgb(225,50,40)" rx="2" ry="2" />
<text  x="186.66" y="863.5" ></text>
</g>
<g >
<title>FileRequestAsync::Bind&lt;Game_Picture&gt; (1,466 samples, 4.59%)</title><rect x="683.1" y="709" width="54.2" height="15.0" fill="rgb(246,28,44)" rx="2" ry="2" />
<text  x="686.10" y="719.5" >FileR..</text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (11 samples, 0.03%)</title><rect x="607.0" y="693" width="0.4" height="15.0" fill="rgb(224,96,16)" rx="2" ry="2" />
<text  x="609.97" y="703.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::~__weak_ptr (5 samples, 0.02%)</title><rect x="705.3" y="645" width="0.2" height="15.0" fill="rgb(219,163,50)" rx="2" ry="2" />
<text  x="708.31" y="655.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator bool (5 samples, 0.02%)</title><rect x="898.4" y="485" width="0.2" height="15.0" fill="rgb(239,50,24)" rx="2" ry="2" />
<text  x="901.37" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (57 samples, 0.18%)</title><rect x="587.5" y="725" width="2.1" height="15.0" fill="rgb(240,5,44)" rx="2" ry="2" />
<text  x="590.45" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (7 samples, 0.02%)</title><rect x="604.7" y="677" width="0.2" height="15.0" fill="rgb(248,87,20)" rx="2" ry="2" />
<text  x="607.68" y="687.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (257 samples, 0.80%)</title><rect x="151.8" y="789" width="9.5" height="15.0" fill="rgb(248,202,8)" rx="2" ry="2" />
<text  x="154.84" y="799.5" ></text>
</g>
<g >
<title>down_read_trylock (3 samples, 0.01%)</title><rect x="227.9" y="389" width="0.1" height="15.0" fill="rgb(242,137,18)" rx="2" ry="2" />
<text  x="230.86" y="399.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (66 samples, 0.21%)</title><rect x="749.3" y="597" width="2.4" height="15.0" fill="rgb(252,50,13)" rx="2" ry="2" />
<text  x="752.25" y="607.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (3 samples, 0.01%)</title><rect x="134.7" y="309" width="0.1" height="15.0" fill="rgb(252,121,49)" rx="2" ry="2" />
<text  x="137.73" y="319.5" ></text>
</g>
<g >
<title>std::swap&lt;int*&gt; (20 samples, 0.06%)</title><rect x="940.3" y="661" width="0.7" height="15.0" fill="rgb(228,182,45)" rx="2" ry="2" />
<text  x="943.28" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (12 samples, 0.04%)</title><rect x="194.5" y="341" width="0.4" height="15.0" fill="rgb(222,220,54)" rx="2" ry="2" />
<text  x="197.45" y="351.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (29 samples, 0.09%)</title><rect x="137.6" y="469" width="1.1" height="15.0" fill="rgb(212,191,3)" rx="2" ry="2" />
<text  x="140.61" y="479.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_weak_release (9 samples, 0.03%)</title><rect x="70.8" y="981" width="0.3" height="15.0" fill="rgb(213,145,44)" rx="2" ry="2" />
<text  x="73.79" y="991.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (110 samples, 0.34%)</title><rect x="200.4" y="629" width="4.1" height="15.0" fill="rgb(253,130,54)" rx="2" ry="2" />
<text  x="203.40" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (13 samples, 0.04%)</title><rect x="51.9" y="981" width="0.5" height="15.0" fill="rgb(213,177,42)" rx="2" ry="2" />
<text  x="54.95" y="991.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (190 samples, 0.60%)</title><rect x="184.3" y="389" width="7.0" height="15.0" fill="rgb(236,84,41)" rx="2" ry="2" />
<text  x="187.33" y="399.5" ></text>
</g>
<g >
<title>malloc (58 samples, 0.18%)</title><rect x="141.1" y="453" width="2.2" height="15.0" fill="rgb(247,10,47)" rx="2" ry="2" />
<text  x="144.12" y="463.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::operator[] (50 samples, 0.16%)</title><rect x="196.7" y="389" width="1.8" height="15.0" fill="rgb(222,114,30)" rx="2" ry="2" />
<text  x="199.67" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;Bitmap&gt;::~allocator (5 samples, 0.02%)</title><rect x="869.0" y="389" width="0.2" height="15.0" fill="rgb(244,120,52)" rx="2" ry="2" />
<text  x="871.99" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_value (3 samples, 0.01%)</title><rect x="125.1" y="981" width="0.1" height="15.0" fill="rgb(233,135,46)" rx="2" ry="2" />
<text  x="128.12" y="991.5" ></text>
</g>
<g >
<title>DynamicFormat::code_alpha (20 samples, 0.06%)</title><rect x="237.8" y="309" width="0.7" height="15.0" fill="rgb(235,149,13)" rx="2" ry="2" />
<text  x="240.77" y="319.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (3 samples, 0.01%)</title><rect x="968.0" y="661" width="0.1" height="15.0" fill="rgb(211,190,32)" rx="2" ry="2" />
<text  x="971.00" y="671.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (5 samples, 0.02%)</title><rect x="854.6" y="405" width="0.2" height="15.0" fill="rgb(231,172,17)" rx="2" ry="2" />
<text  x="857.58" y="415.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void (Game_Picture::* const&amp;)(FileRequestResult*), Game_Picture*&amp;, FileRequestResult*&gt; (776 samples, 2.43%)</title><rect x="221.2" y="533" width="28.7" height="15.0" fill="rgb(213,90,21)" rx="2" ry="2" />
<text  x="224.25" y="543.5" >st..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (8 samples, 0.03%)</title><rect x="805.9" y="357" width="0.3" height="15.0" fill="rgb(232,28,18)" rx="2" ry="2" />
<text  x="808.94" y="367.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (5 samples, 0.02%)</title><rect x="1152.0" y="773" width="0.2" height="15.0" fill="rgb(215,217,20)" rx="2" ry="2" />
<text  x="1155.05" y="783.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (96 samples, 0.30%)</title><rect x="1127.2" y="773" width="3.6" height="15.0" fill="rgb(209,171,20)" rx="2" ry="2" />
<text  x="1130.21" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::max_size (7 samples, 0.02%)</title><rect x="56.0" y="981" width="0.2" height="15.0" fill="rgb(216,72,2)" rx="2" ry="2" />
<text  x="58.97" y="991.5" ></text>
</g>
<g >
<title>Game_Map::Update (257 samples, 0.80%)</title><rect x="151.8" y="981" width="9.5" height="15.0" fill="rgb(248,105,14)" rx="2" ry="2" />
<text  x="154.84" y="991.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (85 samples, 0.27%)</title><rect x="250.3" y="581" width="3.1" height="15.0" fill="rgb(228,55,54)" rx="2" ry="2" />
<text  x="253.29" y="591.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (161 samples, 0.50%)</title><rect x="777.9" y="469" width="6.0" height="15.0" fill="rgb(206,176,34)" rx="2" ry="2" />
<text  x="780.93" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (9 samples, 0.03%)</title><rect x="810.5" y="373" width="0.4" height="15.0" fill="rgb(244,143,51)" rx="2" ry="2" />
<text  x="813.53" y="383.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (9 samples, 0.03%)</title><rect x="1169.9" y="741" width="0.3" height="15.0" fill="rgb(252,47,25)" rx="2" ry="2" />
<text  x="1172.90" y="751.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (6 samples, 0.02%)</title><rect x="889.0" y="453" width="0.2" height="15.0" fill="rgb(221,64,17)" rx="2" ry="2" />
<text  x="891.99" y="463.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.03%)</title><rect x="253.4" y="981" width="0.4" height="15.0" fill="rgb(213,192,51)" rx="2" ry="2" />
<text  x="256.44" y="991.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (91 samples, 0.29%)</title><rect x="235.2" y="373" width="3.4" height="15.0" fill="rgb(224,221,0)" rx="2" ry="2" />
<text  x="238.22" y="383.5" ></text>
</g>
<g >
<title>std::move&lt;std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;&amp;&gt; (3 samples, 0.01%)</title><rect x="951.3" y="677" width="0.1" height="15.0" fill="rgb(241,140,27)" rx="2" ry="2" />
<text  x="954.33" y="687.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (604 samples, 1.89%)</title><rect x="161.3" y="725" width="22.4" height="15.0" fill="rgb(223,6,53)" rx="2" ry="2" />
<text  x="164.34" y="735.5" >s..</text>
</g>
<g >
<title>Input::Update (22 samples, 0.07%)</title><rect x="259.1" y="885" width="0.8" height="15.0" fill="rgb(241,115,50)" rx="2" ry="2" />
<text  x="262.09" y="895.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (47 samples, 0.15%)</title><rect x="235.2" y="309" width="1.8" height="15.0" fill="rgb(211,225,23)" rx="2" ry="2" />
<text  x="238.22" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (4 samples, 0.01%)</title><rect x="154.5" y="565" width="0.1" height="15.0" fill="rgb(222,77,6)" rx="2" ry="2" />
<text  x="157.50" y="575.5" ></text>
</g>
<g >
<title>ttwu_do_activate (5 samples, 0.02%)</title><rect x="23.5" y="805" width="0.2" height="15.0" fill="rgb(205,148,31)" rx="2" ry="2" />
<text  x="26.49" y="815.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (3 samples, 0.01%)</title><rect x="1180.4" y="837" width="0.1" height="15.0" fill="rgb(234,1,24)" rx="2" ry="2" />
<text  x="1183.35" y="847.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, FileRequestResult*&amp;&amp;&gt; (4 samples, 0.01%)</title><rect x="755.8" y="549" width="0.1" height="15.0" fill="rgb(214,128,49)" rx="2" ry="2" />
<text  x="758.76" y="559.5" ></text>
</g>
<g >
<title>Bitmap::find_format (54 samples, 0.17%)</title><rect x="196.5" y="405" width="2.0" height="15.0" fill="rgb(215,219,3)" rx="2" ry="2" />
<text  x="199.52" y="415.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.03%)</title><rect x="984.6" y="613" width="0.4" height="15.0" fill="rgb(246,210,43)" rx="2" ry="2" />
<text  x="987.63" y="623.5" ></text>
</g>
<g >
<title>std::_Mem_fn_base&lt;void (Game_Picture::*)(FileRequestResult*), true&gt;::operator()&lt;Game_Picture*&amp;, FileRequestResult*&gt; (257 samples, 0.80%)</title><rect x="151.8" y="693" width="9.5" height="15.0" fill="rgb(227,140,53)" rx="2" ry="2" />
<text  x="154.84" y="703.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::_M_ptr (5 samples, 0.02%)</title><rect x="738.9" y="645" width="0.2" height="15.0" fill="rgb(229,73,30)" rx="2" ry="2" />
<text  x="741.87" y="655.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (30 samples, 0.09%)</title><rect x="195.4" y="533" width="1.1" height="15.0" fill="rgb(217,62,0)" rx="2" ry="2" />
<text  x="198.41" y="543.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt; &gt;::_M_invoke (14 samples, 0.04%)</title><rect x="129.6" y="805" width="0.5" height="15.0" fill="rgb(233,64,7)" rx="2" ry="2" />
<text  x="132.56" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator++ (36 samples, 0.11%)</title><rect x="771.9" y="437" width="1.4" height="15.0" fill="rgb(233,163,33)" rx="2" ry="2" />
<text  x="774.94" y="447.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (12 samples, 0.04%)</title><rect x="1169.3" y="789" width="0.4" height="15.0" fill="rgb(231,201,36)" rx="2" ry="2" />
<text  x="1172.27" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (7 samples, 0.02%)</title><rect x="126.0" y="981" width="0.3" height="15.0" fill="rgb(207,206,5)" rx="2" ry="2" />
<text  x="129.04" y="991.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (257 samples, 0.80%)</title><rect x="151.8" y="885" width="9.5" height="15.0" fill="rgb(224,224,33)" rx="2" ry="2" />
<text  x="154.84" y="895.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::function&lt;std::_Bind&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt; (Game_Picture*, std::_Placeholder&lt;1&gt;)&gt;, void, void&gt; (237 samples, 0.74%)</title><rect x="719.5" y="693" width="8.8" height="15.0" fill="rgb(206,83,37)" rx="2" ry="2" />
<text  x="722.54" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (22 samples, 0.07%)</title><rect x="1032.6" y="709" width="0.8" height="15.0" fill="rgb(213,135,45)" rx="2" ry="2" />
<text  x="1035.56" y="719.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (10 samples, 0.03%)</title><rect x="794.9" y="357" width="0.4" height="15.0" fill="rgb(243,0,46)" rx="2" ry="2" />
<text  x="797.93" y="367.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (378 samples, 1.18%)</title><rect x="221.2" y="469" width="14.0" height="15.0" fill="rgb(228,224,26)" rx="2" ry="2" />
<text  x="224.25" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (134 samples, 0.42%)</title><rect x="747.1" y="661" width="5.0" height="15.0" fill="rgb(207,96,10)" rx="2" ry="2" />
<text  x="750.11" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (46 samples, 0.14%)</title><rect x="644.4" y="661" width="1.7" height="15.0" fill="rgb(249,224,8)" rx="2" ry="2" />
<text  x="647.44" y="671.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (96 samples, 0.30%)</title><rect x="191.3" y="549" width="3.6" height="15.0" fill="rgb(227,93,47)" rx="2" ry="2" />
<text  x="194.35" y="559.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (45 samples, 0.14%)</title><rect x="213.9" y="517" width="1.6" height="15.0" fill="rgb(243,154,41)" rx="2" ry="2" />
<text  x="216.85" y="527.5" ></text>
</g>
<g >
<title>max&lt;int&gt; (3 samples, 0.01%)</title><rect x="59.1" y="981" width="0.1" height="15.0" fill="rgb(250,136,47)" rx="2" ry="2" />
<text  x="62.12" y="991.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (276 samples, 0.86%)</title><rect x="130.1" y="949" width="10.2" height="15.0" fill="rgb(251,95,35)" rx="2" ry="2" />
<text  x="133.07" y="959.5" ></text>
</g>
<g >
<title>Sprite::BlitScreen (17 samples, 0.05%)</title><rect x="257.9" y="821" width="0.6" height="15.0" fill="rgb(236,82,11)" rx="2" ry="2" />
<text  x="260.87" y="831.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (110 samples, 0.34%)</title><rect x="200.4" y="757" width="4.1" height="15.0" fill="rgb(235,98,31)" rx="2" ry="2" />
<text  x="203.40" y="767.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator() (7 samples, 0.02%)</title><rect x="100.1" y="981" width="0.3" height="15.0" fill="rgb(218,14,50)" rx="2" ry="2" />
<text  x="103.14" y="991.5" ></text>
</g>
<g >
<title>__libc_recvmsg (7 samples, 0.02%)</title><rect x="1181.1" y="693" width="0.2" height="15.0" fill="rgb(216,17,49)" rx="2" ry="2" />
<text  x="1184.06" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (12 samples, 0.04%)</title><rect x="998.7" y="725" width="0.5" height="15.0" fill="rgb(228,78,32)" rx="2" ry="2" />
<text  x="1001.75" y="735.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="134.7" y="373" width="0.1" height="15.0" fill="rgb(205,64,17)" rx="2" ry="2" />
<text  x="137.73" y="383.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (10 samples, 0.03%)</title><rect x="210.6" y="549" width="0.4" height="15.0" fill="rgb(251,117,9)" rx="2" ry="2" />
<text  x="213.64" y="559.5" ></text>
</g>
<g >
<title>Bitmap::Create (5 samples, 0.02%)</title><rect x="25.9" y="981" width="0.2" height="15.0" fill="rgb(219,40,16)" rx="2" ry="2" />
<text  x="28.89" y="991.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (61 samples, 0.19%)</title><rect x="201.5" y="245" width="2.3" height="15.0" fill="rgb(220,22,4)" rx="2" ry="2" />
<text  x="204.51" y="255.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (122 samples, 0.38%)</title><rect x="211.0" y="981" width="4.5" height="15.0" fill="rgb(219,229,7)" rx="2" ry="2" />
<text  x="214.01" y="991.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (101 samples, 0.32%)</title><rect x="200.7" y="485" width="3.8" height="15.0" fill="rgb(249,83,49)" rx="2" ry="2" />
<text  x="203.74" y="495.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (4 samples, 0.01%)</title><rect x="935.3" y="677" width="0.2" height="15.0" fill="rgb(244,87,13)" rx="2" ry="2" />
<text  x="938.33" y="687.5" ></text>
</g>
<g >
<title>Scene::HasRequestedScene (8 samples, 0.03%)</title><rect x="41.1" y="981" width="0.3" height="15.0" fill="rgb(246,165,53)" rx="2" ry="2" />
<text  x="44.08" y="991.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (84 samples, 0.26%)</title><rect x="191.8" y="501" width="3.1" height="15.0" fill="rgb(238,110,4)" rx="2" ry="2" />
<text  x="194.79" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (9 samples, 0.03%)</title><rect x="501.0" y="677" width="0.3" height="15.0" fill="rgb(208,181,22)" rx="2" ry="2" />
<text  x="503.97" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (34 samples, 0.11%)</title><rect x="817.3" y="421" width="1.3" height="15.0" fill="rgb(246,204,4)" rx="2" ry="2" />
<text  x="820.33" y="431.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.01%)</title><rect x="190.3" y="293" width="0.2" height="15.0" fill="rgb(234,153,13)" rx="2" ry="2" />
<text  x="193.31" y="303.5" ></text>
</g>
<g >
<title>malloc@plt (6 samples, 0.02%)</title><rect x="866.1" y="277" width="0.2" height="15.0" fill="rgb(232,128,43)" rx="2" ry="2" />
<text  x="869.11" y="287.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (14 samples, 0.04%)</title><rect x="159.3" y="485" width="0.5" height="15.0" fill="rgb(253,179,32)" rx="2" ry="2" />
<text  x="162.31" y="495.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (3 samples, 0.01%)</title><rect x="691.4" y="613" width="0.1" height="15.0" fill="rgb(231,217,17)" rx="2" ry="2" />
<text  x="694.41" y="623.5" ></text>
</g>
<g >
<title>SDL_UpdateTexture_REAL (9 samples, 0.03%)</title><rect x="258.6" y="837" width="0.3" height="15.0" fill="rgb(221,194,12)" rx="2" ry="2" />
<text  x="261.61" y="847.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (3 samples, 0.01%)</title><rect x="92.1" y="981" width="0.1" height="15.0" fill="rgb(216,93,21)" rx="2" ry="2" />
<text  x="95.12" y="991.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::_S_right (22 samples, 0.07%)</title><rect x="671.9" y="645" width="0.8" height="15.0" fill="rgb(228,32,37)" rx="2" ry="2" />
<text  x="674.94" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (67 samples, 0.21%)</title><rect x="1038.5" y="709" width="2.5" height="15.0" fill="rgb(246,204,40)" rx="2" ry="2" />
<text  x="1041.48" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (6 samples, 0.02%)</title><rect x="873.6" y="453" width="0.2" height="15.0" fill="rgb(213,144,15)" rx="2" ry="2" />
<text  x="876.57" y="463.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (6 samples, 0.02%)</title><rect x="728.1" y="677" width="0.2" height="15.0" fill="rgb(229,162,29)" rx="2" ry="2" />
<text  x="731.07" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (131 samples, 0.41%)</title><rect x="476.1" y="693" width="4.9" height="15.0" fill="rgb(239,96,32)" rx="2" ry="2" />
<text  x="479.14" y="703.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (8 samples, 0.03%)</title><rect x="161.3" y="597" width="0.3" height="15.0" fill="rgb(219,216,42)" rx="2" ry="2" />
<text  x="164.34" y="607.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (5 samples, 0.02%)</title><rect x="951.6" y="693" width="0.2" height="15.0" fill="rgb(210,44,7)" rx="2" ry="2" />
<text  x="954.63" y="703.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator bool (3 samples, 0.01%)</title><rect x="691.4" y="629" width="0.1" height="15.0" fill="rgb(234,175,53)" rx="2" ry="2" />
<text  x="694.41" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (19 samples, 0.06%)</title><rect x="710.5" y="613" width="0.7" height="15.0" fill="rgb(218,188,20)" rx="2" ry="2" />
<text  x="713.52" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (101 samples, 0.32%)</title><rect x="200.7" y="341" width="3.8" height="15.0" fill="rgb(242,145,15)" rx="2" ry="2" />
<text  x="203.74" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (28 samples, 0.09%)</title><rect x="49.1" y="981" width="1.0" height="15.0" fill="rgb(225,107,47)" rx="2" ry="2" />
<text  x="52.06" y="991.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (110 samples, 0.34%)</title><rect x="200.4" y="789" width="4.1" height="15.0" fill="rgb(229,82,24)" rx="2" ry="2" />
<text  x="203.40" y="799.5" ></text>
</g>
<g >
<title>Bitmap::height (8 samples, 0.03%)</title><rect x="27.4" y="981" width="0.3" height="15.0" fill="rgb(215,51,51)" rx="2" ry="2" />
<text  x="30.37" y="991.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (149 samples, 0.47%)</title><rect x="194.9" y="869" width="5.5" height="15.0" fill="rgb(234,60,18)" rx="2" ry="2" />
<text  x="197.90" y="879.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::_M_ptr (11 samples, 0.03%)</title><rect x="89.2" y="981" width="0.4" height="15.0" fill="rgb(237,39,26)" rx="2" ry="2" />
<text  x="92.24" y="991.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (7 samples, 0.02%)</title><rect x="936.1" y="693" width="0.2" height="15.0" fill="rgb(216,211,31)" rx="2" ry="2" />
<text  x="939.07" y="703.5" ></text>
</g>
<g >
<title>Bitmap::GetTransparent (4 samples, 0.01%)</title><rect x="26.7" y="981" width="0.2" height="15.0" fill="rgb(205,179,20)" rx="2" ry="2" />
<text  x="29.70" y="991.5" ></text>
</g>
<g >
<title>__GI_madvise (17 samples, 0.05%)</title><rect x="203.8" y="293" width="0.7" height="15.0" fill="rgb(211,223,24)" rx="2" ry="2" />
<text  x="206.84" y="303.5" ></text>
</g>
<g >
<title>operator delete (203 samples, 0.64%)</title><rect x="926.5" y="485" width="7.5" height="15.0" fill="rgb(234,29,35)" rx="2" ry="2" />
<text  x="929.53" y="495.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (92 samples, 0.29%)</title><rect x="207.2" y="597" width="3.4" height="15.0" fill="rgb(206,58,29)" rx="2" ry="2" />
<text  x="210.24" y="607.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (4 samples, 0.01%)</title><rect x="84.7" y="981" width="0.1" height="15.0" fill="rgb(239,151,53)" rx="2" ry="2" />
<text  x="87.65" y="991.5" ></text>
</g>
<g >
<title>___sys_recvmsg (3 samples, 0.01%)</title><rect x="1181.2" y="597" width="0.1" height="15.0" fill="rgb(235,1,19)" rx="2" ry="2" />
<text  x="1184.20" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (8 samples, 0.03%)</title><rect x="371.3" y="757" width="0.3" height="15.0" fill="rgb(223,194,3)" rx="2" ry="2" />
<text  x="374.25" y="767.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (7 samples, 0.02%)</title><rect x="889.8" y="437" width="0.2" height="15.0" fill="rgb(217,162,33)" rx="2" ry="2" />
<text  x="892.76" y="447.5" ></text>
</g>
<g >
<title>memcmp (3 samples, 0.01%)</title><rect x="806.2" y="357" width="0.1" height="15.0" fill="rgb(238,209,53)" rx="2" ry="2" />
<text  x="809.24" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::get (15 samples, 0.05%)</title><rect x="109.1" y="981" width="0.6" height="15.0" fill="rgb(210,138,16)" rx="2" ry="2" />
<text  x="112.12" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (8 samples, 0.03%)</title><rect x="882.0" y="405" width="0.3" height="15.0" fill="rgb(214,108,17)" rx="2" ry="2" />
<text  x="884.96" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char32_t&gt; &gt;::allocate (9 samples, 0.03%)</title><rect x="984.6" y="661" width="0.4" height="15.0" fill="rgb(248,27,45)" rx="2" ry="2" />
<text  x="987.63" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (29 samples, 0.09%)</title><rect x="137.6" y="485" width="1.1" height="15.0" fill="rgb(218,173,48)" rx="2" ry="2" />
<text  x="140.61" y="495.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Mem_fn&lt;void (Game_Picture::*)(FileRequestResult*)&gt;&amp;, Game_Picture*&amp;, FileRequestResult*&gt; (122 samples, 0.38%)</title><rect x="211.0" y="709" width="4.5" height="15.0" fill="rgb(246,12,53)" rx="2" ry="2" />
<text  x="214.01" y="719.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (179 samples, 0.56%)</title><rect x="145.2" y="981" width="6.6" height="15.0" fill="rgb(253,177,34)" rx="2" ry="2" />
<text  x="148.23" y="991.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (45 samples, 0.14%)</title><rect x="213.9" y="453" width="1.6" height="15.0" fill="rgb(238,188,22)" rx="2" ry="2" />
<text  x="216.85" y="463.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (11 samples, 0.03%)</title><rect x="955.0" y="709" width="0.4" height="15.0" fill="rgb(218,100,47)" rx="2" ry="2" />
<text  x="957.99" y="719.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (3 samples, 0.01%)</title><rect x="81.5" y="981" width="0.1" height="15.0" fill="rgb(239,161,37)" rx="2" ry="2" />
<text  x="84.47" y="991.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (7 samples, 0.02%)</title><rect x="106.8" y="981" width="0.3" height="15.0" fill="rgb(248,51,26)" rx="2" ry="2" />
<text  x="109.83" y="991.5" ></text>
</g>
<g >
<title>std::find&lt;int const*, int&gt; (146 samples, 0.46%)</title><rect x="502.7" y="725" width="5.4" height="15.0" fill="rgb(235,125,5)" rx="2" ry="2" />
<text  x="505.71" y="735.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_M_head (3 samples, 0.01%)</title><rect x="810.1" y="341" width="0.1" height="15.0" fill="rgb(211,109,53)" rx="2" ry="2" />
<text  x="813.12" y="351.5" ></text>
</g>
<g >
<title>std::swap&lt;Bitmap*&gt; (19 samples, 0.06%)</title><rect x="973.1" y="693" width="0.7" height="15.0" fill="rgb(245,175,10)" rx="2" ry="2" />
<text  x="976.14" y="703.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::get (6 samples, 0.02%)</title><rect x="966.2" y="677" width="0.2" height="15.0" fill="rgb(217,21,46)" rx="2" ry="2" />
<text  x="969.15" y="687.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.01%)</title><rect x="154.9" y="549" width="0.1" height="15.0" fill="rgb(209,17,17)" rx="2" ry="2" />
<text  x="157.91" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.03%)</title><rect x="138.4" y="437" width="0.3" height="15.0" fill="rgb(249,166,5)" rx="2" ry="2" />
<text  x="141.35" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::get (3 samples, 0.01%)</title><rect x="889.2" y="485" width="0.1" height="15.0" fill="rgb(251,78,13)" rx="2" ry="2" />
<text  x="892.21" y="495.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;Bitmap&gt;&amp;&gt; (5 samples, 0.02%)</title><rect x="104.6" y="981" width="0.2" height="15.0" fill="rgb(221,189,3)" rx="2" ry="2" />
<text  x="107.61" y="991.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;int, std::allocator&lt;int&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::__allocated_ptr (11 samples, 0.03%)</title><rect x="697.3" y="581" width="0.4" height="15.0" fill="rgb(234,125,42)" rx="2" ry="2" />
<text  x="700.25" y="591.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.01%)</title><rect x="694.7" y="597" width="0.1" height="15.0" fill="rgb(214,144,21)" rx="2" ry="2" />
<text  x="697.67" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::get (10 samples, 0.03%)</title><rect x="108.1" y="981" width="0.4" height="15.0" fill="rgb(224,155,27)" rx="2" ry="2" />
<text  x="111.08" y="991.5" ></text>
</g>
<g >
<title>Window_NumberInput::Update (4 samples, 0.01%)</title><rect x="1179.7" y="837" width="0.2" height="15.0" fill="rgb(214,6,17)" rx="2" ry="2" />
<text  x="1182.73" y="847.5" ></text>
</g>
<g >
<title>release_pages (4 samples, 0.01%)</title><rect x="666.0" y="421" width="0.2" height="15.0" fill="rgb(207,180,11)" rx="2" ry="2" />
<text  x="669.02" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (276 samples, 0.86%)</title><rect x="130.1" y="581" width="10.2" height="15.0" fill="rgb(243,191,1)" rx="2" ry="2" />
<text  x="133.07" y="591.5" ></text>
</g>
<g >
<title>Bitmap::Create (14 samples, 0.04%)</title><rect x="129.6" y="645" width="0.5" height="15.0" fill="rgb(217,137,27)" rx="2" ry="2" />
<text  x="132.56" y="655.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (179 samples, 0.56%)</title><rect x="145.2" y="645" width="6.6" height="15.0" fill="rgb(238,11,52)" rx="2" ry="2" />
<text  x="148.23" y="655.5" ></text>
</g>
<g >
<title>pthread_getspecific@plt (3 samples, 0.01%)</title><rect x="933.9" y="453" width="0.1" height="15.0" fill="rgb(213,147,27)" rx="2" ry="2" />
<text  x="936.92" y="463.5" ></text>
</g>
<g >
<title>std::_Bit_iterator_base::_Bit_iterator_base (5 samples, 0.02%)</title><rect x="263.5" y="741" width="0.2" height="15.0" fill="rgb(212,222,47)" rx="2" ry="2" />
<text  x="266.53" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (8 samples, 0.03%)</title><rect x="220.5" y="981" width="0.3" height="15.0" fill="rgb(226,23,45)" rx="2" ry="2" />
<text  x="223.51" y="991.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_S_key (5 samples, 0.02%)</title><rect x="208.4" y="341" width="0.2" height="15.0" fill="rgb(206,171,39)" rx="2" ry="2" />
<text  x="211.39" y="351.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (179 samples, 0.56%)</title><rect x="145.2" y="661" width="6.6" height="15.0" fill="rgb(229,93,10)" rx="2" ry="2" />
<text  x="148.23" y="671.5" ></text>
</g>
<g >
<title>pthread_getspecific@plt (3 samples, 0.01%)</title><rect x="136.4" y="421" width="0.1" height="15.0" fill="rgb(250,182,44)" rx="2" ry="2" />
<text  x="139.43" y="431.5" ></text>
</g>
<g >
<title>Bitmap::~Bitmap (10 samples, 0.03%)</title><rect x="210.6" y="469" width="0.4" height="15.0" fill="rgb(229,56,19)" rx="2" ry="2" />
<text  x="213.64" y="479.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (13 samples, 0.04%)</title><rect x="980.3" y="661" width="0.5" height="15.0" fill="rgb(211,198,13)" rx="2" ry="2" />
<text  x="983.34" y="671.5" ></text>
</g>
<g >
<title>pipe_poll (3 samples, 0.01%)</title><rect x="18.4" y="933" width="0.1" height="15.0" fill="rgb(225,28,2)" rx="2" ry="2" />
<text  x="21.35" y="943.5" ></text>
</g>
<g >
<title>Sprite::SetY (5 samples, 0.02%)</title><rect x="884.0" y="485" width="0.2" height="15.0" fill="rgb(230,208,14)" rx="2" ry="2" />
<text  x="887.00" y="495.5" ></text>
</g>
<g >
<title>std::mem_fn&lt;void (FileRequestResult*), Game_Picture&gt; (12 samples, 0.04%)</title><rect x="736.7" y="693" width="0.5" height="15.0" fill="rgb(253,130,20)" rx="2" ry="2" />
<text  x="739.72" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (50 samples, 0.16%)</title><rect x="198.6" y="341" width="1.8" height="15.0" fill="rgb(248,142,3)" rx="2" ry="2" />
<text  x="201.55" y="351.5" ></text>
</g>
</g>
</svg>
