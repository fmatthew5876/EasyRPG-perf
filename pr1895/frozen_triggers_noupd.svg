<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1014.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="997" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="997" > </text>
<g id="frames">
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (13 samples, 0.04%)</title><rect x="101.5" y="549" width="0.5" height="15.0" fill="rgb(248,164,24)" rx="2" ry="2" />
<text  x="104.50" y="559.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (1,191 samples, 4.10%)</title><rect x="743.4" y="501" width="48.5" height="15.0" fill="rgb(252,166,38)" rx="2" ry="2" />
<text  x="746.43" y="511.5" >std:..</text>
</g>
<g >
<title>__libc_recvmsg (4 samples, 0.01%)</title><rect x="1180.8" y="629" width="0.1" height="15.0" fill="rgb(252,92,52)" rx="2" ry="2" />
<text  x="1183.77" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (51 samples, 0.18%)</title><rect x="98.7" y="517" width="2.1" height="15.0" fill="rgb(221,7,39)" rx="2" ry="2" />
<text  x="101.70" y="527.5" ></text>
</g>
<g >
<title>X11_PumpEvents (17 samples, 0.06%)</title><rect x="1180.4" y="773" width="0.7" height="15.0" fill="rgb(248,146,26)" rx="2" ry="2" />
<text  x="1183.44" y="783.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.02%)</title><rect x="822.1" y="517" width="0.2" height="15.0" fill="rgb(222,0,38)" rx="2" ry="2" />
<text  x="825.08" y="527.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (17 samples, 0.06%)</title><rect x="105.2" y="485" width="0.7" height="15.0" fill="rgb(219,36,22)" rx="2" ry="2" />
<text  x="108.20" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (5 samples, 0.02%)</title><rect x="730.6" y="469" width="0.2" height="15.0" fill="rgb(233,194,20)" rx="2" ry="2" />
<text  x="733.62" y="479.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (107 samples, 0.37%)</title><rect x="112.8" y="517" width="4.4" height="15.0" fill="rgb(207,46,10)" rx="2" ry="2" />
<text  x="115.85" y="527.5" ></text>
</g>
<g >
<title>std::replace&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (413 samples, 1.42%)</title><rect x="619.5" y="613" width="16.8" height="15.0" fill="rgb(227,150,48)" rx="2" ry="2" />
<text  x="622.52" y="623.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::function&lt;Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}, void, void&gt; (20 samples, 0.07%)</title><rect x="801.6" y="645" width="0.8" height="15.0" fill="rgb(219,215,24)" rx="2" ry="2" />
<text  x="804.63" y="655.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::operator() (8 samples, 0.03%)</title><rect x="697.9" y="485" width="0.4" height="15.0" fill="rgb(226,215,47)" rx="2" ry="2" />
<text  x="700.93" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt; (8 samples, 0.03%)</title><rect x="1030.7" y="757" width="0.3" height="15.0" fill="rgb(250,155,15)" rx="2" ry="2" />
<text  x="1033.67" y="767.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (9 samples, 0.03%)</title><rect x="76.0" y="917" width="0.4" height="15.0" fill="rgb(234,77,5)" rx="2" ry="2" />
<text  x="79.04" y="927.5" ></text>
</g>
<g >
<title>Game_Player::UpdateSelfMovement (43 samples, 0.15%)</title><rect x="1033.1" y="741" width="1.7" height="15.0" fill="rgb(205,4,5)" rx="2" ry="2" />
<text  x="1036.07" y="751.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustId (3 samples, 0.01%)</title><rect x="820.5" y="661" width="0.1" height="15.0" fill="rgb(209,6,47)" rx="2" ry="2" />
<text  x="823.50" y="671.5" ></text>
</g>
<g >
<title>memcpy (4 samples, 0.01%)</title><rect x="612.1" y="565" width="0.2" height="15.0" fill="rgb(225,75,35)" rx="2" ry="2" />
<text  x="615.12" y="575.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (20 samples, 0.07%)</title><rect x="134.0" y="533" width="0.8" height="15.0" fill="rgb(232,38,6)" rx="2" ry="2" />
<text  x="136.95" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (3 samples, 0.01%)</title><rect x="92.0" y="917" width="0.1" height="15.0" fill="rgb(212,11,51)" rx="2" ry="2" />
<text  x="94.99" y="927.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandControlVariables (2,694 samples, 9.28%)</title><rect x="462.0" y="693" width="109.6" height="15.0" fill="rgb(247,103,47)" rx="2" ry="2" />
<text  x="465.02" y="703.5" >Game_Interpre..</text>
</g>
<g >
<title>Game_Picture::ShowParams::~ShowParams (106 samples, 0.37%)</title><rect x="813.9" y="677" width="4.3" height="15.0" fill="rgb(254,159,17)" rx="2" ry="2" />
<text  x="816.91" y="687.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::~_Sp_counted_ptr_inplace (13 samples, 0.04%)</title><rect x="745.3" y="469" width="0.6" height="15.0" fill="rgb(243,24,49)" rx="2" ry="2" />
<text  x="748.34" y="479.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (4 samples, 0.01%)</title><rect x="76.9" y="917" width="0.1" height="15.0" fill="rgb(247,20,3)" rx="2" ry="2" />
<text  x="79.86" y="927.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator (4 samples, 0.01%)</title><rect x="1176.0" y="757" width="0.1" height="15.0" fill="rgb(234,211,26)" rx="2" ry="2" />
<text  x="1178.97" y="767.5" ></text>
</g>
<g >
<title>pipe_write (6 samples, 0.02%)</title><rect x="25.5" y="821" width="0.3" height="15.0" fill="rgb(242,43,23)" rx="2" ry="2" />
<text  x="28.53" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (15 samples, 0.05%)</title><rect x="44.7" y="917" width="0.6" height="15.0" fill="rgb(229,116,25)" rx="2" ry="2" />
<text  x="47.69" y="927.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (3 samples, 0.01%)</title><rect x="589.7" y="629" width="0.1" height="15.0" fill="rgb(237,59,51)" rx="2" ry="2" />
<text  x="592.67" y="639.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (22 samples, 0.08%)</title><rect x="751.1" y="357" width="0.9" height="15.0" fill="rgb(236,229,23)" rx="2" ry="2" />
<text  x="754.12" y="367.5" ></text>
</g>
<g >
<title>unmap_page_range (4 samples, 0.01%)</title><rect x="787.6" y="181" width="0.1" height="15.0" fill="rgb(252,113,9)" rx="2" ry="2" />
<text  x="790.56" y="191.5" ></text>
</g>
<g >
<title>min&lt;int&gt; (3 samples, 0.01%)</title><rect x="50.2" y="917" width="0.1" height="15.0" fill="rgb(252,131,49)" rx="2" ry="2" />
<text  x="53.22" y="927.5" ></text>
</g>
<g >
<title>Bitmap::GetHeight (16 samples, 0.06%)</title><rect x="1146.3" y="741" width="0.7" height="15.0" fill="rgb(207,185,19)" rx="2" ry="2" />
<text  x="1149.32" y="751.5" ></text>
</g>
<g >
<title>std::min&lt;int&gt; (12 samples, 0.04%)</title><rect x="834.2" y="677" width="0.4" height="15.0" fill="rgb(232,166,53)" rx="2" ry="2" />
<text  x="837.16" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (7 samples, 0.02%)</title><rect x="117.2" y="549" width="0.3" height="15.0" fill="rgb(234,63,54)" rx="2" ry="2" />
<text  x="120.20" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (3 samples, 0.01%)</title><rect x="692.6" y="549" width="0.1" height="15.0" fill="rgb(218,112,9)" rx="2" ry="2" />
<text  x="695.60" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (11 samples, 0.04%)</title><rect x="104.8" y="485" width="0.4" height="15.0" fill="rgb(212,217,9)" rx="2" ry="2" />
<text  x="107.75" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (27 samples, 0.09%)</title><rect x="435.4" y="629" width="1.1" height="15.0" fill="rgb(253,8,50)" rx="2" ry="2" />
<text  x="438.38" y="639.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (1,139 samples, 3.93%)</title><rect x="1099.8" y="709" width="46.4" height="15.0" fill="rgb(218,161,10)" rx="2" ry="2" />
<text  x="1102.84" y="719.5" >std:..</text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::end (11 samples, 0.04%)</title><rect x="151.5" y="693" width="0.4" height="15.0" fill="rgb(246,30,3)" rx="2" ry="2" />
<text  x="154.48" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (8 samples, 0.03%)</title><rect x="982.8" y="709" width="0.3" height="15.0" fill="rgb(212,20,52)" rx="2" ry="2" />
<text  x="985.80" y="719.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (85 samples, 0.29%)</title><rect x="134.0" y="821" width="3.4" height="15.0" fill="rgb(252,194,42)" rx="2" ry="2" />
<text  x="136.95" y="831.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (10 samples, 0.03%)</title><rect x="24.3" y="789" width="0.4" height="15.0" fill="rgb(219,5,53)" rx="2" ry="2" />
<text  x="27.27" y="799.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (175 samples, 0.60%)</title><rect x="326.9" y="677" width="7.1" height="15.0" fill="rgb(251,86,0)" rx="2" ry="2" />
<text  x="329.88" y="687.5" ></text>
</g>
<g >
<title>SDL_UpdateTextureNative (10 samples, 0.03%)</title><rect x="142.9" y="757" width="0.4" height="15.0" fill="rgb(251,22,15)" rx="2" ry="2" />
<text  x="145.94" y="767.5" ></text>
</g>
<g >
<title>Game_Interpreter::IsRunning (19 samples, 0.07%)</title><rect x="334.8" y="725" width="0.7" height="15.0" fill="rgb(226,20,26)" rx="2" ry="2" />
<text  x="337.77" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (12 samples, 0.04%)</title><rect x="572.5" y="613" width="0.5" height="15.0" fill="rgb(237,69,33)" rx="2" ry="2" />
<text  x="575.47" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="97.5" y="917" width="0.1" height="15.0" fill="rgb(208,48,37)" rx="2" ry="2" />
<text  x="100.52" y="927.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (24 samples, 0.08%)</title><rect x="1126.1" y="485" width="0.9" height="15.0" fill="rgb(216,28,45)" rx="2" ry="2" />
<text  x="1129.07" y="495.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (6 samples, 0.02%)</title><rect x="62.1" y="917" width="0.2" height="15.0" fill="rgb(209,127,1)" rx="2" ry="2" />
<text  x="65.05" y="927.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt;::_M_head (5 samples, 0.02%)</title><rect x="1043.5" y="677" width="0.2" height="15.0" fill="rgb(214,178,49)" rx="2" ry="2" />
<text  x="1046.48" y="687.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (31 samples, 0.11%)</title><rect x="729.6" y="533" width="1.2" height="15.0" fill="rgb(245,225,7)" rx="2" ry="2" />
<text  x="732.57" y="543.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (11 samples, 0.04%)</title><rect x="793.9" y="501" width="0.4" height="15.0" fill="rgb(214,131,28)" rx="2" ry="2" />
<text  x="796.90" y="511.5" ></text>
</g>
<g >
<title>security_vm_enough_memory_mm (3 samples, 0.01%)</title><rect x="1116.0" y="309" width="0.1" height="15.0" fill="rgb(236,125,54)" rx="2" ry="2" />
<text  x="1118.99" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (16 samples, 0.06%)</title><rect x="204.0" y="709" width="0.7" height="15.0" fill="rgb(254,37,16)" rx="2" ry="2" />
<text  x="207.02" y="719.5" ></text>
</g>
<g >
<title>Bitmap::GetHeight (3 samples, 0.01%)</title><rect x="89.5" y="917" width="0.1" height="15.0" fill="rgb(212,106,0)" rx="2" ry="2" />
<text  x="92.46" y="927.5" ></text>
</g>
<g >
<title>native_write_msr (22 samples, 0.08%)</title><rect x="1181.3" y="517" width="0.9" height="15.0" fill="rgb(234,112,22)" rx="2" ry="2" />
<text  x="1184.26" y="527.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (72 samples, 0.25%)</title><rect x="646.7" y="533" width="2.9" height="15.0" fill="rgb(220,65,51)" rx="2" ry="2" />
<text  x="649.69" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (9 samples, 0.03%)</title><rect x="579.7" y="661" width="0.3" height="15.0" fill="rgb(245,196,31)" rx="2" ry="2" />
<text  x="582.67" y="671.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (85 samples, 0.29%)</title><rect x="134.0" y="757" width="3.4" height="15.0" fill="rgb(253,192,54)" rx="2" ry="2" />
<text  x="136.95" y="767.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::begin (6 samples, 0.02%)</title><rect x="446.4" y="661" width="0.2" height="15.0" fill="rgb(218,8,26)" rx="2" ry="2" />
<text  x="449.36" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (5 samples, 0.02%)</title><rect x="730.6" y="485" width="0.2" height="15.0" fill="rgb(250,180,7)" rx="2" ry="2" />
<text  x="733.62" y="495.5" ></text>
</g>
<g >
<title>get_page_from_freelist (18 samples, 0.06%)</title><rect x="1093.5" y="581" width="0.7" height="15.0" fill="rgb(217,43,38)" rx="2" ry="2" />
<text  x="1096.46" y="591.5" ></text>
</g>
<g >
<title>__vm_munmap (68 samples, 0.23%)</title><rect x="783.8" y="213" width="2.7" height="15.0" fill="rgb(230,215,8)" rx="2" ry="2" />
<text  x="786.78" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (79 samples, 0.27%)</title><rect x="547.5" y="661" width="3.2" height="15.0" fill="rgb(230,89,29)" rx="2" ry="2" />
<text  x="550.50" y="671.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (789 samples, 2.72%)</title><rect x="1103.9" y="629" width="32.1" height="15.0" fill="rgb(246,128,23)" rx="2" ry="2" />
<text  x="1106.87" y="639.5" >st..</text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::swap (32 samples, 0.11%)</title><rect x="804.2" y="613" width="1.3" height="15.0" fill="rgb(226,15,45)" rx="2" ry="2" />
<text  x="807.19" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (7 samples, 0.02%)</title><rect x="1170.7" y="725" width="0.3" height="15.0" fill="rgb(211,31,18)" rx="2" ry="2" />
<text  x="1173.68" y="735.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (70 samples, 0.24%)</title><rect x="1119.3" y="485" width="2.9" height="15.0" fill="rgb(249,74,7)" rx="2" ry="2" />
<text  x="1122.32" y="495.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::_M_head (7 samples, 0.02%)</title><rect x="56.2" y="917" width="0.3" height="15.0" fill="rgb(213,45,53)" rx="2" ry="2" />
<text  x="59.20" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::size (6 samples, 0.02%)</title><rect x="1029.8" y="741" width="0.2" height="15.0" fill="rgb(246,216,41)" rx="2" ry="2" />
<text  x="1032.77" y="751.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (20 samples, 0.07%)</title><rect x="1115.5" y="357" width="0.8" height="15.0" fill="rgb(232,134,43)" rx="2" ry="2" />
<text  x="1118.50" y="367.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (1,126 samples, 3.88%)</title><rect x="1100.3" y="677" width="45.8" height="15.0" fill="rgb(225,141,17)" rx="2" ry="2" />
<text  x="1103.33" y="687.5" >std:..</text>
</g>
<g >
<title>create_bits (360 samples, 1.24%)</title><rect x="1107.8" y="533" width="14.7" height="15.0" fill="rgb(214,227,50)" rx="2" ry="2" />
<text  x="1110.81" y="543.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (60 samples, 0.21%)</title><rect x="1010.6" y="709" width="2.4" height="15.0" fill="rgb(219,61,49)" rx="2" ry="2" />
<text  x="1013.58" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (161 samples, 0.55%)</title><rect x="392.4" y="661" width="6.5" height="15.0" fill="rgb(233,18,8)" rx="2" ry="2" />
<text  x="395.35" y="671.5" ></text>
</g>
<g >
<title>Sprite_Character::Update (3 samples, 0.01%)</title><rect x="1179.0" y="757" width="0.1" height="15.0" fill="rgb(206,121,40)" rx="2" ry="2" />
<text  x="1181.98" y="767.5" ></text>
</g>
<g >
<title>Rect::Rect (12 samples, 0.04%)</title><rect x="1155.1" y="741" width="0.5" height="15.0" fill="rgb(230,192,44)" rx="2" ry="2" />
<text  x="1158.11" y="751.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (404 samples, 1.39%)</title><rect x="772.5" y="341" width="16.4" height="15.0" fill="rgb(240,127,2)" rx="2" ry="2" />
<text  x="775.51" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (6 samples, 0.02%)</title><rect x="263.9" y="709" width="0.2" height="15.0" fill="rgb(249,111,4)" rx="2" ry="2" />
<text  x="266.89" y="719.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (16 samples, 0.06%)</title><rect x="109.8" y="549" width="0.7" height="15.0" fill="rgb(240,211,11)" rx="2" ry="2" />
<text  x="112.84" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (12 samples, 0.04%)</title><rect x="684.8" y="469" width="0.5" height="15.0" fill="rgb(218,165,26)" rx="2" ry="2" />
<text  x="687.83" y="479.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (34 samples, 0.12%)</title><rect x="1166.3" y="725" width="1.4" height="15.0" fill="rgb(250,110,54)" rx="2" ry="2" />
<text  x="1169.29" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (4 samples, 0.01%)</title><rect x="823.3" y="629" width="0.2" height="15.0" fill="rgb(205,92,41)" rx="2" ry="2" />
<text  x="826.34" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (6 samples, 0.02%)</title><rect x="818.6" y="661" width="0.3" height="15.0" fill="rgb(214,178,26)" rx="2" ry="2" />
<text  x="821.63" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (5 samples, 0.02%)</title><rect x="840.2" y="677" width="0.2" height="15.0" fill="rgb(242,37,14)" rx="2" ry="2" />
<text  x="843.22" y="687.5" ></text>
</g>
<g >
<title>std::__merge_sort_with_buffer&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (3 samples, 0.01%)</title><rect x="142.8" y="725" width="0.1" height="15.0" fill="rgb(211,134,40)" rx="2" ry="2" />
<text  x="145.78" y="735.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (306 samples, 1.05%)</title><rect x="104.8" y="853" width="12.4" height="15.0" fill="rgb(212,225,47)" rx="2" ry="2" />
<text  x="107.75" y="863.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (3 samples, 0.01%)</title><rect x="78.2" y="917" width="0.2" height="15.0" fill="rgb(247,75,4)" rx="2" ry="2" />
<text  x="81.24" y="927.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (3 samples, 0.01%)</title><rect x="792.4" y="517" width="0.2" height="15.0" fill="rgb(253,167,21)" rx="2" ry="2" />
<text  x="795.44" y="527.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (11 samples, 0.04%)</title><rect x="104.8" y="533" width="0.4" height="15.0" fill="rgb(213,216,32)" rx="2" ry="2" />
<text  x="107.75" y="543.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (3 samples, 0.01%)</title><rect x="29.2" y="917" width="0.1" height="15.0" fill="rgb(238,205,54)" rx="2" ry="2" />
<text  x="32.15" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_addr (3 samples, 0.01%)</title><rect x="1133.0" y="437" width="0.1" height="15.0" fill="rgb(223,41,44)" rx="2" ry="2" />
<text  x="1135.98" y="447.5" ></text>
</g>
<g >
<title>std::__detail::operator!=&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, true&gt; (6 samples, 0.02%)</title><rect x="642.1" y="629" width="0.2" height="15.0" fill="rgb(238,35,11)" rx="2" ry="2" />
<text  x="645.09" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (97 samples, 0.33%)</title><rect x="1130.9" y="533" width="4.0" height="15.0" fill="rgb(234,184,19)" rx="2" ry="2" />
<text  x="1133.91" y="543.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="822.5" y="581" width="0.2" height="15.0" fill="rgb(229,37,10)" rx="2" ry="2" />
<text  x="825.53" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (15 samples, 0.05%)</title><rect x="110.5" y="517" width="0.6" height="15.0" fill="rgb(247,214,16)" rx="2" ry="2" />
<text  x="113.49" y="527.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (12 samples, 0.04%)</title><rect x="692.1" y="533" width="0.5" height="15.0" fill="rgb(247,208,22)" rx="2" ry="2" />
<text  x="695.11" y="543.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (4 samples, 0.01%)</title><rect x="1166.8" y="693" width="0.2" height="15.0" fill="rgb(239,160,40)" rx="2" ry="2" />
<text  x="1169.82" y="703.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char32_t&gt; &gt;::deallocate (4 samples, 0.01%)</title><rect x="824.0" y="613" width="0.1" height="15.0" fill="rgb(240,20,44)" rx="2" ry="2" />
<text  x="826.95" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::operator[] (43 samples, 0.15%)</title><rect x="1017.9" y="725" width="1.8" height="15.0" fill="rgb(218,199,14)" rx="2" ry="2" />
<text  x="1020.94" y="735.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (12 samples, 0.04%)</title><rect x="1094.4" y="581" width="0.5" height="15.0" fill="rgb(245,110,31)" rx="2" ry="2" />
<text  x="1097.43" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (316 samples, 1.09%)</title><rect x="1109.6" y="501" width="12.9" height="15.0" fill="rgb(241,19,35)" rx="2" ry="2" />
<text  x="1112.60" y="511.5" ></text>
</g>
<g >
<title>SDL_WaitEventTimeout_REAL (30 samples, 0.10%)</title><rect x="1181.1" y="773" width="1.3" height="15.0" fill="rgb(216,40,52)" rx="2" ry="2" />
<text  x="1184.13" y="783.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (31 samples, 0.11%)</title><rect x="109.8" y="597" width="1.3" height="15.0" fill="rgb(232,100,37)" rx="2" ry="2" />
<text  x="112.84" y="607.5" ></text>
</g>
<g >
<title>__do_page_fault (8 samples, 0.03%)</title><rect x="1118.9" y="437" width="0.3" height="15.0" fill="rgb(217,189,43)" rx="2" ry="2" />
<text  x="1121.87" y="447.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_memcmp (7 samples, 0.02%)</title><rect x="132.9" y="917" width="0.2" height="15.0" fill="rgb(221,153,0)" rx="2" ry="2" />
<text  x="135.86" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt;::base (11 samples, 0.04%)</title><rect x="991.9" y="693" width="0.5" height="15.0" fill="rgb(249,110,10)" rx="2" ry="2" />
<text  x="994.91" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt; &gt; &gt; &gt;::base (3 samples, 0.01%)</title><rect x="1042.1" y="741" width="0.2" height="15.0" fill="rgb(230,156,47)" rx="2" ry="2" />
<text  x="1045.13" y="751.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (3 samples, 0.01%)</title><rect x="589.5" y="661" width="0.2" height="15.0" fill="rgb(207,10,8)" rx="2" ry="2" />
<text  x="592.55" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::_M_erase_at_end (5 samples, 0.02%)</title><rect x="653.3" y="581" width="0.2" height="15.0" fill="rgb(237,130,23)" rx="2" ry="2" />
<text  x="656.31" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (41 samples, 0.14%)</title><rect x="910.7" y="693" width="1.6" height="15.0" fill="rgb(211,29,38)" rx="2" ry="2" />
<text  x="913.66" y="703.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (11 samples, 0.04%)</title><rect x="648.8" y="469" width="0.5" height="15.0" fill="rgb(220,166,49)" rx="2" ry="2" />
<text  x="651.84" y="479.5" ></text>
</g>
<g >
<title>do_page_fault (27 samples, 0.09%)</title><rect x="1117.0" y="405" width="1.1" height="15.0" fill="rgb(224,12,10)" rx="2" ry="2" />
<text  x="1119.96" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::_Vector_impl::~_Vector_impl (4 samples, 0.01%)</title><rect x="791.3" y="389" width="0.2" height="15.0" fill="rgb(216,197,45)" rx="2" ry="2" />
<text  x="794.34" y="399.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (17 samples, 0.06%)</title><rect x="105.2" y="469" width="0.7" height="15.0" fill="rgb(237,58,18)" rx="2" ry="2" />
<text  x="108.20" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (38 samples, 0.13%)</title><rect x="411.8" y="613" width="1.6" height="15.0" fill="rgb(215,65,1)" rx="2" ry="2" />
<text  x="414.83" y="623.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::operator[] (140 samples, 0.48%)</title><rect x="1129.2" y="565" width="5.7" height="15.0" fill="rgb(234,30,53)" rx="2" ry="2" />
<text  x="1132.16" y="575.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (5 samples, 0.02%)</title><rect x="788.9" y="341" width="0.2" height="15.0" fill="rgb(230,139,26)" rx="2" ry="2" />
<text  x="791.94" y="351.5" ></text>
</g>
<g >
<title>Bitmap::Create (3 samples, 0.01%)</title><rect x="27.2" y="917" width="0.1" height="15.0" fill="rgb(253,170,10)" rx="2" ry="2" />
<text  x="30.16" y="927.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (3 samples, 0.01%)</title><rect x="145.5" y="773" width="0.1" height="15.0" fill="rgb(248,93,47)" rx="2" ry="2" />
<text  x="148.50" y="783.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (149 samples, 0.51%)</title><rect x="98.7" y="741" width="6.1" height="15.0" fill="rgb(240,150,44)" rx="2" ry="2" />
<text  x="101.70" y="751.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (17 samples, 0.06%)</title><rect x="117.2" y="693" width="0.7" height="15.0" fill="rgb(216,5,15)" rx="2" ry="2" />
<text  x="120.20" y="703.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Transition*, std::default_delete&lt;Transition&gt; &gt; (8 samples, 0.03%)</title><rect x="797.9" y="549" width="0.4" height="15.0" fill="rgb(232,193,24)" rx="2" ry="2" />
<text  x="800.93" y="559.5" ></text>
</g>
<g >
<title>Cache::SystemOrBlack (4 samples, 0.01%)</title><rect x="1179.6" y="725" width="0.2" height="15.0" fill="rgb(250,51,15)" rx="2" ry="2" />
<text  x="1182.63" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, unsigned long, true&gt;::_S_equals (17 samples, 0.06%)</title><rect x="105.2" y="533" width="0.7" height="15.0" fill="rgb(249,173,18)" rx="2" ry="2" />
<text  x="108.20" y="543.5" ></text>
</g>
<g >
<title>Game_Map::GetDisplayX (10 samples, 0.03%)</title><rect x="32.5" y="917" width="0.4" height="15.0" fill="rgb(238,147,20)" rx="2" ry="2" />
<text  x="35.53" y="927.5" ></text>
</g>
<g >
<title>std::bitset&lt;32ul&gt;::operator[] (3 samples, 0.01%)</title><rect x="587.0" y="645" width="0.1" height="15.0" fill="rgb(243,77,49)" rx="2" ry="2" />
<text  x="590.03" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (29 samples, 0.10%)</title><rect x="437.7" y="629" width="1.2" height="15.0" fill="rgb(252,32,5)" rx="2" ry="2" />
<text  x="440.74" y="639.5" ></text>
</g>
<g >
<title>handle_irq (4 samples, 0.01%)</title><rect x="25.8" y="901" width="0.2" height="15.0" fill="rgb(209,40,1)" rx="2" ry="2" />
<text  x="28.82" y="911.5" ></text>
</g>
<g >
<title>Transition::IsErased (9 samples, 0.03%)</title><rect x="796.9" y="613" width="0.4" height="15.0" fill="rgb(218,100,33)" rx="2" ry="2" />
<text  x="799.91" y="623.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (6 samples, 0.02%)</title><rect x="736.2" y="517" width="0.2" height="15.0" fill="rgb(253,94,15)" rx="2" ry="2" />
<text  x="739.19" y="527.5" ></text>
</g>
<g >
<title>new_sync_read (10 samples, 0.03%)</title><rect x="24.3" y="837" width="0.4" height="15.0" fill="rgb(205,100,44)" rx="2" ry="2" />
<text  x="27.27" y="847.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (8 samples, 0.03%)</title><rect x="786.8" y="117" width="0.4" height="15.0" fill="rgb(207,128,33)" rx="2" ry="2" />
<text  x="789.83" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::begin (4 samples, 0.01%)</title><rect x="85.7" y="917" width="0.2" height="15.0" fill="rgb(241,215,44)" rx="2" ry="2" />
<text  x="88.72" y="927.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (6 samples, 0.02%)</title><rect x="76.6" y="917" width="0.3" height="15.0" fill="rgb(250,55,14)" rx="2" ry="2" />
<text  x="79.61" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char32_t&gt;::allocate (6 samples, 0.02%)</title><rect x="823.7" y="549" width="0.2" height="15.0" fill="rgb(221,55,27)" rx="2" ry="2" />
<text  x="826.67" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.09%)</title><rect x="786.7" y="261" width="1.0" height="15.0" fill="rgb(245,191,17)" rx="2" ry="2" />
<text  x="789.66" y="271.5" ></text>
</g>
<g >
<title>BlitNtoNCopyAlpha (9 samples, 0.03%)</title><rect x="142.9" y="709" width="0.4" height="15.0" fill="rgb(244,63,41)" rx="2" ry="2" />
<text  x="145.94" y="719.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::get (18 samples, 0.06%)</title><rect x="1028.8" y="725" width="0.8" height="15.0" fill="rgb(218,209,52)" rx="2" ry="2" />
<text  x="1031.84" y="735.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (141 samples, 0.49%)</title><rect x="827.6" y="629" width="5.7" height="15.0" fill="rgb(241,115,20)" rx="2" ry="2" />
<text  x="830.61" y="639.5" ></text>
</g>
<g >
<title>std::min&lt;int&gt; (4 samples, 0.01%)</title><rect x="590.2" y="677" width="0.1" height="15.0" fill="rgb(243,111,38)" rx="2" ry="2" />
<text  x="593.16" y="687.5" ></text>
</g>
<g >
<title>xcb_poll_for_event (3 samples, 0.01%)</title><rect x="1181.0" y="677" width="0.1" height="15.0" fill="rgb(206,217,32)" rx="2" ry="2" />
<text  x="1183.97" y="687.5" ></text>
</g>
<g >
<title>Scene::HasRequestedScene (185 samples, 0.64%)</title><rect x="1001.8" y="725" width="7.5" height="15.0" fill="rgb(238,86,4)" rx="2" ry="2" />
<text  x="1004.75" y="735.5" ></text>
</g>
<g >
<title>std::map&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, (anonymous namespace)::CacheItem, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (6 samples, 0.02%)</title><rect x="74.1" y="917" width="0.2" height="15.0" fill="rgb(224,193,25)" rx="2" ry="2" />
<text  x="77.09" y="927.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.02%)</title><rect x="824.7" y="597" width="0.2" height="15.0" fill="rgb(227,229,15)" rx="2" ry="2" />
<text  x="827.69" y="607.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.03%)</title><rect x="97.9" y="933" width="0.4" height="15.0" fill="rgb(212,28,47)" rx="2" ry="2" />
<text  x="100.88" y="943.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (483 samples, 1.66%)</title><rect x="700.4" y="469" width="19.7" height="15.0" fill="rgb(208,89,30)" rx="2" ry="2" />
<text  x="703.45" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (9 samples, 0.03%)</title><rect x="127.9" y="501" width="0.4" height="15.0" fill="rgb(218,188,44)" rx="2" ry="2" />
<text  x="130.89" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (201 samples, 0.69%)</title><rect x="825.4" y="677" width="8.2" height="15.0" fill="rgb(250,208,34)" rx="2" ry="2" />
<text  x="828.38" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::substr (8 samples, 0.03%)</title><rect x="823.6" y="661" width="0.3" height="15.0" fill="rgb(210,149,38)" rx="2" ry="2" />
<text  x="826.59" y="671.5" ></text>
</g>
<g >
<title>release_pages (9 samples, 0.03%)</title><rect x="787.2" y="117" width="0.3" height="15.0" fill="rgb(234,120,14)" rx="2" ry="2" />
<text  x="790.15" y="127.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (6,091 samples, 20.99%)</title><rect x="590.6" y="693" width="247.7" height="15.0" fill="rgb(227,116,47)" rx="2" ry="2" />
<text  x="593.61" y="703.5" >Game_Interpreter::CommandShowPic..</text>
</g>
<g >
<title>std::_Function_base::~_Function_base (14 samples, 0.05%)</title><rect x="802.5" y="629" width="0.6" height="15.0" fill="rgb(254,24,30)" rx="2" ry="2" />
<text  x="805.52" y="639.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (5 samples, 0.02%)</title><rect x="1182.2" y="677" width="0.2" height="15.0" fill="rgb(237,68,37)" rx="2" ry="2" />
<text  x="1185.15" y="687.5" ></text>
</g>
<g >
<title>page_fault (161 samples, 0.55%)</title><rect x="1089.3" y="693" width="6.6" height="15.0" fill="rgb(217,176,37)" rx="2" ry="2" />
<text  x="1092.35" y="703.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (149 samples, 0.51%)</title><rect x="98.7" y="789" width="6.1" height="15.0" fill="rgb(223,146,1)" rx="2" ry="2" />
<text  x="101.70" y="799.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.02%)</title><rect x="100.8" y="517" width="0.3" height="15.0" fill="rgb(233,126,6)" rx="2" ry="2" />
<text  x="103.77" y="527.5" ></text>
</g>
<g >
<title>std::find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, Input::UiSource::Update()::{lambda(int)#1}&gt; (14 samples, 0.05%)</title><rect x="143.8" y="757" width="0.6" height="15.0" fill="rgb(219,41,10)" rx="2" ry="2" />
<text  x="146.84" y="767.5" ></text>
</g>
<g >
<title>Game_Map::Refresh (6 samples, 0.02%)</title><rect x="1026.8" y="741" width="0.3" height="15.0" fill="rgb(235,125,0)" rx="2" ry="2" />
<text  x="1029.84" y="751.5" ></text>
</g>
<g >
<title>handle_mm_fault (152 samples, 0.52%)</title><rect x="1089.6" y="645" width="6.2" height="15.0" fill="rgb(244,210,1)" rx="2" ry="2" />
<text  x="1092.59" y="655.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (45 samples, 0.16%)</title><rect x="757.8" y="373" width="1.8" height="15.0" fill="rgb(245,79,1)" rx="2" ry="2" />
<text  x="760.79" y="383.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.01%)</title><rect x="1182.6" y="933" width="0.2" height="15.0" fill="rgb(231,16,45)" rx="2" ry="2" />
<text  x="1185.60" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (4 samples, 0.01%)</title><rect x="140.5" y="917" width="0.1" height="15.0" fill="rgb(246,187,11)" rx="2" ry="2" />
<text  x="143.46" y="927.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (18 samples, 0.06%)</title><rect x="786.8" y="197" width="0.8" height="15.0" fill="rgb(226,150,30)" rx="2" ry="2" />
<text  x="789.83" y="207.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustShowParams (19 samples, 0.07%)</title><rect x="820.3" y="677" width="0.8" height="15.0" fill="rgb(233,157,23)" rx="2" ry="2" />
<text  x="823.29" y="687.5" ></text>
</g>
<g >
<title>std::_Bit_iterator::operator* (10 samples, 0.03%)</title><rect x="149.6" y="693" width="0.4" height="15.0" fill="rgb(212,50,36)" rx="2" ry="2" />
<text  x="152.57" y="703.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (1,574 samples, 5.42%)</title><rect x="914.7" y="709" width="64.0" height="15.0" fill="rgb(234,182,42)" rx="2" ry="2" />
<text  x="917.68" y="719.5" >Game_In..</text>
</g>
<g >
<title>std::distance&lt;char*&gt; (5 samples, 0.02%)</title><rect x="662.5" y="485" width="0.2" height="15.0" fill="rgb(248,178,14)" rx="2" ry="2" />
<text  x="665.51" y="495.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (17 samples, 0.06%)</title><rect x="1036.4" y="741" width="0.7" height="15.0" fill="rgb(231,5,1)" rx="2" ry="2" />
<text  x="1039.40" y="751.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (7 samples, 0.02%)</title><rect x="734.5" y="469" width="0.3" height="15.0" fill="rgb(226,138,46)" rx="2" ry="2" />
<text  x="737.53" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (46 samples, 0.16%)</title><rect x="616.2" y="597" width="1.9" height="15.0" fill="rgb(251,122,44)" rx="2" ry="2" />
<text  x="619.23" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_dispose (3 samples, 0.01%)</title><rect x="822.4" y="613" width="0.1" height="15.0" fill="rgb(248,141,22)" rx="2" ry="2" />
<text  x="825.41" y="623.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (40 samples, 0.14%)</title><rect x="1166.1" y="741" width="1.7" height="15.0" fill="rgb(234,61,25)" rx="2" ry="2" />
<text  x="1169.13" y="751.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator bool (3 samples, 0.01%)</title><rect x="834.7" y="677" width="0.2" height="15.0" fill="rgb(224,7,50)" rx="2" ry="2" />
<text  x="837.73" y="687.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Transition*, std::default_delete&lt;Transition&gt; &gt; (10 samples, 0.03%)</title><rect x="71.4" y="917" width="0.4" height="15.0" fill="rgb(235,206,12)" rx="2" ry="2" />
<text  x="74.37" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (6 samples, 0.02%)</title><rect x="1160.5" y="645" width="0.2" height="15.0" fill="rgb(211,183,51)" rx="2" ry="2" />
<text  x="1163.48" y="655.5" ></text>
</g>
<g >
<title>Bitmap::initialize_formats (26 samples, 0.09%)</title><rect x="1127.5" y="565" width="1.1" height="15.0" fill="rgb(244,120,16)" rx="2" ry="2" />
<text  x="1130.49" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (23 samples, 0.08%)</title><rect x="818.9" y="645" width="0.9" height="15.0" fill="rgb(206,52,36)" rx="2" ry="2" />
<text  x="821.91" y="655.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (96 samples, 0.33%)</title><rect x="686.2" y="533" width="3.9" height="15.0" fill="rgb(253,208,34)" rx="2" ry="2" />
<text  x="689.21" y="543.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (150 samples, 0.52%)</title><rect x="111.1" y="581" width="6.1" height="15.0" fill="rgb(239,15,20)" rx="2" ry="2" />
<text  x="114.10" y="591.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (3,430 samples, 11.82%)</title><rect x="656.0" y="581" width="139.5" height="15.0" fill="rgb(254,161,3)" rx="2" ry="2" />
<text  x="659.04" y="591.5" >Game_Picture::OnP..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (66 samples, 0.23%)</title><rect x="1141.3" y="549" width="2.7" height="15.0" fill="rgb(207,133,26)" rx="2" ry="2" />
<text  x="1144.28" y="559.5" ></text>
</g>
<g >
<title>Player::MainLoop (149 samples, 0.51%)</title><rect x="98.7" y="901" width="6.1" height="15.0" fill="rgb(252,72,15)" rx="2" ry="2" />
<text  x="101.70" y="911.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.02%)</title><rect x="104.9" y="469" width="0.3" height="15.0" fill="rgb(214,12,23)" rx="2" ry="2" />
<text  x="107.92" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (19 samples, 0.07%)</title><rect x="585.6" y="661" width="0.7" height="15.0" fill="rgb(242,219,8)" rx="2" ry="2" />
<text  x="588.56" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (5 samples, 0.02%)</title><rect x="45.9" y="917" width="0.2" height="15.0" fill="rgb(253,168,24)" rx="2" ry="2" />
<text  x="48.87" y="927.5" ></text>
</g>
<g >
<title>SDL_IOReady (5 samples, 0.02%)</title><rect x="1180.5" y="741" width="0.2" height="15.0" fill="rgb(249,187,21)" rx="2" ry="2" />
<text  x="1183.48" y="751.5" ></text>
</g>
<g >
<title>operator delete (134 samples, 0.46%)</title><rect x="636.4" y="629" width="5.4" height="15.0" fill="rgb(227,14,26)" rx="2" ry="2" />
<text  x="639.36" y="639.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (13 samples, 0.04%)</title><rect x="109.2" y="485" width="0.5" height="15.0" fill="rgb(210,163,16)" rx="2" ry="2" />
<text  x="112.19" y="495.5" ></text>
</g>
<g >
<title>schedule (94 samples, 0.32%)</title><rect x="19.8" y="821" width="3.9" height="15.0" fill="rgb(207,7,30)" rx="2" ry="2" />
<text  x="22.84" y="831.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (11 samples, 0.04%)</title><rect x="104.8" y="517" width="0.4" height="15.0" fill="rgb(231,24,53)" rx="2" ry="2" />
<text  x="107.75" y="527.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (3 samples, 0.01%)</title><rect x="818.7" y="613" width="0.2" height="15.0" fill="rgb(241,145,20)" rx="2" ry="2" />
<text  x="821.75" y="623.5" ></text>
</g>
<g >
<title>handle_mm_fault (27 samples, 0.09%)</title><rect x="1117.0" y="373" width="1.1" height="15.0" fill="rgb(241,80,52)" rx="2" ry="2" />
<text  x="1119.96" y="383.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (306 samples, 1.05%)</title><rect x="104.8" y="773" width="12.4" height="15.0" fill="rgb(209,169,22)" rx="2" ry="2" />
<text  x="107.75" y="783.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (31 samples, 0.11%)</title><rect x="109.8" y="565" width="1.3" height="15.0" fill="rgb(234,131,30)" rx="2" ry="2" />
<text  x="112.84" y="575.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (6 samples, 0.02%)</title><rect x="81.2" y="917" width="0.2" height="15.0" fill="rgb(247,59,28)" rx="2" ry="2" />
<text  x="84.17" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::operator++ (3 samples, 0.01%)</title><rect x="41.2" y="917" width="0.1" height="15.0" fill="rgb(254,101,32)" rx="2" ry="2" />
<text  x="44.19" y="927.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (4 samples, 0.01%)</title><rect x="70.4" y="917" width="0.2" height="15.0" fill="rgb(227,206,23)" rx="2" ry="2" />
<text  x="73.43" y="927.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (210 samples, 0.72%)</title><rect x="642.7" y="629" width="8.6" height="15.0" fill="rgb(254,181,43)" rx="2" ry="2" />
<text  x="645.74" y="639.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_destroy (6 samples, 0.02%)</title><rect x="802.8" y="597" width="0.3" height="15.0" fill="rgb(205,214,14)" rx="2" ry="2" />
<text  x="805.85" y="607.5" ></text>
</g>
<g >
<title>__interceptor_recvmsg (4 samples, 0.01%)</title><rect x="1180.8" y="645" width="0.1" height="15.0" fill="rgb(232,18,53)" rx="2" ry="2" />
<text  x="1183.77" y="655.5" ></text>
</g>
<g >
<title>PicPointerPatch::ReplaceName (3 samples, 0.01%)</title><rect x="90.0" y="917" width="0.2" height="15.0" fill="rgb(224,146,21)" rx="2" ry="2" />
<text  x="93.03" y="927.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::destroy&lt;Bitmap&gt; (954 samples, 3.29%)</title><rect x="752.9" y="469" width="38.8" height="15.0" fill="rgb(246,183,50)" rx="2" ry="2" />
<text  x="755.91" y="479.5" >std..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt;::_M_head (4 samples, 0.01%)</title><rect x="1176.8" y="677" width="0.1" height="15.0" fill="rgb(240,111,49)" rx="2" ry="2" />
<text  x="1179.78" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (53 samples, 0.18%)</title><rect x="867.1" y="645" width="2.2" height="15.0" fill="rgb(245,125,40)" rx="2" ry="2" />
<text  x="870.10" y="655.5" ></text>
</g>
<g >
<title>sse2_composite_over_8888_8888 (3 samples, 0.01%)</title><rect x="138.2" y="917" width="0.1" height="15.0" fill="rgb(226,109,27)" rx="2" ry="2" />
<text  x="141.18" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (51 samples, 0.18%)</title><rect x="98.7" y="533" width="2.1" height="15.0" fill="rgb(250,96,52)" rx="2" ry="2" />
<text  x="101.70" y="543.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (4 samples, 0.01%)</title><rect x="132.0" y="453" width="0.2" height="15.0" fill="rgb(231,111,43)" rx="2" ry="2" />
<text  x="135.00" y="463.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (6 samples, 0.02%)</title><rect x="1160.5" y="677" width="0.2" height="15.0" fill="rgb(239,141,43)" rx="2" ry="2" />
<text  x="1163.48" y="687.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (289 samples, 1.00%)</title><rect x="403.0" y="645" width="11.8" height="15.0" fill="rgb(253,107,0)" rx="2" ry="2" />
<text  x="406.01" y="655.5" ></text>
</g>
<g >
<title>Rect::Rect (4 samples, 0.01%)</title><rect x="36.2" y="917" width="0.2" height="15.0" fill="rgb(211,18,12)" rx="2" ry="2" />
<text  x="39.19" y="927.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandControlVariables (5 samples, 0.02%)</title><rect x="28.7" y="917" width="0.2" height="15.0" fill="rgb(236,85,18)" rx="2" ry="2" />
<text  x="31.71" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, false, true&gt;::operator (5 samples, 0.02%)</title><rect x="641.9" y="629" width="0.2" height="15.0" fill="rgb(229,50,33)" rx="2" ry="2" />
<text  x="644.89" y="639.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_memcmp@plt (3 samples, 0.01%)</title><rect x="109.7" y="485" width="0.1" height="15.0" fill="rgb(229,120,18)" rx="2" ry="2" />
<text  x="112.72" y="495.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (3,317 samples, 11.43%)</title><rect x="199.9" y="725" width="134.9" height="15.0" fill="rgb(235,152,35)" rx="2" ry="2" />
<text  x="202.88" y="735.5" >Game_Interpreter:..</text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Transition*, std::default_delete&lt;Transition&gt; &gt; (3 samples, 0.01%)</title><rect x="798.7" y="549" width="0.1" height="15.0" fill="rgb(228,119,11)" rx="2" ry="2" />
<text  x="801.70" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_left (18 samples, 0.06%)</title><rect x="698.3" y="501" width="0.7" height="15.0" fill="rgb(230,77,9)" rx="2" ry="2" />
<text  x="701.25" y="511.5" ></text>
</g>
<g >
<title>std::min&lt;int&gt; (16 samples, 0.06%)</title><rect x="74.5" y="917" width="0.6" height="15.0" fill="rgb(247,184,54)" rx="2" ry="2" />
<text  x="77.50" y="927.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (68 samples, 0.23%)</title><rect x="783.8" y="261" width="2.7" height="15.0" fill="rgb(218,77,4)" rx="2" ry="2" />
<text  x="786.78" y="271.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (9 samples, 0.03%)</title><rect x="732.8" y="485" width="0.3" height="15.0" fill="rgb(249,59,39)" rx="2" ry="2" />
<text  x="735.78" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (18 samples, 0.06%)</title><rect x="959.9" y="661" width="0.8" height="15.0" fill="rgb(243,105,8)" rx="2" ry="2" />
<text  x="962.95" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.02%)</title><rect x="117.2" y="501" width="0.3" height="15.0" fill="rgb(217,227,5)" rx="2" ry="2" />
<text  x="120.20" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (4 samples, 0.01%)</title><rect x="141.4" y="917" width="0.2" height="15.0" fill="rgb(219,226,45)" rx="2" ry="2" />
<text  x="144.40" y="927.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.01%)</title><rect x="1180.8" y="581" width="0.1" height="15.0" fill="rgb(221,9,18)" rx="2" ry="2" />
<text  x="1183.81" y="591.5" ></text>
</g>
<g >
<title>Game_Picture::SetNonEffectParams (5 samples, 0.02%)</title><rect x="589.3" y="661" width="0.2" height="15.0" fill="rgb(205,16,1)" rx="2" ry="2" />
<text  x="592.26" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (30 samples, 0.10%)</title><rect x="410.6" y="613" width="1.2" height="15.0" fill="rgb(246,56,17)" rx="2" ry="2" />
<text  x="413.61" y="623.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (3 samples, 0.01%)</title><rect x="795.4" y="517" width="0.1" height="15.0" fill="rgb(211,170,39)" rx="2" ry="2" />
<text  x="798.37" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (37 samples, 0.13%)</title><rect x="799.9" y="645" width="1.5" height="15.0" fill="rgb(220,7,53)" rx="2" ry="2" />
<text  x="802.92" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::_M_ptr (14 samples, 0.05%)</title><rect x="1028.9" y="709" width="0.6" height="15.0" fill="rgb(235,190,20)" rx="2" ry="2" />
<text  x="1031.92" y="719.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (7 samples, 0.02%)</title><rect x="731.1" y="517" width="0.3" height="15.0" fill="rgb(215,89,21)" rx="2" ry="2" />
<text  x="734.11" y="527.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::~_Head_base (6 samples, 0.02%)</title><rect x="736.2" y="501" width="0.2" height="15.0" fill="rgb(242,220,24)" rx="2" ry="2" />
<text  x="739.19" y="511.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (78 samples, 0.27%)</title><rect x="612.8" y="549" width="3.1" height="15.0" fill="rgb(244,88,7)" rx="2" ry="2" />
<text  x="615.77" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (6 samples, 0.02%)</title><rect x="1177.6" y="757" width="0.2" height="15.0" fill="rgb(236,119,23)" rx="2" ry="2" />
<text  x="1180.60" y="767.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (5 samples, 0.02%)</title><rect x="799.0" y="629" width="0.2" height="15.0" fill="rgb(218,44,24)" rx="2" ry="2" />
<text  x="802.03" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (13 samples, 0.04%)</title><rect x="799.3" y="645" width="0.5" height="15.0" fill="rgb(225,154,35)" rx="2" ry="2" />
<text  x="802.31" y="655.5" ></text>
</g>
<g >
<title>std::any_of&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, Input::UiSource::Update()::{lambda(int)#1}&gt; (17 samples, 0.06%)</title><rect x="143.7" y="789" width="0.7" height="15.0" fill="rgb(228,7,31)" rx="2" ry="2" />
<text  x="146.71" y="799.5" ></text>
</g>
<g >
<title>std::__stable_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (4 samples, 0.01%)</title><rect x="142.7" y="757" width="0.2" height="15.0" fill="rgb(211,213,4)" rx="2" ry="2" />
<text  x="145.74" y="767.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (92 samples, 0.32%)</title><rect x="814.4" y="645" width="3.7" height="15.0" fill="rgb(236,144,33)" rx="2" ry="2" />
<text  x="817.36" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator* (6 samples, 0.02%)</title><rect x="46.7" y="917" width="0.2" height="15.0" fill="rgb(252,76,47)" rx="2" ry="2" />
<text  x="49.68" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (6 samples, 0.02%)</title><rect x="686.8" y="469" width="0.2" height="15.0" fill="rgb(205,165,52)" rx="2" ry="2" />
<text  x="689.78" y="479.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (4 samples, 0.01%)</title><rect x="1180.8" y="661" width="0.1" height="15.0" fill="rgb(207,50,32)" rx="2" ry="2" />
<text  x="1183.77" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_S_value (6 samples, 0.02%)</title><rect x="1133.5" y="501" width="0.2" height="15.0" fill="rgb(217,85,45)" rx="2" ry="2" />
<text  x="1136.47" y="511.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (5 samples, 0.02%)</title><rect x="1182.2" y="645" width="0.2" height="15.0" fill="rgb(232,79,22)" rx="2" ry="2" />
<text  x="1185.15" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (40 samples, 0.14%)</title><rect x="389.5" y="645" width="1.6" height="15.0" fill="rgb(238,176,45)" rx="2" ry="2" />
<text  x="392.47" y="655.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (5 samples, 0.02%)</title><rect x="1164.6" y="741" width="0.2" height="15.0" fill="rgb(235,107,53)" rx="2" ry="2" />
<text  x="1167.58" y="751.5" ></text>
</g>
<g >
<title>FileRequestAsync::BindStart (149 samples, 0.51%)</title><rect x="98.7" y="677" width="6.1" height="15.0" fill="rgb(220,82,35)" rx="2" ry="2" />
<text  x="101.70" y="687.5" ></text>
</g>
<g >
<title>__lru_cache_add (15 samples, 0.05%)</title><rect x="1094.3" y="597" width="0.6" height="15.0" fill="rgb(243,84,45)" rx="2" ry="2" />
<text  x="1097.31" y="607.5" ></text>
</g>
<g >
<title>std::mersenne_twister_engine&lt;unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul&gt;::operator() (4 samples, 0.01%)</title><rect x="558.8" y="645" width="0.2" height="15.0" fill="rgb(244,28,28)" rx="2" ry="2" />
<text  x="561.80" y="655.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (4 samples, 0.01%)</title><rect x="792.6" y="517" width="0.2" height="15.0" fill="rgb(254,215,37)" rx="2" ry="2" />
<text  x="795.60" y="527.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::end (10 samples, 0.03%)</title><rect x="642.3" y="629" width="0.4" height="15.0" fill="rgb(206,80,50)" rx="2" ry="2" />
<text  x="645.33" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (3 samples, 0.01%)</title><rect x="824.3" y="661" width="0.1" height="15.0" fill="rgb(245,130,18)" rx="2" ry="2" />
<text  x="827.32" y="671.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (5 samples, 0.02%)</title><rect x="61.9" y="917" width="0.2" height="15.0" fill="rgb(209,64,33)" rx="2" ry="2" />
<text  x="64.85" y="927.5" ></text>
</g>
<g >
<title>Game_Screen::Update (218 samples, 0.75%)</title><rect x="1034.9" y="773" width="8.8" height="15.0" fill="rgb(235,94,6)" rx="2" ry="2" />
<text  x="1037.85" y="783.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;2ul, bool&gt; (3 samples, 0.01%)</title><rect x="139.2" y="917" width="0.1" height="15.0" fill="rgb(243,145,8)" rx="2" ry="2" />
<text  x="142.16" y="927.5" ></text>
</g>
<g >
<title>Bitmap::Create (1,163 samples, 4.01%)</title><rect x="1099.0" y="741" width="47.3" height="15.0" fill="rgb(222,205,8)" rx="2" ry="2" />
<text  x="1102.03" y="751.5" >Bitm..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (16 samples, 0.06%)</title><rect x="886.2" y="645" width="0.7" height="15.0" fill="rgb(230,75,38)" rx="2" ry="2" />
<text  x="889.22" y="655.5" ></text>
</g>
<g >
<title>Game_Interpreter::ValueOrVariable (89 samples, 0.31%)</title><rect x="599.0" y="677" width="3.6" height="15.0" fill="rgb(254,128,33)" rx="2" ry="2" />
<text  x="601.98" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::operator[] (6 samples, 0.02%)</title><rect x="414.8" y="645" width="0.3" height="15.0" fill="rgb(238,90,30)" rx="2" ry="2" />
<text  x="417.84" y="655.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (11 samples, 0.04%)</title><rect x="101.1" y="549" width="0.4" height="15.0" fill="rgb(230,77,13)" rx="2" ry="2" />
<text  x="104.05" y="559.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_base (4 samples, 0.01%)</title><rect x="1103.2" y="629" width="0.2" height="15.0" fill="rgb(241,181,30)" rx="2" ry="2" />
<text  x="1106.22" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (5 samples, 0.02%)</title><rect x="824.1" y="661" width="0.2" height="15.0" fill="rgb(218,44,43)" rx="2" ry="2" />
<text  x="827.12" y="671.5" ></text>
</g>
<g >
<title>Bitmap::Blit (11 samples, 0.04%)</title><rect x="141.9" y="709" width="0.4" height="15.0" fill="rgb(231,50,37)" rx="2" ry="2" />
<text  x="144.88" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;2, std::__detail::_Mod_range_hashing, true&gt;::_S_cget (3 samples, 0.01%)</title><rect x="61.0" y="917" width="0.1" height="15.0" fill="rgb(232,159,33)" rx="2" ry="2" />
<text  x="63.96" y="927.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (1,269 samples, 4.37%)</title><rect x="740.3" y="517" width="51.6" height="15.0" fill="rgb(226,49,23)" rx="2" ry="2" />
<text  x="743.26" y="527.5" >std::..</text>
</g>
<g >
<title>try_charge (7 samples, 0.02%)</title><rect x="1095.3" y="581" width="0.3" height="15.0" fill="rgb(227,97,54)" rx="2" ry="2" />
<text  x="1098.33" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (26 samples, 0.09%)</title><rect x="732.1" y="501" width="1.0" height="15.0" fill="rgb(252,35,41)" rx="2" ry="2" />
<text  x="735.09" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (11 samples, 0.04%)</title><rect x="101.1" y="533" width="0.4" height="15.0" fill="rgb(219,22,42)" rx="2" ry="2" />
<text  x="104.05" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (33 samples, 0.11%)</title><rect x="278.4" y="693" width="1.4" height="15.0" fill="rgb(213,48,19)" rx="2" ry="2" />
<text  x="281.44" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (811 samples, 2.80%)</title><rect x="876.5" y="677" width="33.0" height="15.0" fill="rgb(211,24,42)" rx="2" ry="2" />
<text  x="879.50" y="687.5" >st..</text>
</g>
<g >
<title>Player::MainLoop (25,591 samples, 88.20%)</title><rect x="141.8" y="869" width="1040.7" height="15.0" fill="rgb(210,46,54)" rx="2" ry="2" />
<text  x="144.80" y="879.5" >Player::MainLoop</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_key (10 samples, 0.03%)</title><rect x="54.4" y="917" width="0.4" height="15.0" fill="rgb(223,156,23)" rx="2" ry="2" />
<text  x="57.37" y="927.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (306 samples, 1.05%)</title><rect x="104.8" y="805" width="12.4" height="15.0" fill="rgb(250,155,13)" rx="2" ry="2" />
<text  x="107.75" y="815.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (85 samples, 0.29%)</title><rect x="134.0" y="597" width="3.4" height="15.0" fill="rgb(235,9,12)" rx="2" ry="2" />
<text  x="136.95" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::operator* (4 samples, 0.01%)</title><rect x="1030.0" y="757" width="0.2" height="15.0" fill="rgb(224,76,37)" rx="2" ry="2" />
<text  x="1033.02" y="767.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (5 samples, 0.02%)</title><rect x="795.6" y="581" width="0.2" height="15.0" fill="rgb(241,220,54)" rx="2" ry="2" />
<text  x="798.57" y="591.5" ></text>
</g>
<g >
<title>pixman_image_get_height (13 samples, 0.04%)</title><rect x="737.9" y="517" width="0.6" height="15.0" fill="rgb(233,189,27)" rx="2" ry="2" />
<text  x="740.94" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (16 samples, 0.06%)</title><rect x="127.2" y="485" width="0.7" height="15.0" fill="rgb(253,43,7)" rx="2" ry="2" />
<text  x="130.24" y="495.5" ></text>
</g>
<g >
<title>max&lt;int&gt; (3 samples, 0.01%)</title><rect x="1164.0" y="725" width="0.1" height="15.0" fill="rgb(225,93,53)" rx="2" ry="2" />
<text  x="1166.97" y="735.5" ></text>
</g>
<g >
<title>over_2x128 (39 samples, 0.13%)</title><rect x="1078.1" y="661" width="1.6" height="15.0" fill="rgb(253,213,9)" rx="2" ry="2" />
<text  x="1081.08" y="671.5" ></text>
</g>
<g >
<title>std::__find_if&lt;int const*, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (82 samples, 0.28%)</title><rect x="443.0" y="629" width="3.4" height="15.0" fill="rgb(248,68,26)" rx="2" ry="2" />
<text  x="446.02" y="639.5" ></text>
</g>
<g >
<title>Bitmap::height (19 samples, 0.07%)</title><rect x="737.7" y="533" width="0.8" height="15.0" fill="rgb(230,119,49)" rx="2" ry="2" />
<text  x="740.70" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_valptr (4 samples, 0.01%)</title><rect x="1129.8" y="533" width="0.1" height="15.0" fill="rgb(239,18,22)" rx="2" ry="2" />
<text  x="1132.77" y="543.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, true&gt; (24 samples, 0.08%)</title><rect x="101.1" y="581" width="0.9" height="15.0" fill="rgb(208,62,35)" rx="2" ry="2" />
<text  x="104.05" y="591.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (145 samples, 0.50%)</title><rect x="117.9" y="725" width="5.9" height="15.0" fill="rgb(209,69,47)" rx="2" ry="2" />
<text  x="120.89" y="735.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (126 samples, 0.43%)</title><rect x="644.6" y="597" width="5.1" height="15.0" fill="rgb(244,205,41)" rx="2" ry="2" />
<text  x="647.61" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_write (20 samples, 0.07%)</title><rect x="25.0" y="901" width="0.8" height="15.0" fill="rgb(214,216,49)" rx="2" ry="2" />
<text  x="27.97" y="911.5" ></text>
</g>
<g >
<title>Sprite::BlitScreenIntern (18 samples, 0.06%)</title><rect x="141.8" y="741" width="0.8" height="15.0" fill="rgb(229,140,8)" rx="2" ry="2" />
<text  x="144.84" y="751.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::operator (22 samples, 0.08%)</title><rect x="1028.7" y="741" width="0.9" height="15.0" fill="rgb(213,184,28)" rx="2" ry="2" />
<text  x="1031.67" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (4 samples, 0.01%)</title><rect x="97.0" y="917" width="0.1" height="15.0" fill="rgb(221,194,29)" rx="2" ry="2" />
<text  x="99.99" y="927.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (475 samples, 1.64%)</title><rect x="660.3" y="533" width="19.3" height="15.0" fill="rgb(233,176,21)" rx="2" ry="2" />
<text  x="663.27" y="543.5" ></text>
</g>
<g >
<title>eventfd_write (9 samples, 0.03%)</title><rect x="25.2" y="837" width="0.3" height="15.0" fill="rgb(213,193,48)" rx="2" ry="2" />
<text  x="28.17" y="847.5" ></text>
</g>
<g >
<title>Scene_Map::Update (149 samples, 0.51%)</title><rect x="98.7" y="853" width="6.1" height="15.0" fill="rgb(220,225,38)" rx="2" ry="2" />
<text  x="101.70" y="863.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.03%)</title><rect x="127.5" y="453" width="0.4" height="15.0" fill="rgb(239,122,25)" rx="2" ry="2" />
<text  x="130.53" y="463.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (18 samples, 0.06%)</title><rect x="808.9" y="629" width="0.8" height="15.0" fill="rgb(253,136,41)" rx="2" ry="2" />
<text  x="811.95" y="639.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (46 samples, 0.16%)</title><rect x="687.1" y="485" width="1.9" height="15.0" fill="rgb(242,112,28)" rx="2" ry="2" />
<text  x="690.15" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.02%)</title><rect x="783.5" y="229" width="0.2" height="15.0" fill="rgb(231,15,46)" rx="2" ry="2" />
<text  x="786.53" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::operator[] (4 samples, 0.01%)</title><rect x="85.9" y="917" width="0.2" height="15.0" fill="rgb(238,39,30)" rx="2" ry="2" />
<text  x="88.93" y="927.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.01%)</title><rect x="823.3" y="613" width="0.2" height="15.0" fill="rgb(228,13,4)" rx="2" ry="2" />
<text  x="826.34" y="623.5" ></text>
</g>
<g >
<title>std::find&lt;int const*, int&gt; (17 samples, 0.06%)</title><rect x="577.0" y="645" width="0.7" height="15.0" fill="rgb(252,56,37)" rx="2" ry="2" />
<text  x="580.02" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base (15 samples, 0.05%)</title><rect x="46.1" y="917" width="0.6" height="15.0" fill="rgb(246,8,29)" rx="2" ry="2" />
<text  x="49.07" y="927.5" ></text>
</g>
<g >
<title>std::__detail::operator!=&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, true&gt; (7 samples, 0.02%)</title><rect x="685.6" y="533" width="0.3" height="15.0" fill="rgb(232,44,50)" rx="2" ry="2" />
<text  x="688.60" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_ptr (4 samples, 0.01%)</title><rect x="40.9" y="917" width="0.2" height="15.0" fill="rgb(250,176,25)" rx="2" ry="2" />
<text  x="43.95" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (18 samples, 0.06%)</title><rect x="334.0" y="709" width="0.8" height="15.0" fill="rgb(249,26,42)" rx="2" ry="2" />
<text  x="337.04" y="719.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;int&gt;::~shared_ptr (3 samples, 0.01%)</title><rect x="805.6" y="645" width="0.1" height="15.0" fill="rgb(215,164,51)" rx="2" ry="2" />
<text  x="808.61" y="655.5" ></text>
</g>
<g >
<title>FlagSet&lt;Game_Interpreter::Keys, 32ul&gt;::operator[] (3 samples, 0.01%)</title><rect x="587.0" y="661" width="0.1" height="15.0" fill="rgb(219,183,9)" rx="2" ry="2" />
<text  x="590.03" y="671.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (22 samples, 0.08%)</title><rect x="576.1" y="645" width="0.9" height="15.0" fill="rgb(254,106,16)" rx="2" ry="2" />
<text  x="579.13" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_destroy (4 samples, 0.01%)</title><rect x="824.0" y="629" width="0.1" height="15.0" fill="rgb(223,176,7)" rx="2" ry="2" />
<text  x="826.95" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::operator[] (3 samples, 0.01%)</title><rect x="416.4" y="661" width="0.2" height="15.0" fill="rgb(208,197,45)" rx="2" ry="2" />
<text  x="419.43" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::operator (3 samples, 0.01%)</title><rect x="138.5" y="917" width="0.1" height="15.0" fill="rgb(242,85,3)" rx="2" ry="2" />
<text  x="141.51" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::basic_string (8 samples, 0.03%)</title><rect x="823.6" y="645" width="0.3" height="15.0" fill="rgb(247,175,17)" rx="2" ry="2" />
<text  x="826.59" y="655.5" ></text>
</g>
<g >
<title>std::_Bit_iterator_base::_Bit_iterator_base (4 samples, 0.01%)</title><rect x="151.8" y="661" width="0.1" height="15.0" fill="rgb(205,90,7)" rx="2" ry="2" />
<text  x="154.77" y="671.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (14 samples, 0.05%)</title><rect x="723.9" y="437" width="0.5" height="15.0" fill="rgb(208,89,42)" rx="2" ry="2" />
<text  x="726.87" y="447.5" ></text>
</g>
<g >
<title>try_to_wake_up (9 samples, 0.03%)</title><rect x="25.2" y="757" width="0.3" height="15.0" fill="rgb(206,57,12)" rx="2" ry="2" />
<text  x="28.17" y="767.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (80 samples, 0.28%)</title><rect x="712.2" y="437" width="3.2" height="15.0" fill="rgb(246,29,49)" rx="2" ry="2" />
<text  x="715.16" y="447.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (3 samples, 0.01%)</title><rect x="1170.6" y="677" width="0.1" height="15.0" fill="rgb(212,208,4)" rx="2" ry="2" />
<text  x="1173.56" y="687.5" ></text>
</g>
<g >
<title>Sprite::BlitScreen (21 samples, 0.07%)</title><rect x="141.8" y="757" width="0.9" height="15.0" fill="rgb(207,169,37)" rx="2" ry="2" />
<text  x="144.84" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (92 samples, 0.32%)</title><rect x="436.5" y="645" width="3.7" height="15.0" fill="rgb(223,160,0)" rx="2" ry="2" />
<text  x="439.48" y="655.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::~_Sp_counted_ptr_inplace (3 samples, 0.01%)</title><rect x="56.1" y="917" width="0.1" height="15.0" fill="rgb(239,119,37)" rx="2" ry="2" />
<text  x="59.08" y="927.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (8 samples, 0.03%)</title><rect x="731.1" y="533" width="0.3" height="15.0" fill="rgb(208,216,52)" rx="2" ry="2" />
<text  x="734.07" y="543.5" ></text>
</g>
<g >
<title>Scene_Map::Update (146 samples, 0.50%)</title><rect x="117.9" y="917" width="5.9" height="15.0" fill="rgb(214,174,42)" rx="2" ry="2" />
<text  x="120.89" y="927.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (121 samples, 0.42%)</title><rect x="127.2" y="773" width="5.0" height="15.0" fill="rgb(247,224,0)" rx="2" ry="2" />
<text  x="130.24" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::CommonEvent, std::allocator&lt;RPG::CommonEvent&gt; &gt;::size (6 samples, 0.02%)</title><rect x="1032.1" y="725" width="0.2" height="15.0" fill="rgb(227,119,21)" rx="2" ry="2" />
<text  x="1035.09" y="735.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (144 samples, 0.50%)</title><rect x="117.9" y="501" width="5.8" height="15.0" fill="rgb(236,138,25)" rx="2" ry="2" />
<text  x="120.89" y="511.5" ></text>
</g>
<g >
<title>main (85 samples, 0.29%)</title><rect x="134.0" y="917" width="3.4" height="15.0" fill="rgb(227,83,1)" rx="2" ry="2" />
<text  x="136.95" y="927.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (306 samples, 1.05%)</title><rect x="104.8" y="789" width="12.4" height="15.0" fill="rgb(243,134,45)" rx="2" ry="2" />
<text  x="107.75" y="799.5" ></text>
</g>
<g >
<title>do_syscall_64 (68 samples, 0.23%)</title><rect x="783.8" y="245" width="2.7" height="15.0" fill="rgb(246,92,26)" rx="2" ry="2" />
<text  x="786.78" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (40 samples, 0.14%)</title><rect x="407.8" y="613" width="1.6" height="15.0" fill="rgb(253,111,32)" rx="2" ry="2" />
<text  x="410.81" y="623.5" ></text>
</g>
<g >
<title>_pixman_multiply_overflows_int (4 samples, 0.01%)</title><rect x="1107.9" y="517" width="0.2" height="15.0" fill="rgb(229,75,33)" rx="2" ry="2" />
<text  x="1110.89" y="527.5" ></text>
</g>
<g >
<title>std::_Bit_iterator_base::_Bit_iterator_base (4 samples, 0.01%)</title><rect x="149.4" y="677" width="0.2" height="15.0" fill="rgb(211,164,26)" rx="2" ry="2" />
<text  x="152.41" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt;::base (4 samples, 0.01%)</title><rect x="41.5" y="917" width="0.2" height="15.0" fill="rgb(237,131,32)" rx="2" ry="2" />
<text  x="44.52" y="927.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (4 samples, 0.01%)</title><rect x="63.2" y="917" width="0.2" height="15.0" fill="rgb(211,219,22)" rx="2" ry="2" />
<text  x="66.19" y="927.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="822.2" y="501" width="0.1" height="15.0" fill="rgb(221,129,17)" rx="2" ry="2" />
<text  x="825.21" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (40 samples, 0.14%)</title><rect x="86.1" y="917" width="1.6" height="15.0" fill="rgb(254,76,45)" rx="2" ry="2" />
<text  x="89.09" y="927.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (16 samples, 0.06%)</title><rect x="726.8" y="469" width="0.7" height="15.0" fill="rgb(233,119,10)" rx="2" ry="2" />
<text  x="729.80" y="479.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (3 samples, 0.01%)</title><rect x="655.6" y="613" width="0.1" height="15.0" fill="rgb(219,73,25)" rx="2" ry="2" />
<text  x="658.55" y="623.5" ></text>
</g>
<g >
<title>Cache::Picture (85 samples, 0.29%)</title><rect x="134.0" y="581" width="3.4" height="15.0" fill="rgb(231,26,37)" rx="2" ry="2" />
<text  x="136.95" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::get (25 samples, 0.09%)</title><rect x="797.4" y="597" width="1.0" height="15.0" fill="rgb(207,84,4)" rx="2" ry="2" />
<text  x="800.36" y="607.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (7 samples, 0.02%)</title><rect x="72.5" y="917" width="0.3" height="15.0" fill="rgb(226,37,20)" rx="2" ry="2" />
<text  x="75.51" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (5 samples, 0.02%)</title><rect x="573.6" y="613" width="0.3" height="15.0" fill="rgb(214,140,20)" rx="2" ry="2" />
<text  x="576.65" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (4 samples, 0.01%)</title><rect x="93.6" y="917" width="0.2" height="15.0" fill="rgb(248,217,1)" rx="2" ry="2" />
<text  x="96.61" y="927.5" ></text>
</g>
<g >
<title>SDL_SoftBlit (9 samples, 0.03%)</title><rect x="142.9" y="725" width="0.4" height="15.0" fill="rgb(233,85,24)" rx="2" ry="2" />
<text  x="145.94" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (7 samples, 0.02%)</title><rect x="414.5" y="597" width="0.3" height="15.0" fill="rgb(230,196,15)" rx="2" ry="2" />
<text  x="417.48" y="607.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (18 samples, 0.06%)</title><rect x="725.9" y="453" width="0.7" height="15.0" fill="rgb(236,214,34)" rx="2" ry="2" />
<text  x="728.87" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (6 samples, 0.02%)</title><rect x="140.6" y="917" width="0.3" height="15.0" fill="rgb(232,43,52)" rx="2" ry="2" />
<text  x="143.62" y="927.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (199 samples, 0.69%)</title><rect x="432.2" y="661" width="8.1" height="15.0" fill="rgb(252,69,30)" rx="2" ry="2" />
<text  x="435.21" y="671.5" ></text>
</g>
<g >
<title>Player::GetTicks (5 samples, 0.02%)</title><rect x="690.3" y="549" width="0.2" height="15.0" fill="rgb(250,59,30)" rx="2" ry="2" />
<text  x="693.28" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (3 samples, 0.01%)</title><rect x="1182.2" y="533" width="0.1" height="15.0" fill="rgb(226,185,22)" rx="2" ry="2" />
<text  x="1185.19" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (22 samples, 0.08%)</title><rect x="87.7" y="917" width="0.9" height="15.0" fill="rgb(209,224,28)" rx="2" ry="2" />
<text  x="90.72" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_local_data (3 samples, 0.01%)</title><rect x="822.9" y="597" width="0.1" height="15.0" fill="rgb(214,196,31)" rx="2" ry="2" />
<text  x="825.90" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (9 samples, 0.03%)</title><rect x="435.0" y="613" width="0.3" height="15.0" fill="rgb(227,187,44)" rx="2" ry="2" />
<text  x="437.97" y="623.5" ></text>
</g>
<g >
<title>create_bits_image_internal (3 samples, 0.01%)</title><rect x="133.8" y="917" width="0.2" height="15.0" fill="rgb(219,213,44)" rx="2" ry="2" />
<text  x="136.83" y="927.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandConditionalBranch (2,023 samples, 6.97%)</title><rect x="379.5" y="693" width="82.3" height="15.0" fill="rgb(251,216,7)" rx="2" ry="2" />
<text  x="382.54" y="703.5" >Game_Inte..</text>
</g>
<g >
<title>Sprite::SetBitmap (1,347 samples, 4.64%)</title><rect x="737.1" y="565" width="54.8" height="15.0" fill="rgb(244,149,18)" rx="2" ry="2" />
<text  x="740.09" y="575.5" >Sprit..</text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (144 samples, 0.50%)</title><rect x="117.9" y="549" width="5.8" height="15.0" fill="rgb(214,150,35)" rx="2" ry="2" />
<text  x="120.89" y="559.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator() (3 samples, 0.01%)</title><rect x="1130.2" y="549" width="0.1" height="15.0" fill="rgb(242,143,54)" rx="2" ry="2" />
<text  x="1133.22" y="559.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (5 samples, 0.02%)</title><rect x="1170.5" y="693" width="0.2" height="15.0" fill="rgb(245,53,15)" rx="2" ry="2" />
<text  x="1173.48" y="703.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandEndLoop (47 samples, 0.16%)</title><rect x="578.6" y="693" width="2.0" height="15.0" fill="rgb(229,81,18)" rx="2" ry="2" />
<text  x="581.65" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (3 samples, 0.01%)</title><rect x="838.6" y="645" width="0.2" height="15.0" fill="rgb(205,32,3)" rx="2" ry="2" />
<text  x="841.64" y="655.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (28 samples, 0.10%)</title><rect x="1173.4" y="661" width="1.1" height="15.0" fill="rgb(218,126,1)" rx="2" ry="2" />
<text  x="1176.41" y="671.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::operator (5 samples, 0.02%)</title><rect x="1031.0" y="757" width="0.2" height="15.0" fill="rgb(225,188,23)" rx="2" ry="2" />
<text  x="1033.99" y="767.5" ></text>
</g>
<g >
<title>handle_mm_fault (8 samples, 0.03%)</title><rect x="1118.9" y="421" width="0.3" height="15.0" fill="rgb(245,209,37)" rx="2" ry="2" />
<text  x="1121.87" y="431.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.01%)</title><rect x="1182.6" y="917" width="0.2" height="15.0" fill="rgb(237,65,51)" rx="2" ry="2" />
<text  x="1185.60" y="927.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_M_head (5 samples, 0.02%)</title><rect x="724.8" y="405" width="0.3" height="15.0" fill="rgb(223,0,40)" rx="2" ry="2" />
<text  x="727.85" y="415.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (5 samples, 0.02%)</title><rect x="1177.4" y="709" width="0.2" height="15.0" fill="rgb(211,77,9)" rx="2" ry="2" />
<text  x="1180.35" y="719.5" ></text>
</g>
<g >
<title>Sprite::SetAngle (3 samples, 0.01%)</title><rect x="1157.0" y="741" width="0.1" height="15.0" fill="rgb(229,221,14)" rx="2" ry="2" />
<text  x="1160.02" y="751.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::swap (7 samples, 0.02%)</title><rect x="65.2" y="917" width="0.3" height="15.0" fill="rgb(252,199,22)" rx="2" ry="2" />
<text  x="68.19" y="927.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (43 samples, 0.15%)</title><rect x="29.8" y="917" width="1.8" height="15.0" fill="rgb(227,74,51)" rx="2" ry="2" />
<text  x="32.85" y="927.5" ></text>
</g>
<g >
<title>_mm_mullo_epi16 (6 samples, 0.02%)</title><rect x="1079.4" y="629" width="0.3" height="15.0" fill="rgb(217,44,32)" rx="2" ry="2" />
<text  x="1082.43" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1,061 samples, 3.66%)</title><rect x="98.4" y="933" width="43.2" height="15.0" fill="rgb(247,79,1)" rx="2" ry="2" />
<text  x="101.41" y="943.5" >[unk..</text>
</g>
<g >
<title>clear_page_erms (58 samples, 0.20%)</title><rect x="1091.1" y="581" width="2.4" height="15.0" fill="rgb(219,227,32)" rx="2" ry="2" />
<text  x="1094.10" y="591.5" ></text>
</g>
<g >
<title>Bitmap::height (12 samples, 0.04%)</title><rect x="1146.5" y="725" width="0.5" height="15.0" fill="rgb(216,196,38)" rx="2" ry="2" />
<text  x="1149.49" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (11 samples, 0.04%)</title><rect x="876.0" y="677" width="0.5" height="15.0" fill="rgb(238,60,10)" rx="2" ry="2" />
<text  x="879.05" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (410 samples, 1.41%)</title><rect x="852.6" y="661" width="16.7" height="15.0" fill="rgb(241,30,4)" rx="2" ry="2" />
<text  x="855.62" y="671.5" ></text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;Bitmap&gt;, true&gt;::~_Sp_ebo_helper (3 samples, 0.01%)</title><rect x="745.8" y="437" width="0.1" height="15.0" fill="rgb(238,139,2)" rx="2" ry="2" />
<text  x="748.75" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (103 samples, 0.35%)</title><rect x="1171.0" y="725" width="4.2" height="15.0" fill="rgb(222,184,39)" rx="2" ry="2" />
<text  x="1173.97" y="735.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (65 samples, 0.22%)</title><rect x="134.8" y="533" width="2.6" height="15.0" fill="rgb(250,156,24)" rx="2" ry="2" />
<text  x="137.77" y="543.5" ></text>
</g>
<g >
<title>SDL_UDEV_Poll (3 samples, 0.01%)</title><rect x="1180.3" y="741" width="0.1" height="15.0" fill="rgb(229,59,2)" rx="2" ry="2" />
<text  x="1183.28" y="751.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (89 samples, 0.31%)</title><rect x="128.5" y="469" width="3.7" height="15.0" fill="rgb(224,46,11)" rx="2" ry="2" />
<text  x="131.54" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_construct&lt;char32_t const*&gt; (7 samples, 0.02%)</title><rect x="823.6" y="597" width="0.3" height="15.0" fill="rgb(219,195,6)" rx="2" ry="2" />
<text  x="826.63" y="607.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_M_head (3 samples, 0.01%)</title><rect x="726.5" y="421" width="0.1" height="15.0" fill="rgb(254,89,20)" rx="2" ry="2" />
<text  x="729.48" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_S_value (15 samples, 0.05%)</title><rect x="1132.5" y="485" width="0.6" height="15.0" fill="rgb(229,191,43)" rx="2" ry="2" />
<text  x="1135.50" y="495.5" ></text>
</g>
<g >
<title>std::replace&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (402 samples, 1.39%)</title><rect x="663.2" y="517" width="16.4" height="15.0" fill="rgb(239,210,18)" rx="2" ry="2" />
<text  x="666.24" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::operator== (6 samples, 0.02%)</title><rect x="1129.9" y="549" width="0.3" height="15.0" fill="rgb(213,163,34)" rx="2" ry="2" />
<text  x="1132.93" y="559.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::CommonEvent&gt; (11 samples, 0.04%)</title><rect x="1031.9" y="741" width="0.4" height="15.0" fill="rgb(210,42,30)" rx="2" ry="2" />
<text  x="1034.89" y="751.5" ></text>
</g>
<g >
<title>std::max&lt;int&gt; (4 samples, 0.01%)</title><rect x="74.3" y="917" width="0.2" height="15.0" fill="rgb(249,15,9)" rx="2" ry="2" />
<text  x="77.34" y="927.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (22 samples, 0.08%)</title><rect x="784.5" y="37" width="0.9" height="15.0" fill="rgb(231,69,40)" rx="2" ry="2" />
<text  x="787.55" y="47.5" ></text>
</g>
<g >
<title>Rect::Rect (9 samples, 0.03%)</title><rect x="1158.3" y="709" width="0.4" height="15.0" fill="rgb(227,50,36)" rx="2" ry="2" />
<text  x="1161.32" y="719.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (3 samples, 0.01%)</title><rect x="95.6" y="917" width="0.1" height="15.0" fill="rgb(208,178,4)" rx="2" ry="2" />
<text  x="98.56" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (10 samples, 0.03%)</title><rect x="838.6" y="661" width="0.4" height="15.0" fill="rgb(237,92,2)" rx="2" ry="2" />
<text  x="841.55" y="671.5" ></text>
</g>
<g >
<title>std::operator- (14 samples, 0.05%)</title><rect x="150.5" y="693" width="0.5" height="15.0" fill="rgb(217,64,19)" rx="2" ry="2" />
<text  x="153.46" y="703.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_M_head (15 samples, 0.05%)</title><rect x="714.8" y="405" width="0.6" height="15.0" fill="rgb(206,98,34)" rx="2" ry="2" />
<text  x="717.80" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, bool&gt;::_M_head (10 samples, 0.03%)</title><rect x="704.3" y="389" width="0.4" height="15.0" fill="rgb(212,119,35)" rx="2" ry="2" />
<text  x="707.27" y="399.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (3 samples, 0.01%)</title><rect x="1179.8" y="677" width="0.1" height="15.0" fill="rgb(248,78,2)" rx="2" ry="2" />
<text  x="1182.79" y="687.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::_M_ptr (4 samples, 0.01%)</title><rect x="66.7" y="917" width="0.2" height="15.0" fill="rgb(230,95,15)" rx="2" ry="2" />
<text  x="69.73" y="927.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (13 samples, 0.04%)</title><rect x="1177.1" y="741" width="0.5" height="15.0" fill="rgb(219,130,1)" rx="2" ry="2" />
<text  x="1180.07" y="751.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (3 samples, 0.01%)</title><rect x="707.8" y="437" width="0.1" height="15.0" fill="rgb(235,184,22)" rx="2" ry="2" />
<text  x="710.81" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_value (4 samples, 0.01%)</title><rect x="93.0" y="917" width="0.2" height="15.0" fill="rgb(228,85,44)" rx="2" ry="2" />
<text  x="96.04" y="927.5" ></text>
</g>
<g >
<title>Game_Interpreter::ValueOrVariable (3 samples, 0.01%)</title><rect x="588.5" y="677" width="0.2" height="15.0" fill="rgb(236,69,40)" rx="2" ry="2" />
<text  x="591.53" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (7 samples, 0.02%)</title><rect x="1160.2" y="661" width="0.3" height="15.0" fill="rgb(230,69,6)" rx="2" ry="2" />
<text  x="1163.19" y="671.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator bool (24 samples, 0.08%)</title><rect x="818.9" y="661" width="0.9" height="15.0" fill="rgb(240,75,39)" rx="2" ry="2" />
<text  x="821.87" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (53 samples, 0.18%)</title><rect x="114.9" y="485" width="2.1" height="15.0" fill="rgb(212,116,38)" rx="2" ry="2" />
<text  x="117.88" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (18 samples, 0.06%)</title><rect x="1168.8" y="741" width="0.7" height="15.0" fill="rgb(226,47,51)" rx="2" ry="2" />
<text  x="1171.81" y="751.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (12 samples, 0.04%)</title><rect x="1095.1" y="597" width="0.5" height="15.0" fill="rgb(217,127,16)" rx="2" ry="2" />
<text  x="1098.12" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (61 samples, 0.21%)</title><rect x="708.7" y="421" width="2.5" height="15.0" fill="rgb(227,69,9)" rx="2" ry="2" />
<text  x="711.74" y="431.5" ></text>
</g>
<g >
<title>Sprite::SetOy (4 samples, 0.01%)</title><rect x="1161.1" y="741" width="0.1" height="15.0" fill="rgb(253,227,30)" rx="2" ry="2" />
<text  x="1164.09" y="751.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (3 samples, 0.01%)</title><rect x="1117.8" y="341" width="0.1" height="15.0" fill="rgb(207,195,29)" rx="2" ry="2" />
<text  x="1120.82" y="351.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="105.1" y="453" width="0.1" height="15.0" fill="rgb(210,19,25)" rx="2" ry="2" />
<text  x="108.08" y="463.5" ></text>
</g>
<g >
<title>PicPointerPatch::ReplaceName (103 samples, 0.35%)</title><rect x="821.1" y="677" width="4.2" height="15.0" fill="rgb(221,134,12)" rx="2" ry="2" />
<text  x="824.07" y="687.5" ></text>
</g>
<g >
<title>Game_Map::SetNeedRefresh (5 samples, 0.02%)</title><rect x="909.8" y="693" width="0.2" height="15.0" fill="rgb(248,182,52)" rx="2" ry="2" />
<text  x="912.84" y="703.5" ></text>
</g>
<g >
<title>Player::IsRPG2k3 (24 samples, 0.08%)</title><rect x="535.5" y="661" width="1.0" height="15.0" fill="rgb(248,128,3)" rx="2" ry="2" />
<text  x="538.54" y="671.5" ></text>
</g>
<g >
<title>do_nanosleep (23 samples, 0.08%)</title><rect x="1181.2" y="661" width="1.0" height="15.0" fill="rgb(214,28,53)" rx="2" ry="2" />
<text  x="1184.22" y="671.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (20 samples, 0.07%)</title><rect x="703.9" y="421" width="0.8" height="15.0" fill="rgb(249,5,9)" rx="2" ry="2" />
<text  x="706.86" y="431.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Game_Picture*, false&gt;::_M_head (5 samples, 0.02%)</title><rect x="51.8" y="917" width="0.2" height="15.0" fill="rgb(238,174,29)" rx="2" ry="2" />
<text  x="54.81" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (14 samples, 0.05%)</title><rect x="45.3" y="917" width="0.6" height="15.0" fill="rgb(215,94,28)" rx="2" ry="2" />
<text  x="48.30" y="927.5" ></text>
</g>
<g >
<title>do_mmap (18 samples, 0.06%)</title><rect x="1115.5" y="341" width="0.7" height="15.0" fill="rgb(230,134,25)" rx="2" ry="2" />
<text  x="1118.50" y="351.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (9 samples, 0.03%)</title><rect x="56.8" y="917" width="0.4" height="15.0" fill="rgb(209,160,5)" rx="2" ry="2" />
<text  x="59.85" y="927.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (132 samples, 0.45%)</title><rect x="746.9" y="405" width="5.4" height="15.0" fill="rgb(236,91,43)" rx="2" ry="2" />
<text  x="749.93" y="415.5" ></text>
</g>
<g >
<title>_mm_xor_si128 (10 samples, 0.03%)</title><rect x="1078.5" y="629" width="0.4" height="15.0" fill="rgb(211,102,45)" rx="2" ry="2" />
<text  x="1081.49" y="639.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustShowParams (9 samples, 0.03%)</title><rect x="35.3" y="917" width="0.4" height="15.0" fill="rgb(213,10,3)" rx="2" ry="2" />
<text  x="38.30" y="927.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;2ul, bool&gt; (13 samples, 0.04%)</title><rect x="704.1" y="405" width="0.6" height="15.0" fill="rgb(237,226,9)" rx="2" ry="2" />
<text  x="707.15" y="415.5" ></text>
</g>
<g >
<title>Game_Picture::SyncCurrentToFinish (48 samples, 0.17%)</title><rect x="806.5" y="661" width="2.0" height="15.0" fill="rgb(221,122,53)" rx="2" ry="2" />
<text  x="809.55" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (14 samples, 0.05%)</title><rect x="662.1" y="501" width="0.6" height="15.0" fill="rgb(247,122,3)" rx="2" ry="2" />
<text  x="665.14" y="511.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_destroy (5 samples, 0.02%)</title><rect x="55.8" y="917" width="0.2" height="15.0" fill="rgb(235,108,20)" rx="2" ry="2" />
<text  x="58.83" y="927.5" ></text>
</g>
<g >
<title>Window_Selectable::Update (4 samples, 0.01%)</title><rect x="1179.6" y="757" width="0.2" height="15.0" fill="rgb(240,180,53)" rx="2" ry="2" />
<text  x="1182.63" y="767.5" ></text>
</g>
<g >
<title>Color::Color (10 samples, 0.03%)</title><rect x="1134.9" y="581" width="0.4" height="15.0" fill="rgb(228,53,40)" rx="2" ry="2" />
<text  x="1137.86" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (10 samples, 0.03%)</title><rect x="686.6" y="485" width="0.4" height="15.0" fill="rgb(228,196,6)" rx="2" ry="2" />
<text  x="689.62" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (22 samples, 0.08%)</title><rect x="83.2" y="917" width="0.9" height="15.0" fill="rgb(246,113,11)" rx="2" ry="2" />
<text  x="86.20" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_pred&lt;Input::UiSource::Update()::{lambda(int)#1}&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (9 samples, 0.03%)</title><rect x="144.0" y="709" width="0.4" height="15.0" fill="rgb(215,32,35)" rx="2" ry="2" />
<text  x="147.00" y="719.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;2ul, bool, false&gt;::_Head_base&lt;bool&amp;&gt; (7 samples, 0.02%)</title><rect x="735.1" y="485" width="0.3" height="15.0" fill="rgb(236,211,9)" rx="2" ry="2" />
<text  x="738.14" y="495.5" ></text>
</g>
<g >
<title>__handle_mm_fault (8 samples, 0.03%)</title><rect x="1118.9" y="405" width="0.3" height="15.0" fill="rgb(217,23,53)" rx="2" ry="2" />
<text  x="1121.87" y="415.5" ></text>
</g>
<g >
<title>malloc (115 samples, 0.40%)</title><rect x="1122.5" y="533" width="4.7" height="15.0" fill="rgb(206,64,27)" rx="2" ry="2" />
<text  x="1125.53" y="543.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (98 samples, 0.34%)</title><rect x="1123.2" y="517" width="4.0" height="15.0" fill="rgb(244,81,30)" rx="2" ry="2" />
<text  x="1126.22" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_M_begin (5 samples, 0.02%)</title><rect x="1131.0" y="517" width="0.2" height="15.0" fill="rgb(230,156,21)" rx="2" ry="2" />
<text  x="1133.95" y="527.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char32_t const*&gt;::pointer_to (3 samples, 0.01%)</title><rect x="822.9" y="581" width="0.1" height="15.0" fill="rgb(207,137,0)" rx="2" ry="2" />
<text  x="825.90" y="591.5" ></text>
</g>
<g >
<title>unmap_single_vma (23 samples, 0.08%)</title><rect x="785.6" y="149" width="0.9" height="15.0" fill="rgb(236,170,10)" rx="2" ry="2" />
<text  x="788.61" y="159.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_invoke (3,454 samples, 11.90%)</title><rect x="655.7" y="613" width="140.4" height="15.0" fill="rgb(233,85,31)" rx="2" ry="2" />
<text  x="658.67" y="623.5" >std::_Function_ha..</text>
</g>
<g >
<title>Game_Character::UpdateMovement (43 samples, 0.15%)</title><rect x="1033.1" y="757" width="1.7" height="15.0" fill="rgb(243,133,14)" rx="2" ry="2" />
<text  x="1036.07" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (144 samples, 0.50%)</title><rect x="117.9" y="629" width="5.8" height="15.0" fill="rgb(248,81,3)" rx="2" ry="2" />
<text  x="120.89" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (3 samples, 0.01%)</title><rect x="438.8" y="613" width="0.1" height="15.0" fill="rgb(205,175,6)" rx="2" ry="2" />
<text  x="441.80" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (18 samples, 0.06%)</title><rect x="408.7" y="597" width="0.7" height="15.0" fill="rgb(222,37,53)" rx="2" ry="2" />
<text  x="411.70" y="607.5" ></text>
</g>
<g >
<title>Opacity::IsOpaque (6 samples, 0.02%)</title><rect x="1053.1" y="725" width="0.3" height="15.0" fill="rgb(209,29,13)" rx="2" ry="2" />
<text  x="1056.11" y="735.5" ></text>
</g>
<g >
<title>Player::Run (25,591 samples, 88.20%)</title><rect x="141.8" y="885" width="1040.7" height="15.0" fill="rgb(243,197,42)" rx="2" ry="2" />
<text  x="144.80" y="895.5" >Player::Run</text>
</g>
<g >
<title>Game_Screen::UpdateGraphics (3,315 samples, 11.42%)</title><rect x="1044.2" y="773" width="134.8" height="15.0" fill="rgb(242,29,14)" rx="2" ry="2" />
<text  x="1047.17" y="783.5" >Game_Screen::Upda..</text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (12 samples, 0.04%)</title><rect x="576.3" y="629" width="0.4" height="15.0" fill="rgb(248,110,34)" rx="2" ry="2" />
<text  x="579.25" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (6 samples, 0.02%)</title><rect x="335.3" y="693" width="0.2" height="15.0" fill="rgb(229,17,32)" rx="2" ry="2" />
<text  x="338.26" y="703.5" ></text>
</g>
<g >
<title>unmapped_area_topdown (8 samples, 0.03%)</title><rect x="1115.5" y="293" width="0.3" height="15.0" fill="rgb(237,174,9)" rx="2" ry="2" />
<text  x="1118.50" y="303.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (96 samples, 0.33%)</title><rect x="128.3" y="517" width="3.9" height="15.0" fill="rgb(231,177,14)" rx="2" ry="2" />
<text  x="131.26" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (17 samples, 0.06%)</title><rect x="105.2" y="597" width="0.7" height="15.0" fill="rgb(238,110,26)" rx="2" ry="2" />
<text  x="108.20" y="607.5" ></text>
</g>
<g >
<title>ttwu_do_activate (8 samples, 0.03%)</title><rect x="25.2" y="741" width="0.3" height="15.0" fill="rgb(233,103,37)" rx="2" ry="2" />
<text  x="28.21" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (1,454 samples, 5.01%)</title><rect x="204.8" y="709" width="59.1" height="15.0" fill="rgb(236,158,37)" rx="2" ry="2" />
<text  x="207.76" y="719.5" >std::v..</text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (161 samples, 0.55%)</title><rect x="954.1" y="677" width="6.6" height="15.0" fill="rgb(230,5,12)" rx="2" ry="2" />
<text  x="957.13" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (18 samples, 0.06%)</title><rect x="570.8" y="677" width="0.7" height="15.0" fill="rgb(212,146,33)" rx="2" ry="2" />
<text  x="573.80" y="687.5" ></text>
</g>
<g >
<title>_mm_loadu_si128 (225 samples, 0.78%)</title><rect x="1068.9" y="645" width="9.2" height="15.0" fill="rgb(211,75,54)" rx="2" ry="2" />
<text  x="1071.93" y="655.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::swap (12 samples, 0.04%)</title><rect x="1167.1" y="709" width="0.5" height="15.0" fill="rgb(249,126,26)" rx="2" ry="2" />
<text  x="1170.06" y="719.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Sprite*, false&gt;::_M_head (15 samples, 0.05%)</title><rect x="1173.9" y="645" width="0.6" height="15.0" fill="rgb(244,95,12)" rx="2" ry="2" />
<text  x="1176.94" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_valptr (12 samples, 0.04%)</title><rect x="697.4" y="469" width="0.4" height="15.0" fill="rgb(254,141,17)" rx="2" ry="2" />
<text  x="700.36" y="479.5" ></text>
</g>
<g >
<title>FileRequestAsync::BindStart (145 samples, 0.50%)</title><rect x="117.9" y="741" width="5.9" height="15.0" fill="rgb(243,194,36)" rx="2" ry="2" />
<text  x="120.89" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (3 samples, 0.01%)</title><rect x="82.5" y="917" width="0.1" height="15.0" fill="rgb(213,14,51)" rx="2" ry="2" />
<text  x="85.51" y="927.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandControlSwitches (5 samples, 0.02%)</title><rect x="461.8" y="693" width="0.2" height="15.0" fill="rgb(224,176,27)" rx="2" ry="2" />
<text  x="464.81" y="703.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_ptr (19 samples, 0.07%)</title><rect x="1102.0" y="645" width="0.8" height="15.0" fill="rgb(217,24,37)" rx="2" ry="2" />
<text  x="1105.00" y="655.5" ></text>
</g>
<g >
<title>schedule (23 samples, 0.08%)</title><rect x="1181.2" y="645" width="1.0" height="15.0" fill="rgb(205,117,30)" rx="2" ry="2" />
<text  x="1184.22" y="655.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (7 samples, 0.02%)</title><rect x="1150.7" y="725" width="0.3" height="15.0" fill="rgb(237,68,30)" rx="2" ry="2" />
<text  x="1153.72" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::end (9 samples, 0.03%)</title><rect x="1130.3" y="533" width="0.4" height="15.0" fill="rgb(231,73,28)" rx="2" ry="2" />
<text  x="1133.34" y="543.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}::operator() (17 samples, 0.06%)</title><rect x="117.2" y="661" width="0.7" height="15.0" fill="rgb(227,204,4)" rx="2" ry="2" />
<text  x="120.20" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::operator* (3 samples, 0.01%)</title><rect x="1129.0" y="565" width="0.2" height="15.0" fill="rgb(239,129,15)" rx="2" ry="2" />
<text  x="1132.04" y="575.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::_M_ptr (13 samples, 0.04%)</title><rect x="1168.2" y="709" width="0.5" height="15.0" fill="rgb(221,3,51)" rx="2" ry="2" />
<text  x="1171.20" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (14 samples, 0.05%)</title><rect x="953.5" y="677" width="0.5" height="15.0" fill="rgb(216,78,27)" rx="2" ry="2" />
<text  x="956.48" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (5 samples, 0.02%)</title><rect x="1042.3" y="757" width="0.2" height="15.0" fill="rgb(224,216,25)" rx="2" ry="2" />
<text  x="1045.26" y="767.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_invoke (85 samples, 0.29%)</title><rect x="134.0" y="629" width="3.4" height="15.0" fill="rgb(212,81,50)" rx="2" ry="2" />
<text  x="136.95" y="639.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (53 samples, 0.18%)</title><rect x="639.4" y="597" width="2.2" height="15.0" fill="rgb(218,18,19)" rx="2" ry="2" />
<text  x="642.45" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt; (5 samples, 0.02%)</title><rect x="1034.5" y="709" width="0.2" height="15.0" fill="rgb(252,134,18)" rx="2" ry="2" />
<text  x="1037.53" y="719.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (17 samples, 0.06%)</title><rect x="105.2" y="517" width="0.7" height="15.0" fill="rgb(215,180,3)" rx="2" ry="2" />
<text  x="108.20" y="527.5" ></text>
</g>
<g >
<title>operator new (51 samples, 0.18%)</title><rect x="98.7" y="501" width="2.1" height="15.0" fill="rgb(234,182,53)" rx="2" ry="2" />
<text  x="101.70" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (16 samples, 0.06%)</title><rect x="109.8" y="517" width="0.7" height="15.0" fill="rgb(241,47,16)" rx="2" ry="2" />
<text  x="112.84" y="527.5" ></text>
</g>
<g >
<title>strlen (5 samples, 0.02%)</title><rect x="801.0" y="629" width="0.2" height="15.0" fill="rgb(207,217,43)" rx="2" ry="2" />
<text  x="804.02" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::_M_ptr (13 samples, 0.04%)</title><rect x="1027.9" y="709" width="0.6" height="15.0" fill="rgb(245,125,20)" rx="2" ry="2" />
<text  x="1030.94" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (8 samples, 0.03%)</title><rect x="794.0" y="469" width="0.3" height="15.0" fill="rgb(238,41,9)" rx="2" ry="2" />
<text  x="796.98" y="479.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (209 samples, 0.72%)</title><rect x="611.0" y="613" width="8.5" height="15.0" fill="rgb(210,176,33)" rx="2" ry="2" />
<text  x="614.02" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h1 (4 samples, 0.01%)</title><rect x="689.3" y="485" width="0.2" height="15.0" fill="rgb(233,80,29)" rx="2" ry="2" />
<text  x="692.35" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (27 samples, 0.09%)</title><rect x="727.9" y="517" width="1.1" height="15.0" fill="rgb(213,87,51)" rx="2" ry="2" />
<text  x="730.90" y="527.5" ></text>
</g>
<g >
<title>operator delete (67 samples, 0.23%)</title><rect x="102.0" y="517" width="2.8" height="15.0" fill="rgb(238,217,12)" rx="2" ry="2" />
<text  x="105.03" y="527.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.02%)</title><rect x="824.7" y="581" width="0.2" height="15.0" fill="rgb(233,108,37)" rx="2" ry="2" />
<text  x="827.73" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_ptr (4 samples, 0.01%)</title><rect x="1129.8" y="517" width="0.1" height="15.0" fill="rgb(246,145,52)" rx="2" ry="2" />
<text  x="1132.77" y="527.5" ></text>
</g>
<g >
<title>Player::Run (149 samples, 0.51%)</title><rect x="98.7" y="917" width="6.1" height="15.0" fill="rgb(250,205,19)" rx="2" ry="2" />
<text  x="101.70" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (12 samples, 0.04%)</title><rect x="727.0" y="453" width="0.5" height="15.0" fill="rgb(210,227,32)" rx="2" ry="2" />
<text  x="729.96" y="463.5" ></text>
</g>
<g >
<title>__interceptor_free (161 samples, 0.55%)</title><rect x="753.4" y="405" width="6.5" height="15.0" fill="rgb(241,131,53)" rx="2" ry="2" />
<text  x="756.36" y="415.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (11 samples, 0.04%)</title><rect x="104.8" y="613" width="0.4" height="15.0" fill="rgb(240,171,34)" rx="2" ry="2" />
<text  x="107.75" y="623.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&amp;&gt; (4 samples, 0.01%)</title><rect x="69.1" y="917" width="0.2" height="15.0" fill="rgb(242,98,22)" rx="2" ry="2" />
<text  x="72.13" y="927.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (17 samples, 0.06%)</title><rect x="720.1" y="469" width="0.7" height="15.0" fill="rgb(236,219,51)" rx="2" ry="2" />
<text  x="723.13" y="479.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (1,156 samples, 3.98%)</title><rect x="1099.3" y="725" width="47.0" height="15.0" fill="rgb(205,82,42)" rx="2" ry="2" />
<text  x="1102.31" y="735.5" >std:..</text>
</g>
<g >
<title>_pixman_bits_image_init (10 samples, 0.03%)</title><rect x="133.1" y="917" width="0.4" height="15.0" fill="rgb(206,178,8)" rx="2" ry="2" />
<text  x="136.14" y="927.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (149 samples, 0.51%)</title><rect x="98.7" y="661" width="6.1" height="15.0" fill="rgb(236,66,54)" rx="2" ry="2" />
<text  x="101.70" y="671.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (121 samples, 0.42%)</title><rect x="127.2" y="805" width="5.0" height="15.0" fill="rgb(217,183,1)" rx="2" ry="2" />
<text  x="130.24" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (3 samples, 0.01%)</title><rect x="736.3" y="485" width="0.1" height="15.0" fill="rgb(250,105,16)" rx="2" ry="2" />
<text  x="739.32" y="495.5" ></text>
</g>
<g >
<title>Bitmap::GetRect (20 samples, 0.07%)</title><rect x="1157.9" y="725" width="0.8" height="15.0" fill="rgb(241,138,20)" rx="2" ry="2" />
<text  x="1160.87" y="735.5" ></text>
</g>
<g >
<title>pix_multiply_2x128 (19 samples, 0.07%)</title><rect x="1078.9" y="645" width="0.8" height="15.0" fill="rgb(234,3,39)" rx="2" ry="2" />
<text  x="1081.90" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_value (19 samples, 0.07%)</title><rect x="697.1" y="485" width="0.7" height="15.0" fill="rgb(249,204,14)" rx="2" ry="2" />
<text  x="700.07" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (12 samples, 0.04%)</title><rect x="1169.5" y="741" width="0.5" height="15.0" fill="rgb(205,41,2)" rx="2" ry="2" />
<text  x="1172.54" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (23 samples, 0.08%)</title><rect x="850.6" y="661" width="1.0" height="15.0" fill="rgb(251,50,44)" rx="2" ry="2" />
<text  x="853.63" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (539 samples, 1.86%)</title><rect x="224.1" y="693" width="21.9" height="15.0" fill="rgb(234,79,16)" rx="2" ry="2" />
<text  x="227.11" y="703.5" >_..</text>
</g>
<g >
<title>std::get&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (10 samples, 0.03%)</title><rect x="70.6" y="917" width="0.4" height="15.0" fill="rgb(253,42,27)" rx="2" ry="2" />
<text  x="73.59" y="927.5" ></text>
</g>
<g >
<title>unmap_page_range (3 samples, 0.01%)</title><rect x="783.6" y="165" width="0.1" height="15.0" fill="rgb(242,15,1)" rx="2" ry="2" />
<text  x="786.61" y="175.5" ></text>
</g>
<g >
<title>std::map&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, (anonymous namespace)::CacheItem, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (144 samples, 0.50%)</title><rect x="117.9" y="645" width="5.8" height="15.0" fill="rgb(221,66,51)" rx="2" ry="2" />
<text  x="120.89" y="655.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (10 samples, 0.03%)</title><rect x="736.7" y="549" width="0.4" height="15.0" fill="rgb(231,184,51)" rx="2" ry="2" />
<text  x="739.68" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::size (33 samples, 0.11%)</title><rect x="415.1" y="645" width="1.3" height="15.0" fill="rgb(217,35,32)" rx="2" ry="2" />
<text  x="418.09" y="655.5" ></text>
</g>
<g >
<title>__fget (5 samples, 0.02%)</title><rect x="19.4" y="837" width="0.2" height="15.0" fill="rgb(243,11,17)" rx="2" ry="2" />
<text  x="22.39" y="847.5" ></text>
</g>
<g >
<title>pixman_image_unref (903 samples, 3.11%)</title><rect x="753.4" y="421" width="36.7" height="15.0" fill="rgb(211,212,27)" rx="2" ry="2" />
<text  x="756.36" y="431.5" >pix..</text>
</g>
<g >
<title>_mm_unpacklo_epi8 (35 samples, 0.12%)</title><rect x="1080.6" y="645" width="1.4" height="15.0" fill="rgb(246,227,21)" rx="2" ry="2" />
<text  x="1083.61" y="655.5" ></text>
</g>
<g >
<title>operator new (214 samples, 0.74%)</title><rect x="1136.7" y="597" width="8.7" height="15.0" fill="rgb(247,125,42)" rx="2" ry="2" />
<text  x="1139.73" y="607.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (7 samples, 0.02%)</title><rect x="1135.5" y="549" width="0.3" height="15.0" fill="rgb(236,128,37)" rx="2" ry="2" />
<text  x="1138.51" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_mutate (25 samples, 0.09%)</title><rect x="821.6" y="629" width="1.1" height="15.0" fill="rgb(221,210,17)" rx="2" ry="2" />
<text  x="824.64" y="639.5" ></text>
</g>
<g >
<title>__vfs_read (12 samples, 0.04%)</title><rect x="24.2" y="853" width="0.5" height="15.0" fill="rgb(210,71,45)" rx="2" ry="2" />
<text  x="27.19" y="863.5" ></text>
</g>
<g >
<title>pollwake (9 samples, 0.03%)</title><rect x="25.2" y="789" width="0.3" height="15.0" fill="rgb(239,1,39)" rx="2" ry="2" />
<text  x="28.17" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (6 samples, 0.02%)</title><rect x="580.3" y="677" width="0.3" height="15.0" fill="rgb(234,67,38)" rx="2" ry="2" />
<text  x="583.32" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt;::begin (106 samples, 0.37%)</title><rect x="992.4" y="709" width="4.3" height="15.0" fill="rgb(206,20,4)" rx="2" ry="2" />
<text  x="995.36" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (8 samples, 0.03%)</title><rect x="58.9" y="917" width="0.3" height="15.0" fill="rgb(208,220,51)" rx="2" ry="2" />
<text  x="61.92" y="927.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="1143.8" y="501" width="0.1" height="15.0" fill="rgb(235,16,51)" rx="2" ry="2" />
<text  x="1146.76" y="511.5" ></text>
</g>
<g >
<title>save_128_aligned (18 samples, 0.06%)</title><rect x="1079.7" y="661" width="0.7" height="15.0" fill="rgb(219,107,54)" rx="2" ry="2" />
<text  x="1082.67" y="671.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (49 samples, 0.17%)</title><rect x="811.3" y="613" width="2.0" height="15.0" fill="rgb(248,28,17)" rx="2" ry="2" />
<text  x="814.27" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (26 samples, 0.09%)</title><rect x="851.6" y="661" width="1.0" height="15.0" fill="rgb(249,192,15)" rx="2" ry="2" />
<text  x="854.57" y="671.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (4 samples, 0.01%)</title><rect x="51.4" y="917" width="0.1" height="15.0" fill="rgb(225,190,34)" rx="2" ry="2" />
<text  x="54.36" y="927.5" ></text>
</g>
<g >
<title>__x64_sys_ppoll (116 samples, 0.40%)</title><rect x="19.2" y="901" width="4.7" height="15.0" fill="rgb(251,10,33)" rx="2" ry="2" />
<text  x="22.15" y="911.5" ></text>
</g>
<g >
<title>sock_poll (4 samples, 0.01%)</title><rect x="23.7" y="869" width="0.1" height="15.0" fill="rgb(216,184,6)" rx="2" ry="2" />
<text  x="26.66" y="879.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Transition*, false&gt;::_M_head (10 samples, 0.03%)</title><rect x="52.7" y="917" width="0.4" height="15.0" fill="rgb(207,78,36)" rx="2" ry="2" />
<text  x="55.70" y="927.5" ></text>
</g>
<g >
<title>is_zero (85 samples, 0.29%)</title><rect x="1065.5" y="661" width="3.4" height="15.0" fill="rgb(251,131,0)" rx="2" ry="2" />
<text  x="1068.48" y="671.5" ></text>
</g>
<g >
<title>Game_Picture::SetNonEffectParams (20 samples, 0.07%)</title><rect x="805.7" y="661" width="0.8" height="15.0" fill="rgb(207,180,0)" rx="2" ry="2" />
<text  x="808.74" y="671.5" ></text>
</g>
<g >
<title>Bitmap::GetOperator (5 samples, 0.02%)</title><rect x="1052.9" y="725" width="0.2" height="15.0" fill="rgb(215,227,4)" rx="2" ry="2" />
<text  x="1055.91" y="735.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (9 samples, 0.03%)</title><rect x="1028.1" y="693" width="0.4" height="15.0" fill="rgb(206,203,52)" rx="2" ry="2" />
<text  x="1031.10" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;Bitmap&gt;::_M_ptr (8 samples, 0.03%)</title><rect x="1102.4" y="629" width="0.4" height="15.0" fill="rgb(230,126,6)" rx="2" ry="2" />
<text  x="1105.44" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (18 samples, 0.06%)</title><rect x="334.8" y="709" width="0.7" height="15.0" fill="rgb(230,41,13)" rx="2" ry="2" />
<text  x="337.77" y="719.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (26 samples, 0.09%)</title><rect x="825.5" y="645" width="1.1" height="15.0" fill="rgb(210,198,0)" rx="2" ry="2" />
<text  x="828.50" y="655.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (85 samples, 0.29%)</title><rect x="134.0" y="645" width="3.4" height="15.0" fill="rgb(206,65,28)" rx="2" ry="2" />
<text  x="136.95" y="655.5" ></text>
</g>
<g >
<title>Cache::Picture (149 samples, 0.51%)</title><rect x="98.7" y="597" width="6.1" height="15.0" fill="rgb(238,126,19)" rx="2" ry="2" />
<text  x="101.70" y="607.5" ></text>
</g>
<g >
<title>core_combine_over_u_sse2_no_mask (7 samples, 0.02%)</title><rect x="142.0" y="645" width="0.2" height="15.0" fill="rgb(208,119,23)" rx="2" ry="2" />
<text  x="144.97" y="655.5" ></text>
</g>
<g >
<title>strlen@plt (5 samples, 0.02%)</title><rect x="801.2" y="629" width="0.2" height="15.0" fill="rgb(231,140,35)" rx="2" ry="2" />
<text  x="804.22" y="639.5" ></text>
</g>
<g >
<title>Blend (31 samples, 0.11%)</title><rect x="1148.7" y="741" width="1.2" height="15.0" fill="rgb(251,29,22)" rx="2" ry="2" />
<text  x="1151.68" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::CommonEvent, std::allocator&lt;RPG::CommonEvent&gt; &gt;::operator[] (3 samples, 0.01%)</title><rect x="1034.0" y="677" width="0.1" height="15.0" fill="rgb(228,52,54)" rx="2" ry="2" />
<text  x="1037.00" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (6 samples, 0.02%)</title><rect x="101.8" y="485" width="0.2" height="15.0" fill="rgb(244,127,8)" rx="2" ry="2" />
<text  x="104.79" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (12 samples, 0.04%)</title><rect x="412.9" y="597" width="0.5" height="15.0" fill="rgb(233,91,37)" rx="2" ry="2" />
<text  x="415.89" y="607.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned (14 samples, 0.05%)</title><rect x="826.0" y="629" width="0.6" height="15.0" fill="rgb(210,19,40)" rx="2" ry="2" />
<text  x="828.99" y="639.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (97 samples, 0.33%)</title><rect x="105.9" y="501" width="3.9" height="15.0" fill="rgb(252,185,10)" rx="2" ry="2" />
<text  x="108.89" y="511.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (10 samples, 0.03%)</title><rect x="688.4" y="437" width="0.4" height="15.0" fill="rgb(254,144,10)" rx="2" ry="2" />
<text  x="691.37" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_M_begin (12 samples, 0.04%)</title><rect x="694.1" y="517" width="0.5" height="15.0" fill="rgb(226,88,8)" rx="2" ry="2" />
<text  x="697.14" y="527.5" ></text>
</g>
<g >
<title>std::max&lt;int&gt; (14 samples, 0.05%)</title><rect x="833.6" y="677" width="0.6" height="15.0" fill="rgb(212,24,22)" rx="2" ry="2" />
<text  x="836.59" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (124 samples, 0.43%)</title><rect x="636.8" y="613" width="5.0" height="15.0" fill="rgb(247,64,23)" rx="2" ry="2" />
<text  x="639.76" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (3 samples, 0.01%)</title><rect x="1150.9" y="709" width="0.1" height="15.0" fill="rgb(226,94,7)" rx="2" ry="2" />
<text  x="1153.88" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::operator++ (3 samples, 0.01%)</title><rect x="1043.7" y="773" width="0.1" height="15.0" fill="rgb(209,203,42)" rx="2" ry="2" />
<text  x="1046.72" y="783.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::CommonEvent&gt; (5 samples, 0.02%)</title><rect x="36.0" y="917" width="0.2" height="15.0" fill="rgb(250,71,16)" rx="2" ry="2" />
<text  x="38.99" y="927.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.01%)</title><rect x="823.8" y="501" width="0.1" height="15.0" fill="rgb(235,126,52)" rx="2" ry="2" />
<text  x="826.75" y="511.5" ></text>
</g>
<g >
<title>_mm_cmpeq_epi8 (70 samples, 0.24%)</title><rect x="1065.5" y="645" width="2.8" height="15.0" fill="rgb(228,166,51)" rx="2" ry="2" />
<text  x="1068.48" y="655.5" ></text>
</g>
<g >
<title>Game_Map::Update (145 samples, 0.50%)</title><rect x="117.9" y="885" width="5.9" height="15.0" fill="rgb(229,80,48)" rx="2" ry="2" />
<text  x="120.89" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size@plt (8 samples, 0.03%)</title><rect x="647.3" y="501" width="0.4" height="15.0" fill="rgb(213,226,37)" rx="2" ry="2" />
<text  x="650.34" y="511.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator bool (9 samples, 0.03%)</title><rect x="655.0" y="629" width="0.3" height="15.0" fill="rgb(232,56,16)" rx="2" ry="2" />
<text  x="657.98" y="639.5" ></text>
</g>
<g >
<title>Bitmap::width (4 samples, 0.01%)</title><rect x="738.5" y="533" width="0.1" height="15.0" fill="rgb(234,211,30)" rx="2" ry="2" />
<text  x="741.47" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (41 samples, 0.14%)</title><rect x="449.7" y="661" width="1.7" height="15.0" fill="rgb(205,69,32)" rx="2" ry="2" />
<text  x="452.69" y="671.5" ></text>
</g>
<g >
<title>Rect::Rect (11 samples, 0.04%)</title><rect x="738.6" y="533" width="0.5" height="15.0" fill="rgb(214,151,8)" rx="2" ry="2" />
<text  x="741.63" y="543.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (48 samples, 0.17%)</title><rect x="647.7" y="501" width="1.9" height="15.0" fill="rgb(252,209,28)" rx="2" ry="2" />
<text  x="650.66" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt;::__normal_iterator (44 samples, 0.15%)</title><rect x="994.9" y="693" width="1.8" height="15.0" fill="rgb(244,227,15)" rx="2" ry="2" />
<text  x="997.88" y="703.5" ></text>
</g>
<g >
<title>_mm_adds_epu16 (7 samples, 0.02%)</title><rect x="1078.9" y="629" width="0.3" height="15.0" fill="rgb(253,117,6)" rx="2" ry="2" />
<text  x="1081.90" y="639.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (4 samples, 0.01%)</title><rect x="33.9" y="917" width="0.2" height="15.0" fill="rgb(239,163,43)" rx="2" ry="2" />
<text  x="36.91" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (4 samples, 0.01%)</title><rect x="579.9" y="645" width="0.1" height="15.0" fill="rgb(207,27,16)" rx="2" ry="2" />
<text  x="582.87" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (6 samples, 0.02%)</title><rect x="79.1" y="917" width="0.2" height="15.0" fill="rgb(209,57,8)" rx="2" ry="2" />
<text  x="82.09" y="927.5" ></text>
</g>
<g >
<title>std::move&lt;Bitmap*&amp;&gt; (3 samples, 0.01%)</title><rect x="95.8" y="917" width="0.1" height="15.0" fill="rgb(238,41,8)" rx="2" ry="2" />
<text  x="98.77" y="927.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::operator bool (10 samples, 0.03%)</title><rect x="80.7" y="917" width="0.4" height="15.0" fill="rgb(217,155,18)" rx="2" ry="2" />
<text  x="83.68" y="927.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::_Vector_impl::~_Vector_impl (3 samples, 0.01%)</title><rect x="791.0" y="405" width="0.1" height="15.0" fill="rgb(235,200,0)" rx="2" ry="2" />
<text  x="793.97" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append@plt (3 samples, 0.01%)</title><rect x="616.1" y="597" width="0.1" height="15.0" fill="rgb(207,130,52)" rx="2" ry="2" />
<text  x="619.10" y="607.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (3 samples, 0.01%)</title><rect x="1177.4" y="693" width="0.2" height="15.0" fill="rgb(238,139,9)" rx="2" ry="2" />
<text  x="1180.43" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (67 samples, 0.23%)</title><rect x="102.0" y="501" width="2.8" height="15.0" fill="rgb(243,33,12)" rx="2" ry="2" />
<text  x="105.03" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (16 samples, 0.06%)</title><rect x="127.2" y="501" width="0.7" height="15.0" fill="rgb(235,70,23)" rx="2" ry="2" />
<text  x="130.24" y="511.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (85 samples, 0.29%)</title><rect x="134.0" y="773" width="3.4" height="15.0" fill="rgb(206,27,23)" rx="2" ry="2" />
<text  x="136.95" y="783.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt;::_M_head (5 samples, 0.02%)</title><rect x="56.5" y="917" width="0.2" height="15.0" fill="rgb(219,195,5)" rx="2" ry="2" />
<text  x="59.48" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (801 samples, 2.76%)</title><rect x="945.8" y="693" width="32.6" height="15.0" fill="rgb(225,80,37)" rx="2" ry="2" />
<text  x="948.83" y="703.5" >st..</text>
</g>
<g >
<title>sse2_combine_over_u (655 samples, 2.26%)</title><rect x="1055.4" y="693" width="26.6" height="15.0" fill="rgb(249,69,3)" rx="2" ry="2" />
<text  x="1058.39" y="703.5" >s..</text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (8 samples, 0.03%)</title><rect x="839.6" y="645" width="0.3" height="15.0" fill="rgb(219,103,28)" rx="2" ry="2" />
<text  x="842.61" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (6 samples, 0.02%)</title><rect x="1160.5" y="661" width="0.2" height="15.0" fill="rgb(216,123,12)" rx="2" ry="2" />
<text  x="1163.48" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (4 samples, 0.01%)</title><rect x="579.7" y="645" width="0.2" height="15.0" fill="rgb(231,119,26)" rx="2" ry="2" />
<text  x="582.71" y="655.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (10 samples, 0.03%)</title><rect x="117.5" y="597" width="0.4" height="15.0" fill="rgb(212,50,3)" rx="2" ry="2" />
<text  x="120.48" y="607.5" ></text>
</g>
<g >
<title>Color::Color (5 samples, 0.02%)</title><rect x="1153.6" y="709" width="0.2" height="15.0" fill="rgb(254,125,41)" rx="2" ry="2" />
<text  x="1156.56" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::begin (3 samples, 0.01%)</title><rect x="88.7" y="917" width="0.1" height="15.0" fill="rgb(252,56,48)" rx="2" ry="2" />
<text  x="91.65" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (145 samples, 0.50%)</title><rect x="630.4" y="597" width="5.9" height="15.0" fill="rgb(238,10,51)" rx="2" ry="2" />
<text  x="633.42" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (29 samples, 0.10%)</title><rect x="808.5" y="645" width="1.2" height="15.0" fill="rgb(210,166,40)" rx="2" ry="2" />
<text  x="811.50" y="655.5" ></text>
</g>
<g >
<title>Bitmap::Init (541 samples, 1.86%)</title><rect x="1105.2" y="581" width="22.1" height="15.0" fill="rgb(213,198,26)" rx="2" ry="2" />
<text  x="1108.25" y="591.5" >B..</text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;Bitmap&gt;, true&gt;::_Sp_ebo_helper (3 samples, 0.01%)</title><rect x="1103.4" y="613" width="0.1" height="15.0" fill="rgb(250,102,23)" rx="2" ry="2" />
<text  x="1106.42" y="623.5" ></text>
</g>
<g >
<title>__strlen_avx2 (3 samples, 0.01%)</title><rect x="692.5" y="517" width="0.1" height="15.0" fill="rgb(253,195,16)" rx="2" ry="2" />
<text  x="695.48" y="527.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (145 samples, 0.50%)</title><rect x="117.9" y="677" width="5.9" height="15.0" fill="rgb(225,16,52)" rx="2" ry="2" />
<text  x="120.89" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (13 samples, 0.04%)</title><rect x="718.7" y="421" width="0.6" height="15.0" fill="rgb(205,144,54)" rx="2" ry="2" />
<text  x="721.75" y="431.5" ></text>
</g>
<g >
<title>Input::UiSource::Update()::{lambda(int)#1}::operator() (4 samples, 0.01%)</title><rect x="144.2" y="693" width="0.1" height="15.0" fill="rgb(229,89,28)" rx="2" ry="2" />
<text  x="147.16" y="703.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::~function (15 samples, 0.05%)</title><rect x="802.5" y="645" width="0.6" height="15.0" fill="rgb(226,10,17)" rx="2" ry="2" />
<text  x="805.48" y="655.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (3 samples, 0.01%)</title><rect x="817.8" y="629" width="0.1" height="15.0" fill="rgb(222,125,44)" rx="2" ry="2" />
<text  x="820.77" y="639.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (3 samples, 0.01%)</title><rect x="795.0" y="517" width="0.1" height="15.0" fill="rgb(253,107,8)" rx="2" ry="2" />
<text  x="797.96" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (48 samples, 0.17%)</title><rect x="396.9" y="645" width="2.0" height="15.0" fill="rgb(220,67,5)" rx="2" ry="2" />
<text  x="399.95" y="655.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateGraphics (3,329 samples, 11.47%)</title><rect x="1044.2" y="789" width="135.3" height="15.0" fill="rgb(250,147,45)" rx="2" ry="2" />
<text  x="1047.17" y="799.5" >Scene_Map::Update..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (4 samples, 0.01%)</title><rect x="586.1" y="629" width="0.1" height="15.0" fill="rgb(224,61,0)" rx="2" ry="2" />
<text  x="589.05" y="639.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (4 samples, 0.01%)</title><rect x="139.3" y="917" width="0.2" height="15.0" fill="rgb(233,62,47)" rx="2" ry="2" />
<text  x="142.32" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (4 samples, 0.01%)</title><rect x="662.3" y="485" width="0.2" height="15.0" fill="rgb(213,216,0)" rx="2" ry="2" />
<text  x="665.34" y="495.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (3 samples, 0.01%)</title><rect x="818.7" y="629" width="0.2" height="15.0" fill="rgb(231,75,11)" rx="2" ry="2" />
<text  x="821.75" y="639.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (9 samples, 0.03%)</title><rect x="63.8" y="917" width="0.4" height="15.0" fill="rgb(252,85,6)" rx="2" ry="2" />
<text  x="66.84" y="927.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (14 samples, 0.05%)</title><rect x="132.2" y="917" width="0.5" height="15.0" fill="rgb(250,46,37)" rx="2" ry="2" />
<text  x="135.16" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (14 samples, 0.05%)</title><rect x="742.9" y="485" width="0.5" height="15.0" fill="rgb(207,189,29)" rx="2" ry="2" />
<text  x="745.86" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*, std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt; &gt;::__normal_iterator (7 samples, 0.02%)</title><rect x="652.9" y="581" width="0.3" height="15.0" fill="rgb(242,81,35)" rx="2" ry="2" />
<text  x="655.91" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (54 samples, 0.19%)</title><rect x="1039.7" y="741" width="2.1" height="15.0" fill="rgb(229,192,21)" rx="2" ry="2" />
<text  x="1042.65" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator()&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;&amp;&gt; (8 samples, 0.03%)</title><rect x="646.4" y="533" width="0.3" height="15.0" fill="rgb(253,104,12)" rx="2" ry="2" />
<text  x="649.36" y="543.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (38 samples, 0.13%)</title><rect x="729.3" y="549" width="1.6" height="15.0" fill="rgb(230,31,26)" rx="2" ry="2" />
<text  x="732.32" y="559.5" ></text>
</g>
<g >
<title>__vfs_write (15 samples, 0.05%)</title><rect x="25.2" y="853" width="0.6" height="15.0" fill="rgb(243,219,1)" rx="2" ry="2" />
<text  x="28.17" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (8 samples, 0.03%)</title><rect x="945.5" y="693" width="0.3" height="15.0" fill="rgb(236,146,14)" rx="2" ry="2" />
<text  x="948.51" y="703.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}::operator() (306 samples, 1.05%)</title><rect x="104.8" y="677" width="12.4" height="15.0" fill="rgb(252,28,39)" rx="2" ry="2" />
<text  x="107.75" y="687.5" ></text>
</g>
<g >
<title>operator new (19 samples, 0.07%)</title><rect x="1182.8" y="933" width="0.7" height="15.0" fill="rgb(206,167,31)" rx="2" ry="2" />
<text  x="1185.76" y="943.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (14 samples, 0.05%)</title><rect x="793.8" y="517" width="0.5" height="15.0" fill="rgb(209,198,11)" rx="2" ry="2" />
<text  x="796.78" y="527.5" ></text>
</g>
<g >
<title>std::min&lt;int&gt; (132 samples, 0.45%)</title><rect x="542.1" y="661" width="5.4" height="15.0" fill="rgb(214,8,16)" rx="2" ry="2" />
<text  x="545.13" y="671.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (6 samples, 0.02%)</title><rect x="607.4" y="645" width="0.2" height="15.0" fill="rgb(233,14,35)" rx="2" ry="2" />
<text  x="610.36" y="655.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (23 samples, 0.08%)</title><rect x="725.7" y="469" width="0.9" height="15.0" fill="rgb(216,211,26)" rx="2" ry="2" />
<text  x="728.66" y="479.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (22 samples, 0.08%)</title><rect x="1181.3" y="533" width="0.9" height="15.0" fill="rgb(230,174,7)" rx="2" ry="2" />
<text  x="1184.26" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_right (11 samples, 0.04%)</title><rect x="699.0" y="501" width="0.4" height="15.0" fill="rgb(253,109,44)" rx="2" ry="2" />
<text  x="701.98" y="511.5" ></text>
</g>
<g >
<title>Game_Picture::Move (20 samples, 0.07%)</title><rect x="588.7" y="677" width="0.8" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="591.65" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt;::end (116 samples, 0.40%)</title><rect x="996.7" y="709" width="4.7" height="15.0" fill="rgb(227,57,7)" rx="2" ry="2" />
<text  x="999.67" y="719.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="100.5" y="437" width="0.1" height="15.0" fill="rgb(235,29,53)" rx="2" ry="2" />
<text  x="103.53" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_construct&lt;char32_t const*&gt; (8 samples, 0.03%)</title><rect x="823.6" y="629" width="0.3" height="15.0" fill="rgb(234,197,37)" rx="2" ry="2" />
<text  x="826.59" y="639.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (7 samples, 0.02%)</title><rect x="654.3" y="613" width="0.3" height="15.0" fill="rgb(229,91,18)" rx="2" ry="2" />
<text  x="657.29" y="623.5" ></text>
</g>
<g >
<title>Player::IsRPG2k (3 samples, 0.01%)</title><rect x="35.7" y="917" width="0.2" height="15.0" fill="rgb(246,28,2)" rx="2" ry="2" />
<text  x="38.74" y="927.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (11 samples, 0.04%)</title><rect x="730.4" y="517" width="0.4" height="15.0" fill="rgb(231,181,13)" rx="2" ry="2" />
<text  x="733.38" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (3 samples, 0.01%)</title><rect x="647.2" y="501" width="0.1" height="15.0" fill="rgb(241,213,35)" rx="2" ry="2" />
<text  x="650.21" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (9 samples, 0.03%)</title><rect x="405.3" y="613" width="0.4" height="15.0" fill="rgb(248,74,1)" rx="2" ry="2" />
<text  x="408.29" y="623.5" ></text>
</g>
<g >
<title>Scene_Map::Update (306 samples, 1.05%)</title><rect x="104.8" y="901" width="12.4" height="15.0" fill="rgb(227,98,8)" rx="2" ry="2" />
<text  x="107.75" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (3 samples, 0.01%)</title><rect x="1029.6" y="741" width="0.1" height="15.0" fill="rgb(253,10,13)" rx="2" ry="2" />
<text  x="1032.57" y="751.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (149 samples, 0.51%)</title><rect x="98.7" y="757" width="6.1" height="15.0" fill="rgb(227,141,47)" rx="2" ry="2" />
<text  x="101.70" y="767.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (7 samples, 0.02%)</title><rect x="77.1" y="917" width="0.2" height="15.0" fill="rgb(253,118,34)" rx="2" ry="2" />
<text  x="80.06" y="927.5" ></text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt;, 36ul&gt; (9 samples, 0.03%)</title><rect x="144.7" y="805" width="0.4" height="15.0" fill="rgb(221,77,31)" rx="2" ry="2" />
<text  x="147.69" y="815.5" ></text>
</g>
<g >
<title>std::__find_if&lt;int const*, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (12 samples, 0.04%)</title><rect x="577.2" y="613" width="0.5" height="15.0" fill="rgb(240,221,28)" rx="2" ry="2" />
<text  x="580.23" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base (38 samples, 0.13%)</title><rect x="678.0" y="485" width="1.6" height="15.0" fill="rgb(244,21,0)" rx="2" ry="2" />
<text  x="681.04" y="495.5" ></text>
</g>
<g >
<title>std::swap&lt;int*&gt; (24 samples, 0.08%)</title><rect x="804.5" y="597" width="1.0" height="15.0" fill="rgb(227,202,29)" rx="2" ry="2" />
<text  x="807.52" y="607.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_invoke (4 samples, 0.01%)</title><rect x="51.1" y="917" width="0.2" height="15.0" fill="rgb(239,169,35)" rx="2" ry="2" />
<text  x="54.11" y="927.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (9 samples, 0.03%)</title><rect x="726.2" y="437" width="0.4" height="15.0" fill="rgb(253,68,17)" rx="2" ry="2" />
<text  x="729.23" y="447.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_invoke (17 samples, 0.06%)</title><rect x="117.2" y="677" width="0.7" height="15.0" fill="rgb(209,20,53)" rx="2" ry="2" />
<text  x="120.20" y="687.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (3 samples, 0.01%)</title><rect x="752.0" y="357" width="0.1" height="15.0" fill="rgb(207,192,43)" rx="2" ry="2" />
<text  x="755.01" y="367.5" ></text>
</g>
<g >
<title>LINUX_JoystickDetect (3 samples, 0.01%)</title><rect x="1180.3" y="757" width="0.1" height="15.0" fill="rgb(242,43,54)" rx="2" ry="2" />
<text  x="1183.28" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (13 samples, 0.04%)</title><rect x="82.7" y="917" width="0.5" height="15.0" fill="rgb(207,88,47)" rx="2" ry="2" />
<text  x="85.67" y="927.5" ></text>
</g>
<g >
<title>XFlush (11 samples, 0.04%)</title><rect x="1180.7" y="741" width="0.4" height="15.0" fill="rgb(244,153,2)" rx="2" ry="2" />
<text  x="1183.69" y="751.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (6 samples, 0.02%)</title><rect x="617.9" y="581" width="0.2" height="15.0" fill="rgb(230,130,31)" rx="2" ry="2" />
<text  x="620.85" y="591.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (10 samples, 0.03%)</title><rect x="1037.6" y="725" width="0.4" height="15.0" fill="rgb(242,62,24)" rx="2" ry="2" />
<text  x="1040.62" y="735.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (17 samples, 0.06%)</title><rect x="117.2" y="821" width="0.7" height="15.0" fill="rgb(219,183,41)" rx="2" ry="2" />
<text  x="120.20" y="831.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_ptr (3 samples, 0.01%)</title><rect x="752.7" y="469" width="0.2" height="15.0" fill="rgb(244,182,31)" rx="2" ry="2" />
<text  x="755.75" y="479.5" ></text>
</g>
<g >
<title>__libc_recvmsg (4 samples, 0.01%)</title><rect x="1182.2" y="597" width="0.1" height="15.0" fill="rgb(250,30,54)" rx="2" ry="2" />
<text  x="1185.15" y="607.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::swap (24 samples, 0.08%)</title><rect x="792.6" y="533" width="0.9" height="15.0" fill="rgb(207,199,10)" rx="2" ry="2" />
<text  x="795.56" y="543.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (44 samples, 0.15%)</title><rect x="1096.7" y="677" width="1.8" height="15.0" fill="rgb(211,132,21)" rx="2" ry="2" />
<text  x="1099.71" y="687.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (4 samples, 0.01%)</title><rect x="1176.8" y="693" width="0.1" height="15.0" fill="rgb(244,88,50)" rx="2" ry="2" />
<text  x="1179.78" y="703.5" ></text>
</g>
<g >
<title>Input::UiSource::Update (19 samples, 0.07%)</title><rect x="143.7" y="805" width="0.8" height="15.0" fill="rgb(206,89,49)" rx="2" ry="2" />
<text  x="146.71" y="815.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (92 samples, 0.32%)</title><rect x="686.4" y="517" width="3.7" height="15.0" fill="rgb(216,28,52)" rx="2" ry="2" />
<text  x="689.38" y="527.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.03%)</title><rect x="1126.7" y="469" width="0.3" height="15.0" fill="rgb(245,18,37)" rx="2" ry="2" />
<text  x="1129.68" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (5 samples, 0.02%)</title><rect x="585.4" y="645" width="0.2" height="15.0" fill="rgb(235,218,45)" rx="2" ry="2" />
<text  x="588.36" y="655.5" ></text>
</g>
<g >
<title>SDL_ConvertPixels_REAL (9 samples, 0.03%)</title><rect x="142.9" y="741" width="0.4" height="15.0" fill="rgb(209,144,3)" rx="2" ry="2" />
<text  x="145.94" y="751.5" ></text>
</g>
<g >
<title>_mm_shufflelo_epi16 (4 samples, 0.01%)</title><rect x="1063.0" y="645" width="0.1" height="15.0" fill="rgb(238,4,45)" rx="2" ry="2" />
<text  x="1065.96" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (3 samples, 0.01%)</title><rect x="576.9" y="613" width="0.1" height="15.0" fill="rgb(241,167,24)" rx="2" ry="2" />
<text  x="579.90" y="623.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator() (4 samples, 0.01%)</title><rect x="73.5" y="917" width="0.1" height="15.0" fill="rgb(224,122,53)" rx="2" ry="2" />
<text  x="76.48" y="927.5" ></text>
</g>
<g >
<title>SDL_Delay_REAL (25 samples, 0.09%)</title><rect x="1181.1" y="757" width="1.1" height="15.0" fill="rgb(221,142,18)" rx="2" ry="2" />
<text  x="1184.13" y="767.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (64 samples, 0.22%)</title><rect x="102.2" y="469" width="2.6" height="15.0" fill="rgb(237,63,23)" rx="2" ry="2" />
<text  x="105.15" y="479.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (31 samples, 0.11%)</title><rect x="109.8" y="581" width="1.3" height="15.0" fill="rgb(245,157,23)" rx="2" ry="2" />
<text  x="112.84" y="591.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt;::_M_head (3 samples, 0.01%)</title><rect x="835.4" y="597" width="0.1" height="15.0" fill="rgb(207,110,51)" rx="2" ry="2" />
<text  x="838.42" y="607.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::__allocated_ptr (7 samples, 0.02%)</title><rect x="745.9" y="469" width="0.3" height="15.0" fill="rgb(239,24,0)" rx="2" ry="2" />
<text  x="748.91" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (8 samples, 0.03%)</title><rect x="1013.1" y="725" width="0.3" height="15.0" fill="rgb(242,39,1)" rx="2" ry="2" />
<text  x="1016.06" y="735.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;2ul, bool&gt; (4 samples, 0.01%)</title><rect x="723.7" y="437" width="0.2" height="15.0" fill="rgb(226,10,53)" rx="2" ry="2" />
<text  x="726.71" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (784 samples, 2.70%)</title><rect x="1104.1" y="613" width="31.9" height="15.0" fill="rgb(211,112,21)" rx="2" ry="2" />
<text  x="1107.07" y="623.5" >__..</text>
</g>
<g >
<title>tlb_flush_mmu_free (37 samples, 0.13%)</title><rect x="784.1" y="117" width="1.5" height="15.0" fill="rgb(249,71,36)" rx="2" ry="2" />
<text  x="787.10" y="127.5" ></text>
</g>
<g >
<title>vma_merge (3 samples, 0.01%)</title><rect x="1116.1" y="309" width="0.1" height="15.0" fill="rgb(247,14,0)" rx="2" ry="2" />
<text  x="1119.11" y="319.5" ></text>
</g>
<g >
<title>copy_page_to_iter (6 samples, 0.02%)</title><rect x="24.3" y="773" width="0.3" height="15.0" fill="rgb(227,57,4)" rx="2" ry="2" />
<text  x="27.31" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;int const&gt; (3 samples, 0.01%)</title><rect x="577.0" y="629" width="0.1" height="15.0" fill="rgb(230,32,28)" rx="2" ry="2" />
<text  x="580.02" y="639.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (13 samples, 0.04%)</title><rect x="650.4" y="549" width="0.5" height="15.0" fill="rgb(243,209,6)" rx="2" ry="2" />
<text  x="653.39" y="559.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::_M_get_Tp_allocator (8 samples, 0.03%)</title><rect x="58.1" y="917" width="0.4" height="15.0" fill="rgb(219,161,6)" rx="2" ry="2" />
<text  x="61.15" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (3 samples, 0.01%)</title><rect x="808.4" y="613" width="0.1" height="15.0" fill="rgb(237,181,32)" rx="2" ry="2" />
<text  x="811.38" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (110 samples, 0.38%)</title><rect x="1170.7" y="741" width="4.5" height="15.0" fill="rgb(222,110,3)" rx="2" ry="2" />
<text  x="1173.68" y="751.5" ></text>
</g>
<g >
<title>X11_PumpEvents (5 samples, 0.02%)</title><rect x="1182.2" y="741" width="0.2" height="15.0" fill="rgb(240,176,14)" rx="2" ry="2" />
<text  x="1185.15" y="751.5" ></text>
</g>
<g >
<title>calloc (351 samples, 1.21%)</title><rect x="1108.2" y="517" width="14.3" height="15.0" fill="rgb(240,15,38)" rx="2" ry="2" />
<text  x="1111.18" y="527.5" ></text>
</g>
<g >
<title>ptep_clear_flush (4 samples, 0.01%)</title><rect x="1119.0" y="357" width="0.2" height="15.0" fill="rgb(214,176,6)" rx="2" ry="2" />
<text  x="1122.04" y="367.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (3 samples, 0.01%)</title><rect x="588.5" y="661" width="0.2" height="15.0" fill="rgb(244,45,1)" rx="2" ry="2" />
<text  x="591.53" y="671.5" ></text>
</g>
<g >
<title>get_page_from_freelist (8 samples, 0.03%)</title><rect x="1117.5" y="309" width="0.3" height="15.0" fill="rgb(224,91,52)" rx="2" ry="2" />
<text  x="1120.49" y="319.5" ></text>
</g>
<g >
<title>__GI_madvise (5 samples, 0.02%)</title><rect x="783.5" y="261" width="0.2" height="15.0" fill="rgb(249,82,47)" rx="2" ry="2" />
<text  x="786.53" y="271.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (13 samples, 0.04%)</title><rect x="689.5" y="485" width="0.5" height="15.0" fill="rgb(229,154,7)" rx="2" ry="2" />
<text  x="692.51" y="495.5" ></text>
</g>
<g >
<title>X11_Pending (5 samples, 0.02%)</title><rect x="1182.2" y="725" width="0.2" height="15.0" fill="rgb(222,40,30)" rx="2" ry="2" />
<text  x="1185.15" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::destroy&lt;Bitmap&gt; (952 samples, 3.28%)</title><rect x="753.0" y="453" width="38.7" height="15.0" fill="rgb(230,129,38)" rx="2" ry="2" />
<text  x="755.99" y="463.5" >__g..</text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator (3 samples, 0.01%)</title><rect x="1179.3" y="773" width="0.2" height="15.0" fill="rgb(230,45,7)" rx="2" ry="2" />
<text  x="1182.35" y="783.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (121 samples, 0.42%)</title><rect x="127.2" y="581" width="5.0" height="15.0" fill="rgb(229,213,21)" rx="2" ry="2" />
<text  x="130.24" y="591.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (7 samples, 0.02%)</title><rect x="145.1" y="789" width="0.3" height="15.0" fill="rgb(220,154,46)" rx="2" ry="2" />
<text  x="148.10" y="799.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (4 samples, 0.01%)</title><rect x="65.5" y="917" width="0.1" height="15.0" fill="rgb(216,193,3)" rx="2" ry="2" />
<text  x="68.47" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (8 samples, 0.03%)</title><rect x="824.6" y="629" width="0.4" height="15.0" fill="rgb(244,70,19)" rx="2" ry="2" />
<text  x="827.65" y="639.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (145 samples, 0.50%)</title><rect x="117.9" y="901" width="5.9" height="15.0" fill="rgb(206,176,50)" rx="2" ry="2" />
<text  x="120.89" y="911.5" ></text>
</g>
<g >
<title>expand_alpha_2x128 (4 samples, 0.01%)</title><rect x="1063.0" y="661" width="0.1" height="15.0" fill="rgb(212,205,10)" rx="2" ry="2" />
<text  x="1065.96" y="671.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;2ul, bool, false&gt;::_M_head (7 samples, 0.02%)</title><rect x="704.4" y="373" width="0.3" height="15.0" fill="rgb(244,109,31)" rx="2" ry="2" />
<text  x="707.39" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (49 samples, 0.17%)</title><rect x="687.0" y="501" width="2.0" height="15.0" fill="rgb(212,170,2)" rx="2" ry="2" />
<text  x="690.03" y="511.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (6 samples, 0.02%)</title><rect x="1037.8" y="709" width="0.2" height="15.0" fill="rgb(249,62,21)" rx="2" ry="2" />
<text  x="1040.78" y="719.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_get_pointer (7 samples, 0.02%)</title><rect x="795.8" y="597" width="0.3" height="15.0" fill="rgb(211,6,18)" rx="2" ry="2" />
<text  x="798.77" y="607.5" ></text>
</g>
<g >
<title>__GI_madvise (27 samples, 0.09%)</title><rect x="786.7" y="277" width="1.1" height="15.0" fill="rgb(247,173,52)" rx="2" ry="2" />
<text  x="789.66" y="287.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (8 samples, 0.03%)</title><rect x="824.6" y="645" width="0.4" height="15.0" fill="rgb(207,40,53)" rx="2" ry="2" />
<text  x="827.65" y="655.5" ></text>
</g>
<g >
<title>Game_Interpreter::OnFinishStackFrame (4 samples, 0.01%)</title><rect x="335.5" y="725" width="0.2" height="15.0" fill="rgb(213,223,4)" rx="2" ry="2" />
<text  x="338.54" y="735.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (121 samples, 0.42%)</title><rect x="127.2" y="741" width="5.0" height="15.0" fill="rgb(210,27,41)" rx="2" ry="2" />
<text  x="130.24" y="751.5" ></text>
</g>
<g >
<title>_mm_adds_epu8 (10 samples, 0.03%)</title><rect x="1078.1" y="645" width="0.4" height="15.0" fill="rgb(222,208,28)" rx="2" ry="2" />
<text  x="1081.08" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (6 samples, 0.02%)</title><rect x="601.5" y="645" width="0.3" height="15.0" fill="rgb(232,77,49)" rx="2" ry="2" />
<text  x="604.55" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (36 samples, 0.12%)</title><rect x="727.9" y="533" width="1.4" height="15.0" fill="rgb(221,43,4)" rx="2" ry="2" />
<text  x="730.86" y="543.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (31 samples, 0.11%)</title><rect x="614.6" y="517" width="1.3" height="15.0" fill="rgb(207,135,38)" rx="2" ry="2" />
<text  x="617.60" y="527.5" ></text>
</g>
<g >
<title>vfs_write (17 samples, 0.06%)</title><rect x="25.1" y="869" width="0.7" height="15.0" fill="rgb(245,150,35)" rx="2" ry="2" />
<text  x="28.09" y="879.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (214 samples, 0.74%)</title><rect x="255.2" y="677" width="8.7" height="15.0" fill="rgb(222,87,22)" rx="2" ry="2" />
<text  x="258.18" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator++ (5 samples, 0.02%)</title><rect x="610.5" y="613" width="0.2" height="15.0" fill="rgb(248,120,11)" rx="2" ry="2" />
<text  x="613.49" y="623.5" ></text>
</g>
<g >
<title>page_fault (29 samples, 0.10%)</title><rect x="1116.9" y="421" width="1.2" height="15.0" fill="rgb(206,193,48)" rx="2" ry="2" />
<text  x="1119.88" y="431.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}::operator() (145 samples, 0.50%)</title><rect x="117.9" y="693" width="5.9" height="15.0" fill="rgb(225,136,5)" rx="2" ry="2" />
<text  x="120.89" y="703.5" ></text>
</g>
<g >
<title>__interceptor_free (679 samples, 2.34%)</title><rect x="762.3" y="373" width="27.6" height="15.0" fill="rgb(207,199,29)" rx="2" ry="2" />
<text  x="765.30" y="383.5" >_..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (72 samples, 0.25%)</title><rect x="37.6" y="917" width="2.9" height="15.0" fill="rgb(225,132,37)" rx="2" ry="2" />
<text  x="40.61" y="927.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (53 samples, 0.18%)</title><rect x="683.3" y="501" width="2.2" height="15.0" fill="rgb(244,115,43)" rx="2" ry="2" />
<text  x="686.33" y="511.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (15 samples, 0.05%)</title><rect x="110.5" y="549" width="0.6" height="15.0" fill="rgb(214,144,23)" rx="2" ry="2" />
<text  x="113.49" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (10 samples, 0.03%)</title><rect x="66.9" y="917" width="0.4" height="15.0" fill="rgb(227,201,1)" rx="2" ry="2" />
<text  x="69.93" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (5 samples, 0.02%)</title><rect x="93.8" y="917" width="0.2" height="15.0" fill="rgb(210,224,27)" rx="2" ry="2" />
<text  x="96.77" y="927.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (10 samples, 0.03%)</title><rect x="67.8" y="917" width="0.4" height="15.0" fill="rgb(248,6,1)" rx="2" ry="2" />
<text  x="70.83" y="927.5" ></text>
</g>
<g >
<title>error_entry (4 samples, 0.01%)</title><rect x="1116.7" y="421" width="0.1" height="15.0" fill="rgb(225,227,24)" rx="2" ry="2" />
<text  x="1119.68" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (4 samples, 0.01%)</title><rect x="1160.3" y="645" width="0.2" height="15.0" fill="rgb(249,156,46)" rx="2" ry="2" />
<text  x="1163.31" y="655.5" ></text>
</g>
<g >
<title>DynamicFormat::DynamicFormat (3 samples, 0.01%)</title><rect x="1135.3" y="581" width="0.1" height="15.0" fill="rgb(250,64,53)" rx="2" ry="2" />
<text  x="1138.26" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (11 samples, 0.04%)</title><rect x="830.9" y="581" width="0.5" height="15.0" fill="rgb(215,6,26)" rx="2" ry="2" />
<text  x="833.95" y="591.5" ></text>
</g>
<g >
<title>main (121 samples, 0.42%)</title><rect x="127.2" y="901" width="5.0" height="15.0" fill="rgb(208,113,16)" rx="2" ry="2" />
<text  x="130.24" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (149 samples, 0.51%)</title><rect x="509.9" y="661" width="6.1" height="15.0" fill="rgb(225,113,5)" rx="2" ry="2" />
<text  x="512.92" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::begin (10 samples, 0.03%)</title><rect x="652.8" y="597" width="0.4" height="15.0" fill="rgb(241,81,16)" rx="2" ry="2" />
<text  x="655.79" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (20 samples, 0.07%)</title><rect x="1115.5" y="389" width="0.8" height="15.0" fill="rgb(231,196,49)" rx="2" ry="2" />
<text  x="1118.50" y="399.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_M_head (10 samples, 0.03%)</title><rect x="53.4" y="917" width="0.4" height="15.0" fill="rgb(205,108,1)" rx="2" ry="2" />
<text  x="56.35" y="927.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (105 samples, 0.36%)</title><rect x="454.5" y="677" width="4.3" height="15.0" fill="rgb(220,220,26)" rx="2" ry="2" />
<text  x="457.53" y="687.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (7 samples, 0.02%)</title><rect x="1122.2" y="485" width="0.3" height="15.0" fill="rgb(211,218,53)" rx="2" ry="2" />
<text  x="1125.17" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (21 samples, 0.07%)</title><rect x="152.8" y="709" width="0.8" height="15.0" fill="rgb(224,80,4)" rx="2" ry="2" />
<text  x="155.78" y="719.5" ></text>
</g>
<g >
<title>_mm_mulhi_epu16 (6 samples, 0.02%)</title><rect x="1079.2" y="629" width="0.2" height="15.0" fill="rgb(251,44,24)" rx="2" ry="2" />
<text  x="1082.18" y="639.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (85 samples, 0.29%)</title><rect x="134.0" y="725" width="3.4" height="15.0" fill="rgb(212,224,4)" rx="2" ry="2" />
<text  x="136.95" y="735.5" ></text>
</g>
<g >
<title>std::bitset&lt;36ul&gt;::operator[] (3 samples, 0.01%)</title><rect x="68.7" y="917" width="0.1" height="15.0" fill="rgb(240,15,27)" rx="2" ry="2" />
<text  x="71.72" y="927.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (5 samples, 0.02%)</title><rect x="94.8" y="917" width="0.2" height="15.0" fill="rgb(247,210,47)" rx="2" ry="2" />
<text  x="97.83" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (38 samples, 0.13%)</title><rect x="393.7" y="645" width="1.6" height="15.0" fill="rgb(214,102,3)" rx="2" ry="2" />
<text  x="396.74" y="655.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::get (4 samples, 0.01%)</title><rect x="64.9" y="917" width="0.2" height="15.0" fill="rgb(250,78,22)" rx="2" ry="2" />
<text  x="67.94" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (3 samples, 0.01%)</title><rect x="1189.7" y="933" width="0.1" height="15.0" fill="rgb(233,117,43)" rx="2" ry="2" />
<text  x="1192.67" y="943.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (71 samples, 0.24%)</title><rect x="20.5" y="725" width="2.9" height="15.0" fill="rgb(230,143,41)" rx="2" ry="2" />
<text  x="23.49" y="735.5" ></text>
</g>
<g >
<title>x86_pmu_enable (72 samples, 0.25%)</title><rect x="20.5" y="741" width="2.9" height="15.0" fill="rgb(221,215,7)" rx="2" ry="2" />
<text  x="23.45" y="751.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (46 samples, 0.16%)</title><rect x="639.7" y="581" width="1.8" height="15.0" fill="rgb(248,29,42)" rx="2" ry="2" />
<text  x="642.65" y="591.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Transition*, std::default_delete&lt;Transition&gt; &gt; (12 samples, 0.04%)</title><rect x="62.3" y="917" width="0.5" height="15.0" fill="rgb(244,95,0)" rx="2" ry="2" />
<text  x="65.30" y="927.5" ></text>
</g>
<g >
<title>Game_Picture::Show (17 samples, 0.06%)</title><rect x="117.2" y="741" width="0.7" height="15.0" fill="rgb(243,144,34)" rx="2" ry="2" />
<text  x="120.20" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_v (3 samples, 0.01%)</title><rect x="688.0" y="437" width="0.1" height="15.0" fill="rgb(205,145,40)" rx="2" ry="2" />
<text  x="691.00" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (11 samples, 0.04%)</title><rect x="661.7" y="485" width="0.4" height="15.0" fill="rgb(213,171,51)" rx="2" ry="2" />
<text  x="664.69" y="495.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;int&gt;::shared_ptr (9 samples, 0.03%)</title><rect x="796.2" y="629" width="0.3" height="15.0" fill="rgb(248,140,11)" rx="2" ry="2" />
<text  x="799.18" y="639.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::~_Head_base (67 samples, 0.23%)</title><rect x="102.0" y="533" width="2.8" height="15.0" fill="rgb(215,23,13)" rx="2" ry="2" />
<text  x="105.03" y="543.5" ></text>
</g>
<g >
<title>alloc_pages_vma (18 samples, 0.06%)</title><rect x="1117.1" y="341" width="0.7" height="15.0" fill="rgb(229,193,48)" rx="2" ry="2" />
<text  x="1120.08" y="351.5" ></text>
</g>
<g >
<title>Game_Interpreter::IsAsyncPending (4 samples, 0.01%)</title><rect x="152.3" y="741" width="0.2" height="15.0" fill="rgb(234,110,34)" rx="2" ry="2" />
<text  x="155.34" y="751.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, true&gt; (150 samples, 0.52%)</title><rect x="111.1" y="629" width="6.1" height="15.0" fill="rgb(229,85,21)" rx="2" ry="2" />
<text  x="114.10" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (8 samples, 0.03%)</title><rect x="457.3" y="661" width="0.3" height="15.0" fill="rgb(206,50,15)" rx="2" ry="2" />
<text  x="460.30" y="671.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (6 samples, 0.02%)</title><rect x="701.7" y="453" width="0.3" height="15.0" fill="rgb(240,75,42)" rx="2" ry="2" />
<text  x="704.71" y="463.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::reset (88 samples, 0.30%)</title><rect x="809.7" y="661" width="3.6" height="15.0" fill="rgb(211,176,38)" rx="2" ry="2" />
<text  x="812.68" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::CommonEvent, std::allocator&lt;RPG::CommonEvent&gt; &gt;::size (3 samples, 0.01%)</title><rect x="1034.1" y="677" width="0.1" height="15.0" fill="rgb(208,6,39)" rx="2" ry="2" />
<text  x="1037.12" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (8 samples, 0.03%)</title><rect x="436.2" y="613" width="0.3" height="15.0" fill="rgb(249,99,52)" rx="2" ry="2" />
<text  x="439.15" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (33 samples, 0.11%)</title><rect x="830.1" y="597" width="1.4" height="15.0" fill="rgb(249,38,0)" rx="2" ry="2" />
<text  x="833.14" y="607.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Impl::~_Impl (3 samples, 0.01%)</title><rect x="745.8" y="453" width="0.1" height="15.0" fill="rgb(241,138,39)" rx="2" ry="2" />
<text  x="748.75" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt; (8 samples, 0.03%)</title><rect x="1032.6" y="757" width="0.3" height="15.0" fill="rgb(207,90,9)" rx="2" ry="2" />
<text  x="1035.62" y="767.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (96 samples, 0.33%)</title><rect x="941.6" y="661" width="3.9" height="15.0" fill="rgb(252,119,14)" rx="2" ry="2" />
<text  x="944.56" y="671.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Transition*, std::default_delete&lt;Transition&gt; &gt; (3 samples, 0.01%)</title><rect x="798.3" y="581" width="0.1" height="15.0" fill="rgb(245,189,46)" rx="2" ry="2" />
<text  x="801.25" y="591.5" ></text>
</g>
<g >
<title>Player::MainLoop (121 samples, 0.42%)</title><rect x="127.2" y="869" width="5.0" height="15.0" fill="rgb(244,211,10)" rx="2" ry="2" />
<text  x="130.24" y="879.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char32_t&gt;::deallocate (4 samples, 0.01%)</title><rect x="824.0" y="597" width="0.1" height="15.0" fill="rgb(223,30,40)" rx="2" ry="2" />
<text  x="826.95" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (29 samples, 0.10%)</title><rect x="808.5" y="661" width="1.2" height="15.0" fill="rgb(207,216,39)" rx="2" ry="2" />
<text  x="811.50" y="671.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::operator bool (25 samples, 0.09%)</title><rect x="797.4" y="613" width="1.0" height="15.0" fill="rgb(234,204,5)" rx="2" ry="2" />
<text  x="800.36" y="623.5" ></text>
</g>
<g >
<title>deactivate_task (9 samples, 0.03%)</title><rect x="20.0" y="789" width="0.4" height="15.0" fill="rgb(251,36,40)" rx="2" ry="2" />
<text  x="23.04" y="799.5" ></text>
</g>
<g >
<title>pixman_region32_fini (4 samples, 0.01%)</title><rect x="789.9" y="373" width="0.2" height="15.0" fill="rgb(226,212,22)" rx="2" ry="2" />
<text  x="792.92" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (30 samples, 0.10%)</title><rect x="434.1" y="629" width="1.2" height="15.0" fill="rgb(242,138,49)" rx="2" ry="2" />
<text  x="437.12" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::operator++ (12 samples, 0.04%)</title><rect x="1030.2" y="757" width="0.5" height="15.0" fill="rgb(248,80,29)" rx="2" ry="2" />
<text  x="1033.18" y="767.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (34 samples, 0.12%)</title><rect x="585.0" y="677" width="1.3" height="15.0" fill="rgb(240,188,9)" rx="2" ry="2" />
<text  x="587.95" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (10 samples, 0.03%)</title><rect x="117.5" y="549" width="0.4" height="15.0" fill="rgb(213,11,28)" rx="2" ry="2" />
<text  x="120.48" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.02%)</title><rect x="831.2" y="565" width="0.2" height="15.0" fill="rgb(239,185,10)" rx="2" ry="2" />
<text  x="834.19" y="575.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator() (20 samples, 0.07%)</title><rect x="1133.8" y="501" width="0.8" height="15.0" fill="rgb(226,43,30)" rx="2" ry="2" />
<text  x="1136.76" y="511.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (228 samples, 0.79%)</title><rect x="702.0" y="453" width="9.2" height="15.0" fill="rgb(212,177,36)" rx="2" ry="2" />
<text  x="704.95" y="463.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (15 samples, 0.05%)</title><rect x="736.5" y="565" width="0.6" height="15.0" fill="rgb(232,55,32)" rx="2" ry="2" />
<text  x="739.48" y="575.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandOptionGeneric (169 samples, 0.58%)</title><rect x="571.7" y="677" width="6.9" height="15.0" fill="rgb(248,165,6)" rx="2" ry="2" />
<text  x="574.70" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (4 samples, 0.01%)</title><rect x="576.6" y="613" width="0.1" height="15.0" fill="rgb(225,141,21)" rx="2" ry="2" />
<text  x="579.58" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator bool (16 samples, 0.06%)</title><rect x="1170.0" y="741" width="0.7" height="15.0" fill="rgb(246,68,39)" rx="2" ry="2" />
<text  x="1173.03" y="751.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (8 samples, 0.03%)</title><rect x="810.2" y="629" width="0.4" height="15.0" fill="rgb(232,46,17)" rx="2" ry="2" />
<text  x="813.25" y="639.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (4 samples, 0.01%)</title><rect x="794.5" y="549" width="0.2" height="15.0" fill="rgb(206,66,43)" rx="2" ry="2" />
<text  x="797.51" y="559.5" ></text>
</g>
<g >
<title>free_unref_page_list (4 samples, 0.01%)</title><rect x="787.3" y="101" width="0.2" height="15.0" fill="rgb(240,99,54)" rx="2" ry="2" />
<text  x="790.31" y="111.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (3 samples, 0.01%)</title><rect x="817.9" y="629" width="0.1" height="15.0" fill="rgb(219,229,34)" rx="2" ry="2" />
<text  x="820.89" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*, std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt; &gt;::__normal_iterator (3 samples, 0.01%)</title><rect x="654.2" y="581" width="0.1" height="15.0" fill="rgb(212,6,37)" rx="2" ry="2" />
<text  x="657.17" y="591.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::end (5 samples, 0.02%)</title><rect x="577.7" y="645" width="0.2" height="15.0" fill="rgb(241,144,12)" rx="2" ry="2" />
<text  x="580.71" y="655.5" ></text>
</g>
<g >
<title>std::_Bit_const_iterator::_Bit_const_iterator (5 samples, 0.02%)</title><rect x="151.3" y="677" width="0.2" height="15.0" fill="rgb(212,151,53)" rx="2" ry="2" />
<text  x="154.28" y="687.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (9 samples, 0.03%)</title><rect x="1180.8" y="709" width="0.3" height="15.0" fill="rgb(245,129,21)" rx="2" ry="2" />
<text  x="1183.77" y="719.5" ></text>
</g>
<g >
<title>Bitmap::Blit (729 samples, 2.51%)</title><rect x="1052.5" y="741" width="29.6" height="15.0" fill="rgb(225,76,53)" rx="2" ry="2" />
<text  x="1055.46" y="751.5" >Bi..</text>
</g>
<g >
<title>_start (25,591 samples, 88.20%)</title><rect x="141.8" y="933" width="1040.7" height="15.0" fill="rgb(219,224,10)" rx="2" ry="2" />
<text  x="144.80" y="943.5" >_start</text>
</g>
<g >
<title>[libasan.so.5.0.0] (17 samples, 0.06%)</title><rect x="104.0" y="453" width="0.7" height="15.0" fill="rgb(214,137,48)" rx="2" ry="2" />
<text  x="106.98" y="463.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (3 samples, 0.01%)</title><rect x="1119.1" y="309" width="0.1" height="15.0" fill="rgb(253,170,0)" rx="2" ry="2" />
<text  x="1122.08" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (48 samples, 0.17%)</title><rect x="912.7" y="693" width="2.0" height="15.0" fill="rgb(224,31,21)" rx="2" ry="2" />
<text  x="915.73" y="703.5" ></text>
</g>
<g >
<title>_pixman_image_init (33 samples, 0.11%)</title><rect x="1106.5" y="533" width="1.3" height="15.0" fill="rgb(215,110,37)" rx="2" ry="2" />
<text  x="1109.47" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (7 samples, 0.02%)</title><rect x="117.2" y="565" width="0.3" height="15.0" fill="rgb(224,203,48)" rx="2" ry="2" />
<text  x="120.20" y="575.5" ></text>
</g>
<g >
<title>finish_task_switch (23 samples, 0.08%)</title><rect x="1181.2" y="613" width="1.0" height="15.0" fill="rgb(206,129,33)" rx="2" ry="2" />
<text  x="1184.22" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::end (19 samples, 0.07%)</title><rect x="653.5" y="597" width="0.8" height="15.0" fill="rgb(230,61,35)" rx="2" ry="2" />
<text  x="656.52" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (7 samples, 0.02%)</title><rect x="580.0" y="661" width="0.3" height="15.0" fill="rgb(211,19,54)" rx="2" ry="2" />
<text  x="583.03" y="671.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (145 samples, 0.50%)</title><rect x="117.9" y="869" width="5.9" height="15.0" fill="rgb(252,107,6)" rx="2" ry="2" />
<text  x="120.89" y="879.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.01%)</title><rect x="823.3" y="581" width="0.2" height="15.0" fill="rgb(207,223,22)" rx="2" ry="2" />
<text  x="826.34" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (186 samples, 0.64%)</title><rect x="303.7" y="677" width="7.6" height="15.0" fill="rgb(251,135,35)" rx="2" ry="2" />
<text  x="306.74" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.01%)</title><rect x="1115.2" y="421" width="0.2" height="15.0" fill="rgb(226,149,41)" rx="2" ry="2" />
<text  x="1118.21" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_set_length (3 samples, 0.01%)</title><rect x="821.3" y="629" width="0.1" height="15.0" fill="rgb(239,46,34)" rx="2" ry="2" />
<text  x="824.31" y="639.5" ></text>
</g>
<g >
<title>AsyncHandler::IsImportantFilePending (3 samples, 0.01%)</title><rect x="1182.4" y="821" width="0.1" height="15.0" fill="rgb(237,10,53)" rx="2" ry="2" />
<text  x="1185.40" y="831.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt; &gt; &gt;::size (5 samples, 0.02%)</title><rect x="88.8" y="917" width="0.2" height="15.0" fill="rgb(254,196,30)" rx="2" ry="2" />
<text  x="91.77" y="927.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (45 samples, 0.16%)</title><rect x="1158.9" y="725" width="1.8" height="15.0" fill="rgb(210,45,45)" rx="2" ry="2" />
<text  x="1161.89" y="735.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, bool&gt;::_Tuple_impl&lt;bool&amp;&gt; (10 samples, 0.03%)</title><rect x="735.1" y="501" width="0.4" height="15.0" fill="rgb(243,161,6)" rx="2" ry="2" />
<text  x="738.10" y="511.5" ></text>
</g>
<g >
<title>Cache::Picture (17 samples, 0.06%)</title><rect x="117.2" y="629" width="0.7" height="15.0" fill="rgb(244,184,27)" rx="2" ry="2" />
<text  x="120.20" y="639.5" ></text>
</g>
<g >
<title>std::bitset&lt;152ul&gt;::operator[] (3 samples, 0.01%)</title><rect x="144.2" y="677" width="0.1" height="15.0" fill="rgb(209,205,2)" rx="2" ry="2" />
<text  x="147.20" y="687.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (28 samples, 0.10%)</title><rect x="104.8" y="629" width="1.1" height="15.0" fill="rgb(215,196,50)" rx="2" ry="2" />
<text  x="107.75" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (9 samples, 0.03%)</title><rect x="1042.6" y="741" width="0.4" height="15.0" fill="rgb(233,193,37)" rx="2" ry="2" />
<text  x="1045.62" y="751.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (68 samples, 0.23%)</title><rect x="783.8" y="229" width="2.7" height="15.0" fill="rgb(224,225,11)" rx="2" ry="2" />
<text  x="786.78" y="239.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (964 samples, 3.32%)</title><rect x="752.5" y="485" width="39.2" height="15.0" fill="rgb(214,146,24)" rx="2" ry="2" />
<text  x="755.50" y="495.5" >std..</text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (4 samples, 0.01%)</title><rect x="142.7" y="741" width="0.2" height="15.0" fill="rgb(208,149,30)" rx="2" ry="2" />
<text  x="145.74" y="751.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (6 samples, 0.02%)</title><rect x="1176.7" y="709" width="0.2" height="15.0" fill="rgb(240,184,28)" rx="2" ry="2" />
<text  x="1179.70" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (10 samples, 0.03%)</title><rect x="18.1" y="933" width="0.4" height="15.0" fill="rgb(234,140,45)" rx="2" ry="2" />
<text  x="21.05" y="943.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 2ul, 3ul&gt;::__less (30 samples, 0.10%)</title><rect x="703.5" y="437" width="1.2" height="15.0" fill="rgb(246,70,37)" rx="2" ry="2" />
<text  x="706.46" y="447.5" ></text>
</g>
<g >
<title>__tls_get_addr (3 samples, 0.01%)</title><rect x="1054.7" y="677" width="0.2" height="15.0" fill="rgb(234,133,50)" rx="2" ry="2" />
<text  x="1057.74" y="687.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (4 samples, 0.01%)</title><rect x="730.2" y="517" width="0.2" height="15.0" fill="rgb(216,197,4)" rx="2" ry="2" />
<text  x="733.22" y="527.5" ></text>
</g>
<g >
<title>Window_NumberInput::Update (4 samples, 0.01%)</title><rect x="1179.6" y="773" width="0.2" height="15.0" fill="rgb(232,144,6)" rx="2" ry="2" />
<text  x="1182.63" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (3 samples, 0.01%)</title><rect x="138.7" y="917" width="0.1" height="15.0" fill="rgb(246,15,28)" rx="2" ry="2" />
<text  x="141.71" y="927.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (17 samples, 0.06%)</title><rect x="1143.2" y="517" width="0.7" height="15.0" fill="rgb(245,174,11)" rx="2" ry="2" />
<text  x="1146.19" y="527.5" ></text>
</g>
<g >
<title>Sdl2Ui::ProcessActiveEvent (30 samples, 0.10%)</title><rect x="1181.1" y="789" width="1.3" height="15.0" fill="rgb(248,24,7)" rx="2" ry="2" />
<text  x="1184.13" y="799.5" ></text>
</g>
<g >
<title>Cache::Picture (306 samples, 1.05%)</title><rect x="104.8" y="645" width="12.4" height="15.0" fill="rgb(239,84,1)" rx="2" ry="2" />
<text  x="107.75" y="655.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (9 samples, 0.03%)</title><rect x="1054.5" y="693" width="0.4" height="15.0" fill="rgb(217,123,17)" rx="2" ry="2" />
<text  x="1057.50" y="703.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.04%)</title><rect x="104.8" y="549" width="0.4" height="15.0" fill="rgb(245,160,13)" rx="2" ry="2" />
<text  x="107.75" y="559.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (52 samples, 0.18%)</title><rect x="1172.4" y="693" width="2.1" height="15.0" fill="rgb(245,97,45)" rx="2" ry="2" />
<text  x="1175.43" y="703.5" ></text>
</g>
<g >
<title>Cache::System (4 samples, 0.01%)</title><rect x="1179.6" y="709" width="0.2" height="15.0" fill="rgb(226,182,36)" rx="2" ry="2" />
<text  x="1182.63" y="719.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (25,441 samples, 87.68%)</title><rect x="145.4" y="805" width="1034.6" height="15.0" fill="rgb(216,223,31)" rx="2" ry="2" />
<text  x="148.42" y="815.5" >Scene_Map::UpdateStage1</text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (23 samples, 0.08%)</title><rect x="1037.1" y="741" width="0.9" height="15.0" fill="rgb(246,152,24)" rx="2" ry="2" />
<text  x="1040.09" y="751.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (77 samples, 0.27%)</title><rect x="599.4" y="661" width="3.1" height="15.0" fill="rgb(251,85,22)" rx="2" ry="2" />
<text  x="602.39" y="671.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (14 samples, 0.05%)</title><rect x="1166.5" y="709" width="0.6" height="15.0" fill="rgb(219,41,50)" rx="2" ry="2" />
<text  x="1169.49" y="719.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::_M_ptr (4 samples, 0.01%)</title><rect x="1028.7" y="725" width="0.1" height="15.0" fill="rgb(237,9,1)" rx="2" ry="2" />
<text  x="1031.67" y="735.5" ></text>
</g>
<g >
<title>__strlen_avx2 (3 samples, 0.01%)</title><rect x="728.9" y="501" width="0.1" height="15.0" fill="rgb(248,88,53)" rx="2" ry="2" />
<text  x="731.87" y="511.5" ></text>
</g>
<g >
<title>compute_image_info (6 samples, 0.02%)</title><rect x="1054.2" y="693" width="0.2" height="15.0" fill="rgb(211,205,0)" rx="2" ry="2" />
<text  x="1057.17" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (13 samples, 0.04%)</title><rect x="692.1" y="549" width="0.5" height="15.0" fill="rgb(245,154,41)" rx="2" ry="2" />
<text  x="695.07" y="559.5" ></text>
</g>
<g >
<title>memcpy (9 samples, 0.03%)</title><rect x="826.6" y="645" width="0.3" height="15.0" fill="rgb(210,44,54)" rx="2" ry="2" />
<text  x="829.56" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (14 samples, 0.05%)</title><rect x="644.0" y="565" width="0.6" height="15.0" fill="rgb(245,52,2)" rx="2" ry="2" />
<text  x="647.00" y="575.5" ></text>
</g>
<g >
<title>std::map&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, (anonymous namespace)::CacheItem, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (840 samples, 2.89%)</title><rect x="693.5" y="549" width="34.2" height="15.0" fill="rgb(213,3,21)" rx="2" ry="2" />
<text  x="696.49" y="559.5" >st..</text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (16 samples, 0.06%)</title><rect x="803.5" y="613" width="0.7" height="15.0" fill="rgb(239,134,19)" rx="2" ry="2" />
<text  x="806.54" y="623.5" ></text>
</g>
<g >
<title>operator new (90 samples, 0.31%)</title><rect x="612.3" y="565" width="3.6" height="15.0" fill="rgb(234,177,35)" rx="2" ry="2" />
<text  x="615.28" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (45 samples, 0.16%)</title><rect x="978.7" y="709" width="1.8" height="15.0" fill="rgb(214,227,2)" rx="2" ry="2" />
<text  x="981.69" y="719.5" ></text>
</g>
<g >
<title>load_128_unaligned (225 samples, 0.78%)</title><rect x="1068.9" y="661" width="9.2" height="15.0" fill="rgb(240,48,23)" rx="2" ry="2" />
<text  x="1071.93" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (3 samples, 0.01%)</title><rect x="585.4" y="629" width="0.2" height="15.0" fill="rgb(228,39,26)" rx="2" ry="2" />
<text  x="588.44" y="639.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (15 samples, 0.05%)</title><rect x="64.3" y="917" width="0.6" height="15.0" fill="rgb(250,72,26)" rx="2" ry="2" />
<text  x="67.33" y="927.5" ></text>
</g>
<g >
<title>all (29,016 samples, 100%)</title><rect x="10.0" y="965" width="1180.0" height="15.0" fill="rgb(246,146,24)" rx="2" ry="2" />
<text  x="13.00" y="975.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (9 samples, 0.03%)</title><rect x="787.2" y="133" width="0.3" height="15.0" fill="rgb(208,213,44)" rx="2" ry="2" />
<text  x="790.15" y="143.5" ></text>
</g>
<g >
<title>Game_Switches_Class::Get (3 samples, 0.01%)</title><rect x="454.4" y="677" width="0.1" height="15.0" fill="rgb(238,72,27)" rx="2" ry="2" />
<text  x="457.41" y="687.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator bool (9 samples, 0.03%)</title><rect x="69.7" y="917" width="0.4" height="15.0" fill="rgb(217,166,37)" rx="2" ry="2" />
<text  x="72.74" y="927.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (30 samples, 0.10%)</title><rect x="706.6" y="405" width="1.2" height="15.0" fill="rgb(217,122,6)" rx="2" ry="2" />
<text  x="709.59" y="415.5" ></text>
</g>
<g >
<title>[anon] (200 samples, 0.69%)</title><rect x="89.4" y="933" width="8.1" height="15.0" fill="rgb(253,98,27)" rx="2" ry="2" />
<text  x="92.38" y="943.5" ></text>
</g>
<g >
<title>Scene::MainFunction (121 samples, 0.42%)</title><rect x="127.2" y="853" width="5.0" height="15.0" fill="rgb(216,127,16)" rx="2" ry="2" />
<text  x="130.24" y="863.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_manager (12 samples, 0.04%)</title><rect x="802.6" y="613" width="0.5" height="15.0" fill="rgb(206,73,47)" rx="2" ry="2" />
<text  x="805.60" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (35 samples, 0.12%)</title><rect x="758.2" y="357" width="1.4" height="15.0" fill="rgb(235,159,31)" rx="2" ry="2" />
<text  x="761.20" y="367.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (53 samples, 0.18%)</title><rect x="135.3" y="469" width="2.1" height="15.0" fill="rgb(213,192,15)" rx="2" ry="2" />
<text  x="138.26" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::size (176 samples, 0.61%)</title><rect x="1019.7" y="725" width="7.1" height="15.0" fill="rgb(245,197,44)" rx="2" ry="2" />
<text  x="1022.69" y="735.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (5 samples, 0.02%)</title><rect x="1028.3" y="677" width="0.2" height="15.0" fill="rgb(254,121,30)" rx="2" ry="2" />
<text  x="1031.27" y="687.5" ></text>
</g>
<g >
<title>Drawable::GetPriorityForMapLayer (5 samples, 0.02%)</title><rect x="1150.1" y="741" width="0.2" height="15.0" fill="rgb(243,154,27)" rx="2" ry="2" />
<text  x="1153.11" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (19 samples, 0.07%)</title><rect x="407.0" y="597" width="0.8" height="15.0" fill="rgb(254,52,4)" rx="2" ry="2" />
<text  x="410.03" y="607.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (8 samples, 0.03%)</title><rect x="97.9" y="917" width="0.3" height="15.0" fill="rgb(209,215,23)" rx="2" ry="2" />
<text  x="100.92" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (99 samples, 0.34%)</title><rect x="645.7" y="565" width="4.0" height="15.0" fill="rgb(239,16,19)" rx="2" ry="2" />
<text  x="648.71" y="575.5" ></text>
</g>
<g >
<title>free_unref_page_commit (23 samples, 0.08%)</title><rect x="784.5" y="53" width="0.9" height="15.0" fill="rgb(229,197,1)" rx="2" ry="2" />
<text  x="787.51" y="63.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_construct_aux&lt;char32_t const*&gt; (8 samples, 0.03%)</title><rect x="823.6" y="613" width="0.3" height="15.0" fill="rgb(205,64,52)" rx="2" ry="2" />
<text  x="826.59" y="623.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Transition*, std::default_delete&lt;Transition&gt; &gt;::_M_head (5 samples, 0.02%)</title><rect x="798.0" y="533" width="0.3" height="15.0" fill="rgb(248,117,16)" rx="2" ry="2" />
<text  x="801.05" y="543.5" ></text>
</g>
<g >
<title>unmap_region (62 samples, 0.21%)</title><rect x="784.0" y="181" width="2.5" height="15.0" fill="rgb(238,128,23)" rx="2" ry="2" />
<text  x="787.02" y="191.5" ></text>
</g>
<g >
<title>__fget (5 samples, 0.02%)</title><rect x="23.9" y="837" width="0.2" height="15.0" fill="rgb(226,147,45)" rx="2" ry="2" />
<text  x="26.91" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_valptr (3 samples, 0.01%)</title><rect x="688.0" y="421" width="0.1" height="15.0" fill="rgb(250,222,14)" rx="2" ry="2" />
<text  x="691.00" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base (4 samples, 0.01%)</title><rect x="626.3" y="597" width="0.2" height="15.0" fill="rgb(251,96,45)" rx="2" ry="2" />
<text  x="629.31" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (14 samples, 0.05%)</title><rect x="691.5" y="549" width="0.6" height="15.0" fill="rgb(240,94,9)" rx="2" ry="2" />
<text  x="694.50" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (31 samples, 0.11%)</title><rect x="391.1" y="645" width="1.3" height="15.0" fill="rgb(228,203,27)" rx="2" ry="2" />
<text  x="394.09" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (56 samples, 0.19%)</title><rect x="966.3" y="661" width="2.3" height="15.0" fill="rgb(240,212,29)" rx="2" ry="2" />
<text  x="969.29" y="671.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~tuple (67 samples, 0.23%)</title><rect x="102.0" y="581" width="2.8" height="15.0" fill="rgb(224,136,43)" rx="2" ry="2" />
<text  x="105.03" y="591.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (144 samples, 0.50%)</title><rect x="117.9" y="581" width="5.8" height="15.0" fill="rgb(208,197,38)" rx="2" ry="2" />
<text  x="120.89" y="591.5" ></text>
</g>
<g >
<title>Game_Map::Update (121 samples, 0.42%)</title><rect x="127.2" y="789" width="5.0" height="15.0" fill="rgb(239,137,32)" rx="2" ry="2" />
<text  x="130.24" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_Rb_tree_iterator (3 samples, 0.01%)</title><rect x="1130.6" y="517" width="0.1" height="15.0" fill="rgb(205,58,1)" rx="2" ry="2" />
<text  x="1133.59" y="527.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (7 samples, 0.02%)</title><rect x="117.2" y="581" width="0.3" height="15.0" fill="rgb(254,94,16)" rx="2" ry="2" />
<text  x="120.20" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (174 samples, 0.60%)</title><rect x="239.0" y="677" width="7.0" height="15.0" fill="rgb(236,127,29)" rx="2" ry="2" />
<text  x="241.96" y="687.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (14 samples, 0.05%)</title><rect x="1043.1" y="725" width="0.6" height="15.0" fill="rgb(249,181,18)" rx="2" ry="2" />
<text  x="1046.11" y="735.5" ></text>
</g>
<g >
<title>mmap_region (10 samples, 0.03%)</title><rect x="1115.8" y="325" width="0.4" height="15.0" fill="rgb(223,111,36)" rx="2" ry="2" />
<text  x="1118.82" y="335.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (88 samples, 0.30%)</title><rect x="1157.1" y="741" width="3.6" height="15.0" fill="rgb(248,176,24)" rx="2" ry="2" />
<text  x="1160.14" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (3 samples, 0.01%)</title><rect x="589.1" y="629" width="0.2" height="15.0" fill="rgb(251,122,44)" rx="2" ry="2" />
<text  x="592.14" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (14 samples, 0.05%)</title><rect x="398.3" y="629" width="0.6" height="15.0" fill="rgb(223,28,41)" rx="2" ry="2" />
<text  x="401.33" y="639.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned (3 samples, 0.01%)</title><rect x="134.6" y="469" width="0.1" height="15.0" fill="rgb(207,49,26)" rx="2" ry="2" />
<text  x="137.60" y="479.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (11 samples, 0.04%)</title><rect x="75.6" y="917" width="0.4" height="15.0" fill="rgb(230,22,49)" rx="2" ry="2" />
<text  x="78.60" y="927.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (13 samples, 0.04%)</title><rect x="730.9" y="549" width="0.5" height="15.0" fill="rgb(208,90,25)" rx="2" ry="2" />
<text  x="733.87" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (3 samples, 0.01%)</title><rect x="824.3" y="645" width="0.1" height="15.0" fill="rgb(234,97,44)" rx="2" ry="2" />
<text  x="827.32" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_destroy (3 samples, 0.01%)</title><rect x="822.4" y="597" width="0.1" height="15.0" fill="rgb(237,95,48)" rx="2" ry="2" />
<text  x="825.41" y="607.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandMovePicture (79 samples, 0.27%)</title><rect x="587.4" y="693" width="3.2" height="15.0" fill="rgb(238,176,20)" rx="2" ry="2" />
<text  x="590.39" y="703.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (121 samples, 0.42%)</title><rect x="127.2" y="709" width="5.0" height="15.0" fill="rgb(220,184,8)" rx="2" ry="2" />
<text  x="130.24" y="719.5" ></text>
</g>
<g >
<title>operator delete (65 samples, 0.22%)</title><rect x="134.8" y="501" width="2.6" height="15.0" fill="rgb(219,63,48)" rx="2" ry="2" />
<text  x="137.77" y="511.5" ></text>
</g>
<g >
<title>do_IRQ (4 samples, 0.01%)</title><rect x="25.8" y="917" width="0.2" height="15.0" fill="rgb(242,113,54)" rx="2" ry="2" />
<text  x="28.82" y="927.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (55 samples, 0.19%)</title><rect x="811.0" y="645" width="2.3" height="15.0" fill="rgb(218,32,20)" rx="2" ry="2" />
<text  x="814.02" y="655.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (510 samples, 1.76%)</title><rect x="700.2" y="485" width="20.7" height="15.0" fill="rgb(230,12,49)" rx="2" ry="2" />
<text  x="703.20" y="495.5" ></text>
</g>
<g >
<title>MakeFlashColor (14 samples, 0.05%)</title><rect x="1153.2" y="725" width="0.6" height="15.0" fill="rgb(234,64,26)" rx="2" ry="2" />
<text  x="1156.20" y="735.5" ></text>
</g>
<g >
<title>[easyrpg-player] (9 samples, 0.03%)</title><rect x="97.5" y="933" width="0.4" height="15.0" fill="rgb(210,171,22)" rx="2" ry="2" />
<text  x="100.52" y="943.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.02%)</title><rect x="823.7" y="533" width="0.2" height="15.0" fill="rgb(222,62,40)" rx="2" ry="2" />
<text  x="826.67" y="543.5" ></text>
</g>
<g >
<title>__vm_enough_memory (3 samples, 0.01%)</title><rect x="1116.0" y="293" width="0.1" height="15.0" fill="rgb(230,81,47)" rx="2" ry="2" />
<text  x="1118.99" y="303.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (67 samples, 0.23%)</title><rect x="102.0" y="565" width="2.8" height="15.0" fill="rgb(206,129,4)" rx="2" ry="2" />
<text  x="105.03" y="575.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (67 samples, 0.23%)</title><rect x="102.0" y="549" width="2.8" height="15.0" fill="rgb(243,146,20)" rx="2" ry="2" />
<text  x="105.03" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_key (11 samples, 0.04%)</title><rect x="721.0" y="517" width="0.5" height="15.0" fill="rgb(243,15,22)" rx="2" ry="2" />
<text  x="724.03" y="527.5" ></text>
</g>
<g >
<title>Utils::DecodeUTF32 (51 samples, 0.18%)</title><rect x="821.1" y="661" width="2.0" height="15.0" fill="rgb(229,224,35)" rx="2" ry="2" />
<text  x="824.07" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (36 samples, 0.12%)</title><rect x="1114.8" y="437" width="1.5" height="15.0" fill="rgb(238,150,6)" rx="2" ry="2" />
<text  x="1117.85" y="447.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (49 samples, 0.17%)</title><rect x="572.1" y="645" width="2.0" height="15.0" fill="rgb(233,145,34)" rx="2" ry="2" />
<text  x="575.14" y="655.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (11 samples, 0.04%)</title><rect x="1152.3" y="709" width="0.5" height="15.0" fill="rgb(219,36,40)" rx="2" ry="2" />
<text  x="1155.34" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (9 samples, 0.03%)</title><rect x="573.0" y="613" width="0.3" height="15.0" fill="rgb(245,10,50)" rx="2" ry="2" />
<text  x="575.96" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (3 samples, 0.01%)</title><rect x="580.1" y="645" width="0.1" height="15.0" fill="rgb(238,108,53)" rx="2" ry="2" />
<text  x="583.07" y="655.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Game_Screen*, false&gt;::_M_head (3 samples, 0.01%)</title><rect x="835.4" y="581" width="0.1" height="15.0" fill="rgb(253,175,48)" rx="2" ry="2" />
<text  x="838.42" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (8 samples, 0.03%)</title><rect x="662.8" y="501" width="0.3" height="15.0" fill="rgb(230,76,30)" rx="2" ry="2" />
<text  x="665.79" y="511.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (7 samples, 0.02%)</title><rect x="803.8" y="597" width="0.3" height="15.0" fill="rgb(237,121,37)" rx="2" ry="2" />
<text  x="806.82" y="607.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_invoke (145 samples, 0.50%)</title><rect x="117.9" y="709" width="5.9" height="15.0" fill="rgb(251,33,35)" rx="2" ry="2" />
<text  x="120.89" y="719.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (5 samples, 0.02%)</title><rect x="824.1" y="645" width="0.2" height="15.0" fill="rgb(226,204,40)" rx="2" ry="2" />
<text  x="827.12" y="655.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (3 samples, 0.01%)</title><rect x="132.7" y="917" width="0.2" height="15.0" fill="rgb(247,1,35)" rx="2" ry="2" />
<text  x="135.73" y="927.5" ></text>
</g>
<g >
<title>Game_Map::SetNeedRefresh (10 samples, 0.03%)</title><rect x="491.7" y="677" width="0.4" height="15.0" fill="rgb(245,83,50)" rx="2" ry="2" />
<text  x="494.70" y="687.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (3 samples, 0.01%)</title><rect x="57.5" y="917" width="0.1" height="15.0" fill="rgb(227,15,46)" rx="2" ry="2" />
<text  x="60.46" y="927.5" ></text>
</g>
<g >
<title>FileRequestAsync::BindStart (3 samples, 0.01%)</title><rect x="26.2" y="933" width="0.1" height="15.0" fill="rgb(219,137,53)" rx="2" ry="2" />
<text  x="29.23" y="943.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Sprite*, false&gt;::_M_head (9 samples, 0.03%)</title><rect x="52.3" y="917" width="0.4" height="15.0" fill="rgb(231,100,7)" rx="2" ry="2" />
<text  x="55.33" y="927.5" ></text>
</g>
<g >
<title>FileRequestAsync::SetGraphicFile (59 samples, 0.20%)</title><rect x="796.5" y="645" width="2.4" height="15.0" fill="rgb(220,192,40)" rx="2" ry="2" />
<text  x="799.54" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (106 samples, 0.37%)</title><rect x="388.0" y="661" width="4.4" height="15.0" fill="rgb(232,160,8)" rx="2" ry="2" />
<text  x="391.04" y="671.5" ></text>
</g>
<g >
<title>__sys_recvmsg (3 samples, 0.01%)</title><rect x="1182.2" y="517" width="0.1" height="15.0" fill="rgb(246,99,4)" rx="2" ry="2" />
<text  x="1185.19" y="527.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (128 samples, 0.44%)</title><rect x="1113.6" y="469" width="5.2" height="15.0" fill="rgb(244,94,21)" rx="2" ry="2" />
<text  x="1116.59" y="479.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::CommonEvent&gt; (10 samples, 0.03%)</title><rect x="1033.8" y="693" width="0.4" height="15.0" fill="rgb(222,115,23)" rx="2" ry="2" />
<text  x="1036.84" y="703.5" ></text>
</g>
<g >
<title>free_unref_page_list (26 samples, 0.09%)</title><rect x="784.4" y="69" width="1.0" height="15.0" fill="rgb(236,201,27)" rx="2" ry="2" />
<text  x="787.39" y="79.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (145 samples, 0.50%)</title><rect x="117.9" y="837" width="5.9" height="15.0" fill="rgb(232,121,46)" rx="2" ry="2" />
<text  x="120.89" y="847.5" ></text>
</g>
<g >
<title>anon_vma_clone (3 samples, 0.01%)</title><rect x="783.8" y="165" width="0.1" height="15.0" fill="rgb(216,53,39)" rx="2" ry="2" />
<text  x="786.82" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (10 samples, 0.03%)</title><rect x="983.1" y="709" width="0.4" height="15.0" fill="rgb(241,84,38)" rx="2" ry="2" />
<text  x="986.13" y="719.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (58 samples, 0.20%)</title><rect x="98.7" y="549" width="2.4" height="15.0" fill="rgb(220,226,2)" rx="2" ry="2" />
<text  x="101.70" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (56 samples, 0.19%)</title><rect x="980.5" y="709" width="2.3" height="15.0" fill="rgb(206,136,51)" rx="2" ry="2" />
<text  x="983.52" y="719.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (107 samples, 0.37%)</title><rect x="715.7" y="453" width="4.4" height="15.0" fill="rgb(235,126,3)" rx="2" ry="2" />
<text  x="718.74" y="463.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (3 samples, 0.01%)</title><rect x="586.9" y="677" width="0.1" height="15.0" fill="rgb(216,21,29)" rx="2" ry="2" />
<text  x="589.91" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="824.0" y="565" width="0.1" height="15.0" fill="rgb(212,219,47)" rx="2" ry="2" />
<text  x="827.00" y="575.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (46 samples, 0.16%)</title><rect x="661.4" y="517" width="1.8" height="15.0" fill="rgb(206,223,20)" rx="2" ry="2" />
<text  x="664.37" y="527.5" ></text>
</g>
<g >
<title>security_file_permission (3 samples, 0.01%)</title><rect x="24.8" y="837" width="0.2" height="15.0" fill="rgb(221,65,8)" rx="2" ry="2" />
<text  x="27.84" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, false, true&gt;::_Node_iterator (3 samples, 0.01%)</title><rect x="642.6" y="597" width="0.1" height="15.0" fill="rgb(243,79,53)" rx="2" ry="2" />
<text  x="645.62" y="607.5" ></text>
</g>
<g >
<title>operator new (13 samples, 0.04%)</title><rect x="101.5" y="501" width="0.5" height="15.0" fill="rgb(220,177,21)" rx="2" ry="2" />
<text  x="104.50" y="511.5" ></text>
</g>
<g >
<title>__interceptor_recvmsg (4 samples, 0.01%)</title><rect x="1182.2" y="613" width="0.1" height="15.0" fill="rgb(219,107,52)" rx="2" ry="2" />
<text  x="1185.15" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (112 samples, 0.39%)</title><rect x="552.9" y="661" width="4.6" height="15.0" fill="rgb(224,44,41)" rx="2" ry="2" />
<text  x="555.95" y="671.5" ></text>
</g>
<g >
<title>Color::Color (4 samples, 0.01%)</title><rect x="1149.9" y="741" width="0.2" height="15.0" fill="rgb(205,22,43)" rx="2" ry="2" />
<text  x="1152.94" y="751.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.01%)</title><rect x="823.3" y="597" width="0.2" height="15.0" fill="rgb(206,104,4)" rx="2" ry="2" />
<text  x="826.34" y="607.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (29 samples, 0.10%)</title><rect x="643.4" y="597" width="1.2" height="15.0" fill="rgb(217,100,17)" rx="2" ry="2" />
<text  x="646.43" y="607.5" ></text>
</g>
<g >
<title>Sdl2Ui::ProcessEvent (30 samples, 0.10%)</title><rect x="1181.1" y="805" width="1.3" height="15.0" fill="rgb(247,186,25)" rx="2" ry="2" />
<text  x="1184.13" y="815.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::_M_head (5 samples, 0.02%)</title><rect x="1029.3" y="661" width="0.2" height="15.0" fill="rgb(249,194,46)" rx="2" ry="2" />
<text  x="1032.28" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (52 samples, 0.18%)</title><rect x="289.4" y="677" width="2.1" height="15.0" fill="rgb(214,58,41)" rx="2" ry="2" />
<text  x="292.42" y="687.5" ></text>
</g>
<g >
<title>Game_Map::Update (17 samples, 0.06%)</title><rect x="117.2" y="853" width="0.7" height="15.0" fill="rgb(242,205,21)" rx="2" ry="2" />
<text  x="120.20" y="863.5" ></text>
</g>
<g >
<title>_XEventsQueued (9 samples, 0.03%)</title><rect x="1180.8" y="725" width="0.3" height="15.0" fill="rgb(234,125,21)" rx="2" ry="2" />
<text  x="1183.77" y="735.5" ></text>
</g>
<g >
<title>memcmp@plt (4 samples, 0.01%)</title><rect x="719.6" y="421" width="0.2" height="15.0" fill="rgb(240,102,49)" rx="2" ry="2" />
<text  x="722.60" y="431.5" ></text>
</g>
<g >
<title>std::swap&lt;Bitmap*&gt; (11 samples, 0.04%)</title><rect x="810.6" y="629" width="0.4" height="15.0" fill="rgb(219,84,9)" rx="2" ry="2" />
<text  x="813.57" y="639.5" ></text>
</g>
<g >
<title>Player::IsRPG2k3 (19 samples, 0.07%)</title><rect x="558.0" y="677" width="0.8" height="15.0" fill="rgb(243,130,28)" rx="2" ry="2" />
<text  x="560.99" y="687.5" ></text>
</g>
<g >
<title>Scene::GetRequestedScene (9 samples, 0.03%)</title><rect x="1001.4" y="725" width="0.4" height="15.0" fill="rgb(253,209,44)" rx="2" ry="2" />
<text  x="1004.39" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (19 samples, 0.07%)</title><rect x="882.5" y="661" width="0.8" height="15.0" fill="rgb(238,226,53)" rx="2" ry="2" />
<text  x="885.52" y="671.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (518 samples, 1.79%)</title><rect x="699.9" y="501" width="21.0" height="15.0" fill="rgb(207,195,3)" rx="2" ry="2" />
<text  x="702.88" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.08%)</title><rect x="1181.2" y="725" width="1.0" height="15.0" fill="rgb(208,69,54)" rx="2" ry="2" />
<text  x="1184.22" y="735.5" ></text>
</g>
<g >
<title>_pixman_implementation_lookup_composite (11 samples, 0.04%)</title><rect x="1054.4" y="709" width="0.5" height="15.0" fill="rgb(246,35,50)" rx="2" ry="2" />
<text  x="1057.42" y="719.5" ></text>
</g>
<g >
<title>unmap_single_vma (4 samples, 0.01%)</title><rect x="787.6" y="197" width="0.1" height="15.0" fill="rgb(245,93,24)" rx="2" ry="2" />
<text  x="790.56" y="207.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (6 samples, 0.02%)</title><rect x="26.0" y="933" width="0.2" height="15.0" fill="rgb(214,23,36)" rx="2" ry="2" />
<text  x="28.98" y="943.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (20 samples, 0.07%)</title><rect x="1115.5" y="373" width="0.8" height="15.0" fill="rgb(215,50,4)" rx="2" ry="2" />
<text  x="1118.50" y="383.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (10 samples, 0.03%)</title><rect x="24.3" y="821" width="0.4" height="15.0" fill="rgb(249,112,25)" rx="2" ry="2" />
<text  x="27.27" y="831.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_invoke (121 samples, 0.42%)</title><rect x="127.2" y="613" width="5.0" height="15.0" fill="rgb(217,40,27)" rx="2" ry="2" />
<text  x="130.24" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (17 samples, 0.06%)</title><rect x="105.2" y="565" width="0.7" height="15.0" fill="rgb(212,215,34)" rx="2" ry="2" />
<text  x="108.20" y="575.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (44 samples, 0.15%)</title><rect x="1158.9" y="709" width="1.8" height="15.0" fill="rgb(240,121,7)" rx="2" ry="2" />
<text  x="1161.93" y="719.5" ></text>
</g>
<g >
<title>Bitmap::GetRect (42 samples, 0.14%)</title><rect x="737.4" y="549" width="1.7" height="15.0" fill="rgb(213,131,13)" rx="2" ry="2" />
<text  x="740.37" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (393 samples, 1.35%)</title><rect x="1082.9" y="725" width="16.0" height="15.0" fill="rgb(227,166,42)" rx="2" ry="2" />
<text  x="1085.88" y="735.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::~_Head_base (65 samples, 0.22%)</title><rect x="134.8" y="517" width="2.6" height="15.0" fill="rgb(207,177,6)" rx="2" ry="2" />
<text  x="137.77" y="527.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (35 samples, 0.12%)</title><rect x="647.9" y="485" width="1.4" height="15.0" fill="rgb(239,177,35)" rx="2" ry="2" />
<text  x="650.87" y="495.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (3 samples, 0.01%)</title><rect x="1042.9" y="693" width="0.1" height="15.0" fill="rgb(215,166,14)" rx="2" ry="2" />
<text  x="1045.87" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (3 samples, 0.01%)</title><rect x="839.2" y="645" width="0.1" height="15.0" fill="rgb(252,17,51)" rx="2" ry="2" />
<text  x="842.20" y="655.5" ></text>
</g>
<g >
<title>Game_Interpreter::IsAsyncPending (3 samples, 0.01%)</title><rect x="31.6" y="917" width="0.2" height="15.0" fill="rgb(218,59,2)" rx="2" ry="2" />
<text  x="34.63" y="927.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (149 samples, 0.51%)</title><rect x="98.7" y="725" width="6.1" height="15.0" fill="rgb(205,173,39)" rx="2" ry="2" />
<text  x="101.70" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (13 samples, 0.04%)</title><rect x="742.9" y="469" width="0.5" height="15.0" fill="rgb(243,103,14)" rx="2" ry="2" />
<text  x="745.90" y="479.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (121 samples, 0.42%)</title><rect x="127.2" y="661" width="5.0" height="15.0" fill="rgb(209,208,30)" rx="2" ry="2" />
<text  x="130.24" y="671.5" ></text>
</g>
<g >
<title>__strlen_avx2 (17 samples, 0.06%)</title><rect x="800.3" y="613" width="0.7" height="15.0" fill="rgb(252,162,1)" rx="2" ry="2" />
<text  x="803.33" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (11 samples, 0.04%)</title><rect x="725.2" y="437" width="0.5" height="15.0" fill="rgb(215,17,27)" rx="2" ry="2" />
<text  x="728.21" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator bool (11 samples, 0.04%)</title><rect x="1042.5" y="757" width="0.5" height="15.0" fill="rgb(219,173,8)" rx="2" ry="2" />
<text  x="1045.54" y="767.5" ></text>
</g>
<g >
<title>sync_regs (24 samples, 0.08%)</title><rect x="1088.3" y="677" width="1.0" height="15.0" fill="rgb(222,71,17)" rx="2" ry="2" />
<text  x="1091.33" y="687.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (4 samples, 0.01%)</title><rect x="1167.8" y="741" width="0.1" height="15.0" fill="rgb(240,95,4)" rx="2" ry="2" />
<text  x="1170.76" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (11 samples, 0.04%)</title><rect x="94.0" y="917" width="0.4" height="15.0" fill="rgb(237,31,5)" rx="2" ry="2" />
<text  x="96.98" y="927.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_invoke (306 samples, 1.05%)</title><rect x="104.8" y="693" width="12.4" height="15.0" fill="rgb(240,85,6)" rx="2" ry="2" />
<text  x="107.75" y="703.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt; (3 samples, 0.01%)</title><rect x="803.0" y="581" width="0.1" height="15.0" fill="rgb(239,214,51)" rx="2" ry="2" />
<text  x="805.97" y="591.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::__allocated_ptr (7 samples, 0.02%)</title><rect x="1136.2" y="629" width="0.3" height="15.0" fill="rgb(222,97,26)" rx="2" ry="2" />
<text  x="1139.20" y="639.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (67 samples, 0.23%)</title><rect x="102.0" y="485" width="2.8" height="15.0" fill="rgb(220,56,20)" rx="2" ry="2" />
<text  x="105.03" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (144 samples, 0.50%)</title><rect x="218.3" y="693" width="5.8" height="15.0" fill="rgb(210,207,49)" rx="2" ry="2" />
<text  x="221.26" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (65 samples, 0.22%)</title><rect x="134.8" y="485" width="2.6" height="15.0" fill="rgb(207,123,12)" rx="2" ry="2" />
<text  x="137.77" y="495.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (17 samples, 0.06%)</title><rect x="117.2" y="773" width="0.7" height="15.0" fill="rgb(226,174,7)" rx="2" ry="2" />
<text  x="120.20" y="783.5" ></text>
</g>
<g >
<title>variables (12 samples, 0.04%)</title><rect x="557.5" y="661" width="0.5" height="15.0" fill="rgb(250,0,54)" rx="2" ry="2" />
<text  x="560.50" y="671.5" ></text>
</g>
<g >
<title>FileRequestAsync::BindStart (306 samples, 1.05%)</title><rect x="104.8" y="725" width="12.4" height="15.0" fill="rgb(214,226,49)" rx="2" ry="2" />
<text  x="107.75" y="735.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash (9 samples, 0.03%)</title><rect x="689.6" y="469" width="0.4" height="15.0" fill="rgb(224,11,49)" rx="2" ry="2" />
<text  x="692.59" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (23 samples, 0.08%)</title><rect x="743.9" y="485" width="0.9" height="15.0" fill="rgb(234,205,36)" rx="2" ry="2" />
<text  x="746.88" y="495.5" ></text>
</g>
<g >
<title>__sched_text_start (92 samples, 0.32%)</title><rect x="19.9" y="805" width="3.7" height="15.0" fill="rgb(216,200,19)" rx="2" ry="2" />
<text  x="22.88" y="815.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (306 samples, 1.05%)</title><rect x="104.8" y="837" width="12.4" height="15.0" fill="rgb(250,201,21)" rx="2" ry="2" />
<text  x="107.75" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (10 samples, 0.03%)</title><rect x="912.3" y="693" width="0.4" height="15.0" fill="rgb(214,217,13)" rx="2" ry="2" />
<text  x="915.32" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (12 samples, 0.04%)</title><rect x="82.0" y="917" width="0.5" height="15.0" fill="rgb(215,76,23)" rx="2" ry="2" />
<text  x="85.02" y="927.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (11 samples, 0.04%)</title><rect x="1094.5" y="565" width="0.4" height="15.0" fill="rgb(214,113,25)" rx="2" ry="2" />
<text  x="1097.47" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, false, true&gt;::operator (3 samples, 0.01%)</title><rect x="685.5" y="533" width="0.1" height="15.0" fill="rgb(248,160,27)" rx="2" ry="2" />
<text  x="688.48" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_create (19 samples, 0.07%)</title><rect x="821.6" y="613" width="0.8" height="15.0" fill="rgb(235,32,49)" rx="2" ry="2" />
<text  x="824.64" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (53 samples, 0.18%)</title><rect x="907.3" y="645" width="2.2" height="15.0" fill="rgb(239,45,18)" rx="2" ry="2" />
<text  x="910.32" y="655.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (16 samples, 0.06%)</title><rect x="109.8" y="533" width="0.7" height="15.0" fill="rgb(225,137,24)" rx="2" ry="2" />
<text  x="112.84" y="543.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (17 samples, 0.06%)</title><rect x="117.2" y="837" width="0.7" height="15.0" fill="rgb(240,2,29)" rx="2" ry="2" />
<text  x="120.20" y="847.5" ></text>
</g>
<g >
<title>_pixman_image_validate (12 samples, 0.04%)</title><rect x="1053.9" y="709" width="0.5" height="15.0" fill="rgb(238,165,31)" rx="2" ry="2" />
<text  x="1056.93" y="719.5" ></text>
</g>
<g >
<title>SDL_PumpEvents_REAL (22 samples, 0.08%)</title><rect x="1180.2" y="789" width="0.9" height="15.0" fill="rgb(215,48,2)" rx="2" ry="2" />
<text  x="1183.24" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, unsigned long, true&gt;::_S_equals (25 samples, 0.09%)</title><rect x="687.8" y="453" width="1.0" height="15.0" fill="rgb(207,60,27)" rx="2" ry="2" />
<text  x="690.80" y="463.5" ></text>
</g>
<g >
<title>AsyncHandler::IsImportantFilePending (8 samples, 0.03%)</title><rect x="145.1" y="805" width="0.3" height="15.0" fill="rgb(239,171,9)" rx="2" ry="2" />
<text  x="148.10" y="815.5" ></text>
</g>
<g >
<title>__x64_sys_read (27 samples, 0.09%)</title><rect x="23.9" y="901" width="1.1" height="15.0" fill="rgb(221,86,22)" rx="2" ry="2" />
<text  x="26.87" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (8 samples, 0.03%)</title><rect x="459.3" y="677" width="0.4" height="15.0" fill="rgb(225,201,49)" rx="2" ry="2" />
<text  x="462.33" y="687.5" ></text>
</g>
<g >
<title>Sprite::SetY (7 samples, 0.02%)</title><rect x="1163.0" y="741" width="0.3" height="15.0" fill="rgb(251,199,1)" rx="2" ry="2" />
<text  x="1166.00" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt; &gt; &gt;::size (9 samples, 0.03%)</title><rect x="819.8" y="661" width="0.4" height="15.0" fill="rgb(244,29,10)" rx="2" ry="2" />
<text  x="822.85" y="671.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (18 samples, 0.06%)</title><rect x="1117.1" y="325" width="0.7" height="15.0" fill="rgb(213,63,44)" rx="2" ry="2" />
<text  x="1120.08" y="335.5" ></text>
</g>
<g >
<title>_pixman_image_allocate (118 samples, 0.41%)</title><rect x="1122.5" y="549" width="4.8" height="15.0" fill="rgb(247,122,52)" rx="2" ry="2" />
<text  x="1125.45" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (101 samples, 0.35%)</title><rect x="782.6" y="277" width="4.1" height="15.0" fill="rgb(248,36,3)" rx="2" ry="2" />
<text  x="785.56" y="287.5" ></text>
</g>
<g >
<title>std::swap&lt;Bitmap*&gt; (3 samples, 0.01%)</title><rect x="77.5" y="917" width="0.1" height="15.0" fill="rgb(231,62,31)" rx="2" ry="2" />
<text  x="80.51" y="927.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt;::_M_head (3 samples, 0.01%)</title><rect x="1177.4" y="677" width="0.2" height="15.0" fill="rgb(222,178,8)" rx="2" ry="2" />
<text  x="1180.43" y="687.5" ></text>
</g>
<g >
<title>Bitmap::pitch (4 samples, 0.01%)</title><rect x="1082.2" y="725" width="0.2" height="15.0" fill="rgb(241,103,29)" rx="2" ry="2" />
<text  x="1085.23" y="735.5" ></text>
</g>
<g >
<title>Sprite::SetFlashEffect (14 samples, 0.05%)</title><rect x="1156.2" y="725" width="0.5" height="15.0" fill="rgb(221,74,36)" rx="2" ry="2" />
<text  x="1159.16" y="735.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (5 samples, 0.02%)</title><rect x="33.6" y="917" width="0.2" height="15.0" fill="rgb(220,56,53)" rx="2" ry="2" />
<text  x="36.59" y="927.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::get (19 samples, 0.07%)</title><rect x="1027.9" y="725" width="0.8" height="15.0" fill="rgb(217,144,51)" rx="2" ry="2" />
<text  x="1030.90" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (19 samples, 0.07%)</title><rect x="79.3" y="917" width="0.8" height="15.0" fill="rgb(235,202,45)" rx="2" ry="2" />
<text  x="82.34" y="927.5" ></text>
</g>
<g >
<title>std::__find_if&lt;int const*, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (7 samples, 0.02%)</title><rect x="61.2" y="917" width="0.3" height="15.0" fill="rgb(240,29,40)" rx="2" ry="2" />
<text  x="64.24" y="927.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (85 samples, 0.29%)</title><rect x="134.0" y="789" width="3.4" height="15.0" fill="rgb(243,182,47)" rx="2" ry="2" />
<text  x="136.95" y="799.5" ></text>
</g>
<g >
<title>Game_Map::Refresh (426 samples, 1.47%)</title><rect x="984.1" y="725" width="17.3" height="15.0" fill="rgb(227,73,38)" rx="2" ry="2" />
<text  x="987.06" y="735.5" ></text>
</g>
<g >
<title>Player::Update (85 samples, 0.29%)</title><rect x="134.0" y="853" width="3.4" height="15.0" fill="rgb(205,61,21)" rx="2" ry="2" />
<text  x="136.95" y="863.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (236 samples, 0.81%)</title><rect x="1109.7" y="485" width="9.6" height="15.0" fill="rgb(217,173,51)" rx="2" ry="2" />
<text  x="1112.72" y="495.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (1,290 samples, 4.45%)</title><rect x="739.4" y="549" width="52.5" height="15.0" fill="rgb(231,45,48)" rx="2" ry="2" />
<text  x="742.41" y="559.5" >std::..</text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (20 samples, 0.07%)</title><rect x="573.3" y="629" width="0.8" height="15.0" fill="rgb(233,113,15)" rx="2" ry="2" />
<text  x="576.32" y="639.5" ></text>
</g>
<g >
<title>Scene::HasRequestedScene (16 samples, 0.06%)</title><rect x="36.5" y="917" width="0.6" height="15.0" fill="rgb(225,89,4)" rx="2" ry="2" />
<text  x="39.47" y="927.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (33 samples, 0.11%)</title><rect x="1164.8" y="741" width="1.3" height="15.0" fill="rgb(234,65,29)" rx="2" ry="2" />
<text  x="1167.79" y="751.5" ></text>
</g>
<g >
<title>Cache::Picture (7 samples, 0.02%)</title><rect x="27.4" y="917" width="0.3" height="15.0" fill="rgb(240,118,20)" rx="2" ry="2" />
<text  x="30.41" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (41 samples, 0.14%)</title><rect x="395.3" y="645" width="1.6" height="15.0" fill="rgb(218,38,11)" rx="2" ry="2" />
<text  x="398.28" y="655.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (62 samples, 0.21%)</title><rect x="791.9" y="565" width="2.6" height="15.0" fill="rgb(206,178,47)" rx="2" ry="2" />
<text  x="794.95" y="575.5" ></text>
</g>
<g >
<title>operator== (9 samples, 0.03%)</title><rect x="1156.3" y="693" width="0.4" height="15.0" fill="rgb(209,115,2)" rx="2" ry="2" />
<text  x="1159.33" y="703.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;*&gt; (4 samples, 0.01%)</title><rect x="50.7" y="917" width="0.2" height="15.0" fill="rgb(212,224,46)" rx="2" ry="2" />
<text  x="53.71" y="927.5" ></text>
</g>
<g >
<title>Game_Map::GetNeedRefresh (4 samples, 0.01%)</title><rect x="33.0" y="917" width="0.1" height="15.0" fill="rgb(224,225,35)" rx="2" ry="2" />
<text  x="35.98" y="927.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (306 samples, 1.05%)</title><rect x="104.8" y="821" width="12.4" height="15.0" fill="rgb(240,213,50)" rx="2" ry="2" />
<text  x="107.75" y="831.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Scene, (__gnu_cxx::_Lock_policy)2&gt;::get (6 samples, 0.02%)</title><rect x="65.6" y="917" width="0.3" height="15.0" fill="rgb(223,184,0)" rx="2" ry="2" />
<text  x="68.63" y="927.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (14 samples, 0.05%)</title><rect x="618.3" y="581" width="0.5" height="15.0" fill="rgb(224,172,26)" rx="2" ry="2" />
<text  x="621.26" y="591.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator bool (8 samples, 0.03%)</title><rect x="692.7" y="549" width="0.3" height="15.0" fill="rgb(217,129,51)" rx="2" ry="2" />
<text  x="695.72" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.01%)</title><rect x="1180.6" y="661" width="0.1" height="15.0" fill="rgb(224,183,2)" rx="2" ry="2" />
<text  x="1183.57" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (391 samples, 1.35%)</title><rect x="773.0" y="325" width="15.9" height="15.0" fill="rgb(252,39,24)" rx="2" ry="2" />
<text  x="776.00" y="335.5" ></text>
</g>
<g >
<title>FileRequestAsync::BindStart (121 samples, 0.42%)</title><rect x="127.2" y="645" width="5.0" height="15.0" fill="rgb(251,150,17)" rx="2" ry="2" />
<text  x="130.24" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_M_lower_bound (144 samples, 0.50%)</title><rect x="117.9" y="613" width="5.8" height="15.0" fill="rgb(249,39,54)" rx="2" ry="2" />
<text  x="120.89" y="623.5" ></text>
</g>
<g >
<title>Sprite::SetWaverPhase (3 samples, 0.01%)</title><rect x="1162.4" y="741" width="0.1" height="15.0" fill="rgb(239,32,3)" rx="2" ry="2" />
<text  x="1165.39" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (13 samples, 0.04%)</title><rect x="101.5" y="517" width="0.5" height="15.0" fill="rgb(238,107,41)" rx="2" ry="2" />
<text  x="104.50" y="527.5" ></text>
</g>
<g >
<title>xhci_irq (4 samples, 0.01%)</title><rect x="25.8" y="805" width="0.2" height="15.0" fill="rgb(227,24,43)" rx="2" ry="2" />
<text  x="28.82" y="815.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (231 samples, 0.80%)</title><rect x="1136.1" y="645" width="9.4" height="15.0" fill="rgb(240,162,17)" rx="2" ry="2" />
<text  x="1139.08" y="655.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (81 samples, 0.28%)</title><rect x="1090.9" y="597" width="3.3" height="15.0" fill="rgb(206,176,30)" rx="2" ry="2" />
<text  x="1093.89" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (6 samples, 0.02%)</title><rect x="617.4" y="581" width="0.3" height="15.0" fill="rgb(222,218,50)" rx="2" ry="2" />
<text  x="620.45" y="591.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (6 samples, 0.02%)</title><rect x="688.5" y="421" width="0.3" height="15.0" fill="rgb(234,162,42)" rx="2" ry="2" />
<text  x="691.53" y="431.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (58 samples, 0.20%)</title><rect x="98.7" y="581" width="2.4" height="15.0" fill="rgb(205,220,29)" rx="2" ry="2" />
<text  x="101.70" y="591.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (21,734 samples, 74.90%)</title><rect x="146.2" y="757" width="883.8" height="15.0" fill="rgb(252,180,27)" rx="2" ry="2" />
<text  x="149.15" y="767.5" >Game_CommonEvent::Update</text>
</g>
<g >
<title>Game_Switches_Class::Set (5 samples, 0.02%)</title><rect x="461.8" y="677" width="0.2" height="15.0" fill="rgb(252,202,12)" rx="2" ry="2" />
<text  x="464.81" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_S_key (47 samples, 0.16%)</title><rect x="1131.6" y="501" width="1.9" height="15.0" fill="rgb(222,225,11)" rx="2" ry="2" />
<text  x="1134.56" y="511.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (17 samples, 0.06%)</title><rect x="105.2" y="613" width="0.7" height="15.0" fill="rgb(250,223,1)" rx="2" ry="2" />
<text  x="108.20" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::operator[] (11 samples, 0.04%)</title><rect x="84.1" y="917" width="0.4" height="15.0" fill="rgb(232,60,7)" rx="2" ry="2" />
<text  x="87.10" y="927.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (5 samples, 0.02%)</title><rect x="26.9" y="917" width="0.2" height="15.0" fill="rgb(207,11,40)" rx="2" ry="2" />
<text  x="29.92" y="927.5" ></text>
</g>
<g >
<title>__fdget (6 samples, 0.02%)</title><rect x="19.4" y="869" width="0.2" height="15.0" fill="rgb(245,166,37)" rx="2" ry="2" />
<text  x="22.35" y="879.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (8 samples, 0.03%)</title><rect x="73.6" y="917" width="0.4" height="15.0" fill="rgb(253,198,50)" rx="2" ry="2" />
<text  x="76.64" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt; &gt; &gt; &gt;::operator++ (3 samples, 0.01%)</title><rect x="48.2" y="917" width="0.1" height="15.0" fill="rgb(220,227,10)" rx="2" ry="2" />
<text  x="51.23" y="927.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (138 samples, 0.48%)</title><rect x="679.9" y="517" width="5.6" height="15.0" fill="rgb(229,202,53)" rx="2" ry="2" />
<text  x="682.87" y="527.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (121 samples, 0.42%)</title><rect x="127.2" y="757" width="5.0" height="15.0" fill="rgb(208,132,22)" rx="2" ry="2" />
<text  x="130.24" y="767.5" ></text>
</g>
<g >
<title>std::none_of&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, Input::UiSource::Update()::{lambda(int)#1}&gt; (16 samples, 0.06%)</title><rect x="143.8" y="773" width="0.6" height="15.0" fill="rgb(237,93,32)" rx="2" ry="2" />
<text  x="146.75" y="783.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (6 samples, 0.02%)</title><rect x="809.9" y="645" width="0.2" height="15.0" fill="rgb(205,51,17)" rx="2" ry="2" />
<text  x="812.88" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.01%)</title><rect x="1182.2" y="565" width="0.1" height="15.0" fill="rgb(212,211,53)" rx="2" ry="2" />
<text  x="1185.19" y="575.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::_Vector_impl::~_Vector_impl (6 samples, 0.02%)</title><rect x="58.5" y="917" width="0.2" height="15.0" fill="rgb(252,170,38)" rx="2" ry="2" />
<text  x="61.48" y="927.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (1,707 samples, 5.88%)</title><rect x="840.4" y="693" width="69.4" height="15.0" fill="rgb(242,146,51)" rx="2" ry="2" />
<text  x="843.42" y="703.5" >Game_In..</text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::get (19 samples, 0.07%)</title><rect x="1165.4" y="709" width="0.7" height="15.0" fill="rgb(217,62,19)" rx="2" ry="2" />
<text  x="1168.36" y="719.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (10 samples, 0.03%)</title><rect x="62.8" y="917" width="0.4" height="15.0" fill="rgb(226,94,47)" rx="2" ry="2" />
<text  x="65.79" y="927.5" ></text>
</g>
<g >
<title>Game_Screen::GetFlashColor (24 samples, 0.08%)</title><rect x="1152.8" y="741" width="1.0" height="15.0" fill="rgb(226,161,8)" rx="2" ry="2" />
<text  x="1155.79" y="751.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Impl::_Impl (4 samples, 0.01%)</title><rect x="1103.4" y="629" width="0.1" height="15.0" fill="rgb(212,117,54)" rx="2" ry="2" />
<text  x="1106.38" y="639.5" ></text>
</g>
<g >
<title>Game_Map::Update (149 samples, 0.51%)</title><rect x="98.7" y="821" width="6.1" height="15.0" fill="rgb(207,31,14)" rx="2" ry="2" />
<text  x="101.70" y="831.5" ></text>
</g>
<g >
<title>Tone::Tone (19 samples, 0.07%)</title><rect x="1163.5" y="741" width="0.8" height="15.0" fill="rgb(222,93,15)" rx="2" ry="2" />
<text  x="1166.53" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::~basic_string (5 samples, 0.02%)</title><rect x="823.9" y="661" width="0.2" height="15.0" fill="rgb(242,162,15)" rx="2" ry="2" />
<text  x="826.91" y="671.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::swap (22 samples, 0.08%)</title><rect x="810.1" y="645" width="0.9" height="15.0" fill="rgb(230,155,25)" rx="2" ry="2" />
<text  x="813.13" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (3 samples, 0.01%)</title><rect x="589.7" y="645" width="0.1" height="15.0" fill="rgb(238,23,38)" rx="2" ry="2" />
<text  x="592.67" y="655.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (72 samples, 0.25%)</title><rect x="20.5" y="773" width="2.9" height="15.0" fill="rgb(229,9,21)" rx="2" ry="2" />
<text  x="23.45" y="783.5" ></text>
</g>
<g >
<title>create_bits_image_internal (533 samples, 1.84%)</title><rect x="1105.6" y="565" width="21.7" height="15.0" fill="rgb(206,90,18)" rx="2" ry="2" />
<text  x="1108.57" y="575.5" >c..</text>
</g>
<g >
<title>SDL_UDEV_hotplug_update_available (3 samples, 0.01%)</title><rect x="1180.3" y="725" width="0.1" height="15.0" fill="rgb(224,183,44)" rx="2" ry="2" />
<text  x="1183.28" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (17 samples, 0.06%)</title><rect x="105.2" y="549" width="0.7" height="15.0" fill="rgb(247,94,26)" rx="2" ry="2" />
<text  x="108.20" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.02%)</title><rect x="1054.5" y="677" width="0.2" height="15.0" fill="rgb(246,114,30)" rx="2" ry="2" />
<text  x="1057.54" y="687.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (4 samples, 0.01%)</title><rect x="808.3" y="629" width="0.2" height="15.0" fill="rgb(232,8,26)" rx="2" ry="2" />
<text  x="811.34" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (5 samples, 0.02%)</title><rect x="619.1" y="597" width="0.2" height="15.0" fill="rgb(228,87,48)" rx="2" ry="2" />
<text  x="622.07" y="607.5" ></text>
</g>
<g >
<title>Game_Switches_Class::Get (102 samples, 0.35%)</title><rect x="147.8" y="725" width="4.1" height="15.0" fill="rgb(252,176,13)" rx="2" ry="2" />
<text  x="150.78" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (438 samples, 1.51%)</title><rect x="246.1" y="693" width="17.8" height="15.0" fill="rgb(230,80,21)" rx="2" ry="2" />
<text  x="249.07" y="703.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (4 samples, 0.01%)</title><rect x="144.9" y="789" width="0.2" height="15.0" fill="rgb(215,170,44)" rx="2" ry="2" />
<text  x="147.89" y="799.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (145 samples, 0.50%)</title><rect x="117.9" y="853" width="5.9" height="15.0" fill="rgb(224,151,4)" rx="2" ry="2" />
<text  x="120.89" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (58 samples, 0.20%)</title><rect x="507.6" y="661" width="2.3" height="15.0" fill="rgb(242,154,9)" rx="2" ry="2" />
<text  x="510.56" y="671.5" ></text>
</g>
<g >
<title>sse2_composite_over_8888_8888 (7 samples, 0.02%)</title><rect x="142.0" y="677" width="0.2" height="15.0" fill="rgb(233,115,44)" rx="2" ry="2" />
<text  x="144.97" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (662 samples, 2.28%)</title><rect x="763.0" y="357" width="26.9" height="15.0" fill="rgb(242,170,18)" rx="2" ry="2" />
<text  x="765.99" y="367.5" >[..</text>
</g>
<g >
<title>_raw_spin_lock (8 samples, 0.03%)</title><rect x="1090.6" y="613" width="0.3" height="15.0" fill="rgb(243,146,52)" rx="2" ry="2" />
<text  x="1093.57" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (32 samples, 0.11%)</title><rect x="438.9" y="629" width="1.3" height="15.0" fill="rgb(207,180,18)" rx="2" ry="2" />
<text  x="441.92" y="639.5" ></text>
</g>
<g >
<title>Game_Picture::SyncCurrentToFinish (35 samples, 0.12%)</title><rect x="1038.0" y="741" width="1.4" height="15.0" fill="rgb(223,1,10)" rx="2" ry="2" />
<text  x="1041.03" y="751.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (41 samples, 0.14%)</title><rect x="727.7" y="549" width="1.6" height="15.0" fill="rgb(215,65,54)" rx="2" ry="2" />
<text  x="730.65" y="559.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_M_head (5 samples, 0.02%)</title><rect x="53.1" y="917" width="0.3" height="15.0" fill="rgb(205,87,19)" rx="2" ry="2" />
<text  x="56.15" y="927.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (16 samples, 0.06%)</title><rect x="109.8" y="501" width="0.7" height="15.0" fill="rgb(241,57,36)" rx="2" ry="2" />
<text  x="112.84" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (123 samples, 0.42%)</title><rect x="644.7" y="581" width="5.0" height="15.0" fill="rgb(239,54,2)" rx="2" ry="2" />
<text  x="647.73" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::end (13 samples, 0.04%)</title><rect x="721.6" y="517" width="0.6" height="15.0" fill="rgb(247,29,15)" rx="2" ry="2" />
<text  x="724.64" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_Rb_tree_iterator (4 samples, 0.01%)</title><rect x="722.0" y="501" width="0.2" height="15.0" fill="rgb(211,169,53)" rx="2" ry="2" />
<text  x="725.00" y="511.5" ></text>
</g>
<g >
<title>Game_Picture::Show (149 samples, 0.51%)</title><rect x="98.7" y="709" width="6.1" height="15.0" fill="rgb(250,192,16)" rx="2" ry="2" />
<text  x="101.70" y="719.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (8 samples, 0.03%)</title><rect x="715.4" y="453" width="0.3" height="15.0" fill="rgb(205,152,31)" rx="2" ry="2" />
<text  x="718.41" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (7 samples, 0.02%)</title><rect x="577.9" y="645" width="0.3" height="15.0" fill="rgb(253,160,10)" rx="2" ry="2" />
<text  x="580.92" y="655.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (6 samples, 0.02%)</title><rect x="1118.1" y="405" width="0.3" height="15.0" fill="rgb(225,63,44)" rx="2" ry="2" />
<text  x="1121.14" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::operator bool (20 samples, 0.07%)</title><rect x="1027.9" y="741" width="0.8" height="15.0" fill="rgb(243,113,40)" rx="2" ry="2" />
<text  x="1030.86" y="751.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (3 samples, 0.01%)</title><rect x="1182.4" y="805" width="0.1" height="15.0" fill="rgb(240,96,10)" rx="2" ry="2" />
<text  x="1185.40" y="815.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (17 samples, 0.06%)</title><rect x="1094.2" y="613" width="0.7" height="15.0" fill="rgb(228,203,39)" rx="2" ry="2" />
<text  x="1097.23" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;*, std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt; &gt; (5 samples, 0.02%)</title><rect x="652.6" y="597" width="0.2" height="15.0" fill="rgb(228,7,18)" rx="2" ry="2" />
<text  x="655.58" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (23 samples, 0.08%)</title><rect x="1181.2" y="693" width="1.0" height="15.0" fill="rgb(213,103,36)" rx="2" ry="2" />
<text  x="1184.22" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;Bitmap&gt;::_M_ptr (5 samples, 0.02%)</title><rect x="1103.6" y="613" width="0.2" height="15.0" fill="rgb(211,188,20)" rx="2" ry="2" />
<text  x="1106.58" y="623.5" ></text>
</g>
<g >
<title>GetRandomUnsigned (4 samples, 0.01%)</title><rect x="558.8" y="661" width="0.2" height="15.0" fill="rgb(230,188,21)" rx="2" ry="2" />
<text  x="561.80" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (802 samples, 2.76%)</title><rect x="843.4" y="677" width="32.6" height="15.0" fill="rgb(213,22,40)" rx="2" ry="2" />
<text  x="846.43" y="687.5" >st..</text>
</g>
<g >
<title>clear_page_erms (9 samples, 0.03%)</title><rect x="1117.1" y="309" width="0.4" height="15.0" fill="rgb(210,141,48)" rx="2" ry="2" />
<text  x="1120.12" y="319.5" ></text>
</g>
<g >
<title>Game_Interpreter::ReserveSubcommandIndex (361 samples, 1.24%)</title><rect x="401.7" y="661" width="14.7" height="15.0" fill="rgb(226,183,37)" rx="2" ry="2" />
<text  x="404.75" y="671.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (4 samples, 0.01%)</title><rect x="787.3" y="69" width="0.2" height="15.0" fill="rgb(221,19,20)" rx="2" ry="2" />
<text  x="790.31" y="79.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (28 samples, 0.10%)</title><rect x="1144.0" y="549" width="1.1" height="15.0" fill="rgb(248,134,32)" rx="2" ry="2" />
<text  x="1146.96" y="559.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::size (3 samples, 0.01%)</title><rect x="449.6" y="661" width="0.1" height="15.0" fill="rgb(254,219,12)" rx="2" ry="2" />
<text  x="452.57" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::operator (19 samples, 0.07%)</title><rect x="690.6" y="549" width="0.8" height="15.0" fill="rgb(241,160,54)" rx="2" ry="2" />
<text  x="693.61" y="559.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (678 samples, 2.34%)</title><rect x="608.7" y="629" width="27.6" height="15.0" fill="rgb(220,154,2)" rx="2" ry="2" />
<text  x="611.74" y="639.5" >F..</text>
</g>
<g >
<title>FileRequestAsync::IsReady (3 samples, 0.01%)</title><rect x="145.2" y="773" width="0.1" height="15.0" fill="rgb(236,199,8)" rx="2" ry="2" />
<text  x="148.18" y="783.5" ></text>
</g>
<g >
<title>__handle_mm_fault (26 samples, 0.09%)</title><rect x="1117.0" y="357" width="1.1" height="15.0" fill="rgb(221,212,38)" rx="2" ry="2" />
<text  x="1120.00" y="367.5" ></text>
</g>
<g >
<title>SDL_UpdateTexture_REAL (10 samples, 0.03%)</title><rect x="142.9" y="773" width="0.4" height="15.0" fill="rgb(239,105,24)" rx="2" ry="2" />
<text  x="145.94" y="783.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::end (8 samples, 0.03%)</title><rect x="685.9" y="533" width="0.3" height="15.0" fill="rgb(234,123,42)" rx="2" ry="2" />
<text  x="688.89" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (71 samples, 0.24%)</title><rect x="451.4" y="661" width="2.8" height="15.0" fill="rgb(254,32,47)" rx="2" ry="2" />
<text  x="454.36" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (33 samples, 0.11%)</title><rect x="1083.6" y="693" width="1.4" height="15.0" fill="rgb(245,39,28)" rx="2" ry="2" />
<text  x="1086.61" y="703.5" ></text>
</g>
<g >
<title>Game_Picture::Update (171 samples, 0.59%)</title><rect x="1034.9" y="757" width="7.0" height="15.0" fill="rgb(239,107,39)" rx="2" ry="2" />
<text  x="1037.94" y="767.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Game_Interpreter_Map*, false&gt;::_M_head (6 samples, 0.02%)</title><rect x="51.6" y="917" width="0.2" height="15.0" fill="rgb(254,86,24)" rx="2" ry="2" />
<text  x="54.56" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (9 samples, 0.03%)</title><rect x="559.7" y="677" width="0.4" height="15.0" fill="rgb(230,122,48)" rx="2" ry="2" />
<text  x="562.70" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (3 samples, 0.01%)</title><rect x="140.2" y="917" width="0.1" height="15.0" fill="rgb(229,12,29)" rx="2" ry="2" />
<text  x="143.22" y="927.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Impl::_M_alloc (4 samples, 0.01%)</title><rect x="55.7" y="917" width="0.1" height="15.0" fill="rgb(206,122,25)" rx="2" ry="2" />
<text  x="58.67" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt; (5 samples, 0.02%)</title><rect x="48.8" y="917" width="0.2" height="15.0" fill="rgb(252,196,20)" rx="2" ry="2" />
<text  x="51.80" y="927.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (17 samples, 0.06%)</title><rect x="117.2" y="725" width="0.7" height="15.0" fill="rgb(209,134,31)" rx="2" ry="2" />
<text  x="120.20" y="735.5" ></text>
</g>
<g >
<title>std::swap&lt;Bitmap*&gt; (19 samples, 0.07%)</title><rect x="792.8" y="517" width="0.7" height="15.0" fill="rgb(240,96,8)" rx="2" ry="2" />
<text  x="795.76" y="527.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingForegroundExecution (22 samples, 0.08%)</title><rect x="1033.4" y="709" width="0.9" height="15.0" fill="rgb(220,133,21)" rx="2" ry="2" />
<text  x="1036.39" y="719.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash (19 samples, 0.07%)</title><rect x="650.2" y="565" width="0.8" height="15.0" fill="rgb(217,213,43)" rx="2" ry="2" />
<text  x="653.22" y="575.5" ></text>
</g>
<g >
<title>std::move&lt;std::shared_ptr&lt;Bitmap&gt;&amp;&gt; (5 samples, 0.02%)</title><rect x="75.4" y="917" width="0.2" height="15.0" fill="rgb(210,160,23)" rx="2" ry="2" />
<text  x="78.35" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (84 samples, 0.29%)</title><rect x="883.5" y="661" width="3.4" height="15.0" fill="rgb(209,123,43)" rx="2" ry="2" />
<text  x="886.49" y="671.5" ></text>
</g>
<g >
<title>std::__find_if&lt;int const*, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (111 samples, 0.38%)</title><rect x="441.8" y="645" width="4.6" height="15.0" fill="rgb(224,228,34)" rx="2" ry="2" />
<text  x="444.85" y="655.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (145 samples, 0.50%)</title><rect x="117.9" y="757" width="5.9" height="15.0" fill="rgb(205,184,10)" rx="2" ry="2" />
<text  x="120.89" y="767.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Transition*, std::default_delete&lt;Transition&gt; &gt;::_M_head (5 samples, 0.02%)</title><rect x="57.2" y="917" width="0.2" height="15.0" fill="rgb(232,227,11)" rx="2" ry="2" />
<text  x="60.21" y="927.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (38 samples, 0.13%)</title><rect x="1173.0" y="677" width="1.5" height="15.0" fill="rgb(217,208,54)" rx="2" ry="2" />
<text  x="1176.00" y="687.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (8 samples, 0.03%)</title><rect x="824.6" y="661" width="0.4" height="15.0" fill="rgb(222,168,46)" rx="2" ry="2" />
<text  x="827.65" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (7 samples, 0.02%)</title><rect x="573.9" y="613" width="0.2" height="15.0" fill="rgb(253,26,5)" rx="2" ry="2" />
<text  x="576.85" y="623.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (57 samples, 0.20%)</title><rect x="652.0" y="613" width="2.3" height="15.0" fill="rgb(248,193,16)" rx="2" ry="2" />
<text  x="654.97" y="623.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (97 samples, 0.33%)</title><rect x="105.9" y="581" width="3.9" height="15.0" fill="rgb(208,148,19)" rx="2" ry="2" />
<text  x="108.89" y="591.5" ></text>
</g>
<g >
<title>__libc_recvmsg (4 samples, 0.01%)</title><rect x="1180.8" y="613" width="0.1" height="15.0" fill="rgb(247,68,48)" rx="2" ry="2" />
<text  x="1183.77" y="623.5" ></text>
</g>
<g >
<title>__wake_up_locked_key (9 samples, 0.03%)</title><rect x="25.2" y="821" width="0.3" height="15.0" fill="rgb(207,111,1)" rx="2" ry="2" />
<text  x="28.17" y="831.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (30 samples, 0.10%)</title><rect x="732.0" y="517" width="1.2" height="15.0" fill="rgb(235,52,14)" rx="2" ry="2" />
<text  x="734.97" y="527.5" ></text>
</g>
<g >
<title>native_write_msr (71 samples, 0.24%)</title><rect x="20.5" y="693" width="2.9" height="15.0" fill="rgb(249,108,31)" rx="2" ry="2" />
<text  x="23.49" y="703.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (5 samples, 0.02%)</title><rect x="818.7" y="645" width="0.2" height="15.0" fill="rgb(237,163,45)" rx="2" ry="2" />
<text  x="821.67" y="655.5" ></text>
</g>
<g >
<title>dequeue_task_fair (6 samples, 0.02%)</title><rect x="20.0" y="773" width="0.3" height="15.0" fill="rgb(242,13,16)" rx="2" ry="2" />
<text  x="23.04" y="783.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (9 samples, 0.03%)</title><rect x="794.9" y="549" width="0.3" height="15.0" fill="rgb(253,75,35)" rx="2" ry="2" />
<text  x="797.88" y="559.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (37 samples, 0.13%)</title><rect x="784.1" y="101" width="1.5" height="15.0" fill="rgb(250,176,23)" rx="2" ry="2" />
<text  x="787.10" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (36 samples, 0.12%)</title><rect x="41.7" y="917" width="1.4" height="15.0" fill="rgb(246,146,39)" rx="2" ry="2" />
<text  x="44.68" y="927.5" ></text>
</g>
<g >
<title>do_syscall_64 (26 samples, 0.09%)</title><rect x="786.7" y="245" width="1.0" height="15.0" fill="rgb(217,74,21)" rx="2" ry="2" />
<text  x="789.66" y="255.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (4 samples, 0.01%)</title><rect x="824.2" y="629" width="0.1" height="15.0" fill="rgb(251,5,45)" rx="2" ry="2" />
<text  x="827.16" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (20 samples, 0.07%)</title><rect x="134.0" y="501" width="0.8" height="15.0" fill="rgb(224,163,9)" rx="2" ry="2" />
<text  x="136.95" y="511.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (47 samples, 0.16%)</title><rect x="815.9" y="629" width="1.9" height="15.0" fill="rgb(246,157,17)" rx="2" ry="2" />
<text  x="818.86" y="639.5" ></text>
</g>
<g >
<title>Scene::IsAsyncPending (3 samples, 0.01%)</title><rect x="1182.4" y="837" width="0.1" height="15.0" fill="rgb(251,125,28)" rx="2" ry="2" />
<text  x="1185.40" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (11 samples, 0.04%)</title><rect x="104.8" y="565" width="0.4" height="15.0" fill="rgb(248,126,14)" rx="2" ry="2" />
<text  x="107.75" y="575.5" ></text>
</g>
<g >
<title>poll (5 samples, 0.02%)</title><rect x="1180.5" y="725" width="0.2" height="15.0" fill="rgb(206,195,3)" rx="2" ry="2" />
<text  x="1183.48" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator (14 samples, 0.05%)</title><rect x="1177.0" y="757" width="0.6" height="15.0" fill="rgb(221,1,31)" rx="2" ry="2" />
<text  x="1180.03" y="767.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (35 samples, 0.12%)</title><rect x="838.6" y="677" width="1.4" height="15.0" fill="rgb(252,15,51)" rx="2" ry="2" />
<text  x="841.55" y="687.5" ></text>
</g>
<g >
<title>psi_task_change (3 samples, 0.01%)</title><rect x="25.4" y="709" width="0.1" height="15.0" fill="rgb(215,218,48)" rx="2" ry="2" />
<text  x="28.37" y="719.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (4 samples, 0.01%)</title><rect x="1116.3" y="437" width="0.2" height="15.0" fill="rgb(234,55,27)" rx="2" ry="2" />
<text  x="1119.31" y="447.5" ></text>
</g>
<g >
<title>operator delete (96 samples, 0.33%)</title><rect x="128.3" y="485" width="3.9" height="15.0" fill="rgb(206,158,31)" rx="2" ry="2" />
<text  x="131.26" y="495.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Transition*, std::default_delete&lt;Transition&gt; &gt; (6 samples, 0.02%)</title><rect x="798.6" y="565" width="0.2" height="15.0" fill="rgb(220,111,41)" rx="2" ry="2" />
<text  x="801.58" y="575.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (63 samples, 0.22%)</title><rect x="123.9" y="917" width="2.5" height="15.0" fill="rgb(221,75,29)" rx="2" ry="2" />
<text  x="126.87" y="927.5" ></text>
</g>
<g >
<title>std::_Bit_reference::_Bit_reference (3 samples, 0.01%)</title><rect x="149.9" y="677" width="0.1" height="15.0" fill="rgb(227,121,11)" rx="2" ry="2" />
<text  x="152.85" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string@plt (6 samples, 0.02%)</title><rect x="619.3" y="597" width="0.2" height="15.0" fill="rgb(236,190,26)" rx="2" ry="2" />
<text  x="622.28" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (7 samples, 0.02%)</title><rect x="795.2" y="565" width="0.3" height="15.0" fill="rgb(222,126,26)" rx="2" ry="2" />
<text  x="798.24" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (6 samples, 0.02%)</title><rect x="1152.5" y="693" width="0.3" height="15.0" fill="rgb(248,209,43)" rx="2" ry="2" />
<text  x="1155.55" y="703.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.01%)</title><rect x="720.8" y="469" width="0.1" height="15.0" fill="rgb(220,123,8)" rx="2" ry="2" />
<text  x="723.82" y="479.5" ></text>
</g>
<g >
<title>Scene::GetRequestedScene (153 samples, 0.53%)</title><rect x="1003.1" y="709" width="6.2" height="15.0" fill="rgb(214,152,52)" rx="2" ry="2" />
<text  x="1006.05" y="719.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Scene, (__gnu_cxx::_Lock_policy)2&gt;::get (43 samples, 0.15%)</title><rect x="1011.3" y="693" width="1.7" height="15.0" fill="rgb(246,182,41)" rx="2" ry="2" />
<text  x="1014.27" y="703.5" ></text>
</g>
<g >
<title>FileRequestAsync::BindStart (5 samples, 0.02%)</title><rect x="27.9" y="917" width="0.2" height="15.0" fill="rgb(241,177,12)" rx="2" ry="2" />
<text  x="30.85" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (3 samples, 0.01%)</title><rect x="461.7" y="677" width="0.1" height="15.0" fill="rgb(215,103,41)" rx="2" ry="2" />
<text  x="464.69" y="687.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (9 samples, 0.03%)</title><rect x="89.7" y="917" width="0.3" height="15.0" fill="rgb(208,141,19)" rx="2" ry="2" />
<text  x="92.67" y="927.5" ></text>
</g>
<g >
<title>FileRequestAsync::BindStart (3,572 samples, 12.31%)</title><rect x="651.3" y="645" width="145.2" height="15.0" fill="rgb(211,92,54)" rx="2" ry="2" />
<text  x="654.28" y="655.5" >FileRequestAsync::..</text>
</g>
<g >
<title>_XEventsQueued (5 samples, 0.02%)</title><rect x="1182.2" y="693" width="0.2" height="15.0" fill="rgb(228,34,29)" rx="2" ry="2" />
<text  x="1185.15" y="703.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.01%)</title><rect x="1119.2" y="469" width="0.1" height="15.0" fill="rgb(234,27,48)" rx="2" ry="2" />
<text  x="1122.20" y="479.5" ></text>
</g>
<g >
<title>Cache::System (6 samples, 0.02%)</title><rect x="1179.8" y="725" width="0.2" height="15.0" fill="rgb(240,43,18)" rx="2" ry="2" />
<text  x="1182.79" y="735.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (85 samples, 0.29%)</title><rect x="134.0" y="741" width="3.4" height="15.0" fill="rgb(245,113,53)" rx="2" ry="2" />
<text  x="136.95" y="751.5" ></text>
</g>
<g >
<title>Player::Update (121 samples, 0.42%)</title><rect x="127.2" y="837" width="5.0" height="15.0" fill="rgb(227,91,10)" rx="2" ry="2" />
<text  x="130.24" y="847.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::get (18 samples, 0.06%)</title><rect x="1168.1" y="725" width="0.7" height="15.0" fill="rgb(252,24,30)" rx="2" ry="2" />
<text  x="1171.08" y="735.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::~__allocated_ptr (152 samples, 0.52%)</title><rect x="746.2" y="469" width="6.2" height="15.0" fill="rgb(226,55,42)" rx="2" ry="2" />
<text  x="749.20" y="479.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (3 samples, 0.01%)</title><rect x="1167.6" y="709" width="0.1" height="15.0" fill="rgb(246,146,23)" rx="2" ry="2" />
<text  x="1170.55" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt;::__normal_iterator (6 samples, 0.02%)</title><rect x="988.6" y="709" width="0.3" height="15.0" fill="rgb(225,173,20)" rx="2" ry="2" />
<text  x="991.62" y="719.5" ></text>
</g>
<g >
<title>page_remove_rmap (5 samples, 0.02%)</title><rect x="786.3" y="117" width="0.2" height="15.0" fill="rgb(215,95,22)" rx="2" ry="2" />
<text  x="789.34" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::vector (10 samples, 0.03%)</title><rect x="1135.4" y="581" width="0.4" height="15.0" fill="rgb(235,0,48)" rx="2" ry="2" />
<text  x="1138.38" y="591.5" ></text>
</g>
<g >
<title>do_page_fault (8 samples, 0.03%)</title><rect x="1118.9" y="453" width="0.3" height="15.0" fill="rgb(230,162,10)" rx="2" ry="2" />
<text  x="1121.87" y="463.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.01%)</title><rect x="822.4" y="549" width="0.1" height="15.0" fill="rgb(222,116,41)" rx="2" ry="2" />
<text  x="825.41" y="559.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (8 samples, 0.03%)</title><rect x="689.6" y="453" width="0.4" height="15.0" fill="rgb(229,11,51)" rx="2" ry="2" />
<text  x="692.63" y="463.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (342 samples, 1.18%)</title><rect x="774.8" y="309" width="13.9" height="15.0" fill="rgb(234,133,48)" rx="2" ry="2" />
<text  x="777.83" y="319.5" ></text>
</g>
<g >
<title>Game_Screen::GetTone (32 samples, 0.11%)</title><rect x="1153.8" y="741" width="1.3" height="15.0" fill="rgb(206,159,26)" rx="2" ry="2" />
<text  x="1156.77" y="751.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (9 samples, 0.03%)</title><rect x="819.4" y="613" width="0.3" height="15.0" fill="rgb(227,22,6)" rx="2" ry="2" />
<text  x="822.36" y="623.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (12 samples, 0.04%)</title><rect x="1043.2" y="709" width="0.5" height="15.0" fill="rgb(217,112,1)" rx="2" ry="2" />
<text  x="1046.19" y="719.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::get (4 samples, 0.01%)</title><rect x="1027.4" y="741" width="0.1" height="15.0" fill="rgb(246,145,22)" rx="2" ry="2" />
<text  x="1030.37" y="751.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (149 samples, 0.51%)</title><rect x="98.7" y="613" width="6.1" height="15.0" fill="rgb(245,18,6)" rx="2" ry="2" />
<text  x="101.70" y="623.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Set (4 samples, 0.01%)</title><rect x="910.3" y="693" width="0.2" height="15.0" fill="rgb(234,23,23)" rx="2" ry="2" />
<text  x="913.29" y="703.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (8 samples, 0.03%)</title><rect x="1168.4" y="677" width="0.3" height="15.0" fill="rgb(250,204,35)" rx="2" ry="2" />
<text  x="1171.41" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (4 samples, 0.01%)</title><rect x="586.6" y="677" width="0.1" height="15.0" fill="rgb(250,141,16)" rx="2" ry="2" />
<text  x="589.58" y="687.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (6 samples, 0.02%)</title><rect x="794.9" y="533" width="0.3" height="15.0" fill="rgb(245,79,34)" rx="2" ry="2" />
<text  x="797.92" y="543.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.01%)</title><rect x="734.1" y="469" width="0.2" height="15.0" fill="rgb(227,120,48)" rx="2" ry="2" />
<text  x="737.12" y="479.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (9 samples, 0.03%)</title><rect x="142.0" y="693" width="0.3" height="15.0" fill="rgb(207,21,12)" rx="2" ry="2" />
<text  x="144.97" y="703.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (38 samples, 0.13%)</title><rect x="784.1" y="133" width="1.5" height="15.0" fill="rgb(236,209,20)" rx="2" ry="2" />
<text  x="787.06" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::deallocate (142 samples, 0.49%)</title><rect x="746.6" y="437" width="5.8" height="15.0" fill="rgb(212,70,12)" rx="2" ry="2" />
<text  x="749.61" y="447.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (4 samples, 0.01%)</title><rect x="25.8" y="853" width="0.2" height="15.0" fill="rgb(250,0,36)" rx="2" ry="2" />
<text  x="28.82" y="863.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (161 samples, 0.55%)</title><rect x="781.4" y="293" width="6.6" height="15.0" fill="rgb(241,158,51)" rx="2" ry="2" />
<text  x="784.42" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (123 samples, 0.42%)</title><rect x="611.1" y="597" width="5.0" height="15.0" fill="rgb(250,8,5)" rx="2" ry="2" />
<text  x="614.10" y="607.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (9 samples, 0.03%)</title><rect x="588.9" y="661" width="0.4" height="15.0" fill="rgb(217,194,50)" rx="2" ry="2" />
<text  x="591.90" y="671.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (5 samples, 0.02%)</title><rect x="795.3" y="533" width="0.2" height="15.0" fill="rgb(225,9,4)" rx="2" ry="2" />
<text  x="798.28" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append@plt (4 samples, 0.01%)</title><rect x="618.9" y="597" width="0.2" height="15.0" fill="rgb(230,29,21)" rx="2" ry="2" />
<text  x="621.91" y="607.5" ></text>
</g>
<g >
<title>ksys_read (27 samples, 0.09%)</title><rect x="23.9" y="885" width="1.1" height="15.0" fill="rgb(245,161,28)" rx="2" ry="2" />
<text  x="26.87" y="895.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (3 samples, 0.01%)</title><rect x="573.5" y="613" width="0.1" height="15.0" fill="rgb(209,46,35)" rx="2" ry="2" />
<text  x="576.53" y="623.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (20 samples, 0.07%)</title><rect x="793.5" y="533" width="0.8" height="15.0" fill="rgb(234,204,46)" rx="2" ry="2" />
<text  x="796.54" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (89 samples, 0.31%)</title><rect x="974.8" y="661" width="3.6" height="15.0" fill="rgb(243,140,19)" rx="2" ry="2" />
<text  x="977.79" y="671.5" ></text>
</g>
<g >
<title>DynamicFormat::code_alpha (12 samples, 0.04%)</title><rect x="1128.6" y="565" width="0.4" height="15.0" fill="rgb(217,199,14)" rx="2" ry="2" />
<text  x="1131.55" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (56 samples, 0.19%)</title><rect x="873.8" y="645" width="2.2" height="15.0" fill="rgb(210,147,44)" rx="2" ry="2" />
<text  x="876.77" y="655.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char32_t&gt; &gt;::allocate (16 samples, 0.06%)</title><rect x="821.8" y="597" width="0.6" height="15.0" fill="rgb(236,110,52)" rx="2" ry="2" />
<text  x="824.76" y="607.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (18 samples, 0.06%)</title><rect x="786.8" y="181" width="0.8" height="15.0" fill="rgb(234,112,0)" rx="2" ry="2" />
<text  x="789.83" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (14 samples, 0.05%)</title><rect x="921.7" y="677" width="0.5" height="15.0" fill="rgb(246,43,52)" rx="2" ry="2" />
<text  x="924.68" y="687.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (85 samples, 0.29%)</title><rect x="134.0" y="709" width="3.4" height="15.0" fill="rgb(249,84,31)" rx="2" ry="2" />
<text  x="136.95" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (3 samples, 0.01%)</title><rect x="97.6" y="917" width="0.2" height="15.0" fill="rgb(238,86,23)" rx="2" ry="2" />
<text  x="100.64" y="927.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (22 samples, 0.08%)</title><rect x="1181.3" y="597" width="0.9" height="15.0" fill="rgb(241,117,54)" rx="2" ry="2" />
<text  x="1184.26" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_dispose (5 samples, 0.02%)</title><rect x="823.9" y="645" width="0.2" height="15.0" fill="rgb(236,35,28)" rx="2" ry="2" />
<text  x="826.91" y="655.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (99 samples, 0.34%)</title><rect x="731.6" y="533" width="4.1" height="15.0" fill="rgb(254,21,7)" rx="2" ry="2" />
<text  x="734.64" y="543.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (38 samples, 0.13%)</title><rect x="784.1" y="165" width="1.5" height="15.0" fill="rgb(212,8,46)" rx="2" ry="2" />
<text  x="787.06" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base (7 samples, 0.02%)</title><rect x="670.1" y="501" width="0.3" height="15.0" fill="rgb(225,137,52)" rx="2" ry="2" />
<text  x="673.07" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (150 samples, 0.52%)</title><rect x="111.1" y="613" width="6.1" height="15.0" fill="rgb(238,222,37)" rx="2" ry="2" />
<text  x="114.10" y="623.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 2ul, 3ul&gt;::__less (30 samples, 0.10%)</title><rect x="723.2" y="453" width="1.2" height="15.0" fill="rgb(252,85,42)" rx="2" ry="2" />
<text  x="726.22" y="463.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (20 samples, 0.07%)</title><rect x="134.0" y="549" width="0.8" height="15.0" fill="rgb(217,49,32)" rx="2" ry="2" />
<text  x="136.95" y="559.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (9 samples, 0.03%)</title><rect x="1160.1" y="677" width="0.4" height="15.0" fill="rgb(238,47,28)" rx="2" ry="2" />
<text  x="1163.11" y="687.5" ></text>
</g>
<g >
<title>activate_task (7 samples, 0.02%)</title><rect x="25.2" y="725" width="0.3" height="15.0" fill="rgb(223,150,31)" rx="2" ry="2" />
<text  x="28.21" y="735.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.02%)</title><rect x="110.9" y="501" width="0.2" height="15.0" fill="rgb(207,205,28)" rx="2" ry="2" />
<text  x="113.85" y="511.5" ></text>
</g>
<g >
<title>Tone::Tone (13 samples, 0.04%)</title><rect x="1154.5" y="725" width="0.6" height="15.0" fill="rgb(211,184,50)" rx="2" ry="2" />
<text  x="1157.54" y="735.5" ></text>
</g>
<g >
<title>finish_task_switch (75 samples, 0.26%)</title><rect x="20.4" y="789" width="3.1" height="15.0" fill="rgb(217,113,31)" rx="2" ry="2" />
<text  x="23.41" y="799.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (49 samples, 0.17%)</title><rect x="121.7" y="485" width="2.0" height="15.0" fill="rgb(244,156,31)" rx="2" ry="2" />
<text  x="124.67" y="495.5" ></text>
</g>
<g >
<title>flush_tlb_func_common.constprop.9 (8 samples, 0.03%)</title><rect x="786.8" y="133" width="0.4" height="15.0" fill="rgb(215,5,16)" rx="2" ry="2" />
<text  x="789.83" y="143.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (17 samples, 0.06%)</title><rect x="105.2" y="501" width="0.7" height="15.0" fill="rgb(237,0,44)" rx="2" ry="2" />
<text  x="108.20" y="511.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (705 samples, 2.43%)</title><rect x="1053.4" y="725" width="28.7" height="15.0" fill="rgb(252,137,10)" rx="2" ry="2" />
<text  x="1056.44" y="735.5" >pi..</text>
</g>
<g >
<title>std::bitset&lt;36ul&gt;::_M_copy_to_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (4 samples, 0.01%)</title><rect x="144.7" y="789" width="0.2" height="15.0" fill="rgb(224,104,16)" rx="2" ry="2" />
<text  x="147.73" y="799.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (5 samples, 0.02%)</title><rect x="730.6" y="501" width="0.2" height="15.0" fill="rgb(212,14,13)" rx="2" ry="2" />
<text  x="733.62" y="511.5" ></text>
</g>
<g >
<title>memcmp (8 samples, 0.03%)</title><rect x="649.3" y="485" width="0.3" height="15.0" fill="rgb(218,46,22)" rx="2" ry="2" />
<text  x="652.29" y="495.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (306 samples, 1.05%)</title><rect x="104.8" y="741" width="12.4" height="15.0" fill="rgb(214,93,24)" rx="2" ry="2" />
<text  x="107.75" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator++ (29 samples, 0.10%)</title><rect x="46.9" y="917" width="1.2" height="15.0" fill="rgb(247,58,11)" rx="2" ry="2" />
<text  x="49.93" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt;::end (5 samples, 0.02%)</title><rect x="96.5" y="917" width="0.2" height="15.0" fill="rgb(231,141,0)" rx="2" ry="2" />
<text  x="99.50" y="927.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.02%)</title><rect x="117.2" y="517" width="0.3" height="15.0" fill="rgb(207,192,15)" rx="2" ry="2" />
<text  x="120.20" y="527.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandOptionGeneric (4 samples, 0.01%)</title><rect x="29.0" y="917" width="0.2" height="15.0" fill="rgb(246,115,13)" rx="2" ry="2" />
<text  x="31.99" y="927.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt;::~allocator (3 samples, 0.01%)</title><rect x="68.5" y="917" width="0.1" height="15.0" fill="rgb(225,159,42)" rx="2" ry="2" />
<text  x="71.48" y="927.5" ></text>
</g>
<g >
<title>Scene::GetRequestedScene (3 samples, 0.01%)</title><rect x="36.4" y="917" width="0.1" height="15.0" fill="rgb(222,202,6)" rx="2" ry="2" />
<text  x="39.35" y="927.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::operator() (7 samples, 0.02%)</title><rect x="1133.2" y="485" width="0.3" height="15.0" fill="rgb(252,190,4)" rx="2" ry="2" />
<text  x="1136.19" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::basic_string (3 samples, 0.01%)</title><rect x="821.3" y="645" width="0.1" height="15.0" fill="rgb(226,220,33)" rx="2" ry="2" />
<text  x="824.31" y="655.5" ></text>
</g>
<g >
<title>Cache::Picture (1,961 samples, 6.76%)</title><rect x="656.7" y="565" width="79.8" height="15.0" fill="rgb(225,168,52)" rx="2" ry="2" />
<text  x="659.73" y="575.5" >Cache::Pi..</text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (20 samples, 0.07%)</title><rect x="744.0" y="469" width="0.8" height="15.0" fill="rgb(236,152,27)" rx="2" ry="2" />
<text  x="746.96" y="479.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (8 samples, 0.03%)</title><rect x="1098.5" y="709" width="0.4" height="15.0" fill="rgb(218,75,22)" rx="2" ry="2" />
<text  x="1101.54" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (10 samples, 0.03%)</title><rect x="396.5" y="629" width="0.4" height="15.0" fill="rgb(219,85,10)" rx="2" ry="2" />
<text  x="399.54" y="639.5" ></text>
</g>
<g >
<title>arch_get_unmapped_area_topdown (8 samples, 0.03%)</title><rect x="1115.5" y="309" width="0.3" height="15.0" fill="rgb(233,16,9)" rx="2" ry="2" />
<text  x="1118.50" y="319.5" ></text>
</g>
<g >
<title>_mm_cmpeq_epi8 (42 samples, 0.14%)</title><rect x="1063.5" y="645" width="1.7" height="15.0" fill="rgb(218,124,28)" rx="2" ry="2" />
<text  x="1066.48" y="655.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (58 samples, 0.20%)</title><rect x="749.9" y="389" width="2.4" height="15.0" fill="rgb(232,136,3)" rx="2" ry="2" />
<text  x="752.90" y="399.5" ></text>
</g>
<g >
<title>Utils::GetRandomNumber (5 samples, 0.02%)</title><rect x="558.8" y="677" width="0.2" height="15.0" fill="rgb(211,199,28)" rx="2" ry="2" />
<text  x="561.76" y="687.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (3 samples, 0.01%)</title><rect x="335.6" y="709" width="0.1" height="15.0" fill="rgb(231,116,48)" rx="2" ry="2" />
<text  x="338.58" y="719.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.01%)</title><rect x="137.4" y="917" width="0.2" height="15.0" fill="rgb(237,46,25)" rx="2" ry="2" />
<text  x="140.41" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (77 samples, 0.27%)</title><rect x="1013.4" y="725" width="3.1" height="15.0" fill="rgb(251,154,12)" rx="2" ry="2" />
<text  x="1016.38" y="735.5" ></text>
</g>
<g >
<title>__wake_up_common (9 samples, 0.03%)</title><rect x="25.2" y="805" width="0.3" height="15.0" fill="rgb(230,49,46)" rx="2" ry="2" />
<text  x="28.17" y="815.5" ></text>
</g>
<g >
<title>load_128_unaligned (4 samples, 0.01%)</title><rect x="142.0" y="629" width="0.2" height="15.0" fill="rgb(215,118,26)" rx="2" ry="2" />
<text  x="145.05" y="639.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.03%)</title><rect x="615.5" y="501" width="0.4" height="15.0" fill="rgb(210,213,13)" rx="2" ry="2" />
<text  x="618.45" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt; (3 samples, 0.01%)</title><rect x="92.2" y="917" width="0.1" height="15.0" fill="rgb(205,117,2)" rx="2" ry="2" />
<text  x="95.19" y="927.5" ></text>
</g>
<g >
<title>operator delete (101 samples, 0.35%)</title><rect x="814.0" y="661" width="4.1" height="15.0" fill="rgb(245,225,19)" rx="2" ry="2" />
<text  x="816.99" y="671.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned (3 samples, 0.01%)</title><rect x="117.7" y="517" width="0.1" height="15.0" fill="rgb(241,0,12)" rx="2" ry="2" />
<text  x="120.73" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Switch, std::allocator&lt;RPG::Switch&gt; &gt;::size (3 samples, 0.01%)</title><rect x="85.3" y="917" width="0.1" height="15.0" fill="rgb(246,147,10)" rx="2" ry="2" />
<text  x="88.32" y="927.5" ></text>
</g>
<g >
<title>__fget_light (6 samples, 0.02%)</title><rect x="19.4" y="853" width="0.2" height="15.0" fill="rgb(228,31,16)" rx="2" ry="2" />
<text  x="22.35" y="863.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.01%)</title><rect x="1180.8" y="597" width="0.1" height="15.0" fill="rgb(216,43,21)" rx="2" ry="2" />
<text  x="1183.81" y="607.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (121 samples, 0.42%)</title><rect x="127.2" y="629" width="5.0" height="15.0" fill="rgb(208,47,42)" rx="2" ry="2" />
<text  x="130.24" y="639.5" ></text>
</g>
<g >
<title>Game_Map::GetDisplayX (12 samples, 0.04%)</title><rect x="605.7" y="661" width="0.4" height="15.0" fill="rgb(249,108,15)" rx="2" ry="2" />
<text  x="608.65" y="671.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (97 samples, 0.33%)</title><rect x="105.9" y="533" width="3.9" height="15.0" fill="rgb(214,174,35)" rx="2" ry="2" />
<text  x="108.89" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char32_t&gt; &gt;::allocate (6 samples, 0.02%)</title><rect x="823.7" y="565" width="0.2" height="15.0" fill="rgb(230,194,0)" rx="2" ry="2" />
<text  x="826.67" y="575.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (6 samples, 0.02%)</title><rect x="24.3" y="757" width="0.3" height="15.0" fill="rgb(229,54,38)" rx="2" ry="2" />
<text  x="27.31" y="767.5" ></text>
</g>
<g >
<title>Sdl2Ui::GetTicks (5 samples, 0.02%)</title><rect x="1180.0" y="821" width="0.2" height="15.0" fill="rgb(219,167,50)" rx="2" ry="2" />
<text  x="1183.04" y="831.5" ></text>
</g>
<g >
<title>Player::Run (85 samples, 0.29%)</title><rect x="134.0" y="901" width="3.4" height="15.0" fill="rgb(249,170,10)" rx="2" ry="2" />
<text  x="136.95" y="911.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::get (10 samples, 0.03%)</title><rect x="80.2" y="917" width="0.4" height="15.0" fill="rgb(250,26,25)" rx="2" ry="2" />
<text  x="83.19" y="927.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (3 samples, 0.01%)</title><rect x="28.5" y="917" width="0.2" height="15.0" fill="rgb(229,111,22)" rx="2" ry="2" />
<text  x="31.54" y="927.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::~_Vector_base (13 samples, 0.04%)</title><rect x="791.1" y="405" width="0.5" height="15.0" fill="rgb(254,226,14)" rx="2" ry="2" />
<text  x="794.10" y="415.5" ></text>
</g>
<g >
<title>xhci_msi_irq (4 samples, 0.01%)</title><rect x="25.8" y="821" width="0.2" height="15.0" fill="rgb(251,13,25)" rx="2" ry="2" />
<text  x="28.82" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (4 samples, 0.01%)</title><rect x="144.7" y="773" width="0.2" height="15.0" fill="rgb(206,163,30)" rx="2" ry="2" />
<text  x="147.73" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (130 samples, 0.45%)</title><rect x="409.5" y="629" width="5.3" height="15.0" fill="rgb(222,77,20)" rx="2" ry="2" />
<text  x="412.47" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (9 samples, 0.03%)</title><rect x="1177.2" y="725" width="0.4" height="15.0" fill="rgb(210,105,50)" rx="2" ry="2" />
<text  x="1180.19" y="735.5" ></text>
</g>
<g >
<title>Game_Picture::ShowParams::ShowParams (15 samples, 0.05%)</title><rect x="813.3" y="677" width="0.6" height="15.0" fill="rgb(224,91,25)" rx="2" ry="2" />
<text  x="816.30" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator* (54 samples, 0.19%)</title><rect x="626.5" y="597" width="2.2" height="15.0" fill="rgb(238,4,50)" rx="2" ry="2" />
<text  x="629.47" y="607.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_init_functor (9 samples, 0.03%)</title><rect x="802.1" y="629" width="0.3" height="15.0" fill="rgb(210,56,22)" rx="2" ry="2" />
<text  x="805.08" y="639.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (3,463 samples, 11.93%)</title><rect x="655.3" y="629" width="140.9" height="15.0" fill="rgb(249,4,12)" rx="2" ry="2" />
<text  x="658.35" y="639.5" >std::function&lt;voi..</text>
</g>
<g >
<title>Graphics::IsTransitionErased (48 samples, 0.17%)</title><rect x="796.9" y="629" width="2.0" height="15.0" fill="rgb(243,162,36)" rx="2" ry="2" />
<text  x="799.91" y="639.5" ></text>
</g>
<g >
<title>Game_Map::IsAnyEventStarting (40 samples, 0.14%)</title><rect x="1033.1" y="725" width="1.6" height="15.0" fill="rgb(225,193,3)" rx="2" ry="2" />
<text  x="1036.11" y="735.5" ></text>
</g>
<g >
<title>Game_Map::Update (85 samples, 0.29%)</title><rect x="134.0" y="805" width="3.4" height="15.0" fill="rgb(208,189,46)" rx="2" ry="2" />
<text  x="136.95" y="815.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (200 samples, 0.69%)</title><rect x="1137.3" y="581" width="8.1" height="15.0" fill="rgb(250,94,47)" rx="2" ry="2" />
<text  x="1140.30" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (28 samples, 0.10%)</title><rect x="152.5" y="725" width="1.1" height="15.0" fill="rgb(244,22,24)" rx="2" ry="2" />
<text  x="155.50" y="735.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (8 samples, 0.03%)</title><rect x="1039.1" y="725" width="0.3" height="15.0" fill="rgb(209,59,40)" rx="2" ry="2" />
<text  x="1042.12" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (264 samples, 0.91%)</title><rect x="560.1" y="677" width="10.7" height="15.0" fill="rgb(221,56,42)" rx="2" ry="2" />
<text  x="563.06" y="687.5" ></text>
</g>
<g >
<title>Bitmap::find_format (187 samples, 0.64%)</title><rect x="1127.3" y="581" width="7.6" height="15.0" fill="rgb(206,98,47)" rx="2" ry="2" />
<text  x="1130.25" y="591.5" ></text>
</g>
<g >
<title>__split_vma (4 samples, 0.01%)</title><rect x="783.8" y="181" width="0.1" height="15.0" fill="rgb(215,198,39)" rx="2" ry="2" />
<text  x="786.78" y="191.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::CommonEvent&gt; (8 samples, 0.03%)</title><rect x="151.9" y="725" width="0.4" height="15.0" fill="rgb(239,96,36)" rx="2" ry="2" />
<text  x="154.93" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (199 samples, 0.69%)</title><rect x="825.4" y="661" width="8.1" height="15.0" fill="rgb(246,156,23)" rx="2" ry="2" />
<text  x="828.38" y="671.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (18 samples, 0.06%)</title><rect x="786.8" y="165" width="0.8" height="15.0" fill="rgb(208,103,50)" rx="2" ry="2" />
<text  x="789.83" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars@plt (3 samples, 0.01%)</title><rect x="734.4" y="469" width="0.1" height="15.0" fill="rgb(208,66,14)" rx="2" ry="2" />
<text  x="737.41" y="479.5" ></text>
</g>
<g >
<title>Cache::System (6 samples, 0.02%)</title><rect x="1179.8" y="709" width="0.2" height="15.0" fill="rgb(253,76,32)" rx="2" ry="2" />
<text  x="1182.79" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt;::operator()&lt;int const*&gt; (3 samples, 0.01%)</title><rect x="577.6" y="597" width="0.1" height="15.0" fill="rgb(225,80,43)" rx="2" ry="2" />
<text  x="580.59" y="607.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (130 samples, 0.45%)</title><rect x="722.3" y="517" width="5.3" height="15.0" fill="rgb(213,158,49)" rx="2" ry="2" />
<text  x="725.29" y="527.5" ></text>
</g>
<g >
<title>__fdget_pos (5 samples, 0.02%)</title><rect x="23.9" y="869" width="0.2" height="15.0" fill="rgb(205,212,6)" rx="2" ry="2" />
<text  x="26.91" y="879.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::get (14 samples, 0.05%)</title><rect x="835.0" y="661" width="0.5" height="15.0" fill="rgb(213,32,14)" rx="2" ry="2" />
<text  x="837.98" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (3 samples, 0.01%)</title><rect x="586.9" y="661" width="0.1" height="15.0" fill="rgb(234,69,40)" rx="2" ry="2" />
<text  x="589.91" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::operator* (6 samples, 0.02%)</title><rect x="1129.7" y="549" width="0.2" height="15.0" fill="rgb(233,161,8)" rx="2" ry="2" />
<text  x="1132.69" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (157 samples, 0.54%)</title><rect x="753.5" y="389" width="6.4" height="15.0" fill="rgb(236,180,33)" rx="2" ry="2" />
<text  x="756.52" y="399.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (8 samples, 0.03%)</title><rect x="786.8" y="149" width="0.4" height="15.0" fill="rgb(236,146,0)" rx="2" ry="2" />
<text  x="789.83" y="159.5" ></text>
</g>
<g >
<title>unmap_vmas (23 samples, 0.08%)</title><rect x="785.6" y="165" width="0.9" height="15.0" fill="rgb(210,208,11)" rx="2" ry="2" />
<text  x="788.61" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (180 samples, 0.62%)</title><rect x="18.5" y="917" width="7.3" height="15.0" fill="rgb(236,188,9)" rx="2" ry="2" />
<text  x="21.46" y="927.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (306 samples, 1.05%)</title><rect x="104.8" y="885" width="12.4" height="15.0" fill="rgb(230,28,29)" rx="2" ry="2" />
<text  x="107.75" y="895.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (7 samples, 0.02%)</title><rect x="916.5" y="693" width="0.3" height="15.0" fill="rgb(228,102,51)" rx="2" ry="2" />
<text  x="919.47" y="703.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (23 samples, 0.08%)</title><rect x="1181.2" y="677" width="1.0" height="15.0" fill="rgb(225,34,13)" rx="2" ry="2" />
<text  x="1184.22" y="687.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (149 samples, 0.51%)</title><rect x="98.7" y="773" width="6.1" height="15.0" fill="rgb(242,37,4)" rx="2" ry="2" />
<text  x="101.70" y="783.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (19 samples, 0.07%)</title><rect x="1182.8" y="917" width="0.7" height="15.0" fill="rgb(232,219,9)" rx="2" ry="2" />
<text  x="1185.76" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (18 samples, 0.06%)</title><rect x="601.8" y="645" width="0.7" height="15.0" fill="rgb(222,144,39)" rx="2" ry="2" />
<text  x="604.79" y="655.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::deallocate (143 samples, 0.49%)</title><rect x="746.6" y="453" width="5.8" height="15.0" fill="rgb(231,101,12)" rx="2" ry="2" />
<text  x="749.56" y="463.5" ></text>
</g>
<g >
<title>std::max&lt;int&gt; (137 samples, 0.47%)</title><rect x="536.6" y="661" width="5.5" height="15.0" fill="rgb(226,191,14)" rx="2" ry="2" />
<text  x="539.56" y="671.5" ></text>
</g>
<g >
<title>_mm_loadu_si128 (4 samples, 0.01%)</title><rect x="142.0" y="613" width="0.2" height="15.0" fill="rgb(234,120,44)" rx="2" ry="2" />
<text  x="145.05" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::operator (12 samples, 0.04%)</title><rect x="798.4" y="613" width="0.5" height="15.0" fill="rgb(247,218,18)" rx="2" ry="2" />
<text  x="801.37" y="623.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (18 samples, 0.06%)</title><rect x="1150.3" y="741" width="0.7" height="15.0" fill="rgb(236,80,13)" rx="2" ry="2" />
<text  x="1153.31" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::~vector (36 samples, 0.12%)</title><rect x="790.2" y="421" width="1.4" height="15.0" fill="rgb(214,137,46)" rx="2" ry="2" />
<text  x="793.16" y="431.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (5 samples, 0.02%)</title><rect x="787.8" y="277" width="0.2" height="15.0" fill="rgb(208,47,26)" rx="2" ry="2" />
<text  x="790.76" y="287.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (44 samples, 0.15%)</title><rect x="1142.1" y="533" width="1.8" height="15.0" fill="rgb(215,164,42)" rx="2" ry="2" />
<text  x="1145.09" y="543.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipToNextConditional (100 samples, 0.34%)</title><rect x="574.3" y="661" width="4.1" height="15.0" fill="rgb(248,149,3)" rx="2" ry="2" />
<text  x="577.30" y="671.5" ></text>
</g>
<g >
<title>Sprite::SetOx (5 samples, 0.02%)</title><rect x="1160.9" y="741" width="0.2" height="15.0" fill="rgb(238,14,49)" rx="2" ry="2" />
<text  x="1163.88" y="751.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::get (11 samples, 0.04%)</title><rect x="798.4" y="597" width="0.5" height="15.0" fill="rgb(211,198,32)" rx="2" ry="2" />
<text  x="801.42" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::get (5 samples, 0.02%)</title><rect x="77.7" y="917" width="0.2" height="15.0" fill="rgb(209,66,23)" rx="2" ry="2" />
<text  x="80.71" y="927.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (20 samples, 0.07%)</title><rect x="134.0" y="565" width="0.8" height="15.0" fill="rgb(222,166,6)" rx="2" ry="2" />
<text  x="136.95" y="575.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (38 samples, 0.13%)</title><rect x="784.1" y="149" width="1.5" height="15.0" fill="rgb(234,224,54)" rx="2" ry="2" />
<text  x="787.06" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (75 samples, 0.26%)</title><rect x="716.7" y="437" width="3.1" height="15.0" fill="rgb(218,21,50)" rx="2" ry="2" />
<text  x="719.71" y="447.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (149 samples, 0.51%)</title><rect x="98.7" y="693" width="6.1" height="15.0" fill="rgb(208,34,28)" rx="2" ry="2" />
<text  x="101.70" y="703.5" ></text>
</g>
<g >
<title>[[stack]] (1,548 samples, 5.33%)</title><rect x="26.4" y="933" width="63.0" height="15.0" fill="rgb(254,200,46)" rx="2" ry="2" />
<text  x="29.43" y="943.5" >[[stac..</text>
</g>
<g >
<title>pick_next_task_fair (3 samples, 0.01%)</title><rect x="23.5" y="789" width="0.1" height="15.0" fill="rgb(212,21,32)" rx="2" ry="2" />
<text  x="26.46" y="799.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (7 samples, 0.02%)</title><rect x="1027.1" y="741" width="0.3" height="15.0" fill="rgb(212,185,41)" rx="2" ry="2" />
<text  x="1030.09" y="751.5" ></text>
</g>
<g >
<title>std::bitset&lt;152ul&gt;::reference::reference (3 samples, 0.01%)</title><rect x="144.2" y="661" width="0.1" height="15.0" fill="rgb(248,159,10)" rx="2" ry="2" />
<text  x="147.20" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (38 samples, 0.13%)</title><rect x="43.1" y="917" width="1.6" height="15.0" fill="rgb(239,136,43)" rx="2" ry="2" />
<text  x="46.14" y="927.5" ></text>
</g>
<g >
<title>Game_Interpreter::IsRunning (28 samples, 0.10%)</title><rect x="152.5" y="741" width="1.1" height="15.0" fill="rgb(224,45,17)" rx="2" ry="2" />
<text  x="155.50" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (150 samples, 0.52%)</title><rect x="111.1" y="565" width="6.1" height="15.0" fill="rgb(211,107,16)" rx="2" ry="2" />
<text  x="114.10" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (12 samples, 0.04%)</title><rect x="1017.4" y="725" width="0.5" height="15.0" fill="rgb(252,137,28)" rx="2" ry="2" />
<text  x="1020.45" y="735.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; (4 samples, 0.01%)</title><rect x="688.2" y="421" width="0.2" height="15.0" fill="rgb(242,139,45)" rx="2" ry="2" />
<text  x="691.21" y="431.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.01%)</title><rect x="727.2" y="437" width="0.1" height="15.0" fill="rgb(249,125,9)" rx="2" ry="2" />
<text  x="730.17" y="447.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (11 samples, 0.04%)</title><rect x="116.5" y="469" width="0.5" height="15.0" fill="rgb(232,34,12)" rx="2" ry="2" />
<text  x="119.51" y="479.5" ></text>
</g>
<g >
<title>Game_Interpreter::SetSubcommandIndex (434 samples, 1.50%)</title><rect x="398.9" y="677" width="17.7" height="15.0" fill="rgb(205,9,26)" rx="2" ry="2" />
<text  x="401.90" y="687.5" ></text>
</g>
<g >
<title>core_combine_over_u_sse2_no_mask (655 samples, 2.26%)</title><rect x="1055.4" y="677" width="26.6" height="15.0" fill="rgb(242,60,48)" rx="2" ry="2" />
<text  x="1058.39" y="687.5" >c..</text>
</g>
<g >
<title>Scene_Map::Update (25,441 samples, 87.68%)</title><rect x="145.4" y="821" width="1034.6" height="15.0" fill="rgb(254,137,36)" rx="2" ry="2" />
<text  x="148.42" y="831.5" >Scene_Map::Update</text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (819 samples, 2.82%)</title><rect x="1102.8" y="645" width="33.3" height="15.0" fill="rgb(250,120,13)" rx="2" ry="2" />
<text  x="1105.77" y="655.5" >st..</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_valptr (6 samples, 0.02%)</title><rect x="721.1" y="485" width="0.3" height="15.0" fill="rgb(205,184,24)" rx="2" ry="2" />
<text  x="724.11" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (7 samples, 0.02%)</title><rect x="734.8" y="485" width="0.3" height="15.0" fill="rgb(223,62,22)" rx="2" ry="2" />
<text  x="737.81" y="495.5" ></text>
</g>
<g >
<title>Game_Interpreter::KeyInputState::CheckInput (5 samples, 0.02%)</title><rect x="587.0" y="677" width="0.2" height="15.0" fill="rgb(254,120,50)" rx="2" ry="2" />
<text  x="590.03" y="687.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Game_Screen*, false&gt;::_M_head (8 samples, 0.03%)</title><rect x="52.0" y="917" width="0.3" height="15.0" fill="rgb(225,171,34)" rx="2" ry="2" />
<text  x="55.01" y="927.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;int&gt;::operator= (62 samples, 0.21%)</title><rect x="803.1" y="645" width="2.5" height="15.0" fill="rgb(240,227,6)" rx="2" ry="2" />
<text  x="806.09" y="655.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (5 samples, 0.02%)</title><rect x="589.1" y="645" width="0.2" height="15.0" fill="rgb(215,131,18)" rx="2" ry="2" />
<text  x="592.06" y="655.5" ></text>
</g>
<g >
<title>SDLAudioP2 (399 samples, 1.38%)</title><rect x="10.0" y="949" width="16.2" height="15.0" fill="rgb(206,99,48)" rx="2" ry="2" />
<text  x="13.00" y="959.5" ></text>
</g>
<g >
<title>Game_Interpreter::SetupWait (4 samples, 0.01%)</title><rect x="840.0" y="677" width="0.1" height="15.0" fill="rgb(216,118,28)" rx="2" ry="2" />
<text  x="842.98" y="687.5" ></text>
</g>
<g >
<title>Game_Screen::GetPicture (10 samples, 0.03%)</title><rect x="589.5" y="677" width="0.4" height="15.0" fill="rgb(241,209,2)" rx="2" ry="2" />
<text  x="592.47" y="687.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (334 samples, 1.15%)</title><rect x="1085.0" y="709" width="13.5" height="15.0" fill="rgb(206,22,12)" rx="2" ry="2" />
<text  x="1087.96" y="719.5" ></text>
</g>
<g >
<title>SDL_PumpEvents_REAL (5 samples, 0.02%)</title><rect x="1182.2" y="757" width="0.2" height="15.0" fill="rgb(252,67,22)" rx="2" ry="2" />
<text  x="1185.15" y="767.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (7 samples, 0.02%)</title><rect x="1029.2" y="693" width="0.3" height="15.0" fill="rgb(210,179,18)" rx="2" ry="2" />
<text  x="1032.20" y="703.5" ></text>
</g>
<g >
<title>operator!= (10 samples, 0.03%)</title><rect x="1156.3" y="709" width="0.4" height="15.0" fill="rgb(229,181,54)" rx="2" ry="2" />
<text  x="1159.29" y="719.5" ></text>
</g>
<g >
<title>flush_tlb_func_common.constprop.9 (3 samples, 0.01%)</title><rect x="1119.1" y="325" width="0.1" height="15.0" fill="rgb(254,172,9)" rx="2" ry="2" />
<text  x="1122.08" y="335.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Impl::_M_alloc (5 samples, 0.02%)</title><rect x="752.5" y="469" width="0.2" height="15.0" fill="rgb(225,118,49)" rx="2" ry="2" />
<text  x="755.54" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_value (7 samples, 0.02%)</title><rect x="699.4" y="501" width="0.3" height="15.0" fill="rgb(238,47,9)" rx="2" ry="2" />
<text  x="702.43" y="511.5" ></text>
</g>
<g >
<title>Scene::MainFunction (149 samples, 0.51%)</title><rect x="98.7" y="885" width="6.1" height="15.0" fill="rgb(221,62,27)" rx="2" ry="2" />
<text  x="101.70" y="895.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (8 samples, 0.03%)</title><rect x="72.9" y="917" width="0.3" height="15.0" fill="rgb(239,69,36)" rx="2" ry="2" />
<text  x="75.87" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt;::__normal_iterator (5 samples, 0.02%)</title><rect x="41.3" y="917" width="0.2" height="15.0" fill="rgb(208,114,1)" rx="2" ry="2" />
<text  x="44.31" y="927.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (10 samples, 0.03%)</title><rect x="736.0" y="533" width="0.4" height="15.0" fill="rgb(239,40,33)" rx="2" ry="2" />
<text  x="739.03" y="543.5" ></text>
</g>
<g >
<title>__sched_text_start (23 samples, 0.08%)</title><rect x="1181.2" y="629" width="1.0" height="15.0" fill="rgb(234,222,24)" rx="2" ry="2" />
<text  x="1184.22" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_is_local (4 samples, 0.01%)</title><rect x="822.9" y="613" width="0.1" height="15.0" fill="rgb(215,185,43)" rx="2" ry="2" />
<text  x="825.86" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (134 samples, 0.46%)</title><rect x="674.1" y="501" width="5.5" height="15.0" fill="rgb(213,0,23)" rx="2" ry="2" />
<text  x="677.14" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_ptr (5 samples, 0.02%)</title><rect x="1132.9" y="453" width="0.2" height="15.0" fill="rgb(254,51,24)" rx="2" ry="2" />
<text  x="1135.90" y="463.5" ></text>
</g>
<g >
<title>std::map&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, (anonymous namespace)::CacheItem, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (128 samples, 0.44%)</title><rect x="105.9" y="629" width="5.2" height="15.0" fill="rgb(253,128,9)" rx="2" ry="2" />
<text  x="108.89" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt;, std::allocator&lt;std::pair&lt;std::weak_ptr&lt;int&gt;, std::function&lt;void (FileRequestResult*)&gt; &gt; &gt; &gt;::clear (8 samples, 0.03%)</title><rect x="653.2" y="597" width="0.3" height="15.0" fill="rgb(206,150,53)" rx="2" ry="2" />
<text  x="656.19" y="607.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (15 samples, 0.05%)</title><rect x="724.4" y="453" width="0.7" height="15.0" fill="rgb(236,38,20)" rx="2" ry="2" />
<text  x="727.44" y="463.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.02%)</title><rect x="1126.8" y="453" width="0.2" height="15.0" fill="rgb(210,173,49)" rx="2" ry="2" />
<text  x="1129.76" y="463.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (4 samples, 0.01%)</title><rect x="835.4" y="613" width="0.1" height="15.0" fill="rgb(212,188,29)" rx="2" ry="2" />
<text  x="838.38" y="623.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (57 samples, 0.20%)</title><rect x="792.1" y="549" width="2.3" height="15.0" fill="rgb(253,215,43)" rx="2" ry="2" />
<text  x="795.07" y="559.5" ></text>
</g>
<g >
<title>_pixman_image_fini (742 samples, 2.56%)</title><rect x="759.9" y="405" width="30.2" height="15.0" fill="rgb(212,124,20)" rx="2" ry="2" />
<text  x="762.90" y="415.5" >_p..</text>
</g>
<g >
<title>__memcmp_avx2_movbe (3 samples, 0.01%)</title><rect x="110.4" y="485" width="0.1" height="15.0" fill="rgb(254,101,36)" rx="2" ry="2" />
<text  x="113.37" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (53 samples, 0.18%)</title><rect x="405.7" y="613" width="2.1" height="15.0" fill="rgb(236,191,41)" rx="2" ry="2" />
<text  x="408.65" y="623.5" ></text>
</g>
<g >
<title>Sprite::SetX (12 samples, 0.04%)</title><rect x="1162.5" y="741" width="0.5" height="15.0" fill="rgb(242,76,47)" rx="2" ry="2" />
<text  x="1165.51" y="751.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.08%)</title><rect x="1115.4" y="421" width="0.9" height="15.0" fill="rgb(254,145,36)" rx="2" ry="2" />
<text  x="1118.38" y="431.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (17 samples, 0.06%)</title><rect x="117.2" y="789" width="0.7" height="15.0" fill="rgb(210,170,49)" rx="2" ry="2" />
<text  x="120.20" y="799.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (49 samples, 0.17%)</title><rect x="98.8" y="469" width="2.0" height="15.0" fill="rgb(251,191,8)" rx="2" ry="2" />
<text  x="101.78" y="479.5" ></text>
</g>
<g >
<title>Game_Picture::Show (5,180 samples, 17.85%)</title><rect x="602.6" y="677" width="210.7" height="15.0" fill="rgb(239,204,33)" rx="2" ry="2" />
<text  x="605.64" y="687.5" >Game_Picture::Show</text>
</g>
<g >
<title>operator new (16 samples, 0.06%)</title><rect x="821.8" y="565" width="0.6" height="15.0" fill="rgb(254,215,41)" rx="2" ry="2" />
<text  x="824.76" y="575.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (16 samples, 0.06%)</title><rect x="789.3" y="341" width="0.6" height="15.0" fill="rgb(229,164,25)" rx="2" ry="2" />
<text  x="792.27" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (3 samples, 0.01%)</title><rect x="454.3" y="661" width="0.1" height="15.0" fill="rgb(239,225,3)" rx="2" ry="2" />
<text  x="457.29" y="671.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (3 samples, 0.01%)</title><rect x="810.0" y="629" width="0.1" height="15.0" fill="rgb(244,91,22)" rx="2" ry="2" />
<text  x="813.01" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::begin (11 samples, 0.04%)</title><rect x="151.0" y="693" width="0.5" height="15.0" fill="rgb(223,157,43)" rx="2" ry="2" />
<text  x="154.03" y="703.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (17 samples, 0.06%)</title><rect x="117.2" y="805" width="0.7" height="15.0" fill="rgb(230,52,24)" rx="2" ry="2" />
<text  x="120.20" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_addr (5 samples, 0.02%)</title><rect x="691.2" y="501" width="0.2" height="15.0" fill="rgb(208,147,22)" rx="2" ry="2" />
<text  x="694.18" y="511.5" ></text>
</g>
<g >
<title>Game_Map::GetNeedRefresh (13 samples, 0.04%)</title><rect x="983.5" y="725" width="0.6" height="15.0" fill="rgb(233,204,39)" rx="2" ry="2" />
<text  x="986.53" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_S_copy (3 samples, 0.01%)</title><rect x="822.5" y="613" width="0.2" height="15.0" fill="rgb(223,4,44)" rx="2" ry="2" />
<text  x="825.53" y="623.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (1,286 samples, 4.43%)</title><rect x="739.6" y="533" width="52.3" height="15.0" fill="rgb(214,46,33)" rx="2" ry="2" />
<text  x="742.57" y="543.5" >std::..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char32_t&gt; &gt;::deallocate (3 samples, 0.01%)</title><rect x="822.4" y="581" width="0.1" height="15.0" fill="rgb(229,101,11)" rx="2" ry="2" />
<text  x="825.41" y="591.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;*, std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; (10 samples, 0.03%)</title><rect x="790.5" y="405" width="0.4" height="15.0" fill="rgb(206,63,22)" rx="2" ry="2" />
<text  x="793.53" y="415.5" ></text>
</g>
<g >
<title>_pixman_compute_composite_region32 (3 samples, 0.01%)</title><rect x="1053.8" y="709" width="0.1" height="15.0" fill="rgb(229,78,15)" rx="2" ry="2" />
<text  x="1056.81" y="719.5" ></text>
</g>
<g >
<title>easyrpg-player (28,617 samples, 98.62%)</title><rect x="26.2" y="949" width="1163.8" height="15.0" fill="rgb(250,187,50)" rx="2" ry="2" />
<text  x="29.23" y="959.5" >easyrpg-player</text>
</g>
<g >
<title>Game_Map::GetDisplayY (5 samples, 0.02%)</title><rect x="606.1" y="661" width="0.2" height="15.0" fill="rgb(239,223,1)" rx="2" ry="2" />
<text  x="609.14" y="671.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, true&gt; (114 samples, 0.39%)</title><rect x="731.4" y="549" width="4.6" height="15.0" fill="rgb(244,146,5)" rx="2" ry="2" />
<text  x="734.40" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (227 samples, 0.78%)</title><rect x="936.3" y="677" width="9.2" height="15.0" fill="rgb(220,83,37)" rx="2" ry="2" />
<text  x="939.28" y="687.5" ></text>
</g>
<g >
<title>Player::Run (121 samples, 0.42%)</title><rect x="127.2" y="885" width="5.0" height="15.0" fill="rgb(251,114,2)" rx="2" ry="2" />
<text  x="130.24" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (486 samples, 1.67%)</title><rect x="291.6" y="693" width="19.7" height="15.0" fill="rgb(235,125,34)" rx="2" ry="2" />
<text  x="294.58" y="703.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, bool&gt;::_M_head (6 samples, 0.02%)</title><rect x="724.2" y="405" width="0.2" height="15.0" fill="rgb(212,163,14)" rx="2" ry="2" />
<text  x="727.20" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (27 samples, 0.09%)</title><rect x="457.6" y="661" width="1.1" height="15.0" fill="rgb(253,224,44)" rx="2" ry="2" />
<text  x="460.62" y="671.5" ></text>
</g>
<g >
<title>Game_Screen::GetPicture (6 samples, 0.02%)</title><rect x="34.2" y="917" width="0.2" height="15.0" fill="rgb(228,188,36)" rx="2" ry="2" />
<text  x="37.20" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;int const&gt; (3 samples, 0.01%)</title><rect x="48.3" y="917" width="0.2" height="15.0" fill="rgb(235,54,38)" rx="2" ry="2" />
<text  x="51.35" y="927.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (5 samples, 0.02%)</title><rect x="1182.2" y="629" width="0.2" height="15.0" fill="rgb(224,7,42)" rx="2" ry="2" />
<text  x="1185.15" y="639.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (4 samples, 0.01%)</title><rect x="1042.8" y="709" width="0.2" height="15.0" fill="rgb(249,83,42)" rx="2" ry="2" />
<text  x="1045.83" y="719.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (87 samples, 0.30%)</title><rect x="1009.5" y="725" width="3.5" height="15.0" fill="rgb(214,189,52)" rx="2" ry="2" />
<text  x="1012.48" y="735.5" ></text>
</g>
<g >
<title>__do_page_fault (27 samples, 0.09%)</title><rect x="1117.0" y="389" width="1.1" height="15.0" fill="rgb(240,2,3)" rx="2" ry="2" />
<text  x="1119.96" y="399.5" ></text>
</g>
<g >
<title>memset@plt (3 samples, 0.01%)</title><rect x="1098.9" y="725" width="0.1" height="15.0" fill="rgb(235,12,35)" rx="2" ry="2" />
<text  x="1101.91" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (23 samples, 0.08%)</title><rect x="689.1" y="501" width="0.9" height="15.0" fill="rgb(212,170,36)" rx="2" ry="2" />
<text  x="692.10" y="511.5" ></text>
</g>
<g >
<title>release_pages (37 samples, 0.13%)</title><rect x="784.1" y="85" width="1.5" height="15.0" fill="rgb(216,224,51)" rx="2" ry="2" />
<text  x="787.10" y="95.5" ></text>
</g>
<g >
<title>Cache::System (4 samples, 0.01%)</title><rect x="1179.6" y="693" width="0.2" height="15.0" fill="rgb(230,220,29)" rx="2" ry="2" />
<text  x="1182.63" y="703.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (6 samples, 0.02%)</title><rect x="66.2" y="917" width="0.2" height="15.0" fill="rgb(213,121,48)" rx="2" ry="2" />
<text  x="69.16" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (33 samples, 0.11%)</title><rect x="687.7" y="469" width="1.3" height="15.0" fill="rgb(221,67,11)" rx="2" ry="2" />
<text  x="690.68" y="479.5" ></text>
</g>
<g >
<title>_mm_unpackhi_epi8 (5 samples, 0.02%)</title><rect x="1080.4" y="645" width="0.2" height="15.0" fill="rgb(252,73,25)" rx="2" ry="2" />
<text  x="1083.40" y="655.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (7 samples, 0.02%)</title><rect x="28.1" y="917" width="0.3" height="15.0" fill="rgb(252,53,13)" rx="2" ry="2" />
<text  x="31.10" y="927.5" ></text>
</g>
<g >
<title>Bitmap::width (38 samples, 0.13%)</title><rect x="1147.1" y="725" width="1.5" height="15.0" fill="rgb(246,49,47)" rx="2" ry="2" />
<text  x="1150.10" y="735.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}::operator() (149 samples, 0.51%)</title><rect x="98.7" y="629" width="6.1" height="15.0" fill="rgb(206,207,48)" rx="2" ry="2" />
<text  x="101.70" y="639.5" ></text>
</g>
<g >
<title>Scene::MainFunction (85 samples, 0.29%)</title><rect x="134.0" y="869" width="3.4" height="15.0" fill="rgb(215,104,0)" rx="2" ry="2" />
<text  x="136.95" y="879.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.06%)</title><rect x="127.2" y="469" width="0.7" height="15.0" fill="rgb(242,8,20)" rx="2" ry="2" />
<text  x="130.24" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::operator (8 samples, 0.03%)</title><rect x="1027.5" y="741" width="0.4" height="15.0" fill="rgb(229,155,17)" rx="2" ry="2" />
<text  x="1030.53" y="751.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (118 samples, 0.41%)</title><rect x="828.3" y="613" width="4.8" height="15.0" fill="rgb(251,208,12)" rx="2" ry="2" />
<text  x="831.27" y="623.5" ></text>
</g>
<g >
<title>do_wp_page (7 samples, 0.02%)</title><rect x="1118.9" y="389" width="0.3" height="15.0" fill="rgb(233,118,18)" rx="2" ry="2" />
<text  x="1121.91" y="399.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (4 samples, 0.01%)</title><rect x="688.6" y="405" width="0.2" height="15.0" fill="rgb(212,223,44)" rx="2" ry="2" />
<text  x="691.61" y="415.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (3 samples, 0.01%)</title><rect x="199.8" y="725" width="0.1" height="15.0" fill="rgb(209,117,54)" rx="2" ry="2" />
<text  x="202.75" y="735.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (68 samples, 0.23%)</title><rect x="651.8" y="629" width="2.8" height="15.0" fill="rgb(228,227,14)" rx="2" ry="2" />
<text  x="654.81" y="639.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (31 samples, 0.11%)</title><rect x="606.3" y="661" width="1.3" height="15.0" fill="rgb(247,190,20)" rx="2" ry="2" />
<text  x="609.34" y="671.5" ></text>
</g>
<g >
<title>free_unref_page_commit (4 samples, 0.01%)</title><rect x="787.3" y="85" width="0.2" height="15.0" fill="rgb(212,49,19)" rx="2" ry="2" />
<text  x="790.31" y="95.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt; &gt; &gt; &gt; (7 samples, 0.02%)</title><rect x="1042.0" y="757" width="0.3" height="15.0" fill="rgb(218,25,45)" rx="2" ry="2" />
<text  x="1044.97" y="767.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::end (9 samples, 0.03%)</title><rect x="642.4" y="613" width="0.3" height="15.0" fill="rgb(238,144,52)" rx="2" ry="2" />
<text  x="645.38" y="623.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::get (3 samples, 0.01%)</title><rect x="1158.8" y="693" width="0.1" height="15.0" fill="rgb(242,175,35)" rx="2" ry="2" />
<text  x="1161.77" y="703.5" ></text>
</g>
<g >
<title>operator!= (21 samples, 0.07%)</title><rect x="1161.5" y="725" width="0.8" height="15.0" fill="rgb(240,161,54)" rx="2" ry="2" />
<text  x="1164.49" y="735.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (3 samples, 0.01%)</title><rect x="1167.8" y="725" width="0.1" height="15.0" fill="rgb(243,128,36)" rx="2" ry="2" />
<text  x="1170.80" y="735.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.03%)</title><rect x="691.7" y="533" width="0.3" height="15.0" fill="rgb(240,107,33)" rx="2" ry="2" />
<text  x="694.66" y="543.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_ptr (6 samples, 0.02%)</title><rect x="1103.5" y="629" width="0.3" height="15.0" fill="rgb(247,29,49)" rx="2" ry="2" />
<text  x="1106.54" y="639.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (144 samples, 0.50%)</title><rect x="117.9" y="597" width="5.8" height="15.0" fill="rgb(209,111,43)" rx="2" ry="2" />
<text  x="120.89" y="607.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Impl::_M_alloc (4 samples, 0.01%)</title><rect x="745.2" y="469" width="0.1" height="15.0" fill="rgb(237,52,22)" rx="2" ry="2" />
<text  x="748.18" y="479.5" ></text>
</g>
<g >
<title>std::_Bit_reference::operator bool (13 samples, 0.04%)</title><rect x="148.3" y="709" width="0.6" height="15.0" fill="rgb(242,80,29)" rx="2" ry="2" />
<text  x="151.35" y="719.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (3 samples, 0.01%)</title><rect x="1117.8" y="309" width="0.1" height="15.0" fill="rgb(242,89,7)" rx="2" ry="2" />
<text  x="1120.82" y="319.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (8 samples, 0.03%)</title><rect x="788.0" y="293" width="0.3" height="15.0" fill="rgb(220,134,43)" rx="2" ry="2" />
<text  x="790.96" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.01%)</title><rect x="1182.2" y="549" width="0.1" height="15.0" fill="rgb(222,155,13)" rx="2" ry="2" />
<text  x="1185.19" y="559.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (288 samples, 0.99%)</title><rect x="387.2" y="677" width="11.7" height="15.0" fill="rgb(217,82,0)" rx="2" ry="2" />
<text  x="390.19" y="687.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (119 samples, 0.41%)</title><rect x="722.7" y="501" width="4.9" height="15.0" fill="rgb(248,27,30)" rx="2" ry="2" />
<text  x="725.73" y="511.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (44 samples, 0.15%)</title><rect x="815.9" y="613" width="1.8" height="15.0" fill="rgb(253,59,15)" rx="2" ry="2" />
<text  x="818.90" y="623.5" ></text>
</g>
<g >
<title>Game_Player::Update (45 samples, 0.16%)</title><rect x="1033.0" y="773" width="1.9" height="15.0" fill="rgb(226,21,2)" rx="2" ry="2" />
<text  x="1036.02" y="783.5" ></text>
</g>
<g >
<title>_mm_store_si128 (18 samples, 0.06%)</title><rect x="1079.7" y="645" width="0.7" height="15.0" fill="rgb(223,145,5)" rx="2" ry="2" />
<text  x="1082.67" y="655.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandWait (52 samples, 0.18%)</title><rect x="838.3" y="693" width="2.1" height="15.0" fill="rgb(211,220,19)" rx="2" ry="2" />
<text  x="841.31" y="703.5" ></text>
</g>
<g >
<title>_mm_movemask_epi8 (15 samples, 0.05%)</title><rect x="1068.3" y="645" width="0.6" height="15.0" fill="rgb(208,104,30)" rx="2" ry="2" />
<text  x="1071.32" y="655.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (3 samples, 0.01%)</title><rect x="139.8" y="917" width="0.1" height="15.0" fill="rgb(229,121,30)" rx="2" ry="2" />
<text  x="142.77" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (9 samples, 0.03%)</title><rect x="141.0" y="917" width="0.4" height="15.0" fill="rgb(241,209,7)" rx="2" ry="2" />
<text  x="143.99" y="927.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (3 samples, 0.01%)</title><rect x="789.1" y="341" width="0.2" height="15.0" fill="rgb(232,54,37)" rx="2" ry="2" />
<text  x="792.14" y="351.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (5 samples, 0.02%)</title><rect x="1172.2" y="693" width="0.2" height="15.0" fill="rgb(243,58,4)" rx="2" ry="2" />
<text  x="1175.23" y="703.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (1,058 samples, 3.65%)</title><rect x="608.3" y="645" width="43.0" height="15.0" fill="rgb(229,99,9)" rx="2" ry="2" />
<text  x="611.26" y="655.5" >Asyn..</text>
</g>
<g >
<title>Game_Variables_Class::Get (7 samples, 0.02%)</title><rect x="34.6" y="917" width="0.3" height="15.0" fill="rgb(244,47,45)" rx="2" ry="2" />
<text  x="37.60" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (4 samples, 0.01%)</title><rect x="393.5" y="645" width="0.2" height="15.0" fill="rgb(237,228,23)" rx="2" ry="2" />
<text  x="396.53" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::operator* (3 samples, 0.01%)</title><rect x="1034.3" y="709" width="0.1" height="15.0" fill="rgb(214,122,7)" rx="2" ry="2" />
<text  x="1037.29" y="719.5" ></text>
</g>
<g >
<title>Game_Picture::Show (145 samples, 0.50%)</title><rect x="117.9" y="773" width="5.9" height="15.0" fill="rgb(245,162,30)" rx="2" ry="2" />
<text  x="120.89" y="783.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (150 samples, 0.52%)</title><rect x="111.1" y="597" width="6.1" height="15.0" fill="rgb(216,127,47)" rx="2" ry="2" />
<text  x="114.10" y="607.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (103 samples, 0.35%)</title><rect x="711.2" y="453" width="4.2" height="15.0" fill="rgb(228,121,1)" rx="2" ry="2" />
<text  x="714.22" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (242 samples, 0.83%)</title><rect x="968.6" y="677" width="9.8" height="15.0" fill="rgb(224,165,5)" rx="2" ry="2" />
<text  x="971.57" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char32_t&gt;::deallocate (3 samples, 0.01%)</title><rect x="822.4" y="565" width="0.1" height="15.0" fill="rgb(242,52,38)" rx="2" ry="2" />
<text  x="825.41" y="575.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (41 samples, 0.14%)</title><rect x="713.7" y="421" width="1.7" height="15.0" fill="rgb(250,134,17)" rx="2" ry="2" />
<text  x="716.75" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (5 samples, 0.02%)</title><rect x="783.5" y="213" width="0.2" height="15.0" fill="rgb(209,0,2)" rx="2" ry="2" />
<text  x="786.53" y="223.5" ></text>
</g>
<g >
<title>x86_pmu_enable (22 samples, 0.08%)</title><rect x="1181.3" y="565" width="0.9" height="15.0" fill="rgb(253,148,37)" rx="2" ry="2" />
<text  x="1184.26" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (3 samples, 0.01%)</title><rect x="153.5" y="693" width="0.1" height="15.0" fill="rgb(218,93,17)" rx="2" ry="2" />
<text  x="156.51" y="703.5" ></text>
</g>
<g >
<title>Tone::Tone (14 samples, 0.05%)</title><rect x="1149.4" y="725" width="0.5" height="15.0" fill="rgb(235,45,41)" rx="2" ry="2" />
<text  x="1152.37" y="735.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;Input::UiSource::Update()::{lambda(int)#1}&gt; &gt; (12 samples, 0.04%)</title><rect x="143.9" y="725" width="0.5" height="15.0" fill="rgb(236,91,50)" rx="2" ry="2" />
<text  x="146.92" y="735.5" ></text>
</g>
<g >
<title>RPG::SavePicture::SavePicture (4 samples, 0.01%)</title><rect x="1039.4" y="741" width="0.2" height="15.0" fill="rgb(247,107,27)" rx="2" ry="2" />
<text  x="1042.45" y="751.5" ></text>
</g>
<g >
<title>memcmp (8 samples, 0.03%)</title><rect x="710.8" y="405" width="0.3" height="15.0" fill="rgb(226,103,27)" rx="2" ry="2" />
<text  x="713.82" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, bool&gt;::_M_head (4 samples, 0.01%)</title><rect x="57.9" y="917" width="0.2" height="15.0" fill="rgb(208,16,41)" rx="2" ry="2" />
<text  x="60.95" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (839 samples, 2.89%)</title><rect x="693.5" y="533" width="34.1" height="15.0" fill="rgb(231,134,45)" rx="2" ry="2" />
<text  x="696.49" y="543.5" >st..</text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::operator= (8 samples, 0.03%)</title><rect x="1145.6" y="645" width="0.3" height="15.0" fill="rgb(224,181,10)" rx="2" ry="2" />
<text  x="1148.55" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (3 samples, 0.01%)</title><rect x="1150.8" y="709" width="0.1" height="15.0" fill="rgb(229,216,26)" rx="2" ry="2" />
<text  x="1153.76" y="719.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (306 samples, 1.05%)</title><rect x="104.8" y="661" width="12.4" height="15.0" fill="rgb(209,24,35)" rx="2" ry="2" />
<text  x="107.75" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.02%)</title><rect x="117.2" y="485" width="0.3" height="15.0" fill="rgb(252,122,14)" rx="2" ry="2" />
<text  x="120.20" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (3 samples, 0.01%)</title><rect x="736.9" y="533" width="0.1" height="15.0" fill="rgb(213,143,19)" rx="2" ry="2" />
<text  x="739.93" y="543.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (26 samples, 0.09%)</title><rect x="650.0" y="581" width="1.1" height="15.0" fill="rgb(232,59,15)" rx="2" ry="2" />
<text  x="653.02" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (82 samples, 0.28%)</title><rect x="1171.2" y="709" width="3.3" height="15.0" fill="rgb(233,81,20)" rx="2" ry="2" />
<text  x="1174.21" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (13 samples, 0.04%)</title><rect x="585.0" y="661" width="0.6" height="15.0" fill="rgb(211,206,41)" rx="2" ry="2" />
<text  x="588.03" y="671.5" ></text>
</g>
<g >
<title>___sys_recvmsg (3 samples, 0.01%)</title><rect x="1182.2" y="501" width="0.1" height="15.0" fill="rgb(244,166,21)" rx="2" ry="2" />
<text  x="1185.19" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (7 samples, 0.02%)</title><rect x="96.7" y="917" width="0.3" height="15.0" fill="rgb(244,155,36)" rx="2" ry="2" />
<text  x="99.70" y="927.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::_M_ptr (12 samples, 0.04%)</title><rect x="67.3" y="917" width="0.5" height="15.0" fill="rgb(244,190,51)" rx="2" ry="2" />
<text  x="70.34" y="927.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (95 samples, 0.33%)</title><rect x="1114.6" y="453" width="3.9" height="15.0" fill="rgb(241,208,14)" rx="2" ry="2" />
<text  x="1117.60" y="463.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (7 samples, 0.02%)</title><rect x="728.5" y="501" width="0.3" height="15.0" fill="rgb(252,97,25)" rx="2" ry="2" />
<text  x="731.47" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (5 samples, 0.02%)</title><rect x="387.8" y="661" width="0.2" height="15.0" fill="rgb(215,140,7)" rx="2" ry="2" />
<text  x="390.84" y="671.5" ></text>
</g>
<g >
<title>operator delete (139 samples, 0.48%)</title><rect x="746.6" y="421" width="5.7" height="15.0" fill="rgb(234,136,6)" rx="2" ry="2" />
<text  x="749.65" y="431.5" ></text>
</g>
<g >
<title>Sprite::SetZ (3 samples, 0.01%)</title><rect x="1163.3" y="741" width="0.1" height="15.0" fill="rgb(228,118,11)" rx="2" ry="2" />
<text  x="1166.28" y="751.5" ></text>
</g>
<g >
<title>std::map&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, (anonymous namespace)::CacheItem, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::end (9 samples, 0.03%)</title><rect x="693.1" y="549" width="0.4" height="15.0" fill="rgb(223,186,0)" rx="2" ry="2" />
<text  x="696.13" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator bool (3 samples, 0.01%)</title><rect x="589.7" y="661" width="0.1" height="15.0" fill="rgb(249,201,10)" rx="2" ry="2" />
<text  x="592.67" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (5 samples, 0.02%)</title><rect x="395.1" y="629" width="0.2" height="15.0" fill="rgb(241,192,26)" rx="2" ry="2" />
<text  x="398.08" y="639.5" ></text>
</g>
<g >
<title>__strlen_avx2 (7 samples, 0.02%)</title><rect x="618.5" y="565" width="0.3" height="15.0" fill="rgb(250,68,9)" rx="2" ry="2" />
<text  x="621.54" y="575.5" ></text>
</g>
<g >
<title>Window_Base::Update (6 samples, 0.02%)</title><rect x="1179.8" y="757" width="0.2" height="15.0" fill="rgb(229,130,22)" rx="2" ry="2" />
<text  x="1182.79" y="767.5" ></text>
</g>
<g >
<title>SDL_GetTicks_REAL (5 samples, 0.02%)</title><rect x="1180.0" y="805" width="0.2" height="15.0" fill="rgb(227,120,50)" rx="2" ry="2" />
<text  x="1183.04" y="815.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (144 samples, 0.50%)</title><rect x="117.9" y="533" width="5.8" height="15.0" fill="rgb(244,24,25)" rx="2" ry="2" />
<text  x="120.89" y="543.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::_M_head (3 samples, 0.01%)</title><rect x="1028.3" y="661" width="0.2" height="15.0" fill="rgb(251,35,4)" rx="2" ry="2" />
<text  x="1031.35" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (64 samples, 0.22%)</title><rect x="922.2" y="677" width="2.6" height="15.0" fill="rgb(218,15,31)" rx="2" ry="2" />
<text  x="925.25" y="687.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (17 samples, 0.06%)</title><rect x="71.8" y="917" width="0.7" height="15.0" fill="rgb(214,110,15)" rx="2" ry="2" />
<text  x="74.81" y="927.5" ></text>
</g>
<g >
<title>Game_Map::Refresh (9 samples, 0.03%)</title><rect x="33.1" y="917" width="0.4" height="15.0" fill="rgb(252,12,0)" rx="2" ry="2" />
<text  x="36.14" y="927.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.01%)</title><rect x="1180.6" y="677" width="0.1" height="15.0" fill="rgb(227,47,6)" rx="2" ry="2" />
<text  x="1183.57" y="687.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::_M_ptr (11 samples, 0.04%)</title><rect x="835.1" y="645" width="0.4" height="15.0" fill="rgb(209,172,7)" rx="2" ry="2" />
<text  x="838.10" y="655.5" ></text>
</g>
<g >
<title>do_page_fault (161 samples, 0.55%)</title><rect x="1089.3" y="677" width="6.6" height="15.0" fill="rgb(238,12,1)" rx="2" ry="2" />
<text  x="1092.35" y="687.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (9 samples, 0.03%)</title><rect x="1042.6" y="725" width="0.4" height="15.0" fill="rgb(211,107,48)" rx="2" ry="2" />
<text  x="1045.62" y="735.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (81 samples, 0.28%)</title><rect x="707.9" y="437" width="3.3" height="15.0" fill="rgb(212,135,6)" rx="2" ry="2" />
<text  x="710.93" y="447.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, true&gt; (10 samples, 0.03%)</title><rect x="117.5" y="613" width="0.4" height="15.0" fill="rgb(243,112,14)" rx="2" ry="2" />
<text  x="120.48" y="623.5" ></text>
</g>
<g >
<title>Game_Map::Update (22,097 samples, 76.15%)</title><rect x="145.5" y="789" width="898.6" height="15.0" fill="rgb(240,221,27)" rx="2" ry="2" />
<text  x="148.46" y="799.5" >Game_Map::Update</text>
</g>
<g >
<title>tlb_flush_mmu_free (9 samples, 0.03%)</title><rect x="787.2" y="149" width="0.3" height="15.0" fill="rgb(209,170,16)" rx="2" ry="2" />
<text  x="790.15" y="159.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_destroy (187 samples, 0.64%)</title><rect x="744.9" y="485" width="7.6" height="15.0" fill="rgb(216,98,24)" rx="2" ry="2" />
<text  x="747.90" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (118 samples, 0.41%)</title><rect x="611.2" y="581" width="4.8" height="15.0" fill="rgb(205,189,50)" rx="2" ry="2" />
<text  x="614.22" y="591.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (4 samples, 0.01%)</title><rect x="66.6" y="917" width="0.1" height="15.0" fill="rgb(243,4,10)" rx="2" ry="2" />
<text  x="69.57" y="927.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (10 samples, 0.03%)</title><rect x="137.7" y="917" width="0.4" height="15.0" fill="rgb(211,98,29)" rx="2" ry="2" />
<text  x="140.65" y="927.5" ></text>
</g>
<g >
<title>analyze_extent (3 samples, 0.01%)</title><rect x="1054.9" y="709" width="0.1" height="15.0" fill="rgb(252,68,4)" rx="2" ry="2" />
<text  x="1057.86" y="719.5" ></text>
</g>
<g >
<title>zap_page_range (5 samples, 0.02%)</title><rect x="783.5" y="197" width="0.2" height="15.0" fill="rgb(230,35,40)" rx="2" ry="2" />
<text  x="786.53" y="207.5" ></text>
</g>
<g >
<title>Graphics::LocalDraw (26 samples, 0.09%)</title><rect x="141.8" y="789" width="1.1" height="15.0" fill="rgb(237,92,34)" rx="2" ry="2" />
<text  x="144.84" y="799.5" ></text>
</g>
<g >
<title>Sprite::Draw (21 samples, 0.07%)</title><rect x="141.8" y="773" width="0.9" height="15.0" fill="rgb(243,7,53)" rx="2" ry="2" />
<text  x="144.84" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (9 samples, 0.03%)</title><rect x="909.5" y="677" width="0.3" height="15.0" fill="rgb(232,14,44)" rx="2" ry="2" />
<text  x="912.48" y="687.5" ></text>
</g>
<g >
<title>dequeue_entity (6 samples, 0.02%)</title><rect x="20.0" y="757" width="0.3" height="15.0" fill="rgb(220,220,24)" rx="2" ry="2" />
<text  x="23.04" y="767.5" ></text>
</g>
<g >
<title>pixman_region32_init (16 samples, 0.06%)</title><rect x="1107.2" y="517" width="0.6" height="15.0" fill="rgb(250,158,3)" rx="2" ry="2" />
<text  x="1110.16" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (704 samples, 2.43%)</title><rect x="916.9" y="693" width="28.6" height="15.0" fill="rgb(242,193,25)" rx="2" ry="2" />
<text  x="919.88" y="703.5" >st..</text>
</g>
<g >
<title>std::_Head_base&lt;0ul, Game_Picture*, false&gt;::_M_head (3 samples, 0.01%)</title><rect x="1176.8" y="661" width="0.1" height="15.0" fill="rgb(226,44,0)" rx="2" ry="2" />
<text  x="1179.82" y="671.5" ></text>
</g>
<g >
<title>wp_page_copy (7 samples, 0.02%)</title><rect x="1118.9" y="373" width="0.3" height="15.0" fill="rgb(215,112,41)" rx="2" ry="2" />
<text  x="1121.91" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;::_M_v (4 samples, 0.01%)</title><rect x="646.2" y="533" width="0.2" height="15.0" fill="rgb(247,140,33)" rx="2" ry="2" />
<text  x="649.20" y="543.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (44 samples, 0.15%)</title><rect x="733.3" y="501" width="1.8" height="15.0" fill="rgb(246,181,4)" rx="2" ry="2" />
<text  x="736.31" y="511.5" ></text>
</g>
<g >
<title>_pixman_multiply_overflows_size (3 samples, 0.01%)</title><rect x="1108.1" y="517" width="0.1" height="15.0" fill="rgb(213,0,6)" rx="2" ry="2" />
<text  x="1111.06" y="527.5" ></text>
</g>
<g >
<title>Game_Picture::Show (121 samples, 0.42%)</title><rect x="127.2" y="677" width="5.0" height="15.0" fill="rgb(253,110,50)" rx="2" ry="2" />
<text  x="130.24" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (20 samples, 0.07%)</title><rect x="134.0" y="517" width="0.8" height="15.0" fill="rgb(230,218,40)" rx="2" ry="2" />
<text  x="136.95" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (16 samples, 0.06%)</title><rect x="618.3" y="597" width="0.6" height="15.0" fill="rgb(223,116,3)" rx="2" ry="2" />
<text  x="621.26" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator++ (43 samples, 0.15%)</title><rect x="628.7" y="597" width="1.7" height="15.0" fill="rgb(246,2,23)" rx="2" ry="2" />
<text  x="631.67" y="607.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.02%)</title><rect x="117.2" y="533" width="0.3" height="15.0" fill="rgb(252,10,47)" rx="2" ry="2" />
<text  x="120.20" y="543.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (3 samples, 0.01%)</title><rect x="819.7" y="629" width="0.1" height="15.0" fill="rgb(210,106,15)" rx="2" ry="2" />
<text  x="822.72" y="639.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::~_Sp_counted_base (7 samples, 0.02%)</title><rect x="745.5" y="453" width="0.3" height="15.0" fill="rgb(252,113,25)" rx="2" ry="2" />
<text  x="748.47" y="463.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt;::_M_head (4 samples, 0.01%)</title><rect x="1168.6" y="661" width="0.1" height="15.0" fill="rgb(248,74,6)" rx="2" ry="2" />
<text  x="1171.57" y="671.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (149 samples, 0.51%)</title><rect x="98.7" y="837" width="6.1" height="15.0" fill="rgb(213,193,12)" rx="2" ry="2" />
<text  x="101.70" y="847.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (17 samples, 0.06%)</title><rect x="117.2" y="757" width="0.7" height="15.0" fill="rgb(247,48,5)" rx="2" ry="2" />
<text  x="120.20" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (7 samples, 0.02%)</title><rect x="100.8" y="533" width="0.3" height="15.0" fill="rgb(242,227,33)" rx="2" ry="2" />
<text  x="103.77" y="543.5" ></text>
</g>
<g >
<title>min&lt;int&gt; (5 samples, 0.02%)</title><rect x="1164.1" y="725" width="0.2" height="15.0" fill="rgb(209,136,36)" rx="2" ry="2" />
<text  x="1167.09" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (15 samples, 0.05%)</title><rect x="433.5" y="629" width="0.6" height="15.0" fill="rgb(226,201,25)" rx="2" ry="2" />
<text  x="436.51" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (3 samples, 0.01%)</title><rect x="916.8" y="693" width="0.1" height="15.0" fill="rgb(205,168,26)" rx="2" ry="2" />
<text  x="919.76" y="703.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&amp;&gt; (3 samples, 0.01%)</title><rect x="735.7" y="533" width="0.1" height="15.0" fill="rgb(214,106,37)" rx="2" ry="2" />
<text  x="738.67" y="543.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (149 samples, 0.51%)</title><rect x="98.7" y="805" width="6.1" height="15.0" fill="rgb(239,82,42)" rx="2" ry="2" />
<text  x="101.70" y="815.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_M_end (5 samples, 0.02%)</title><rect x="54.2" y="917" width="0.2" height="15.0" fill="rgb(241,36,54)" rx="2" ry="2" />
<text  x="57.16" y="927.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator() (4 samples, 0.01%)</title><rect x="1134.7" y="517" width="0.2" height="15.0" fill="rgb(216,23,4)" rx="2" ry="2" />
<text  x="1137.69" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (1,719 samples, 5.92%)</title><rect x="264.1" y="709" width="69.9" height="15.0" fill="rgb(223,49,53)" rx="2" ry="2" />
<text  x="267.13" y="719.5" >std::ve..</text>
</g>
<g >
<title>alloc_pages_vma (82 samples, 0.28%)</title><rect x="1090.9" y="613" width="3.3" height="15.0" fill="rgb(245,140,22)" rx="2" ry="2" />
<text  x="1093.89" y="623.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (6 samples, 0.02%)</title><rect x="819.5" y="597" width="0.2" height="15.0" fill="rgb(236,35,40)" rx="2" ry="2" />
<text  x="822.48" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (140 samples, 0.48%)</title><rect x="403.7" y="629" width="5.7" height="15.0" fill="rgb(250,112,14)" rx="2" ry="2" />
<text  x="406.74" y="639.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (13 samples, 0.04%)</title><rect x="101.5" y="533" width="0.5" height="15.0" fill="rgb(254,206,40)" rx="2" ry="2" />
<text  x="104.50" y="543.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (94 samples, 0.32%)</title><rect x="19.8" y="837" width="3.9" height="15.0" fill="rgb(236,93,13)" rx="2" ry="2" />
<text  x="22.84" y="847.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (6 samples, 0.02%)</title><rect x="55.0" y="917" width="0.2" height="15.0" fill="rgb(228,33,37)" rx="2" ry="2" />
<text  x="57.98" y="927.5" ></text>
</g>
<g >
<title>handle_edge_irq (4 samples, 0.01%)</title><rect x="25.8" y="885" width="0.2" height="15.0" fill="rgb(210,224,34)" rx="2" ry="2" />
<text  x="28.82" y="895.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (6 samples, 0.02%)</title><rect x="655.1" y="613" width="0.2" height="15.0" fill="rgb(214,18,43)" rx="2" ry="2" />
<text  x="658.10" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (3 samples, 0.01%)</title><rect x="586.2" y="645" width="0.1" height="15.0" fill="rgb(254,153,44)" rx="2" ry="2" />
<text  x="589.21" y="655.5" ></text>
</g>
<g >
<title>__fget_light (5 samples, 0.02%)</title><rect x="23.9" y="853" width="0.2" height="15.0" fill="rgb(205,24,45)" rx="2" ry="2" />
<text  x="26.91" y="863.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (3 samples, 0.01%)</title><rect x="727.5" y="485" width="0.1" height="15.0" fill="rgb(207,170,16)" rx="2" ry="2" />
<text  x="730.45" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (42 samples, 0.14%)</title><rect x="894.5" y="645" width="1.7" height="15.0" fill="rgb(217,14,35)" rx="2" ry="2" />
<text  x="897.51" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (7 samples, 0.02%)</title><rect x="49.7" y="917" width="0.3" height="15.0" fill="rgb(253,90,48)" rx="2" ry="2" />
<text  x="52.73" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_M_begin (7 samples, 0.02%)</title><rect x="53.9" y="917" width="0.3" height="15.0" fill="rgb(241,214,6)" rx="2" ry="2" />
<text  x="56.88" y="927.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (7 samples, 0.02%)</title><rect x="57.6" y="917" width="0.3" height="15.0" fill="rgb(235,145,2)" rx="2" ry="2" />
<text  x="60.62" y="927.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (22 samples, 0.08%)</title><rect x="1181.3" y="581" width="0.9" height="15.0" fill="rgb(208,42,52)" rx="2" ry="2" />
<text  x="1184.26" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_right (4 samples, 0.01%)</title><rect x="54.8" y="917" width="0.1" height="15.0" fill="rgb(244,14,32)" rx="2" ry="2" />
<text  x="57.77" y="927.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (7 samples, 0.02%)</title><rect x="804.2" y="597" width="0.3" height="15.0" fill="rgb(219,137,10)" rx="2" ry="2" />
<text  x="807.23" y="607.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (77 samples, 0.27%)</title><rect x="704.7" y="437" width="3.1" height="15.0" fill="rgb(250,38,26)" rx="2" ry="2" />
<text  x="707.68" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (10 samples, 0.03%)</title><rect x="585.8" y="645" width="0.4" height="15.0" fill="rgb(234,50,5)" rx="2" ry="2" />
<text  x="588.81" y="655.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_init_functor (7 samples, 0.02%)</title><rect x="802.2" y="613" width="0.2" height="15.0" fill="rgb(241,215,24)" rx="2" ry="2" />
<text  x="805.16" y="623.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (3 samples, 0.01%)</title><rect x="1167.6" y="693" width="0.1" height="15.0" fill="rgb(235,107,15)" rx="2" ry="2" />
<text  x="1170.55" y="703.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (7 samples, 0.02%)</title><rect x="711.9" y="437" width="0.3" height="15.0" fill="rgb(237,19,17)" rx="2" ry="2" />
<text  x="714.88" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (96 samples, 0.33%)</title><rect x="128.3" y="533" width="3.9" height="15.0" fill="rgb(246,95,21)" rx="2" ry="2" />
<text  x="131.26" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (3 samples, 0.01%)</title><rect x="585.7" y="645" width="0.1" height="15.0" fill="rgb(253,222,16)" rx="2" ry="2" />
<text  x="588.69" y="655.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (10 samples, 0.03%)</title><rect x="1168.3" y="693" width="0.4" height="15.0" fill="rgb(236,194,21)" rx="2" ry="2" />
<text  x="1171.32" y="703.5" ></text>
</g>
<g >
<title>Scene::MainFunction (17 samples, 0.06%)</title><rect x="117.2" y="917" width="0.7" height="15.0" fill="rgb(208,192,29)" rx="2" ry="2" />
<text  x="120.20" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (3 samples, 0.01%)</title><rect x="610.7" y="613" width="0.1" height="15.0" fill="rgb(232,15,53)" rx="2" ry="2" />
<text  x="613.70" y="623.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (39 samples, 0.13%)</title><rect x="831.5" y="597" width="1.6" height="15.0" fill="rgb(236,104,38)" rx="2" ry="2" />
<text  x="834.48" y="607.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}::operator() (3,440 samples, 11.86%)</title><rect x="655.9" y="597" width="139.9" height="15.0" fill="rgb(205,97,22)" rx="2" ry="2" />
<text  x="658.88" y="607.5" >Game_Picture::Req..</text>
</g>
<g >
<title>Spriteset_Map::Update (9 samples, 0.03%)</title><rect x="1179.0" y="773" width="0.3" height="15.0" fill="rgb(217,222,13)" rx="2" ry="2" />
<text  x="1181.98" y="783.5" ></text>
</g>
<g >
<title>generic_file_read_iter (10 samples, 0.03%)</title><rect x="24.3" y="805" width="0.4" height="15.0" fill="rgb(238,63,47)" rx="2" ry="2" />
<text  x="27.27" y="815.5" ></text>
</g>
<g >
<title>poll_schedule_timeout.constprop.14 (94 samples, 0.32%)</title><rect x="19.8" y="869" width="3.9" height="15.0" fill="rgb(223,176,4)" rx="2" ry="2" />
<text  x="22.84" y="879.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (26 samples, 0.09%)</title><rect x="1177.8" y="757" width="1.1" height="15.0" fill="rgb(244,144,11)" rx="2" ry="2" />
<text  x="1180.84" y="767.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (5 samples, 0.02%)</title><rect x="1028.5" y="709" width="0.2" height="15.0" fill="rgb(248,99,21)" rx="2" ry="2" />
<text  x="1031.47" y="719.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (121 samples, 0.42%)</title><rect x="127.2" y="693" width="5.0" height="15.0" fill="rgb(206,177,11)" rx="2" ry="2" />
<text  x="130.24" y="703.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (6 samples, 0.02%)</title><rect x="69.3" y="917" width="0.3" height="15.0" fill="rgb(210,44,18)" rx="2" ry="2" />
<text  x="72.33" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (63 samples, 0.22%)</title><rect x="835.5" y="677" width="2.6" height="15.0" fill="rgb(229,91,7)" rx="2" ry="2" />
<text  x="838.54" y="687.5" ></text>
</g>
<g >
<title>Sdl2Ui::UpdateDisplay (11 samples, 0.04%)</title><rect x="142.9" y="789" width="0.4" height="15.0" fill="rgb(223,221,34)" rx="2" ry="2" />
<text  x="145.90" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (32 samples, 0.11%)</title><rect x="649.8" y="597" width="1.3" height="15.0" fill="rgb(216,116,41)" rx="2" ry="2" />
<text  x="652.78" y="607.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (599 samples, 2.06%)</title><rect x="492.1" y="677" width="24.4" height="15.0" fill="rgb(236,220,27)" rx="2" ry="2" />
<text  x="495.11" y="687.5" >G..</text>
</g>
<g >
<title>std::min&lt;int&gt; (10 samples, 0.03%)</title><rect x="559.3" y="677" width="0.4" height="15.0" fill="rgb(220,51,28)" rx="2" ry="2" />
<text  x="562.29" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (11 samples, 0.04%)</title><rect x="793.9" y="485" width="0.4" height="15.0" fill="rgb(231,222,26)" rx="2" ry="2" />
<text  x="796.90" y="495.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (4 samples, 0.01%)</title><rect x="1179.8" y="693" width="0.2" height="15.0" fill="rgb(213,27,17)" rx="2" ry="2" />
<text  x="1182.79" y="703.5" ></text>
</g>
<g >
<title>handle_irq_event (4 samples, 0.01%)</title><rect x="25.8" y="869" width="0.2" height="15.0" fill="rgb(209,11,29)" rx="2" ry="2" />
<text  x="28.82" y="879.5" ></text>
</g>
<g >
<title>std::forward&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;&amp;&gt; (3 samples, 0.01%)</title><rect x="69.6" y="917" width="0.1" height="15.0" fill="rgb(243,69,32)" rx="2" ry="2" />
<text  x="72.58" y="927.5" ></text>
</g>
<g >
<title>Game_Interpreter::ReserveSubcommandIndex (3 samples, 0.01%)</title><rect x="574.2" y="645" width="0.1" height="15.0" fill="rgb(234,4,37)" rx="2" ry="2" />
<text  x="577.18" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;@plt (4 samples, 0.01%)</title><rect x="618.1" y="597" width="0.2" height="15.0" fill="rgb(243,227,28)" rx="2" ry="2" />
<text  x="621.10" y="607.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipToNextConditional (931 samples, 3.21%)</title><rect x="416.6" y="677" width="37.8" height="15.0" fill="rgb(210,189,42)" rx="2" ry="2" />
<text  x="419.55" y="687.5" >Gam..</text>
</g>
<g >
<title>Cache::Picture (121 samples, 0.42%)</title><rect x="127.2" y="565" width="5.0" height="15.0" fill="rgb(210,210,33)" rx="2" ry="2" />
<text  x="130.24" y="575.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (3 samples, 0.01%)</title><rect x="1042.7" y="709" width="0.1" height="15.0" fill="rgb(211,17,22)" rx="2" ry="2" />
<text  x="1045.70" y="719.5" ></text>
</g>
<g >
<title>unpack_128_2x128 (40 samples, 0.14%)</title><rect x="1080.4" y="661" width="1.6" height="15.0" fill="rgb(218,181,8)" rx="2" ry="2" />
<text  x="1083.40" y="671.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandKeyInputProc (16 samples, 0.06%)</title><rect x="586.7" y="693" width="0.7" height="15.0" fill="rgb(216,55,7)" rx="2" ry="2" />
<text  x="589.74" y="703.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (20 samples, 0.07%)</title><rect x="1168.0" y="741" width="0.8" height="15.0" fill="rgb(254,44,7)" rx="2" ry="2" />
<text  x="1171.00" y="751.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::_M_ptr (21 samples, 0.07%)</title><rect x="797.4" y="581" width="0.9" height="15.0" fill="rgb(246,48,3)" rx="2" ry="2" />
<text  x="800.40" y="591.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~tuple (11 samples, 0.04%)</title><rect x="736.0" y="549" width="0.5" height="15.0" fill="rgb(235,181,0)" rx="2" ry="2" />
<text  x="739.03" y="559.5" ></text>
</g>
<g >
<title>poll (5 samples, 0.02%)</title><rect x="1180.5" y="709" width="0.2" height="15.0" fill="rgb(246,161,2)" rx="2" ry="2" />
<text  x="1183.48" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::push_back (42 samples, 0.14%)</title><rect x="821.4" y="645" width="1.7" height="15.0" fill="rgb(211,87,14)" rx="2" ry="2" />
<text  x="824.43" y="655.5" ></text>
</g>
<g >
<title>pixman_image_unref (5 samples, 0.02%)</title><rect x="92.8" y="917" width="0.2" height="15.0" fill="rgb(248,194,11)" rx="2" ry="2" />
<text  x="95.84" y="927.5" ></text>
</g>
<g >
<title>XFlush (5 samples, 0.02%)</title><rect x="1182.2" y="709" width="0.2" height="15.0" fill="rgb(218,91,30)" rx="2" ry="2" />
<text  x="1185.15" y="719.5" ></text>
</g>
<g >
<title>Player::Update (17 samples, 0.06%)</title><rect x="117.2" y="901" width="0.7" height="15.0" fill="rgb(212,215,8)" rx="2" ry="2" />
<text  x="120.20" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (7 samples, 0.02%)</title><rect x="439.9" y="613" width="0.3" height="15.0" fill="rgb(233,139,8)" rx="2" ry="2" />
<text  x="442.93" y="623.5" ></text>
</g>
<g >
<title>create_bits (5 samples, 0.02%)</title><rect x="133.3" y="901" width="0.2" height="15.0" fill="rgb(220,210,31)" rx="2" ry="2" />
<text  x="136.34" y="911.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (15 samples, 0.05%)</title><rect x="1174.5" y="709" width="0.7" height="15.0" fill="rgb(214,162,41)" rx="2" ry="2" />
<text  x="1177.55" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (7 samples, 0.02%)</title><rect x="839.3" y="645" width="0.3" height="15.0" fill="rgb(206,114,5)" rx="2" ry="2" />
<text  x="842.33" y="655.5" ></text>
</g>
<g >
<title>Bitmap::~Bitmap (950 samples, 3.27%)</title><rect x="753.0" y="437" width="38.6" height="15.0" fill="rgb(251,152,50)" rx="2" ry="2" />
<text  x="755.99" y="447.5" >Bit..</text>
</g>
<g >
<title>Player::Update (306 samples, 1.05%)</title><rect x="104.8" y="917" width="12.4" height="15.0" fill="rgb(227,151,31)" rx="2" ry="2" />
<text  x="107.75" y="927.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (4 samples, 0.01%)</title><rect x="61.7" y="917" width="0.2" height="15.0" fill="rgb(244,139,29)" rx="2" ry="2" />
<text  x="64.69" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt;::end (3 samples, 0.01%)</title><rect x="81.5" y="917" width="0.1" height="15.0" fill="rgb(235,206,26)" rx="2" ry="2" />
<text  x="84.45" y="927.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (25 samples, 0.09%)</title><rect x="127.2" y="549" width="1.1" height="15.0" fill="rgb(220,153,17)" rx="2" ry="2" />
<text  x="130.24" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (6 samples, 0.02%)</title><rect x="389.2" y="645" width="0.3" height="15.0" fill="rgb(248,145,43)" rx="2" ry="2" />
<text  x="392.22" y="655.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.01%)</title><rect x="824.8" y="565" width="0.1" height="15.0" fill="rgb(226,212,27)" rx="2" ry="2" />
<text  x="827.77" y="575.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Scene, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (4 samples, 0.01%)</title><rect x="1009.3" y="725" width="0.2" height="15.0" fill="rgb(220,100,42)" rx="2" ry="2" />
<text  x="1012.32" y="735.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (10 samples, 0.03%)</title><rect x="654.6" y="629" width="0.4" height="15.0" fill="rgb(225,111,0)" rx="2" ry="2" />
<text  x="657.58" y="639.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (10 samples, 0.03%)</title><rect x="788.3" y="293" width="0.4" height="15.0" fill="rgb(249,201,29)" rx="2" ry="2" />
<text  x="791.29" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_set_length (3 samples, 0.01%)</title><rect x="822.7" y="629" width="0.1" height="15.0" fill="rgb(243,97,45)" rx="2" ry="2" />
<text  x="825.65" y="639.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (68 samples, 0.23%)</title><rect x="646.8" y="517" width="2.8" height="15.0" fill="rgb(242,78,44)" rx="2" ry="2" />
<text  x="649.85" y="527.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (15 samples, 0.05%)</title><rect x="1095.0" y="613" width="0.6" height="15.0" fill="rgb(210,130,24)" rx="2" ry="2" />
<text  x="1098.00" y="623.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (22 samples, 0.08%)</title><rect x="1181.3" y="549" width="0.9" height="15.0" fill="rgb(251,195,37)" rx="2" ry="2" />
<text  x="1184.26" y="559.5" ></text>
</g>
<g >
<title>std::find&lt;int const*, int&gt; (149 samples, 0.51%)</title><rect x="440.3" y="661" width="6.1" height="15.0" fill="rgb(235,201,32)" rx="2" ry="2" />
<text  x="443.30" y="671.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (25 samples, 0.09%)</title><rect x="127.2" y="533" width="1.1" height="15.0" fill="rgb(241,18,1)" rx="2" ry="2" />
<text  x="130.24" y="543.5" ></text>
</g>
<g >
<title>variables (12 samples, 0.04%)</title><rect x="516.0" y="661" width="0.5" height="15.0" fill="rgb(230,198,40)" rx="2" ry="2" />
<text  x="518.98" y="671.5" ></text>
</g>
<g >
<title>__handle_mm_fault (142 samples, 0.49%)</title><rect x="1089.9" y="629" width="5.8" height="15.0" fill="rgb(206,32,42)" rx="2" ry="2" />
<text  x="1092.88" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char32_t&gt;::allocate (16 samples, 0.06%)</title><rect x="821.8" y="581" width="0.6" height="15.0" fill="rgb(244,155,20)" rx="2" ry="2" />
<text  x="824.76" y="591.5" ></text>
</g>
<g >
<title>std::forward&lt;int&amp;&gt; (3 samples, 0.01%)</title><rect x="1135.8" y="597" width="0.2" height="15.0" fill="rgb(234,226,48)" rx="2" ry="2" />
<text  x="1138.83" y="607.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (63 samples, 0.22%)</title><rect x="114.5" y="501" width="2.6" height="15.0" fill="rgb(232,224,39)" rx="2" ry="2" />
<text  x="117.51" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (229 samples, 0.79%)</title><rect x="886.9" y="661" width="9.3" height="15.0" fill="rgb(228,140,26)" rx="2" ry="2" />
<text  x="889.91" y="671.5" ></text>
</g>
<g >
<title>__libc_start_main (121 samples, 0.42%)</title><rect x="127.2" y="917" width="5.0" height="15.0" fill="rgb(245,218,33)" rx="2" ry="2" />
<text  x="130.24" y="927.5" ></text>
</g>
<g >
<title>unmap_single_vma (3 samples, 0.01%)</title><rect x="783.6" y="181" width="0.1" height="15.0" fill="rgb(245,171,34)" rx="2" ry="2" />
<text  x="786.61" y="191.5" ></text>
</g>
<g >
<title>pixman_image_get_width (14 samples, 0.05%)</title><rect x="1148.0" y="709" width="0.6" height="15.0" fill="rgb(219,136,22)" rx="2" ry="2" />
<text  x="1150.99" y="719.5" ></text>
</g>
<g >
<title>__GI___nanosleep (25 samples, 0.09%)</title><rect x="1181.1" y="741" width="1.1" height="15.0" fill="rgb(228,198,9)" rx="2" ry="2" />
<text  x="1184.13" y="751.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (15 samples, 0.05%)</title><rect x="31.9" y="917" width="0.6" height="15.0" fill="rgb(254,144,45)" rx="2" ry="2" />
<text  x="34.92" y="927.5" ></text>
</g>
<g >
<title>SDL_WaitEventTimeout_REAL (22 samples, 0.08%)</title><rect x="1180.2" y="805" width="0.9" height="15.0" fill="rgb(223,88,10)" rx="2" ry="2" />
<text  x="1183.24" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::~vector (7 samples, 0.02%)</title><rect x="89.0" y="917" width="0.3" height="15.0" fill="rgb(241,217,51)" rx="2" ry="2" />
<text  x="92.02" y="927.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (4 samples, 0.01%)</title><rect x="703.3" y="437" width="0.2" height="15.0" fill="rgb(235,194,52)" rx="2" ry="2" />
<text  x="706.29" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (9 samples, 0.03%)</title><rect x="126.8" y="917" width="0.4" height="15.0" fill="rgb(213,104,46)" rx="2" ry="2" />
<text  x="129.80" y="927.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (10 samples, 0.03%)</title><rect x="100.3" y="453" width="0.4" height="15.0" fill="rgb(213,92,27)" rx="2" ry="2" />
<text  x="103.28" y="463.5" ></text>
</g>
<g >
<title>analyze_extent (3 samples, 0.01%)</title><rect x="133.7" y="917" width="0.1" height="15.0" fill="rgb(221,40,29)" rx="2" ry="2" />
<text  x="136.71" y="927.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingForegroundExecution (22 samples, 0.08%)</title><rect x="1031.5" y="757" width="0.9" height="15.0" fill="rgb(245,184,12)" rx="2" ry="2" />
<text  x="1034.52" y="767.5" ></text>
</g>
<g >
<title>get_unmapped_area (8 samples, 0.03%)</title><rect x="1115.5" y="325" width="0.3" height="15.0" fill="rgb(247,183,51)" rx="2" ry="2" />
<text  x="1118.50" y="335.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::_M_ptr (8 samples, 0.03%)</title><rect x="798.5" y="581" width="0.3" height="15.0" fill="rgb(247,103,30)" rx="2" ry="2" />
<text  x="801.50" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator (17 samples, 0.06%)</title><rect x="1043.0" y="757" width="0.7" height="15.0" fill="rgb(240,118,12)" rx="2" ry="2" />
<text  x="1045.99" y="767.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.02%)</title><rect x="823.7" y="517" width="0.2" height="15.0" fill="rgb(222,63,0)" rx="2" ry="2" />
<text  x="826.71" y="527.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (72 samples, 0.25%)</title><rect x="20.5" y="757" width="2.9" height="15.0" fill="rgb(226,159,51)" rx="2" ry="2" />
<text  x="23.45" y="767.5" ></text>
</g>
<g >
<title>unmap_page_range (23 samples, 0.08%)</title><rect x="785.6" y="133" width="0.9" height="15.0" fill="rgb(205,78,44)" rx="2" ry="2" />
<text  x="788.61" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_key (54 samples, 0.19%)</title><rect x="696.1" y="501" width="2.2" height="15.0" fill="rgb(221,226,17)" rx="2" ry="2" />
<text  x="699.06" y="511.5" ></text>
</g>
<g >
<title>operator new (158 samples, 0.54%)</title><rect x="826.9" y="645" width="6.4" height="15.0" fill="rgb(217,207,19)" rx="2" ry="2" />
<text  x="829.92" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (97 samples, 0.33%)</title><rect x="105.9" y="517" width="3.9" height="15.0" fill="rgb(210,38,26)" rx="2" ry="2" />
<text  x="108.89" y="527.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;Input::UiSource::Update()::{lambda(int)#1}&gt; &gt; (13 samples, 0.04%)</title><rect x="143.9" y="741" width="0.5" height="15.0" fill="rgb(235,208,9)" rx="2" ry="2" />
<text  x="146.88" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (4 samples, 0.01%)</title><rect x="578.2" y="645" width="0.2" height="15.0" fill="rgb(217,2,41)" rx="2" ry="2" />
<text  x="581.20" y="655.5" ></text>
</g>
<g >
<title>Scene::IsAsyncPending (8 samples, 0.03%)</title><rect x="145.1" y="821" width="0.3" height="15.0" fill="rgb(208,117,10)" rx="2" ry="2" />
<text  x="148.10" y="831.5" ></text>
</g>
<g >
<title>Game_Switches_Class::Get (3 samples, 0.01%)</title><rect x="34.5" y="917" width="0.1" height="15.0" fill="rgb(253,63,38)" rx="2" ry="2" />
<text  x="37.48" y="927.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (5 samples, 0.02%)</title><rect x="615.6" y="485" width="0.2" height="15.0" fill="rgb(227,146,16)" rx="2" ry="2" />
<text  x="618.58" y="495.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustParams (10 samples, 0.03%)</title><rect x="820.6" y="661" width="0.4" height="15.0" fill="rgb(239,42,39)" rx="2" ry="2" />
<text  x="823.62" y="671.5" ></text>
</g>
<g >
<title>Game_Picture::Show (3 samples, 0.01%)</title><rect x="762.2" y="373" width="0.1" height="15.0" fill="rgb(234,89,20)" rx="2" ry="2" />
<text  x="765.18" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_S_value (6 samples, 0.02%)</title><rect x="721.1" y="501" width="0.3" height="15.0" fill="rgb(209,57,0)" rx="2" ry="2" />
<text  x="724.11" y="511.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (16 samples, 0.06%)</title><rect x="1152.1" y="725" width="0.7" height="15.0" fill="rgb(227,77,15)" rx="2" ry="2" />
<text  x="1155.14" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt;::_Iter_equals_val (15 samples, 0.05%)</title><rect x="441.2" y="629" width="0.6" height="15.0" fill="rgb(240,32,19)" rx="2" ry="2" />
<text  x="444.24" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (4 samples, 0.01%)</title><rect x="576.4" y="613" width="0.2" height="15.0" fill="rgb(218,38,7)" rx="2" ry="2" />
<text  x="579.41" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (27 samples, 0.09%)</title><rect x="799.9" y="629" width="1.1" height="15.0" fill="rgb(222,59,47)" rx="2" ry="2" />
<text  x="802.92" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (3 samples, 0.01%)</title><rect x="140.3" y="917" width="0.2" height="15.0" fill="rgb(230,140,22)" rx="2" ry="2" />
<text  x="143.34" y="927.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (5 samples, 0.02%)</title><rect x="76.4" y="917" width="0.2" height="15.0" fill="rgb(223,195,26)" rx="2" ry="2" />
<text  x="79.41" y="927.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (47 samples, 0.16%)</title><rect x="1116.5" y="437" width="1.9" height="15.0" fill="rgb(252,176,30)" rx="2" ry="2" />
<text  x="1119.47" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (6 samples, 0.02%)</title><rect x="824.7" y="613" width="0.2" height="15.0" fill="rgb(241,194,30)" rx="2" ry="2" />
<text  x="827.69" y="623.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (57 samples, 0.20%)</title><rect x="733.2" y="517" width="2.3" height="15.0" fill="rgb(254,70,3)" rx="2" ry="2" />
<text  x="736.23" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (205 samples, 0.71%)</title><rect x="642.9" y="613" width="8.3" height="15.0" fill="rgb(223,158,9)" rx="2" ry="2" />
<text  x="645.86" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, unsigned long, true&gt;::_S_equals (94 samples, 0.32%)</title><rect x="645.8" y="549" width="3.9" height="15.0" fill="rgb(222,17,3)" rx="2" ry="2" />
<text  x="648.83" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator- (281 samples, 0.97%)</title><rect x="924.8" y="677" width="11.5" height="15.0" fill="rgb(248,32,53)" rx="2" ry="2" />
<text  x="927.85" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (7 samples, 0.02%)</title><rect x="437.5" y="613" width="0.2" height="15.0" fill="rgb(222,51,17)" rx="2" ry="2" />
<text  x="440.45" y="623.5" ></text>
</g>
<g >
<title>FileRequestAsync::BindStart (17 samples, 0.06%)</title><rect x="117.2" y="709" width="0.7" height="15.0" fill="rgb(223,14,23)" rx="2" ry="2" />
<text  x="120.20" y="719.5" ></text>
</g>
<g >
<title>Player::Update (25,588 samples, 88.19%)</title><rect x="141.8" y="837" width="1040.6" height="15.0" fill="rgb(241,122,51)" rx="2" ry="2" />
<text  x="144.80" y="847.5" >Player::Update</text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (4 samples, 0.01%)</title><rect x="1167.1" y="693" width="0.2" height="15.0" fill="rgb(212,166,37)" rx="2" ry="2" />
<text  x="1170.15" y="703.5" ></text>
</g>
<g >
<title>main (25,591 samples, 88.20%)</title><rect x="141.8" y="901" width="1040.7" height="15.0" fill="rgb(225,152,41)" rx="2" ry="2" />
<text  x="144.80" y="911.5" >main</text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (7 samples, 0.02%)</title><rect x="978.4" y="693" width="0.3" height="15.0" fill="rgb(205,80,53)" rx="2" ry="2" />
<text  x="981.41" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (9 samples, 0.03%)</title><rect x="392.0" y="629" width="0.4" height="15.0" fill="rgb(239,65,7)" rx="2" ry="2" />
<text  x="394.99" y="639.5" ></text>
</g>
<g >
<title>Graphics::Update (43 samples, 0.15%)</title><rect x="141.8" y="821" width="1.8" height="15.0" fill="rgb(205,120,39)" rx="2" ry="2" />
<text  x="144.84" y="831.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (6 samples, 0.02%)</title><rect x="1029.2" y="677" width="0.3" height="15.0" fill="rgb(208,94,33)" rx="2" ry="2" />
<text  x="1032.24" y="687.5" ></text>
</g>
<g >
<title>memcmp (8 samples, 0.03%)</title><rect x="719.3" y="421" width="0.3" height="15.0" fill="rgb(248,116,30)" rx="2" ry="2" />
<text  x="722.28" y="431.5" ></text>
</g>
<g >
<title>Cache::Picture (145 samples, 0.50%)</title><rect x="117.9" y="661" width="5.9" height="15.0" fill="rgb(248,165,2)" rx="2" ry="2" />
<text  x="120.89" y="671.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (3 samples, 0.01%)</title><rect x="101.9" y="469" width="0.1" height="15.0" fill="rgb(214,22,36)" rx="2" ry="2" />
<text  x="104.87" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (26 samples, 0.09%)</title><rect x="786.7" y="229" width="1.0" height="15.0" fill="rgb(243,29,5)" rx="2" ry="2" />
<text  x="789.66" y="239.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (9 samples, 0.03%)</title><rect x="796.2" y="613" width="0.3" height="15.0" fill="rgb(208,112,13)" rx="2" ry="2" />
<text  x="799.18" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_Rb_tree_iterator (4 samples, 0.01%)</title><rect x="699.7" y="501" width="0.2" height="15.0" fill="rgb(236,60,31)" rx="2" ry="2" />
<text  x="702.72" y="511.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (25 samples, 0.09%)</title><rect x="1165.1" y="725" width="1.0" height="15.0" fill="rgb(207,174,49)" rx="2" ry="2" />
<text  x="1168.11" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (326 samples, 1.12%)</title><rect x="896.2" y="661" width="13.3" height="15.0" fill="rgb(242,226,34)" rx="2" ry="2" />
<text  x="899.22" y="671.5" ></text>
</g>
<g >
<title>Window_Selectable::Update (6 samples, 0.02%)</title><rect x="1179.8" y="773" width="0.2" height="15.0" fill="rgb(252,212,26)" rx="2" ry="2" />
<text  x="1182.79" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_ptr (8 samples, 0.03%)</title><rect x="697.5" y="453" width="0.3" height="15.0" fill="rgb(213,197,5)" rx="2" ry="2" />
<text  x="700.52" y="463.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::~_Head_base (96 samples, 0.33%)</title><rect x="128.3" y="501" width="3.9" height="15.0" fill="rgb(235,54,53)" rx="2" ry="2" />
<text  x="131.26" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (166 samples, 0.57%)</title><rect x="869.3" y="661" width="6.7" height="15.0" fill="rgb(205,163,22)" rx="2" ry="2" />
<text  x="872.30" y="671.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (57 samples, 0.20%)</title><rect x="705.5" y="421" width="2.3" height="15.0" fill="rgb(220,56,19)" rx="2" ry="2" />
<text  x="708.49" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (3 samples, 0.01%)</title><rect x="574.0" y="597" width="0.1" height="15.0" fill="rgb(227,169,20)" rx="2" ry="2" />
<text  x="577.01" y="607.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (4,872 samples, 16.79%)</title><rect x="607.6" y="661" width="198.1" height="15.0" fill="rgb(215,202,36)" rx="2" ry="2" />
<text  x="610.60" y="671.5" >Game_Picture::RequestPict..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (3 samples, 0.01%)</title><rect x="1039.5" y="725" width="0.1" height="15.0" fill="rgb(249,197,40)" rx="2" ry="2" />
<text  x="1042.49" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (15 samples, 0.05%)</title><rect x="834.9" y="677" width="0.6" height="15.0" fill="rgb(234,109,47)" rx="2" ry="2" />
<text  x="837.93" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (51 samples, 0.18%)</title><rect x="98.7" y="485" width="2.1" height="15.0" fill="rgb(245,139,25)" rx="2" ry="2" />
<text  x="101.70" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::get (13 samples, 0.04%)</title><rect x="78.4" y="917" width="0.5" height="15.0" fill="rgb(219,105,4)" rx="2" ry="2" />
<text  x="81.40" y="927.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (19 samples, 0.07%)</title><rect x="819.0" y="629" width="0.7" height="15.0" fill="rgb(236,98,2)" rx="2" ry="2" />
<text  x="821.95" y="639.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (5 samples, 0.02%)</title><rect x="910.1" y="693" width="0.2" height="15.0" fill="rgb(245,51,16)" rx="2" ry="2" />
<text  x="913.09" y="703.5" ></text>
</g>
<g >
<title>Bitmap::ZoomOpacityBlit (6 samples, 0.02%)</title><rect x="142.3" y="709" width="0.3" height="15.0" fill="rgb(233,188,2)" rx="2" ry="2" />
<text  x="145.33" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (19 samples, 0.07%)</title><rect x="600.8" y="645" width="0.7" height="15.0" fill="rgb(217,210,7)" rx="2" ry="2" />
<text  x="603.77" y="655.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::end (9 samples, 0.03%)</title><rect x="1130.3" y="549" width="0.4" height="15.0" fill="rgb(235,185,34)" rx="2" ry="2" />
<text  x="1133.34" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (5 samples, 0.02%)</title><rect x="838.8" y="645" width="0.2" height="15.0" fill="rgb(224,68,14)" rx="2" ry="2" />
<text  x="841.76" y="655.5" ></text>
</g>
<g >
<title>std::__find_if&lt;int const*, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (14 samples, 0.05%)</title><rect x="577.1" y="629" width="0.6" height="15.0" fill="rgb(224,96,10)" rx="2" ry="2" />
<text  x="580.15" y="639.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (65 samples, 0.22%)</title><rect x="723.0" y="469" width="2.7" height="15.0" fill="rgb(205,105,3)" rx="2" ry="2" />
<text  x="726.02" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (13 samples, 0.04%)</title><rect x="686.5" y="501" width="0.5" height="15.0" fill="rgb(219,65,30)" rx="2" ry="2" />
<text  x="689.50" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (11 samples, 0.04%)</title><rect x="104.8" y="581" width="0.4" height="15.0" fill="rgb(206,70,11)" rx="2" ry="2" />
<text  x="107.75" y="591.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (8 samples, 0.03%)</title><rect x="1180.8" y="693" width="0.3" height="15.0" fill="rgb(246,100,2)" rx="2" ry="2" />
<text  x="1183.77" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::capacity (6 samples, 0.02%)</title><rect x="822.8" y="629" width="0.2" height="15.0" fill="rgb(252,160,24)" rx="2" ry="2" />
<text  x="825.78" y="639.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.01%)</title><rect x="1118.6" y="453" width="0.2" height="15.0" fill="rgb(225,12,53)" rx="2" ry="2" />
<text  x="1121.63" y="463.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (63 samples, 0.22%)</title><rect x="613.3" y="533" width="2.6" height="15.0" fill="rgb(207,23,12)" rx="2" ry="2" />
<text  x="616.34" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (558 samples, 1.92%)</title><rect x="311.3" y="693" width="22.7" height="15.0" fill="rgb(205,125,33)" rx="2" ry="2" />
<text  x="314.34" y="703.5" >s..</text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_M_lower_bound (84 samples, 0.29%)</title><rect x="1131.2" y="517" width="3.4" height="15.0" fill="rgb(221,204,46)" rx="2" ry="2" />
<text  x="1134.15" y="527.5" ></text>
</g>
<g >
<title>Game_Map::Update (306 samples, 1.05%)</title><rect x="104.8" y="869" width="12.4" height="15.0" fill="rgb(219,41,4)" rx="2" ry="2" />
<text  x="107.75" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (23 samples, 0.08%)</title><rect x="1016.5" y="725" width="0.9" height="15.0" fill="rgb(213,163,41)" rx="2" ry="2" />
<text  x="1019.51" y="735.5" ></text>
</g>
<g >
<title>SDL_JoystickUpdate_REAL (3 samples, 0.01%)</title><rect x="1180.3" y="773" width="0.1" height="15.0" fill="rgb(239,182,51)" rx="2" ry="2" />
<text  x="1183.28" y="783.5" ></text>
</g>
<g >
<title>_mm_movemask_epi8 (7 samples, 0.02%)</title><rect x="1065.2" y="645" width="0.3" height="15.0" fill="rgb(239,96,43)" rx="2" ry="2" />
<text  x="1068.19" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (6 samples, 0.02%)</title><rect x="795.3" y="549" width="0.2" height="15.0" fill="rgb(236,102,21)" rx="2" ry="2" />
<text  x="798.28" y="559.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (3 samples, 0.01%)</title><rect x="1095.0" y="597" width="0.1" height="15.0" fill="rgb(246,135,38)" rx="2" ry="2" />
<text  x="1098.00" y="607.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::begin (4 samples, 0.01%)</title><rect x="577.7" y="629" width="0.2" height="15.0" fill="rgb(216,62,49)" rx="2" ry="2" />
<text  x="580.71" y="639.5" ></text>
</g>
<g >
<title>__do_page_fault (159 samples, 0.55%)</title><rect x="1089.4" y="661" width="6.5" height="15.0" fill="rgb(212,17,25)" rx="2" ry="2" />
<text  x="1092.39" y="671.5" ></text>
</g>
<g >
<title>Sprite::SetOpacity (4 samples, 0.01%)</title><rect x="1160.7" y="741" width="0.2" height="15.0" fill="rgb(237,215,30)" rx="2" ry="2" />
<text  x="1163.72" y="751.5" ></text>
</g>
<g >
<title>Game_Picture::Show (306 samples, 1.05%)</title><rect x="104.8" y="757" width="12.4" height="15.0" fill="rgb(244,84,17)" rx="2" ry="2" />
<text  x="107.75" y="767.5" ></text>
</g>
<g >
<title>__do_munmap (68 samples, 0.23%)</title><rect x="783.8" y="197" width="2.7" height="15.0" fill="rgb(234,108,32)" rx="2" ry="2" />
<text  x="786.78" y="207.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (21,472 samples, 74.00%)</title><rect x="153.6" y="741" width="873.2" height="15.0" fill="rgb(234,59,48)" rx="2" ry="2" />
<text  x="156.64" y="751.5" >Game_Interpreter::Update</text>
</g>
<g >
<title>strlen@plt (4 samples, 0.01%)</title><rect x="729.2" y="517" width="0.1" height="15.0" fill="rgb(253,208,38)" rx="2" ry="2" />
<text  x="732.16" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt;::__normal_iterator (54 samples, 0.19%)</title><rect x="999.2" y="693" width="2.2" height="15.0" fill="rgb(225,133,30)" rx="2" ry="2" />
<text  x="1002.19" y="703.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (145 samples, 0.50%)</title><rect x="117.9" y="821" width="5.9" height="15.0" fill="rgb(210,161,9)" rx="2" ry="2" />
<text  x="120.89" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (33 samples, 0.11%)</title><rect x="733.5" y="485" width="1.3" height="15.0" fill="rgb(207,212,12)" rx="2" ry="2" />
<text  x="736.47" y="495.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (4 samples, 0.01%)</title><rect x="77.3" y="917" width="0.2" height="15.0" fill="rgb(228,70,42)" rx="2" ry="2" />
<text  x="80.34" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt;::begin (5 samples, 0.02%)</title><rect x="96.3" y="917" width="0.2" height="15.0" fill="rgb(218,207,21)" rx="2" ry="2" />
<text  x="99.30" y="927.5" ></text>
</g>
<g >
<title>sse2_composite_over_8888_8888 (664 samples, 2.29%)</title><rect x="1055.0" y="709" width="27.0" height="15.0" fill="rgb(244,173,20)" rx="2" ry="2" />
<text  x="1058.03" y="719.5" >s..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (17 samples, 0.06%)</title><rect x="105.2" y="581" width="0.7" height="15.0" fill="rgb(216,176,54)" rx="2" ry="2" />
<text  x="108.20" y="591.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (8 samples, 0.03%)</title><rect x="798.9" y="645" width="0.4" height="15.0" fill="rgb(234,67,3)" rx="2" ry="2" />
<text  x="801.94" y="655.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (1,135 samples, 3.91%)</title><rect x="1100.0" y="693" width="46.2" height="15.0" fill="rgb(212,110,14)" rx="2" ry="2" />
<text  x="1103.00" y="703.5" >std:..</text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (8 samples, 0.03%)</title><rect x="1118.1" y="421" width="0.3" height="15.0" fill="rgb(251,85,13)" rx="2" ry="2" />
<text  x="1121.06" y="431.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (20 samples, 0.07%)</title><rect x="134.0" y="485" width="0.8" height="15.0" fill="rgb(233,41,41)" rx="2" ry="2" />
<text  x="136.95" y="495.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (10 samples, 0.03%)</title><rect x="117.5" y="565" width="0.4" height="15.0" fill="rgb(225,47,19)" rx="2" ry="2" />
<text  x="120.48" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;Game_Event*, std::vector&lt;Game_Event, std::allocator&lt;Game_Event&gt; &gt; &gt; (86 samples, 0.30%)</title><rect x="988.9" y="709" width="3.5" height="15.0" fill="rgb(253,69,7)" rx="2" ry="2" />
<text  x="991.86" y="719.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (3 samples, 0.01%)</title><rect x="1118.7" y="437" width="0.1" height="15.0" fill="rgb(227,36,28)" rx="2" ry="2" />
<text  x="1121.67" y="447.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (4 samples, 0.01%)</title><rect x="25.8" y="837" width="0.2" height="15.0" fill="rgb(212,27,45)" rx="2" ry="2" />
<text  x="28.82" y="847.5" ></text>
</g>
<g >
<title>error_entry (45 samples, 0.16%)</title><rect x="1087.5" y="693" width="1.8" height="15.0" fill="rgb(230,150,17)" rx="2" ry="2" />
<text  x="1090.48" y="703.5" ></text>
</g>
<g >
<title>Sprite::GetBitmap (7 samples, 0.02%)</title><rect x="1156.7" y="741" width="0.3" height="15.0" fill="rgb(235,119,47)" rx="2" ry="2" />
<text  x="1159.73" y="751.5" ></text>
</g>
<g >
<title>ret_from_intr (4 samples, 0.01%)</title><rect x="25.8" y="933" width="0.2" height="15.0" fill="rgb(234,201,54)" rx="2" ry="2" />
<text  x="28.82" y="943.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (3 samples, 0.01%)</title><rect x="1167.8" y="709" width="0.1" height="15.0" fill="rgb(232,132,50)" rx="2" ry="2" />
<text  x="1170.80" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (3 samples, 0.01%)</title><rect x="580.2" y="645" width="0.1" height="15.0" fill="rgb(246,8,26)" rx="2" ry="2" />
<text  x="583.20" y="655.5" ></text>
</g>
<g >
<title>do_syscall_64 (23 samples, 0.08%)</title><rect x="1181.2" y="709" width="1.0" height="15.0" fill="rgb(231,19,8)" rx="2" ry="2" />
<text  x="1184.22" y="719.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (71 samples, 0.24%)</title><rect x="20.5" y="709" width="2.9" height="15.0" fill="rgb(236,156,47)" rx="2" ry="2" />
<text  x="23.49" y="719.5" ></text>
</g>
<g >
<title>vfs_read (20 samples, 0.07%)</title><rect x="24.2" y="869" width="0.8" height="15.0" fill="rgb(245,122,13)" rx="2" ry="2" />
<text  x="27.15" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (18 samples, 0.06%)</title><rect x="643.8" y="581" width="0.8" height="15.0" fill="rgb(247,59,33)" rx="2" ry="2" />
<text  x="646.84" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="822.4" y="533" width="0.1" height="15.0" fill="rgb(219,118,4)" rx="2" ry="2" />
<text  x="825.41" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (102 samples, 0.35%)</title><rect x="932.1" y="661" width="4.2" height="15.0" fill="rgb(237,23,40)" rx="2" ry="2" />
<text  x="935.13" y="671.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (144 samples, 0.50%)</title><rect x="117.9" y="565" width="5.8" height="15.0" fill="rgb(222,173,43)" rx="2" ry="2" />
<text  x="120.89" y="575.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="26.2" y="917" width="0.1" height="15.0" fill="rgb(230,84,18)" rx="2" ry="2" />
<text  x="29.23" y="927.5" ></text>
</g>
<g >
<title>Cache::SystemOrBlack (6 samples, 0.02%)</title><rect x="1179.8" y="741" width="0.2" height="15.0" fill="rgb(207,68,29)" rx="2" ry="2" />
<text  x="1182.79" y="751.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (17 samples, 0.06%)</title><rect x="1043.0" y="741" width="0.7" height="15.0" fill="rgb(250,207,47)" rx="2" ry="2" />
<text  x="1045.99" y="751.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_M_head (9 samples, 0.03%)</title><rect x="724.7" y="421" width="0.4" height="15.0" fill="rgb(223,37,36)" rx="2" ry="2" />
<text  x="727.69" y="431.5" ></text>
</g>
<g >
<title>Input::Update (37 samples, 0.13%)</title><rect x="143.6" y="821" width="1.5" height="15.0" fill="rgb(249,146,26)" rx="2" ry="2" />
<text  x="146.59" y="831.5" ></text>
</g>
<g >
<title>std::__pair_get&lt;0ul&gt;::__get&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; (9 samples, 0.03%)</title><rect x="63.5" y="917" width="0.3" height="15.0" fill="rgb(238,108,20)" rx="2" ry="2" />
<text  x="66.48" y="927.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (15 samples, 0.05%)</title><rect x="821.8" y="549" width="0.6" height="15.0" fill="rgb(221,209,19)" rx="2" ry="2" />
<text  x="824.80" y="559.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (17 samples, 0.06%)</title><rect x="579.6" y="677" width="0.7" height="15.0" fill="rgb(224,67,50)" rx="2" ry="2" />
<text  x="582.63" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::end (34 samples, 0.12%)</title><rect x="413.4" y="613" width="1.4" height="15.0" fill="rgb(241,155,20)" rx="2" ry="2" />
<text  x="416.38" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_Rb_tree_iterator (3 samples, 0.01%)</title><rect x="693.4" y="517" width="0.1" height="15.0" fill="rgb(207,53,4)" rx="2" ry="2" />
<text  x="696.37" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator++ (3 samples, 0.01%)</title><rect x="661.1" y="517" width="0.1" height="15.0" fill="rgb(205,43,44)" rx="2" ry="2" />
<text  x="664.08" y="527.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="762.2" y="357" width="0.1" height="15.0" fill="rgb(238,207,31)" rx="2" ry="2" />
<text  x="765.18" y="367.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.03%)</title><rect x="117.5" y="533" width="0.3" height="15.0" fill="rgb(244,229,29)" rx="2" ry="2" />
<text  x="120.48" y="543.5" ></text>
</g>
<g >
<title>psi_task_change (3 samples, 0.01%)</title><rect x="20.3" y="773" width="0.1" height="15.0" fill="rgb(229,97,18)" rx="2" ry="2" />
<text  x="23.29" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (24 samples, 0.08%)</title><rect x="839.0" y="661" width="0.9" height="15.0" fill="rgb(223,26,24)" rx="2" ry="2" />
<text  x="841.96" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (3 samples, 0.01%)</title><rect x="578.4" y="661" width="0.2" height="15.0" fill="rgb(228,181,0)" rx="2" ry="2" />
<text  x="581.45" y="671.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (12 samples, 0.04%)</title><rect x="725.2" y="453" width="0.5" height="15.0" fill="rgb(208,68,32)" rx="2" ry="2" />
<text  x="728.17" y="463.5" ></text>
</g>
<g >
<title>enqueue_task_fair (4 samples, 0.01%)</title><rect x="25.2" y="709" width="0.2" height="15.0" fill="rgb(230,174,18)" rx="2" ry="2" />
<text  x="28.21" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (107 samples, 0.37%)</title><rect x="503.2" y="661" width="4.4" height="15.0" fill="rgb(253,71,7)" rx="2" ry="2" />
<text  x="506.21" y="671.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (97 samples, 0.33%)</title><rect x="105.9" y="549" width="3.9" height="15.0" fill="rgb(230,177,53)" rx="2" ry="2" />
<text  x="108.89" y="559.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (25 samples, 0.09%)</title><rect x="127.2" y="517" width="1.1" height="15.0" fill="rgb(231,95,50)" rx="2" ry="2" />
<text  x="130.24" y="527.5" ></text>
</g>
<g >
<title>zap_page_range (22 samples, 0.08%)</title><rect x="786.8" y="213" width="0.9" height="15.0" fill="rgb(207,226,26)" rx="2" ry="2" />
<text  x="789.83" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::operator== (3 samples, 0.01%)</title><rect x="722.2" y="517" width="0.1" height="15.0" fill="rgb(252,36,1)" rx="2" ry="2" />
<text  x="725.16" y="527.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="137.4" y="901" width="0.1" height="15.0" fill="rgb(229,136,17)" rx="2" ry="2" />
<text  x="140.41" y="911.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;, std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt; &gt;::_Vector_base (7 samples, 0.02%)</title><rect x="1135.5" y="565" width="0.3" height="15.0" fill="rgb(247,9,18)" rx="2" ry="2" />
<text  x="1138.51" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (218 samples, 0.75%)</title><rect x="1136.6" y="613" width="8.9" height="15.0" fill="rgb(250,127,0)" rx="2" ry="2" />
<text  x="1139.60" y="623.5" ></text>
</g>
<g >
<title>Opacity::IsSplit (3 samples, 0.01%)</title><rect x="1053.2" y="709" width="0.2" height="15.0" fill="rgb(218,46,43)" rx="2" ry="2" />
<text  x="1056.24" y="719.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt;*&gt; (5 samples, 0.02%)</title><rect x="790.7" y="389" width="0.2" height="15.0" fill="rgb(251,220,11)" rx="2" ry="2" />
<text  x="793.73" y="399.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (21,776 samples, 75.05%)</title><rect x="145.7" y="773" width="885.5" height="15.0" fill="rgb(209,37,16)" rx="2" ry="2" />
<text  x="148.67" y="783.5" >Game_Map::UpdateCommonEvents</text>
</g>
<g >
<title>rw_verify_area (6 samples, 0.02%)</title><rect x="24.7" y="853" width="0.3" height="15.0" fill="rgb(211,219,22)" rx="2" ry="2" />
<text  x="27.72" y="863.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.03%)</title><rect x="799.4" y="629" width="0.4" height="15.0" fill="rgb(209,77,43)" rx="2" ry="2" />
<text  x="802.39" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_ptr (10 samples, 0.03%)</title><rect x="691.0" y="517" width="0.4" height="15.0" fill="rgb(246,131,47)" rx="2" ry="2" />
<text  x="693.97" y="527.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (31 samples, 0.11%)</title><rect x="1159.5" y="693" width="1.2" height="15.0" fill="rgb(224,79,51)" rx="2" ry="2" />
<text  x="1162.46" y="703.5" ></text>
</g>
<g >
<title>Scene::MainFunction (25,591 samples, 88.20%)</title><rect x="141.8" y="853" width="1040.7" height="15.0" fill="rgb(216,36,16)" rx="2" ry="2" />
<text  x="144.80" y="863.5" >Scene::MainFunction</text>
</g>
<g >
<title>Scene_Map::Update (121 samples, 0.42%)</title><rect x="127.2" y="821" width="5.0" height="15.0" fill="rgb(244,62,39)" rx="2" ry="2" />
<text  x="130.24" y="831.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt;::_M_head (4 samples, 0.01%)</title><rect x="1172.8" y="677" width="0.2" height="15.0" fill="rgb(252,210,38)" rx="2" ry="2" />
<text  x="1175.84" y="687.5" ></text>
</g>
<g >
<title>_pixman_image_fini (699 samples, 2.41%)</title><rect x="761.7" y="389" width="28.4" height="15.0" fill="rgb(244,87,54)" rx="2" ry="2" />
<text  x="764.65" y="399.5" >_p..</text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (24 samples, 0.08%)</title><rect x="456.3" y="661" width="1.0" height="15.0" fill="rgb(248,38,40)" rx="2" ry="2" />
<text  x="459.32" y="671.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (17 samples, 0.06%)</title><rect x="611.4" y="565" width="0.7" height="15.0" fill="rgb(210,123,11)" rx="2" ry="2" />
<text  x="614.43" y="575.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_invoke (149 samples, 0.51%)</title><rect x="98.7" y="645" width="6.1" height="15.0" fill="rgb(224,12,27)" rx="2" ry="2" />
<text  x="101.70" y="655.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (54 samples, 0.19%)</title><rect x="811.1" y="629" width="2.2" height="15.0" fill="rgb(223,17,2)" rx="2" ry="2" />
<text  x="814.06" y="639.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (8 samples, 0.03%)</title><rect x="1036.7" y="725" width="0.4" height="15.0" fill="rgb(223,186,52)" rx="2" ry="2" />
<text  x="1039.73" y="735.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::end (73 samples, 0.25%)</title><rect x="446.6" y="661" width="3.0" height="15.0" fill="rgb(240,91,28)" rx="2" ry="2" />
<text  x="449.60" y="671.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (5 samples, 0.02%)</title><rect x="1180.8" y="677" width="0.2" height="15.0" fill="rgb(205,125,10)" rx="2" ry="2" />
<text  x="1183.77" y="687.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}::operator() (121 samples, 0.42%)</title><rect x="127.2" y="597" width="5.0" height="15.0" fill="rgb(242,115,25)" rx="2" ry="2" />
<text  x="130.24" y="607.5" ></text>
</g>
<g >
<title>operator== (20 samples, 0.07%)</title><rect x="1161.5" y="709" width="0.8" height="15.0" fill="rgb(233,34,48)" rx="2" ry="2" />
<text  x="1164.53" y="719.5" ></text>
</g>
<g >
<title>FileRequestAsync::BindStart (85 samples, 0.29%)</title><rect x="134.0" y="661" width="3.4" height="15.0" fill="rgb(222,48,31)" rx="2" ry="2" />
<text  x="136.95" y="671.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (145 samples, 0.50%)</title><rect x="117.9" y="789" width="5.9" height="15.0" fill="rgb(205,43,6)" rx="2" ry="2" />
<text  x="120.89" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (193 samples, 0.67%)</title><rect x="960.7" y="677" width="7.9" height="15.0" fill="rgb(223,94,20)" rx="2" ry="2" />
<text  x="963.72" y="687.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned (4 samples, 0.01%)</title><rect x="809.5" y="613" width="0.2" height="15.0" fill="rgb(245,106,7)" rx="2" ry="2" />
<text  x="812.52" y="623.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (9 samples, 0.03%)</title><rect x="127.9" y="485" width="0.4" height="15.0" fill="rgb(211,208,7)" rx="2" ry="2" />
<text  x="130.89" y="495.5" ></text>
</g>
<g >
<title>Sprite::Flash (28 samples, 0.10%)</title><rect x="1155.6" y="741" width="1.1" height="15.0" fill="rgb(217,13,39)" rx="2" ry="2" />
<text  x="1158.60" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator* (4 samples, 0.01%)</title><rect x="660.9" y="517" width="0.2" height="15.0" fill="rgb(247,73,10)" rx="2" ry="2" />
<text  x="663.92" y="527.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustMoveParams (3 samples, 0.01%)</title><rect x="589.9" y="677" width="0.1" height="15.0" fill="rgb(239,185,28)" rx="2" ry="2" />
<text  x="592.91" y="687.5" ></text>
</g>
<g >
<title>Game_Picture::Show (85 samples, 0.29%)</title><rect x="134.0" y="693" width="3.4" height="15.0" fill="rgb(218,197,45)" rx="2" ry="2" />
<text  x="136.95" y="703.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Sprite*, std::default_delete&lt;Sprite&gt; &gt; (8 samples, 0.03%)</title><rect x="71.0" y="917" width="0.3" height="15.0" fill="rgb(214,188,15)" rx="2" ry="2" />
<text  x="74.00" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base (12 samples, 0.04%)</title><rect x="635.8" y="581" width="0.5" height="15.0" fill="rgb(242,108,6)" rx="2" ry="2" />
<text  x="638.79" y="591.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (12 samples, 0.04%)</title><rect x="724.6" y="437" width="0.5" height="15.0" fill="rgb(220,3,32)" rx="2" ry="2" />
<text  x="727.56" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (3 samples, 0.01%)</title><rect x="1036.9" y="709" width="0.2" height="15.0" fill="rgb(232,224,16)" rx="2" ry="2" />
<text  x="1039.93" y="719.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.01%)</title><rect x="824.0" y="581" width="0.1" height="15.0" fill="rgb(231,186,21)" rx="2" ry="2" />
<text  x="826.95" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (3 samples, 0.01%)</title><rect x="1037.9" y="693" width="0.1" height="15.0" fill="rgb(247,197,54)" rx="2" ry="2" />
<text  x="1040.90" y="703.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (3,215 samples, 11.08%)</title><rect x="1044.4" y="757" width="130.8" height="15.0" fill="rgb(228,96,46)" rx="2" ry="2" />
<text  x="1047.41" y="767.5" >Game_Picture::Up..</text>
</g>
<g >
<title>std::_Bit_iterator::_Bit_iterator (4 samples, 0.01%)</title><rect x="149.4" y="693" width="0.2" height="15.0" fill="rgb(253,145,17)" rx="2" ry="2" />
<text  x="152.41" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (27 samples, 0.09%)</title><rect x="572.2" y="629" width="1.1" height="15.0" fill="rgb(247,73,35)" rx="2" ry="2" />
<text  x="575.22" y="639.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustId (4 samples, 0.01%)</title><rect x="35.1" y="917" width="0.1" height="15.0" fill="rgb(240,134,39)" rx="2" ry="2" />
<text  x="38.05" y="927.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (14 samples, 0.05%)</title><rect x="742.9" y="501" width="0.5" height="15.0" fill="rgb(216,205,10)" rx="2" ry="2" />
<text  x="745.86" y="511.5" ></text>
</g>
<g >
<title>_pixman_bits_image_init (409 samples, 1.41%)</title><rect x="1105.8" y="549" width="16.7" height="15.0" fill="rgb(238,131,17)" rx="2" ry="2" />
<text  x="1108.82" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator* (9 samples, 0.03%)</title><rect x="610.1" y="613" width="0.4" height="15.0" fill="rgb(211,48,11)" rx="2" ry="2" />
<text  x="613.13" y="623.5" ></text>
</g>
<g >
<title>__libc_recvmsg (4 samples, 0.01%)</title><rect x="1182.2" y="581" width="0.1" height="15.0" fill="rgb(214,162,53)" rx="2" ry="2" />
<text  x="1185.15" y="591.5" ></text>
</g>
<g >
<title>Bitmap::EffectsBlit (17 samples, 0.06%)</title><rect x="141.9" y="725" width="0.7" height="15.0" fill="rgb(217,114,28)" rx="2" ry="2" />
<text  x="144.88" y="735.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_memcmp@plt (3 samples, 0.01%)</title><rect x="728.8" y="501" width="0.1" height="15.0" fill="rgb(216,110,26)" rx="2" ry="2" />
<text  x="731.75" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (46 samples, 0.16%)</title><rect x="459.8" y="677" width="1.9" height="15.0" fill="rgb(211,186,1)" rx="2" ry="2" />
<text  x="462.82" y="687.5" ></text>
</g>
<g >
<title>Graphics::Draw (37 samples, 0.13%)</title><rect x="141.8" y="805" width="1.5" height="15.0" fill="rgb(239,57,20)" rx="2" ry="2" />
<text  x="144.84" y="815.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::size (24 samples, 0.08%)</title><rect x="448.6" y="645" width="1.0" height="15.0" fill="rgb(253,123,0)" rx="2" ry="2" />
<text  x="451.60" y="655.5" ></text>
</g>
<g >
<title>is_opaque (58 samples, 0.20%)</title><rect x="1063.1" y="661" width="2.4" height="15.0" fill="rgb(215,116,2)" rx="2" ry="2" />
<text  x="1066.12" y="671.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (7 samples, 0.02%)</title><rect x="1039.2" y="709" width="0.2" height="15.0" fill="rgb(227,189,33)" rx="2" ry="2" />
<text  x="1042.17" y="719.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::end (5 samples, 0.02%)</title><rect x="685.9" y="517" width="0.2" height="15.0" fill="rgb(215,106,0)" rx="2" ry="2" />
<text  x="688.93" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (180 samples, 0.62%)</title><rect x="18.5" y="933" width="7.3" height="15.0" fill="rgb(215,202,28)" rx="2" ry="2" />
<text  x="21.46" y="943.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (4 samples, 0.01%)</title><rect x="690.1" y="549" width="0.2" height="15.0" fill="rgb(214,30,47)" rx="2" ry="2" />
<text  x="693.12" y="559.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Interpreter_Map*, std::default_delete&lt;Game_Interpreter_Map&gt; &gt; (7 samples, 0.02%)</title><rect x="70.1" y="917" width="0.3" height="15.0" fill="rgb(227,178,50)" rx="2" ry="2" />
<text  x="73.15" y="927.5" ></text>
</g>
<g >
<title>Bitmap::Clear (416 samples, 1.43%)</title><rect x="1082.1" y="741" width="16.9" height="15.0" fill="rgb(223,3,31)" rx="2" ry="2" />
<text  x="1085.11" y="751.5" ></text>
</g>
<g >
<title>page_fault (150 samples, 0.52%)</title><rect x="1183.5" y="933" width="6.1" height="15.0" fill="rgb(244,25,1)" rx="2" ry="2" />
<text  x="1186.53" y="943.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (3 samples, 0.01%)</title><rect x="725.1" y="453" width="0.1" height="15.0" fill="rgb(212,85,17)" rx="2" ry="2" />
<text  x="728.05" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (33 samples, 0.11%)</title><rect x="216.9" y="693" width="1.4" height="15.0" fill="rgb(240,115,50)" rx="2" ry="2" />
<text  x="219.91" y="703.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (10 samples, 0.03%)</title><rect x="117.5" y="581" width="0.4" height="15.0" fill="rgb(254,143,18)" rx="2" ry="2" />
<text  x="120.48" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (17 samples, 0.06%)</title><rect x="437.0" y="629" width="0.7" height="15.0" fill="rgb(208,84,35)" rx="2" ry="2" />
<text  x="440.05" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (41 samples, 0.14%)</title><rect x="811.6" y="581" width="1.6" height="15.0" fill="rgb(225,114,5)" rx="2" ry="2" />
<text  x="814.55" y="591.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (45 samples, 0.16%)</title><rect x="683.6" y="485" width="1.8" height="15.0" fill="rgb(228,57,50)" rx="2" ry="2" />
<text  x="686.57" y="495.5" ></text>
</g>
<g >
<title>Sprite::SetTone (27 samples, 0.09%)</title><rect x="1161.2" y="741" width="1.1" height="15.0" fill="rgb(238,148,6)" rx="2" ry="2" />
<text  x="1164.25" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (18 samples, 0.06%)</title><rect x="49.0" y="917" width="0.7" height="15.0" fill="rgb(215,170,40)" rx="2" ry="2" />
<text  x="52.00" y="927.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (121 samples, 0.42%)</title><rect x="127.2" y="725" width="5.0" height="15.0" fill="rgb(223,4,15)" rx="2" ry="2" />
<text  x="130.24" y="735.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_M_head (13 samples, 0.04%)</title><rect x="707.3" y="389" width="0.5" height="15.0" fill="rgb(227,194,48)" rx="2" ry="2" />
<text  x="710.28" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator bool (22 samples, 0.08%)</title><rect x="1176.1" y="757" width="0.9" height="15.0" fill="rgb(210,6,6)" rx="2" ry="2" />
<text  x="1179.13" y="767.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt;::~allocator (4 samples, 0.01%)</title><rect x="791.3" y="373" width="0.2" height="15.0" fill="rgb(224,162,53)" rx="2" ry="2" />
<text  x="794.34" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (9 samples, 0.03%)</title><rect x="459.0" y="677" width="0.3" height="15.0" fill="rgb(233,48,3)" rx="2" ry="2" />
<text  x="461.97" y="687.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator bool (3 samples, 0.01%)</title><rect x="739.2" y="549" width="0.1" height="15.0" fill="rgb(240,105,21)" rx="2" ry="2" />
<text  x="742.20" y="559.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (93 samples, 0.32%)</title><rect x="1123.3" y="501" width="3.8" height="15.0" fill="rgb(246,216,0)" rx="2" ry="2" />
<text  x="1126.35" y="511.5" ></text>
</g>
<g >
<title>std::_Bit_const_iterator::_Bit_const_iterator (7 samples, 0.02%)</title><rect x="151.6" y="677" width="0.3" height="15.0" fill="rgb(213,48,14)" rx="2" ry="2" />
<text  x="154.64" y="687.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;2ul, bool&gt; (10 samples, 0.03%)</title><rect x="724.0" y="421" width="0.4" height="15.0" fill="rgb(247,194,29)" rx="2" ry="2" />
<text  x="727.04" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (15 samples, 0.05%)</title><rect x="1176.3" y="725" width="0.6" height="15.0" fill="rgb(233,20,49)" rx="2" ry="2" />
<text  x="1179.34" y="735.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}::operator() (85 samples, 0.29%)</title><rect x="134.0" y="613" width="3.4" height="15.0" fill="rgb(207,126,33)" rx="2" ry="2" />
<text  x="136.95" y="623.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (7 samples, 0.02%)</title><rect x="117.2" y="597" width="0.3" height="15.0" fill="rgb(209,74,37)" rx="2" ry="2" />
<text  x="120.20" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_valptr (11 samples, 0.04%)</title><rect x="690.9" y="533" width="0.5" height="15.0" fill="rgb(253,228,17)" rx="2" ry="2" />
<text  x="693.93" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;*, std::vector&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt; &gt; &gt; &gt;::operator++ (7 samples, 0.02%)</title><rect x="1175.5" y="757" width="0.3" height="15.0" fill="rgb(226,63,48)" rx="2" ry="2" />
<text  x="1178.52" y="767.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (4 samples, 0.01%)</title><rect x="1158.7" y="725" width="0.2" height="15.0" fill="rgb(211,184,14)" rx="2" ry="2" />
<text  x="1161.73" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::size (18 samples, 0.06%)</title><rect x="84.5" y="917" width="0.8" height="15.0" fill="rgb(220,149,43)" rx="2" ry="2" />
<text  x="87.54" y="927.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;Bitmap, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (4 samples, 0.01%)</title><rect x="1158.7" y="709" width="0.2" height="15.0" fill="rgb(246,120,43)" rx="2" ry="2" />
<text  x="1161.73" y="719.5" ></text>
</g>
<g >
<title>Window_Base::Update (4 samples, 0.01%)</title><rect x="1179.6" y="741" width="0.2" height="15.0" fill="rgb(207,23,5)" rx="2" ry="2" />
<text  x="1182.63" y="751.5" ></text>
</g>
<g >
<title>operator new (150 samples, 0.52%)</title><rect x="111.1" y="549" width="6.1" height="15.0" fill="rgb(218,142,53)" rx="2" ry="2" />
<text  x="114.10" y="559.5" ></text>
</g>
<g >
<title>__lru_cache_add (3 samples, 0.01%)</title><rect x="1117.8" y="325" width="0.1" height="15.0" fill="rgb(249,120,19)" rx="2" ry="2" />
<text  x="1120.82" y="335.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (6 samples, 0.02%)</title><rect x="1145.1" y="565" width="0.3" height="15.0" fill="rgb(244,210,47)" rx="2" ry="2" />
<text  x="1148.14" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (21 samples, 0.07%)</title><rect x="1176.2" y="741" width="0.8" height="15.0" fill="rgb(205,144,27)" rx="2" ry="2" />
<text  x="1179.17" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__iter_equals_val&lt;int const&gt; (36 samples, 0.12%)</title><rect x="440.4" y="645" width="1.4" height="15.0" fill="rgb(230,222,28)" rx="2" ry="2" />
<text  x="443.38" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (3 samples, 0.01%)</title><rect x="732.6" y="485" width="0.1" height="15.0" fill="rgb(213,227,13)" rx="2" ry="2" />
<text  x="735.62" y="495.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (306 samples, 1.05%)</title><rect x="104.8" y="709" width="12.4" height="15.0" fill="rgb(223,174,42)" rx="2" ry="2" />
<text  x="107.75" y="719.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetSubcommandIndex (55 samples, 0.19%)</title><rect x="571.9" y="661" width="2.3" height="15.0" fill="rgb(246,76,50)" rx="2" ry="2" />
<text  x="574.94" y="671.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (13 samples, 0.04%)</title><rect x="1170.2" y="709" width="0.5" height="15.0" fill="rgb(249,115,50)" rx="2" ry="2" />
<text  x="1173.15" y="719.5" ></text>
</g>
<g >
<title>std::max&lt;int&gt; (7 samples, 0.02%)</title><rect x="559.0" y="677" width="0.3" height="15.0" fill="rgb(233,214,53)" rx="2" ry="2" />
<text  x="562.01" y="687.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (5 samples, 0.02%)</title><rect x="1182.2" y="661" width="0.2" height="15.0" fill="rgb(214,15,45)" rx="2" ry="2" />
<text  x="1185.15" y="671.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (3 samples, 0.01%)</title><rect x="1119.1" y="341" width="0.1" height="15.0" fill="rgb(215,157,29)" rx="2" ry="2" />
<text  x="1122.08" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_M_addr (3 samples, 0.01%)</title><rect x="697.7" y="437" width="0.1" height="15.0" fill="rgb(219,4,53)" rx="2" ry="2" />
<text  x="700.72" y="447.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (13 samples, 0.04%)</title><rect x="641.0" y="565" width="0.5" height="15.0" fill="rgb(253,79,2)" rx="2" ry="2" />
<text  x="643.99" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Game_CommonEvent*, std::vector&lt;Game_CommonEvent, std::allocator&lt;Game_CommonEvent&gt; &gt; &gt;::operator++ (3 samples, 0.01%)</title><rect x="1034.4" y="709" width="0.1" height="15.0" fill="rgb(210,143,48)" rx="2" ry="2" />
<text  x="1037.41" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (55 samples, 0.19%)</title><rect x="550.7" y="661" width="2.2" height="15.0" fill="rgb(248,38,31)" rx="2" ry="2" />
<text  x="553.71" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (24 samples, 0.08%)</title><rect x="59.4" y="917" width="0.9" height="15.0" fill="rgb(230,50,40)" rx="2" ry="2" />
<text  x="62.37" y="927.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (765 samples, 2.64%)</title><rect x="1104.7" y="597" width="31.1" height="15.0" fill="rgb(237,34,10)" rx="2" ry="2" />
<text  x="1107.68" y="607.5" >Bi..</text>
</g>
<g >
<title>Window_Message::Update (12 samples, 0.04%)</title><rect x="1179.5" y="789" width="0.5" height="15.0" fill="rgb(234,18,7)" rx="2" ry="2" />
<text  x="1182.55" y="799.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (3 samples, 0.01%)</title><rect x="410.5" y="613" width="0.1" height="15.0" fill="rgb(228,157,46)" rx="2" ry="2" />
<text  x="413.49" y="623.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (94 samples, 0.32%)</title><rect x="19.8" y="853" width="3.9" height="15.0" fill="rgb(217,18,8)" rx="2" ry="2" />
<text  x="22.84" y="863.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (6 samples, 0.02%)</title><rect x="759.6" y="373" width="0.3" height="15.0" fill="rgb(226,95,16)" rx="2" ry="2" />
<text  x="762.62" y="383.5" ></text>
</g>
<g >
<title>new_sync_write (6 samples, 0.02%)</title><rect x="25.5" y="837" width="0.3" height="15.0" fill="rgb(211,50,33)" rx="2" ry="2" />
<text  x="28.53" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::end (3 samples, 0.01%)</title><rect x="610.9" y="613" width="0.1" height="15.0" fill="rgb(219,116,19)" rx="2" ry="2" />
<text  x="613.86" y="623.5" ></text>
</g>
<g >
<title>std::move&lt;int*&amp;&gt; (3 samples, 0.01%)</title><rect x="805.4" y="581" width="0.1" height="15.0" fill="rgb(221,41,29)" rx="2" ry="2" />
<text  x="808.37" y="591.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt; (4 samples, 0.01%)</title><rect x="835.4" y="629" width="0.1" height="15.0" fill="rgb(250,75,51)" rx="2" ry="2" />
<text  x="838.38" y="639.5" ></text>
</g>
<g >
<title>Sdl2Ui::ProcessEvents (52 samples, 0.18%)</title><rect x="1180.2" y="821" width="2.2" height="15.0" fill="rgb(230,152,15)" rx="2" ry="2" />
<text  x="1183.24" y="831.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (65 samples, 0.22%)</title><rect x="134.8" y="549" width="2.6" height="15.0" fill="rgb(212,18,33)" rx="2" ry="2" />
<text  x="137.77" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_M_lower_bound (97 samples, 0.33%)</title><rect x="105.9" y="597" width="3.9" height="15.0" fill="rgb(253,149,28)" rx="2" ry="2" />
<text  x="108.89" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator++ (52 samples, 0.18%)</title><rect x="672.0" y="501" width="2.1" height="15.0" fill="rgb(236,229,27)" rx="2" ry="2" />
<text  x="675.02" y="511.5" ></text>
</g>
<g >
<title>Game_Screen::GetPicture (49 samples, 0.17%)</title><rect x="818.2" y="677" width="2.0" height="15.0" fill="rgb(234,224,6)" rx="2" ry="2" />
<text  x="821.22" y="687.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (7 samples, 0.02%)</title><rect x="117.2" y="613" width="0.3" height="15.0" fill="rgb(209,79,6)" rx="2" ry="2" />
<text  x="120.20" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (11 samples, 0.04%)</title><rect x="81.6" y="917" width="0.4" height="15.0" fill="rgb(236,115,37)" rx="2" ry="2" />
<text  x="84.57" y="927.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char32_t&gt;::copy (3 samples, 0.01%)</title><rect x="822.5" y="597" width="0.2" height="15.0" fill="rgb(254,20,17)" rx="2" ry="2" />
<text  x="825.53" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::end (8 samples, 0.03%)</title><rect x="693.2" y="533" width="0.3" height="15.0" fill="rgb(250,185,53)" rx="2" ry="2" />
<text  x="696.17" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Interpreter_Map, std::default_delete&lt;Game_Interpreter_Map&gt; &gt;::operator (6 samples, 0.02%)</title><rect x="77.9" y="917" width="0.3" height="15.0" fill="rgb(242,196,49)" rx="2" ry="2" />
<text  x="80.91" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (3 samples, 0.01%)</title><rect x="97.3" y="917" width="0.1" height="15.0" fill="rgb(233,217,52)" rx="2" ry="2" />
<text  x="100.31" y="927.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (13 samples, 0.04%)</title><rect x="29.3" y="917" width="0.5" height="15.0" fill="rgb(253,75,39)" rx="2" ry="2" />
<text  x="32.32" y="927.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Screen, std::default_delete&lt;Game_Screen&gt; &gt;::operator (4 samples, 0.01%)</title><rect x="78.9" y="917" width="0.2" height="15.0" fill="rgb(218,109,41)" rx="2" ry="2" />
<text  x="81.93" y="927.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (7 samples, 0.02%)</title><rect x="617.0" y="581" width="0.3" height="15.0" fill="rgb(209,107,0)" rx="2" ry="2" />
<text  x="620.00" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (3 samples, 0.01%)</title><rect x="838.1" y="677" width="0.1" height="15.0" fill="rgb(231,46,51)" rx="2" ry="2" />
<text  x="841.11" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (14 samples, 0.05%)</title><rect x="710.2" y="405" width="0.6" height="15.0" fill="rgb(224,185,6)" rx="2" ry="2" />
<text  x="713.25" y="415.5" ></text>
</g>
<g >
<title>__libc_start_main (25,591 samples, 88.20%)</title><rect x="141.8" y="917" width="1040.7" height="15.0" fill="rgb(211,96,45)" rx="2" ry="2" />
<text  x="144.80" y="927.5" >__libc_start_main</text>
</g>
<g >
<title>[libasan.so.5.0.0] (150 samples, 0.52%)</title><rect x="111.1" y="533" width="6.1" height="15.0" fill="rgb(207,3,29)" rx="2" ry="2" />
<text  x="114.10" y="543.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::operator= (54 samples, 0.19%)</title><rect x="803.4" y="629" width="2.2" height="15.0" fill="rgb(214,192,52)" rx="2" ry="2" />
<text  x="806.38" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::size (48 samples, 0.17%)</title><rect x="150.0" y="709" width="1.9" height="15.0" fill="rgb(250,181,47)" rx="2" ry="2" />
<text  x="152.98" y="719.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (9 samples, 0.03%)</title><rect x="792.2" y="533" width="0.4" height="15.0" fill="rgb(216,146,16)" rx="2" ry="2" />
<text  x="795.19" y="543.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (754 samples, 2.60%)</title><rect x="659.5" y="549" width="30.6" height="15.0" fill="rgb(241,141,45)" rx="2" ry="2" />
<text  x="662.46" y="559.5" >As..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (11 samples, 0.04%)</title><rect x="101.1" y="517" width="0.4" height="15.0" fill="rgb(237,56,54)" rx="2" ry="2" />
<text  x="104.05" y="527.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (146 samples, 0.50%)</title><rect x="1139.2" y="565" width="5.9" height="15.0" fill="rgb(236,147,44)" rx="2" ry="2" />
<text  x="1142.21" y="575.5" ></text>
</g>
<g >
<title>Bitmap::GetWidth (41 samples, 0.14%)</title><rect x="1147.0" y="741" width="1.6" height="15.0" fill="rgb(250,14,24)" rx="2" ry="2" />
<text  x="1149.97" y="751.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (85 samples, 0.29%)</title><rect x="134.0" y="677" width="3.4" height="15.0" fill="rgb(234,105,9)" rx="2" ry="2" />
<text  x="136.95" y="687.5" ></text>
</g>
<g >
<title>Bitmap::StretchBlit (6 samples, 0.02%)</title><rect x="142.3" y="693" width="0.3" height="15.0" fill="rgb(221,120,46)" rx="2" ry="2" />
<text  x="145.33" y="703.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (11 samples, 0.04%)</title><rect x="104.8" y="597" width="0.4" height="15.0" fill="rgb(246,151,48)" rx="2" ry="2" />
<text  x="107.75" y="607.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandJumpToLabel (150 samples, 0.52%)</title><rect x="580.6" y="693" width="6.1" height="15.0" fill="rgb(212,41,38)" rx="2" ry="2" />
<text  x="583.64" y="703.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (17 samples, 0.06%)</title><rect x="117.2" y="869" width="0.7" height="15.0" fill="rgb(237,18,36)" rx="2" ry="2" />
<text  x="120.20" y="879.5" ></text>
</g>
<g >
<title>do_sys_poll (115 samples, 0.40%)</title><rect x="19.2" y="885" width="4.7" height="15.0" fill="rgb(224,110,15)" rx="2" ry="2" />
<text  x="22.19" y="895.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator* (41 samples, 0.14%)</title><rect x="670.4" y="501" width="1.6" height="15.0" fill="rgb(238,213,8)" rx="2" ry="2" />
<text  x="673.35" y="511.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (3 samples, 0.01%)</title><rect x="824.8" y="549" width="0.1" height="15.0" fill="rgb(229,12,48)" rx="2" ry="2" />
<text  x="827.77" y="559.5" ></text>
</g>
<g >
<title>Game_Interpreter::SetSubcommandIndex (3 samples, 0.01%)</title><rect x="574.2" y="661" width="0.1" height="15.0" fill="rgb(238,201,1)" rx="2" ry="2" />
<text  x="577.18" y="671.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::end (6 samples, 0.02%)</title><rect x="73.2" y="917" width="0.2" height="15.0" fill="rgb(216,164,50)" rx="2" ry="2" />
<text  x="76.20" y="927.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (1,113 samples, 3.84%)</title><rect x="1100.7" y="661" width="45.3" height="15.0" fill="rgb(222,31,43)" rx="2" ry="2" />
<text  x="1103.74" y="671.5" >std:..</text>
</g>
<g >
<title>std::__shared_ptr&lt;Scene, (__gnu_cxx::_Lock_policy)2&gt;::get (7 samples, 0.02%)</title><rect x="1010.3" y="709" width="0.3" height="15.0" fill="rgb(237,155,53)" rx="2" ry="2" />
<text  x="1013.29" y="719.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (46 samples, 0.16%)</title><rect x="1083.1" y="709" width="1.9" height="15.0" fill="rgb(237,226,37)" rx="2" ry="2" />
<text  x="1086.09" y="719.5" ></text>
</g>
<g >
<title>Utils::EncodeUTF (9 samples, 0.03%)</title><rect x="823.1" y="661" width="0.4" height="15.0" fill="rgb(232,83,27)" rx="2" ry="2" />
<text  x="826.14" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;::_Rb_tree_iterator (3 samples, 0.01%)</title><rect x="55.2" y="917" width="0.1" height="15.0" fill="rgb(225,140,47)" rx="2" ry="2" />
<text  x="58.22" y="927.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~tuple (96 samples, 0.33%)</title><rect x="128.3" y="549" width="3.9" height="15.0" fill="rgb(215,122,52)" rx="2" ry="2" />
<text  x="131.26" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.02%)</title><rect x="783.5" y="245" width="0.2" height="15.0" fill="rgb(217,154,0)" rx="2" ry="2" />
<text  x="786.53" y="255.5" ></text>
</g>
<g >
<title>Game_Map::UpdateForegroundEvents (42 samples, 0.14%)</title><rect x="1031.2" y="773" width="1.7" height="15.0" fill="rgb(248,2,50)" rx="2" ry="2" />
<text  x="1034.24" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h2 (4 samples, 0.01%)</title><rect x="643.8" y="565" width="0.2" height="15.0" fill="rgb(238,190,3)" rx="2" ry="2" />
<text  x="646.84" y="575.5" ></text>
</g>
<g >
<title>Scene_Map::Update (17 samples, 0.06%)</title><rect x="117.2" y="885" width="0.7" height="15.0" fill="rgb(221,222,20)" rx="2" ry="2" />
<text  x="120.20" y="895.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::_M_lower_bound (647 samples, 2.23%)</title><rect x="694.7" y="517" width="26.3" height="15.0" fill="rgb(245,77,47)" rx="2" ry="2" />
<text  x="697.71" y="527.5" >s..</text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (4 samples, 0.01%)</title><rect x="586.4" y="677" width="0.2" height="15.0" fill="rgb(251,80,45)" rx="2" ry="2" />
<text  x="589.42" y="687.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, Transition*, std::default_delete&lt;Transition&gt; &gt; (11 samples, 0.04%)</title><rect x="797.8" y="565" width="0.5" height="15.0" fill="rgb(234,84,40)" rx="2" ry="2" />
<text  x="800.81" y="575.5" ></text>
</g>
<g >
<title>std::stable_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, bool (*)(Drawable const*, Drawable const*)&gt; (4 samples, 0.01%)</title><rect x="142.7" y="773" width="0.2" height="15.0" fill="rgb(235,9,48)" rx="2" ry="2" />
<text  x="145.74" y="783.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (97 samples, 0.33%)</title><rect x="105.9" y="565" width="3.9" height="15.0" fill="rgb(215,129,47)" rx="2" ry="2" />
<text  x="108.89" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;::_M_valptr (12 samples, 0.04%)</title><rect x="1132.6" y="469" width="0.5" height="15.0" fill="rgb(221,175,8)" rx="2" ry="2" />
<text  x="1135.62" y="479.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (11 samples, 0.04%)</title><rect x="817.1" y="597" width="0.5" height="15.0" fill="rgb(240,212,36)" rx="2" ry="2" />
<text  x="820.12" y="607.5" ></text>
</g>
<g >
<title>ksys_write (20 samples, 0.07%)</title><rect x="25.0" y="885" width="0.8" height="15.0" fill="rgb(234,127,32)" rx="2" ry="2" />
<text  x="27.97" y="895.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (8 samples, 0.03%)</title><rect x="92.3" y="917" width="0.3" height="15.0" fill="rgb(226,103,32)" rx="2" ry="2" />
<text  x="95.31" y="927.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (8 samples, 0.03%)</title><rect x="808.2" y="645" width="0.3" height="15.0" fill="rgb(240,120,1)" rx="2" ry="2" />
<text  x="811.18" y="655.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate (221 samples, 0.76%)</title><rect x="1136.5" y="629" width="9.0" height="15.0" fill="rgb(221,187,22)" rx="2" ry="2" />
<text  x="1139.48" y="639.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (6 samples, 0.02%)</title><rect x="735.8" y="533" width="0.2" height="15.0" fill="rgb(248,22,40)" rx="2" ry="2" />
<text  x="738.79" y="543.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (11 samples, 0.04%)</title><rect x="104.8" y="501" width="0.4" height="15.0" fill="rgb(249,224,50)" rx="2" ry="2" />
<text  x="107.75" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::base (5 samples, 0.02%)</title><rect x="883.3" y="661" width="0.2" height="15.0" fill="rgb(247,143,39)" rx="2" ry="2" />
<text  x="886.29" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (15 samples, 0.05%)</title><rect x="110.5" y="533" width="0.6" height="15.0" fill="rgb(220,16,32)" rx="2" ry="2" />
<text  x="113.49" y="543.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::begin (35 samples, 0.12%)</title><rect x="447.2" y="645" width="1.4" height="15.0" fill="rgb(227,131,0)" rx="2" ry="2" />
<text  x="450.17" y="655.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (17 samples, 0.06%)</title><rect x="117.2" y="645" width="0.7" height="15.0" fill="rgb(224,94,28)" rx="2" ry="2" />
<text  x="120.20" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator bool (11 samples, 0.04%)</title><rect x="794.8" y="565" width="0.4" height="15.0" fill="rgb(238,18,11)" rx="2" ry="2" />
<text  x="797.80" y="575.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (13,446 samples, 46.34%)</title><rect x="367.9" y="709" width="546.8" height="15.0" fill="rgb(251,178,42)" rx="2" ry="2" />
<text  x="370.87" y="719.5" >Game_Interpreter::ExecuteCommand</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (24 samples, 0.08%)</title><rect x="101.1" y="565" width="0.9" height="15.0" fill="rgb(210,118,23)" rx="2" ry="2" />
<text  x="104.05" y="575.5" ></text>
</g>
<g >
<title>sse2_combine_over_u (7 samples, 0.02%)</title><rect x="142.0" y="661" width="0.2" height="15.0" fill="rgb(219,67,26)" rx="2" ry="2" />
<text  x="144.97" y="671.5" ></text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (43 samples, 0.15%)</title><rect x="1151.0" y="741" width="1.8" height="15.0" fill="rgb(229,92,6)" rx="2" ry="2" />
<text  x="1154.04" y="751.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (64 samples, 0.22%)</title><rect x="1095.9" y="693" width="2.6" height="15.0" fill="rgb(240,160,31)" rx="2" ry="2" />
<text  x="1098.90" y="703.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (8 samples, 0.03%)</title><rect x="783.2" y="261" width="0.3" height="15.0" fill="rgb(223,17,17)" rx="2" ry="2" />
<text  x="786.21" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_create (7 samples, 0.02%)</title><rect x="823.6" y="581" width="0.3" height="15.0" fill="rgb(213,177,19)" rx="2" ry="2" />
<text  x="826.63" y="591.5" ></text>
</g>
<g >
<title>X11_Pending (16 samples, 0.06%)</title><rect x="1180.5" y="757" width="0.6" height="15.0" fill="rgb(214,184,22)" rx="2" ry="2" />
<text  x="1183.48" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (13 samples, 0.04%)</title><rect x="661.6" y="501" width="0.5" height="15.0" fill="rgb(231,7,53)" rx="2" ry="2" />
<text  x="664.61" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt;::operator()&lt;int const*&gt; (52 samples, 0.18%)</title><rect x="444.2" y="613" width="2.2" height="15.0" fill="rgb(236,125,1)" rx="2" ry="2" />
<text  x="447.24" y="623.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, Game_Picture*, std::default_delete&lt;Game_Picture&gt; &gt; (7 samples, 0.02%)</title><rect x="1043.4" y="693" width="0.3" height="15.0" fill="rgb(218,150,30)" rx="2" ry="2" />
<text  x="1046.39" y="703.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (11 samples, 0.04%)</title><rect x="822.0" y="533" width="0.4" height="15.0" fill="rgb(214,189,36)" rx="2" ry="2" />
<text  x="824.96" y="543.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (101 samples, 0.35%)</title><rect x="1130.7" y="549" width="4.2" height="15.0" fill="rgb(241,187,46)" rx="2" ry="2" />
<text  x="1133.75" y="559.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (3 samples, 0.01%)</title><rect x="65.9" y="917" width="0.1" height="15.0" fill="rgb(210,210,20)" rx="2" ry="2" />
<text  x="68.88" y="927.5" ></text>
</g>
<g >
<title>default_wake_function (9 samples, 0.03%)</title><rect x="25.2" y="773" width="0.3" height="15.0" fill="rgb(227,29,11)" rx="2" ry="2" />
<text  x="28.17" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (19 samples, 0.07%)</title><rect x="203.3" y="709" width="0.7" height="15.0" fill="rgb(230,176,45)" rx="2" ry="2" />
<text  x="206.25" y="719.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (17 samples, 0.06%)</title><rect x="758.9" y="341" width="0.7" height="15.0" fill="rgb(237,94,47)" rx="2" ry="2" />
<text  x="761.89" y="351.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (15,930 samples, 54.90%)</title><rect x="335.7" y="725" width="647.8" height="15.0" fill="rgb(235,176,30)" rx="2" ry="2" />
<text  x="338.70" y="735.5" >Game_Interpreter_Map::ExecuteCommand</text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt; (287 samples, 0.99%)</title><rect x="279.9" y="693" width="11.6" height="15.0" fill="rgb(237,0,46)" rx="2" ry="2" />
<text  x="282.87" y="703.5" ></text>
</g>
<g >
<title>Bitmap::pixels (12 samples, 0.04%)</title><rect x="1082.4" y="725" width="0.5" height="15.0" fill="rgb(250,16,24)" rx="2" ry="2" />
<text  x="1085.39" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h1 (4 samples, 0.01%)</title><rect x="60.6" y="917" width="0.2" height="15.0" fill="rgb(214,10,10)" rx="2" ry="2" />
<text  x="63.59" y="927.5" ></text>
</g>
<g >
<title>operator delete (144 samples, 0.50%)</title><rect x="679.6" y="533" width="5.9" height="15.0" fill="rgb(248,5,54)" rx="2" ry="2" />
<text  x="682.63" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::begin (5 samples, 0.02%)</title><rect x="335.1" y="693" width="0.2" height="15.0" fill="rgb(206,184,52)" rx="2" ry="2" />
<text  x="338.05" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame const*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (3 samples, 0.01%)</title><rect x="572.8" y="597" width="0.2" height="15.0" fill="rgb(214,198,31)" rx="2" ry="2" />
<text  x="575.83" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::back (94 samples, 0.32%)</title><rect x="432.7" y="645" width="3.8" height="15.0" fill="rgb(225,227,4)" rx="2" ry="2" />
<text  x="435.65" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (128 samples, 0.44%)</title><rect x="105.9" y="613" width="5.2" height="15.0" fill="rgb(238,86,1)" rx="2" ry="2" />
<text  x="108.89" y="623.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (145 samples, 0.50%)</title><rect x="117.9" y="805" width="5.9" height="15.0" fill="rgb(225,19,34)" rx="2" ry="2" />
<text  x="120.89" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (7 samples, 0.02%)</title><rect x="576.7" y="629" width="0.3" height="15.0" fill="rgb(208,205,5)" rx="2" ry="2" />
<text  x="579.74" y="639.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingBackgroundExecution (147 samples, 0.51%)</title><rect x="146.3" y="741" width="6.0" height="15.0" fill="rgb(239,85,52)" rx="2" ry="2" />
<text  x="149.32" y="751.5" ></text>
</g>
<g >
<title>Player::Update (149 samples, 0.51%)</title><rect x="98.7" y="869" width="6.1" height="15.0" fill="rgb(225,194,42)" rx="2" ry="2" />
<text  x="101.70" y="879.5" ></text>
</g>
<g >
<title>__GI___poll (5 samples, 0.02%)</title><rect x="1180.5" y="693" width="0.2" height="15.0" fill="rgb(219,133,17)" rx="2" ry="2" />
<text  x="1183.48" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (4 samples, 0.01%)</title><rect x="661.2" y="517" width="0.2" height="15.0" fill="rgb(223,185,40)" rx="2" ry="2" />
<text  x="664.20" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare@plt (8 samples, 0.03%)</title><rect x="719.8" y="437" width="0.3" height="15.0" fill="rgb(215,78,4)" rx="2" ry="2" />
<text  x="722.76" y="447.5" ></text>
</g>
<g >
<title>negate_2x128 (10 samples, 0.03%)</title><rect x="1078.5" y="645" width="0.4" height="15.0" fill="rgb(251,155,24)" rx="2" ry="2" />
<text  x="1081.49" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (14 samples, 0.05%)</title><rect x="1170.1" y="725" width="0.6" height="15.0" fill="rgb(237,45,29)" rx="2" ry="2" />
<text  x="1173.11" y="735.5" ></text>
</g>
<g >
<title>memcmp (4 samples, 0.01%)</title><rect x="725.5" y="421" width="0.2" height="15.0" fill="rgb(248,79,3)" rx="2" ry="2" />
<text  x="728.50" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::__normal_iterator (10 samples, 0.03%)</title><rect x="390.7" y="629" width="0.4" height="15.0" fill="rgb(228,123,21)" rx="2" ry="2" />
<text  x="393.69" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (5 samples, 0.02%)</title><rect x="1164.3" y="741" width="0.2" height="15.0" fill="rgb(252,169,44)" rx="2" ry="2" />
<text  x="1167.30" y="751.5" ></text>
</g>
<g >
<title>std::swap&lt;Bitmap*&gt; (6 samples, 0.02%)</title><rect x="1167.3" y="693" width="0.3" height="15.0" fill="rgb(221,35,0)" rx="2" ry="2" />
<text  x="1170.31" y="703.5" ></text>
</g>
<g >
<title>page_fault (8 samples, 0.03%)</title><rect x="1118.9" y="469" width="0.3" height="15.0" fill="rgb(232,137,4)" rx="2" ry="2" />
<text  x="1121.87" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::push_back (4 samples, 0.01%)</title><rect x="823.3" y="645" width="0.2" height="15.0" fill="rgb(241,127,18)" rx="2" ry="2" />
<text  x="826.34" y="655.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Set (1,021 samples, 3.52%)</title><rect x="516.5" y="677" width="41.5" height="15.0" fill="rgb(239,201,48)" rx="2" ry="2" />
<text  x="519.47" y="687.5" >Gam..</text>
</g>
<g >
<title>[libasan.so.5.0.0] (49 samples, 0.17%)</title><rect x="750.2" y="373" width="2.0" height="15.0" fill="rgb(210,153,13)" rx="2" ry="2" />
<text  x="753.18" y="383.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (58 samples, 0.20%)</title><rect x="98.7" y="565" width="2.4" height="15.0" fill="rgb(242,3,22)" rx="2" ry="2" />
<text  x="101.70" y="575.5" ></text>
</g>
<g >
<title>Player::MainLoop (85 samples, 0.29%)</title><rect x="134.0" y="885" width="3.4" height="15.0" fill="rgb(208,136,8)" rx="2" ry="2" />
<text  x="136.95" y="895.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandElseBranch (172 samples, 0.59%)</title><rect x="571.6" y="693" width="7.0" height="15.0" fill="rgb(252,98,43)" rx="2" ry="2" />
<text  x="574.57" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream (5 samples, 0.02%)</title><rect x="824.4" y="661" width="0.2" height="15.0" fill="rgb(247,201,19)" rx="2" ry="2" />
<text  x="827.44" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator()&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;&amp;&gt; (6 samples, 0.02%)</title><rect x="688.1" y="437" width="0.3" height="15.0" fill="rgb(247,98,26)" rx="2" ry="2" />
<text  x="691.13" y="447.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (40 samples, 0.14%)</title><rect x="90.3" y="917" width="1.6" height="15.0" fill="rgb(250,84,39)" rx="2" ry="2" />
<text  x="93.28" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (144 samples, 0.50%)</title><rect x="117.9" y="517" width="5.8" height="15.0" fill="rgb(244,217,32)" rx="2" ry="2" />
<text  x="120.89" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;RPG::SaveEventExecFrame*, std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt; &gt;::operator* (3 samples, 0.01%)</title><rect x="843.2" y="677" width="0.2" height="15.0" fill="rgb(218,71,28)" rx="2" ry="2" />
<text  x="846.23" y="687.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (5 samples, 0.02%)</title><rect x="726.6" y="469" width="0.2" height="15.0" fill="rgb(227,191,33)" rx="2" ry="2" />
<text  x="729.60" y="479.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (114 samples, 0.39%)</title><rect x="722.8" y="485" width="4.7" height="15.0" fill="rgb(240,6,0)" rx="2" ry="2" />
<text  x="725.81" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::operator[] (22 samples, 0.08%)</title><rect x="149.1" y="709" width="0.9" height="15.0" fill="rgb(235,43,28)" rx="2" ry="2" />
<text  x="152.08" y="719.5" ></text>
</g>
<g >
<title>do_syscall_64 (22 samples, 0.08%)</title><rect x="1115.4" y="405" width="0.9" height="15.0" fill="rgb(253,74,11)" rx="2" ry="2" />
<text  x="1118.42" y="415.5" ></text>
</g>
<g >
<title>[libasan.so.5.0.0] (4 samples, 0.01%)</title><rect x="1180.0" y="789" width="0.2" height="15.0" fill="rgb(207,51,52)" rx="2" ry="2" />
<text  x="1183.04" y="799.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, Game_Screen*, std::default_delete&lt;Game_Screen&gt; &gt;::_M_head (4 samples, 0.01%)</title><rect x="56.7" y="917" width="0.1" height="15.0" fill="rgb(238,70,38)" rx="2" ry="2" />
<text  x="59.69" y="927.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (5 samples, 0.02%)</title><rect x="833.1" y="613" width="0.2" height="15.0" fill="rgb(221,173,42)" rx="2" ry="2" />
<text  x="836.06" y="623.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (5 samples, 0.02%)</title><rect x="794.5" y="565" width="0.2" height="15.0" fill="rgb(228,142,33)" rx="2" ry="2" />
<text  x="797.47" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (7 samples, 0.02%)</title><rect x="85.4" y="917" width="0.3" height="15.0" fill="rgb(238,60,10)" rx="2" ry="2" />
<text  x="88.44" y="927.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~tuple (65 samples, 0.22%)</title><rect x="134.8" y="565" width="2.6" height="15.0" fill="rgb(253,66,30)" rx="2" ry="2" />
<text  x="137.77" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (45 samples, 0.16%)</title><rect x="811.4" y="597" width="1.9" height="15.0" fill="rgb(247,12,39)" rx="2" ry="2" />
<text  x="814.43" y="607.5" ></text>
</g>
<g >
<title>__GI___pthread_getspecific (3 samples, 0.01%)</title><rect x="1054.6" y="661" width="0.1" height="15.0" fill="rgb(241,55,52)" rx="2" ry="2" />
<text  x="1057.62" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Switch, std::allocator&lt;RPG::Switch&gt; &gt;::size (5 samples, 0.02%)</title><rect x="148.9" y="709" width="0.2" height="15.0" fill="rgb(223,225,15)" rx="2" ry="2" />
<text  x="151.88" y="719.5" ></text>
</g>
<g >
<title>Scene_Map::Update (85 samples, 0.29%)</title><rect x="134.0" y="837" width="3.4" height="15.0" fill="rgb(208,28,18)" rx="2" ry="2" />
<text  x="136.95" y="847.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::vector&lt;Bitmap::TileOpacity, std::allocator&lt;Bitmap::TileOpacity&gt; &gt; &gt;::~allocator (3 samples, 0.01%)</title><rect x="791.5" y="389" width="0.1" height="15.0" fill="rgb(223,23,16)" rx="2" ry="2" />
<text  x="794.50" y="399.5" ></text>
</g>
</g>
</svg>
