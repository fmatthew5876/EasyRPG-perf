<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="774" onload="init(evt)" viewBox="0 0 1200 774" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="774.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="757" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="757" > </text>
<g id="frames">
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="939.8" y="437" width="0.1" height="15.0" fill="rgb(205,190,37)" rx="2" ry="2" />
<text  x="942.77" y="447.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="769.0" y="229" width="0.1" height="15.0" fill="rgb(211,92,27)" rx="2" ry="2" />
<text  x="771.96" y="239.5" ></text>
</g>
<g >
<title>__libc_recvmsg (3 samples, 0.04%)</title><rect x="990.2" y="373" width="0.4" height="15.0" fill="rgb(220,4,24)" rx="2" ry="2" />
<text  x="993.23" y="383.5" ></text>
</g>
<g >
<title>std::stable_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, bool (*)(Drawable const*, Drawable const*)&gt; (1 samples, 0.01%)</title><rect x="139.5" y="533" width="0.1" height="15.0" fill="rgb(229,175,27)" rx="2" ry="2" />
<text  x="142.46" y="543.5" ></text>
</g>
<g >
<title>Sprite::SetZ (1 samples, 0.01%)</title><rect x="987.9" y="501" width="0.1" height="15.0" fill="rgb(215,209,28)" rx="2" ry="2" />
<text  x="990.89" y="511.5" ></text>
</g>
<g >
<title>update_sd_lb_stats (1 samples, 0.01%)</title><rect x="37.4" y="501" width="0.2" height="15.0" fill="rgb(243,204,4)" rx="2" ry="2" />
<text  x="40.44" y="511.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (27 samples, 0.32%)</title><rect x="67.9" y="661" width="3.7" height="15.0" fill="rgb(245,156,46)" rx="2" ry="2" />
<text  x="70.90" y="671.5" ></text>
</g>
<g >
<title>pixman_transform_point_31_16 (31 samples, 0.36%)</title><rect x="316.2" y="389" width="4.3" height="15.0" fill="rgb(231,8,26)" rx="2" ry="2" />
<text  x="319.20" y="399.5" ></text>
</g>
<g >
<title>Window::GetZ (1 samples, 0.01%)</title><rect x="338.9" y="533" width="0.2" height="15.0" fill="rgb(207,107,43)" rx="2" ry="2" />
<text  x="341.95" y="543.5" ></text>
</g>
<g >
<title>FpsOverlay::Update (1 samples, 0.01%)</title><rect x="351.2" y="549" width="0.2" height="15.0" fill="rgb(224,98,16)" rx="2" ry="2" />
<text  x="354.22" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (1 samples, 0.01%)</title><rect x="833.3" y="357" width="0.2" height="15.0" fill="rgb(244,101,41)" rx="2" ry="2" />
<text  x="836.34" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (5 samples, 0.06%)</title><rect x="21.4" y="693" width="0.7" height="15.0" fill="rgb(215,118,52)" rx="2" ry="2" />
<text  x="24.44" y="703.5" ></text>
</g>
<g >
<title>tcache_put (2 samples, 0.02%)</title><rect x="854.3" y="245" width="0.3" height="15.0" fill="rgb(230,113,5)" rx="2" ry="2" />
<text  x="857.29" y="255.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.01%)</title><rect x="581.0" y="261" width="0.2" height="15.0" fill="rgb(254,51,11)" rx="2" ry="2" />
<text  x="584.04" y="271.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="549.1" y="421" width="0.2" height="15.0" fill="rgb(237,112,51)" rx="2" ry="2" />
<text  x="552.06" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (12 samples, 0.14%)</title><rect x="873.2" y="453" width="1.6" height="15.0" fill="rgb(219,191,15)" rx="2" ry="2" />
<text  x="876.18" y="463.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash (20 samples, 0.23%)</title><rect x="593.7" y="341" width="2.8" height="15.0" fill="rgb(212,186,20)" rx="2" ry="2" />
<text  x="596.73" y="351.5" ></text>
</g>
<g >
<title>std::_Temporary_buffer&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable*&gt;::~_Temporary_buffer (1 samples, 0.01%)</title><rect x="341.8" y="501" width="0.2" height="15.0" fill="rgb(240,24,19)" rx="2" ry="2" />
<text  x="344.84" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="988.0" y="453" width="0.2" height="15.0" fill="rgb(237,190,47)" rx="2" ry="2" />
<text  x="991.03" y="463.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (1 samples, 0.01%)</title><rect x="112.4" y="677" width="0.2" height="15.0" fill="rgb(210,212,47)" rx="2" ry="2" />
<text  x="115.43" y="687.5" ></text>
</g>
<g >
<title>_nv006754rm (1 samples, 0.01%)</title><rect x="540.2" y="453" width="0.2" height="15.0" fill="rgb(237,46,2)" rx="2" ry="2" />
<text  x="543.23" y="463.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="935.9" y="453" width="0.1" height="15.0" fill="rgb(234,56,15)" rx="2" ry="2" />
<text  x="938.91" y="463.5" ></text>
</g>
<g >
<title>SDL_IOReady (1 samples, 0.01%)</title><rect x="993.4" y="469" width="0.1" height="15.0" fill="rgb(210,32,2)" rx="2" ry="2" />
<text  x="996.40" y="479.5" ></text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.01%)</title><rect x="886.3" y="453" width="0.1" height="15.0" fill="rgb(234,138,28)" rx="2" ry="2" />
<text  x="889.28" y="463.5" ></text>
</g>
<g >
<title>deactivate_task (7 samples, 0.08%)</title><rect x="26.4" y="549" width="1.0" height="15.0" fill="rgb(237,6,13)" rx="2" ry="2" />
<text  x="29.41" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="963.3" y="469" width="0.2" height="15.0" fill="rgb(224,53,42)" rx="2" ry="2" />
<text  x="966.35" y="479.5" ></text>
</g>
<g >
<title>apparmor_file_permission (2 samples, 0.02%)</title><rect x="40.3" y="581" width="0.3" height="15.0" fill="rgb(228,114,40)" rx="2" ry="2" />
<text  x="43.33" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_compare (4 samples, 0.05%)</title><rect x="629.7" y="213" width="0.6" height="15.0" fill="rgb(209,75,19)" rx="2" ry="2" />
<text  x="632.71" y="223.5" ></text>
</g>
<g >
<title>std::ostream::_M_insert&lt;long&gt; (1 samples, 0.01%)</title><rect x="884.9" y="453" width="0.1" height="15.0" fill="rgb(243,80,45)" rx="2" ry="2" />
<text  x="887.90" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (2 samples, 0.02%)</title><rect x="637.8" y="245" width="0.3" height="15.0" fill="rgb(235,90,39)" rx="2" ry="2" />
<text  x="640.84" y="255.5" ></text>
</g>
<g >
<title>pixman_image_get_width (1 samples, 0.01%)</title><rect x="988.9" y="421" width="0.1" height="15.0" fill="rgb(233,60,17)" rx="2" ry="2" />
<text  x="991.85" y="431.5" ></text>
</g>
<g >
<title>FpsOverlay::AddFrame (1 samples, 0.01%)</title><rect x="139.3" y="549" width="0.2" height="15.0" fill="rgb(249,178,52)" rx="2" ry="2" />
<text  x="142.32" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.01%)</title><rect x="561.9" y="437" width="0.1" height="15.0" fill="rgb(232,170,33)" rx="2" ry="2" />
<text  x="564.88" y="447.5" ></text>
</g>
<g >
<title>std::__merge_sort_loop&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (15 samples, 0.18%)</title><rect x="348.3" y="469" width="2.1" height="15.0" fill="rgb(254,52,0)" rx="2" ry="2" />
<text  x="351.32" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (1 samples, 0.01%)</title><rect x="72.7" y="629" width="0.2" height="15.0" fill="rgb(208,48,31)" rx="2" ry="2" />
<text  x="75.73" y="639.5" ></text>
</g>
<g >
<title>_copy_to_user (1 samples, 0.01%)</title><rect x="378.2" y="453" width="0.2" height="15.0" fill="rgb(223,1,22)" rx="2" ry="2" />
<text  x="381.24" y="463.5" ></text>
</g>
<g >
<title>ktime_get_raw_ts64 (9 samples, 0.11%)</title><rect x="375.5" y="453" width="1.2" height="15.0" fill="rgb(223,211,14)" rx="2" ry="2" />
<text  x="378.48" y="463.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (4 samples, 0.05%)</title><rect x="856.8" y="389" width="0.5" height="15.0" fill="rgb(224,15,31)" rx="2" ry="2" />
<text  x="859.78" y="399.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (2 samples, 0.02%)</title><rect x="996.2" y="485" width="0.2" height="15.0" fill="rgb(235,13,31)" rx="2" ry="2" />
<text  x="999.16" y="495.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::end (1 samples, 0.01%)</title><rect x="449.0" y="453" width="0.1" height="15.0" fill="rgb(225,29,16)" rx="2" ry="2" />
<text  x="451.97" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_M_lower_bound (17 samples, 0.20%)</title><rect x="802.9" y="149" width="2.3" height="15.0" fill="rgb(206,4,45)" rx="2" ry="2" />
<text  x="805.87" y="159.5" ></text>
</g>
<g >
<title>Player::MainLoop (1 samples, 0.01%)</title><rect x="47.6" y="677" width="0.2" height="15.0" fill="rgb(221,221,40)" rx="2" ry="2" />
<text  x="50.64" y="687.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (2 samples, 0.02%)</title><rect x="989.5" y="421" width="0.3" height="15.0" fill="rgb(214,174,31)" rx="2" ry="2" />
<text  x="992.54" y="431.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (2 samples, 0.02%)</title><rect x="964.3" y="469" width="0.3" height="15.0" fill="rgb(217,11,3)" rx="2" ry="2" />
<text  x="967.31" y="479.5" ></text>
</g>
<g >
<title>Graphics::IsTransitionPending (2 samples, 0.02%)</title><rect x="137.9" y="581" width="0.3" height="15.0" fill="rgb(210,69,43)" rx="2" ry="2" />
<text  x="140.94" y="591.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (67 samples, 0.78%)</title><rect x="342.0" y="501" width="9.2" height="15.0" fill="rgb(217,68,17)" rx="2" ry="2" />
<text  x="344.98" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (2 samples, 0.02%)</title><rect x="72.0" y="629" width="0.3" height="15.0" fill="rgb(219,143,30)" rx="2" ry="2" />
<text  x="75.04" y="639.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (71 samples, 0.83%)</title><rect x="575.7" y="421" width="9.8" height="15.0" fill="rgb(217,14,8)" rx="2" ry="2" />
<text  x="578.67" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1 samples, 0.01%)</title><rect x="886.0" y="373" width="0.1" height="15.0" fill="rgb(246,72,0)" rx="2" ry="2" />
<text  x="889.00" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::CommonEvent, std::allocator&lt;RPG::CommonEvent&gt; &gt;::size (2 samples, 0.02%)</title><rect x="957.8" y="485" width="0.3" height="15.0" fill="rgb(247,96,9)" rx="2" ry="2" />
<text  x="960.83" y="495.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (22 samples, 0.26%)</title><rect x="68.5" y="645" width="3.0" height="15.0" fill="rgb(252,125,30)" rx="2" ry="2" />
<text  x="71.46" y="655.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.01%)</title><rect x="861.3" y="309" width="0.2" height="15.0" fill="rgb(247,137,1)" rx="2" ry="2" />
<text  x="864.33" y="319.5" ></text>
</g>
<g >
<title>Player::IsRPG2k (1 samples, 0.01%)</title><rect x="47.5" y="677" width="0.1" height="15.0" fill="rgb(244,121,46)" rx="2" ry="2" />
<text  x="50.50" y="687.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.01%)</title><rect x="324.5" y="437" width="0.1" height="15.0" fill="rgb(223,51,12)" rx="2" ry="2" />
<text  x="327.47" y="447.5" ></text>
</g>
<g >
<title>tick_sched_handle (2 samples, 0.02%)</title><rect x="272.8" y="357" width="0.2" height="15.0" fill="rgb(244,41,47)" rx="2" ry="2" />
<text  x="275.77" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="351.5" y="485" width="0.3" height="15.0" fill="rgb(240,18,32)" rx="2" ry="2" />
<text  x="354.50" y="495.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="272.8" y="293" width="0.1" height="15.0" fill="rgb(251,221,42)" rx="2" ry="2" />
<text  x="275.77" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (1 samples, 0.01%)</title><rect x="988.0" y="437" width="0.2" height="15.0" fill="rgb(238,197,26)" rx="2" ry="2" />
<text  x="991.03" y="447.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.01%)</title><rect x="62.8" y="677" width="0.1" height="15.0" fill="rgb(205,87,48)" rx="2" ry="2" />
<text  x="65.80" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (9 samples, 0.11%)</title><rect x="636.6" y="229" width="1.2" height="15.0" fill="rgb(212,186,38)" rx="2" ry="2" />
<text  x="639.60" y="239.5" ></text>
</g>
<g >
<title>Bitmap::~Bitmap (119 samples, 1.39%)</title><rect x="838.2" y="293" width="16.4" height="15.0" fill="rgb(225,144,53)" rx="2" ry="2" />
<text  x="841.16" y="303.5" ></text>
</g>
<g >
<title>Scene::MainFunction (7,603 samples, 88.83%)</title><rect x="138.2" y="597" width="1048.2" height="15.0" fill="rgb(213,0,46)" rx="2" ry="2" />
<text  x="141.22" y="607.5" >Scene::MainFunction</text>
</g>
<g >
<title>Bitmap::height (2 samples, 0.02%)</title><rect x="866.2" y="421" width="0.2" height="15.0" fill="rgb(253,203,47)" rx="2" ry="2" />
<text  x="869.15" y="431.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="987.6" y="437" width="0.1" height="15.0" fill="rgb(240,72,41)" rx="2" ry="2" />
<text  x="990.61" y="447.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (2 samples, 0.02%)</title><rect x="866.8" y="421" width="0.3" height="15.0" fill="rgb(216,155,54)" rx="2" ry="2" />
<text  x="869.84" y="431.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (2 samples, 0.02%)</title><rect x="995.2" y="469" width="0.3" height="15.0" fill="rgb(240,65,1)" rx="2" ry="2" />
<text  x="998.19" y="479.5" ></text>
</g>
<g >
<title>eventfd_write (8 samples, 0.09%)</title><rect x="40.9" y="597" width="1.1" height="15.0" fill="rgb(217,27,14)" rx="2" ry="2" />
<text  x="43.88" y="607.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (212 samples, 2.48%)</title><rect x="773.0" y="181" width="29.2" height="15.0" fill="rgb(208,73,20)" rx="2" ry="2" />
<text  x="775.95" y="191.5" >[l..</text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="912.1" y="453" width="0.1" height="15.0" fill="rgb(229,215,17)" rx="2" ry="2" />
<text  x="915.06" y="463.5" ></text>
</g>
<g >
<title>__fsnotify_parent (1 samples, 0.01%)</title><rect x="40.2" y="581" width="0.1" height="15.0" fill="rgb(220,137,36)" rx="2" ry="2" />
<text  x="43.19" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (5 samples, 0.06%)</title><rect x="614.4" y="261" width="0.7" height="15.0" fill="rgb(243,196,7)" rx="2" ry="2" />
<text  x="617.41" y="271.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="21.3" y="693" width="0.1" height="15.0" fill="rgb(237,162,48)" rx="2" ry="2" />
<text  x="24.31" y="703.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (5 samples, 0.06%)</title><rect x="995.7" y="517" width="0.7" height="15.0" fill="rgb(222,117,21)" rx="2" ry="2" />
<text  x="998.75" y="527.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (27 samples, 0.32%)</title><rect x="590.0" y="261" width="3.7" height="15.0" fill="rgb(212,184,6)" rx="2" ry="2" />
<text  x="593.00" y="271.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (7 samples, 0.08%)</title><rect x="638.4" y="341" width="1.0" height="15.0" fill="rgb(236,146,48)" rx="2" ry="2" />
<text  x="641.40" y="351.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.01%)</title><rect x="39.0" y="597" width="0.1" height="15.0" fill="rgb(224,172,10)" rx="2" ry="2" />
<text  x="41.95" y="607.5" ></text>
</g>
<g >
<title>__fdget_pos (1 samples, 0.01%)</title><rect x="39.0" y="629" width="0.1" height="15.0" fill="rgb(225,52,1)" rx="2" ry="2" />
<text  x="41.95" y="639.5" ></text>
</g>
<g >
<title>tcache_put (1 samples, 0.01%)</title><rect x="324.1" y="421" width="0.1" height="15.0" fill="rgb(219,176,20)" rx="2" ry="2" />
<text  x="327.06" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_pbump (1 samples, 0.01%)</title><rect x="886.3" y="389" width="0.1" height="15.0" fill="rgb(238,32,33)" rx="2" ry="2" />
<text  x="889.28" y="399.5" ></text>
</g>
<g >
<title>Bitmap::height (1 samples, 0.01%)</title><rect x="814.2" y="341" width="0.1" height="15.0" fill="rgb(253,15,17)" rx="2" ry="2" />
<text  x="817.18" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (8 samples, 0.09%)</title><rect x="580.2" y="389" width="1.1" height="15.0" fill="rgb(253,229,7)" rx="2" ry="2" />
<text  x="583.22" y="399.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.01%)</title><rect x="856.5" y="293" width="0.1" height="15.0" fill="rgb(230,153,7)" rx="2" ry="2" />
<text  x="859.50" y="303.5" ></text>
</g>
<g >
<title>pixman_image_get_width@plt (2 samples, 0.02%)</title><rect x="832.9" y="373" width="0.3" height="15.0" fill="rgb(251,203,0)" rx="2" ry="2" />
<text  x="835.93" y="383.5" ></text>
</g>
<g >
<title>AdjustMoveParams (2 samples, 0.02%)</title><rect x="561.3" y="469" width="0.3" height="15.0" fill="rgb(225,195,47)" rx="2" ry="2" />
<text  x="564.33" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (12 samples, 0.14%)</title><rect x="611.9" y="277" width="1.7" height="15.0" fill="rgb(253,62,39)" rx="2" ry="2" />
<text  x="614.93" y="287.5" ></text>
</g>
<g >
<title>_nv029793rm (1 samples, 0.01%)</title><rect x="880.9" y="341" width="0.1" height="15.0" fill="rgb(211,106,8)" rx="2" ry="2" />
<text  x="883.90" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (26 samples, 0.30%)</title><rect x="886.4" y="469" width="3.6" height="15.0" fill="rgb(254,21,54)" rx="2" ry="2" />
<text  x="889.42" y="479.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="540.5" y="421" width="0.1" height="15.0" fill="rgb(223,117,21)" rx="2" ry="2" />
<text  x="543.51" y="431.5" ></text>
</g>
<g >
<title>Game_Picture::SetNonEffectParams (7 samples, 0.08%)</title><rect x="859.0" y="453" width="0.9" height="15.0" fill="rgb(232,134,27)" rx="2" ry="2" />
<text  x="861.98" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (1 samples, 0.01%)</title><rect x="988.0" y="421" width="0.2" height="15.0" fill="rgb(223,186,32)" rx="2" ry="2" />
<text  x="991.03" y="431.5" ></text>
</g>
<g >
<title>run_rebalance_domains (2 samples, 0.02%)</title><rect x="549.1" y="405" width="0.2" height="15.0" fill="rgb(232,161,16)" rx="2" ry="2" />
<text  x="552.06" y="415.5" ></text>
</g>
<g >
<title>X11_PumpEvents (2 samples, 0.02%)</title><rect x="108.4" y="677" width="0.3" height="15.0" fill="rgb(242,115,26)" rx="2" ry="2" />
<text  x="111.44" y="687.5" ></text>
</g>
<g >
<title>find (147 samples, 1.72%)</title><rect x="617.9" y="325" width="20.2" height="15.0" fill="rgb(245,185,25)" rx="2" ry="2" />
<text  x="620.85" y="335.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (19 samples, 0.22%)</title><rect x="343.4" y="421" width="2.6" height="15.0" fill="rgb(218,19,31)" rx="2" ry="2" />
<text  x="346.36" y="431.5" ></text>
</g>
<g >
<title>Scene::IsAsyncPending (82 samples, 0.96%)</title><rect x="1175.1" y="581" width="11.3" height="15.0" fill="rgb(213,173,0)" rx="2" ry="2" />
<text  x="1178.11" y="591.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.01%)</title><rect x="611.8" y="309" width="0.1" height="15.0" fill="rgb(253,45,29)" rx="2" ry="2" />
<text  x="614.79" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="352.9" y="533" width="0.1" height="15.0" fill="rgb(245,53,52)" rx="2" ry="2" />
<text  x="355.87" y="543.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.01%)</title><rect x="578.7" y="341" width="0.1" height="15.0" fill="rgb(248,11,44)" rx="2" ry="2" />
<text  x="581.70" y="351.5" ></text>
</g>
<g >
<title>FileRequestAsync::BindStart (1,885 samples, 22.02%)</title><rect x="597.6" y="437" width="259.9" height="15.0" fill="rgb(222,36,33)" rx="2" ry="2" />
<text  x="600.59" y="447.5" >FileRequestAsync::BindStart</text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.01%)</title><rect x="548.2" y="453" width="0.2" height="15.0" fill="rgb(207,67,8)" rx="2" ry="2" />
<text  x="551.23" y="463.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="518.7" y="437" width="0.2" height="15.0" fill="rgb(254,39,15)" rx="2" ry="2" />
<text  x="521.73" y="447.5" ></text>
</g>
<g >
<title>Sprite::SetZ (25 samples, 0.29%)</title><rect x="978.9" y="485" width="3.5" height="15.0" fill="rgb(213,9,9)" rx="2" ry="2" />
<text  x="981.93" y="495.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1162.3" y="453" width="0.1" height="15.0" fill="rgb(210,105,44)" rx="2" ry="2" />
<text  x="1165.29" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (4 samples, 0.05%)</title><rect x="640.2" y="197" width="0.5" height="15.0" fill="rgb(251,53,32)" rx="2" ry="2" />
<text  x="643.19" y="207.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (61 samples, 0.71%)</title><rect x="1165.2" y="389" width="8.4" height="15.0" fill="rgb(238,204,37)" rx="2" ry="2" />
<text  x="1168.18" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (5 samples, 0.06%)</title><rect x="580.5" y="293" width="0.7" height="15.0" fill="rgb(210,73,32)" rx="2" ry="2" />
<text  x="583.49" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (10 samples, 0.12%)</title><rect x="642.5" y="213" width="1.4" height="15.0" fill="rgb(238,17,31)" rx="2" ry="2" />
<text  x="645.53" y="223.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (2 samples, 0.02%)</title><rect x="642.3" y="165" width="0.2" height="15.0" fill="rgb(211,215,36)" rx="2" ry="2" />
<text  x="645.26" y="175.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (249 samples, 2.91%)</title><rect x="770.9" y="277" width="34.3" height="15.0" fill="rgb(236,139,5)" rx="2" ry="2" />
<text  x="773.89" y="287.5" >st..</text>
</g>
<g >
<title>SDL_GetTicks_REAL (217 samples, 2.54%)</title><rect x="356.3" y="565" width="29.9" height="15.0" fill="rgb(249,98,43)" rx="2" ry="2" />
<text  x="359.32" y="575.5" >SD..</text>
</g>
<g >
<title>pixman_image_get_width (2 samples, 0.02%)</title><rect x="51.1" y="677" width="0.3" height="15.0" fill="rgb(239,3,22)" rx="2" ry="2" />
<text  x="54.08" y="687.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="605.4" y="181" width="0.2" height="15.0" fill="rgb(206,142,33)" rx="2" ry="2" />
<text  x="608.45" y="191.5" ></text>
</g>
<g >
<title>std::_Bit_iterator::operator* (5 samples, 0.06%)</title><rect x="955.5" y="469" width="0.7" height="15.0" fill="rgb(231,162,38)" rx="2" ry="2" />
<text  x="958.49" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::replace (1 samples, 0.01%)</title><rect x="886.0" y="405" width="0.1" height="15.0" fill="rgb(218,212,32)" rx="2" ry="2" />
<text  x="889.00" y="415.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks@plt (1 samples, 0.01%)</title><rect x="886.1" y="405" width="0.2" height="15.0" fill="rgb(227,111,15)" rx="2" ry="2" />
<text  x="889.14" y="415.5" ></text>
</g>
<g >
<title>clockevents_program_event (1 samples, 0.01%)</title><rect x="1173.5" y="229" width="0.1" height="15.0" fill="rgb(253,185,32)" rx="2" ry="2" />
<text  x="1176.46" y="239.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="982.2" y="469" width="0.2" height="15.0" fill="rgb(230,226,17)" rx="2" ry="2" />
<text  x="985.24" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::size (18 samples, 0.21%)</title><rect x="952.2" y="485" width="2.5" height="15.0" fill="rgb(235,223,1)" rx="2" ry="2" />
<text  x="955.18" y="495.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="963.5" y="437" width="0.1" height="15.0" fill="rgb(244,69,30)" rx="2" ry="2" />
<text  x="966.49" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (45 samples, 0.53%)</title><rect x="587.5" y="373" width="6.2" height="15.0" fill="rgb(235,205,11)" rx="2" ry="2" />
<text  x="590.52" y="383.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.01%)</title><rect x="987.6" y="325" width="0.1" height="15.0" fill="rgb(215,24,54)" rx="2" ry="2" />
<text  x="990.61" y="335.5" ></text>
</g>
<g >
<title>SDL_PumpEvents_REAL (13 samples, 0.15%)</title><rect x="989.3" y="533" width="1.8" height="15.0" fill="rgb(244,22,45)" rx="2" ry="2" />
<text  x="992.27" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (1 samples, 0.01%)</title><rect x="560.2" y="453" width="0.2" height="15.0" fill="rgb(209,113,16)" rx="2" ry="2" />
<text  x="563.23" y="463.5" ></text>
</g>
<g >
<title>__exchange_and_add (6 samples, 0.07%)</title><rect x="837.1" y="277" width="0.8" height="15.0" fill="rgb(214,43,18)" rx="2" ry="2" />
<text  x="840.06" y="287.5" ></text>
</g>
<g >
<title>X11_GL_SwapWindow (2 samples, 0.02%)</title><rect x="43.4" y="693" width="0.2" height="15.0" fill="rgb(221,191,40)" rx="2" ry="2" />
<text  x="46.36" y="703.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandConditionalBranch (282 samples, 3.29%)</title><rect x="414.5" y="485" width="38.9" height="15.0" fill="rgb(214,169,10)" rx="2" ry="2" />
<text  x="417.50" y="495.5" >Gam..</text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (2 samples, 0.02%)</title><rect x="589.3" y="309" width="0.3" height="15.0" fill="rgb(231,37,8)" rx="2" ry="2" />
<text  x="592.32" y="319.5" ></text>
</g>
<g >
<title>__exchange_and_add (8 samples, 0.09%)</title><rect x="326.0" y="405" width="1.1" height="15.0" fill="rgb(214,177,9)" rx="2" ry="2" />
<text  x="328.99" y="415.5" ></text>
</g>
<g >
<title>Player::IsMajorUpdatedVersion (3 samples, 0.04%)</title><rect x="57.4" y="677" width="0.4" height="15.0" fill="rgb(223,123,3)" rx="2" ry="2" />
<text  x="60.43" y="687.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="939.8" y="421" width="0.1" height="15.0" fill="rgb(211,3,23)" rx="2" ry="2" />
<text  x="942.77" y="431.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="987.6" y="389" width="0.1" height="15.0" fill="rgb(222,31,51)" rx="2" ry="2" />
<text  x="990.61" y="399.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (2 samples, 0.02%)</title><rect x="954.7" y="501" width="0.2" height="15.0" fill="rgb(226,132,27)" rx="2" ry="2" />
<text  x="957.66" y="511.5" ></text>
</g>
<g >
<title>std::__unguarded_linear_insert&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Val_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (4 samples, 0.05%)</title><rect x="346.0" y="437" width="0.5" height="15.0" fill="rgb(241,175,33)" rx="2" ry="2" />
<text  x="348.98" y="447.5" ></text>
</g>
<g >
<title>pixman_region32_fini (3 samples, 0.04%)</title><rect x="853.2" y="245" width="0.4" height="15.0" fill="rgb(217,188,27)" rx="2" ry="2" />
<text  x="856.19" y="255.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.01%)</title><rect x="453.2" y="469" width="0.2" height="15.0" fill="rgb(237,26,30)" rx="2" ry="2" />
<text  x="456.24" y="479.5" ></text>
</g>
<g >
<title>std::move&lt;Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="348.2" y="437" width="0.1" height="15.0" fill="rgb(209,106,34)" rx="2" ry="2" />
<text  x="351.19" y="447.5" ></text>
</g>
<g >
<title>SDL_memset_REAL (1 samples, 0.01%)</title><rect x="996.6" y="469" width="0.1" height="15.0" fill="rgb(232,65,38)" rx="2" ry="2" />
<text  x="999.57" y="479.5" ></text>
</g>
<g >
<title>Bitmap::width (1 samples, 0.01%)</title><rect x="805.6" y="357" width="0.2" height="15.0" fill="rgb(235,198,7)" rx="2" ry="2" />
<text  x="808.63" y="367.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (2 samples, 0.02%)</title><rect x="550.9" y="453" width="0.2" height="15.0" fill="rgb(210,101,24)" rx="2" ry="2" />
<text  x="553.85" y="463.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="453.2" y="325" width="0.2" height="15.0" fill="rgb(243,46,27)" rx="2" ry="2" />
<text  x="456.24" y="335.5" ></text>
</g>
<g >
<title>Game_Screen::GetFlashColor (11 samples, 0.13%)</title><rect x="807.3" y="373" width="1.5" height="15.0" fill="rgb(253,25,38)" rx="2" ry="2" />
<text  x="810.28" y="383.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipToNextConditional (2 samples, 0.02%)</title><rect x="912.2" y="485" width="0.3" height="15.0" fill="rgb(208,163,1)" rx="2" ry="2" />
<text  x="915.20" y="495.5" ></text>
</g>
<g >
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="320.5" y="421" width="0.4" height="15.0" fill="rgb(242,19,34)" rx="2" ry="2" />
<text  x="323.48" y="431.5" ></text>
</g>
<g >
<title>pixman_region32_rectangles (1 samples, 0.01%)</title><rect x="51.6" y="677" width="0.2" height="15.0" fill="rgb(239,181,47)" rx="2" ry="2" />
<text  x="54.64" y="687.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (8 samples, 0.09%)</title><rect x="326.0" y="453" width="1.1" height="15.0" fill="rgb(239,221,28)" rx="2" ry="2" />
<text  x="328.99" y="463.5" ></text>
</g>
<g >
<title>put_prev_entity (1 samples, 0.01%)</title><rect x="37.8" y="533" width="0.2" height="15.0" fill="rgb(247,148,4)" rx="2" ry="2" />
<text  x="40.85" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (5 samples, 0.06%)</title><rect x="646.0" y="341" width="0.7" height="15.0" fill="rgb(219,219,16)" rx="2" ry="2" />
<text  x="648.98" y="351.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (5 samples, 0.06%)</title><rect x="614.4" y="229" width="0.7" height="15.0" fill="rgb(227,136,31)" rx="2" ry="2" />
<text  x="617.41" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="805.4" y="213" width="0.2" height="15.0" fill="rgb(225,203,54)" rx="2" ry="2" />
<text  x="808.35" y="223.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (60 samples, 0.70%)</title><rect x="627.9" y="245" width="8.3" height="15.0" fill="rgb(243,186,13)" rx="2" ry="2" />
<text  x="630.92" y="255.5" ></text>
</g>
<g >
<title>std::__merge_sort_with_buffer&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (52 samples, 0.61%)</title><rect x="343.2" y="485" width="7.2" height="15.0" fill="rgb(238,19,17)" rx="2" ry="2" />
<text  x="346.22" y="495.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.01%)</title><rect x="355.8" y="421" width="0.1" height="15.0" fill="rgb(216,56,33)" rx="2" ry="2" />
<text  x="358.77" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (1 samples, 0.01%)</title><rect x="867.0" y="405" width="0.1" height="15.0" fill="rgb(238,58,33)" rx="2" ry="2" />
<text  x="869.98" y="415.5" ></text>
</g>
<g >
<title>std::return_temporary_buffer&lt;Drawable*&gt; (1 samples, 0.01%)</title><rect x="341.8" y="485" width="0.2" height="15.0" fill="rgb(220,3,5)" rx="2" ry="2" />
<text  x="344.84" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.01%)</title><rect x="988.0" y="469" width="0.2" height="15.0" fill="rgb(209,131,22)" rx="2" ry="2" />
<text  x="991.03" y="479.5" ></text>
</g>
<g >
<title>__sys_recvmsg (1 samples, 0.01%)</title><rect x="993.5" y="293" width="0.2" height="15.0" fill="rgb(217,82,36)" rx="2" ry="2" />
<text  x="996.54" y="303.5" ></text>
</g>
<g >
<title>posix_get_monotonic_raw (6 samples, 0.07%)</title><rect x="379.8" y="485" width="0.8" height="15.0" fill="rgb(219,153,40)" rx="2" ry="2" />
<text  x="382.76" y="495.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (1 samples, 0.01%)</title><rect x="342.0" y="485" width="0.1" height="15.0" fill="rgb(205,97,42)" rx="2" ry="2" />
<text  x="344.98" y="495.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (87 samples, 1.02%)</title><rect x="818.6" y="373" width="12.0" height="15.0" fill="rgb(229,111,36)" rx="2" ry="2" />
<text  x="821.59" y="383.5" ></text>
</g>
<g >
<title>SDL_InitFormat (1 samples, 0.01%)</title><rect x="47.8" y="677" width="0.1" height="15.0" fill="rgb(207,77,7)" rx="2" ry="2" />
<text  x="50.78" y="687.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.01%)</title><rect x="642.4" y="149" width="0.1" height="15.0" fill="rgb(225,27,43)" rx="2" ry="2" />
<text  x="645.39" y="159.5" ></text>
</g>
<g >
<title>GetRandomUnsigned (2 samples, 0.02%)</title><rect x="548.4" y="453" width="0.2" height="15.0" fill="rgb(230,162,38)" rx="2" ry="2" />
<text  x="551.37" y="463.5" ></text>
</g>
<g >
<title>Bitmap::ZoomOpacityBlit (371 samples, 4.33%)</title><rect x="273.5" y="485" width="51.1" height="15.0" fill="rgb(239,114,27)" rx="2" ry="2" />
<text  x="276.46" y="495.5" >Bitma..</text>
</g>
<g >
<title>read_tsc (9 samples, 0.11%)</title><rect x="376.7" y="453" width="1.3" height="15.0" fill="rgb(216,180,33)" rx="2" ry="2" />
<text  x="379.73" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="351.5" y="501" width="0.3" height="15.0" fill="rgb(254,155,32)" rx="2" ry="2" />
<text  x="354.50" y="511.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (8 samples, 0.09%)</title><rect x="332.3" y="453" width="1.1" height="15.0" fill="rgb(214,98,15)" rx="2" ry="2" />
<text  x="335.33" y="463.5" ></text>
</g>
<g >
<title>_XEnq (1 samples, 0.01%)</title><rect x="990.9" y="437" width="0.2" height="15.0" fill="rgb(239,1,39)" rx="2" ry="2" />
<text  x="993.92" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="1189.9" y="677" width="0.1" height="15.0" fill="rgb(219,15,36)" rx="2" ry="2" />
<text  x="1192.86" y="687.5" ></text>
</g>
<g >
<title>_int_free (5 samples, 0.06%)</title><rect x="855.8" y="293" width="0.7" height="15.0" fill="rgb(248,38,4)" rx="2" ry="2" />
<text  x="858.81" y="303.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.01%)</title><rect x="39.9" y="613" width="0.2" height="15.0" fill="rgb(222,0,9)" rx="2" ry="2" />
<text  x="42.92" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (12 samples, 0.14%)</title><rect x="873.2" y="437" width="1.6" height="15.0" fill="rgb(230,148,13)" rx="2" ry="2" />
<text  x="876.18" y="447.5" ></text>
</g>
<g >
<title>sock_recvmsg (1 samples, 0.01%)</title><rect x="1189.6" y="613" width="0.1" height="15.0" fill="rgb(214,200,26)" rx="2" ry="2" />
<text  x="1192.59" y="623.5" ></text>
</g>
<g >
<title>__libc_recvmsg (1 samples, 0.01%)</title><rect x="994.0" y="373" width="0.1" height="15.0" fill="rgb(223,3,23)" rx="2" ry="2" />
<text  x="996.95" y="383.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, Drawable**, Drawable**&gt; (2 samples, 0.02%)</title><rect x="350.1" y="405" width="0.3" height="15.0" fill="rgb(223,194,46)" rx="2" ry="2" />
<text  x="353.12" y="415.5" ></text>
</g>
<g >
<title>[[heap]] (62 samples, 0.72%)</title><rect x="43.8" y="693" width="8.5" height="15.0" fill="rgb(245,61,41)" rx="2" ry="2" />
<text  x="46.78" y="703.5" ></text>
</g>
<g >
<title>find (1 samples, 0.01%)</title><rect x="988.7" y="405" width="0.2" height="15.0" fill="rgb(250,124,12)" rx="2" ry="2" />
<text  x="991.71" y="415.5" ></text>
</g>
<g >
<title>Bitmap::GetWidth (1 samples, 0.01%)</title><rect x="805.6" y="373" width="0.2" height="15.0" fill="rgb(249,203,52)" rx="2" ry="2" />
<text  x="808.63" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (3 samples, 0.04%)</title><rect x="452.7" y="453" width="0.4" height="15.0" fill="rgb(241,216,32)" rx="2" ry="2" />
<text  x="455.69" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (2 samples, 0.02%)</title><rect x="573.3" y="437" width="0.3" height="15.0" fill="rgb(220,169,11)" rx="2" ry="2" />
<text  x="576.32" y="447.5" ></text>
</g>
<g >
<title>find (1 samples, 0.01%)</title><rect x="988.7" y="389" width="0.2" height="15.0" fill="rgb(236,108,21)" rx="2" ry="2" />
<text  x="991.71" y="399.5" ></text>
</g>
<g >
<title>Bitmap::StretchBlit (364 samples, 4.25%)</title><rect x="274.4" y="469" width="50.2" height="15.0" fill="rgb(241,112,20)" rx="2" ry="2" />
<text  x="277.43" y="479.5" >Bitma..</text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (15 samples, 0.18%)</title><rect x="353.7" y="357" width="2.1" height="15.0" fill="rgb(249,144,53)" rx="2" ry="2" />
<text  x="356.70" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (10 samples, 0.12%)</title><rect x="642.5" y="325" width="1.4" height="15.0" fill="rgb(245,54,39)" rx="2" ry="2" />
<text  x="645.53" y="335.5" ></text>
</g>
<g >
<title>check_stack_object (1 samples, 0.01%)</title><rect x="990.4" y="213" width="0.1" height="15.0" fill="rgb(247,178,11)" rx="2" ry="2" />
<text  x="993.37" y="223.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipToNextConditional (129 samples, 1.51%)</title><rect x="431.5" y="469" width="17.7" height="15.0" fill="rgb(232,88,31)" rx="2" ry="2" />
<text  x="434.46" y="479.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (1 samples, 0.01%)</title><rect x="59.6" y="677" width="0.2" height="15.0" fill="rgb(216,67,33)" rx="2" ry="2" />
<text  x="62.63" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.01%)</title><rect x="579.9" y="341" width="0.2" height="15.0" fill="rgb(205,186,40)" rx="2" ry="2" />
<text  x="582.94" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.01%)</title><rect x="858.6" y="437" width="0.1" height="15.0" fill="rgb(227,14,49)" rx="2" ry="2" />
<text  x="861.57" y="447.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.01%)</title><rect x="352.7" y="533" width="0.2" height="15.0" fill="rgb(236,72,5)" rx="2" ry="2" />
<text  x="355.74" y="543.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (5 samples, 0.06%)</title><rect x="342.4" y="437" width="0.7" height="15.0" fill="rgb(225,52,0)" rx="2" ry="2" />
<text  x="345.40" y="447.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (3 samples, 0.04%)</title><rect x="988.2" y="485" width="0.4" height="15.0" fill="rgb(237,99,24)" rx="2" ry="2" />
<text  x="991.16" y="495.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="884.3" y="373" width="0.3" height="15.0" fill="rgb(207,115,24)" rx="2" ry="2" />
<text  x="887.35" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="352.5" y="453" width="0.1" height="15.0" fill="rgb(232,168,35)" rx="2" ry="2" />
<text  x="355.46" y="463.5" ></text>
</g>
<g >
<title>GetRequest (80 samples, 0.93%)</title><rect x="585.5" y="421" width="11.0" height="15.0" fill="rgb(242,131,41)" rx="2" ry="2" />
<text  x="588.46" y="431.5" ></text>
</g>
<g >
<title>operator== (1 samples, 0.01%)</title><rect x="978.1" y="437" width="0.1" height="15.0" fill="rgb(242,158,6)" rx="2" ry="2" />
<text  x="981.10" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (7 samples, 0.08%)</title><rect x="605.2" y="309" width="0.9" height="15.0" fill="rgb(244,53,34)" rx="2" ry="2" />
<text  x="608.17" y="319.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (10 samples, 0.12%)</title><rect x="642.5" y="309" width="1.4" height="15.0" fill="rgb(211,221,38)" rx="2" ry="2" />
<text  x="645.53" y="319.5" ></text>
</g>
<g >
<title>kick_ilb (1 samples, 0.01%)</title><rect x="560.6" y="309" width="0.2" height="15.0" fill="rgb(243,157,11)" rx="2" ry="2" />
<text  x="563.64" y="319.5" ></text>
</g>
<g >
<title>__sys_recvmsg (1 samples, 0.01%)</title><rect x="1189.6" y="645" width="0.1" height="15.0" fill="rgb(205,76,45)" rx="2" ry="2" />
<text  x="1192.59" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (12 samples, 0.14%)</title><rect x="873.2" y="421" width="1.6" height="15.0" fill="rgb(233,173,40)" rx="2" ry="2" />
<text  x="876.18" y="431.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.01%)</title><rect x="885.2" y="325" width="0.1" height="15.0" fill="rgb(241,81,13)" rx="2" ry="2" />
<text  x="888.18" y="335.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="573.6" y="437" width="0.1" height="15.0" fill="rgb(208,219,40)" rx="2" ry="2" />
<text  x="576.60" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (5 samples, 0.06%)</title><rect x="580.5" y="309" width="0.7" height="15.0" fill="rgb(250,74,43)" rx="2" ry="2" />
<text  x="583.49" y="319.5" ></text>
</g>
<g >
<title>native_write_msr (13 samples, 0.15%)</title><rect x="991.3" y="277" width="1.8" height="15.0" fill="rgb(253,154,27)" rx="2" ry="2" />
<text  x="994.33" y="287.5" ></text>
</g>
<g >
<title>Sprite::GetZ (1 samples, 0.01%)</title><rect x="349.8" y="405" width="0.2" height="15.0" fill="rgb(249,183,52)" rx="2" ry="2" />
<text  x="352.84" y="415.5" ></text>
</g>
<g >
<title>LoadBitmap&lt;(&lt;unnamed&gt;::Material::Type)9&gt; (2 samples, 0.02%)</title><rect x="988.7" y="437" width="0.3" height="15.0" fill="rgb(237,119,38)" rx="2" ry="2" />
<text  x="991.71" y="447.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (1 samples, 0.01%)</title><rect x="885.9" y="389" width="0.1" height="15.0" fill="rgb(236,171,5)" rx="2" ry="2" />
<text  x="888.87" y="399.5" ></text>
</g>
<g >
<title>std::__chunk_insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (24 samples, 0.28%)</title><rect x="343.2" y="469" width="3.3" height="15.0" fill="rgb(250,57,42)" rx="2" ry="2" />
<text  x="346.22" y="479.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="987.6" y="469" width="0.1" height="15.0" fill="rgb(212,188,49)" rx="2" ry="2" />
<text  x="990.61" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.01%)</title><rect x="858.4" y="341" width="0.2" height="15.0" fill="rgb(247,102,23)" rx="2" ry="2" />
<text  x="861.43" y="351.5" ></text>
</g>
<g >
<title>X11_PumpEvents (12 samples, 0.14%)</title><rect x="989.4" y="517" width="1.7" height="15.0" fill="rgb(212,187,37)" rx="2" ry="2" />
<text  x="992.40" y="527.5" ></text>
</g>
<g >
<title>Player::IsRPG2k3 (10 samples, 0.12%)</title><rect x="106.6" y="677" width="1.4" height="15.0" fill="rgb(208,131,51)" rx="2" ry="2" />
<text  x="109.64" y="687.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.01%)</title><rect x="62.9" y="677" width="0.2" height="15.0" fill="rgb(224,106,53)" rx="2" ry="2" />
<text  x="65.94" y="687.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (8 samples, 0.09%)</title><rect x="854.7" y="293" width="1.1" height="15.0" fill="rgb(216,5,28)" rx="2" ry="2" />
<text  x="857.71" y="303.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (6 samples, 0.07%)</title><rect x="333.4" y="501" width="0.9" height="15.0" fill="rgb(206,110,44)" rx="2" ry="2" />
<text  x="336.43" y="511.5" ></text>
</g>
<g >
<title>Scene::MainFunction (7,749 samples, 90.54%)</title><rect x="118.1" y="613" width="1068.3" height="15.0" fill="rgb(207,79,26)" rx="2" ry="2" />
<text  x="121.09" y="623.5" >Scene::MainFunction</text>
</g>
<g >
<title>Player::Update (7,520 samples, 87.86%)</title><rect x="138.4" y="581" width="1036.7" height="15.0" fill="rgb(224,55,15)" rx="2" ry="2" />
<text  x="141.35" y="591.5" >Player::Update</text>
</g>
<g >
<title>pixman_image_get_width (1 samples, 0.01%)</title><rect x="332.2" y="501" width="0.1" height="15.0" fill="rgb(244,57,9)" rx="2" ry="2" />
<text  x="335.19" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append@plt (1 samples, 0.01%)</title><rect x="580.1" y="373" width="0.1" height="15.0" fill="rgb(217,17,28)" rx="2" ry="2" />
<text  x="583.08" y="383.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipToNextConditional (13 samples, 0.15%)</title><rect x="563.5" y="469" width="1.8" height="15.0" fill="rgb(229,182,46)" rx="2" ry="2" />
<text  x="566.53" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**&gt; (6 samples, 0.07%)</title><rect x="342.3" y="453" width="0.8" height="15.0" fill="rgb(253,189,43)" rx="2" ry="2" />
<text  x="345.26" y="463.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="857.3" y="389" width="0.2" height="15.0" fill="rgb(240,55,53)" rx="2" ry="2" />
<text  x="860.33" y="399.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (1 samples, 0.01%)</title><rect x="598.6" y="421" width="0.1" height="15.0" fill="rgb(243,223,42)" rx="2" ry="2" />
<text  x="601.55" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (2 samples, 0.02%)</title><rect x="859.7" y="405" width="0.2" height="15.0" fill="rgb(231,51,44)" rx="2" ry="2" />
<text  x="862.67" y="415.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (13 samples, 0.15%)</title><rect x="991.3" y="341" width="1.8" height="15.0" fill="rgb(232,155,20)" rx="2" ry="2" />
<text  x="994.33" y="351.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="987.6" y="453" width="0.1" height="15.0" fill="rgb(235,51,2)" rx="2" ry="2" />
<text  x="990.61" y="463.5" ></text>
</g>
<g >
<title>Game_Character::SetProcessed (1 samples, 0.01%)</title><rect x="958.1" y="501" width="0.1" height="15.0" fill="rgb(227,12,15)" rx="2" ry="2" />
<text  x="961.11" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (19 samples, 0.22%)</title><rect x="343.4" y="437" width="2.6" height="15.0" fill="rgb(229,8,21)" rx="2" ry="2" />
<text  x="346.36" y="447.5" ></text>
</g>
<g >
<title>account_entity_dequeue (1 samples, 0.01%)</title><rect x="26.5" y="517" width="0.2" height="15.0" fill="rgb(225,3,47)" rx="2" ry="2" />
<text  x="29.54" y="527.5" ></text>
</g>
<g >
<title>sock_poll (4 samples, 0.05%)</title><rect x="38.3" y="629" width="0.5" height="15.0" fill="rgb(253,124,39)" rx="2" ry="2" />
<text  x="41.26" y="639.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (76 samples, 0.89%)</title><rect x="601.2" y="341" width="10.4" height="15.0" fill="rgb(233,218,8)" rx="2" ry="2" />
<text  x="604.17" y="351.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**&gt; (2 samples, 0.02%)</title><rect x="350.1" y="437" width="0.3" height="15.0" fill="rgb(251,104,1)" rx="2" ry="2" />
<text  x="353.12" y="447.5" ></text>
</g>
<g >
<title>@plt (1 samples, 0.01%)</title><rect x="783.3" y="149" width="0.1" height="15.0" fill="rgb(233,85,48)" rx="2" ry="2" />
<text  x="786.29" y="159.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (211 samples, 2.47%)</title><rect x="357.1" y="533" width="29.1" height="15.0" fill="rgb(225,193,2)" rx="2" ry="2" />
<text  x="360.15" y="543.5" >__..</text>
</g>
<g >
<title>Rect::Rect (2 samples, 0.02%)</title><rect x="811.6" y="373" width="0.2" height="15.0" fill="rgb(237,103,5)" rx="2" ry="2" />
<text  x="814.56" y="383.5" ></text>
</g>
<g >
<title>Window_Message::Update (3 samples, 0.04%)</title><rect x="988.6" y="533" width="0.4" height="15.0" fill="rgb(230,38,36)" rx="2" ry="2" />
<text  x="991.58" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="989.8" y="437" width="0.2" height="15.0" fill="rgb(213,113,29)" rx="2" ry="2" />
<text  x="992.82" y="447.5" ></text>
</g>
<g >
<title>AdjustShowParams (1 samples, 0.01%)</title><rect x="570.2" y="469" width="0.1" height="15.0" fill="rgb(229,100,39)" rx="2" ry="2" />
<text  x="573.15" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.05%)</title><rect x="72.3" y="661" width="0.6" height="15.0" fill="rgb(217,110,44)" rx="2" ry="2" />
<text  x="75.32" y="671.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.02%)</title><rect x="132.8" y="469" width="0.3" height="15.0" fill="rgb(252,137,35)" rx="2" ry="2" />
<text  x="135.84" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (9 samples, 0.11%)</title><rect x="639.5" y="245" width="1.2" height="15.0" fill="rgb(233,54,43)" rx="2" ry="2" />
<text  x="642.50" y="255.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (14 samples, 0.16%)</title><rect x="636.2" y="277" width="1.9" height="15.0" fill="rgb(242,76,7)" rx="2" ry="2" />
<text  x="639.19" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (15 samples, 0.18%)</title><rect x="643.9" y="357" width="2.1" height="15.0" fill="rgb(241,170,11)" rx="2" ry="2" />
<text  x="646.91" y="367.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.01%)</title><rect x="982.2" y="373" width="0.2" height="15.0" fill="rgb(217,159,20)" rx="2" ry="2" />
<text  x="985.24" y="383.5" ></text>
</g>
<g >
<title>_int_free (7 samples, 0.08%)</title><rect x="642.9" y="197" width="1.0" height="15.0" fill="rgb(253,22,23)" rx="2" ry="2" />
<text  x="645.95" y="207.5" ></text>
</g>
<g >
<title>std::__insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (1 samples, 0.01%)</title><rect x="139.5" y="485" width="0.1" height="15.0" fill="rgb(206,45,4)" rx="2" ry="2" />
<text  x="142.46" y="495.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="1162.3" y="437" width="0.1" height="15.0" fill="rgb(212,35,39)" rx="2" ry="2" />
<text  x="1165.29" y="447.5" ></text>
</g>
<g >
<title>Game_Map::Refresh (1 samples, 0.01%)</title><rect x="55.1" y="677" width="0.1" height="15.0" fill="rgb(206,168,19)" rx="2" ry="2" />
<text  x="58.08" y="687.5" ></text>
</g>
<g >
<title>std::__find_if&lt;int const*, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (1 samples, 0.01%)</title><rect x="565.2" y="437" width="0.1" height="15.0" fill="rgb(239,189,40)" rx="2" ry="2" />
<text  x="568.19" y="447.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (29 samples, 0.34%)</title><rect x="589.7" y="277" width="4.0" height="15.0" fill="rgb(220,104,33)" rx="2" ry="2" />
<text  x="592.73" y="287.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::swap (5 samples, 0.06%)</title><rect x="874.8" y="437" width="0.7" height="15.0" fill="rgb(245,92,3)" rx="2" ry="2" />
<text  x="877.84" y="447.5" ></text>
</g>
<g >
<title>pixman_transform_point_31_16 (3 samples, 0.04%)</title><rect x="116.4" y="677" width="0.4" height="15.0" fill="rgb(222,188,22)" rx="2" ry="2" />
<text  x="119.43" y="687.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="883.8" y="389" width="0.1" height="15.0" fill="rgb(220,206,41)" rx="2" ry="2" />
<text  x="886.80" y="399.5" ></text>
</g>
<g >
<title>copy_page_from_iter (2 samples, 0.02%)</title><rect x="42.0" y="565" width="0.3" height="15.0" fill="rgb(218,159,14)" rx="2" ry="2" />
<text  x="44.99" y="575.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="874.7" y="405" width="0.1" height="15.0" fill="rgb(244,88,42)" rx="2" ry="2" />
<text  x="877.70" y="415.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="973.8" y="453" width="0.2" height="15.0" fill="rgb(223,227,45)" rx="2" ry="2" />
<text  x="976.83" y="463.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (8 samples, 0.09%)</title><rect x="326.0" y="485" width="1.1" height="15.0" fill="rgb(207,26,11)" rx="2" ry="2" />
<text  x="328.99" y="495.5" ></text>
</g>
<g >
<title>Cache::SystemOrBlack (2 samples, 0.02%)</title><rect x="988.7" y="485" width="0.3" height="15.0" fill="rgb(222,141,4)" rx="2" ry="2" />
<text  x="991.71" y="495.5" ></text>
</g>
<g >
<title>memcmp@plt (3 samples, 0.04%)</title><rect x="627.5" y="181" width="0.4" height="15.0" fill="rgb(229,200,9)" rx="2" ry="2" />
<text  x="630.50" y="191.5" ></text>
</g>
<g >
<title>std::replace&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (30 samples, 0.35%)</title><rect x="581.3" y="405" width="4.2" height="15.0" fill="rgb(236,6,18)" rx="2" ry="2" />
<text  x="584.32" y="415.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (1 samples, 0.01%)</title><rect x="833.2" y="357" width="0.1" height="15.0" fill="rgb(235,47,10)" rx="2" ry="2" />
<text  x="836.20" y="367.5" ></text>
</g>
<g >
<title>std::basic_iostream&lt;char, std::char_traits&lt;char&gt; &gt;::basic_iostream (5 samples, 0.06%)</title><rect x="885.3" y="437" width="0.7" height="15.0" fill="rgb(218,226,49)" rx="2" ry="2" />
<text  x="888.31" y="447.5" ></text>
</g>
<g >
<title>select_task_rq_fair (2 samples, 0.02%)</title><rect x="41.0" y="501" width="0.3" height="15.0" fill="rgb(221,1,12)" rx="2" ry="2" />
<text  x="44.02" y="511.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.01%)</title><rect x="994.0" y="357" width="0.1" height="15.0" fill="rgb(238,8,51)" rx="2" ry="2" />
<text  x="996.95" y="367.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (1 samples, 0.01%)</title><rect x="886.3" y="421" width="0.1" height="15.0" fill="rgb(253,157,45)" rx="2" ry="2" />
<text  x="889.28" y="431.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="540.1" y="389" width="0.1" height="15.0" fill="rgb(233,30,26)" rx="2" ry="2" />
<text  x="543.10" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (3 samples, 0.04%)</title><rect x="805.2" y="245" width="0.4" height="15.0" fill="rgb(239,203,40)" rx="2" ry="2" />
<text  x="808.21" y="255.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (3 samples, 0.04%)</title><rect x="990.2" y="405" width="0.4" height="15.0" fill="rgb(225,85,31)" rx="2" ry="2" />
<text  x="993.23" y="415.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (144 samples, 1.68%)</title><rect x="118.1" y="565" width="19.8" height="15.0" fill="rgb(227,89,15)" rx="2" ry="2" />
<text  x="121.09" y="575.5" ></text>
</g>
<g >
<title>__strlen_avx2 (2 samples, 0.02%)</title><rect x="645.6" y="325" width="0.2" height="15.0" fill="rgb(214,77,42)" rx="2" ry="2" />
<text  x="648.56" y="335.5" ></text>
</g>
<g >
<title>Scene::HasRequestedScene (2 samples, 0.02%)</title><rect x="941.2" y="485" width="0.2" height="15.0" fill="rgb(225,156,16)" rx="2" ry="2" />
<text  x="944.15" y="495.5" ></text>
</g>
<g >
<title>Cache::Picture (2 samples, 0.02%)</title><rect x="598.7" y="405" width="0.3" height="15.0" fill="rgb(230,98,34)" rx="2" ry="2" />
<text  x="601.69" y="415.5" ></text>
</g>
<g >
<title>Bitmap::Clear (5 samples, 0.06%)</title><rect x="769.8" y="357" width="0.7" height="15.0" fill="rgb(220,74,7)" rx="2" ry="2" />
<text  x="772.78" y="367.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (7 samples, 0.08%)</title><rect x="70.5" y="581" width="1.0" height="15.0" fill="rgb(246,226,50)" rx="2" ry="2" />
<text  x="73.52" y="591.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (1 samples, 0.01%)</title><rect x="27.0" y="469" width="0.1" height="15.0" fill="rgb(254,107,11)" rx="2" ry="2" />
<text  x="29.96" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (4 samples, 0.05%)</title><rect x="605.2" y="293" width="0.5" height="15.0" fill="rgb(228,172,1)" rx="2" ry="2" />
<text  x="608.17" y="303.5" ></text>
</g>
<g >
<title>Utils::DecodeUTF32 (8 samples, 0.09%)</title><rect x="883.8" y="453" width="1.1" height="15.0" fill="rgb(249,0,1)" rx="2" ry="2" />
<text  x="886.80" y="463.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.01%)</title><rect x="38.0" y="565" width="0.1" height="15.0" fill="rgb(221,105,32)" rx="2" ry="2" />
<text  x="40.99" y="575.5" ></text>
</g>
<g >
<title>Game_Map::GetNeedRefresh (10 samples, 0.12%)</title><rect x="44.5" y="677" width="1.3" height="15.0" fill="rgb(208,158,41)" rx="2" ry="2" />
<text  x="47.47" y="687.5" ></text>
</g>
<g >
<title>std::bitset&lt;36ul&gt;::_M_copy_to_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (4 samples, 0.05%)</title><rect x="352.2" y="533" width="0.5" height="15.0" fill="rgb(250,39,41)" rx="2" ry="2" />
<text  x="355.18" y="543.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="21.3" y="645" width="0.1" height="15.0" fill="rgb(221,194,45)" rx="2" ry="2" />
<text  x="24.31" y="655.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (2 samples, 0.02%)</title><rect x="323.1" y="421" width="0.3" height="15.0" fill="rgb(235,88,27)" rx="2" ry="2" />
<text  x="326.09" y="431.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (1 samples, 0.01%)</title><rect x="1173.5" y="309" width="0.1" height="15.0" fill="rgb(210,191,51)" rx="2" ry="2" />
<text  x="1176.46" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (3 samples, 0.04%)</title><rect x="605.3" y="261" width="0.4" height="15.0" fill="rgb(227,107,25)" rx="2" ry="2" />
<text  x="608.31" y="271.5" ></text>
</g>
<g >
<title>Game_Picture::Erase (2 samples, 0.02%)</title><rect x="550.9" y="469" width="0.2" height="15.0" fill="rgb(216,121,11)" rx="2" ry="2" />
<text  x="553.85" y="479.5" ></text>
</g>
<g >
<title>_int_free (4 samples, 0.05%)</title><rect x="114.2" y="677" width="0.6" height="15.0" fill="rgb(214,55,47)" rx="2" ry="2" />
<text  x="117.23" y="687.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="540.5" y="389" width="0.1" height="15.0" fill="rgb(231,217,17)" rx="2" ry="2" />
<text  x="543.51" y="399.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="802.7" y="165" width="0.2" height="15.0" fill="rgb(210,147,29)" rx="2" ry="2" />
<text  x="805.73" y="175.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (3 samples, 0.04%)</title><rect x="337.7" y="485" width="0.4" height="15.0" fill="rgb(237,198,53)" rx="2" ry="2" />
<text  x="340.71" y="495.5" ></text>
</g>
<g >
<title>__vfs_write (11 samples, 0.13%)</title><rect x="40.9" y="613" width="1.5" height="15.0" fill="rgb(206,119,23)" rx="2" ry="2" />
<text  x="43.88" y="623.5" ></text>
</g>
<g >
<title>fput (2 samples, 0.02%)</title><rect x="25.0" y="629" width="0.3" height="15.0" fill="rgb(240,210,9)" rx="2" ry="2" />
<text  x="28.03" y="639.5" ></text>
</g>
<g >
<title>Bitmap::width (27 samples, 0.32%)</title><rect x="970.2" y="469" width="3.8" height="15.0" fill="rgb(243,13,16)" rx="2" ry="2" />
<text  x="973.24" y="479.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.02%)</title><rect x="132.8" y="517" width="0.3" height="15.0" fill="rgb(239,107,27)" rx="2" ry="2" />
<text  x="135.84" y="527.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.01%)</title><rect x="993.5" y="261" width="0.2" height="15.0" fill="rgb(211,114,0)" rx="2" ry="2" />
<text  x="996.54" y="271.5" ></text>
</g>
<g >
<title>operator!= (6 samples, 0.07%)</title><rect x="329.9" y="501" width="0.8" height="15.0" fill="rgb(230,17,7)" rx="2" ry="2" />
<text  x="332.85" y="511.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (1 samples, 0.01%)</title><rect x="52.9" y="677" width="0.1" height="15.0" fill="rgb(229,7,50)" rx="2" ry="2" />
<text  x="55.88" y="687.5" ></text>
</g>
<g >
<title>irq_entries_start (1 samples, 0.01%)</title><rect x="1189.7" y="693" width="0.2" height="15.0" fill="rgb(234,68,12)" rx="2" ry="2" />
<text  x="1192.72" y="703.5" ></text>
</g>
<g >
<title>vfs_read (12 samples, 0.14%)</title><rect x="39.1" y="629" width="1.6" height="15.0" fill="rgb(251,204,0)" rx="2" ry="2" />
<text  x="42.09" y="639.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (6 samples, 0.07%)</title><rect x="816.0" y="309" width="0.8" height="15.0" fill="rgb(252,101,5)" rx="2" ry="2" />
<text  x="818.97" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.01%)</title><rect x="324.3" y="421" width="0.2" height="15.0" fill="rgb(248,26,33)" rx="2" ry="2" />
<text  x="327.34" y="431.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.01%)</title><rect x="640.6" y="165" width="0.1" height="15.0" fill="rgb(238,113,37)" rx="2" ry="2" />
<text  x="643.60" y="175.5" ></text>
</g>
<g >
<title>FileRequestAsync::SetGraphicFile (2 samples, 0.02%)</title><rect x="106.1" y="677" width="0.3" height="15.0" fill="rgb(226,217,14)" rx="2" ry="2" />
<text  x="109.09" y="687.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (31 samples, 0.36%)</title><rect x="67.4" y="677" width="4.2" height="15.0" fill="rgb(231,138,42)" rx="2" ry="2" />
<text  x="70.35" y="687.5" ></text>
</g>
<g >
<title>__libc_recvmsg (1 samples, 0.01%)</title><rect x="994.0" y="389" width="0.1" height="15.0" fill="rgb(234,219,15)" rx="2" ry="2" />
<text  x="996.95" y="399.5" ></text>
</g>
<g >
<title>clear_buddies (1 samples, 0.01%)</title><rect x="26.7" y="517" width="0.1" height="15.0" fill="rgb(234,198,48)" rx="2" ry="2" />
<text  x="29.68" y="527.5" ></text>
</g>
<g >
<title>remove_wait_queue (1 samples, 0.01%)</title><rect x="25.6" y="613" width="0.1" height="15.0" fill="rgb(209,168,10)" rx="2" ry="2" />
<text  x="28.58" y="623.5" ></text>
</g>
<g >
<title>Spriteset_Map::Update (2 samples, 0.02%)</title><rect x="989.0" y="549" width="0.3" height="15.0" fill="rgb(243,133,14)" rx="2" ry="2" />
<text  x="991.99" y="559.5" ></text>
</g>
<g >
<title>__glDispatchCheckMultithreaded (1 samples, 0.01%)</title><rect x="1174.8" y="517" width="0.2" height="15.0" fill="rgb(248,66,5)" rx="2" ry="2" />
<text  x="1177.83" y="527.5" ></text>
</g>
<g >
<title>__fdget (5 samples, 0.06%)</title><rect x="23.9" y="629" width="0.7" height="15.0" fill="rgb(237,99,43)" rx="2" ry="2" />
<text  x="26.92" y="639.5" ></text>
</g>
<g >
<title>Sprite::SetZoomY (1 samples, 0.01%)</title><rect x="59.2" y="677" width="0.2" height="15.0" fill="rgb(242,0,0)" rx="2" ry="2" />
<text  x="62.22" y="687.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (2 samples, 0.02%)</title><rect x="605.4" y="197" width="0.3" height="15.0" fill="rgb(216,70,7)" rx="2" ry="2" />
<text  x="608.45" y="207.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (16 samples, 0.19%)</title><rect x="615.1" y="277" width="2.2" height="15.0" fill="rgb(248,153,34)" rx="2" ry="2" />
<text  x="618.10" y="287.5" ></text>
</g>
<g >
<title>tcache_get (3 samples, 0.04%)</title><rect x="889.2" y="389" width="0.4" height="15.0" fill="rgb(245,77,4)" rx="2" ry="2" />
<text  x="892.18" y="399.5" ></text>
</g>
<g >
<title>_nv035658rm (1 samples, 0.01%)</title><rect x="453.1" y="469" width="0.1" height="15.0" fill="rgb(225,134,50)" rx="2" ry="2" />
<text  x="456.10" y="479.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (6 samples, 0.07%)</title><rect x="638.5" y="309" width="0.9" height="15.0" fill="rgb(236,113,31)" rx="2" ry="2" />
<text  x="641.53" y="319.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (4,083 samples, 47.70%)</title><rect x="391.8" y="501" width="562.9" height="15.0" fill="rgb(224,214,5)" rx="2" ry="2" />
<text  x="394.75" y="511.5" >Game_Interpreter::Update</text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="802.7" y="133" width="0.2" height="15.0" fill="rgb(245,44,51)" rx="2" ry="2" />
<text  x="805.73" y="143.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="132.8" y="533" width="0.3" height="15.0" fill="rgb(229,218,35)" rx="2" ry="2" />
<text  x="135.84" y="543.5" ></text>
</g>
<g >
<title>ktime_get_raw_ts64 (1 samples, 0.01%)</title><rect x="351.6" y="437" width="0.2" height="15.0" fill="rgb(236,180,28)" rx="2" ry="2" />
<text  x="354.63" y="447.5" ></text>
</g>
<g >
<title>SDL_Delay_REAL (23 samples, 0.27%)</title><rect x="352.9" y="565" width="3.1" height="15.0" fill="rgb(250,94,9)" rx="2" ry="2" />
<text  x="355.87" y="575.5" ></text>
</g>
<g >
<title>std::replace&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (40 samples, 0.47%)</title><rect x="606.1" y="325" width="5.5" height="15.0" fill="rgb(244,45,11)" rx="2" ry="2" />
<text  x="609.14" y="335.5" ></text>
</g>
<g >
<title>Window::Draw (1 samples, 0.01%)</title><rect x="59.4" y="677" width="0.1" height="15.0" fill="rgb(210,225,32)" rx="2" ry="2" />
<text  x="62.36" y="687.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (50 samples, 0.58%)</title><rect x="1166.7" y="357" width="6.9" height="15.0" fill="rgb(205,30,12)" rx="2" ry="2" />
<text  x="1169.70" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (26 samples, 0.30%)</title><rect x="886.4" y="437" width="3.6" height="15.0" fill="rgb(206,24,50)" rx="2" ry="2" />
<text  x="889.42" y="447.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (2 samples, 0.02%)</title><rect x="645.2" y="245" width="0.2" height="15.0" fill="rgb(222,65,25)" rx="2" ry="2" />
<text  x="648.15" y="255.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="1187.0" y="517" width="0.1" height="15.0" fill="rgb(242,132,21)" rx="2" ry="2" />
<text  x="1189.97" y="527.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="861.3" y="437" width="0.2" height="15.0" fill="rgb(206,81,46)" rx="2" ry="2" />
<text  x="864.33" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (3 samples, 0.04%)</title><rect x="617.4" y="309" width="0.5" height="15.0" fill="rgb(235,212,48)" rx="2" ry="2" />
<text  x="620.44" y="319.5" ></text>
</g>
<g >
<title>pipe_write (3 samples, 0.04%)</title><rect x="42.0" y="581" width="0.4" height="15.0" fill="rgb(239,44,3)" rx="2" ry="2" />
<text  x="44.99" y="591.5" ></text>
</g>
<g >
<title>std::mersenne_twister_engine&lt;unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul&gt;::operator() (1 samples, 0.01%)</title><rect x="548.5" y="421" width="0.1" height="15.0" fill="rgb(234,53,2)" rx="2" ry="2" />
<text  x="551.51" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (13 samples, 0.15%)</title><rect x="640.7" y="277" width="1.8" height="15.0" fill="rgb(206,193,41)" rx="2" ry="2" />
<text  x="643.74" y="287.5" ></text>
</g>
<g >
<title>Game_Map::UpdateProcessedFlags (1 samples, 0.01%)</title><rect x="958.1" y="517" width="0.1" height="15.0" fill="rgb(218,139,10)" rx="2" ry="2" />
<text  x="961.11" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2 samples, 0.02%)</title><rect x="642.3" y="197" width="0.2" height="15.0" fill="rgb(217,74,2)" rx="2" ry="2" />
<text  x="645.26" y="207.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.01%)</title><rect x="991.2" y="421" width="0.1" height="15.0" fill="rgb(222,89,49)" rx="2" ry="2" />
<text  x="994.20" y="431.5" ></text>
</g>
<g >
<title>pixman_image_get_height@plt (1 samples, 0.01%)</title><rect x="982.4" y="485" width="0.1" height="15.0" fill="rgb(224,72,13)" rx="2" ry="2" />
<text  x="985.37" y="495.5" ></text>
</g>
<g >
<title>Game_Screen::GetPicture (1 samples, 0.01%)</title><rect x="563.3" y="469" width="0.1" height="15.0" fill="rgb(237,214,15)" rx="2" ry="2" />
<text  x="566.26" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (2 samples, 0.02%)</title><rect x="51.8" y="677" width="0.2" height="15.0" fill="rgb(214,186,21)" rx="2" ry="2" />
<text  x="54.77" y="687.5" ></text>
</g>
<g >
<title>pixman_region32_init (1 samples, 0.01%)</title><rect x="323.2" y="405" width="0.2" height="15.0" fill="rgb(248,67,34)" rx="2" ry="2" />
<text  x="326.23" y="415.5" ></text>
</g>
<g >
<title>interrupt_entry (1 samples, 0.01%)</title><rect x="1162.4" y="469" width="0.2" height="15.0" fill="rgb(241,65,6)" rx="2" ry="2" />
<text  x="1165.43" y="479.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (10 samples, 0.12%)</title><rect x="639.4" y="309" width="1.3" height="15.0" fill="rgb(232,133,20)" rx="2" ry="2" />
<text  x="642.36" y="319.5" ></text>
</g>
<g >
<title>ksys_read (13 samples, 0.15%)</title><rect x="39.0" y="645" width="1.7" height="15.0" fill="rgb(225,194,43)" rx="2" ry="2" />
<text  x="41.95" y="655.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="941.4" y="437" width="0.3" height="15.0" fill="rgb(216,125,33)" rx="2" ry="2" />
<text  x="944.43" y="447.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (128 samples, 1.50%)</title><rect x="618.5" y="293" width="17.7" height="15.0" fill="rgb(242,125,20)" rx="2" ry="2" />
<text  x="621.54" y="303.5" ></text>
</g>
<g >
<title>[libGLX_nvidia.so.390.116] (56 samples, 0.65%)</title><rect x="65.3" y="693" width="7.7" height="15.0" fill="rgb(247,142,19)" rx="2" ry="2" />
<text  x="68.28" y="703.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Set (7 samples, 0.08%)</title><rect x="56.2" y="677" width="1.0" height="15.0" fill="rgb(253,194,9)" rx="2" ry="2" />
<text  x="59.19" y="687.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="540.5" y="405" width="0.1" height="15.0" fill="rgb(209,195,24)" rx="2" ry="2" />
<text  x="543.51" y="415.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**&gt; (2 samples, 0.02%)</title><rect x="350.1" y="421" width="0.3" height="15.0" fill="rgb(239,89,1)" rx="2" ry="2" />
<text  x="353.12" y="431.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.01%)</title><rect x="355.8" y="389" width="0.1" height="15.0" fill="rgb(208,0,6)" rx="2" ry="2" />
<text  x="358.77" y="399.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="769.0" y="261" width="0.1" height="15.0" fill="rgb(253,22,54)" rx="2" ry="2" />
<text  x="771.96" y="271.5" ></text>
</g>
<g >
<title>Sprite::GetZ (1 samples, 0.01%)</title><rect x="346.4" y="389" width="0.1" height="15.0" fill="rgb(227,114,22)" rx="2" ry="2" />
<text  x="349.39" y="399.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (18 samples, 0.21%)</title><rect x="814.3" y="341" width="2.5" height="15.0" fill="rgb(213,83,30)" rx="2" ry="2" />
<text  x="817.31" y="351.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (40 samples, 0.47%)</title><rect x="875.5" y="373" width="5.5" height="15.0" fill="rgb(237,130,51)" rx="2" ry="2" />
<text  x="878.53" y="383.5" ></text>
</g>
<g >
<title>SDLAudioP2 (241 samples, 2.82%)</title><rect x="10.0" y="709" width="33.2" height="15.0" fill="rgb(238,25,18)" rx="2" ry="2" />
<text  x="13.00" y="719.5" >SD..</text>
</g>
<g >
<title>__libc_calloc (2 samples, 0.02%)</title><rect x="113.8" y="677" width="0.3" height="15.0" fill="rgb(245,12,10)" rx="2" ry="2" />
<text  x="116.81" y="687.5" ></text>
</g>
<g >
<title>__libc_recvmsg (3 samples, 0.04%)</title><rect x="990.2" y="389" width="0.4" height="15.0" fill="rgb(228,208,44)" rx="2" ry="2" />
<text  x="993.23" y="399.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (1 samples, 0.01%)</title><rect x="63.8" y="677" width="0.1" height="15.0" fill="rgb(252,181,37)" rx="2" ry="2" />
<text  x="66.77" y="687.5" ></text>
</g>
<g >
<title>Sprite::Flash (1 samples, 0.01%)</title><rect x="811.8" y="373" width="0.2" height="15.0" fill="rgb(240,146,20)" rx="2" ry="2" />
<text  x="814.83" y="383.5" ></text>
</g>
<g >
<title>Game_Picture::ShowParams::~ShowParams (6 samples, 0.07%)</title><rect x="881.2" y="469" width="0.8" height="15.0" fill="rgb(205,184,3)" rx="2" ry="2" />
<text  x="884.18" y="479.5" ></text>
</g>
<g >
<title>__fget (4 samples, 0.05%)</title><rect x="24.1" y="597" width="0.5" height="15.0" fill="rgb(224,81,8)" rx="2" ry="2" />
<text  x="27.06" y="607.5" ></text>
</g>
<g >
<title>Sprite::SetOx (4 samples, 0.05%)</title><rect x="58.3" y="677" width="0.5" height="15.0" fill="rgb(241,109,7)" rx="2" ry="2" />
<text  x="61.25" y="687.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (2 samples, 0.02%)</title><rect x="273.2" y="453" width="0.3" height="15.0" fill="rgb(244,42,9)" rx="2" ry="2" />
<text  x="276.19" y="463.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (2 samples, 0.02%)</title><rect x="993.5" y="389" width="0.3" height="15.0" fill="rgb(243,134,36)" rx="2" ry="2" />
<text  x="996.54" y="399.5" ></text>
</g>
<g >
<title>[[stack]] (85 samples, 0.99%)</title><rect x="52.3" y="693" width="11.7" height="15.0" fill="rgb(206,41,53)" rx="2" ry="2" />
<text  x="55.33" y="703.5" ></text>
</g>
<g >
<title>PicPointerPatch::ReplaceName (9 samples, 0.11%)</title><rect x="883.8" y="469" width="1.2" height="15.0" fill="rgb(248,173,4)" rx="2" ry="2" />
<text  x="886.80" y="479.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.01%)</title><rect x="883.8" y="405" width="0.1" height="15.0" fill="rgb(240,107,1)" rx="2" ry="2" />
<text  x="886.80" y="415.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="802.0" y="149" width="0.2" height="15.0" fill="rgb(232,121,7)" rx="2" ry="2" />
<text  x="805.04" y="159.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (3 samples, 0.04%)</title><rect x="561.6" y="453" width="0.4" height="15.0" fill="rgb(229,178,29)" rx="2" ry="2" />
<text  x="564.60" y="463.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (2 samples, 0.02%)</title><rect x="44.2" y="677" width="0.3" height="15.0" fill="rgb(230,47,27)" rx="2" ry="2" />
<text  x="47.19" y="687.5" ></text>
</g>
<g >
<title>Bitmap::pitch (1 samples, 0.01%)</title><rect x="770.1" y="341" width="0.1" height="15.0" fill="rgb(205,35,18)" rx="2" ry="2" />
<text  x="773.06" y="351.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (1 samples, 0.01%)</title><rect x="39.1" y="549" width="0.1" height="15.0" fill="rgb(219,63,12)" rx="2" ry="2" />
<text  x="42.09" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (29 samples, 0.34%)</title><rect x="576.2" y="389" width="4.0" height="15.0" fill="rgb(225,178,41)" rx="2" ry="2" />
<text  x="579.22" y="399.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (128 samples, 1.50%)</title><rect x="618.5" y="261" width="17.7" height="15.0" fill="rgb(230,200,32)" rx="2" ry="2" />
<text  x="621.54" y="271.5" ></text>
</g>
<g >
<title>all (8,559 samples, 100%)</title><rect x="10.0" y="725" width="1180.0" height="15.0" fill="rgb(236,18,2)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>AsyncNext&lt;Scene_Map::UpdateStage1(MapUpdateAsyncContext)::&lt;lambda()&gt; &gt; (3 samples, 0.04%)</title><rect x="988.2" y="533" width="0.4" height="15.0" fill="rgb(248,60,39)" rx="2" ry="2" />
<text  x="991.16" y="543.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_ios (1 samples, 0.01%)</title><rect x="886.1" y="437" width="0.2" height="15.0" fill="rgb(254,0,9)" rx="2" ry="2" />
<text  x="889.14" y="447.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (15 samples, 0.18%)</title><rect x="593.9" y="325" width="2.0" height="15.0" fill="rgb(205,48,20)" rx="2" ry="2" />
<text  x="596.86" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (4 samples, 0.05%)</title><rect x="352.2" y="517" width="0.5" height="15.0" fill="rgb(234,169,44)" rx="2" ry="2" />
<text  x="355.18" y="527.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (4 samples, 0.05%)</title><rect x="42.7" y="693" width="0.5" height="15.0" fill="rgb(224,205,17)" rx="2" ry="2" />
<text  x="45.67" y="703.5" ></text>
</g>
<g >
<title>__wake_up_common (7 samples, 0.08%)</title><rect x="40.9" y="565" width="0.9" height="15.0" fill="rgb(210,86,16)" rx="2" ry="2" />
<text  x="43.88" y="575.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.01%)</title><rect x="993.7" y="341" width="0.1" height="15.0" fill="rgb(210,68,42)" rx="2" ry="2" />
<text  x="996.68" y="351.5" ></text>
</g>
<g >
<title>Graphics::GlobalDraw (1 samples, 0.01%)</title><rect x="139.5" y="549" width="0.1" height="15.0" fill="rgb(234,221,33)" rx="2" ry="2" />
<text  x="142.46" y="559.5" ></text>
</g>
<g >
<title>AsyncHandler::IsImportantFilePending (144 samples, 1.68%)</title><rect x="118.1" y="581" width="19.8" height="15.0" fill="rgb(228,7,30)" rx="2" ry="2" />
<text  x="121.09" y="591.5" ></text>
</g>
<g >
<title>Sprite_Character::Update (2 samples, 0.02%)</title><rect x="989.0" y="533" width="0.3" height="15.0" fill="rgb(221,25,17)" rx="2" ry="2" />
<text  x="991.99" y="543.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 2ul, 3ul&gt;::__less (3 samples, 0.04%)</title><rect x="636.2" y="245" width="0.4" height="15.0" fill="rgb(209,57,17)" rx="2" ry="2" />
<text  x="639.19" y="255.5" ></text>
</g>
<g >
<title>operator== (6 samples, 0.07%)</title><rect x="329.9" y="485" width="0.8" height="15.0" fill="rgb(220,135,34)" rx="2" ry="2" />
<text  x="332.85" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (79 samples, 0.92%)</title><rect x="585.6" y="389" width="10.9" height="15.0" fill="rgb(243,109,44)" rx="2" ry="2" />
<text  x="588.59" y="399.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (3 samples, 0.04%)</title><rect x="333.8" y="469" width="0.5" height="15.0" fill="rgb(207,84,31)" rx="2" ry="2" />
<text  x="336.85" y="479.5" ></text>
</g>
<g >
<title>__GI___libc_free (2 samples, 0.02%)</title><rect x="60.3" y="677" width="0.3" height="15.0" fill="rgb(220,148,28)" rx="2" ry="2" />
<text  x="63.32" y="687.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="861.3" y="389" width="0.2" height="15.0" fill="rgb(237,76,31)" rx="2" ry="2" />
<text  x="864.33" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, unsigned long, true&gt;::_S_equals (30 samples, 0.35%)</title><rect x="589.6" y="325" width="4.1" height="15.0" fill="rgb(235,7,26)" rx="2" ry="2" />
<text  x="592.59" y="335.5" ></text>
</g>
<g >
<title>LoadBitmap (1 samples, 0.01%)</title><rect x="988.7" y="421" width="0.2" height="15.0" fill="rgb(237,139,50)" rx="2" ry="2" />
<text  x="991.71" y="431.5" ></text>
</g>
<g >
<title>Tone::Tone (3 samples, 0.04%)</title><rect x="974.2" y="469" width="0.5" height="15.0" fill="rgb(214,127,46)" rx="2" ry="2" />
<text  x="977.24" y="479.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="935.9" y="421" width="0.1" height="15.0" fill="rgb(210,130,14)" rx="2" ry="2" />
<text  x="938.91" y="431.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, Drawable**, Drawable**&gt; (1 samples, 0.01%)</title><rect x="348.2" y="405" width="0.1" height="15.0" fill="rgb(209,34,20)" rx="2" ry="2" />
<text  x="351.19" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="60.6" y="677" width="0.4" height="15.0" fill="rgb(245,72,12)" rx="2" ry="2" />
<text  x="63.60" y="687.5" ></text>
</g>
<g >
<title>XextFindDisplay (1 samples, 0.01%)</title><rect x="43.6" y="693" width="0.2" height="15.0" fill="rgb(236,151,41)" rx="2" ry="2" />
<text  x="46.64" y="703.5" ></text>
</g>
<g >
<title>__GI___getpid (1 samples, 0.01%)</title><rect x="1174.3" y="469" width="0.1" height="15.0" fill="rgb(215,115,7)" rx="2" ry="2" />
<text  x="1177.28" y="479.5" ></text>
</g>
<g >
<title>Sprite::BlitScreen (1,402 samples, 16.38%)</title><rect x="141.0" y="533" width="193.3" height="15.0" fill="rgb(219,165,42)" rx="2" ry="2" />
<text  x="143.97" y="543.5" >Sprite::BlitScreen</text>
</g>
<g >
<title>__atomic_add (8 samples, 0.09%)</title><rect x="332.3" y="421" width="1.1" height="15.0" fill="rgb(213,206,42)" rx="2" ry="2" />
<text  x="335.33" y="431.5" ></text>
</g>
<g >
<title>pixman_transform_point_3d (14 samples, 0.16%)</title><rect x="320.9" y="421" width="1.9" height="15.0" fill="rgb(246,39,21)" rx="2" ry="2" />
<text  x="323.89" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::get (1 samples, 0.01%)</title><rect x="857.6" y="389" width="0.1" height="15.0" fill="rgb(209,105,6)" rx="2" ry="2" />
<text  x="860.60" y="399.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="21.3" y="677" width="0.1" height="15.0" fill="rgb(229,79,2)" rx="2" ry="2" />
<text  x="24.31" y="687.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="348.2" y="421" width="0.1" height="15.0" fill="rgb(228,99,15)" rx="2" ry="2" />
<text  x="351.19" y="431.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (124 samples, 1.45%)</title><rect x="600.8" y="357" width="17.1" height="15.0" fill="rgb(239,36,10)" rx="2" ry="2" />
<text  x="603.76" y="367.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (4 samples, 0.05%)</title><rect x="857.9" y="437" width="0.5" height="15.0" fill="rgb(207,174,33)" rx="2" ry="2" />
<text  x="860.88" y="447.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::~_Head_base (10 samples, 0.12%)</title><rect x="642.5" y="293" width="1.4" height="15.0" fill="rgb(232,119,26)" rx="2" ry="2" />
<text  x="645.53" y="303.5" ></text>
</g>
<g >
<title>find (149 samples, 1.74%)</title><rect x="617.9" y="341" width="20.5" height="15.0" fill="rgb(248,208,11)" rx="2" ry="2" />
<text  x="620.85" y="351.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.01%)</title><rect x="597.4" y="341" width="0.2" height="15.0" fill="rgb(251,16,10)" rx="2" ry="2" />
<text  x="600.45" y="351.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (77 samples, 0.90%)</title><rect x="1163.0" y="453" width="10.6" height="15.0" fill="rgb(224,31,21)" rx="2" ry="2" />
<text  x="1165.98" y="463.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (1 samples, 0.01%)</title><rect x="115.7" y="661" width="0.2" height="15.0" fill="rgb(233,4,47)" rx="2" ry="2" />
<text  x="118.74" y="671.5" ></text>
</g>
<g >
<title>Sprite::GetBitmap (1 samples, 0.01%)</title><rect x="58.1" y="677" width="0.2" height="15.0" fill="rgb(251,195,33)" rx="2" ry="2" />
<text  x="61.12" y="687.5" ></text>
</g>
<g >
<title>pick_next_task_rt (1 samples, 0.01%)</title><rect x="453.2" y="389" width="0.2" height="15.0" fill="rgb(234,104,40)" rx="2" ry="2" />
<text  x="456.24" y="399.5" ></text>
</g>
<g >
<title>operator!= (1 samples, 0.01%)</title><rect x="870.3" y="405" width="0.1" height="15.0" fill="rgb(254,201,31)" rx="2" ry="2" />
<text  x="873.29" y="415.5" ></text>
</g>
<g >
<title>_M_lower_bound (1 samples, 0.01%)</title><rect x="988.7" y="373" width="0.2" height="15.0" fill="rgb(213,52,24)" rx="2" ry="2" />
<text  x="991.71" y="383.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="614.3" y="245" width="0.1" height="15.0" fill="rgb(252,161,6)" rx="2" ry="2" />
<text  x="617.27" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (14 samples, 0.16%)</title><rect x="585.6" y="357" width="1.9" height="15.0" fill="rgb(214,215,13)" rx="2" ry="2" />
<text  x="588.59" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (10 samples, 0.12%)</title><rect x="639.4" y="277" width="1.3" height="15.0" fill="rgb(231,84,18)" rx="2" ry="2" />
<text  x="642.36" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (11 samples, 0.13%)</title><rect x="613.6" y="277" width="1.5" height="15.0" fill="rgb(230,164,20)" rx="2" ry="2" />
<text  x="616.58" y="287.5" ></text>
</g>
<g >
<title>find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int&gt; &gt;, Input::UiSource::Update()::&lt;lambda(int)&gt; &gt; (1 samples, 0.01%)</title><rect x="352.0" y="501" width="0.2" height="15.0" fill="rgb(219,76,38)" rx="2" ry="2" />
<text  x="355.05" y="511.5" ></text>
</g>
<g >
<title>pixman_image_get_height (9 samples, 0.11%)</title><rect x="331.0" y="501" width="1.2" height="15.0" fill="rgb(231,195,12)" rx="2" ry="2" />
<text  x="333.95" y="511.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="272.8" y="421" width="0.2" height="15.0" fill="rgb(224,71,36)" rx="2" ry="2" />
<text  x="275.77" y="431.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.01%)</title><rect x="886.3" y="437" width="0.1" height="15.0" fill="rgb(232,20,11)" rx="2" ry="2" />
<text  x="889.28" y="447.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.01%)</title><rect x="42.3" y="549" width="0.1" height="15.0" fill="rgb(205,207,39)" rx="2" ry="2" />
<text  x="45.26" y="559.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (2 samples, 0.02%)</title><rect x="806.7" y="357" width="0.3" height="15.0" fill="rgb(236,9,14)" rx="2" ry="2" />
<text  x="809.73" y="367.5" ></text>
</g>
<g >
<title>Game_Character::IsProcessed (1 samples, 0.01%)</title><rect x="958.4" y="517" width="0.1" height="15.0" fill="rgb(205,43,39)" rx="2" ry="2" />
<text  x="961.38" y="527.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (1 samples, 0.01%)</title><rect x="50.0" y="677" width="0.1" height="15.0" fill="rgb(205,40,9)" rx="2" ry="2" />
<text  x="52.98" y="687.5" ></text>
</g>
<g >
<title>operator== (1 samples, 0.01%)</title><rect x="870.3" y="389" width="0.1" height="15.0" fill="rgb(212,166,38)" rx="2" ry="2" />
<text  x="873.29" y="399.5" ></text>
</g>
<g >
<title>tcache_get (2 samples, 0.02%)</title><rect x="604.5" y="229" width="0.3" height="15.0" fill="rgb(212,206,33)" rx="2" ry="2" />
<text  x="607.48" y="239.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (5 samples, 0.06%)</title><rect x="990.2" y="437" width="0.7" height="15.0" fill="rgb(247,147,21)" rx="2" ry="2" />
<text  x="993.23" y="447.5" ></text>
</g>
<g >
<title>SDL_RenderPresent_REAL (2 samples, 0.02%)</title><rect x="386.2" y="565" width="0.3" height="15.0" fill="rgb(237,131,5)" rx="2" ry="2" />
<text  x="389.24" y="575.5" ></text>
</g>
<g >
<title>pixman_transform_point (44 samples, 0.51%)</title><rect x="314.4" y="405" width="6.1" height="15.0" fill="rgb(210,211,51)" rx="2" ry="2" />
<text  x="317.41" y="415.5" ></text>
</g>
<g >
<title>pixman_region32_init (1 samples, 0.01%)</title><rect x="51.5" y="677" width="0.1" height="15.0" fill="rgb(244,154,47)" rx="2" ry="2" />
<text  x="54.50" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;Drawable**, Drawable**&gt; (5 samples, 0.06%)</title><rect x="350.5" y="469" width="0.7" height="15.0" fill="rgb(239,156,5)" rx="2" ry="2" />
<text  x="353.53" y="479.5" ></text>
</g>
<g >
<title>pixman_image_get_data@plt (1 samples, 0.01%)</title><rect x="770.5" y="341" width="0.1" height="15.0" fill="rgb(235,123,46)" rx="2" ry="2" />
<text  x="773.47" y="351.5" ></text>
</g>
<g >
<title>Bitmap::pixels (1 samples, 0.01%)</title><rect x="770.5" y="357" width="0.1" height="15.0" fill="rgb(248,73,51)" rx="2" ry="2" />
<text  x="773.47" y="367.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (6 samples, 0.07%)</title><rect x="350.4" y="485" width="0.8" height="15.0" fill="rgb(208,32,15)" rx="2" ry="2" />
<text  x="353.39" y="495.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="988.7" y="261" width="0.2" height="15.0" fill="rgb(246,70,21)" rx="2" ry="2" />
<text  x="991.71" y="271.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="379.6" y="485" width="0.2" height="15.0" fill="rgb(241,222,8)" rx="2" ry="2" />
<text  x="382.62" y="495.5" ></text>
</g>
<g >
<title>RPG::SavePicture::~SavePicture (1 samples, 0.01%)</title><rect x="988.0" y="485" width="0.2" height="15.0" fill="rgb(229,201,11)" rx="2" ry="2" />
<text  x="991.03" y="495.5" ></text>
</g>
<g >
<title>__update_load_avg_se (1 samples, 0.01%)</title><rect x="41.4" y="437" width="0.2" height="15.0" fill="rgb(219,179,43)" rx="2" ry="2" />
<text  x="44.43" y="447.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="614.3" y="229" width="0.1" height="15.0" fill="rgb(247,222,11)" rx="2" ry="2" />
<text  x="617.27" y="239.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="593.6" y="213" width="0.1" height="15.0" fill="rgb(220,71,50)" rx="2" ry="2" />
<text  x="596.59" y="223.5" ></text>
</g>
<g >
<title>put_timespec64 (12 samples, 0.14%)</title><rect x="378.0" y="469" width="1.6" height="15.0" fill="rgb(208,150,25)" rx="2" ry="2" />
<text  x="380.97" y="479.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1187.0" y="597" width="0.1" height="15.0" fill="rgb(226,186,28)" rx="2" ry="2" />
<text  x="1189.97" y="607.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (1 samples, 0.01%)</title><rect x="807.1" y="357" width="0.2" height="15.0" fill="rgb(214,157,32)" rx="2" ry="2" />
<text  x="810.14" y="367.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (4 samples, 0.05%)</title><rect x="346.0" y="405" width="0.5" height="15.0" fill="rgb(252,16,13)" rx="2" ry="2" />
<text  x="348.98" y="415.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="593.6" y="149" width="0.1" height="15.0" fill="rgb(207,108,17)" rx="2" ry="2" />
<text  x="596.59" y="159.5" ></text>
</g>
<g >
<title>AsyncHandler::IsImportantFilePending (3 samples, 0.04%)</title><rect x="988.2" y="517" width="0.4" height="15.0" fill="rgb(215,28,41)" rx="2" ry="2" />
<text  x="991.16" y="527.5" ></text>
</g>
<g >
<title>Transition::IsErased (1 samples, 0.01%)</title><rect x="48.5" y="677" width="0.1" height="15.0" fill="rgb(248,150,37)" rx="2" ry="2" />
<text  x="51.46" y="687.5" ></text>
</g>
<g >
<title>SDL_GetTicks_REAL (1 samples, 0.01%)</title><rect x="43.2" y="693" width="0.2" height="15.0" fill="rgb(211,200,5)" rx="2" ry="2" />
<text  x="46.23" y="703.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustParams (2 samples, 0.02%)</title><rect x="47.2" y="677" width="0.3" height="15.0" fill="rgb(245,64,5)" rx="2" ry="2" />
<text  x="50.22" y="687.5" ></text>
</g>
<g >
<title>Transition::IsActive (5 samples, 0.06%)</title><rect x="1186.4" y="613" width="0.7" height="15.0" fill="rgb(250,162,20)" rx="2" ry="2" />
<text  x="1189.42" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (5 samples, 0.06%)</title><rect x="881.2" y="389" width="0.7" height="15.0" fill="rgb(249,74,10)" rx="2" ry="2" />
<text  x="884.18" y="399.5" ></text>
</g>
<g >
<title>poll (1 samples, 0.01%)</title><rect x="993.4" y="453" width="0.1" height="15.0" fill="rgb(234,130,31)" rx="2" ry="2" />
<text  x="996.40" y="463.5" ></text>
</g>
<g >
<title>Graphics::LocalDraw (1,535 samples, 17.93%)</title><rect x="139.6" y="549" width="211.6" height="15.0" fill="rgb(219,128,38)" rx="2" ry="2" />
<text  x="142.59" y="559.5" >Graphics::LocalDraw</text>
</g>
<g >
<title>select_task_rq_fair (1 samples, 0.01%)</title><rect x="40.9" y="517" width="0.1" height="15.0" fill="rgb(211,52,19)" rx="2" ry="2" />
<text  x="43.88" y="527.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (6 samples, 0.07%)</title><rect x="638.5" y="277" width="0.9" height="15.0" fill="rgb(211,78,20)" rx="2" ry="2" />
<text  x="641.53" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (1 samples, 0.01%)</title><rect x="429.7" y="453" width="0.1" height="15.0" fill="rgb(240,95,9)" rx="2" ry="2" />
<text  x="432.67" y="463.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="357.6" y="453" width="0.1" height="15.0" fill="rgb(237,77,3)" rx="2" ry="2" />
<text  x="360.56" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (45 samples, 0.53%)</title><rect x="587.5" y="357" width="6.2" height="15.0" fill="rgb(245,217,29)" rx="2" ry="2" />
<text  x="590.52" y="367.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (6 samples, 0.07%)</title><rect x="333.4" y="485" width="0.9" height="15.0" fill="rgb(245,167,42)" rx="2" ry="2" />
<text  x="336.43" y="495.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="603.1" y="261" width="0.3" height="15.0" fill="rgb(252,18,10)" rx="2" ry="2" />
<text  x="606.10" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (4 samples, 0.05%)</title><rect x="617.3" y="341" width="0.6" height="15.0" fill="rgb(205,169,43)" rx="2" ry="2" />
<text  x="620.30" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (22 samples, 0.26%)</title><rect x="353.0" y="517" width="3.0" height="15.0" fill="rgb(210,177,31)" rx="2" ry="2" />
<text  x="356.01" y="527.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (15 samples, 0.18%)</title><rect x="353.7" y="405" width="2.1" height="15.0" fill="rgb(252,167,30)" rx="2" ry="2" />
<text  x="356.70" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::end (1 samples, 0.01%)</title><rect x="601.4" y="325" width="0.2" height="15.0" fill="rgb(239,30,22)" rx="2" ry="2" />
<text  x="604.45" y="335.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.02%)</title><rect x="72.0" y="597" width="0.3" height="15.0" fill="rgb(226,127,44)" rx="2" ry="2" />
<text  x="75.04" y="607.5" ></text>
</g>
<g >
<title>_nv029793rm (1 samples, 0.01%)</title><rect x="956.2" y="501" width="0.1" height="15.0" fill="rgb(234,157,9)" rx="2" ry="2" />
<text  x="959.18" y="511.5" ></text>
</g>
<g >
<title>Game_Interpreter::ValueOrVariable (3 samples, 0.04%)</title><rect x="570.7" y="453" width="0.4" height="15.0" fill="rgb(250,51,2)" rx="2" ry="2" />
<text  x="573.70" y="463.5" ></text>
</g>
<g >
<title>std::stable_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, bool (*)(Drawable const*, Drawable const*)&gt; (68 samples, 0.79%)</title><rect x="341.8" y="533" width="9.4" height="15.0" fill="rgb(254,90,13)" rx="2" ry="2" />
<text  x="344.84" y="543.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (154 samples, 1.80%)</title><rect x="835.5" y="357" width="21.3" height="15.0" fill="rgb(230,126,53)" rx="2" ry="2" />
<text  x="838.55" y="367.5" ></text>
</g>
<g >
<title>put_prev_task_fair (1 samples, 0.01%)</title><rect x="453.2" y="373" width="0.2" height="15.0" fill="rgb(234,133,13)" rx="2" ry="2" />
<text  x="456.24" y="383.5" ></text>
</g>
<g >
<title>native_write_msr (15 samples, 0.18%)</title><rect x="353.7" y="325" width="2.1" height="15.0" fill="rgb(230,139,11)" rx="2" ry="2" />
<text  x="356.70" y="335.5" ></text>
</g>
<g >
<title>[libGLX.so.0.0.0] (7 samples, 0.08%)</title><rect x="1173.9" y="517" width="0.9" height="15.0" fill="rgb(217,185,30)" rx="2" ry="2" />
<text  x="1176.87" y="527.5" ></text>
</g>
<g >
<title>Blend (5 samples, 0.06%)</title><rect x="974.0" y="485" width="0.7" height="15.0" fill="rgb(207,154,30)" rx="2" ry="2" />
<text  x="976.96" y="495.5" ></text>
</g>
<g >
<title>read_tsc (5 samples, 0.06%)</title><rect x="376.0" y="437" width="0.7" height="15.0" fill="rgb(245,7,46)" rx="2" ry="2" />
<text  x="379.04" y="447.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (1 samples, 0.01%)</title><rect x="324.3" y="437" width="0.2" height="15.0" fill="rgb(232,101,15)" rx="2" ry="2" />
<text  x="327.34" y="447.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="21.3" y="661" width="0.1" height="15.0" fill="rgb(237,178,29)" rx="2" ry="2" />
<text  x="24.31" y="671.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.04%)</title><rect x="61.7" y="677" width="0.4" height="15.0" fill="rgb(213,111,11)" rx="2" ry="2" />
<text  x="64.70" y="687.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (4 samples, 0.05%)</title><rect x="272.2" y="437" width="0.6" height="15.0" fill="rgb(222,137,35)" rx="2" ry="2" />
<text  x="275.22" y="447.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.01%)</title><rect x="990.5" y="293" width="0.1" height="15.0" fill="rgb(246,87,47)" rx="2" ry="2" />
<text  x="993.51" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (28 samples, 0.33%)</title><rect x="576.2" y="373" width="3.9" height="15.0" fill="rgb(245,226,48)" rx="2" ry="2" />
<text  x="579.22" y="383.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.01%)</title><rect x="987.6" y="341" width="0.1" height="15.0" fill="rgb(248,217,50)" rx="2" ry="2" />
<text  x="990.61" y="351.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (6 samples, 0.07%)</title><rect x="837.1" y="293" width="0.8" height="15.0" fill="rgb(236,123,51)" rx="2" ry="2" />
<text  x="840.06" y="303.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (1 samples, 0.01%)</title><rect x="990.1" y="469" width="0.1" height="15.0" fill="rgb(219,133,7)" rx="2" ry="2" />
<text  x="993.09" y="479.5" ></text>
</g>
<g >
<title>SDL_GetTicks@plt (1 samples, 0.01%)</title><rect x="356.2" y="565" width="0.1" height="15.0" fill="rgb(219,41,21)" rx="2" ry="2" />
<text  x="359.18" y="575.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="593.6" y="245" width="0.1" height="15.0" fill="rgb(215,39,11)" rx="2" ry="2" />
<text  x="596.59" y="255.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.01%)</title><rect x="987.6" y="309" width="0.1" height="15.0" fill="rgb(243,70,5)" rx="2" ry="2" />
<text  x="990.61" y="319.5" ></text>
</g>
<g >
<title>task_tick_fair (2 samples, 0.02%)</title><rect x="272.8" y="309" width="0.2" height="15.0" fill="rgb(237,12,50)" rx="2" ry="2" />
<text  x="275.77" y="319.5" ></text>
</g>
<g >
<title>find_next_bit (1 samples, 0.01%)</title><rect x="21.3" y="613" width="0.1" height="15.0" fill="rgb(226,94,22)" rx="2" ry="2" />
<text  x="24.31" y="623.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="540.1" y="421" width="0.1" height="15.0" fill="rgb(220,178,6)" rx="2" ry="2" />
<text  x="543.10" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2 samples, 0.02%)</title><rect x="645.2" y="261" width="0.2" height="15.0" fill="rgb(251,94,4)" rx="2" ry="2" />
<text  x="648.15" y="271.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (5 samples, 0.06%)</title><rect x="646.0" y="357" width="0.7" height="15.0" fill="rgb(221,6,6)" rx="2" ry="2" />
<text  x="648.98" y="367.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="941.6" y="389" width="0.1" height="15.0" fill="rgb(214,175,42)" rx="2" ry="2" />
<text  x="944.56" y="399.5" ></text>
</g>
<g >
<title>Game_Interpreter::ReserveSubcommandIndex (11 samples, 0.13%)</title><rect x="429.9" y="453" width="1.6" height="15.0" fill="rgb(223,134,1)" rx="2" ry="2" />
<text  x="432.94" y="463.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.26] (1 samples, 0.01%)</title><rect x="884.9" y="421" width="0.1" height="15.0" fill="rgb(222,218,41)" rx="2" ry="2" />
<text  x="887.90" y="431.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (1 samples, 0.01%)</title><rect x="988.7" y="357" width="0.2" height="15.0" fill="rgb(223,55,17)" rx="2" ry="2" />
<text  x="991.71" y="367.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (20 samples, 0.23%)</title><rect x="593.7" y="357" width="2.8" height="15.0" fill="rgb(213,171,44)" rx="2" ry="2" />
<text  x="596.73" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (7 samples, 0.08%)</title><rect x="882.8" y="437" width="1.0" height="15.0" fill="rgb(214,225,38)" rx="2" ry="2" />
<text  x="885.83" y="447.5" ></text>
</g>
<g >
<title>SDL_InitFormat (2 samples, 0.02%)</title><rect x="996.4" y="485" width="0.3" height="15.0" fill="rgb(221,104,15)" rx="2" ry="2" />
<text  x="999.44" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="343.1" y="453" width="0.1" height="15.0" fill="rgb(227,219,28)" rx="2" ry="2" />
<text  x="346.09" y="463.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (3 samples, 0.04%)</title><rect x="805.2" y="277" width="0.4" height="15.0" fill="rgb(244,220,18)" rx="2" ry="2" />
<text  x="808.21" y="287.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (4,132 samples, 48.28%)</title><rect x="386.7" y="533" width="569.6" height="15.0" fill="rgb(250,87,42)" rx="2" ry="2" />
<text  x="389.65" y="543.5" >Game_Map::UpdateCommonEvents</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_create (1 samples, 0.01%)</title><rect x="885.2" y="373" width="0.1" height="15.0" fill="rgb(213,213,42)" rx="2" ry="2" />
<text  x="888.18" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (38 samples, 0.44%)</title><rect x="374.4" y="485" width="5.2" height="15.0" fill="rgb(212,147,22)" rx="2" ry="2" />
<text  x="377.38" y="495.5" ></text>
</g>
<g >
<title>Bitmap::GetHeight (4 samples, 0.05%)</title><rect x="329.3" y="501" width="0.6" height="15.0" fill="rgb(217,47,54)" rx="2" ry="2" />
<text  x="332.30" y="511.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (8 samples, 0.09%)</title><rect x="326.0" y="501" width="1.1" height="15.0" fill="rgb(232,150,20)" rx="2" ry="2" />
<text  x="328.99" y="511.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.01%)</title><rect x="352.7" y="517" width="0.2" height="15.0" fill="rgb(219,52,35)" rx="2" ry="2" />
<text  x="355.74" y="527.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (6 samples, 0.07%)</title><rect x="990.2" y="453" width="0.9" height="15.0" fill="rgb(216,92,7)" rx="2" ry="2" />
<text  x="993.23" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char32_t&gt;::allocate (1 samples, 0.01%)</title><rect x="885.2" y="341" width="0.1" height="15.0" fill="rgb(253,99,18)" rx="2" ry="2" />
<text  x="888.18" y="351.5" ></text>
</g>
<g >
<title>__GI___getpid (1 samples, 0.01%)</title><rect x="1174.7" y="501" width="0.1" height="15.0" fill="rgb(245,171,27)" rx="2" ry="2" />
<text  x="1177.70" y="511.5" ></text>
</g>
<g >
<title>_nv029793rm (1 samples, 0.01%)</title><rect x="906.1" y="469" width="0.2" height="15.0" fill="rgb(249,212,26)" rx="2" ry="2" />
<text  x="909.13" y="479.5" ></text>
</g>
<g >
<title>Game_Picture::SyncCurrentToFinish (6 samples, 0.07%)</title><rect x="963.8" y="501" width="0.8" height="15.0" fill="rgb(243,94,52)" rx="2" ry="2" />
<text  x="966.76" y="511.5" ></text>
</g>
<g >
<title>pixman_image_get_width (3 samples, 0.04%)</title><rect x="832.5" y="373" width="0.4" height="15.0" fill="rgb(238,44,26)" rx="2" ry="2" />
<text  x="835.51" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (1 samples, 0.01%)</title><rect x="988.0" y="405" width="0.2" height="15.0" fill="rgb(223,227,12)" rx="2" ry="2" />
<text  x="991.03" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate@plt (1 samples, 0.01%)</title><rect x="886.0" y="357" width="0.1" height="15.0" fill="rgb(227,87,26)" rx="2" ry="2" />
<text  x="889.00" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (1 samples, 0.01%)</title><rect x="905.9" y="453" width="0.1" height="15.0" fill="rgb(208,185,53)" rx="2" ry="2" />
<text  x="908.86" y="463.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (1 samples, 0.01%)</title><rect x="833.2" y="341" width="0.1" height="15.0" fill="rgb(250,42,30)" rx="2" ry="2" />
<text  x="836.20" y="351.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (13 samples, 0.15%)</title><rect x="991.3" y="357" width="1.8" height="15.0" fill="rgb(224,95,16)" rx="2" ry="2" />
<text  x="994.33" y="367.5" ></text>
</g>
<g >
<title>pixman_image_get_stride@plt (1 samples, 0.01%)</title><rect x="770.1" y="325" width="0.1" height="15.0" fill="rgb(232,71,18)" rx="2" ry="2" />
<text  x="773.06" y="335.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="378.9" y="405" width="0.2" height="15.0" fill="rgb(216,49,20)" rx="2" ry="2" />
<text  x="381.93" y="415.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (1 samples, 0.01%)</title><rect x="996.3" y="453" width="0.1" height="15.0" fill="rgb(216,222,27)" rx="2" ry="2" />
<text  x="999.30" y="463.5" ></text>
</g>
<g >
<title>TilemapLayer::DrawTile (5 samples, 0.06%)</title><rect x="337.4" y="517" width="0.7" height="15.0" fill="rgb(244,141,32)" rx="2" ry="2" />
<text  x="340.43" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="989.5" y="437" width="0.3" height="15.0" fill="rgb(210,95,0)" rx="2" ry="2" />
<text  x="992.54" y="447.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.01%)</title><rect x="990.4" y="229" width="0.1" height="15.0" fill="rgb(231,71,30)" rx="2" ry="2" />
<text  x="993.37" y="239.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (336 samples, 3.93%)</title><rect x="276.5" y="453" width="46.3" height="15.0" fill="rgb(231,39,13)" rx="2" ry="2" />
<text  x="279.50" y="463.5" >pixm..</text>
</g>
<g >
<title>put_timespec64 (1 samples, 0.01%)</title><rect x="72.7" y="613" width="0.2" height="15.0" fill="rgb(230,147,37)" rx="2" ry="2" />
<text  x="75.73" y="623.5" ></text>
</g>
<g >
<title>SDL_WaitEventTimeout_REAL (13 samples, 0.15%)</title><rect x="989.3" y="549" width="1.8" height="15.0" fill="rgb(238,54,22)" rx="2" ry="2" />
<text  x="992.27" y="559.5" ></text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt;, 36ul&gt; (5 samples, 0.06%)</title><rect x="352.2" y="549" width="0.7" height="15.0" fill="rgb(208,27,9)" rx="2" ry="2" />
<text  x="355.18" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="71.6" y="661" width="0.2" height="15.0" fill="rgb(219,227,15)" rx="2" ry="2" />
<text  x="74.63" y="671.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (1 samples, 0.01%)</title><rect x="995.3" y="453" width="0.2" height="15.0" fill="rgb(213,157,46)" rx="2" ry="2" />
<text  x="998.33" y="463.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (4 samples, 0.05%)</title><rect x="350.7" y="453" width="0.5" height="15.0" fill="rgb(227,26,18)" rx="2" ry="2" />
<text  x="353.67" y="463.5" ></text>
</g>
<g >
<title>_nv029793rm (1 samples, 0.01%)</title><rect x="642.8" y="181" width="0.1" height="15.0" fill="rgb(242,229,45)" rx="2" ry="2" />
<text  x="645.81" y="191.5" ></text>
</g>
<g >
<title>schedule (88 samples, 1.03%)</title><rect x="26.0" y="581" width="12.1" height="15.0" fill="rgb(205,40,40)" rx="2" ry="2" />
<text  x="28.99" y="591.5" ></text>
</g>
<g >
<title>Bitmap::height (4 samples, 0.05%)</title><rect x="834.9" y="357" width="0.5" height="15.0" fill="rgb(228,66,31)" rx="2" ry="2" />
<text  x="837.86" y="367.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="132.8" y="501" width="0.3" height="15.0" fill="rgb(216,74,0)" rx="2" ry="2" />
<text  x="135.84" y="511.5" ></text>
</g>
<g >
<title>[libGLX.so.0.0.0] (5 samples, 0.06%)</title><rect x="1174.0" y="501" width="0.7" height="15.0" fill="rgb(220,60,49)" rx="2" ry="2" />
<text  x="1177.01" y="511.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.02%)</title><rect x="769.1" y="293" width="0.3" height="15.0" fill="rgb(214,125,32)" rx="2" ry="2" />
<text  x="772.09" y="303.5" ></text>
</g>
<g >
<title>Cache::System (2 samples, 0.02%)</title><rect x="988.7" y="469" width="0.3" height="15.0" fill="rgb(215,170,43)" rx="2" ry="2" />
<text  x="991.71" y="479.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="799.1" y="85" width="0.2" height="15.0" fill="rgb(254,10,4)" rx="2" ry="2" />
<text  x="802.15" y="95.5" ></text>
</g>
<g >
<title>SdlMixerAudio::Update (1 samples, 0.01%)</title><rect x="1173.7" y="565" width="0.2" height="15.0" fill="rgb(207,15,54)" rx="2" ry="2" />
<text  x="1176.73" y="575.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="769.0" y="277" width="0.1" height="15.0" fill="rgb(242,197,54)" rx="2" ry="2" />
<text  x="771.96" y="287.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (6 samples, 0.07%)</title><rect x="837.1" y="309" width="0.8" height="15.0" fill="rgb(234,14,14)" rx="2" ry="2" />
<text  x="840.06" y="319.5" ></text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (2 samples, 0.02%)</title><rect x="807.0" y="373" width="0.3" height="15.0" fill="rgb(251,128,40)" rx="2" ry="2" />
<text  x="810.01" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (1 samples, 0.01%)</title><rect x="351.6" y="469" width="0.2" height="15.0" fill="rgb(205,55,52)" rx="2" ry="2" />
<text  x="354.63" y="479.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.01%)</title><rect x="71.5" y="645" width="0.1" height="15.0" fill="rgb(218,69,47)" rx="2" ry="2" />
<text  x="74.49" y="655.5" ></text>
</g>
<g >
<title>std::__move_merge_adaptive&lt;Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (7 samples, 0.08%)</title><rect x="342.1" y="469" width="1.0" height="15.0" fill="rgb(216,47,53)" rx="2" ry="2" />
<text  x="345.12" y="479.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (69 samples, 0.81%)</title><rect x="27.6" y="533" width="9.6" height="15.0" fill="rgb(215,17,13)" rx="2" ry="2" />
<text  x="30.65" y="543.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (160 samples, 1.87%)</title><rect x="499.0" y="469" width="22.1" height="15.0" fill="rgb(234,47,25)" rx="2" ry="2" />
<text  x="502.01" y="479.5" >G..</text>
</g>
<g >
<title>pixman_region32_extents (1 samples, 0.01%)</title><rect x="62.5" y="677" width="0.2" height="15.0" fill="rgb(245,84,36)" rx="2" ry="2" />
<text  x="65.53" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (10 samples, 0.12%)</title><rect x="936.0" y="469" width="1.4" height="15.0" fill="rgb(215,82,1)" rx="2" ry="2" />
<text  x="939.05" y="479.5" ></text>
</g>
<g >
<title>generic_file_read_iter (1 samples, 0.01%)</title><rect x="39.1" y="565" width="0.1" height="15.0" fill="rgb(252,43,14)" rx="2" ry="2" />
<text  x="42.09" y="575.5" ></text>
</g>
<g >
<title>Game_Screen::GetTone (1 samples, 0.01%)</title><rect x="833.5" y="389" width="0.1" height="15.0" fill="rgb(212,18,15)" rx="2" ry="2" />
<text  x="836.48" y="399.5" ></text>
</g>
<g >
<title>Game_Map::Update (4,363 samples, 50.98%)</title><rect x="386.7" y="549" width="601.5" height="15.0" fill="rgb(206,101,9)" rx="2" ry="2" />
<text  x="389.65" y="559.5" >Game_Map::Update</text>
</g>
<g >
<title>Player::IsRPG2k (1 samples, 0.01%)</title><rect x="563.1" y="453" width="0.2" height="15.0" fill="rgb(239,12,0)" rx="2" ry="2" />
<text  x="566.12" y="463.5" ></text>
</g>
<g >
<title>Sprite::SetY (1 samples, 0.01%)</title><rect x="59.1" y="677" width="0.1" height="15.0" fill="rgb(242,171,33)" rx="2" ry="2" />
<text  x="62.08" y="687.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.01%)</title><rect x="355.9" y="421" width="0.1" height="15.0" fill="rgb(210,165,22)" rx="2" ry="2" />
<text  x="358.91" y="431.5" ></text>
</g>
<g >
<title>Sprite::GetZ (3 samples, 0.04%)</title><rect x="48.1" y="677" width="0.4" height="15.0" fill="rgb(254,92,20)" rx="2" ry="2" />
<text  x="51.05" y="687.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (6 samples, 0.07%)</title><rect x="49.2" y="677" width="0.8" height="15.0" fill="rgb(238,6,41)" rx="2" ry="2" />
<text  x="52.15" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::operator bool (1 samples, 0.01%)</title><rect x="857.6" y="405" width="0.1" height="15.0" fill="rgb(235,160,7)" rx="2" ry="2" />
<text  x="860.60" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="25.6" y="597" width="0.1" height="15.0" fill="rgb(250,61,0)" rx="2" ry="2" />
<text  x="28.58" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_S_copy (2 samples, 0.02%)</title><rect x="884.3" y="405" width="0.3" height="15.0" fill="rgb(218,58,11)" rx="2" ry="2" />
<text  x="887.35" y="415.5" ></text>
</g>
<g >
<title>std::find&lt;int const*, int&gt; (11 samples, 0.13%)</title><rect x="447.5" y="453" width="1.5" height="15.0" fill="rgb(205,193,31)" rx="2" ry="2" />
<text  x="450.45" y="463.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (13 samples, 0.15%)</title><rect x="640.7" y="309" width="1.8" height="15.0" fill="rgb(220,144,3)" rx="2" ry="2" />
<text  x="643.74" y="319.5" ></text>
</g>
<g >
<title>pipe_poll (1 samples, 0.01%)</title><rect x="25.3" y="629" width="0.1" height="15.0" fill="rgb(207,148,25)" rx="2" ry="2" />
<text  x="28.30" y="639.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1173.5" y="277" width="0.1" height="15.0" fill="rgb(234,63,37)" rx="2" ry="2" />
<text  x="1176.46" y="287.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="973.8" y="373" width="0.2" height="15.0" fill="rgb(235,121,37)" rx="2" ry="2" />
<text  x="976.83" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (7 samples, 0.08%)</title><rect x="882.8" y="421" width="1.0" height="15.0" fill="rgb(223,204,41)" rx="2" ry="2" />
<text  x="885.83" y="431.5" ></text>
</g>
<g >
<title>_copy_to_user (2 samples, 0.02%)</title><rect x="374.9" y="469" width="0.3" height="15.0" fill="rgb(244,176,21)" rx="2" ry="2" />
<text  x="377.93" y="479.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="593.6" y="181" width="0.1" height="15.0" fill="rgb(234,91,5)" rx="2" ry="2" />
<text  x="596.59" y="191.5" ></text>
</g>
<g >
<title>raise_softirq (1 samples, 0.01%)</title><rect x="769.0" y="181" width="0.1" height="15.0" fill="rgb(207,38,19)" rx="2" ry="2" />
<text  x="771.96" y="191.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (29 samples, 0.34%)</title><rect x="589.7" y="293" width="4.0" height="15.0" fill="rgb(227,52,49)" rx="2" ry="2" />
<text  x="592.73" y="303.5" ></text>
</g>
<g >
<title>Bitmap::EffectsBlit (1,318 samples, 15.40%)</title><rect x="142.9" y="501" width="181.7" height="15.0" fill="rgb(254,183,35)" rx="2" ry="2" />
<text  x="145.90" y="511.5" >Bitmap::EffectsBlit</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="912.1" y="405" width="0.1" height="15.0" fill="rgb(209,20,24)" rx="2" ry="2" />
<text  x="915.06" y="415.5" ></text>
</g>
<g >
<title>__sched_text_start (87 samples, 1.02%)</title><rect x="26.0" y="565" width="12.0" height="15.0" fill="rgb(231,4,24)" rx="2" ry="2" />
<text  x="28.99" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (12 samples, 0.14%)</title><rect x="348.5" y="437" width="1.6" height="15.0" fill="rgb(244,33,8)" rx="2" ry="2" />
<text  x="351.46" y="447.5" ></text>
</g>
<g >
<title>[anon] (9 samples, 0.11%)</title><rect x="64.0" y="693" width="1.3" height="15.0" fill="rgb(205,163,31)" rx="2" ry="2" />
<text  x="67.04" y="703.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.01%)</title><rect x="605.6" y="181" width="0.1" height="15.0" fill="rgb(233,49,33)" rx="2" ry="2" />
<text  x="608.58" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (10 samples, 0.12%)</title><rect x="639.4" y="261" width="1.3" height="15.0" fill="rgb(214,205,51)" rx="2" ry="2" />
<text  x="642.36" y="271.5" ></text>
</g>
<g >
<title>operator() (5 samples, 0.06%)</title><rect x="338.1" y="517" width="0.7" height="15.0" fill="rgb(210,33,24)" rx="2" ry="2" />
<text  x="341.12" y="527.5" ></text>
</g>
<g >
<title>poll (1 samples, 0.01%)</title><rect x="989.8" y="469" width="0.2" height="15.0" fill="rgb(211,207,1)" rx="2" ry="2" />
<text  x="992.82" y="479.5" ></text>
</g>
<g >
<title>pixman_region32_init (5 samples, 0.06%)</title><rect x="779.3" y="149" width="0.7" height="15.0" fill="rgb(247,22,44)" rx="2" ry="2" />
<text  x="782.30" y="159.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.01%)</title><rect x="61.0" y="677" width="0.1" height="15.0" fill="rgb(233,185,49)" rx="2" ry="2" />
<text  x="64.01" y="687.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (8 samples, 0.09%)</title><rect x="332.3" y="469" width="1.1" height="15.0" fill="rgb(238,78,20)" rx="2" ry="2" />
<text  x="335.33" y="479.5" ></text>
</g>
<g >
<title>Bitmap::Create (254 samples, 2.97%)</title><rect x="770.6" y="373" width="35.0" height="15.0" fill="rgb(250,142,43)" rx="2" ry="2" />
<text  x="773.61" y="383.5" >Bi..</text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (15 samples, 0.18%)</title><rect x="353.7" y="341" width="2.1" height="15.0" fill="rgb(221,50,43)" rx="2" ry="2" />
<text  x="356.70" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="139.5" y="469" width="0.1" height="15.0" fill="rgb(208,126,33)" rx="2" ry="2" />
<text  x="142.46" y="479.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (72 samples, 0.84%)</title><rect x="310.5" y="421" width="10.0" height="15.0" fill="rgb(235,46,14)" rx="2" ry="2" />
<text  x="313.55" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (11 samples, 0.13%)</title><rect x="643.9" y="341" width="1.5" height="15.0" fill="rgb(238,227,43)" rx="2" ry="2" />
<text  x="646.91" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;Drawable**, Drawable**&gt; (8 samples, 0.09%)</title><rect x="347.1" y="437" width="1.1" height="15.0" fill="rgb(215,7,48)" rx="2" ry="2" />
<text  x="350.08" y="447.5" ></text>
</g>
<g >
<title>Player::Run (7,757 samples, 90.63%)</title><rect x="117.7" y="645" width="1069.4" height="15.0" fill="rgb(224,153,8)" rx="2" ry="2" />
<text  x="120.67" y="655.5" >Player::Run</text>
</g>
<g >
<title>__pthread_rwlock_rdunlock (1 samples, 0.01%)</title><rect x="1174.6" y="469" width="0.1" height="15.0" fill="rgb(234,203,4)" rx="2" ry="2" />
<text  x="1177.56" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_set_length (1 samples, 0.01%)</title><rect x="884.6" y="421" width="0.2" height="15.0" fill="rgb(210,28,33)" rx="2" ry="2" />
<text  x="887.63" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="117.4" y="661" width="0.1" height="15.0" fill="rgb(220,42,25)" rx="2" ry="2" />
<text  x="120.40" y="671.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="593.6" y="165" width="0.1" height="15.0" fill="rgb(252,94,46)" rx="2" ry="2" />
<text  x="596.59" y="175.5" ></text>
</g>
<g >
<title>__remove_hrtimer (1 samples, 0.01%)</title><rect x="1162.3" y="405" width="0.1" height="15.0" fill="rgb(227,31,10)" rx="2" ry="2" />
<text  x="1165.29" y="415.5" ></text>
</g>
<g >
<title>do_sched_yield (2 samples, 0.02%)</title><rect x="72.0" y="613" width="0.3" height="15.0" fill="rgb(247,210,50)" rx="2" ry="2" />
<text  x="75.04" y="623.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (4 samples, 0.05%)</title><rect x="59.8" y="677" width="0.5" height="15.0" fill="rgb(254,77,27)" rx="2" ry="2" />
<text  x="62.77" y="687.5" ></text>
</g>
<g >
<title>__tls_get_addr (7 samples, 0.08%)</title><rect x="767.4" y="325" width="1.0" height="15.0" fill="rgb(205,80,16)" rx="2" ry="2" />
<text  x="770.44" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (2 samples, 0.02%)</title><rect x="806.7" y="341" width="0.3" height="15.0" fill="rgb(251,69,52)" rx="2" ry="2" />
<text  x="809.73" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.01%)</title><rect x="885.0" y="437" width="0.2" height="15.0" fill="rgb(228,146,24)" rx="2" ry="2" />
<text  x="888.04" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (8 samples, 0.09%)</title><rect x="596.5" y="357" width="1.1" height="15.0" fill="rgb(237,18,4)" rx="2" ry="2" />
<text  x="599.48" y="367.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.02%)</title><rect x="37.6" y="533" width="0.2" height="15.0" fill="rgb(220,165,23)" rx="2" ry="2" />
<text  x="40.57" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (6 samples, 0.07%)</title><rect x="881.2" y="453" width="0.8" height="15.0" fill="rgb(238,32,5)" rx="2" ry="2" />
<text  x="884.18" y="463.5" ></text>
</g>
<g >
<title>SDL_LockTexture_REAL (1 samples, 0.01%)</title><rect x="1162.6" y="501" width="0.1" height="15.0" fill="rgb(216,100,51)" rx="2" ry="2" />
<text  x="1165.56" y="511.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (8 samples, 0.09%)</title><rect x="326.0" y="421" width="1.1" height="15.0" fill="rgb(219,24,14)" rx="2" ry="2" />
<text  x="328.99" y="431.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="1187.0" y="565" width="0.1" height="15.0" fill="rgb(210,148,39)" rx="2" ry="2" />
<text  x="1189.97" y="575.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (115 samples, 1.34%)</title><rect x="783.4" y="149" width="15.9" height="15.0" fill="rgb(242,104,17)" rx="2" ry="2" />
<text  x="786.43" y="159.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="769.0" y="245" width="0.1" height="15.0" fill="rgb(225,38,12)" rx="2" ry="2" />
<text  x="771.96" y="255.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.12%)</title><rect x="603.4" y="261" width="1.4" height="15.0" fill="rgb(229,168,18)" rx="2" ry="2" />
<text  x="606.38" y="271.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.01%)</title><rect x="889.6" y="405" width="0.1" height="15.0" fill="rgb(247,168,5)" rx="2" ry="2" />
<text  x="892.59" y="415.5" ></text>
</g>
<g >
<title>Sprite::SetZ (1 samples, 0.01%)</title><rect x="817.8" y="373" width="0.1" height="15.0" fill="rgb(234,21,35)" rx="2" ry="2" />
<text  x="820.76" y="383.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (252 samples, 2.94%)</title><rect x="770.9" y="357" width="34.7" height="15.0" fill="rgb(220,54,50)" rx="2" ry="2" />
<text  x="773.89" y="367.5" >st..</text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (252 samples, 2.94%)</title><rect x="770.9" y="325" width="34.7" height="15.0" fill="rgb(216,216,51)" rx="2" ry="2" />
<text  x="773.89" y="335.5" >st..</text>
</g>
<g >
<title>[libGLdispatch.so.0.0.0] (1 samples, 0.01%)</title><rect x="73.0" y="693" width="0.1" height="15.0" fill="rgb(214,30,44)" rx="2" ry="2" />
<text  x="76.01" y="703.5" ></text>
</g>
<g >
<title>Game_Screen::GetTone (16 samples, 0.19%)</title><rect x="975.9" y="485" width="2.2" height="15.0" fill="rgb(209,49,10)" rx="2" ry="2" />
<text  x="978.89" y="495.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (10 samples, 0.12%)</title><rect x="324.6" y="437" width="1.4" height="15.0" fill="rgb(210,64,30)" rx="2" ry="2" />
<text  x="327.61" y="447.5" ></text>
</g>
<g >
<title>GetRequest (41 samples, 0.48%)</title><rect x="611.6" y="341" width="5.7" height="15.0" fill="rgb(251,3,42)" rx="2" ry="2" />
<text  x="614.65" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator bool (7 samples, 0.08%)</title><rect x="882.8" y="453" width="1.0" height="15.0" fill="rgb(221,217,16)" rx="2" ry="2" />
<text  x="885.83" y="463.5" ></text>
</g>
<g >
<title>tcache_put (1 samples, 0.01%)</title><rect x="643.8" y="181" width="0.1" height="15.0" fill="rgb(231,159,39)" rx="2" ry="2" />
<text  x="646.77" y="191.5" ></text>
</g>
<g >
<title>Game_Character::GetSpriteX (1 samples, 0.01%)</title><rect x="958.2" y="517" width="0.2" height="15.0" fill="rgb(217,91,32)" rx="2" ry="2" />
<text  x="961.25" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="1174.7" y="469" width="0.1" height="15.0" fill="rgb(211,223,53)" rx="2" ry="2" />
<text  x="1177.70" y="479.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (3 samples, 0.04%)</title><rect x="767.0" y="325" width="0.4" height="15.0" fill="rgb(211,133,42)" rx="2" ry="2" />
<text  x="770.03" y="335.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (1 samples, 0.01%)</title><rect x="27.0" y="485" width="0.1" height="15.0" fill="rgb(222,153,41)" rx="2" ry="2" />
<text  x="29.96" y="495.5" ></text>
</g>
<g >
<title>Game_Switches_Class::Get (1 samples, 0.01%)</title><rect x="449.2" y="469" width="0.2" height="15.0" fill="rgb(254,87,10)" rx="2" ry="2" />
<text  x="452.24" y="479.5" ></text>
</g>
<g >
<title>main (7,757 samples, 90.63%)</title><rect x="117.7" y="661" width="1069.4" height="15.0" fill="rgb(212,48,54)" rx="2" ry="2" />
<text  x="120.67" y="671.5" >main</text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="614.3" y="261" width="0.1" height="15.0" fill="rgb(238,25,52)" rx="2" ry="2" />
<text  x="617.27" y="271.5" ></text>
</g>
<g >
<title>eventfd_poll (2 samples, 0.02%)</title><rect x="24.8" y="629" width="0.2" height="15.0" fill="rgb(241,226,1)" rx="2" ry="2" />
<text  x="27.75" y="639.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;BaseUi, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator (1 samples, 0.01%)</title><rect x="1175.0" y="565" width="0.1" height="15.0" fill="rgb(213,42,50)" rx="2" ry="2" />
<text  x="1177.97" y="575.5" ></text>
</g>
<g >
<title>ktime_get_raw_ts64 (2 samples, 0.02%)</title><rect x="375.2" y="469" width="0.3" height="15.0" fill="rgb(248,174,22)" rx="2" ry="2" />
<text  x="378.21" y="479.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.01%)</title><rect x="37.4" y="517" width="0.2" height="15.0" fill="rgb(232,209,21)" rx="2" ry="2" />
<text  x="40.44" y="527.5" ></text>
</g>
<g >
<title>poll_freewait (2 samples, 0.02%)</title><rect x="25.4" y="629" width="0.3" height="15.0" fill="rgb(248,96,1)" rx="2" ry="2" />
<text  x="28.44" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (2 samples, 0.02%)</title><rect x="872.8" y="421" width="0.2" height="15.0" fill="rgb(207,180,10)" rx="2" ry="2" />
<text  x="875.77" y="431.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.01%)</title><rect x="573.6" y="357" width="0.1" height="15.0" fill="rgb(221,82,24)" rx="2" ry="2" />
<text  x="576.60" y="367.5" ></text>
</g>
<g >
<title>__accumulate_pelt_segments (1 samples, 0.01%)</title><rect x="453.2" y="309" width="0.2" height="15.0" fill="rgb(250,83,5)" rx="2" ry="2" />
<text  x="456.24" y="319.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (13 samples, 0.15%)</title><rect x="640.7" y="293" width="1.8" height="15.0" fill="rgb(234,178,46)" rx="2" ry="2" />
<text  x="643.74" y="303.5" ></text>
</g>
<g >
<title>x86_pmu_enable (69 samples, 0.81%)</title><rect x="27.6" y="501" width="9.6" height="15.0" fill="rgb(252,122,42)" rx="2" ry="2" />
<text  x="30.65" y="511.5" ></text>
</g>
<g >
<title>Sprite::SetX (1 samples, 0.01%)</title><rect x="978.7" y="485" width="0.1" height="15.0" fill="rgb(240,54,9)" rx="2" ry="2" />
<text  x="981.65" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, false, true&gt;::operator++ (35 samples, 0.41%)</title><rect x="133.1" y="549" width="4.8" height="15.0" fill="rgb(221,45,8)" rx="2" ry="2" />
<text  x="136.11" y="559.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="540.1" y="373" width="0.1" height="15.0" fill="rgb(236,113,25)" rx="2" ry="2" />
<text  x="543.10" y="383.5" ></text>
</g>
<g >
<title>_int_free (2 samples, 0.02%)</title><rect x="61.4" y="677" width="0.3" height="15.0" fill="rgb(215,149,43)" rx="2" ry="2" />
<text  x="64.42" y="687.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="357.6" y="485" width="0.1" height="15.0" fill="rgb(249,58,5)" rx="2" ry="2" />
<text  x="360.56" y="495.5" ></text>
</g>
<g >
<title>__atomic_add (8 samples, 0.09%)</title><rect x="836.0" y="293" width="1.1" height="15.0" fill="rgb(213,180,2)" rx="2" ry="2" />
<text  x="838.96" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (249 samples, 2.91%)</title><rect x="770.9" y="261" width="34.3" height="15.0" fill="rgb(217,110,27)" rx="2" ry="2" />
<text  x="773.89" y="271.5" >st..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (2 samples, 0.02%)</title><rect x="872.8" y="405" width="0.2" height="15.0" fill="rgb(206,126,43)" rx="2" ry="2" />
<text  x="875.77" y="415.5" ></text>
</g>
<g >
<title>glXSwapBuffers (8 samples, 0.09%)</title><rect x="1173.9" y="549" width="1.1" height="15.0" fill="rgb(223,83,37)" rx="2" ry="2" />
<text  x="1176.87" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (249 samples, 2.91%)</title><rect x="770.9" y="245" width="34.3" height="15.0" fill="rgb(253,34,13)" rx="2" ry="2" />
<text  x="773.89" y="255.5" >__..</text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (9 samples, 0.11%)</title><rect x="799.3" y="149" width="1.2" height="15.0" fill="rgb(249,101,16)" rx="2" ry="2" />
<text  x="802.29" y="159.5" ></text>
</g>
<g >
<title>poll_schedule_timeout.constprop.14 (91 samples, 1.06%)</title><rect x="25.7" y="629" width="12.6" height="15.0" fill="rgb(206,124,29)" rx="2" ry="2" />
<text  x="28.72" y="639.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (65 samples, 0.76%)</title><rect x="1164.6" y="405" width="9.0" height="15.0" fill="rgb(232,81,52)" rx="2" ry="2" />
<text  x="1167.63" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.01%)</title><rect x="605.7" y="293" width="0.2" height="15.0" fill="rgb(216,114,40)" rx="2" ry="2" />
<text  x="608.72" y="303.5" ></text>
</g>
<g >
<title>__GI___poll (1 samples, 0.01%)</title><rect x="989.3" y="421" width="0.1" height="15.0" fill="rgb(222,122,42)" rx="2" ry="2" />
<text  x="992.27" y="431.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.01%)</title><rect x="352.5" y="469" width="0.1" height="15.0" fill="rgb(215,18,5)" rx="2" ry="2" />
<text  x="355.46" y="479.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.01%)</title><rect x="883.8" y="373" width="0.1" height="15.0" fill="rgb(213,179,34)" rx="2" ry="2" />
<text  x="886.80" y="383.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (1 samples, 0.01%)</title><rect x="993.4" y="421" width="0.1" height="15.0" fill="rgb(240,13,4)" rx="2" ry="2" />
<text  x="996.40" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (12 samples, 0.14%)</title><rect x="640.9" y="245" width="1.6" height="15.0" fill="rgb(251,227,50)" rx="2" ry="2" />
<text  x="643.88" y="255.5" ></text>
</g>
<g >
<title>_M_invoke (1 samples, 0.01%)</title><rect x="857.3" y="405" width="0.2" height="15.0" fill="rgb(213,108,39)" rx="2" ry="2" />
<text  x="860.33" y="415.5" ></text>
</g>
<g >
<title>__task_pid_nr_ns (1 samples, 0.01%)</title><rect x="23.4" y="645" width="0.1" height="15.0" fill="rgb(245,174,50)" rx="2" ry="2" />
<text  x="26.37" y="655.5" ></text>
</g>
<g >
<title>Bitmap::StretchBlit (1 samples, 0.01%)</title><rect x="52.6" y="677" width="0.1" height="15.0" fill="rgb(230,71,45)" rx="2" ry="2" />
<text  x="55.60" y="687.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="357.6" y="501" width="0.1" height="15.0" fill="rgb(223,69,7)" rx="2" ry="2" />
<text  x="360.56" y="511.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (3 samples, 0.04%)</title><rect x="769.0" y="325" width="0.4" height="15.0" fill="rgb(215,215,44)" rx="2" ry="2" />
<text  x="771.96" y="335.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="379.6" y="421" width="0.2" height="15.0" fill="rgb(224,125,54)" rx="2" ry="2" />
<text  x="382.62" y="431.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (3 samples, 0.04%)</title><rect x="859.5" y="421" width="0.4" height="15.0" fill="rgb(253,227,24)" rx="2" ry="2" />
<text  x="862.53" y="431.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="802.7" y="149" width="0.2" height="15.0" fill="rgb(235,67,29)" rx="2" ry="2" />
<text  x="805.73" y="159.5" ></text>
</g>
<g >
<title>Sprite::Flash (1 samples, 0.01%)</title><rect x="978.1" y="485" width="0.1" height="15.0" fill="rgb(216,88,45)" rx="2" ry="2" />
<text  x="981.10" y="495.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (1 samples, 0.01%)</title><rect x="429.7" y="469" width="0.1" height="15.0" fill="rgb(235,34,14)" rx="2" ry="2" />
<text  x="432.67" y="479.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (4 samples, 0.05%)</title><rect x="885.5" y="405" width="0.5" height="15.0" fill="rgb(211,138,4)" rx="2" ry="2" />
<text  x="888.45" y="415.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (69 samples, 0.81%)</title><rect x="27.6" y="469" width="9.6" height="15.0" fill="rgb(251,171,32)" rx="2" ry="2" />
<text  x="30.65" y="479.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (1 samples, 0.01%)</title><rect x="53.2" y="677" width="0.1" height="15.0" fill="rgb(223,135,49)" rx="2" ry="2" />
<text  x="56.15" y="687.5" ></text>
</g>
<g >
<title>Sprite::SetWaverPhase (5 samples, 0.06%)</title><rect x="817.1" y="373" width="0.7" height="15.0" fill="rgb(229,175,20)" rx="2" ry="2" />
<text  x="820.07" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_construct_aux&lt;char32_t const*&gt; (1 samples, 0.01%)</title><rect x="885.2" y="405" width="0.1" height="15.0" fill="rgb(238,134,0)" rx="2" ry="2" />
<text  x="888.18" y="415.5" ></text>
</g>
<g >
<title>kick_ilb (1 samples, 0.01%)</title><rect x="935.9" y="325" width="0.1" height="15.0" fill="rgb(241,64,22)" rx="2" ry="2" />
<text  x="938.91" y="335.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustId (2 samples, 0.02%)</title><rect x="46.9" y="677" width="0.3" height="15.0" fill="rgb(250,124,28)" rx="2" ry="2" />
<text  x="49.95" y="687.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (18 samples, 0.21%)</title><rect x="814.3" y="357" width="2.5" height="15.0" fill="rgb(221,194,5)" rx="2" ry="2" />
<text  x="817.31" y="367.5" ></text>
</g>
<g >
<title>update_curr (2 samples, 0.02%)</title><rect x="26.8" y="501" width="0.3" height="15.0" fill="rgb(216,14,34)" rx="2" ry="2" />
<text  x="29.82" y="511.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.02%)</title><rect x="941.4" y="485" width="0.3" height="15.0" fill="rgb(213,89,14)" rx="2" ry="2" />
<text  x="944.43" y="495.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (3 samples, 0.04%)</title><rect x="993.5" y="405" width="0.5" height="15.0" fill="rgb(243,199,16)" rx="2" ry="2" />
<text  x="996.54" y="415.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.01%)</title><rect x="1173.5" y="213" width="0.1" height="15.0" fill="rgb(211,223,46)" rx="2" ry="2" />
<text  x="1176.46" y="223.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (8 samples, 0.09%)</title><rect x="326.0" y="469" width="1.1" height="15.0" fill="rgb(207,120,4)" rx="2" ry="2" />
<text  x="328.99" y="479.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (181 samples, 2.11%)</title><rect x="912.5" y="485" width="24.9" height="15.0" fill="rgb(222,2,15)" rx="2" ry="2" />
<text  x="915.47" y="495.5" >G..</text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (40 samples, 0.47%)</title><rect x="875.5" y="437" width="5.5" height="15.0" fill="rgb(215,200,31)" rx="2" ry="2" />
<text  x="878.53" y="447.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (252 samples, 2.94%)</title><rect x="770.9" y="341" width="34.7" height="15.0" fill="rgb(225,203,46)" rx="2" ry="2" />
<text  x="773.89" y="351.5" >st..</text>
</g>
<g >
<title>SDL_CreateSurfaceOnStack (2 samples, 0.02%)</title><rect x="996.4" y="501" width="0.3" height="15.0" fill="rgb(208,92,25)" rx="2" ry="2" />
<text  x="999.44" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.01%)</title><rect x="352.6" y="469" width="0.1" height="15.0" fill="rgb(245,102,34)" rx="2" ry="2" />
<text  x="355.60" y="479.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;long&gt; (1 samples, 0.01%)</title><rect x="884.9" y="437" width="0.1" height="15.0" fill="rgb(229,22,54)" rx="2" ry="2" />
<text  x="887.90" y="447.5" ></text>
</g>
<g >
<title>Scene::GetGraphicsState (1 samples, 0.01%)</title><rect x="47.9" y="677" width="0.2" height="15.0" fill="rgb(254,215,43)" rx="2" ry="2" />
<text  x="50.91" y="687.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (2 samples, 0.02%)</title><rect x="637.8" y="229" width="0.3" height="15.0" fill="rgb(228,50,32)" rx="2" ry="2" />
<text  x="640.84" y="239.5" ></text>
</g>
<g >
<title>any_of&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int&gt; &gt;, Input::UiSource::Update()::&lt;lambda(int)&gt; &gt; (1 samples, 0.01%)</title><rect x="352.0" y="533" width="0.2" height="15.0" fill="rgb(249,3,17)" rx="2" ry="2" />
<text  x="355.05" y="543.5" ></text>
</g>
<g >
<title>Sprite::SetTone (2 samples, 0.02%)</title><rect x="870.7" y="437" width="0.3" height="15.0" fill="rgb(244,62,50)" rx="2" ry="2" />
<text  x="873.70" y="447.5" ></text>
</g>
<g >
<title>__sched_text_start (18 samples, 0.21%)</title><rect x="353.6" y="437" width="2.4" height="15.0" fill="rgb(240,126,31)" rx="2" ry="2" />
<text  x="356.56" y="447.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (1 samples, 0.01%)</title><rect x="858.7" y="405" width="0.1" height="15.0" fill="rgb(231,35,36)" rx="2" ry="2" />
<text  x="861.71" y="415.5" ></text>
</g>
<g >
<title>pixman_image_get_height@plt (2 samples, 0.02%)</title><rect x="832.2" y="373" width="0.3" height="15.0" fill="rgb(252,157,39)" rx="2" ry="2" />
<text  x="835.24" y="383.5" ></text>
</g>
<g >
<title>MakeFlashColor (1 samples, 0.01%)</title><rect x="808.7" y="357" width="0.1" height="15.0" fill="rgb(207,59,34)" rx="2" ry="2" />
<text  x="811.66" y="367.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="518.7" y="405" width="0.2" height="15.0" fill="rgb(251,205,26)" rx="2" ry="2" />
<text  x="521.73" y="415.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;BaseUi, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get (1 samples, 0.01%)</title><rect x="1175.0" y="549" width="0.1" height="15.0" fill="rgb(252,212,36)" rx="2" ry="2" />
<text  x="1177.97" y="559.5" ></text>
</g>
<g >
<title>LINUX_JoystickDetect (1 samples, 0.01%)</title><rect x="989.3" y="501" width="0.1" height="15.0" fill="rgb(210,199,11)" rx="2" ry="2" />
<text  x="992.27" y="511.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.01%)</title><rect x="50.7" y="677" width="0.1" height="15.0" fill="rgb(236,184,25)" rx="2" ry="2" />
<text  x="53.67" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (5 samples, 0.06%)</title><rect x="881.2" y="421" width="0.7" height="15.0" fill="rgb(247,167,31)" rx="2" ry="2" />
<text  x="884.18" y="431.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (2 samples, 0.02%)</title><rect x="48.9" y="677" width="0.3" height="15.0" fill="rgb(212,5,9)" rx="2" ry="2" />
<text  x="51.88" y="687.5" ></text>
</g>
<g >
<title>std::locale::locale (1 samples, 0.01%)</title><rect x="117.3" y="677" width="0.1" height="15.0" fill="rgb(233,161,31)" rx="2" ry="2" />
<text  x="120.26" y="687.5" ></text>
</g>
<g >
<title>Game_Map::LoopVertical (2 samples, 0.02%)</title><rect x="337.2" y="517" width="0.2" height="15.0" fill="rgb(245,193,29)" rx="2" ry="2" />
<text  x="340.16" y="527.5" ></text>
</g>
<g >
<title>Sprite::SetOpacity (1 samples, 0.01%)</title><rect x="816.8" y="373" width="0.1" height="15.0" fill="rgb(250,44,13)" rx="2" ry="2" />
<text  x="819.80" y="383.5" ></text>
</g>
<g >
<title>X11_GL_SwapWindow (8 samples, 0.09%)</title><rect x="1173.9" y="565" width="1.1" height="15.0" fill="rgb(207,217,19)" rx="2" ry="2" />
<text  x="1176.87" y="575.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.01%)</title><rect x="352.7" y="501" width="0.2" height="15.0" fill="rgb(225,173,43)" rx="2" ry="2" />
<text  x="355.74" y="511.5" ></text>
</g>
<g >
<title>__pollwait (1 samples, 0.01%)</title><rect x="38.7" y="597" width="0.1" height="15.0" fill="rgb(237,50,42)" rx="2" ry="2" />
<text  x="41.68" y="607.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="593.6" y="229" width="0.1" height="15.0" fill="rgb(205,40,0)" rx="2" ry="2" />
<text  x="596.59" y="239.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (2,060 samples, 24.07%)</title><rect x="575.0" y="453" width="284.0" height="15.0" fill="rgb(233,43,44)" rx="2" ry="2" />
<text  x="577.98" y="463.5" >Game_Picture::RequestPictureSprite</text>
</g>
<g >
<title>posix_get_monotonic_raw (1 samples, 0.01%)</title><rect x="351.6" y="453" width="0.2" height="15.0" fill="rgb(220,170,50)" rx="2" ry="2" />
<text  x="354.63" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.01%)</title><rect x="858.4" y="373" width="0.2" height="15.0" fill="rgb(235,227,54)" rx="2" ry="2" />
<text  x="861.43" y="383.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (169 samples, 1.97%)</title><rect x="964.6" y="501" width="23.3" height="15.0" fill="rgb(212,190,2)" rx="2" ry="2" />
<text  x="967.59" y="511.5" >G..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="912.1" y="437" width="0.1" height="15.0" fill="rgb(237,37,20)" rx="2" ry="2" />
<text  x="915.06" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (23 samples, 0.27%)</title><rect x="639.4" y="325" width="3.1" height="15.0" fill="rgb(252,217,50)" rx="2" ry="2" />
<text  x="642.36" y="335.5" ></text>
</g>
<g >
<title>LoadBitmap (189 samples, 2.21%)</title><rect x="617.9" y="357" width="26.0" height="15.0" fill="rgb(242,132,51)" rx="2" ry="2" />
<text  x="620.85" y="367.5" >L..</text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (1 samples, 0.01%)</title><rect x="886.3" y="405" width="0.1" height="15.0" fill="rgb(232,201,46)" rx="2" ry="2" />
<text  x="889.28" y="415.5" ></text>
</g>
<g >
<title>pixman_image_get_height (3 samples, 0.04%)</title><rect x="831.8" y="373" width="0.4" height="15.0" fill="rgb(226,63,1)" rx="2" ry="2" />
<text  x="834.82" y="383.5" ></text>
</g>
<g >
<title>ktime_get (1 samples, 0.01%)</title><rect x="982.2" y="389" width="0.2" height="15.0" fill="rgb(243,198,25)" rx="2" ry="2" />
<text  x="985.24" y="399.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.16%)</title><rect x="887.8" y="421" width="1.9" height="15.0" fill="rgb(213,196,10)" rx="2" ry="2" />
<text  x="890.80" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (8 samples, 0.09%)</title><rect x="596.5" y="405" width="1.1" height="15.0" fill="rgb(247,118,31)" rx="2" ry="2" />
<text  x="599.48" y="415.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (168 samples, 1.96%)</title><rect x="833.6" y="389" width="23.2" height="15.0" fill="rgb(210,111,50)" rx="2" ry="2" />
<text  x="836.61" y="399.5" >S..</text>
</g>
<g >
<title>find_get_entry (1 samples, 0.01%)</title><rect x="39.1" y="517" width="0.1" height="15.0" fill="rgb(251,49,25)" rx="2" ry="2" />
<text  x="42.09" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.01%)</title><rect x="881.9" y="421" width="0.1" height="15.0" fill="rgb(219,133,49)" rx="2" ry="2" />
<text  x="884.87" y="431.5" ></text>
</g>
<g >
<title>pixman_transform_point_31_16_3d (9 samples, 0.11%)</title><rect x="321.6" y="405" width="1.2" height="15.0" fill="rgb(249,133,13)" rx="2" ry="2" />
<text  x="324.58" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (4 samples, 0.05%)</title><rect x="352.2" y="501" width="0.5" height="15.0" fill="rgb(253,141,3)" rx="2" ry="2" />
<text  x="355.18" y="511.5" ></text>
</g>
<g >
<title>aa_file_perm (1 samples, 0.01%)</title><rect x="40.5" y="549" width="0.1" height="15.0" fill="rgb(232,115,6)" rx="2" ry="2" />
<text  x="43.47" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (3 samples, 0.04%)</title><rect x="617.4" y="277" width="0.5" height="15.0" fill="rgb(245,105,13)" rx="2" ry="2" />
<text  x="620.44" y="287.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="379.6" y="437" width="0.2" height="15.0" fill="rgb(221,143,49)" rx="2" ry="2" />
<text  x="382.62" y="447.5" ></text>
</g>
<g >
<title>Game_Map::GetBushDepth (1 samples, 0.01%)</title><rect x="989.1" y="517" width="0.2" height="15.0" fill="rgb(250,85,0)" rx="2" ry="2" />
<text  x="992.13" y="527.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="885.7" y="373" width="0.2" height="15.0" fill="rgb(218,9,11)" rx="2" ry="2" />
<text  x="888.73" y="383.5" ></text>
</g>
<g >
<title>task_ctx_sched_out (1 samples, 0.01%)</title><rect x="26.3" y="533" width="0.1" height="15.0" fill="rgb(225,43,41)" rx="2" ry="2" />
<text  x="29.27" y="543.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (4 samples, 0.05%)</title><rect x="856.8" y="325" width="0.5" height="15.0" fill="rgb(230,223,34)" rx="2" ry="2" />
<text  x="859.78" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::deallocate (1 samples, 0.01%)</title><rect x="856.6" y="261" width="0.2" height="15.0" fill="rgb(237,129,39)" rx="2" ry="2" />
<text  x="859.64" y="271.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="912.1" y="389" width="0.1" height="15.0" fill="rgb(250,182,29)" rx="2" ry="2" />
<text  x="915.06" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (1 samples, 0.01%)</title><rect x="988.7" y="293" width="0.2" height="15.0" fill="rgb(248,33,32)" rx="2" ry="2" />
<text  x="991.71" y="303.5" ></text>
</g>
<g >
<title>X11_HandleFocusChanges (1 samples, 0.01%)</title><rect x="993.3" y="485" width="0.1" height="15.0" fill="rgb(250,171,49)" rx="2" ry="2" />
<text  x="996.26" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (12 samples, 0.14%)</title><rect x="611.9" y="293" width="1.7" height="15.0" fill="rgb(229,204,51)" rx="2" ry="2" />
<text  x="614.93" y="303.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::swap (1 samples, 0.01%)</title><rect x="858.8" y="405" width="0.2" height="15.0" fill="rgb(217,87,25)" rx="2" ry="2" />
<text  x="861.84" y="415.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1162.3" y="469" width="0.1" height="15.0" fill="rgb(232,45,44)" rx="2" ry="2" />
<text  x="1165.29" y="479.5" ></text>
</g>
<g >
<title>pipe_read (4 samples, 0.05%)</title><rect x="39.2" y="581" width="0.6" height="15.0" fill="rgb(234,198,49)" rx="2" ry="2" />
<text  x="42.23" y="591.5" ></text>
</g>
<g >
<title>Sprite::SetOpacity (1 samples, 0.01%)</title><rect x="870.4" y="437" width="0.2" height="15.0" fill="rgb(235,142,38)" rx="2" ry="2" />
<text  x="873.43" y="447.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (45 samples, 0.53%)</title><rect x="1178.3" y="533" width="6.2" height="15.0" fill="rgb(224,211,50)" rx="2" ry="2" />
<text  x="1181.28" y="543.5" ></text>
</g>
<g >
<title>Sprite::Refresh (46 samples, 0.54%)</title><rect x="327.1" y="517" width="6.3" height="15.0" fill="rgb(218,127,6)" rx="2" ry="2" />
<text  x="330.09" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (16 samples, 0.19%)</title><rect x="615.1" y="293" width="2.2" height="15.0" fill="rgb(233,81,7)" rx="2" ry="2" />
<text  x="618.10" y="303.5" ></text>
</g>
<g >
<title>run_rebalance_domains (2 samples, 0.02%)</title><rect x="769.1" y="261" width="0.3" height="15.0" fill="rgb(237,35,3)" rx="2" ry="2" />
<text  x="772.09" y="271.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="861.3" y="421" width="0.2" height="15.0" fill="rgb(228,17,15)" rx="2" ry="2" />
<text  x="864.33" y="431.5" ></text>
</g>
<g >
<title>Game_Map::LoopHorizontal (1 samples, 0.01%)</title><rect x="337.0" y="517" width="0.2" height="15.0" fill="rgb(244,214,27)" rx="2" ry="2" />
<text  x="340.02" y="527.5" ></text>
</g>
<g >
<title>Sprite::Refresh (1 samples, 0.01%)</title><rect x="108.0" y="677" width="0.2" height="15.0" fill="rgb(220,116,20)" rx="2" ry="2" />
<text  x="111.02" y="687.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="963.5" y="421" width="0.1" height="15.0" fill="rgb(237,15,17)" rx="2" ry="2" />
<text  x="966.49" y="431.5" ></text>
</g>
<g >
<title>Bitmap::Blit (2 samples, 0.02%)</title><rect x="337.4" y="501" width="0.3" height="15.0" fill="rgb(219,193,52)" rx="2" ry="2" />
<text  x="340.43" y="511.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (8 samples, 0.09%)</title><rect x="347.1" y="421" width="1.1" height="15.0" fill="rgb(215,58,43)" rx="2" ry="2" />
<text  x="350.08" y="431.5" ></text>
</g>
<g >
<title>__libc_recvmsg (2 samples, 0.02%)</title><rect x="993.5" y="357" width="0.3" height="15.0" fill="rgb(237,191,50)" rx="2" ry="2" />
<text  x="996.54" y="367.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (3 samples, 0.04%)</title><rect x="963.2" y="501" width="0.4" height="15.0" fill="rgb(205,96,49)" rx="2" ry="2" />
<text  x="966.21" y="511.5" ></text>
</g>
<g >
<title>Game_Map::SetNeedRefresh (1 samples, 0.01%)</title><rect x="106.4" y="677" width="0.1" height="15.0" fill="rgb(233,191,11)" rx="2" ry="2" />
<text  x="109.37" y="687.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.02%)</title><rect x="272.8" y="405" width="0.2" height="15.0" fill="rgb(211,179,44)" rx="2" ry="2" />
<text  x="275.77" y="415.5" ></text>
</g>
<g >
<title>XEventsQueued (1 samples, 0.01%)</title><rect x="990.0" y="485" width="0.1" height="15.0" fill="rgb(243,40,47)" rx="2" ry="2" />
<text  x="992.96" y="495.5" ></text>
</g>
<g >
<title>GL_RenderCopy (5 samples, 0.06%)</title><rect x="995.7" y="533" width="0.7" height="15.0" fill="rgb(232,182,34)" rx="2" ry="2" />
<text  x="998.75" y="543.5" ></text>
</g>
<g >
<title>Bitmap::Blit (1 samples, 0.01%)</title><rect x="52.5" y="677" width="0.1" height="15.0" fill="rgb(247,61,53)" rx="2" ry="2" />
<text  x="55.46" y="687.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="989.3" y="405" width="0.1" height="15.0" fill="rgb(238,85,13)" rx="2" ry="2" />
<text  x="992.27" y="415.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (9 samples, 0.11%)</title><rect x="70.2" y="597" width="1.3" height="15.0" fill="rgb(225,207,32)" rx="2" ry="2" />
<text  x="73.25" y="607.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="580.8" y="261" width="0.2" height="15.0" fill="rgb(212,66,27)" rx="2" ry="2" />
<text  x="583.77" y="271.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.02%)</title><rect x="990.6" y="389" width="0.3" height="15.0" fill="rgb(223,111,52)" rx="2" ry="2" />
<text  x="993.64" y="399.5" ></text>
</g>
<g >
<title>import_iovec (1 samples, 0.01%)</title><rect x="990.4" y="261" width="0.1" height="15.0" fill="rgb(223,25,6)" rx="2" ry="2" />
<text  x="993.37" y="271.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (17 samples, 0.20%)</title><rect x="69.1" y="629" width="2.4" height="15.0" fill="rgb(241,10,3)" rx="2" ry="2" />
<text  x="72.14" y="639.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="861.3" y="341" width="0.2" height="15.0" fill="rgb(222,224,43)" rx="2" ry="2" />
<text  x="864.33" y="351.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (3 samples, 0.04%)</title><rect x="333.8" y="437" width="0.5" height="15.0" fill="rgb(210,122,36)" rx="2" ry="2" />
<text  x="336.85" y="447.5" ></text>
</g>
<g >
<title>Cache::System (2 samples, 0.02%)</title><rect x="988.7" y="453" width="0.3" height="15.0" fill="rgb(235,80,53)" rx="2" ry="2" />
<text  x="991.71" y="463.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (3 samples, 0.04%)</title><rect x="559.9" y="469" width="0.5" height="15.0" fill="rgb(215,118,3)" rx="2" ry="2" />
<text  x="562.95" y="479.5" ></text>
</g>
<g >
<title>add_wait_queue (1 samples, 0.01%)</title><rect x="38.7" y="581" width="0.1" height="15.0" fill="rgb(209,191,43)" rx="2" ry="2" />
<text  x="41.68" y="591.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="780.0" y="165" width="0.4" height="15.0" fill="rgb(245,202,6)" rx="2" ry="2" />
<text  x="782.98" y="175.5" ></text>
</g>
<g >
<title>__fget_light (4 samples, 0.05%)</title><rect x="24.1" y="613" width="0.5" height="15.0" fill="rgb(240,54,31)" rx="2" ry="2" />
<text  x="27.06" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.18%)</title><rect x="991.1" y="485" width="2.0" height="15.0" fill="rgb(220,152,34)" rx="2" ry="2" />
<text  x="994.06" y="495.5" ></text>
</g>
<g >
<title>SDL_ConvertPixels_REAL (1,205 samples, 14.08%)</title><rect x="996.4" y="517" width="166.2" height="15.0" fill="rgb(237,225,41)" rx="2" ry="2" />
<text  x="999.44" y="527.5" >SDL_ConvertPixels_REAL</text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.01%)</title><rect x="989.8" y="389" width="0.2" height="15.0" fill="rgb(246,67,32)" rx="2" ry="2" />
<text  x="992.82" y="399.5" ></text>
</g>
<g >
<title>SDL_EventState_REAL (1 samples, 0.01%)</title><rect x="989.4" y="501" width="0.1" height="15.0" fill="rgb(209,113,53)" rx="2" ry="2" />
<text  x="992.40" y="511.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="540.1" y="357" width="0.1" height="15.0" fill="rgb(241,59,2)" rx="2" ry="2" />
<text  x="543.10" y="367.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.02%)</title><rect x="272.8" y="389" width="0.2" height="15.0" fill="rgb(217,163,27)" rx="2" ry="2" />
<text  x="275.77" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="350.1" y="373" width="0.3" height="15.0" fill="rgb(231,63,5)" rx="2" ry="2" />
<text  x="353.12" y="383.5" ></text>
</g>
<g >
<title>_nv029793rm (1 samples, 0.01%)</title><rect x="837.9" y="309" width="0.1" height="15.0" fill="rgb(230,63,3)" rx="2" ry="2" />
<text  x="840.89" y="319.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (1 samples, 0.01%)</title><rect x="139.5" y="453" width="0.1" height="15.0" fill="rgb(231,93,50)" rx="2" ry="2" />
<text  x="142.46" y="463.5" ></text>
</g>
<g >
<title>SDL_GetTicks_REAL (2 samples, 0.02%)</title><rect x="989.5" y="501" width="0.3" height="15.0" fill="rgb(210,217,45)" rx="2" ry="2" />
<text  x="992.54" y="511.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.01%)</title><rect x="453.2" y="453" width="0.2" height="15.0" fill="rgb(216,67,47)" rx="2" ry="2" />
<text  x="456.24" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.05%)</title><rect x="71.8" y="645" width="0.5" height="15.0" fill="rgb(253,49,54)" rx="2" ry="2" />
<text  x="74.76" y="655.5" ></text>
</g>
<g >
<title>strlen@plt (1 samples, 0.01%)</title><rect x="645.8" y="325" width="0.2" height="15.0" fill="rgb(225,120,37)" rx="2" ry="2" />
<text  x="648.84" y="335.5" ></text>
</g>
<g >
<title>operator== (2 samples, 0.02%)</title><rect x="870.7" y="405" width="0.3" height="15.0" fill="rgb(231,115,2)" rx="2" ry="2" />
<text  x="873.70" y="415.5" ></text>
</g>
<g >
<title>BlitNtoNCopyAlpha (1,203 samples, 14.06%)</title><rect x="996.7" y="485" width="165.9" height="15.0" fill="rgb(234,64,32)" rx="2" ry="2" />
<text  x="999.71" y="495.5" >BlitNtoNCopyAlpha</text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (13 samples, 0.15%)</title><rect x="991.3" y="309" width="1.8" height="15.0" fill="rgb(211,70,41)" rx="2" ry="2" />
<text  x="994.33" y="319.5" ></text>
</g>
<g >
<title>Game_Map::Refresh (2 samples, 0.02%)</title><rect x="45.8" y="677" width="0.3" height="15.0" fill="rgb(252,163,14)" rx="2" ry="2" />
<text  x="48.85" y="687.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (108 samples, 1.26%)</title><rect x="838.7" y="261" width="14.9" height="15.0" fill="rgb(208,28,52)" rx="2" ry="2" />
<text  x="841.72" y="271.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (2 samples, 0.02%)</title><rect x="964.3" y="485" width="0.3" height="15.0" fill="rgb(208,143,28)" rx="2" ry="2" />
<text  x="967.31" y="495.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="802.7" y="117" width="0.2" height="15.0" fill="rgb(226,198,53)" rx="2" ry="2" />
<text  x="805.73" y="127.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (1 samples, 0.01%)</title><rect x="993.5" y="309" width="0.2" height="15.0" fill="rgb(221,181,50)" rx="2" ry="2" />
<text  x="996.54" y="319.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_manager (2 samples, 0.02%)</title><rect x="116.8" y="677" width="0.3" height="15.0" fill="rgb(243,162,38)" rx="2" ry="2" />
<text  x="119.85" y="687.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (10 samples, 0.12%)</title><rect x="324.6" y="485" width="1.4" height="15.0" fill="rgb(239,164,47)" rx="2" ry="2" />
<text  x="327.61" y="495.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="540.1" y="437" width="0.1" height="15.0" fill="rgb(247,203,24)" rx="2" ry="2" />
<text  x="543.10" y="447.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (323 samples, 3.77%)</title><rect x="278.3" y="437" width="44.5" height="15.0" fill="rgb(223,33,25)" rx="2" ry="2" />
<text  x="281.29" y="447.5" >[lib..</text>
</g>
<g >
<title>Game_Interpreter::ValueOrVariable (25 samples, 0.29%)</title><rect x="570.3" y="469" width="3.4" height="15.0" fill="rgb(236,3,19)" rx="2" ry="2" />
<text  x="573.29" y="479.5" ></text>
</g>
<g >
<title>enqueue_task_fair (2 samples, 0.02%)</title><rect x="41.3" y="469" width="0.3" height="15.0" fill="rgb(221,157,47)" rx="2" ry="2" />
<text  x="44.30" y="479.5" ></text>
</g>
<g >
<title>operator()&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int&gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="352.0" y="453" width="0.2" height="15.0" fill="rgb(254,175,16)" rx="2" ry="2" />
<text  x="355.05" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="993.8" y="389" width="0.2" height="15.0" fill="rgb(226,193,51)" rx="2" ry="2" />
<text  x="996.82" y="399.5" ></text>
</g>
<g >
<title>Game_Character::GetX (1 samples, 0.01%)</title><rect x="958.2" y="501" width="0.2" height="15.0" fill="rgb(227,7,7)" rx="2" ry="2" />
<text  x="961.25" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="1174.3" y="437" width="0.1" height="15.0" fill="rgb(243,151,54)" rx="2" ry="2" />
<text  x="1177.28" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_poll (1 samples, 0.01%)</title><rect x="989.8" y="405" width="0.2" height="15.0" fill="rgb(238,222,18)" rx="2" ry="2" />
<text  x="992.82" y="415.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (18 samples, 0.21%)</title><rect x="814.3" y="325" width="2.5" height="15.0" fill="rgb(242,13,45)" rx="2" ry="2" />
<text  x="817.31" y="335.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (5 samples, 0.06%)</title><rect x="935.2" y="469" width="0.7" height="15.0" fill="rgb(206,219,11)" rx="2" ry="2" />
<text  x="938.22" y="479.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (40 samples, 0.47%)</title><rect x="875.5" y="405" width="5.5" height="15.0" fill="rgb(206,8,14)" rx="2" ry="2" />
<text  x="878.53" y="415.5" ></text>
</g>
<g >
<title>try_to_wake_up (6 samples, 0.07%)</title><rect x="41.0" y="517" width="0.8" height="15.0" fill="rgb(205,93,52)" rx="2" ry="2" />
<text  x="44.02" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="351.4" y="501" width="0.1" height="15.0" fill="rgb(226,18,0)" rx="2" ry="2" />
<text  x="354.36" y="511.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (14 samples, 0.16%)</title><rect x="636.2" y="309" width="1.9" height="15.0" fill="rgb(205,148,44)" rx="2" ry="2" />
<text  x="639.19" y="319.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (76 samples, 0.89%)</title><rect x="1175.4" y="549" width="10.5" height="15.0" fill="rgb(229,183,0)" rx="2" ry="2" />
<text  x="1178.39" y="559.5" ></text>
</g>
<g >
<title>select_idle_sibling (1 samples, 0.01%)</title><rect x="573.6" y="325" width="0.1" height="15.0" fill="rgb(227,84,11)" rx="2" ry="2" />
<text  x="576.60" y="335.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (3 samples, 0.04%)</title><rect x="55.8" y="677" width="0.4" height="15.0" fill="rgb(239,215,1)" rx="2" ry="2" />
<text  x="58.77" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, unsigned long, true&gt;::_S_equals (5 samples, 0.06%)</title><rect x="614.4" y="245" width="0.7" height="15.0" fill="rgb(213,152,54)" rx="2" ry="2" />
<text  x="617.41" y="255.5" ></text>
</g>
<g >
<title>Tone::Tone (5 samples, 0.06%)</title><rect x="817.9" y="373" width="0.7" height="15.0" fill="rgb(232,206,30)" rx="2" ry="2" />
<text  x="820.90" y="383.5" ></text>
</g>
<g >
<title>Sprite::SetOy (1 samples, 0.01%)</title><rect x="58.8" y="677" width="0.1" height="15.0" fill="rgb(225,217,11)" rx="2" ry="2" />
<text  x="61.80" y="687.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="273.0" y="453" width="0.2" height="15.0" fill="rgb(232,129,3)" rx="2" ry="2" />
<text  x="276.05" y="463.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (68 samples, 0.79%)</title><rect x="618.5" y="245" width="9.4" height="15.0" fill="rgb(242,57,10)" rx="2" ry="2" />
<text  x="621.54" y="255.5" ></text>
</g>
<g >
<title>__libc_recvmsg (2 samples, 0.02%)</title><rect x="993.5" y="373" width="0.3" height="15.0" fill="rgb(219,215,11)" rx="2" ry="2" />
<text  x="996.54" y="383.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (3 samples, 0.04%)</title><rect x="769.0" y="309" width="0.4" height="15.0" fill="rgb(242,61,46)" rx="2" ry="2" />
<text  x="771.96" y="319.5" ></text>
</g>
<g >
<title>Input::UiSource::Update (2 samples, 0.02%)</title><rect x="351.9" y="549" width="0.3" height="15.0" fill="rgb(228,99,26)" rx="2" ry="2" />
<text  x="354.91" y="559.5" ></text>
</g>
<g >
<title>Bitmap::Clear (7 samples, 0.08%)</title><rect x="769.6" y="373" width="1.0" height="15.0" fill="rgb(208,196,53)" rx="2" ry="2" />
<text  x="772.64" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (18 samples, 0.21%)</title><rect x="602.4" y="277" width="2.5" height="15.0" fill="rgb(216,103,28)" rx="2" ry="2" />
<text  x="605.41" y="287.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (8 samples, 0.09%)</title><rect x="54.0" y="677" width="1.1" height="15.0" fill="rgb(205,227,9)" rx="2" ry="2" />
<text  x="56.98" y="687.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (4 samples, 0.05%)</title><rect x="379.1" y="453" width="0.5" height="15.0" fill="rgb(206,23,19)" rx="2" ry="2" />
<text  x="382.07" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (1 samples, 0.01%)</title><rect x="833.3" y="341" width="0.2" height="15.0" fill="rgb(248,179,11)" rx="2" ry="2" />
<text  x="836.34" y="351.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="560.6" y="437" width="0.2" height="15.0" fill="rgb(229,4,52)" rx="2" ry="2" />
<text  x="563.64" y="447.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="1187.0" y="533" width="0.1" height="15.0" fill="rgb(216,215,24)" rx="2" ry="2" />
<text  x="1189.97" y="543.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (5 samples, 0.06%)</title><rect x="905.3" y="469" width="0.7" height="15.0" fill="rgb(253,166,46)" rx="2" ry="2" />
<text  x="908.31" y="479.5" ></text>
</g>
<g >
<title>Game_Picture::Show (2,229 samples, 26.04%)</title><rect x="573.7" y="469" width="307.3" height="15.0" fill="rgb(253,185,49)" rx="2" ry="2" />
<text  x="576.74" y="479.5" >Game_Picture::Show</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (2 samples, 0.02%)</title><rect x="638.1" y="325" width="0.3" height="15.0" fill="rgb(233,135,18)" rx="2" ry="2" />
<text  x="641.12" y="335.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (40 samples, 0.47%)</title><rect x="875.5" y="421" width="5.5" height="15.0" fill="rgb(212,37,44)" rx="2" ry="2" />
<text  x="878.53" y="431.5" ></text>
</g>
<g >
<title>unix_poll (1 samples, 0.01%)</title><rect x="38.8" y="629" width="0.2" height="15.0" fill="rgb(250,84,15)" rx="2" ry="2" />
<text  x="41.81" y="639.5" ></text>
</g>
<g >
<title>Graphics::Draw (1,537 samples, 17.96%)</title><rect x="139.3" y="565" width="211.9" height="15.0" fill="rgb(229,167,54)" rx="2" ry="2" />
<text  x="142.32" y="575.5" >Graphics::Draw</text>
</g>
<g >
<title>Cache::Picture (341 samples, 3.98%)</title><rect x="599.7" y="389" width="47.0" height="15.0" fill="rgb(252,81,4)" rx="2" ry="2" />
<text  x="602.66" y="399.5" >Cach..</text>
</g>
<g >
<title>fsnotify (1 samples, 0.01%)</title><rect x="40.1" y="597" width="0.1" height="15.0" fill="rgb(227,113,24)" rx="2" ry="2" />
<text  x="43.05" y="607.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (154 samples, 1.80%)</title><rect x="835.5" y="341" width="21.3" height="15.0" fill="rgb(212,168,25)" rx="2" ry="2" />
<text  x="838.55" y="351.5" ></text>
</g>
<g >
<title>Tone::Tone (3 samples, 0.04%)</title><rect x="977.7" y="469" width="0.4" height="15.0" fill="rgb(206,59,37)" rx="2" ry="2" />
<text  x="980.69" y="479.5" ></text>
</g>
<g >
<title>Bitmap::height (2 samples, 0.02%)</title><rect x="769.8" y="341" width="0.3" height="15.0" fill="rgb(250,196,46)" rx="2" ry="2" />
<text  x="772.78" y="351.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.01%)</title><rect x="23.9" y="613" width="0.2" height="15.0" fill="rgb(229,89,14)" rx="2" ry="2" />
<text  x="26.92" y="623.5" ></text>
</g>
<g >
<title>Game_Map::SetNeedRefresh (5 samples, 0.06%)</title><rect x="46.1" y="677" width="0.7" height="15.0" fill="rgb(206,174,20)" rx="2" ry="2" />
<text  x="49.12" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (1 samples, 0.01%)</title><rect x="858.3" y="405" width="0.1" height="15.0" fill="rgb(208,196,14)" rx="2" ry="2" />
<text  x="861.29" y="415.5" ></text>
</g>
<g >
<title>account_entity_dequeue (1 samples, 0.01%)</title><rect x="272.9" y="277" width="0.1" height="15.0" fill="rgb(251,21,4)" rx="2" ry="2" />
<text  x="275.91" y="287.5" ></text>
</g>
<g >
<title>XFilterEvent (1 samples, 0.01%)</title><rect x="993.1" y="469" width="0.2" height="15.0" fill="rgb(219,159,15)" rx="2" ry="2" />
<text  x="996.13" y="479.5" ></text>
</g>
<g >
<title>Sprite::SetWaverDepth (1 samples, 0.01%)</title><rect x="816.9" y="373" width="0.2" height="15.0" fill="rgb(206,169,10)" rx="2" ry="2" />
<text  x="819.93" y="383.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="638.0" y="213" width="0.1" height="15.0" fill="rgb(250,188,44)" rx="2" ry="2" />
<text  x="640.98" y="223.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (1 samples, 0.01%)</title><rect x="990.4" y="245" width="0.1" height="15.0" fill="rgb(207,51,36)" rx="2" ry="2" />
<text  x="993.37" y="255.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::CommonEvent&gt; (5 samples, 0.06%)</title><rect x="959.9" y="453" width="0.7" height="15.0" fill="rgb(218,128,50)" rx="2" ry="2" />
<text  x="962.90" y="463.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="273.0" y="437" width="0.2" height="15.0" fill="rgb(230,165,15)" rx="2" ry="2" />
<text  x="276.05" y="447.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (15 samples, 0.18%)</title><rect x="348.3" y="453" width="2.1" height="15.0" fill="rgb(205,61,29)" rx="2" ry="2" />
<text  x="351.32" y="463.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (3 samples, 0.04%)</title><rect x="71.1" y="533" width="0.4" height="15.0" fill="rgb(228,199,0)" rx="2" ry="2" />
<text  x="74.07" y="543.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandMovePicture (17 samples, 0.20%)</title><rect x="561.1" y="485" width="2.3" height="15.0" fill="rgb(250,207,43)" rx="2" ry="2" />
<text  x="564.05" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="1174.3" y="453" width="0.1" height="15.0" fill="rgb(214,218,39)" rx="2" ry="2" />
<text  x="1177.28" y="463.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (8 samples, 0.09%)</title><rect x="326.0" y="437" width="1.1" height="15.0" fill="rgb(233,89,4)" rx="2" ry="2" />
<text  x="328.99" y="447.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="993.8" y="373" width="0.2" height="15.0" fill="rgb(210,114,19)" rx="2" ry="2" />
<text  x="996.82" y="383.5" ></text>
</g>
<g >
<title>security_file_permission (4 samples, 0.05%)</title><rect x="40.2" y="597" width="0.5" height="15.0" fill="rgb(224,74,49)" rx="2" ry="2" />
<text  x="43.19" y="607.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="963.5" y="405" width="0.1" height="15.0" fill="rgb(226,23,32)" rx="2" ry="2" />
<text  x="966.49" y="415.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="37.4" y="469" width="0.2" height="15.0" fill="rgb(233,136,16)" rx="2" ry="2" />
<text  x="40.44" y="479.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.01%)</title><rect x="885.6" y="357" width="0.1" height="15.0" fill="rgb(206,136,17)" rx="2" ry="2" />
<text  x="888.59" y="367.5" ></text>
</g>
<g >
<title>Sprite::SetAngle (1 samples, 0.01%)</title><rect x="812.0" y="373" width="0.1" height="15.0" fill="rgb(253,194,40)" rx="2" ry="2" />
<text  x="814.97" y="383.5" ></text>
</g>
<g >
<title>pixman_image_get_height (2 samples, 0.02%)</title><rect x="872.5" y="437" width="0.3" height="15.0" fill="rgb(207,165,33)" rx="2" ry="2" />
<text  x="875.49" y="447.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (84 samples, 0.98%)</title><rect x="861.5" y="453" width="11.5" height="15.0" fill="rgb(232,216,19)" rx="2" ry="2" />
<text  x="864.46" y="463.5" ></text>
</g>
<g >
<title>XFlush (7 samples, 0.08%)</title><rect x="990.1" y="485" width="1.0" height="15.0" fill="rgb(239,114,13)" rx="2" ry="2" />
<text  x="993.09" y="495.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (212 samples, 2.48%)</title><rect x="357.0" y="549" width="29.2" height="15.0" fill="rgb(254,193,38)" rx="2" ry="2" />
<text  x="360.01" y="559.5" >__..</text>
</g>
<g >
<title>[libGLX.so.0.0.0] (8 samples, 0.09%)</title><rect x="1173.9" y="533" width="1.1" height="15.0" fill="rgb(234,59,24)" rx="2" ry="2" />
<text  x="1176.87" y="543.5" ></text>
</g>
<g >
<title>udev_monitor_get_fd (1 samples, 0.01%)</title><rect x="52.2" y="677" width="0.1" height="15.0" fill="rgb(244,219,0)" rx="2" ry="2" />
<text  x="55.19" y="687.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (49 samples, 0.57%)</title><rect x="1166.8" y="341" width="6.8" height="15.0" fill="rgb(235,17,11)" rx="2" ry="2" />
<text  x="1169.84" y="351.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (80 samples, 0.93%)</title><rect x="585.5" y="405" width="11.0" height="15.0" fill="rgb(207,106,54)" rx="2" ry="2" />
<text  x="588.46" y="415.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (1 samples, 0.01%)</title><rect x="858.8" y="389" width="0.2" height="15.0" fill="rgb(210,89,50)" rx="2" ry="2" />
<text  x="861.84" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (1 samples, 0.01%)</title><rect x="1189.6" y="661" width="0.1" height="15.0" fill="rgb(232,51,53)" rx="2" ry="2" />
<text  x="1192.59" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_write (14 samples, 0.16%)</title><rect x="40.7" y="661" width="2.0" height="15.0" fill="rgb(237,227,17)" rx="2" ry="2" />
<text  x="43.74" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (5 samples, 0.06%)</title><rect x="580.5" y="325" width="0.7" height="15.0" fill="rgb(223,175,12)" rx="2" ry="2" />
<text  x="583.49" y="335.5" ></text>
</g>
<g >
<title>Utils::GetRandomNumber (2 samples, 0.02%)</title><rect x="548.4" y="469" width="0.2" height="15.0" fill="rgb(209,180,50)" rx="2" ry="2" />
<text  x="551.37" y="479.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (1 samples, 0.01%)</title><rect x="39.1" y="581" width="0.1" height="15.0" fill="rgb(251,74,22)" rx="2" ry="2" />
<text  x="42.09" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (2 samples, 0.02%)</title><rect x="642.3" y="213" width="0.2" height="15.0" fill="rgb(230,161,13)" rx="2" ry="2" />
<text  x="645.26" y="223.5" ></text>
</g>
<g >
<title>SDL_JoystickUpdate_REAL (1 samples, 0.01%)</title><rect x="989.3" y="517" width="0.1" height="15.0" fill="rgb(251,19,53)" rx="2" ry="2" />
<text  x="992.27" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (39 samples, 0.46%)</title><rect x="611.9" y="309" width="5.4" height="15.0" fill="rgb(232,4,39)" rx="2" ry="2" />
<text  x="614.93" y="319.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (18 samples, 0.21%)</title><rect x="571.1" y="453" width="2.5" height="15.0" fill="rgb(239,148,5)" rx="2" ry="2" />
<text  x="574.12" y="463.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (12 samples, 0.14%)</title><rect x="636.2" y="261" width="1.6" height="15.0" fill="rgb(210,139,34)" rx="2" ry="2" />
<text  x="639.19" y="271.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (1 samples, 0.01%)</title><rect x="343.1" y="437" width="0.1" height="15.0" fill="rgb(209,102,54)" rx="2" ry="2" />
<text  x="346.09" y="447.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="941.4" y="469" width="0.3" height="15.0" fill="rgb(219,223,45)" rx="2" ry="2" />
<text  x="944.43" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (16 samples, 0.19%)</title><rect x="906.3" y="469" width="2.2" height="15.0" fill="rgb(207,160,36)" rx="2" ry="2" />
<text  x="909.27" y="479.5" ></text>
</g>
<g >
<title>_nv025200rm (1 samples, 0.01%)</title><rect x="447.3" y="453" width="0.2" height="15.0" fill="rgb(229,212,33)" rx="2" ry="2" />
<text  x="450.31" y="463.5" ></text>
</g>
<g >
<title>_int_free (2 samples, 0.02%)</title><rect x="617.6" y="261" width="0.3" height="15.0" fill="rgb(247,44,10)" rx="2" ry="2" />
<text  x="620.58" y="271.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingForegroundExecution (11 samples, 0.13%)</title><rect x="959.1" y="469" width="1.5" height="15.0" fill="rgb(242,184,9)" rx="2" ry="2" />
<text  x="962.07" y="479.5" ></text>
</g>
<g >
<title>_int_free (7 samples, 0.08%)</title><rect x="853.6" y="261" width="1.0" height="15.0" fill="rgb(250,220,11)" rx="2" ry="2" />
<text  x="856.61" y="271.5" ></text>
</g>
<g >
<title>Sprite::SetOpacity (3 samples, 0.04%)</title><rect x="978.2" y="485" width="0.5" height="15.0" fill="rgb(223,48,42)" rx="2" ry="2" />
<text  x="981.24" y="495.5" ></text>
</g>
<g >
<title>Bitmap::GetRect (9 samples, 0.11%)</title><rect x="813.1" y="357" width="1.2" height="15.0" fill="rgb(232,229,49)" rx="2" ry="2" />
<text  x="816.07" y="367.5" ></text>
</g>
<g >
<title>GL_UpdateTexture (79 samples, 0.92%)</title><rect x="1162.7" y="485" width="10.9" height="15.0" fill="rgb(248,112,1)" rx="2" ry="2" />
<text  x="1165.70" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_read (13 samples, 0.15%)</title><rect x="39.0" y="661" width="1.7" height="15.0" fill="rgb(225,55,45)" rx="2" ry="2" />
<text  x="41.95" y="671.5" ></text>
</g>
<g >
<title>none_of&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int&gt; &gt;, Input::UiSource::Update()::&lt;lambda(int)&gt; &gt; (1 samples, 0.01%)</title><rect x="352.0" y="517" width="0.2" height="15.0" fill="rgb(246,121,11)" rx="2" ry="2" />
<text  x="355.05" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="115.7" y="645" width="0.2" height="15.0" fill="rgb(230,104,14)" rx="2" ry="2" />
<text  x="118.74" y="655.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (13 samples, 0.15%)</title><rect x="887.8" y="405" width="1.8" height="15.0" fill="rgb(226,69,22)" rx="2" ry="2" />
<text  x="890.80" y="415.5" ></text>
</g>
<g >
<title>scheduler_tick (2 samples, 0.02%)</title><rect x="272.8" y="325" width="0.2" height="15.0" fill="rgb(241,182,21)" rx="2" ry="2" />
<text  x="275.77" y="335.5" ></text>
</g>
<g >
<title>dequeue_entity (2 samples, 0.02%)</title><rect x="26.8" y="517" width="0.3" height="15.0" fill="rgb(206,76,50)" rx="2" ry="2" />
<text  x="29.82" y="527.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.01%)</title><rect x="117.4" y="677" width="0.1" height="15.0" fill="rgb(238,49,28)" rx="2" ry="2" />
<text  x="120.40" y="687.5" ></text>
</g>
<g >
<title>__update_load_avg_se (1 samples, 0.01%)</title><rect x="861.3" y="293" width="0.2" height="15.0" fill="rgb(226,38,43)" rx="2" ry="2" />
<text  x="864.33" y="303.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.01%)</title><rect x="987.6" y="293" width="0.1" height="15.0" fill="rgb(213,107,8)" rx="2" ry="2" />
<text  x="990.61" y="303.5" ></text>
</g>
<g >
<title>Game_Picture::SetNonEffectParams (2 samples, 0.02%)</title><rect x="562.8" y="453" width="0.3" height="15.0" fill="rgb(226,182,28)" rx="2" ry="2" />
<text  x="565.84" y="463.5" ></text>
</g>
<g >
<title>Game_Screen::GetTone (20 samples, 0.23%)</title><rect x="808.8" y="373" width="2.8" height="15.0" fill="rgb(231,39,20)" rx="2" ry="2" />
<text  x="811.80" y="383.5" ></text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (1 samples, 0.01%)</title><rect x="55.2" y="677" width="0.2" height="15.0" fill="rgb(207,116,32)" rx="2" ry="2" />
<text  x="58.22" y="687.5" ></text>
</g>
<g >
<title>__sched_text_start (2 samples, 0.02%)</title><rect x="72.0" y="581" width="0.3" height="15.0" fill="rgb(244,97,2)" rx="2" ry="2" />
<text  x="75.04" y="591.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.01%)</title><rect x="21.3" y="629" width="0.1" height="15.0" fill="rgb(242,32,31)" rx="2" ry="2" />
<text  x="24.31" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (1 samples, 0.01%)</title><rect x="63.1" y="677" width="0.1" height="15.0" fill="rgb(236,60,18)" rx="2" ry="2" />
<text  x="66.08" y="687.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="939.8" y="453" width="0.1" height="15.0" fill="rgb(205,98,27)" rx="2" ry="2" />
<text  x="942.77" y="463.5" ></text>
</g>
<g >
<title>Player::IsRPG2k3 (23 samples, 0.27%)</title><rect x="537.1" y="453" width="3.1" height="15.0" fill="rgb(213,36,10)" rx="2" ry="2" />
<text  x="540.06" y="463.5" ></text>
</g>
<g >
<title>activate_task (4 samples, 0.05%)</title><rect x="41.3" y="485" width="0.5" height="15.0" fill="rgb(213,153,54)" rx="2" ry="2" />
<text  x="44.30" y="495.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (248 samples, 2.90%)</title><rect x="771.0" y="229" width="34.2" height="15.0" fill="rgb(211,49,0)" rx="2" ry="2" />
<text  x="774.02" y="239.5" >Bi..</text>
</g>
<g >
<title>Graphics::IsTransitionPending (1 samples, 0.01%)</title><rect x="117.8" y="629" width="0.1" height="15.0" fill="rgb(248,28,22)" rx="2" ry="2" />
<text  x="120.81" y="639.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (2 samples, 0.02%)</title><rect x="337.4" y="485" width="0.3" height="15.0" fill="rgb(210,163,21)" rx="2" ry="2" />
<text  x="340.43" y="495.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (4 samples, 0.05%)</title><rect x="614.5" y="197" width="0.6" height="15.0" fill="rgb(234,53,23)" rx="2" ry="2" />
<text  x="617.54" y="207.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (11 samples, 0.13%)</title><rect x="835.5" y="325" width="1.6" height="15.0" fill="rgb(250,221,27)" rx="2" ry="2" />
<text  x="838.55" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (14 samples, 0.16%)</title><rect x="585.6" y="373" width="1.9" height="15.0" fill="rgb(217,77,44)" rx="2" ry="2" />
<text  x="588.59" y="383.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 2ul, 3ul&gt;::__less (1 samples, 0.01%)</title><rect x="618.5" y="229" width="0.2" height="15.0" fill="rgb(249,118,10)" rx="2" ry="2" />
<text  x="621.54" y="239.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (9 samples, 0.11%)</title><rect x="830.6" y="373" width="1.2" height="15.0" fill="rgb(240,183,52)" rx="2" ry="2" />
<text  x="833.58" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (13 samples, 0.15%)</title><rect x="910.4" y="469" width="1.8" height="15.0" fill="rgb(231,60,35)" rx="2" ry="2" />
<text  x="913.41" y="479.5" ></text>
</g>
<g >
<title>Sprite::GetZ (1 samples, 0.01%)</title><rect x="342.9" y="421" width="0.2" height="15.0" fill="rgb(224,159,29)" rx="2" ry="2" />
<text  x="345.95" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="1189.6" y="677" width="0.1" height="15.0" fill="rgb(250,28,40)" rx="2" ry="2" />
<text  x="1192.59" y="687.5" ></text>
</g>
<g >
<title>_int_free (79 samples, 0.92%)</title><rect x="842.3" y="245" width="10.9" height="15.0" fill="rgb(239,15,37)" rx="2" ry="2" />
<text  x="845.30" y="255.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.01%)</title><rect x="39.5" y="565" width="0.1" height="15.0" fill="rgb(243,199,23)" rx="2" ry="2" />
<text  x="42.50" y="575.5" ></text>
</g>
<g >
<title>Game_Map::Refresh (18 samples, 0.21%)</title><rect x="937.4" y="485" width="2.5" height="15.0" fill="rgb(220,47,26)" rx="2" ry="2" />
<text  x="940.43" y="495.5" ></text>
</g>
<g >
<title>_nv029793rm (1 samples, 0.01%)</title><rect x="431.3" y="437" width="0.2" height="15.0" fill="rgb(225,155,3)" rx="2" ry="2" />
<text  x="434.32" y="447.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="973.8" y="437" width="0.2" height="15.0" fill="rgb(210,5,15)" rx="2" ry="2" />
<text  x="976.83" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.05%)</title><rect x="71.8" y="661" width="0.5" height="15.0" fill="rgb(232,140,31)" rx="2" ry="2" />
<text  x="74.76" y="671.5" ></text>
</g>
<g >
<title>GL_LockTexture (1 samples, 0.01%)</title><rect x="1162.6" y="485" width="0.1" height="15.0" fill="rgb(245,136,22)" rx="2" ry="2" />
<text  x="1165.56" y="495.5" ></text>
</g>
<g >
<title>easyrpg-player (8,318 samples, 97.18%)</title><rect x="43.2" y="709" width="1146.8" height="15.0" fill="rgb(234,111,46)" rx="2" ry="2" />
<text  x="46.23" y="719.5" >easyrpg-player</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="1189.3" y="693" width="0.4" height="15.0" fill="rgb(216,105,2)" rx="2" ry="2" />
<text  x="1192.31" y="703.5" ></text>
</g>
<g >
<title>pixman_image_unref (116 samples, 1.36%)</title><rect x="838.6" y="277" width="16.0" height="15.0" fill="rgb(223,111,5)" rx="2" ry="2" />
<text  x="841.58" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (1 samples, 0.01%)</title><rect x="858.4" y="405" width="0.2" height="15.0" fill="rgb(209,79,45)" rx="2" ry="2" />
<text  x="861.43" y="415.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (2 samples, 0.02%)</title><rect x="866.8" y="437" width="0.3" height="15.0" fill="rgb(254,81,34)" rx="2" ry="2" />
<text  x="869.84" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (24 samples, 0.28%)</title><rect x="601.6" y="293" width="3.3" height="15.0" fill="rgb(210,85,5)" rx="2" ry="2" />
<text  x="604.59" y="303.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="273.0" y="373" width="0.2" height="15.0" fill="rgb(229,25,1)" rx="2" ry="2" />
<text  x="276.05" y="383.5" ></text>
</g>
<g >
<title>__GI___pthread_rwlock_unlock (2 samples, 0.02%)</title><rect x="1174.4" y="485" width="0.3" height="15.0" fill="rgb(206,92,6)" rx="2" ry="2" />
<text  x="1177.42" y="495.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.01%)</title><rect x="323.5" y="421" width="0.1" height="15.0" fill="rgb(242,212,12)" rx="2" ry="2" />
<text  x="326.51" y="431.5" ></text>
</g>
<g >
<title>SDL_UpdateTextureNative (1,285 samples, 15.01%)</title><rect x="996.4" y="533" width="177.2" height="15.0" fill="rgb(221,155,9)" rx="2" ry="2" />
<text  x="999.44" y="543.5" >SDL_UpdateTextureNative</text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="912.1" y="421" width="0.1" height="15.0" fill="rgb(219,21,52)" rx="2" ry="2" />
<text  x="915.06" y="431.5" ></text>
</g>
<g >
<title>pixman_region32_fini (1 samples, 0.01%)</title><rect x="51.4" y="677" width="0.1" height="15.0" fill="rgb(211,119,26)" rx="2" ry="2" />
<text  x="54.36" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (2 samples, 0.02%)</title><rect x="589.3" y="325" width="0.3" height="15.0" fill="rgb(247,30,40)" rx="2" ry="2" />
<text  x="592.32" y="335.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (4 samples, 0.05%)</title><rect x="857.9" y="421" width="0.5" height="15.0" fill="rgb(251,224,50)" rx="2" ry="2" />
<text  x="860.88" y="431.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="799.1" y="101" width="0.2" height="15.0" fill="rgb(219,106,23)" rx="2" ry="2" />
<text  x="802.15" y="111.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.02%)</title><rect x="941.4" y="453" width="0.3" height="15.0" fill="rgb(208,188,19)" rx="2" ry="2" />
<text  x="944.43" y="463.5" ></text>
</g>
<g >
<title>put_prev_entity (1 samples, 0.01%)</title><rect x="453.2" y="357" width="0.2" height="15.0" fill="rgb(216,19,13)" rx="2" ry="2" />
<text  x="456.24" y="367.5" ></text>
</g>
<g >
<title>GL_RenderClear (10 samples, 0.12%)</title><rect x="994.1" y="549" width="1.4" height="15.0" fill="rgb(241,215,7)" rx="2" ry="2" />
<text  x="997.09" y="559.5" ></text>
</g>
<g >
<title>SDL_UDEV_hotplug_update_available (1 samples, 0.01%)</title><rect x="989.3" y="469" width="0.1" height="15.0" fill="rgb(254,221,6)" rx="2" ry="2" />
<text  x="992.27" y="479.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (67 samples, 0.78%)</title><rect x="618.7" y="229" width="9.2" height="15.0" fill="rgb(246,152,54)" rx="2" ry="2" />
<text  x="621.68" y="239.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.01%)</title><rect x="27.4" y="549" width="0.1" height="15.0" fill="rgb(218,66,16)" rx="2" ry="2" />
<text  x="30.37" y="559.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.09%)</title><rect x="578.8" y="341" width="1.1" height="15.0" fill="rgb(220,102,32)" rx="2" ry="2" />
<text  x="581.84" y="351.5" ></text>
</g>
<g >
<title>pixman_image_create_solid_fill (4 samples, 0.05%)</title><rect x="322.8" y="453" width="0.6" height="15.0" fill="rgb(253,227,27)" rx="2" ry="2" />
<text  x="325.82" y="463.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="987.6" y="373" width="0.1" height="15.0" fill="rgb(226,196,29)" rx="2" ry="2" />
<text  x="990.61" y="383.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.02%)</title><rect x="941.4" y="405" width="0.3" height="15.0" fill="rgb(240,135,38)" rx="2" ry="2" />
<text  x="944.43" y="415.5" ></text>
</g>
<g >
<title>Game_Screen::GetFlashColor (9 samples, 0.11%)</title><rect x="867.1" y="437" width="1.3" height="15.0" fill="rgb(245,16,42)" rx="2" ry="2" />
<text  x="870.12" y="447.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.01%)</title><rect x="38.1" y="613" width="0.2" height="15.0" fill="rgb(207,88,22)" rx="2" ry="2" />
<text  x="41.12" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (1 samples, 0.01%)</title><rect x="605.0" y="293" width="0.2" height="15.0" fill="rgb(238,135,7)" rx="2" ry="2" />
<text  x="608.03" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::push_back (8 samples, 0.09%)</title><rect x="883.8" y="437" width="1.1" height="15.0" fill="rgb(230,189,44)" rx="2" ry="2" />
<text  x="886.80" y="447.5" ></text>
</g>
<g >
<title>Sprite::SetWaverDepth (1 samples, 0.01%)</title><rect x="871.0" y="437" width="0.1" height="15.0" fill="rgb(227,102,21)" rx="2" ry="2" />
<text  x="873.98" y="447.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char32_t&gt;::assign (1 samples, 0.01%)</title><rect x="884.8" y="421" width="0.1" height="15.0" fill="rgb(219,7,25)" rx="2" ry="2" />
<text  x="887.76" y="431.5" ></text>
</g>
<g >
<title>_nv029793rm (1 samples, 0.01%)</title><rect x="811.4" y="341" width="0.2" height="15.0" fill="rgb(226,214,28)" rx="2" ry="2" />
<text  x="814.42" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_free (6 samples, 0.07%)</title><rect x="112.6" y="677" width="0.8" height="15.0" fill="rgb(224,31,38)" rx="2" ry="2" />
<text  x="115.57" y="687.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="378.9" y="437" width="0.2" height="15.0" fill="rgb(235,212,26)" rx="2" ry="2" />
<text  x="381.93" y="447.5" ></text>
</g>
<g >
<title>pick_next_entity (1 samples, 0.01%)</title><rect x="72.2" y="549" width="0.1" height="15.0" fill="rgb(246,193,30)" rx="2" ry="2" />
<text  x="75.18" y="559.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="114.1" y="677" width="0.1" height="15.0" fill="rgb(254,106,51)" rx="2" ry="2" />
<text  x="117.09" y="687.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.01%)</title><rect x="37.4" y="533" width="0.2" height="15.0" fill="rgb(230,172,20)" rx="2" ry="2" />
<text  x="40.44" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (5 samples, 0.06%)</title><rect x="885.3" y="453" width="0.7" height="15.0" fill="rgb(227,184,49)" rx="2" ry="2" />
<text  x="888.31" y="463.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (9 samples, 0.11%)</title><rect x="64.0" y="677" width="1.3" height="15.0" fill="rgb(218,119,46)" rx="2" ry="2" />
<text  x="67.04" y="687.5" ></text>
</g>
<g >
<title>std::find&lt;int const*, int&gt; (1 samples, 0.01%)</title><rect x="565.2" y="453" width="0.1" height="15.0" fill="rgb(213,54,6)" rx="2" ry="2" />
<text  x="568.19" y="463.5" ></text>
</g>
<g >
<title>select_task_rq_fair (1 samples, 0.01%)</title><rect x="573.6" y="341" width="0.1" height="15.0" fill="rgb(229,131,28)" rx="2" ry="2" />
<text  x="576.60" y="351.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (2 samples, 0.02%)</title><rect x="57.2" y="677" width="0.2" height="15.0" fill="rgb(233,167,29)" rx="2" ry="2" />
<text  x="60.15" y="687.5" ></text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (1 samples, 0.01%)</title><rect x="963.6" y="501" width="0.2" height="15.0" fill="rgb(207,110,35)" rx="2" ry="2" />
<text  x="966.62" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (4 samples, 0.05%)</title><rect x="640.2" y="229" width="0.5" height="15.0" fill="rgb(241,65,15)" rx="2" ry="2" />
<text  x="643.19" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.01%)</title><rect x="858.4" y="357" width="0.2" height="15.0" fill="rgb(248,58,19)" rx="2" ry="2" />
<text  x="861.43" y="367.5" ></text>
</g>
<g >
<title>XInternAtom (1 samples, 0.01%)</title><rect x="108.7" y="677" width="0.2" height="15.0" fill="rgb(208,122,34)" rx="2" ry="2" />
<text  x="111.71" y="687.5" ></text>
</g>
<g >
<title>X11_Pending (5 samples, 0.06%)</title><rect x="993.4" y="485" width="0.7" height="15.0" fill="rgb(252,144,50)" rx="2" ry="2" />
<text  x="996.40" y="495.5" ></text>
</g>
<g >
<title>AsyncHandler::IsImportantFilePending (76 samples, 0.89%)</title><rect x="1175.4" y="565" width="10.5" height="15.0" fill="rgb(223,196,24)" rx="2" ry="2" />
<text  x="1178.39" y="575.5" ></text>
</g>
<g >
<title>Game_Screen::Update (200 samples, 2.34%)</title><rect x="960.6" y="533" width="27.6" height="15.0" fill="rgb(205,109,16)" rx="2" ry="2" />
<text  x="963.59" y="543.5" >G..</text>
</g>
<g >
<title>pixman_image_composite32 (8 samples, 0.09%)</title><rect x="114.8" y="677" width="1.1" height="15.0" fill="rgb(232,56,36)" rx="2" ry="2" />
<text  x="117.78" y="687.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="987.6" y="357" width="0.1" height="15.0" fill="rgb(212,126,6)" rx="2" ry="2" />
<text  x="990.61" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (30 samples, 0.35%)</title><rect x="589.6" y="341" width="4.1" height="15.0" fill="rgb(230,197,45)" rx="2" ry="2" />
<text  x="592.59" y="351.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.02%)</title><rect x="549.1" y="469" width="0.2" height="15.0" fill="rgb(206,176,42)" rx="2" ry="2" />
<text  x="552.06" y="479.5" ></text>
</g>
<g >
<title>finish_task_switch (70 samples, 0.82%)</title><rect x="27.5" y="549" width="9.7" height="15.0" fill="rgb(220,102,8)" rx="2" ry="2" />
<text  x="30.51" y="559.5" ></text>
</g>
<g >
<title>Sprite::SetFlashEffect (1 samples, 0.01%)</title><rect x="978.1" y="469" width="0.1" height="15.0" fill="rgb(212,85,20)" rx="2" ry="2" />
<text  x="981.10" y="479.5" ></text>
</g>
<g >
<title>SDL_IOReady (1 samples, 0.01%)</title><rect x="989.3" y="453" width="0.1" height="15.0" fill="rgb(248,1,1)" rx="2" ry="2" />
<text  x="992.27" y="463.5" ></text>
</g>
<g >
<title>tcache_put (2 samples, 0.02%)</title><rect x="597.2" y="325" width="0.2" height="15.0" fill="rgb(217,202,22)" rx="2" ry="2" />
<text  x="600.17" y="335.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (1 samples, 0.01%)</title><rect x="353.6" y="421" width="0.1" height="15.0" fill="rgb(235,190,7)" rx="2" ry="2" />
<text  x="356.56" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (4 samples, 0.05%)</title><rect x="935.4" y="453" width="0.5" height="15.0" fill="rgb(243,150,3)" rx="2" ry="2" />
<text  x="938.36" y="463.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (8 samples, 0.09%)</title><rect x="332.3" y="437" width="1.1" height="15.0" fill="rgb(253,66,35)" rx="2" ry="2" />
<text  x="335.33" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (1 samples, 0.01%)</title><rect x="561.7" y="437" width="0.2" height="15.0" fill="rgb(245,112,30)" rx="2" ry="2" />
<text  x="564.74" y="447.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="560.6" y="453" width="0.2" height="15.0" fill="rgb(234,141,23)" rx="2" ry="2" />
<text  x="563.64" y="463.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandElseBranch (2 samples, 0.02%)</title><rect x="905.0" y="469" width="0.3" height="15.0" fill="rgb(251,176,26)" rx="2" ry="2" />
<text  x="908.03" y="479.5" ></text>
</g>
<g >
<title>operator!= (1 samples, 0.01%)</title><rect x="978.1" y="453" width="0.1" height="15.0" fill="rgb(206,23,54)" rx="2" ry="2" />
<text  x="981.10" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (40 samples, 0.47%)</title><rect x="513.4" y="453" width="5.5" height="15.0" fill="rgb(208,174,12)" rx="2" ry="2" />
<text  x="516.35" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::operator[] (5 samples, 0.06%)</title><rect x="955.5" y="485" width="0.7" height="15.0" fill="rgb(235,149,44)" rx="2" ry="2" />
<text  x="958.49" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (1 samples, 0.01%)</title><rect x="449.1" y="453" width="0.1" height="15.0" fill="rgb(224,164,41)" rx="2" ry="2" />
<text  x="452.11" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (26 samples, 0.30%)</title><rect x="601.6" y="309" width="3.6" height="15.0" fill="rgb(237,141,40)" rx="2" ry="2" />
<text  x="604.59" y="319.5" ></text>
</g>
<g >
<title>__exchange_and_add (40 samples, 0.47%)</title><rect x="875.5" y="357" width="5.5" height="15.0" fill="rgb(207,52,6)" rx="2" ry="2" />
<text  x="878.53" y="367.5" ></text>
</g>
<g >
<title>__GI___nanosleep (23 samples, 0.27%)</title><rect x="352.9" y="549" width="3.1" height="15.0" fill="rgb(253,10,37)" rx="2" ry="2" />
<text  x="355.87" y="559.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="987.6" y="405" width="0.1" height="15.0" fill="rgb(227,101,49)" rx="2" ry="2" />
<text  x="990.61" y="415.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.01%)</title><rect x="858.4" y="325" width="0.2" height="15.0" fill="rgb(234,82,21)" rx="2" ry="2" />
<text  x="861.43" y="335.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_destroy (1 samples, 0.01%)</title><rect x="856.6" y="293" width="0.2" height="15.0" fill="rgb(228,204,13)" rx="2" ry="2" />
<text  x="859.64" y="303.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (34 samples, 0.40%)</title><rect x="812.1" y="373" width="4.7" height="15.0" fill="rgb(237,143,51)" rx="2" ry="2" />
<text  x="815.11" y="383.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (10 samples, 0.12%)</title><rect x="324.6" y="469" width="1.4" height="15.0" fill="rgb(206,21,6)" rx="2" ry="2" />
<text  x="327.61" y="479.5" ></text>
</g>
<g >
<title>__vfs_read (6 samples, 0.07%)</title><rect x="39.1" y="613" width="0.8" height="15.0" fill="rgb(233,181,43)" rx="2" ry="2" />
<text  x="42.09" y="623.5" ></text>
</g>
<g >
<title>__sched_text_start (13 samples, 0.15%)</title><rect x="991.3" y="389" width="1.8" height="15.0" fill="rgb(250,194,5)" rx="2" ry="2" />
<text  x="994.33" y="399.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="939.8" y="469" width="0.1" height="15.0" fill="rgb(241,46,26)" rx="2" ry="2" />
<text  x="942.77" y="479.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="935.9" y="437" width="0.1" height="15.0" fill="rgb(220,5,42)" rx="2" ry="2" />
<text  x="938.91" y="447.5" ></text>
</g>
<g >
<title>put_prev_task_fair (1 samples, 0.01%)</title><rect x="355.9" y="405" width="0.1" height="15.0" fill="rgb(247,64,52)" rx="2" ry="2" />
<text  x="358.91" y="415.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (2 samples, 0.02%)</title><rect x="353.3" y="437" width="0.3" height="15.0" fill="rgb(249,184,41)" rx="2" ry="2" />
<text  x="356.29" y="447.5" ></text>
</g>
<g >
<title>LoadBitmap&lt;(&lt;unnamed&gt;::Material::Type)8&gt; (340 samples, 3.97%)</title><rect x="599.8" y="373" width="46.9" height="15.0" fill="rgb(247,28,22)" rx="2" ry="2" />
<text  x="602.79" y="383.5" >Load..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.01%)</title><rect x="606.0" y="293" width="0.1" height="15.0" fill="rgb(217,160,39)" rx="2" ry="2" />
<text  x="609.00" y="303.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.01%)</title><rect x="23.5" y="645" width="0.1" height="15.0" fill="rgb(244,12,10)" rx="2" ry="2" />
<text  x="26.51" y="655.5" ></text>
</g>
<g >
<title>__GI___sched_yield (5 samples, 0.06%)</title><rect x="71.6" y="677" width="0.7" height="15.0" fill="rgb(244,209,11)" rx="2" ry="2" />
<text  x="74.63" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, true&gt;::_M_incr (35 samples, 0.41%)</title><rect x="133.1" y="533" width="4.8" height="15.0" fill="rgb(254,175,37)" rx="2" ry="2" />
<text  x="136.11" y="543.5" ></text>
</g>
<g >
<title>__exchange_and_add (8 samples, 0.09%)</title><rect x="854.7" y="261" width="1.1" height="15.0" fill="rgb(254,31,20)" rx="2" ry="2" />
<text  x="857.71" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (8 samples, 0.09%)</title><rect x="596.5" y="389" width="1.1" height="15.0" fill="rgb(216,109,1)" rx="2" ry="2" />
<text  x="599.48" y="399.5" ></text>
</g>
<g >
<title>Tone::Tone (7 samples, 0.08%)</title><rect x="871.5" y="437" width="1.0" height="15.0" fill="rgb(226,79,29)" rx="2" ry="2" />
<text  x="874.53" y="447.5" ></text>
</g>
<g >
<title>do_sys_poll (111 samples, 1.30%)</title><rect x="23.6" y="645" width="15.4" height="15.0" fill="rgb(221,156,31)" rx="2" ry="2" />
<text  x="26.65" y="655.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (3 samples, 0.04%)</title><rect x="996.0" y="501" width="0.4" height="15.0" fill="rgb(231,31,52)" rx="2" ry="2" />
<text  x="999.02" y="511.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="357.6" y="421" width="0.1" height="15.0" fill="rgb(234,128,33)" rx="2" ry="2" />
<text  x="360.56" y="431.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (3 samples, 0.04%)</title><rect x="993.5" y="421" width="0.5" height="15.0" fill="rgb(209,113,47)" rx="2" ry="2" />
<text  x="996.54" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (2 samples, 0.02%)</title><rect x="605.4" y="245" width="0.3" height="15.0" fill="rgb(230,211,41)" rx="2" ry="2" />
<text  x="608.45" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (2 samples, 0.02%)</title><rect x="645.2" y="293" width="0.2" height="15.0" fill="rgb(214,175,39)" rx="2" ry="2" />
<text  x="648.15" y="303.5" ></text>
</g>
<g >
<title>ttwu_do_activate (4 samples, 0.05%)</title><rect x="41.3" y="501" width="0.5" height="15.0" fill="rgb(241,23,0)" rx="2" ry="2" />
<text  x="44.30" y="511.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, true&gt; (23 samples, 0.27%)</title><rect x="639.4" y="341" width="3.1" height="15.0" fill="rgb(240,90,29)" rx="2" ry="2" />
<text  x="642.36" y="351.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (41 samples, 0.48%)</title><rect x="611.6" y="325" width="5.7" height="15.0" fill="rgb(209,25,45)" rx="2" ry="2" />
<text  x="614.65" y="335.5" ></text>
</g>
<g >
<title>[libGLdispatch.so.0.0.0] (1 samples, 0.01%)</title><rect x="1174.8" y="501" width="0.2" height="15.0" fill="rgb(241,140,48)" rx="2" ry="2" />
<text  x="1177.83" y="511.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (130 samples, 1.52%)</title><rect x="890.6" y="485" width="17.9" height="15.0" fill="rgb(233,8,52)" rx="2" ry="2" />
<text  x="893.55" y="495.5" ></text>
</g>
<g >
<title>pick_next_task_fair (5 samples, 0.06%)</title><rect x="37.2" y="549" width="0.6" height="15.0" fill="rgb(214,71,52)" rx="2" ry="2" />
<text  x="40.16" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (149 samples, 1.74%)</title><rect x="22.1" y="693" width="20.6" height="15.0" fill="rgb(220,18,23)" rx="2" ry="2" />
<text  x="25.13" y="703.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="25.3" y="581" width="0.1" height="15.0" fill="rgb(208,171,46)" rx="2" ry="2" />
<text  x="28.30" y="591.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;Drawable*&gt; (1 samples, 0.01%)</title><rect x="348.2" y="389" width="0.1" height="15.0" fill="rgb(251,128,50)" rx="2" ry="2" />
<text  x="351.19" y="399.5" ></text>
</g>
<g >
<title>Window_Selectable::Update (2 samples, 0.02%)</title><rect x="988.7" y="517" width="0.3" height="15.0" fill="rgb(232,14,39)" rx="2" ry="2" />
<text  x="991.71" y="527.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (7 samples, 0.08%)</title><rect x="578.8" y="325" width="1.0" height="15.0" fill="rgb(238,36,0)" rx="2" ry="2" />
<text  x="581.84" y="335.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="982.2" y="405" width="0.2" height="15.0" fill="rgb(225,211,51)" rx="2" ry="2" />
<text  x="985.24" y="415.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandErasePicture (2 samples, 0.02%)</title><rect x="550.9" y="485" width="0.2" height="15.0" fill="rgb(227,92,48)" rx="2" ry="2" />
<text  x="553.85" y="495.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.01%)</title><rect x="351.6" y="421" width="0.2" height="15.0" fill="rgb(228,152,23)" rx="2" ry="2" />
<text  x="354.63" y="431.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.02%)</title><rect x="272.8" y="437" width="0.2" height="15.0" fill="rgb(251,80,31)" rx="2" ry="2" />
<text  x="275.77" y="447.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.01%)</title><rect x="993.5" y="245" width="0.2" height="15.0" fill="rgb(233,98,1)" rx="2" ry="2" />
<text  x="996.54" y="255.5" ></text>
</g>
<g >
<title>update_nohz_stats (1 samples, 0.01%)</title><rect x="37.4" y="485" width="0.2" height="15.0" fill="rgb(248,4,54)" rx="2" ry="2" />
<text  x="40.44" y="495.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="861.3" y="373" width="0.2" height="15.0" fill="rgb(246,173,23)" rx="2" ry="2" />
<text  x="864.33" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Switch, std::allocator&lt;RPG::Switch&gt; &gt;::size (2 samples, 0.02%)</title><rect x="955.2" y="485" width="0.3" height="15.0" fill="rgb(246,216,54)" rx="2" ry="2" />
<text  x="958.21" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="993.5" y="341" width="0.2" height="15.0" fill="rgb(210,34,10)" rx="2" ry="2" />
<text  x="996.54" y="351.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="973.8" y="421" width="0.2" height="15.0" fill="rgb(221,51,13)" rx="2" ry="2" />
<text  x="976.83" y="431.5" ></text>
</g>
<g >
<title>operator== (2 samples, 0.02%)</title><rect x="330.7" y="501" width="0.3" height="15.0" fill="rgb(235,182,24)" rx="2" ry="2" />
<text  x="333.68" y="511.5" ></text>
</g>
<g >
<title>finish_task_switch (15 samples, 0.18%)</title><rect x="353.7" y="421" width="2.1" height="15.0" fill="rgb(236,93,53)" rx="2" ry="2" />
<text  x="356.70" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_ppoll (112 samples, 1.31%)</title><rect x="23.5" y="661" width="15.5" height="15.0" fill="rgb(241,12,1)" rx="2" ry="2" />
<text  x="26.51" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream (1 samples, 0.01%)</title><rect x="886.1" y="453" width="0.2" height="15.0" fill="rgb(245,216,27)" rx="2" ry="2" />
<text  x="889.14" y="463.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.01%)</title><rect x="39.0" y="613" width="0.1" height="15.0" fill="rgb(236,222,39)" rx="2" ry="2" />
<text  x="41.95" y="623.5" ></text>
</g>
<g >
<title>run_rebalance_domains (2 samples, 0.02%)</title><rect x="132.8" y="485" width="0.3" height="15.0" fill="rgb(232,118,2)" rx="2" ry="2" />
<text  x="135.84" y="495.5" ></text>
</g>
<g >
<title>tcache_get (4 samples, 0.05%)</title><rect x="579.3" y="309" width="0.5" height="15.0" fill="rgb(221,128,16)" rx="2" ry="2" />
<text  x="582.25" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (5 samples, 0.06%)</title><rect x="619.9" y="197" width="0.7" height="15.0" fill="rgb(225,72,8)" rx="2" ry="2" />
<text  x="622.92" y="207.5" ></text>
</g>
<g >
<title>Sprite::Flash (1 samples, 0.01%)</title><rect x="870.3" y="437" width="0.1" height="15.0" fill="rgb(213,140,37)" rx="2" ry="2" />
<text  x="873.29" y="447.5" ></text>
</g>
<g >
<title>_int_free (4 samples, 0.05%)</title><rect x="881.3" y="373" width="0.6" height="15.0" fill="rgb(233,158,42)" rx="2" ry="2" />
<text  x="884.32" y="383.5" ></text>
</g>
<g >
<title>std::locale::operator=@plt (1 samples, 0.01%)</title><rect x="885.9" y="373" width="0.1" height="15.0" fill="rgb(216,19,29)" rx="2" ry="2" />
<text  x="888.87" y="383.5" ></text>
</g>
<g >
<title>pixman_image_get_stride@plt (1 samples, 0.01%)</title><rect x="1173.6" y="549" width="0.1" height="15.0" fill="rgb(223,204,38)" rx="2" ry="2" />
<text  x="1176.59" y="559.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (1 samples, 0.01%)</title><rect x="1189.9" y="661" width="0.1" height="15.0" fill="rgb(206,215,15)" rx="2" ry="2" />
<text  x="1192.86" y="671.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.01%)</title><rect x="573.6" y="389" width="0.1" height="15.0" fill="rgb(227,225,37)" rx="2" ry="2" />
<text  x="576.60" y="399.5" ></text>
</g>
<g >
<title>Sprite::Draw (8 samples, 0.09%)</title><rect x="334.3" y="533" width="1.1" height="15.0" fill="rgb(252,213,28)" rx="2" ry="2" />
<text  x="337.26" y="543.5" ></text>
</g>
<g >
<title>_nv029793rm (4 samples, 0.05%)</title><rect x="768.4" y="325" width="0.6" height="15.0" fill="rgb(211,226,7)" rx="2" ry="2" />
<text  x="771.40" y="335.5" ></text>
</g>
<g >
<title>security_file_permission (2 samples, 0.02%)</title><rect x="42.4" y="597" width="0.3" height="15.0" fill="rgb(245,147,11)" rx="2" ry="2" />
<text  x="45.40" y="607.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (4 samples, 0.05%)</title><rect x="598.0" y="421" width="0.6" height="15.0" fill="rgb(245,133,31)" rx="2" ry="2" />
<text  x="601.00" y="431.5" ></text>
</g>
<g >
<title>pixman_image_get_width (2 samples, 0.02%)</title><rect x="62.3" y="677" width="0.2" height="15.0" fill="rgb(213,147,26)" rx="2" ry="2" />
<text  x="65.25" y="687.5" ></text>
</g>
<g >
<title>Game_Map::UpdateProcessedFlags (1 samples, 0.01%)</title><rect x="958.1" y="533" width="0.1" height="15.0" fill="rgb(223,152,4)" rx="2" ry="2" />
<text  x="961.11" y="543.5" ></text>
</g>
<g >
<title>X11_PumpEvents (7 samples, 0.08%)</title><rect x="993.1" y="501" width="1.0" height="15.0" fill="rgb(251,113,16)" rx="2" ry="2" />
<text  x="996.13" y="511.5" ></text>
</g>
<g >
<title>pixman_region32_fini (1 samples, 0.01%)</title><rect x="337.6" y="469" width="0.1" height="15.0" fill="rgb(254,55,53)" rx="2" ry="2" />
<text  x="340.57" y="479.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (4 samples, 0.05%)</title><rect x="645.4" y="341" width="0.6" height="15.0" fill="rgb(208,13,48)" rx="2" ry="2" />
<text  x="648.43" y="351.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (154 samples, 1.80%)</title><rect x="835.5" y="373" width="21.3" height="15.0" fill="rgb(209,195,45)" rx="2" ry="2" />
<text  x="838.55" y="383.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (4 samples, 0.05%)</title><rect x="994.9" y="485" width="0.6" height="15.0" fill="rgb(221,113,27)" rx="2" ry="2" />
<text  x="997.92" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (3 samples, 0.04%)</title><rect x="560.4" y="469" width="0.4" height="15.0" fill="rgb(212,94,36)" rx="2" ry="2" />
<text  x="563.36" y="479.5" ></text>
</g>
<g >
<title>read_tsc (2 samples, 0.02%)</title><rect x="989.5" y="373" width="0.3" height="15.0" fill="rgb(213,89,5)" rx="2" ry="2" />
<text  x="992.54" y="383.5" ></text>
</g>
<g >
<title>default_wake_function (7 samples, 0.08%)</title><rect x="40.9" y="533" width="0.9" height="15.0" fill="rgb(235,39,50)" rx="2" ry="2" />
<text  x="43.88" y="543.5" ></text>
</g>
<g >
<title>Sprite::SetZoomY (1 samples, 0.01%)</title><rect x="108.3" y="677" width="0.1" height="15.0" fill="rgb(218,176,31)" rx="2" ry="2" />
<text  x="111.30" y="687.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="935.9" y="469" width="0.1" height="15.0" fill="rgb(226,44,53)" rx="2" ry="2" />
<text  x="938.91" y="479.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="113.4" y="677" width="0.4" height="15.0" fill="rgb(238,22,15)" rx="2" ry="2" />
<text  x="116.40" y="687.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.04%)</title><rect x="805.2" y="229" width="0.4" height="15.0" fill="rgb(209,163,43)" rx="2" ry="2" />
<text  x="808.21" y="239.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (4 samples, 0.05%)</title><rect x="640.2" y="181" width="0.5" height="15.0" fill="rgb(214,209,14)" rx="2" ry="2" />
<text  x="643.19" y="191.5" ></text>
</g>
<g >
<title>pixman_image_composite32@plt (1 samples, 0.01%)</title><rect x="769.5" y="357" width="0.1" height="15.0" fill="rgb(229,122,40)" rx="2" ry="2" />
<text  x="772.51" y="367.5" ></text>
</g>
<g >
<title>Drawable::GetPriorityForMapLayer (1 samples, 0.01%)</title><rect x="974.7" y="485" width="0.1" height="15.0" fill="rgb(227,123,0)" rx="2" ry="2" />
<text  x="977.65" y="495.5" ></text>
</g>
<g >
<title>std::_Bit_reference::operator bool (2 samples, 0.02%)</title><rect x="954.9" y="485" width="0.3" height="15.0" fill="rgb(213,68,3)" rx="2" ry="2" />
<text  x="957.94" y="495.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (7 samples, 0.08%)</title><rect x="108.9" y="677" width="0.9" height="15.0" fill="rgb(215,123,23)" rx="2" ry="2" />
<text  x="111.85" y="687.5" ></text>
</g>
<g >
<title>ReplaceName (10 samples, 0.12%)</title><rect x="885.0" y="469" width="1.4" height="15.0" fill="rgb(223,136,40)" rx="2" ry="2" />
<text  x="888.04" y="479.5" ></text>
</g>
<g >
<title>SDL_UnlockTexture_REAL (79 samples, 0.92%)</title><rect x="1162.7" y="501" width="10.9" height="15.0" fill="rgb(236,105,54)" rx="2" ry="2" />
<text  x="1165.70" y="511.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (30 samples, 0.35%)</title><rect x="631.5" y="197" width="4.1" height="15.0" fill="rgb(205,123,53)" rx="2" ry="2" />
<text  x="634.50" y="207.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="861.3" y="405" width="0.2" height="15.0" fill="rgb(229,176,5)" rx="2" ry="2" />
<text  x="864.33" y="415.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (27 samples, 0.32%)</title><rect x="908.5" y="485" width="3.7" height="15.0" fill="rgb(206,85,52)" rx="2" ry="2" />
<text  x="911.48" y="495.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="799.1" y="133" width="0.2" height="15.0" fill="rgb(221,44,29)" rx="2" ry="2" />
<text  x="802.15" y="143.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="769.1" y="277" width="0.3" height="15.0" fill="rgb(238,147,54)" rx="2" ry="2" />
<text  x="772.09" y="287.5" ></text>
</g>
<g >
<title>Transform::Scale (3 samples, 0.04%)</title><rect x="276.1" y="453" width="0.4" height="15.0" fill="rgb(241,41,53)" rx="2" ry="2" />
<text  x="279.08" y="463.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandOptionGeneric (14 samples, 0.16%)</title><rect x="563.4" y="485" width="1.9" height="15.0" fill="rgb(240,60,38)" rx="2" ry="2" />
<text  x="566.40" y="495.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (72 samples, 0.84%)</title><rect x="1163.7" y="437" width="9.9" height="15.0" fill="rgb(229,96,39)" rx="2" ry="2" />
<text  x="1166.67" y="447.5" ></text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.02%)</title><rect x="272.8" y="373" width="0.2" height="15.0" fill="rgb(212,73,36)" rx="2" ry="2" />
<text  x="275.77" y="383.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.02%)</title><rect x="540.4" y="453" width="0.2" height="15.0" fill="rgb(213,68,10)" rx="2" ry="2" />
<text  x="543.37" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append@plt (1 samples, 0.01%)</title><rect x="604.9" y="293" width="0.1" height="15.0" fill="rgb(213,176,0)" rx="2" ry="2" />
<text  x="607.89" y="303.5" ></text>
</g>
<g >
<title>Sprite::SetFlashEffect (1 samples, 0.01%)</title><rect x="870.3" y="421" width="0.1" height="15.0" fill="rgb(208,44,8)" rx="2" ry="2" />
<text  x="873.29" y="431.5" ></text>
</g>
<g >
<title>pixman_image_get_width (38 samples, 0.44%)</title><rect x="982.5" y="485" width="5.2" height="15.0" fill="rgb(208,8,42)" rx="2" ry="2" />
<text  x="985.51" y="495.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.01%)</title><rect x="41.4" y="453" width="0.2" height="15.0" fill="rgb(252,97,21)" rx="2" ry="2" />
<text  x="44.43" y="463.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandEndLoop (11 samples, 0.13%)</title><rect x="549.3" y="485" width="1.6" height="15.0" fill="rgb(245,78,29)" rx="2" ry="2" />
<text  x="552.33" y="495.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (1 samples, 0.01%)</title><rect x="988.7" y="277" width="0.2" height="15.0" fill="rgb(209,217,44)" rx="2" ry="2" />
<text  x="991.71" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (72 samples, 0.84%)</title><rect x="941.7" y="485" width="9.9" height="15.0" fill="rgb(212,76,43)" rx="2" ry="2" />
<text  x="944.70" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.26%)</title><rect x="353.0" y="533" width="3.0" height="15.0" fill="rgb(216,192,41)" rx="2" ry="2" />
<text  x="356.01" y="543.5" ></text>
</g>
<g >
<title>Bitmap::height (4 samples, 0.05%)</title><rect x="329.3" y="485" width="0.6" height="15.0" fill="rgb(214,13,22)" rx="2" ry="2" />
<text  x="332.30" y="495.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (57 samples, 0.67%)</title><rect x="1165.7" y="373" width="7.9" height="15.0" fill="rgb(253,93,26)" rx="2" ry="2" />
<text  x="1168.74" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="993.5" y="325" width="0.2" height="15.0" fill="rgb(224,136,29)" rx="2" ry="2" />
<text  x="996.54" y="335.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.01%)</title><rect x="341.8" y="469" width="0.2" height="15.0" fill="rgb(239,229,50)" rx="2" ry="2" />
<text  x="344.84" y="479.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (2,356 samples, 27.53%)</title><rect x="565.3" y="485" width="324.8" height="15.0" fill="rgb(214,89,36)" rx="2" ry="2" />
<text  x="568.33" y="495.5" >Game_Interpreter::CommandShowPicture</text>
</g>
<g >
<title>Screen::GetZ (1 samples, 0.01%)</title><rect x="345.3" y="405" width="0.1" height="15.0" fill="rgb(233,45,22)" rx="2" ry="2" />
<text  x="348.29" y="415.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Set (198 samples, 2.31%)</title><rect x="521.1" y="469" width="27.3" height="15.0" fill="rgb(241,57,49)" rx="2" ry="2" />
<text  x="524.07" y="479.5" >G..</text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (1 samples, 0.01%)</title><rect x="964.5" y="453" width="0.1" height="15.0" fill="rgb(247,82,26)" rx="2" ry="2" />
<text  x="967.45" y="463.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.01%)</title><rect x="323.4" y="437" width="0.1" height="15.0" fill="rgb(217,94,52)" rx="2" ry="2" />
<text  x="326.37" y="447.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (3 samples, 0.04%)</title><rect x="859.5" y="437" width="0.4" height="15.0" fill="rgb(206,214,26)" rx="2" ry="2" />
<text  x="862.53" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="640.5" y="165" width="0.1" height="15.0" fill="rgb(243,34,10)" rx="2" ry="2" />
<text  x="643.46" y="175.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="540.1" y="341" width="0.1" height="15.0" fill="rgb(221,144,30)" rx="2" ry="2" />
<text  x="543.10" y="351.5" ></text>
</g>
<g >
<title>__wake_up_locked_key (7 samples, 0.08%)</title><rect x="40.9" y="581" width="0.9" height="15.0" fill="rgb(231,6,19)" rx="2" ry="2" />
<text  x="43.88" y="591.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (3 samples, 0.04%)</title><rect x="351.4" y="517" width="0.4" height="15.0" fill="rgb(208,219,36)" rx="2" ry="2" />
<text  x="354.36" y="527.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.01%)</title><rect x="988.0" y="389" width="0.2" height="15.0" fill="rgb(240,110,11)" rx="2" ry="2" />
<text  x="991.03" y="399.5" ></text>
</g>
<g >
<title>FileRequestAsync::SetGraphicFile (3 samples, 0.04%)</title><rect x="857.5" y="437" width="0.4" height="15.0" fill="rgb(235,2,49)" rx="2" ry="2" />
<text  x="860.47" y="447.5" ></text>
</g>
<g >
<title>Tone::Tone (1 samples, 0.01%)</title><rect x="806.6" y="357" width="0.1" height="15.0" fill="rgb(228,224,10)" rx="2" ry="2" />
<text  x="809.59" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (1 samples, 0.01%)</title><rect x="550.7" y="469" width="0.2" height="15.0" fill="rgb(209,205,24)" rx="2" ry="2" />
<text  x="553.71" y="479.5" ></text>
</g>
<g >
<title>pixman_image_get_width (1 samples, 0.01%)</title><rect x="835.4" y="341" width="0.1" height="15.0" fill="rgb(252,4,51)" rx="2" ry="2" />
<text  x="838.41" y="351.5" ></text>
</g>
<g >
<title>Game_Screen::GetFlashColor (1 samples, 0.01%)</title><rect x="873.0" y="453" width="0.2" height="15.0" fill="rgb(207,129,11)" rx="2" ry="2" />
<text  x="876.04" y="463.5" ></text>
</g>
<g >
<title>timerqueue_del (1 samples, 0.01%)</title><rect x="939.8" y="405" width="0.1" height="15.0" fill="rgb(224,88,14)" rx="2" ry="2" />
<text  x="942.77" y="415.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (1 samples, 0.01%)</title><rect x="990.1" y="453" width="0.1" height="15.0" fill="rgb(231,139,39)" rx="2" ry="2" />
<text  x="993.09" y="463.5" ></text>
</g>
<g >
<title>tick_program_event (1 samples, 0.01%)</title><rect x="1173.5" y="245" width="0.1" height="15.0" fill="rgb(237,65,36)" rx="2" ry="2" />
<text  x="1176.46" y="255.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::_M_ptr (1 samples, 0.01%)</title><rect x="857.6" y="373" width="0.1" height="15.0" fill="rgb(240,172,0)" rx="2" ry="2" />
<text  x="860.60" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (1 samples, 0.01%)</title><rect x="886.0" y="453" width="0.1" height="15.0" fill="rgb(208,213,35)" rx="2" ry="2" />
<text  x="889.00" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (1 samples, 0.01%)</title><rect x="963.5" y="469" width="0.1" height="15.0" fill="rgb(248,72,19)" rx="2" ry="2" />
<text  x="966.49" y="479.5" ></text>
</g>
<g >
<title>std::__insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (24 samples, 0.28%)</title><rect x="343.2" y="453" width="3.3" height="15.0" fill="rgb(229,105,37)" rx="2" ry="2" />
<text  x="346.22" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (2 samples, 0.02%)</title><rect x="990.4" y="325" width="0.2" height="15.0" fill="rgb(246,38,50)" rx="2" ry="2" />
<text  x="993.37" y="335.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (27 samples, 0.32%)</title><rect x="449.4" y="469" width="3.7" height="15.0" fill="rgb(252,74,19)" rx="2" ry="2" />
<text  x="452.38" y="479.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.01%)</title><rect x="990.9" y="389" width="0.2" height="15.0" fill="rgb(222,113,22)" rx="2" ry="2" />
<text  x="993.92" y="399.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (3 samples, 0.04%)</title><rect x="333.8" y="453" width="0.5" height="15.0" fill="rgb(236,49,10)" rx="2" ry="2" />
<text  x="336.85" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (26 samples, 0.30%)</title><rect x="886.4" y="453" width="3.6" height="15.0" fill="rgb(251,8,46)" rx="2" ry="2" />
<text  x="889.42" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (131 samples, 1.53%)</title><rect x="362.5" y="501" width="18.1" height="15.0" fill="rgb(235,71,18)" rx="2" ry="2" />
<text  x="365.52" y="511.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="982.2" y="437" width="0.2" height="15.0" fill="rgb(219,108,11)" rx="2" ry="2" />
<text  x="985.24" y="447.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash (16 samples, 0.19%)</title><rect x="615.1" y="261" width="2.2" height="15.0" fill="rgb(254,54,30)" rx="2" ry="2" />
<text  x="618.10" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char32_t&gt; &gt;::allocate (1 samples, 0.01%)</title><rect x="885.2" y="357" width="0.1" height="15.0" fill="rgb(209,167,34)" rx="2" ry="2" />
<text  x="888.18" y="367.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (1 samples, 0.01%)</title><rect x="61.1" y="677" width="0.2" height="15.0" fill="rgb(248,168,42)" rx="2" ry="2" />
<text  x="64.15" y="687.5" ></text>
</g>
<g >
<title>__fsnotify_parent (1 samples, 0.01%)</title><rect x="40.7" y="629" width="0.2" height="15.0" fill="rgb(254,83,5)" rx="2" ry="2" />
<text  x="43.74" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (16 samples, 0.19%)</title><rect x="518.9" y="453" width="2.2" height="15.0" fill="rgb(248,203,0)" rx="2" ry="2" />
<text  x="521.87" y="463.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="549.1" y="453" width="0.2" height="15.0" fill="rgb(249,100,0)" rx="2" ry="2" />
<text  x="552.06" y="463.5" ></text>
</g>
<g >
<title>Sprite::SetZ (1 samples, 0.01%)</title><rect x="871.4" y="437" width="0.1" height="15.0" fill="rgb(230,195,48)" rx="2" ry="2" />
<text  x="874.39" y="447.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="379.6" y="405" width="0.2" height="15.0" fill="rgb(212,22,14)" rx="2" ry="2" />
<text  x="382.62" y="415.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (2 samples, 0.02%)</title><rect x="42.0" y="549" width="0.3" height="15.0" fill="rgb(216,98,33)" rx="2" ry="2" />
<text  x="44.99" y="559.5" ></text>
</g>
<g >
<title>SDL_PumpEvents_REAL (7 samples, 0.08%)</title><rect x="993.1" y="517" width="1.0" height="15.0" fill="rgb(229,215,1)" rx="2" ry="2" />
<text  x="996.13" y="527.5" ></text>
</g>
<g >
<title>rw_verify_area (2 samples, 0.02%)</title><rect x="42.4" y="613" width="0.3" height="15.0" fill="rgb(230,79,1)" rx="2" ry="2" />
<text  x="45.40" y="623.5" ></text>
</g>
<g >
<title>SDL_RenderClear_REAL (1 samples, 0.01%)</title><rect x="995.5" y="549" width="0.1" height="15.0" fill="rgb(253,37,27)" rx="2" ry="2" />
<text  x="998.47" y="559.5" ></text>
</g>
<g >
<title>Sprite::SetX (1 samples, 0.01%)</title><rect x="58.9" y="677" width="0.2" height="15.0" fill="rgb(242,49,1)" rx="2" ry="2" />
<text  x="61.94" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::replace (1 samples, 0.01%)</title><rect x="886.0" y="389" width="0.1" height="15.0" fill="rgb(246,168,27)" rx="2" ry="2" />
<text  x="889.00" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (2 samples, 0.02%)</title><rect x="872.8" y="437" width="0.2" height="15.0" fill="rgb(243,75,21)" rx="2" ry="2" />
<text  x="875.77" y="447.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.01%)</title><rect x="453.2" y="421" width="0.2" height="15.0" fill="rgb(229,78,22)" rx="2" ry="2" />
<text  x="456.24" y="431.5" ></text>
</g>
<g >
<title>Scene::IsAsyncPending (146 samples, 1.71%)</title><rect x="118.1" y="597" width="20.1" height="15.0" fill="rgb(234,216,5)" rx="2" ry="2" />
<text  x="121.09" y="607.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="799.1" y="69" width="0.2" height="15.0" fill="rgb(210,28,36)" rx="2" ry="2" />
<text  x="802.15" y="79.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="994.0" y="405" width="0.1" height="15.0" fill="rgb(218,172,6)" rx="2" ry="2" />
<text  x="996.95" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.01%)</title><rect x="881.2" y="373" width="0.1" height="15.0" fill="rgb(248,189,29)" rx="2" ry="2" />
<text  x="884.18" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (8 samples, 0.09%)</title><rect x="596.5" y="421" width="1.1" height="15.0" fill="rgb(205,224,20)" rx="2" ry="2" />
<text  x="599.48" y="431.5" ></text>
</g>
<g >
<title>[unknown] (/tmp/.gldyXyNn (233 samples, 2.72%)</title><rect x="73.3" y="693" width="32.1" height="15.0" fill="rgb(207,219,15)" rx="2" ry="2" />
<text  x="76.28" y="703.5" >[u..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="990.4" y="357" width="0.2" height="15.0" fill="rgb(253,14,41)" rx="2" ry="2" />
<text  x="993.37" y="367.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;int&gt;::operator= (2 samples, 0.02%)</title><rect x="858.7" y="437" width="0.3" height="15.0" fill="rgb(250,172,50)" rx="2" ry="2" />
<text  x="861.71" y="447.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="560.6" y="389" width="0.2" height="15.0" fill="rgb(242,204,29)" rx="2" ry="2" />
<text  x="563.64" y="399.5" ></text>
</g>
<g >
<title>Window_Base::Update (2 samples, 0.02%)</title><rect x="988.7" y="501" width="0.3" height="15.0" fill="rgb(208,95,36)" rx="2" ry="2" />
<text  x="991.71" y="511.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (1 samples, 0.01%)</title><rect x="139.5" y="501" width="0.1" height="15.0" fill="rgb(248,30,7)" rx="2" ry="2" />
<text  x="142.46" y="511.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (67 samples, 0.78%)</title><rect x="1164.4" y="421" width="9.2" height="15.0" fill="rgb(252,154,24)" rx="2" ry="2" />
<text  x="1167.36" y="431.5" ></text>
</g>
<g >
<title>pixman_image_get_height (2 samples, 0.02%)</title><rect x="115.9" y="677" width="0.3" height="15.0" fill="rgb(217,175,12)" rx="2" ry="2" />
<text  x="118.88" y="687.5" ></text>
</g>
<g >
<title>Input::Update (8 samples, 0.09%)</title><rect x="351.8" y="565" width="1.1" height="15.0" fill="rgb(229,112,51)" rx="2" ry="2" />
<text  x="354.77" y="575.5" ></text>
</g>
<g >
<title>__libc_calloc (157 samples, 1.83%)</title><rect x="780.4" y="165" width="21.6" height="15.0" fill="rgb(228,59,17)" rx="2" ry="2" />
<text  x="783.40" y="175.5" >_..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="378.9" y="389" width="0.2" height="15.0" fill="rgb(247,106,11)" rx="2" ry="2" />
<text  x="381.93" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.01%)</title><rect x="640.7" y="261" width="0.2" height="15.0" fill="rgb(240,162,26)" rx="2" ry="2" />
<text  x="643.74" y="271.5" ></text>
</g>
<g >
<title>rcu_irq_exit (1 samples, 0.01%)</title><rect x="614.3" y="213" width="0.1" height="15.0" fill="rgb(252,168,29)" rx="2" ry="2" />
<text  x="617.27" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (67 samples, 0.78%)</title><rect x="618.7" y="213" width="9.2" height="15.0" fill="rgb(232,220,18)" rx="2" ry="2" />
<text  x="621.68" y="223.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="357.6" y="517" width="0.1" height="15.0" fill="rgb(251,200,18)" rx="2" ry="2" />
<text  x="360.56" y="527.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (4 samples, 0.05%)</title><rect x="856.8" y="373" width="0.5" height="15.0" fill="rgb(240,78,13)" rx="2" ry="2" />
<text  x="859.78" y="383.5" ></text>
</g>
<g >
<title>common_file_perm (1 samples, 0.01%)</title><rect x="40.6" y="581" width="0.1" height="15.0" fill="rgb(213,34,22)" rx="2" ry="2" />
<text  x="43.61" y="591.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="560.6" y="341" width="0.2" height="15.0" fill="rgb(252,113,22)" rx="2" ry="2" />
<text  x="563.64" y="351.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="935.9" y="373" width="0.1" height="15.0" fill="rgb(246,154,32)" rx="2" ry="2" />
<text  x="938.91" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.01%)</title><rect x="858.4" y="437" width="0.2" height="15.0" fill="rgb(224,154,10)" rx="2" ry="2" />
<text  x="861.43" y="447.5" ></text>
</g>
<g >
<title>Game_Player::UpdateSelfMovement (14 samples, 0.16%)</title><rect x="958.7" y="501" width="1.9" height="15.0" fill="rgb(239,101,22)" rx="2" ry="2" />
<text  x="961.66" y="511.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (69 samples, 0.81%)</title><rect x="27.6" y="517" width="9.6" height="15.0" fill="rgb(237,143,13)" rx="2" ry="2" />
<text  x="30.65" y="527.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.01%)</title><rect x="63.6" y="677" width="0.2" height="15.0" fill="rgb(224,180,6)" rx="2" ry="2" />
<text  x="66.63" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::basic_string (1 samples, 0.01%)</title><rect x="885.2" y="437" width="0.1" height="15.0" fill="rgb(217,219,5)" rx="2" ry="2" />
<text  x="888.18" y="447.5" ></text>
</g>
<g >
<title>Bitmap::find_format (21 samples, 0.25%)</title><rect x="802.3" y="213" width="2.9" height="15.0" fill="rgb(249,159,43)" rx="2" ry="2" />
<text  x="805.32" y="223.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="540.5" y="437" width="0.1" height="15.0" fill="rgb(252,130,23)" rx="2" ry="2" />
<text  x="543.51" y="447.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (6 samples, 0.07%)</title><rect x="333.4" y="517" width="0.9" height="15.0" fill="rgb(222,165,51)" rx="2" ry="2" />
<text  x="336.43" y="527.5" ></text>
</g>
<g >
<title>SDL_IOReady (1 samples, 0.01%)</title><rect x="989.8" y="485" width="0.2" height="15.0" fill="rgb(254,78,3)" rx="2" ry="2" />
<text  x="992.82" y="495.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (5 samples, 0.06%)</title><rect x="939.9" y="485" width="0.7" height="15.0" fill="rgb(224,35,1)" rx="2" ry="2" />
<text  x="942.91" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (12 samples, 0.14%)</title><rect x="640.9" y="229" width="1.6" height="15.0" fill="rgb(214,69,40)" rx="2" ry="2" />
<text  x="643.88" y="239.5" ></text>
</g>
<g >
<title>pixman_image_get_width@plt (1 samples, 0.01%)</title><rect x="987.7" y="485" width="0.2" height="15.0" fill="rgb(233,62,17)" rx="2" ry="2" />
<text  x="990.75" y="495.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (935 samples, 10.92%)</title><rect x="144.3" y="469" width="128.9" height="15.0" fill="rgb(222,1,9)" rx="2" ry="2" />
<text  x="147.28" y="479.5" >pixman_image_com..</text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.01%)</title><rect x="353.1" y="453" width="0.2" height="15.0" fill="rgb(238,23,2)" rx="2" ry="2" />
<text  x="356.15" y="463.5" ></text>
</g>
<g >
<title>get_timespec64 (1 samples, 0.01%)</title><rect x="991.2" y="437" width="0.1" height="15.0" fill="rgb(205,55,5)" rx="2" ry="2" />
<text  x="994.20" y="447.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandJumpToLabel (70 samples, 0.82%)</title><rect x="551.1" y="485" width="9.7" height="15.0" fill="rgb(215,126,32)" rx="2" ry="2" />
<text  x="554.13" y="495.5" ></text>
</g>
<g >
<title>poll (1 samples, 0.01%)</title><rect x="989.3" y="437" width="0.1" height="15.0" fill="rgb(206,130,30)" rx="2" ry="2" />
<text  x="992.27" y="447.5" ></text>
</g>
<g >
<title>schedule (13 samples, 0.15%)</title><rect x="991.3" y="405" width="1.8" height="15.0" fill="rgb(253,25,11)" rx="2" ry="2" />
<text  x="994.33" y="415.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6 samples, 0.07%)</title><rect x="637.0" y="197" width="0.8" height="15.0" fill="rgb(209,179,31)" rx="2" ry="2" />
<text  x="640.02" y="207.5" ></text>
</g>
<g >
<title>Game_Character::UpdateMovement (15 samples, 0.18%)</title><rect x="958.5" y="517" width="2.1" height="15.0" fill="rgb(240,228,39)" rx="2" ry="2" />
<text  x="961.52" y="527.5" ></text>
</g>
<g >
<title>Transition::IsErased (1 samples, 0.01%)</title><rect x="857.7" y="421" width="0.2" height="15.0" fill="rgb(220,107,7)" rx="2" ry="2" />
<text  x="860.74" y="431.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (4 samples, 0.05%)</title><rect x="994.9" y="501" width="0.6" height="15.0" fill="rgb(254,75,29)" rx="2" ry="2" />
<text  x="997.92" y="511.5" ></text>
</g>
<g >
<title>__libc_start_main (7,757 samples, 90.63%)</title><rect x="117.7" y="677" width="1069.4" height="15.0" fill="rgb(240,182,37)" rx="2" ry="2" />
<text  x="120.67" y="687.5" >__libc_start_main</text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (14 samples, 0.16%)</title><rect x="636.2" y="293" width="1.9" height="15.0" fill="rgb(234,211,24)" rx="2" ry="2" />
<text  x="639.19" y="303.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (803 samples, 9.38%)</title><rect x="658.7" y="341" width="110.7" height="15.0" fill="rgb(237,145,53)" rx="2" ry="2" />
<text  x="661.66" y="351.5" >[libpixman-1...</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (5 samples, 0.06%)</title><rect x="881.2" y="405" width="0.7" height="15.0" fill="rgb(214,25,9)" rx="2" ry="2" />
<text  x="884.18" y="415.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.01%)</title><rect x="453.2" y="437" width="0.2" height="15.0" fill="rgb(227,214,23)" rx="2" ry="2" />
<text  x="456.24" y="447.5" ></text>
</g>
<g >
<title>Game_Interpreter::SetSubcommandIndex (12 samples, 0.14%)</title><rect x="429.8" y="469" width="1.7" height="15.0" fill="rgb(234,59,0)" rx="2" ry="2" />
<text  x="432.80" y="479.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char32_t&gt;::copy (2 samples, 0.02%)</title><rect x="884.3" y="389" width="0.3" height="15.0" fill="rgb(231,81,15)" rx="2" ry="2" />
<text  x="887.35" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2 samples, 0.02%)</title><rect x="642.3" y="181" width="0.2" height="15.0" fill="rgb(240,10,35)" rx="2" ry="2" />
<text  x="645.26" y="191.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (8 samples, 0.09%)</title><rect x="332.3" y="485" width="1.1" height="15.0" fill="rgb(229,125,49)" rx="2" ry="2" />
<text  x="335.33" y="495.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.01%)</title><rect x="993.5" y="277" width="0.2" height="15.0" fill="rgb(251,138,43)" rx="2" ry="2" />
<text  x="996.54" y="287.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (5 samples, 0.06%)</title><rect x="614.4" y="213" width="0.7" height="15.0" fill="rgb(215,88,44)" rx="2" ry="2" />
<text  x="617.41" y="223.5" ></text>
</g>
<g >
<title>__sys_recvmsg (2 samples, 0.02%)</title><rect x="990.4" y="309" width="0.2" height="15.0" fill="rgb(216,199,20)" rx="2" ry="2" />
<text  x="993.37" y="319.5" ></text>
</g>
<g >
<title>do_nanosleep (13 samples, 0.15%)</title><rect x="991.3" y="421" width="1.8" height="15.0" fill="rgb(218,174,33)" rx="2" ry="2" />
<text  x="994.33" y="431.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="1162.3" y="421" width="0.1" height="15.0" fill="rgb(208,88,17)" rx="2" ry="2" />
<text  x="1165.29" y="431.5" ></text>
</g>
<g >
<title>Player::IsMajorUpdatedVersion (1 samples, 0.01%)</title><rect x="106.5" y="677" width="0.1" height="15.0" fill="rgb(225,166,28)" rx="2" ry="2" />
<text  x="109.51" y="687.5" ></text>
</g>
<g >
<title>new_sync_read (5 samples, 0.06%)</title><rect x="39.1" y="597" width="0.7" height="15.0" fill="rgb(236,64,23)" rx="2" ry="2" />
<text  x="42.09" y="607.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="379.6" y="453" width="0.2" height="15.0" fill="rgb(227,112,32)" rx="2" ry="2" />
<text  x="382.62" y="463.5" ></text>
</g>
<g >
<title>Bitmap::Blit (824 samples, 9.63%)</title><rect x="656.0" y="373" width="113.6" height="15.0" fill="rgb(236,221,23)" rx="2" ry="2" />
<text  x="659.04" y="383.5" >Bitmap::Blit</text>
</g>
<g >
<title>syscall_return_via_sysret (41 samples, 0.48%)</title><rect x="380.6" y="517" width="5.6" height="15.0" fill="rgb(227,104,10)" rx="2" ry="2" />
<text  x="383.59" y="527.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.02%)</title><rect x="1187.1" y="693" width="0.3" height="15.0" fill="rgb(205,17,25)" rx="2" ry="2" />
<text  x="1190.10" y="703.5" ></text>
</g>
<g >
<title>Game_Switches_Class::Get (9 samples, 0.11%)</title><rect x="954.9" y="501" width="1.3" height="15.0" fill="rgb(227,119,9)" rx="2" ry="2" />
<text  x="957.94" y="511.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.01%)</title><rect x="72.2" y="565" width="0.1" height="15.0" fill="rgb(210,143,22)" rx="2" ry="2" />
<text  x="75.18" y="575.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (4,372 samples, 51.08%)</title><rect x="386.5" y="565" width="602.8" height="15.0" fill="rgb(230,191,8)" rx="2" ry="2" />
<text  x="389.51" y="575.5" >Scene_Map::UpdateStage1</text>
</g>
<g >
<title>Game_Picture::GetData (2 samples, 0.02%)</title><rect x="861.1" y="437" width="0.2" height="15.0" fill="rgb(236,116,23)" rx="2" ry="2" />
<text  x="864.05" y="447.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (11 samples, 0.13%)</title><rect x="835.5" y="309" width="1.6" height="15.0" fill="rgb(241,15,31)" rx="2" ry="2" />
<text  x="838.55" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="982.2" y="421" width="0.2" height="15.0" fill="rgb(252,119,17)" rx="2" ry="2" />
<text  x="985.24" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (4 samples, 0.05%)</title><rect x="640.2" y="213" width="0.5" height="15.0" fill="rgb(207,12,39)" rx="2" ry="2" />
<text  x="643.19" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (11 samples, 0.13%)</title><rect x="643.9" y="325" width="1.5" height="15.0" fill="rgb(243,96,33)" rx="2" ry="2" />
<text  x="646.91" y="335.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="646.0" y="325" width="0.1" height="15.0" fill="rgb(235,55,31)" rx="2" ry="2" />
<text  x="648.98" y="335.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (3 samples, 0.04%)</title><rect x="574.6" y="453" width="0.4" height="15.0" fill="rgb(228,103,37)" rx="2" ry="2" />
<text  x="577.56" y="463.5" ></text>
</g>
<g >
<title>Transition::IsActive (4 samples, 0.05%)</title><rect x="1185.9" y="565" width="0.5" height="15.0" fill="rgb(233,97,39)" rx="2" ry="2" />
<text  x="1188.86" y="575.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (1 samples, 0.01%)</title><rect x="50.9" y="677" width="0.2" height="15.0" fill="rgb(218,34,25)" rx="2" ry="2" />
<text  x="53.95" y="687.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (5 samples, 0.06%)</title><rect x="990.2" y="421" width="0.7" height="15.0" fill="rgb(243,196,45)" rx="2" ry="2" />
<text  x="993.23" y="431.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1173.5" y="293" width="0.1" height="15.0" fill="rgb(223,153,0)" rx="2" ry="2" />
<text  x="1176.46" y="303.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="1173.5" y="261" width="0.1" height="15.0" fill="rgb(230,49,32)" rx="2" ry="2" />
<text  x="1176.46" y="271.5" ></text>
</g>
<g >
<title>Game_Interpreter::ValueOrVariable (3 samples, 0.04%)</title><rect x="561.6" y="469" width="0.4" height="15.0" fill="rgb(238,15,10)" rx="2" ry="2" />
<text  x="564.60" y="479.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (2 samples, 0.02%)</title><rect x="996.2" y="469" width="0.2" height="15.0" fill="rgb(221,106,3)" rx="2" ry="2" />
<text  x="999.16" y="479.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="273.0" y="389" width="0.2" height="15.0" fill="rgb(225,118,15)" rx="2" ry="2" />
<text  x="276.05" y="399.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (3 samples, 0.04%)</title><rect x="988.2" y="501" width="0.4" height="15.0" fill="rgb(227,96,20)" rx="2" ry="2" />
<text  x="991.16" y="511.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.01%)</title><rect x="50.5" y="677" width="0.2" height="15.0" fill="rgb(235,6,2)" rx="2" ry="2" />
<text  x="53.53" y="687.5" ></text>
</g>
<g >
<title>Blend (7 samples, 0.08%)</title><rect x="805.8" y="373" width="0.9" height="15.0" fill="rgb(254,93,26)" rx="2" ry="2" />
<text  x="808.77" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.01%)</title><rect x="890.0" y="469" width="0.1" height="15.0" fill="rgb(219,98,24)" rx="2" ry="2" />
<text  x="893.00" y="479.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (3 samples, 0.04%)</title><rect x="71.1" y="565" width="0.4" height="15.0" fill="rgb(225,13,49)" rx="2" ry="2" />
<text  x="74.07" y="575.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (34 samples, 0.40%)</title><rect x="775.3" y="165" width="4.7" height="15.0" fill="rgb(254,5,4)" rx="2" ry="2" />
<text  x="778.30" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::operator[] (4 samples, 0.05%)</title><rect x="951.6" y="485" width="0.6" height="15.0" fill="rgb(248,75,34)" rx="2" ry="2" />
<text  x="954.63" y="495.5" ></text>
</g>
<g >
<title>tcache_put (2 samples, 0.02%)</title><rect x="856.2" y="277" width="0.3" height="15.0" fill="rgb(250,194,35)" rx="2" ry="2" />
<text  x="859.23" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (8 samples, 0.09%)</title><rect x="596.5" y="373" width="1.1" height="15.0" fill="rgb(220,191,42)" rx="2" ry="2" />
<text  x="599.48" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.01%)</title><rect x="858.4" y="421" width="0.2" height="15.0" fill="rgb(244,129,43)" rx="2" ry="2" />
<text  x="861.43" y="431.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandControlVariables (696 samples, 8.13%)</title><rect x="453.4" y="485" width="95.9" height="15.0" fill="rgb(224,25,3)" rx="2" ry="2" />
<text  x="456.38" y="495.5" >Game_Interp..</text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.01%)</title><rect x="885.7" y="357" width="0.2" height="15.0" fill="rgb(218,37,18)" rx="2" ry="2" />
<text  x="888.73" y="367.5" ></text>
</g>
<g >
<title>pixman_image_set_transform (6 samples, 0.07%)</title><rect x="323.4" y="453" width="0.8" height="15.0" fill="rgb(229,21,34)" rx="2" ry="2" />
<text  x="326.37" y="463.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.02%)</title><rect x="637.8" y="261" width="0.3" height="15.0" fill="rgb(219,1,16)" rx="2" ry="2" />
<text  x="640.84" y="271.5" ></text>
</g>
<g >
<title>_int_free (5 samples, 0.06%)</title><rect x="596.8" y="341" width="0.6" height="15.0" fill="rgb(222,91,1)" rx="2" ry="2" />
<text  x="599.76" y="351.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (53 samples, 0.62%)</title><rect x="620.6" y="197" width="7.3" height="15.0" fill="rgb(254,161,15)" rx="2" ry="2" />
<text  x="623.61" y="207.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (21 samples, 0.25%)</title><rect x="1170.7" y="325" width="2.9" height="15.0" fill="rgb(208,72,27)" rx="2" ry="2" />
<text  x="1173.70" y="335.5" ></text>
</g>
<g >
<title>__libc_calloc (1 samples, 0.01%)</title><rect x="990.9" y="405" width="0.2" height="15.0" fill="rgb(218,33,31)" rx="2" ry="2" />
<text  x="993.92" y="415.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="560.6" y="357" width="0.2" height="15.0" fill="rgb(215,195,42)" rx="2" ry="2" />
<text  x="563.64" y="367.5" ></text>
</g>
<g >
<title>pixman_transform_point_31_16 (1 samples, 0.01%)</title><rect x="62.7" y="677" width="0.1" height="15.0" fill="rgb(209,42,33)" rx="2" ry="2" />
<text  x="65.67" y="687.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="38.7" y="565" width="0.1" height="15.0" fill="rgb(230,138,14)" rx="2" ry="2" />
<text  x="41.68" y="575.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="357.6" y="437" width="0.1" height="15.0" fill="rgb(250,64,36)" rx="2" ry="2" />
<text  x="360.56" y="447.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (2 samples, 0.02%)</title><rect x="337.7" y="469" width="0.3" height="15.0" fill="rgb(251,147,29)" rx="2" ry="2" />
<text  x="340.71" y="479.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.01%)</title><rect x="63.9" y="677" width="0.1" height="15.0" fill="rgb(234,79,44)" rx="2" ry="2" />
<text  x="66.91" y="687.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (1 samples, 0.01%)</title><rect x="988.7" y="341" width="0.2" height="15.0" fill="rgb(228,64,36)" rx="2" ry="2" />
<text  x="991.71" y="351.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.01%)</title><rect x="988.7" y="309" width="0.2" height="15.0" fill="rgb(222,62,21)" rx="2" ry="2" />
<text  x="991.71" y="319.5" ></text>
</g>
<g >
<title>unix_poll (1 samples, 0.01%)</title><rect x="38.7" y="613" width="0.1" height="15.0" fill="rgb(243,168,33)" rx="2" ry="2" />
<text  x="41.68" y="623.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="802.7" y="197" width="0.2" height="15.0" fill="rgb(242,186,49)" rx="2" ry="2" />
<text  x="805.73" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2 samples, 0.02%)</title><rect x="605.4" y="213" width="0.3" height="15.0" fill="rgb(239,140,1)" rx="2" ry="2" />
<text  x="608.45" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (149 samples, 1.74%)</title><rect x="22.1" y="677" width="20.6" height="15.0" fill="rgb(234,35,29)" rx="2" ry="2" />
<text  x="25.13" y="687.5" ></text>
</g>
<g >
<title>Game_Picture::Update (1 samples, 0.01%)</title><rect x="55.4" y="677" width="0.1" height="15.0" fill="rgb(236,192,52)" rx="2" ry="2" />
<text  x="58.36" y="687.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.01%)</title><rect x="50.8" y="677" width="0.1" height="15.0" fill="rgb(213,23,13)" rx="2" ry="2" />
<text  x="53.81" y="687.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.01%)</title><rect x="606.0" y="277" width="0.1" height="15.0" fill="rgb(212,111,51)" rx="2" ry="2" />
<text  x="609.00" y="287.5" ></text>
</g>
<g >
<title>TilemapSubLayer::GetZ (1 samples, 0.01%)</title><rect x="343.1" y="421" width="0.1" height="15.0" fill="rgb(205,117,29)" rx="2" ry="2" />
<text  x="346.09" y="431.5" ></text>
</g>
<g >
<title>common_file_perm (2 samples, 0.02%)</title><rect x="42.4" y="565" width="0.3" height="15.0" fill="rgb(212,164,45)" rx="2" ry="2" />
<text  x="45.40" y="575.5" ></text>
</g>
<g >
<title>_XEventsQueued (4 samples, 0.05%)</title><rect x="993.5" y="453" width="0.6" height="15.0" fill="rgb(240,179,28)" rx="2" ry="2" />
<text  x="996.54" y="463.5" ></text>
</g>
<g >
<title>__exchange_and_add (3 samples, 0.04%)</title><rect x="333.8" y="421" width="0.5" height="15.0" fill="rgb(249,72,53)" rx="2" ry="2" />
<text  x="336.85" y="431.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (19 samples, 0.22%)</title><rect x="109.8" y="677" width="2.6" height="15.0" fill="rgb(232,105,37)" rx="2" ry="2" />
<text  x="112.82" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.01%)</title><rect x="858.4" y="389" width="0.2" height="15.0" fill="rgb(214,115,9)" rx="2" ry="2" />
<text  x="861.43" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="641.8" y="197" width="0.3" height="15.0" fill="rgb(219,110,0)" rx="2" ry="2" />
<text  x="644.84" y="207.5" ></text>
</g>
<g >
<title>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;::basic_istream (5 samples, 0.06%)</title><rect x="885.3" y="421" width="0.7" height="15.0" fill="rgb(209,158,11)" rx="2" ry="2" />
<text  x="888.31" y="431.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="573.6" y="421" width="0.1" height="15.0" fill="rgb(244,138,34)" rx="2" ry="2" />
<text  x="576.60" y="431.5" ></text>
</g>
<g >
<title>Graphics::Update (4 samples, 0.05%)</title><rect x="351.2" y="565" width="0.6" height="15.0" fill="rgb(216,13,3)" rx="2" ry="2" />
<text  x="354.22" y="575.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="593.6" y="197" width="0.1" height="15.0" fill="rgb(237,8,50)" rx="2" ry="2" />
<text  x="596.59" y="207.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (1 samples, 0.01%)</title><rect x="1189.9" y="693" width="0.1" height="15.0" fill="rgb(248,99,13)" rx="2" ry="2" />
<text  x="1192.86" y="703.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (4 samples, 0.05%)</title><rect x="322.8" y="437" width="0.6" height="15.0" fill="rgb(253,126,6)" rx="2" ry="2" />
<text  x="325.82" y="447.5" ></text>
</g>
<g >
<title>GetRandomU32 (2 samples, 0.02%)</title><rect x="548.4" y="437" width="0.2" height="15.0" fill="rgb(224,212,47)" rx="2" ry="2" />
<text  x="551.37" y="447.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (2 samples, 0.02%)</title><rect x="989.5" y="485" width="0.3" height="15.0" fill="rgb(215,159,19)" rx="2" ry="2" />
<text  x="992.54" y="495.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="642.3" y="149" width="0.1" height="15.0" fill="rgb(205,219,10)" rx="2" ry="2" />
<text  x="645.26" y="159.5" ></text>
</g>
<g >
<title>pixman_image_create_bits (1 samples, 0.01%)</title><rect x="802.2" y="197" width="0.1" height="15.0" fill="rgb(239,75,17)" rx="2" ry="2" />
<text  x="805.18" y="207.5" ></text>
</g>
<g >
<title>__pollwait (1 samples, 0.01%)</title><rect x="25.3" y="613" width="0.1" height="15.0" fill="rgb(251,205,3)" rx="2" ry="2" />
<text  x="28.30" y="623.5" ></text>
</g>
<g >
<title>pixman_region32_fini (1 samples, 0.01%)</title><rect x="769.4" y="341" width="0.1" height="15.0" fill="rgb(238,165,40)" rx="2" ry="2" />
<text  x="772.37" y="351.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (1 samples, 0.01%)</title><rect x="563.0" y="421" width="0.1" height="15.0" fill="rgb(237,98,10)" rx="2" ry="2" />
<text  x="565.98" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (7 samples, 0.08%)</title><rect x="580.2" y="357" width="1.0" height="15.0" fill="rgb(248,7,3)" rx="2" ry="2" />
<text  x="583.22" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="989.8" y="421" width="0.2" height="15.0" fill="rgb(250,76,50)" rx="2" ry="2" />
<text  x="992.82" y="431.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="987.6" y="421" width="0.1" height="15.0" fill="rgb(207,136,20)" rx="2" ry="2" />
<text  x="990.61" y="431.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandControlVariables (1 samples, 0.01%)</title><rect x="44.1" y="677" width="0.1" height="15.0" fill="rgb(230,56,53)" rx="2" ry="2" />
<text  x="47.05" y="687.5" ></text>
</g>
<g >
<title>Player::MainLoop (7,755 samples, 90.61%)</title><rect x="117.9" y="629" width="1069.2" height="15.0" fill="rgb(246,223,36)" rx="2" ry="2" />
<text  x="120.95" y="639.5" >Player::MainLoop</text>
</g>
<g >
<title>FileRequestAsync::IsReady (1 samples, 0.01%)</title><rect x="53.0" y="677" width="0.2" height="15.0" fill="rgb(207,210,52)" rx="2" ry="2" />
<text  x="56.01" y="687.5" ></text>
</g>
<g >
<title>Sprite::BlitScreenIntern (1,340 samples, 15.66%)</title><rect x="142.4" y="517" width="184.7" height="15.0" fill="rgb(217,135,49)" rx="2" ry="2" />
<text  x="145.35" y="527.5" >Sprite::BlitScreenIntern</text>
</g>
<g >
<title>std::__find_if&lt;int const*, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (11 samples, 0.13%)</title><rect x="447.5" y="437" width="1.5" height="15.0" fill="rgb(249,112,37)" rx="2" ry="2" />
<text  x="450.45" y="447.5" ></text>
</g>
<g >
<title>schedule (18 samples, 0.21%)</title><rect x="353.6" y="453" width="2.4" height="15.0" fill="rgb(228,107,50)" rx="2" ry="2" />
<text  x="356.56" y="463.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.01%)</title><rect x="883.9" y="405" width="0.2" height="15.0" fill="rgb(209,131,28)" rx="2" ry="2" />
<text  x="886.94" y="415.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (12 samples, 0.14%)</title><rect x="346.7" y="453" width="1.6" height="15.0" fill="rgb(234,56,15)" rx="2" ry="2" />
<text  x="349.67" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="884.2" y="405" width="0.1" height="15.0" fill="rgb(246,24,17)" rx="2" ry="2" />
<text  x="887.21" y="415.5" ></text>
</g>
<g >
<title>pixman_image_set_transform@plt (1 samples, 0.01%)</title><rect x="324.2" y="453" width="0.1" height="15.0" fill="rgb(222,110,8)" rx="2" ry="2" />
<text  x="327.20" y="463.5" ></text>
</g>
<g >
<title>Sprite::SetWaverPhase (2 samples, 0.02%)</title><rect x="871.1" y="437" width="0.3" height="15.0" fill="rgb(240,69,17)" rx="2" ry="2" />
<text  x="874.11" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::deallocate (1 samples, 0.01%)</title><rect x="856.6" y="245" width="0.2" height="15.0" fill="rgb(238,140,53)" rx="2" ry="2" />
<text  x="859.64" y="255.5" ></text>
</g>
<g >
<title>__atomic_add (10 samples, 0.12%)</title><rect x="324.6" y="421" width="1.4" height="15.0" fill="rgb(254,154,33)" rx="2" ry="2" />
<text  x="327.61" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (2 samples, 0.02%)</title><rect x="63.4" y="677" width="0.2" height="15.0" fill="rgb(237,213,26)" rx="2" ry="2" />
<text  x="66.35" y="687.5" ></text>
</g>
<g >
<title>Sdl2Ui::ProcessEvents (35 samples, 0.41%)</title><rect x="989.3" y="565" width="4.8" height="15.0" fill="rgb(222,147,5)" rx="2" ry="2" />
<text  x="992.27" y="575.5" ></text>
</g>
<g >
<title>pixman_transform_point (2 samples, 0.02%)</title><rect x="116.2" y="677" width="0.2" height="15.0" fill="rgb(205,80,5)" rx="2" ry="2" />
<text  x="119.16" y="687.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.01%)</title><rect x="518.7" y="389" width="0.2" height="15.0" fill="rgb(243,87,22)" rx="2" ry="2" />
<text  x="521.73" y="399.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (20 samples, 0.23%)</title><rect x="339.1" y="533" width="2.7" height="15.0" fill="rgb(233,124,14)" rx="2" ry="2" />
<text  x="342.09" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (10 samples, 0.12%)</title><rect x="639.4" y="293" width="1.3" height="15.0" fill="rgb(223,57,54)" rx="2" ry="2" />
<text  x="642.36" y="303.5" ></text>
</g>
<g >
<title>native_write_msr (69 samples, 0.81%)</title><rect x="27.6" y="453" width="9.6" height="15.0" fill="rgb(245,8,28)" rx="2" ry="2" />
<text  x="30.65" y="463.5" ></text>
</g>
<g >
<title>Sprite::Draw (2 samples, 0.02%)</title><rect x="335.1" y="517" width="0.3" height="15.0" fill="rgb(223,179,54)" rx="2" ry="2" />
<text  x="338.09" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (7 samples, 0.08%)</title><rect x="580.2" y="373" width="1.0" height="15.0" fill="rgb(238,64,0)" rx="2" ry="2" />
<text  x="583.22" y="383.5" ></text>
</g>
<g >
<title>~&lt;lambda&gt; (1 samples, 0.01%)</title><rect x="988.0" y="501" width="0.2" height="15.0" fill="rgb(235,114,30)" rx="2" ry="2" />
<text  x="991.03" y="511.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="378.9" y="421" width="0.2" height="15.0" fill="rgb(253,92,13)" rx="2" ry="2" />
<text  x="381.93" y="431.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (2 samples, 0.02%)</title><rect x="990.6" y="405" width="0.3" height="15.0" fill="rgb(227,68,34)" rx="2" ry="2" />
<text  x="993.64" y="415.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (1 samples, 0.01%)</title><rect x="337.4" y="469" width="0.2" height="15.0" fill="rgb(216,5,8)" rx="2" ry="2" />
<text  x="340.43" y="479.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="518.7" y="421" width="0.2" height="15.0" fill="rgb(205,111,30)" rx="2" ry="2" />
<text  x="521.73" y="431.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (1,355 samples, 15.83%)</title><rect x="646.7" y="389" width="186.8" height="15.0" fill="rgb(236,82,13)" rx="2" ry="2" />
<text  x="649.67" y="399.5" >Game_Picture::UpdateSprite</text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (3 samples, 0.04%)</title><rect x="963.2" y="485" width="0.4" height="15.0" fill="rgb(242,84,45)" rx="2" ry="2" />
<text  x="966.21" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.01%)</title><rect x="881.0" y="453" width="0.2" height="15.0" fill="rgb(211,144,0)" rx="2" ry="2" />
<text  x="884.04" y="463.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="861.3" y="325" width="0.2" height="15.0" fill="rgb(217,68,41)" rx="2" ry="2" />
<text  x="864.33" y="335.5" ></text>
</g>
<g >
<title>___sys_recvmsg (1 samples, 0.01%)</title><rect x="1189.6" y="629" width="0.1" height="15.0" fill="rgb(253,207,10)" rx="2" ry="2" />
<text  x="1192.59" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="990.4" y="341" width="0.2" height="15.0" fill="rgb(253,159,9)" rx="2" ry="2" />
<text  x="993.37" y="351.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::reset (45 samples, 0.53%)</title><rect x="874.8" y="453" width="6.2" height="15.0" fill="rgb(243,64,32)" rx="2" ry="2" />
<text  x="877.84" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (2 samples, 0.02%)</title><rect x="589.3" y="341" width="0.3" height="15.0" fill="rgb(220,218,27)" rx="2" ry="2" />
<text  x="592.32" y="351.5" ></text>
</g>
<g >
<title>__atomic_add (6 samples, 0.07%)</title><rect x="638.5" y="261" width="0.9" height="15.0" fill="rgb(205,136,50)" rx="2" ry="2" />
<text  x="641.53" y="271.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="982.2" y="453" width="0.2" height="15.0" fill="rgb(211,97,38)" rx="2" ry="2" />
<text  x="985.24" y="463.5" ></text>
</g>
<g >
<title>dequeue_task_fair (6 samples, 0.07%)</title><rect x="26.4" y="533" width="0.8" height="15.0" fill="rgb(205,68,8)" rx="2" ry="2" />
<text  x="29.41" y="543.5" ></text>
</g>
<g >
<title>tcache_get (2 samples, 0.02%)</title><rect x="641.8" y="181" width="0.3" height="15.0" fill="rgb(207,206,33)" rx="2" ry="2" />
<text  x="644.84" y="191.5" ></text>
</g>
<g >
<title>new_sync_write (3 samples, 0.04%)</title><rect x="42.0" y="597" width="0.4" height="15.0" fill="rgb(208,11,41)" rx="2" ry="2" />
<text  x="44.99" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (14 samples, 0.16%)</title><rect x="991.2" y="453" width="1.9" height="15.0" fill="rgb(210,121,3)" rx="2" ry="2" />
<text  x="994.20" y="463.5" ></text>
</g>
<g >
<title>[libXi.so.6.1.0] (1 samples, 0.01%)</title><rect x="990.9" y="421" width="0.2" height="15.0" fill="rgb(245,219,40)" rx="2" ry="2" />
<text  x="993.92" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_construct&lt;char32_t const*&gt; (1 samples, 0.01%)</title><rect x="885.2" y="421" width="0.1" height="15.0" fill="rgb(208,122,40)" rx="2" ry="2" />
<text  x="888.18" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (1 samples, 0.01%)</title><rect x="431.2" y="421" width="0.1" height="15.0" fill="rgb(248,157,21)" rx="2" ry="2" />
<text  x="434.18" y="431.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (143 samples, 1.67%)</title><rect x="837.1" y="325" width="19.7" height="15.0" fill="rgb(225,102,40)" rx="2" ry="2" />
<text  x="840.06" y="335.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (43 samples, 0.50%)</title><rect x="630.3" y="213" width="5.9" height="15.0" fill="rgb(231,50,19)" rx="2" ry="2" />
<text  x="633.26" y="223.5" ></text>
</g>
<g >
<title>Sprite::SetOy (1 samples, 0.01%)</title><rect x="108.2" y="677" width="0.1" height="15.0" fill="rgb(208,205,29)" rx="2" ry="2" />
<text  x="111.16" y="687.5" ></text>
</g>
<g >
<title>vfs_write (13 samples, 0.15%)</title><rect x="40.9" y="629" width="1.8" height="15.0" fill="rgb(207,52,42)" rx="2" ry="2" />
<text  x="43.88" y="639.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="573.6" y="453" width="0.1" height="15.0" fill="rgb(217,141,9)" rx="2" ry="2" />
<text  x="576.60" y="463.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (5 samples, 0.06%)</title><rect x="580.5" y="277" width="0.7" height="15.0" fill="rgb(236,218,20)" rx="2" ry="2" />
<text  x="583.49" y="287.5" ></text>
</g>
<g >
<title>run_rebalance_domains (2 samples, 0.02%)</title><rect x="941.4" y="421" width="0.3" height="15.0" fill="rgb(218,71,11)" rx="2" ry="2" />
<text  x="944.43" y="431.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (21 samples, 0.25%)</title><rect x="353.1" y="485" width="2.9" height="15.0" fill="rgb(217,126,27)" rx="2" ry="2" />
<text  x="356.15" y="495.5" ></text>
</g>
<g >
<title>Bitmap::Blit (942 samples, 11.01%)</title><rect x="143.6" y="485" width="129.9" height="15.0" fill="rgb(213,206,18)" rx="2" ry="2" />
<text  x="146.59" y="495.5" >Bitmap::Blit</text>
</g>
<g >
<title>memcmp@plt (4 samples, 0.05%)</title><rect x="635.6" y="197" width="0.6" height="15.0" fill="rgb(214,99,19)" rx="2" ry="2" />
<text  x="638.64" y="207.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.01%)</title><rect x="39.6" y="565" width="0.2" height="15.0" fill="rgb(230,190,20)" rx="2" ry="2" />
<text  x="42.64" y="575.5" ></text>
</g>
<g >
<title>__GI___libc_free (3 samples, 0.04%)</title><rect x="642.5" y="197" width="0.4" height="15.0" fill="rgb(220,18,15)" rx="2" ry="2" />
<text  x="645.53" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="563.0" y="405" width="0.1" height="15.0" fill="rgb(206,15,30)" rx="2" ry="2" />
<text  x="565.98" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (14 samples, 0.16%)</title><rect x="585.6" y="341" width="1.9" height="15.0" fill="rgb(254,78,46)" rx="2" ry="2" />
<text  x="588.59" y="351.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="861.3" y="357" width="0.2" height="15.0" fill="rgb(217,2,34)" rx="2" ry="2" />
<text  x="864.33" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (1 samples, 0.01%)</title><rect x="833.3" y="373" width="0.2" height="15.0" fill="rgb(212,194,50)" rx="2" ry="2" />
<text  x="836.34" y="383.5" ></text>
</g>
<g >
<title>SDL_Delay_REAL (15 samples, 0.18%)</title><rect x="991.1" y="517" width="2.0" height="15.0" fill="rgb(243,89,17)" rx="2" ry="2" />
<text  x="994.06" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (2 samples, 0.02%)</title><rect x="573.0" y="437" width="0.3" height="15.0" fill="rgb(242,213,39)" rx="2" ry="2" />
<text  x="576.05" y="447.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (8 samples, 0.09%)</title><rect x="854.7" y="277" width="1.1" height="15.0" fill="rgb(205,91,27)" rx="2" ry="2" />
<text  x="857.71" y="287.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (1 samples, 0.01%)</title><rect x="807.1" y="341" width="0.2" height="15.0" fill="rgb(233,91,44)" rx="2" ry="2" />
<text  x="810.14" y="351.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.01%)</title><rect x="41.8" y="581" width="0.2" height="15.0" fill="rgb(233,179,50)" rx="2" ry="2" />
<text  x="44.85" y="591.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.01%)</title><rect x="548.2" y="437" width="0.2" height="15.0" fill="rgb(241,182,53)" rx="2" ry="2" />
<text  x="551.23" y="447.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (252 samples, 2.94%)</title><rect x="770.9" y="309" width="34.7" height="15.0" fill="rgb(251,193,20)" rx="2" ry="2" />
<text  x="773.89" y="319.5" >st..</text>
</g>
<g >
<title>Game_Interpreter::CommandKeyInputProc (2 samples, 0.02%)</title><rect x="560.8" y="485" width="0.3" height="15.0" fill="rgb(251,197,36)" rx="2" ry="2" />
<text  x="563.78" y="495.5" ></text>
</g>
<g >
<title>Weather::Draw (1 samples, 0.01%)</title><rect x="338.8" y="533" width="0.1" height="15.0" fill="rgb(210,108,28)" rx="2" ry="2" />
<text  x="341.81" y="543.5" ></text>
</g>
<g >
<title>pixman_image_create_solid_fill (1 samples, 0.01%)</title><rect x="62.1" y="677" width="0.2" height="15.0" fill="rgb(232,174,45)" rx="2" ry="2" />
<text  x="65.11" y="687.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (5 samples, 0.06%)</title><rect x="378.4" y="453" width="0.7" height="15.0" fill="rgb(226,105,30)" rx="2" ry="2" />
<text  x="381.38" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (1 samples, 0.01%)</title><rect x="886.0" y="437" width="0.1" height="15.0" fill="rgb(209,204,26)" rx="2" ry="2" />
<text  x="889.00" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (9 samples, 0.11%)</title><rect x="547.0" y="453" width="1.2" height="15.0" fill="rgb(213,43,26)" rx="2" ry="2" />
<text  x="549.99" y="463.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="769.0" y="293" width="0.1" height="15.0" fill="rgb(239,77,2)" rx="2" ry="2" />
<text  x="771.96" y="303.5" ></text>
</g>
<g >
<title>_start (7,757 samples, 90.63%)</title><rect x="117.7" y="693" width="1069.4" height="15.0" fill="rgb(215,142,23)" rx="2" ry="2" />
<text  x="120.67" y="703.5" >_start</text>
</g>
<g >
<title>hrtimer_nanosleep (13 samples, 0.15%)</title><rect x="991.3" y="437" width="1.8" height="15.0" fill="rgb(221,187,48)" rx="2" ry="2" />
<text  x="994.33" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_free (10 samples, 0.12%)</title><rect x="840.9" y="245" width="1.4" height="15.0" fill="rgb(213,65,12)" rx="2" ry="2" />
<text  x="843.92" y="255.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (69 samples, 0.81%)</title><rect x="27.6" y="485" width="9.6" height="15.0" fill="rgb(237,185,43)" rx="2" ry="2" />
<text  x="30.65" y="495.5" ></text>
</g>
<g >
<title>_nv029793rm (1 samples, 0.01%)</title><rect x="830.4" y="357" width="0.2" height="15.0" fill="rgb(241,106,9)" rx="2" ry="2" />
<text  x="833.44" y="367.5" ></text>
</g>
<g >
<title>Cache::Picture (1 samples, 0.01%)</title><rect x="52.7" y="677" width="0.2" height="15.0" fill="rgb(246,171,17)" rx="2" ry="2" />
<text  x="55.74" y="687.5" ></text>
</g>
<g >
<title>Game_Map::GetTerrainTag (1 samples, 0.01%)</title><rect x="989.1" y="501" width="0.2" height="15.0" fill="rgb(214,108,19)" rx="2" ry="2" />
<text  x="992.13" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.01%)</title><rect x="605.9" y="293" width="0.1" height="15.0" fill="rgb(244,220,36)" rx="2" ry="2" />
<text  x="608.86" y="303.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.01%)</title><rect x="24.6" y="629" width="0.2" height="15.0" fill="rgb(226,78,49)" rx="2" ry="2" />
<text  x="27.61" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (5 samples, 0.06%)</title><rect x="452.0" y="453" width="0.7" height="15.0" fill="rgb(218,169,49)" rx="2" ry="2" />
<text  x="455.00" y="463.5" ></text>
</g>
<g >
<title>Bitmap::GetOperator (1 samples, 0.01%)</title><rect x="275.9" y="437" width="0.2" height="15.0" fill="rgb(242,61,49)" rx="2" ry="2" />
<text  x="278.94" y="447.5" ></text>
</g>
<g >
<title>pick_next_task_idle (1 samples, 0.01%)</title><rect x="37.8" y="549" width="0.2" height="15.0" fill="rgb(248,74,39)" rx="2" ry="2" />
<text  x="40.85" y="559.5" ></text>
</g>
<g >
<title>__GI___poll (1 samples, 0.01%)</title><rect x="993.4" y="437" width="0.1" height="15.0" fill="rgb(209,189,48)" rx="2" ry="2" />
<text  x="996.40" y="447.5" ></text>
</g>
<g >
<title>___sys_recvmsg (1 samples, 0.01%)</title><rect x="990.4" y="293" width="0.1" height="15.0" fill="rgb(205,66,18)" rx="2" ry="2" />
<text  x="993.37" y="303.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (136 samples, 1.59%)</title><rect x="838.0" y="309" width="18.8" height="15.0" fill="rgb(218,105,52)" rx="2" ry="2" />
<text  x="841.03" y="319.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::operator[] (17 samples, 0.20%)</title><rect x="802.9" y="197" width="2.3" height="15.0" fill="rgb(206,140,24)" rx="2" ry="2" />
<text  x="805.87" y="207.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (252 samples, 2.94%)</title><rect x="770.9" y="293" width="34.7" height="15.0" fill="rgb(228,175,14)" rx="2" ry="2" />
<text  x="773.89" y="303.5" >st..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (2 samples, 0.02%)</title><rect x="352.5" y="485" width="0.2" height="15.0" fill="rgb(225,68,14)" rx="2" ry="2" />
<text  x="355.46" y="495.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="935.9" y="405" width="0.1" height="15.0" fill="rgb(252,118,24)" rx="2" ry="2" />
<text  x="938.91" y="415.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (90 samples, 1.05%)</title><rect x="25.7" y="597" width="12.4" height="15.0" fill="rgb(210,133,24)" rx="2" ry="2" />
<text  x="28.72" y="607.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="540.5" y="373" width="0.1" height="15.0" fill="rgb(228,229,47)" rx="2" ry="2" />
<text  x="543.51" y="383.5" ></text>
</g>
<g >
<title>Game_Interpreter::KeyInputState::CheckInput (1 samples, 0.01%)</title><rect x="560.9" y="469" width="0.2" height="15.0" fill="rgb(234,44,24)" rx="2" ry="2" />
<text  x="563.91" y="479.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (7 samples, 0.08%)</title><rect x="636.9" y="213" width="0.9" height="15.0" fill="rgb(246,154,2)" rx="2" ry="2" />
<text  x="639.88" y="223.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="990.0" y="453" width="0.1" height="15.0" fill="rgb(225,220,7)" rx="2" ry="2" />
<text  x="992.96" y="463.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.01%)</title><rect x="355.8" y="405" width="0.1" height="15.0" fill="rgb(206,115,0)" rx="2" ry="2" />
<text  x="358.77" y="415.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="935.9" y="357" width="0.1" height="15.0" fill="rgb(254,66,36)" rx="2" ry="2" />
<text  x="938.91" y="367.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (1 samples, 0.01%)</title><rect x="988.7" y="325" width="0.2" height="15.0" fill="rgb(251,121,35)" rx="2" ry="2" />
<text  x="991.71" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign&lt;char*, void&gt; (1 samples, 0.01%)</title><rect x="886.0" y="421" width="0.1" height="15.0" fill="rgb(227,190,39)" rx="2" ry="2" />
<text  x="889.00" y="431.5" ></text>
</g>
<g >
<title>memset (2 samples, 0.02%)</title><rect x="770.2" y="341" width="0.3" height="15.0" fill="rgb(221,168,54)" rx="2" ry="2" />
<text  x="773.20" y="351.5" ></text>
</g>
<g >
<title>_nv032197rm (1 samples, 0.01%)</title><rect x="548.9" y="469" width="0.2" height="15.0" fill="rgb(229,143,28)" rx="2" ry="2" />
<text  x="551.92" y="479.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::~__allocated_ptr (1 samples, 0.01%)</title><rect x="856.6" y="277" width="0.2" height="15.0" fill="rgb(250,47,33)" rx="2" ry="2" />
<text  x="859.64" y="287.5" ></text>
</g>
<g >
<title>SDL_SoftBlit (1,203 samples, 14.06%)</title><rect x="996.7" y="501" width="165.9" height="15.0" fill="rgb(223,37,48)" rx="2" ry="2" />
<text  x="999.71" y="511.5" >SDL_SoftBlit</text>
</g>
<g >
<title>pipe_read (1 samples, 0.01%)</title><rect x="39.8" y="597" width="0.1" height="15.0" fill="rgb(239,62,46)" rx="2" ry="2" />
<text  x="42.78" y="607.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (37 samples, 0.43%)</title><rect x="576.2" y="405" width="5.1" height="15.0" fill="rgb(240,66,16)" rx="2" ry="2" />
<text  x="579.22" y="415.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (6 samples, 0.07%)</title><rect x="816.0" y="277" width="0.8" height="15.0" fill="rgb(250,184,34)" rx="2" ry="2" />
<text  x="818.97" y="287.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (1 samples, 0.01%)</title><rect x="46.8" y="677" width="0.1" height="15.0" fill="rgb(218,189,10)" rx="2" ry="2" />
<text  x="49.81" y="687.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (6 samples, 0.07%)</title><rect x="390.6" y="501" width="0.9" height="15.0" fill="rgb(234,218,23)" rx="2" ry="2" />
<text  x="393.65" y="511.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.02%)</title><rect x="132.8" y="549" width="0.3" height="15.0" fill="rgb(227,54,37)" rx="2" ry="2" />
<text  x="135.84" y="559.5" ></text>
</g>
<g >
<title>Window::GetZ (1 samples, 0.01%)</title><rect x="48.7" y="677" width="0.2" height="15.0" fill="rgb(248,104,18)" rx="2" ry="2" />
<text  x="51.74" y="687.5" ></text>
</g>
<g >
<title>memset (1 samples, 0.01%)</title><rect x="996.6" y="453" width="0.1" height="15.0" fill="rgb(224,146,41)" rx="2" ry="2" />
<text  x="999.57" y="463.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (2 samples, 0.02%)</title><rect x="806.7" y="373" width="0.3" height="15.0" fill="rgb(246,95,29)" rx="2" ry="2" />
<text  x="809.73" y="383.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="560.6" y="421" width="0.2" height="15.0" fill="rgb(216,109,18)" rx="2" ry="2" />
<text  x="563.64" y="431.5" ></text>
</g>
<g >
<title>_nv029793rm (2 samples, 0.02%)</title><rect x="548.6" y="469" width="0.3" height="15.0" fill="rgb(245,208,8)" rx="2" ry="2" />
<text  x="551.64" y="479.5" ></text>
</g>
<g >
<title>Tone::Tone (3 samples, 0.04%)</title><rect x="811.1" y="357" width="0.5" height="15.0" fill="rgb(250,215,10)" rx="2" ry="2" />
<text  x="814.14" y="367.5" ></text>
</g>
<g >
<title>Rect::GetSubRect (4 samples, 0.05%)</title><rect x="141.8" y="517" width="0.6" height="15.0" fill="rgb(235,213,26)" rx="2" ry="2" />
<text  x="144.80" y="527.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="573.6" y="405" width="0.1" height="15.0" fill="rgb(223,73,48)" rx="2" ry="2" />
<text  x="576.60" y="415.5" ></text>
</g>
<g >
<title>xcb_poll_for_reply64 (1 samples, 0.01%)</title><rect x="994.0" y="421" width="0.1" height="15.0" fill="rgb(239,34,6)" rx="2" ry="2" />
<text  x="996.95" y="431.5" ></text>
</g>
<g >
<title>std::__move_merge_adaptive_backward&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (1 samples, 0.01%)</title><rect x="343.1" y="469" width="0.1" height="15.0" fill="rgb(240,154,51)" rx="2" ry="2" />
<text  x="346.09" y="479.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (7 samples, 0.08%)</title><rect x="638.4" y="325" width="1.0" height="15.0" fill="rgb(236,200,52)" rx="2" ry="2" />
<text  x="641.40" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (30 samples, 0.35%)</title><rect x="357.7" y="517" width="4.1" height="15.0" fill="rgb(209,25,29)" rx="2" ry="2" />
<text  x="360.70" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (136 samples, 1.59%)</title><rect x="361.8" y="517" width="18.8" height="15.0" fill="rgb(226,133,6)" rx="2" ry="2" />
<text  x="364.84" y="527.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.02%)</title><rect x="549.1" y="389" width="0.2" height="15.0" fill="rgb(213,223,21)" rx="2" ry="2" />
<text  x="552.06" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="858.6" y="421" width="0.1" height="15.0" fill="rgb(214,88,50)" rx="2" ry="2" />
<text  x="861.57" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate (3 samples, 0.04%)</title><rect x="805.2" y="261" width="0.4" height="15.0" fill="rgb(216,80,31)" rx="2" ry="2" />
<text  x="808.21" y="271.5" ></text>
</g>
<g >
<title>Sdl2Ui::UpdateDisplay (1,303 samples, 15.22%)</title><rect x="994.1" y="565" width="179.6" height="15.0" fill="rgb(206,192,8)" rx="2" ry="2" />
<text  x="997.09" y="575.5" >Sdl2Ui::UpdateDisplay</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2 samples, 0.02%)</title><rect x="605.4" y="229" width="0.3" height="15.0" fill="rgb(207,105,16)" rx="2" ry="2" />
<text  x="608.45" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.01%)</title><rect x="881.0" y="437" width="0.2" height="15.0" fill="rgb(239,167,2)" rx="2" ry="2" />
<text  x="884.04" y="447.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::CommonEvent&gt; (5 samples, 0.06%)</title><rect x="957.4" y="501" width="0.7" height="15.0" fill="rgb(217,228,33)" rx="2" ry="2" />
<text  x="960.42" y="511.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (212 samples, 2.48%)</title><rect x="773.0" y="197" width="29.2" height="15.0" fill="rgb(230,221,3)" rx="2" ry="2" />
<text  x="775.95" y="207.5" >[l..</text>
</g>
<g >
<title>common_file_perm (2 samples, 0.02%)</title><rect x="40.3" y="565" width="0.3" height="15.0" fill="rgb(253,92,31)" rx="2" ry="2" />
<text  x="43.33" y="575.5" ></text>
</g>
<g >
<title>Sprite::SetY (1 samples, 0.01%)</title><rect x="978.8" y="485" width="0.1" height="15.0" fill="rgb(211,159,47)" rx="2" ry="2" />
<text  x="981.79" y="495.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (2 samples, 0.02%)</title><rect x="431.0" y="437" width="0.3" height="15.0" fill="rgb(234,23,38)" rx="2" ry="2" />
<text  x="434.04" y="447.5" ></text>
</g>
<g >
<title>SDL_RenderCopy_REAL (5 samples, 0.06%)</title><rect x="995.7" y="549" width="0.7" height="15.0" fill="rgb(217,64,25)" rx="2" ry="2" />
<text  x="998.75" y="559.5" ></text>
</g>
<g >
<title>Bitmap::GetHeight (2 samples, 0.02%)</title><rect x="866.2" y="437" width="0.2" height="15.0" fill="rgb(206,171,38)" rx="2" ry="2" />
<text  x="869.15" y="447.5" ></text>
</g>
<g >
<title>x86_pmu_enable (15 samples, 0.18%)</title><rect x="353.7" y="373" width="2.1" height="15.0" fill="rgb(227,66,29)" rx="2" ry="2" />
<text  x="356.70" y="383.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (10 samples, 0.12%)</title><rect x="324.6" y="453" width="1.4" height="15.0" fill="rgb(245,20,32)" rx="2" ry="2" />
<text  x="327.61" y="463.5" ></text>
</g>
<g >
<title>trigger_load_balance (1 samples, 0.01%)</title><rect x="560.6" y="325" width="0.2" height="15.0" fill="rgb(235,206,27)" rx="2" ry="2" />
<text  x="563.64" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.01%)</title><rect x="117.1" y="677" width="0.2" height="15.0" fill="rgb(220,198,45)" rx="2" ry="2" />
<text  x="120.12" y="687.5" ></text>
</g>
<g >
<title>Scene::MainFunction (1 samples, 0.01%)</title><rect x="58.0" y="677" width="0.1" height="15.0" fill="rgb(250,62,30)" rx="2" ry="2" />
<text  x="60.98" y="687.5" ></text>
</g>
<g >
<title>select_idle_sibling (1 samples, 0.01%)</title><rect x="41.2" y="485" width="0.1" height="15.0" fill="rgb(222,169,27)" rx="2" ry="2" />
<text  x="44.16" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="861.2" y="405" width="0.1" height="15.0" fill="rgb(208,80,17)" rx="2" ry="2" />
<text  x="864.19" y="415.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="357.6" y="469" width="0.1" height="15.0" fill="rgb(217,37,9)" rx="2" ry="2" />
<text  x="360.56" y="479.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (1 samples, 0.01%)</title><rect x="1189.6" y="597" width="0.1" height="15.0" fill="rgb(219,90,14)" rx="2" ry="2" />
<text  x="1192.59" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (10 samples, 0.12%)</title><rect x="642.5" y="261" width="1.4" height="15.0" fill="rgb(208,205,53)" rx="2" ry="2" />
<text  x="645.53" y="271.5" ></text>
</g>
<g >
<title>__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int&gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;Input::UiSource::Update()::&lt;lambda(int)&gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="352.0" y="485" width="0.2" height="15.0" fill="rgb(226,35,31)" rx="2" ry="2" />
<text  x="355.05" y="495.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (1,877 samples, 21.93%)</title><rect x="598.7" y="421" width="258.8" height="15.0" fill="rgb(243,59,54)" rx="2" ry="2" />
<text  x="601.69" y="431.5" >std::function&lt;void (FileRequestRes..</text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingBackgroundExecution (15 samples, 0.18%)</title><rect x="387.9" y="501" width="2.1" height="15.0" fill="rgb(224,104,48)" rx="2" ry="2" />
<text  x="390.89" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (4 samples, 0.05%)</title><rect x="617.3" y="325" width="0.6" height="15.0" fill="rgb(216,152,20)" rx="2" ry="2" />
<text  x="620.30" y="335.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.01%)</title><rect x="72.9" y="661" width="0.1" height="15.0" fill="rgb(250,110,46)" rx="2" ry="2" />
<text  x="75.87" y="671.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (3 samples, 0.04%)</title><rect x="617.4" y="293" width="0.5" height="15.0" fill="rgb(247,175,11)" rx="2" ry="2" />
<text  x="620.44" y="303.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.01%)</title><rect x="579.8" y="325" width="0.1" height="15.0" fill="rgb(223,213,29)" rx="2" ry="2" />
<text  x="582.80" y="335.5" ></text>
</g>
<g >
<title>do_nanosleep (21 samples, 0.25%)</title><rect x="353.1" y="469" width="2.9" height="15.0" fill="rgb(206,78,54)" rx="2" ry="2" />
<text  x="356.15" y="479.5" ></text>
</g>
<g >
<title>_nv025886rm (1 samples, 0.01%)</title><rect x="906.0" y="469" width="0.1" height="15.0" fill="rgb(254,96,19)" rx="2" ry="2" />
<text  x="908.99" y="479.5" ></text>
</g>
<g >
<title>Sprite::SetOy (1 samples, 0.01%)</title><rect x="870.6" y="437" width="0.1" height="15.0" fill="rgb(251,178,4)" rx="2" ry="2" />
<text  x="873.56" y="447.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.02%)</title><rect x="549.1" y="437" width="0.2" height="15.0" fill="rgb(226,136,13)" rx="2" ry="2" />
<text  x="552.06" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (5 samples, 0.06%)</title><rect x="361.8" y="501" width="0.7" height="15.0" fill="rgb(226,182,10)" rx="2" ry="2" />
<text  x="364.84" y="511.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="560.6" y="405" width="0.2" height="15.0" fill="rgb(207,199,37)" rx="2" ry="2" />
<text  x="563.64" y="415.5" ></text>
</g>
<g >
<title>_XEventsQueued (6 samples, 0.07%)</title><rect x="990.2" y="469" width="0.9" height="15.0" fill="rgb(243,6,18)" rx="2" ry="2" />
<text  x="993.23" y="479.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.01%)</title><rect x="27.1" y="517" width="0.1" height="15.0" fill="rgb(249,44,18)" rx="2" ry="2" />
<text  x="30.10" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (24 samples, 0.28%)</title><rect x="576.8" y="357" width="3.3" height="15.0" fill="rgb(249,214,6)" rx="2" ry="2" />
<text  x="579.77" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.01%)</title><rect x="585.5" y="389" width="0.1" height="15.0" fill="rgb(252,222,51)" rx="2" ry="2" />
<text  x="588.46" y="399.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (4 samples, 0.05%)</title><rect x="856.8" y="357" width="0.5" height="15.0" fill="rgb(211,173,37)" rx="2" ry="2" />
<text  x="859.78" y="367.5" ></text>
</g>
<g >
<title>SDL_GetTicks (1 samples, 0.01%)</title><rect x="356.0" y="565" width="0.2" height="15.0" fill="rgb(229,36,21)" rx="2" ry="2" />
<text  x="359.05" y="575.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="973.8" y="389" width="0.2" height="15.0" fill="rgb(212,109,21)" rx="2" ry="2" />
<text  x="976.83" y="399.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="963.5" y="453" width="0.1" height="15.0" fill="rgb(224,120,44)" rx="2" ry="2" />
<text  x="966.49" y="463.5" ></text>
</g>
<g >
<title>posix_get_monotonic_raw (18 samples, 0.21%)</title><rect x="375.5" y="469" width="2.5" height="15.0" fill="rgb(250,45,14)" rx="2" ry="2" />
<text  x="378.48" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, true&gt;::_M_incr (10 samples, 0.12%)</title><rect x="1184.5" y="517" width="1.4" height="15.0" fill="rgb(222,137,43)" rx="2" ry="2" />
<text  x="1187.49" y="527.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="540.1" y="405" width="0.1" height="15.0" fill="rgb(223,73,18)" rx="2" ry="2" />
<text  x="543.10" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Val_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;Drawable*, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (4 samples, 0.05%)</title><rect x="346.0" y="421" width="0.5" height="15.0" fill="rgb(224,33,37)" rx="2" ry="2" />
<text  x="348.98" y="431.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::operator= (2 samples, 0.02%)</title><rect x="858.7" y="421" width="0.3" height="15.0" fill="rgb(216,35,52)" rx="2" ry="2" />
<text  x="861.71" y="431.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.01%)</title><rect x="1162.3" y="389" width="0.1" height="15.0" fill="rgb(210,163,27)" rx="2" ry="2" />
<text  x="1165.29" y="399.5" ></text>
</g>
<g >
<title>os_acquire_spinlock (1 samples, 0.01%)</title><rect x="548.9" y="453" width="0.2" height="15.0" fill="rgb(252,149,9)" rx="2" ry="2" />
<text  x="551.92" y="463.5" ></text>
</g>
<g >
<title>std::__merge_adaptive&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, long, Drawable**, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (8 samples, 0.09%)</title><rect x="342.1" y="485" width="1.1" height="15.0" fill="rgb(248,105,14)" rx="2" ry="2" />
<text  x="345.12" y="495.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (916 samples, 10.70%)</title><rect x="146.8" y="453" width="126.2" height="15.0" fill="rgb(246,60,25)" rx="2" ry="2" />
<text  x="149.76" y="463.5" >[libpixman-1.so..</text>
</g>
<g >
<title>_int_free (1 samples, 0.01%)</title><rect x="117.5" y="693" width="0.2" height="15.0" fill="rgb(222,117,10)" rx="2" ry="2" />
<text  x="120.54" y="703.5" ></text>
</g>
<g >
<title>Sprite::GetZ (4 samples, 0.05%)</title><rect x="345.4" y="405" width="0.6" height="15.0" fill="rgb(250,11,32)" rx="2" ry="2" />
<text  x="348.43" y="415.5" ></text>
</g>
<g >
<title>Bitmap::BlitFast (3 samples, 0.04%)</title><rect x="337.7" y="501" width="0.4" height="15.0" fill="rgb(213,1,30)" rx="2" ry="2" />
<text  x="340.71" y="511.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.01%)</title><rect x="27.2" y="533" width="0.2" height="15.0" fill="rgb(220,182,22)" rx="2" ry="2" />
<text  x="30.23" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::CommonEvent, std::allocator&lt;RPG::CommonEvent&gt; &gt;::size (1 samples, 0.01%)</title><rect x="960.5" y="437" width="0.1" height="15.0" fill="rgb(216,84,10)" rx="2" ry="2" />
<text  x="963.45" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.01%)</title><rect x="604.8" y="261" width="0.1" height="15.0" fill="rgb(206,7,49)" rx="2" ry="2" />
<text  x="607.76" y="271.5" ></text>
</g>
<g >
<title>Tone::Tone (2 samples, 0.02%)</title><rect x="870.0" y="421" width="0.3" height="15.0" fill="rgb(225,78,40)" rx="2" ry="2" />
<text  x="873.01" y="431.5" ></text>
</g>
<g >
<title>[libpixman-1.so.0.36.0] (1 samples, 0.01%)</title><rect x="73.1" y="693" width="0.2" height="15.0" fill="rgb(248,129,42)" rx="2" ry="2" />
<text  x="76.14" y="703.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.01%)</title><rect x="854.6" y="293" width="0.1" height="15.0" fill="rgb(221,171,28)" rx="2" ry="2" />
<text  x="857.57" y="303.5" ></text>
</g>
<g >
<title>std::__stable_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (68 samples, 0.79%)</title><rect x="341.8" y="517" width="9.4" height="15.0" fill="rgb(248,16,53)" rx="2" ry="2" />
<text  x="344.84" y="527.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char32_t&gt;::assign (1 samples, 0.01%)</title><rect x="884.6" y="405" width="0.2" height="15.0" fill="rgb(244,207,46)" rx="2" ry="2" />
<text  x="887.63" y="415.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.02%)</title><rect x="885.5" y="373" width="0.2" height="15.0" fill="rgb(228,130,35)" rx="2" ry="2" />
<text  x="888.45" y="383.5" ></text>
</g>
<g >
<title>pixman_image_unref (2 samples, 0.02%)</title><rect x="324.3" y="453" width="0.3" height="15.0" fill="rgb(236,10,20)" rx="2" ry="2" />
<text  x="327.34" y="463.5" ></text>
</g>
<g >
<title>Game_Picture::Move (9 samples, 0.11%)</title><rect x="562.0" y="469" width="1.3" height="15.0" fill="rgb(239,147,33)" rx="2" ry="2" />
<text  x="565.02" y="479.5" ></text>
</g>
<g >
<title>Bitmap::GetWidth (27 samples, 0.32%)</title><rect x="970.2" y="485" width="3.8" height="15.0" fill="rgb(248,95,24)" rx="2" ry="2" />
<text  x="973.24" y="495.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.01%)</title><rect x="573.6" y="373" width="0.1" height="15.0" fill="rgb(240,84,46)" rx="2" ry="2" />
<text  x="576.60" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (10 samples, 0.12%)</title><rect x="642.5" y="229" width="1.4" height="15.0" fill="rgb(232,3,0)" rx="2" ry="2" />
<text  x="645.53" y="239.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandControlVariables (5 samples, 0.06%)</title><rect x="390.0" y="501" width="0.6" height="15.0" fill="rgb(209,107,38)" rx="2" ry="2" />
<text  x="392.96" y="511.5" ></text>
</g>
<g >
<title>pagecache_get_page (1 samples, 0.01%)</title><rect x="39.1" y="533" width="0.1" height="15.0" fill="rgb(245,43,45)" rx="2" ry="2" />
<text  x="42.09" y="543.5" ></text>
</g>
<g >
<title>Game_Player::UpdateVehicleActions (1 samples, 0.01%)</title><rect x="55.6" y="677" width="0.2" height="15.0" fill="rgb(212,0,45)" rx="2" ry="2" />
<text  x="58.63" y="687.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="973.8" y="405" width="0.2" height="15.0" fill="rgb(233,92,3)" rx="2" ry="2" />
<text  x="976.83" y="415.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (79 samples, 0.92%)</title><rect x="1162.7" y="469" width="10.9" height="15.0" fill="rgb(207,180,13)" rx="2" ry="2" />
<text  x="1165.70" y="479.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.01%)</title><rect x="272.9" y="293" width="0.1" height="15.0" fill="rgb(229,179,2)" rx="2" ry="2" />
<text  x="275.91" y="303.5" ></text>
</g>
<g >
<title>SDL_RenderCopy@plt (1 samples, 0.01%)</title><rect x="995.6" y="549" width="0.1" height="15.0" fill="rgb(223,88,46)" rx="2" ry="2" />
<text  x="998.61" y="559.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (10 samples, 0.12%)</title><rect x="324.6" y="501" width="1.4" height="15.0" fill="rgb(233,27,22)" rx="2" ry="2" />
<text  x="327.61" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.05%)</title><rect x="72.3" y="645" width="0.6" height="15.0" fill="rgb(219,88,37)" rx="2" ry="2" />
<text  x="75.32" y="655.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (6 samples, 0.07%)</title><rect x="988.2" y="549" width="0.8" height="15.0" fill="rgb(239,193,14)" rx="2" ry="2" />
<text  x="991.16" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (15 samples, 0.18%)</title><rect x="991.1" y="469" width="2.0" height="15.0" fill="rgb(210,114,38)" rx="2" ry="2" />
<text  x="994.06" y="479.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (12 samples, 0.14%)</title><rect x="69.8" y="613" width="1.7" height="15.0" fill="rgb(251,126,48)" rx="2" ry="2" />
<text  x="72.83" y="623.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (90 samples, 1.05%)</title><rect x="25.7" y="613" width="12.4" height="15.0" fill="rgb(243,142,41)" rx="2" ry="2" />
<text  x="28.72" y="623.5" ></text>
</g>
<g >
<title>Game_Interpreter::IsAsyncPending (2 samples, 0.02%)</title><rect x="391.5" y="501" width="0.3" height="15.0" fill="rgb(223,131,40)" rx="2" ry="2" />
<text  x="394.48" y="511.5" ></text>
</g>
<g >
<title>_int_free (4 samples, 0.05%)</title><rect x="323.6" y="437" width="0.6" height="15.0" fill="rgb(222,92,22)" rx="2" ry="2" />
<text  x="326.65" y="447.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="799.1" y="37" width="0.2" height="15.0" fill="rgb(205,58,19)" rx="2" ry="2" />
<text  x="802.15" y="47.5" ></text>
</g>
<g >
<title>SDL_UpdateTexture_REAL (1,285 samples, 15.01%)</title><rect x="996.4" y="549" width="177.2" height="15.0" fill="rgb(249,51,42)" rx="2" ry="2" />
<text  x="999.44" y="559.5" >SDL_UpdateTexture_REAL</text>
</g>
<g >
<title>Sdl2Ui::ProcessActiveEvent (22 samples, 0.26%)</title><rect x="991.1" y="549" width="3.0" height="15.0" fill="rgb(241,88,51)" rx="2" ry="2" />
<text  x="994.06" y="559.5" ></text>
</g>
<g >
<title>X11_DispatchEvent (1 samples, 0.01%)</title><rect x="993.1" y="485" width="0.2" height="15.0" fill="rgb(216,183,0)" rx="2" ry="2" />
<text  x="996.13" y="495.5" ></text>
</g>
<g >
<title>trigger_load_balance (1 samples, 0.01%)</title><rect x="935.9" y="341" width="0.1" height="15.0" fill="rgb(208,10,53)" rx="2" ry="2" />
<text  x="938.91" y="351.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (1 samples, 0.01%)</title><rect x="26.3" y="549" width="0.1" height="15.0" fill="rgb(250,98,10)" rx="2" ry="2" />
<text  x="29.27" y="559.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (4 samples, 0.05%)</title><rect x="993.5" y="437" width="0.6" height="15.0" fill="rgb(219,53,28)" rx="2" ry="2" />
<text  x="996.54" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="645.3" y="229" width="0.1" height="15.0" fill="rgb(244,203,36)" rx="2" ry="2" />
<text  x="648.29" y="239.5" ></text>
</g>
<g >
<title>Transform::Transform (3 samples, 0.04%)</title><rect x="276.1" y="437" width="0.4" height="15.0" fill="rgb(239,185,12)" rx="2" ry="2" />
<text  x="279.08" y="447.5" ></text>
</g>
<g >
<title>Game_Map::IsAnyEventStarting (13 samples, 0.15%)</title><rect x="958.8" y="485" width="1.8" height="15.0" fill="rgb(243,58,7)" rx="2" ry="2" />
<text  x="961.80" y="495.5" ></text>
</g>
<g >
<title>Bitmap::GetOperator (1 samples, 0.01%)</title><rect x="275.9" y="453" width="0.2" height="15.0" fill="rgb(207,79,1)" rx="2" ry="2" />
<text  x="278.94" y="463.5" ></text>
</g>
<g >
<title>AsyncHandler::IsImportantFilePending (4 samples, 0.05%)</title><rect x="105.4" y="677" width="0.6" height="15.0" fill="rgb(207,8,34)" rx="2" ry="2" />
<text  x="108.40" y="687.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (1 samples, 0.01%)</title><rect x="861.2" y="421" width="0.1" height="15.0" fill="rgb(226,123,5)" rx="2" ry="2" />
<text  x="864.19" y="431.5" ></text>
</g>
<g >
<title>Game_Picture::ShowParams::ShowParams (1 samples, 0.01%)</title><rect x="881.0" y="469" width="0.2" height="15.0" fill="rgb(221,102,11)" rx="2" ry="2" />
<text  x="884.04" y="479.5" ></text>
</g>
<g >
<title>SDL_WaitEventTimeout_REAL (22 samples, 0.26%)</title><rect x="991.1" y="533" width="3.0" height="15.0" fill="rgb(241,150,39)" rx="2" ry="2" />
<text  x="994.06" y="543.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (1 samples, 0.01%)</title><rect x="886.1" y="421" width="0.2" height="15.0" fill="rgb(243,119,38)" rx="2" ry="2" />
<text  x="889.14" y="431.5" ></text>
</g>
<g >
<title>rcu_segcblist_ready_cbs (1 samples, 0.01%)</title><rect x="378.9" y="373" width="0.2" height="15.0" fill="rgb(228,73,33)" rx="2" ry="2" />
<text  x="381.93" y="383.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (9 samples, 0.11%)</title><rect x="636.6" y="245" width="1.2" height="15.0" fill="rgb(247,58,14)" rx="2" ry="2" />
<text  x="639.60" y="255.5" ></text>
</g>
<g >
<title>__strlen_avx2 (4 samples, 0.05%)</title><rect x="646.1" y="325" width="0.6" height="15.0" fill="rgb(223,20,10)" rx="2" ry="2" />
<text  x="649.12" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (17 samples, 0.20%)</title><rect x="802.9" y="165" width="2.3" height="15.0" fill="rgb(239,223,53)" rx="2" ry="2" />
<text  x="805.87" y="175.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="560.6" y="373" width="0.2" height="15.0" fill="rgb(225,107,29)" rx="2" ry="2" />
<text  x="563.64" y="383.5" ></text>
</g>
<g >
<title>Utils::GetRandomNumber (1 samples, 0.01%)</title><rect x="48.6" y="677" width="0.1" height="15.0" fill="rgb(210,93,51)" rx="2" ry="2" />
<text  x="51.60" y="687.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustParams (2 samples, 0.02%)</title><rect x="561.3" y="453" width="0.3" height="15.0" fill="rgb(205,189,42)" rx="2" ry="2" />
<text  x="564.33" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1 samples, 0.01%)</title><rect x="885.0" y="453" width="0.2" height="15.0" fill="rgb(233,51,14)" rx="2" ry="2" />
<text  x="888.04" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="1174.7" y="485" width="0.1" height="15.0" fill="rgb(244,29,16)" rx="2" ry="2" />
<text  x="1177.70" y="495.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (3 samples, 0.04%)</title><rect x="351.4" y="533" width="0.4" height="15.0" fill="rgb(246,87,12)" rx="2" ry="2" />
<text  x="354.36" y="543.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Set (4 samples, 0.05%)</title><rect x="940.6" y="485" width="0.6" height="15.0" fill="rgb(247,42,23)" rx="2" ry="2" />
<text  x="943.60" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.01%)</title><rect x="581.2" y="373" width="0.1" height="15.0" fill="rgb(242,140,2)" rx="2" ry="2" />
<text  x="584.18" y="383.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (1 samples, 0.01%)</title><rect x="833.2" y="373" width="0.1" height="15.0" fill="rgb(237,182,33)" rx="2" ry="2" />
<text  x="836.20" y="383.5" ></text>
</g>
<g >
<title>Game_Player::Update (17 samples, 0.20%)</title><rect x="958.2" y="533" width="2.4" height="15.0" fill="rgb(227,11,42)" rx="2" ry="2" />
<text  x="961.25" y="543.5" ></text>
</g>
<g >
<title>SDL_GetTicks_REAL (3 samples, 0.04%)</title><rect x="351.4" y="549" width="0.4" height="15.0" fill="rgb(238,69,11)" rx="2" ry="2" />
<text  x="354.36" y="559.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (128 samples, 1.50%)</title><rect x="618.5" y="277" width="17.7" height="15.0" fill="rgb(209,57,29)" rx="2" ry="2" />
<text  x="621.54" y="287.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="799.1" y="117" width="0.2" height="15.0" fill="rgb(252,5,37)" rx="2" ry="2" />
<text  x="802.15" y="127.5" ></text>
</g>
<g >
<title>SDL_UnlockTexture_REAL (79 samples, 0.92%)</title><rect x="1162.7" y="517" width="10.9" height="15.0" fill="rgb(250,63,9)" rx="2" ry="2" />
<text  x="1165.70" y="527.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (161 samples, 1.88%)</title><rect x="575.4" y="437" width="22.2" height="15.0" fill="rgb(219,229,20)" rx="2" ry="2" />
<text  x="578.39" y="447.5" >A..</text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (1 samples, 0.01%)</title><rect x="574.8" y="437" width="0.2" height="15.0" fill="rgb(218,164,18)" rx="2" ry="2" />
<text  x="577.84" y="447.5" ></text>
</g>
<g >
<title>__exchange_and_add (6 samples, 0.07%)</title><rect x="816.0" y="261" width="0.8" height="15.0" fill="rgb(212,124,42)" rx="2" ry="2" />
<text  x="818.97" y="271.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.01%)</title><rect x="453.2" y="341" width="0.2" height="15.0" fill="rgb(250,175,39)" rx="2" ry="2" />
<text  x="456.24" y="351.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="802.7" y="101" width="0.2" height="15.0" fill="rgb(245,10,38)" rx="2" ry="2" />
<text  x="805.73" y="111.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipToNextConditional (5 samples, 0.06%)</title><rect x="53.3" y="677" width="0.7" height="15.0" fill="rgb(215,117,11)" rx="2" ry="2" />
<text  x="56.29" y="687.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandWait (3 samples, 0.04%)</title><rect x="890.1" y="485" width="0.5" height="15.0" fill="rgb(235,190,33)" rx="2" ry="2" />
<text  x="893.14" y="495.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (6 samples, 0.07%)</title><rect x="638.5" y="293" width="0.9" height="15.0" fill="rgb(252,130,20)" rx="2" ry="2" />
<text  x="641.53" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="323.5" y="437" width="0.1" height="15.0" fill="rgb(252,187,42)" rx="2" ry="2" />
<text  x="326.51" y="447.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.02%)</title><rect x="769.1" y="245" width="0.3" height="15.0" fill="rgb(252,62,32)" rx="2" ry="2" />
<text  x="772.09" y="255.5" ></text>
</g>
<g >
<title>XFlush (4 samples, 0.05%)</title><rect x="993.5" y="469" width="0.6" height="15.0" fill="rgb(232,20,17)" rx="2" ry="2" />
<text  x="996.54" y="479.5" ></text>
</g>
<g >
<title>ctx_sched_out (1 samples, 0.01%)</title><rect x="353.6" y="405" width="0.1" height="15.0" fill="rgb(217,206,25)" rx="2" ry="2" />
<text  x="356.56" y="415.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (33 samples, 0.39%)</title><rect x="601.6" y="325" width="4.5" height="15.0" fill="rgb(210,195,36)" rx="2" ry="2" />
<text  x="604.59" y="335.5" ></text>
</g>
<g >
<title>TilemapLayer::Draw (25 samples, 0.29%)</title><rect x="335.4" y="533" width="3.4" height="15.0" fill="rgb(225,68,51)" rx="2" ry="2" />
<text  x="338.37" y="543.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.01%)</title><rect x="993.5" y="229" width="0.2" height="15.0" fill="rgb(213,83,20)" rx="2" ry="2" />
<text  x="996.54" y="239.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (29 samples, 0.34%)</title><rect x="589.7" y="309" width="4.0" height="15.0" fill="rgb(231,4,43)" rx="2" ry="2" />
<text  x="592.73" y="319.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (1 samples, 0.01%)</title><rect x="990.4" y="277" width="0.1" height="15.0" fill="rgb(233,136,31)" rx="2" ry="2" />
<text  x="993.37" y="287.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (1 samples, 0.01%)</title><rect x="563.0" y="437" width="0.1" height="15.0" fill="rgb(242,18,15)" rx="2" ry="2" />
<text  x="565.98" y="447.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (15 samples, 0.18%)</title><rect x="615.1" y="245" width="2.1" height="15.0" fill="rgb(221,156,47)" rx="2" ry="2" />
<text  x="618.10" y="255.5" ></text>
</g>
<g >
<title>pixman_region32_init (1 samples, 0.01%)</title><rect x="338.0" y="469" width="0.1" height="15.0" fill="rgb(215,165,54)" rx="2" ry="2" />
<text  x="340.98" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (10 samples, 0.12%)</title><rect x="642.5" y="277" width="1.4" height="15.0" fill="rgb(231,12,22)" rx="2" ry="2" />
<text  x="645.53" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::substr (1 samples, 0.01%)</title><rect x="885.2" y="453" width="0.1" height="15.0" fill="rgb(247,213,33)" rx="2" ry="2" />
<text  x="888.18" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.01%)</title><rect x="642.1" y="213" width="0.2" height="15.0" fill="rgb(220,107,8)" rx="2" ry="2" />
<text  x="645.12" y="223.5" ></text>
</g>
<g >
<title>Blend (3 samples, 0.04%)</title><rect x="866.4" y="437" width="0.4" height="15.0" fill="rgb(224,63,24)" rx="2" ry="2" />
<text  x="869.43" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (26 samples, 0.30%)</title><rect x="543.4" y="453" width="3.6" height="15.0" fill="rgb(239,17,1)" rx="2" ry="2" />
<text  x="546.41" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2 samples, 0.02%)</title><rect x="645.2" y="277" width="0.2" height="15.0" fill="rgb(254,54,35)" rx="2" ry="2" />
<text  x="648.15" y="287.5" ></text>
</g>
<g >
<title>_int_malloc (11 samples, 0.13%)</title><rect x="800.5" y="149" width="1.5" height="15.0" fill="rgb(211,113,34)" rx="2" ry="2" />
<text  x="803.53" y="159.5" ></text>
</g>
<g >
<title>std::_Hash_bytes@plt (4 samples, 0.05%)</title><rect x="595.9" y="325" width="0.6" height="15.0" fill="rgb(216,187,0)" rx="2" ry="2" />
<text  x="598.93" y="335.5" ></text>
</g>
<g >
<title>std::__merge_sort_loop&lt;Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (13 samples, 0.15%)</title><rect x="346.5" y="469" width="1.8" height="15.0" fill="rgb(220,53,25)" rx="2" ry="2" />
<text  x="349.53" y="479.5" ></text>
</g>
<g >
<title>std::__stable_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (1 samples, 0.01%)</title><rect x="139.5" y="517" width="0.1" height="15.0" fill="rgb(233,216,24)" rx="2" ry="2" />
<text  x="142.46" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_create (1 samples, 0.01%)</title><rect x="884.1" y="405" width="0.1" height="15.0" fill="rgb(237,17,35)" rx="2" ry="2" />
<text  x="887.07" y="415.5" ></text>
</g>
<g >
<title>SDL_UDEV_Poll (1 samples, 0.01%)</title><rect x="989.3" y="485" width="0.1" height="15.0" fill="rgb(253,158,46)" rx="2" ry="2" />
<text  x="992.27" y="495.5" ></text>
</g>
<g >
<title>[unknown] (88 samples, 1.03%)</title><rect x="105.4" y="693" width="12.1" height="15.0" fill="rgb(230,25,6)" rx="2" ry="2" />
<text  x="108.40" y="703.5" ></text>
</g>
<g >
<title>std::__find_if&lt;int const*, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (11 samples, 0.13%)</title><rect x="447.5" y="421" width="1.5" height="15.0" fill="rgb(233,74,30)" rx="2" ry="2" />
<text  x="450.45" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, false, true&gt;::operator++ (10 samples, 0.12%)</title><rect x="1184.5" y="533" width="1.4" height="15.0" fill="rgb(223,177,40)" rx="2" ry="2" />
<text  x="1187.49" y="543.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="769.0" y="213" width="0.1" height="15.0" fill="rgb(219,124,19)" rx="2" ry="2" />
<text  x="771.96" y="223.5" ></text>
</g>
<g >
<title>mutex_lock (1 samples, 0.01%)</title><rect x="42.3" y="565" width="0.1" height="15.0" fill="rgb(245,0,2)" rx="2" ry="2" />
<text  x="45.26" y="575.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="1187.0" y="549" width="0.1" height="15.0" fill="rgb(216,156,53)" rx="2" ry="2" />
<text  x="1189.97" y="559.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (1,874 samples, 21.90%)</title><rect x="599.0" y="405" width="258.3" height="15.0" fill="rgb(206,10,45)" rx="2" ry="2" />
<text  x="601.97" y="415.5" >Game_Picture::OnPictureSpriteReady</text>
</g>
<g >
<title>__x64_sys_getpid (1 samples, 0.01%)</title><rect x="23.4" y="661" width="0.1" height="15.0" fill="rgb(234,169,1)" rx="2" ry="2" />
<text  x="26.37" y="671.5" ></text>
</g>
<g >
<title>x86_pmu_enable (13 samples, 0.15%)</title><rect x="991.3" y="325" width="1.8" height="15.0" fill="rgb(223,186,28)" rx="2" ry="2" />
<text  x="994.33" y="335.5" ></text>
</g>
<g >
<title>Bitmap::Init (221 samples, 2.58%)</title><rect x="771.9" y="213" width="30.4" height="15.0" fill="rgb(217,142,17)" rx="2" ry="2" />
<text  x="774.85" y="223.5" >Bi..</text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.01%)</title><rect x="453.2" y="405" width="0.2" height="15.0" fill="rgb(223,28,32)" rx="2" ry="2" />
<text  x="456.24" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="52.0" y="677" width="0.2" height="15.0" fill="rgb(205,95,52)" rx="2" ry="2" />
<text  x="55.05" y="687.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.05%)</title><rect x="887.2" y="421" width="0.6" height="15.0" fill="rgb(223,100,27)" rx="2" ry="2" />
<text  x="890.25" y="431.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (2 samples, 0.02%)</title><rect x="353.3" y="453" width="0.3" height="15.0" fill="rgb(206,50,54)" rx="2" ry="2" />
<text  x="356.29" y="463.5" ></text>
</g>
<g >
<title>operator!= (2 samples, 0.02%)</title><rect x="870.7" y="421" width="0.3" height="15.0" fill="rgb(239,157,28)" rx="2" ry="2" />
<text  x="873.70" y="431.5" ></text>
</g>
<g >
<title>Game_Screen::GetPicture (13 samples, 0.15%)</title><rect x="882.0" y="469" width="1.8" height="15.0" fill="rgb(236,150,28)" rx="2" ry="2" />
<text  x="885.01" y="479.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;Drawable*&gt; (2 samples, 0.02%)</title><rect x="350.1" y="389" width="0.3" height="15.0" fill="rgb(218,103,46)" rx="2" ry="2" />
<text  x="353.12" y="399.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="379.6" y="469" width="0.2" height="15.0" fill="rgb(231,143,0)" rx="2" ry="2" />
<text  x="382.62" y="479.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (3 samples, 0.04%)</title><rect x="885.5" y="389" width="0.4" height="15.0" fill="rgb(234,217,17)" rx="2" ry="2" />
<text  x="888.45" y="399.5" ></text>
</g>
<g >
<title>Drawable::GetPriorityForMapLayer (1 samples, 0.01%)</title><rect x="106.0" y="677" width="0.1" height="15.0" fill="rgb(250,150,36)" rx="2" ry="2" />
<text  x="108.96" y="687.5" ></text>
</g>
<g >
<title>SDL_InvalidateMap (1 samples, 0.01%)</title><rect x="57.8" y="677" width="0.2" height="15.0" fill="rgb(228,23,22)" rx="2" ry="2" />
<text  x="60.84" y="687.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (6 samples, 0.07%)</title><rect x="816.0" y="293" width="0.8" height="15.0" fill="rgb(239,140,49)" rx="2" ry="2" />
<text  x="818.97" y="303.5" ></text>
</g>
<g >
<title>Game_Picture::Update (200 samples, 2.34%)</title><rect x="960.6" y="517" width="27.6" height="15.0" fill="rgb(244,48,52)" rx="2" ry="2" />
<text  x="963.59" y="527.5" >G..</text>
</g>
<g >
<title>std::min&lt;int&gt; (20 samples, 0.23%)</title><rect x="540.6" y="453" width="2.8" height="15.0" fill="rgb(217,64,2)" rx="2" ry="2" />
<text  x="543.65" y="463.5" ></text>
</g>
<g >
<title>Bitmap::GetRect (9 samples, 0.11%)</title><rect x="834.3" y="373" width="1.2" height="15.0" fill="rgb(240,10,5)" rx="2" ry="2" />
<text  x="837.30" y="383.5" ></text>
</g>
<g >
<title>pixman_image_create_solid_fill (2 samples, 0.02%)</title><rect x="273.2" y="469" width="0.3" height="15.0" fill="rgb(253,146,33)" rx="2" ry="2" />
<text  x="276.19" y="479.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="935.9" y="389" width="0.1" height="15.0" fill="rgb(215,43,20)" rx="2" ry="2" />
<text  x="938.91" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (2 samples, 0.02%)</title><rect x="889.7" y="421" width="0.3" height="15.0" fill="rgb(228,149,4)" rx="2" ry="2" />
<text  x="892.73" y="431.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.04%)</title><rect x="578.3" y="341" width="0.4" height="15.0" fill="rgb(217,87,19)" rx="2" ry="2" />
<text  x="581.29" y="351.5" ></text>
</g>
<g >
<title>update_sd_lb_stats (1 samples, 0.01%)</title><rect x="355.8" y="373" width="0.1" height="15.0" fill="rgb(251,128,35)" rx="2" ry="2" />
<text  x="358.77" y="383.5" ></text>
</g>
<g >
<title>native_apic_msr_eoi_write (1 samples, 0.01%)</title><rect x="540.4" y="437" width="0.1" height="15.0" fill="rgb(208,59,45)" rx="2" ry="2" />
<text  x="543.37" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.01%)</title><rect x="581.2" y="357" width="0.1" height="15.0" fill="rgb(208,154,43)" rx="2" ry="2" />
<text  x="584.18" y="367.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (8 samples, 0.09%)</title><rect x="332.3" y="501" width="1.1" height="15.0" fill="rgb(214,209,37)" rx="2" ry="2" />
<text  x="335.33" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (10 samples, 0.12%)</title><rect x="642.5" y="245" width="1.4" height="15.0" fill="rgb(244,20,51)" rx="2" ry="2" />
<text  x="645.53" y="255.5" ></text>
</g>
<g >
<title>ksys_write (14 samples, 0.16%)</title><rect x="40.7" y="645" width="2.0" height="15.0" fill="rgb(219,49,44)" rx="2" ry="2" />
<text  x="43.74" y="655.5" ></text>
</g>
<g >
<title>Game_Screen::GetTone (14 samples, 0.16%)</title><rect x="868.4" y="437" width="1.9" height="15.0" fill="rgb(248,14,2)" rx="2" ry="2" />
<text  x="871.36" y="447.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (10 samples, 0.12%)</title><rect x="994.1" y="533" width="1.4" height="15.0" fill="rgb(251,73,24)" rx="2" ry="2" />
<text  x="997.09" y="543.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="912.1" y="373" width="0.1" height="15.0" fill="rgb(215,160,26)" rx="2" ry="2" />
<text  x="915.06" y="383.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (1 samples, 0.01%)</title><rect x="55.5" y="677" width="0.1" height="15.0" fill="rgb(216,138,20)" rx="2" ry="2" />
<text  x="58.50" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_construct&lt;char32_t const*&gt; (1 samples, 0.01%)</title><rect x="885.2" y="389" width="0.1" height="15.0" fill="rgb(226,199,46)" rx="2" ry="2" />
<text  x="888.18" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (1 samples, 0.01%)</title><rect x="807.1" y="325" width="0.2" height="15.0" fill="rgb(247,188,7)" rx="2" ry="2" />
<text  x="810.14" y="335.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.04%)</title><rect x="641.7" y="213" width="0.4" height="15.0" fill="rgb(227,150,47)" rx="2" ry="2" />
<text  x="644.70" y="223.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (13 samples, 0.15%)</title><rect x="991.3" y="293" width="1.8" height="15.0" fill="rgb(226,119,14)" rx="2" ry="2" />
<text  x="994.33" y="303.5" ></text>
</g>
<g >
<title>SDL_LockTexture_REAL (1 samples, 0.01%)</title><rect x="1162.6" y="517" width="0.1" height="15.0" fill="rgb(234,42,46)" rx="2" ry="2" />
<text  x="1165.56" y="527.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4 samples, 0.05%)</title><rect x="614.5" y="181" width="0.6" height="15.0" fill="rgb(212,52,45)" rx="2" ry="2" />
<text  x="617.54" y="191.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~tuple (10 samples, 0.12%)</title><rect x="642.5" y="341" width="1.4" height="15.0" fill="rgb(222,106,18)" rx="2" ry="2" />
<text  x="645.53" y="351.5" ></text>
</g>
<g >
<title>ktime_get_raw_ts64 (2 samples, 0.02%)</title><rect x="989.5" y="389" width="0.3" height="15.0" fill="rgb(224,181,37)" rx="2" ry="2" />
<text  x="992.54" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.01%)</title><rect x="858.6" y="405" width="0.1" height="15.0" fill="rgb(206,54,14)" rx="2" ry="2" />
<text  x="861.57" y="415.5" ></text>
</g>
<g >
<title>aa_file_perm (2 samples, 0.02%)</title><rect x="42.4" y="549" width="0.3" height="15.0" fill="rgb(250,203,14)" rx="2" ry="2" />
<text  x="45.40" y="559.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (4,129 samples, 48.24%)</title><rect x="387.1" y="517" width="569.2" height="15.0" fill="rgb(236,16,33)" rx="2" ry="2" />
<text  x="390.07" y="527.5" >Game_CommonEvent::Update</text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.02%)</title><rect x="989.5" y="469" width="0.3" height="15.0" fill="rgb(210,48,35)" rx="2" ry="2" />
<text  x="992.54" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (10 samples, 0.12%)</title><rect x="644.0" y="309" width="1.4" height="15.0" fill="rgb(219,108,39)" rx="2" ry="2" />
<text  x="647.05" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_mutate (6 samples, 0.07%)</title><rect x="883.8" y="421" width="0.8" height="15.0" fill="rgb(251,204,37)" rx="2" ry="2" />
<text  x="886.80" y="431.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (86 samples, 1.00%)</title><rect x="121.0" y="549" width="11.8" height="15.0" fill="rgb(235,179,8)" rx="2" ry="2" />
<text  x="123.98" y="559.5" ></text>
</g>
<g >
<title>Game_Map::UpdateForegroundEvents (13 samples, 0.15%)</title><rect x="956.3" y="533" width="1.8" height="15.0" fill="rgb(250,42,32)" rx="2" ry="2" />
<text  x="959.32" y="543.5" ></text>
</g>
<g >
<title>std::__find_if&lt;int const*, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (1 samples, 0.01%)</title><rect x="565.2" y="421" width="0.1" height="15.0" fill="rgb(251,223,40)" rx="2" ry="2" />
<text  x="568.19" y="431.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (816 samples, 9.53%)</title><rect x="657.0" y="357" width="112.5" height="15.0" fill="rgb(219,185,49)" rx="2" ry="2" />
<text  x="660.01" y="367.5" >pixman_image_..</text>
</g>
<g >
<title>rw_verify_area (5 samples, 0.06%)</title><rect x="40.1" y="613" width="0.6" height="15.0" fill="rgb(242,205,11)" rx="2" ry="2" />
<text  x="43.05" y="623.5" ></text>
</g>
<g >
<title>pollwake (7 samples, 0.08%)</title><rect x="40.9" y="549" width="0.9" height="15.0" fill="rgb(236,210,13)" rx="2" ry="2" />
<text  x="43.88" y="559.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="273.0" y="421" width="0.2" height="15.0" fill="rgb(233,157,4)" rx="2" ry="2" />
<text  x="276.05" y="431.5" ></text>
</g>
<g >
<title>posix_get_monotonic_raw (2 samples, 0.02%)</title><rect x="989.5" y="405" width="0.3" height="15.0" fill="rgb(222,104,36)" rx="2" ry="2" />
<text  x="992.54" y="415.5" ></text>
</g>
<g >
<title>_M_lower_bound (133 samples, 1.55%)</title><rect x="617.9" y="309" width="18.3" height="15.0" fill="rgb(217,101,6)" rx="2" ry="2" />
<text  x="620.85" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (7 samples, 0.08%)</title><rect x="603.8" y="245" width="1.0" height="15.0" fill="rgb(207,2,20)" rx="2" ry="2" />
<text  x="606.79" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (12 samples, 0.14%)</title><rect x="640.9" y="261" width="1.6" height="15.0" fill="rgb(243,201,19)" rx="2" ry="2" />
<text  x="643.88" y="271.5" ></text>
</g>
<g >
<title>Color::Color (1 samples, 0.01%)</title><rect x="43.9" y="677" width="0.2" height="15.0" fill="rgb(231,184,6)" rx="2" ry="2" />
<text  x="46.92" y="687.5" ></text>
</g>
<g >
<title>std::_Hash_bytes@plt (1 samples, 0.01%)</title><rect x="617.2" y="245" width="0.1" height="15.0" fill="rgb(230,50,5)" rx="2" ry="2" />
<text  x="620.16" y="255.5" ></text>
</g>
<g >
<title>x2apic_send_IPI (1 samples, 0.01%)</title><rect x="560.6" y="293" width="0.2" height="15.0" fill="rgb(213,129,40)" rx="2" ry="2" />
<text  x="563.64" y="303.5" ></text>
</g>
<g >
<title>pixman_image_get_height (1 samples, 0.01%)</title><rect x="769.9" y="325" width="0.2" height="15.0" fill="rgb(233,164,53)" rx="2" ry="2" />
<text  x="772.92" y="335.5" ></text>
</g>
<g >
<title>Window::GetZ (1 samples, 0.01%)</title><rect x="350.0" y="405" width="0.1" height="15.0" fill="rgb(241,6,36)" rx="2" ry="2" />
<text  x="352.98" y="415.5" ></text>
</g>
<g >
<title>put_prev_entity (1 samples, 0.01%)</title><rect x="355.9" y="389" width="0.1" height="15.0" fill="rgb(233,47,7)" rx="2" ry="2" />
<text  x="358.91" y="399.5" ></text>
</g>
<g >
<title>DynamicFormat::code_alpha (1 samples, 0.01%)</title><rect x="802.6" y="197" width="0.1" height="15.0" fill="rgb(236,141,12)" rx="2" ry="2" />
<text  x="805.59" y="207.5" ></text>
</g>
<g >
<title>apparmor_file_permission (2 samples, 0.02%)</title><rect x="42.4" y="581" width="0.3" height="15.0" fill="rgb(230,54,0)" rx="2" ry="2" />
<text  x="45.40" y="591.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="50.1" y="677" width="0.4" height="15.0" fill="rgb(223,57,6)" rx="2" ry="2" />
<text  x="53.12" y="687.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (3 samples, 0.04%)</title><rect x="71.1" y="549" width="0.4" height="15.0" fill="rgb(251,158,5)" rx="2" ry="2" />
<text  x="74.07" y="559.5" ></text>
</g>
<g >
<title>Game_Screen::GetFlashColor (8 samples, 0.09%)</title><rect x="974.8" y="485" width="1.1" height="15.0" fill="rgb(222,225,19)" rx="2" ry="2" />
<text  x="977.79" y="495.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (40 samples, 0.47%)</title><rect x="875.5" y="389" width="5.5" height="15.0" fill="rgb(219,26,6)" rx="2" ry="2" />
<text  x="878.53" y="399.5" ></text>
</g>
<g >
<title>trigger_load_balance (1 samples, 0.01%)</title><rect x="769.0" y="197" width="0.1" height="15.0" fill="rgb(226,34,43)" rx="2" ry="2" />
<text  x="771.96" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="989.5" y="453" width="0.3" height="15.0" fill="rgb(227,79,30)" rx="2" ry="2" />
<text  x="992.54" y="463.5" ></text>
</g>
<g >
<title>Sprite::GetWidth (1 samples, 0.01%)</title><rect x="335.2" y="501" width="0.2" height="15.0" fill="rgb(233,200,17)" rx="2" ry="2" />
<text  x="338.23" y="511.5" ></text>
</g>
<g >
<title>rb_insert_color (1 samples, 0.01%)</title><rect x="353.3" y="421" width="0.1" height="15.0" fill="rgb(231,83,20)" rx="2" ry="2" />
<text  x="356.29" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (7 samples, 0.08%)</title><rect x="580.2" y="341" width="1.0" height="15.0" fill="rgb(231,226,36)" rx="2" ry="2" />
<text  x="583.22" y="351.5" ></text>
</g>
<g >
<title>finish_task_switch (13 samples, 0.15%)</title><rect x="991.3" y="373" width="1.8" height="15.0" fill="rgb(230,175,44)" rx="2" ry="2" />
<text  x="994.33" y="383.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (7 samples, 0.08%)</title><rect x="994.5" y="517" width="1.0" height="15.0" fill="rgb(216,153,0)" rx="2" ry="2" />
<text  x="997.51" y="527.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingForegroundExecution (12 samples, 0.14%)</title><rect x="956.5" y="517" width="1.6" height="15.0" fill="rgb(254,91,26)" rx="2" ry="2" />
<text  x="959.45" y="527.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (1 samples, 0.01%)</title><rect x="990.0" y="469" width="0.1" height="15.0" fill="rgb(237,138,29)" rx="2" ry="2" />
<text  x="992.96" y="479.5" ></text>
</g>
<g >
<title>Game_Picture::SyncCurrentToFinish (11 samples, 0.13%)</title><rect x="859.9" y="453" width="1.6" height="15.0" fill="rgb(219,62,38)" rx="2" ry="2" />
<text  x="862.95" y="463.5" ></text>
</g>
<g >
<title>syscall (5 samples, 0.06%)</title><rect x="72.3" y="677" width="0.7" height="15.0" fill="rgb(205,222,13)" rx="2" ry="2" />
<text  x="75.32" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (12 samples, 0.14%)</title><rect x="611.9" y="261" width="1.7" height="15.0" fill="rgb(228,150,8)" rx="2" ry="2" />
<text  x="614.93" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (20 samples, 0.23%)</title><rect x="593.7" y="373" width="2.8" height="15.0" fill="rgb(226,219,6)" rx="2" ry="2" />
<text  x="596.73" y="383.5" ></text>
</g>
<g >
<title>Graphics::IsTransitionErased (1 samples, 0.01%)</title><rect x="857.6" y="421" width="0.1" height="15.0" fill="rgb(243,123,35)" rx="2" ry="2" />
<text  x="860.60" y="431.5" ></text>
</g>
<g >
<title>__GI___nanosleep (15 samples, 0.18%)</title><rect x="991.1" y="501" width="2.0" height="15.0" fill="rgb(225,75,48)" rx="2" ry="2" />
<text  x="994.06" y="511.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.01%)</title><rect x="71.4" y="517" width="0.1" height="15.0" fill="rgb(243,163,53)" rx="2" ry="2" />
<text  x="74.35" y="527.5" ></text>
</g>
<g >
<title>Window_NumberInput::Update (1 samples, 0.01%)</title><rect x="59.5" y="677" width="0.1" height="15.0" fill="rgb(214,104,21)" rx="2" ry="2" />
<text  x="62.49" y="687.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="273.0" y="405" width="0.2" height="15.0" fill="rgb(206,162,21)" rx="2" ry="2" />
<text  x="276.05" y="415.5" ></text>
</g>
<g >
<title>pixman_image_get_height (4 samples, 0.05%)</title><rect x="834.9" y="341" width="0.5" height="15.0" fill="rgb(227,43,3)" rx="2" ry="2" />
<text  x="837.86" y="351.5" ></text>
</g>
<g >
<title>ctx_sched_out (1 samples, 0.01%)</title><rect x="26.3" y="517" width="0.1" height="15.0" fill="rgb(235,63,5)" rx="2" ry="2" />
<text  x="29.27" y="527.5" ></text>
</g>
<g >
<title>update_process_times (2 samples, 0.02%)</title><rect x="272.8" y="341" width="0.2" height="15.0" fill="rgb(214,56,54)" rx="2" ry="2" />
<text  x="275.77" y="351.5" ></text>
</g>
<g >
<title>Bitmap::find_format (1 samples, 0.01%)</title><rect x="43.8" y="677" width="0.1" height="15.0" fill="rgb(221,216,4)" rx="2" ry="2" />
<text  x="46.78" y="687.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1187.0" y="581" width="0.1" height="15.0" fill="rgb(243,195,43)" rx="2" ry="2" />
<text  x="1189.97" y="591.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (15 samples, 0.18%)</title><rect x="353.7" y="389" width="2.1" height="15.0" fill="rgb(245,185,50)" rx="2" ry="2" />
<text  x="356.70" y="399.5" ></text>
</g>
<g >
<title>__GI___poll (1 samples, 0.01%)</title><rect x="989.8" y="453" width="0.2" height="15.0" fill="rgb(235,118,24)" rx="2" ry="2" />
<text  x="992.82" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="63.2" y="677" width="0.2" height="15.0" fill="rgb(226,141,3)" rx="2" ry="2" />
<text  x="66.22" y="687.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (11 samples, 0.13%)</title><rect x="348.6" y="421" width="1.5" height="15.0" fill="rgb(234,98,14)" rx="2" ry="2" />
<text  x="351.60" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (4 samples, 0.05%)</title><rect x="605.2" y="277" width="0.5" height="15.0" fill="rgb(254,23,3)" rx="2" ry="2" />
<text  x="608.17" y="287.5" ></text>
</g>
<g >
<title>X11_Pending (9 samples, 0.11%)</title><rect x="989.8" y="501" width="1.3" height="15.0" fill="rgb(226,58,28)" rx="2" ry="2" />
<text  x="992.82" y="511.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (46 samples, 0.54%)</title><rect x="621.2" y="181" width="6.3" height="15.0" fill="rgb(219,93,5)" rx="2" ry="2" />
<text  x="624.16" y="191.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (5 samples, 0.06%)</title><rect x="874.8" y="421" width="0.7" height="15.0" fill="rgb(247,63,49)" rx="2" ry="2" />
<text  x="877.84" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (14 samples, 0.16%)</title><rect x="1187.4" y="693" width="1.9" height="15.0" fill="rgb(229,53,22)" rx="2" ry="2" />
<text  x="1190.38" y="703.5" ></text>
</g>
<g >
<title>Bitmap::width (1 samples, 0.01%)</title><rect x="835.4" y="357" width="0.1" height="15.0" fill="rgb(229,10,25)" rx="2" ry="2" />
<text  x="838.41" y="367.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="802.7" y="181" width="0.2" height="15.0" fill="rgb(236,187,34)" rx="2" ry="2" />
<text  x="805.73" y="191.5" ></text>
</g>
<g >
<title>psi_task_change (2 samples, 0.02%)</title><rect x="41.6" y="469" width="0.2" height="15.0" fill="rgb(215,16,22)" rx="2" ry="2" />
<text  x="44.57" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (60 samples, 0.70%)</title><rect x="627.9" y="229" width="8.3" height="15.0" fill="rgb(253,85,40)" rx="2" ry="2" />
<text  x="630.92" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (22 samples, 0.26%)</title><rect x="353.0" y="501" width="3.0" height="15.0" fill="rgb(227,77,12)" rx="2" ry="2" />
<text  x="356.01" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (6 samples, 0.07%)</title><rect x="881.2" y="437" width="0.8" height="15.0" fill="rgb(213,140,46)" rx="2" ry="2" />
<text  x="884.18" y="447.5" ></text>
</g>
<g >
<title>__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int&gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;Input::UiSource::Update()::&lt;lambda(int)&gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="352.0" y="469" width="0.2" height="15.0" fill="rgb(248,44,10)" rx="2" ry="2" />
<text  x="355.05" y="479.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (4 samples, 0.05%)</title><rect x="856.8" y="341" width="0.5" height="15.0" fill="rgb(253,122,35)" rx="2" ry="2" />
<text  x="859.78" y="351.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.01%)</title><rect x="61.3" y="677" width="0.1" height="15.0" fill="rgb(211,36,40)" rx="2" ry="2" />
<text  x="64.29" y="687.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.01%)</title><rect x="353.4" y="421" width="0.2" height="15.0" fill="rgb(252,3,37)" rx="2" ry="2" />
<text  x="356.43" y="431.5" ></text>
</g>
<g >
<title>__atomic_add (10 samples, 0.12%)</title><rect x="814.6" y="277" width="1.4" height="15.0" fill="rgb(210,170,54)" rx="2" ry="2" />
<text  x="817.59" y="287.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (11 samples, 0.13%)</title><rect x="814.5" y="309" width="1.5" height="15.0" fill="rgb(218,113,1)" rx="2" ry="2" />
<text  x="817.45" y="319.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="802.0" y="165" width="0.2" height="15.0" fill="rgb(227,64,28)" rx="2" ry="2" />
<text  x="805.04" y="175.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (17 samples, 0.20%)</title><rect x="802.9" y="181" width="2.3" height="15.0" fill="rgb(240,3,30)" rx="2" ry="2" />
<text  x="805.87" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (11 samples, 0.13%)</title><rect x="613.6" y="293" width="1.5" height="15.0" fill="rgb(250,99,27)" rx="2" ry="2" />
<text  x="616.58" y="303.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="799.1" y="53" width="0.2" height="15.0" fill="rgb(234,131,2)" rx="2" ry="2" />
<text  x="802.15" y="63.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (2 samples, 0.02%)</title><rect x="858.0" y="405" width="0.3" height="15.0" fill="rgb(230,18,0)" rx="2" ry="2" />
<text  x="861.02" y="415.5" ></text>
</g>
<g >
<title>add_wait_queue (1 samples, 0.01%)</title><rect x="25.3" y="597" width="0.1" height="15.0" fill="rgb(234,135,25)" rx="2" ry="2" />
<text  x="28.30" y="607.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (11 samples, 0.13%)</title><rect x="814.5" y="293" width="1.5" height="15.0" fill="rgb(250,32,26)" rx="2" ry="2" />
<text  x="817.45" y="303.5" ></text>
</g>
<g >
<title>[libGLX.so.0.0.0] (2 samples, 0.02%)</title><rect x="1174.1" y="485" width="0.3" height="15.0" fill="rgb(243,139,20)" rx="2" ry="2" />
<text  x="1177.15" y="495.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.01%)</title><rect x="617.4" y="261" width="0.2" height="15.0" fill="rgb(247,138,50)" rx="2" ry="2" />
<text  x="620.44" y="271.5" ></text>
</g>
</g>
</svg>
