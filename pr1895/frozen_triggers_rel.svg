<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="950.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="933" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="933" > </text>
<g id="frames">
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="614.2" y="549" width="0.2" height="15.0" fill="rgb(222,44,34)" rx="2" ry="2" />
<text  x="617.20" y="559.5" ></text>
</g>
<g >
<title>lock_hrtimer_base.isra.24 (1 samples, 0.01%)</title><rect x="375.2" y="613" width="0.1" height="15.0" fill="rgb(227,21,36)" rx="2" ry="2" />
<text  x="378.16" y="623.5" ></text>
</g>
<g >
<title>Bitmap::height (2 samples, 0.03%)</title><rect x="665.7" y="533" width="0.3" height="15.0" fill="rgb(212,157,23)" rx="2" ry="2" />
<text  x="668.70" y="543.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (12 samples, 0.17%)</title><rect x="965.7" y="613" width="1.9" height="15.0" fill="rgb(239,67,44)" rx="2" ry="2" />
<text  x="968.65" y="623.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="657.0" y="245" width="0.1" height="15.0" fill="rgb(229,38,12)" rx="2" ry="2" />
<text  x="659.95" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (4 samples, 0.06%)</title><rect x="630.4" y="469" width="0.6" height="15.0" fill="rgb(227,133,16)" rx="2" ry="2" />
<text  x="633.37" y="479.5" ></text>
</g>
<g >
<title>Game_Map::IsAnyEventStarting (11 samples, 0.15%)</title><rect x="777.0" y="661" width="1.8" height="15.0" fill="rgb(221,179,6)" rx="2" ry="2" />
<text  x="779.97" y="671.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="272.3" y="501" width="0.2" height="15.0" fill="rgb(209,23,31)" rx="2" ry="2" />
<text  x="275.31" y="511.5" ></text>
</g>
<g >
<title>find (134 samples, 1.87%)</title><rect x="631.4" y="517" width="22.1" height="15.0" fill="rgb(212,21,22)" rx="2" ry="2" />
<text  x="634.37" y="527.5" >f..</text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="404.9" y="629" width="0.1" height="15.0" fill="rgb(249,185,30)" rx="2" ry="2" />
<text  x="407.87" y="639.5" ></text>
</g>
<g >
<title>_mm_unpacklo_epi8 (26 samples, 0.36%)</title><rect x="893.5" y="581" width="4.3" height="15.0" fill="rgb(237,28,5)" rx="2" ry="2" />
<text  x="896.51" y="591.5" ></text>
</g>
<g >
<title>pixman_image_unref (1 samples, 0.01%)</title><rect x="352.4" y="661" width="0.1" height="15.0" fill="rgb(230,197,41)" rx="2" ry="2" />
<text  x="355.38" y="671.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="661.9" y="341" width="0.2" height="15.0" fill="rgb(238,105,5)" rx="2" ry="2" />
<text  x="664.91" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="987.9" y="581" width="0.2" height="15.0" fill="rgb(234,73,38)" rx="2" ry="2" />
<text  x="990.94" y="591.5" ></text>
</g>
<g >
<title>finish_task_switch (13 samples, 0.18%)</title><rect x="990.9" y="549" width="2.2" height="15.0" fill="rgb(253,140,14)" rx="2" ry="2" />
<text  x="993.91" y="559.5" ></text>
</g>
<g >
<title>ktime_get_raw_ts64 (11 samples, 0.15%)</title><rect x="399.6" y="629" width="1.8" height="15.0" fill="rgb(211,199,41)" rx="2" ry="2" />
<text  x="402.59" y="639.5" ></text>
</g>
<g >
<title>__exchange_and_add (5 samples, 0.07%)</title><rect x="967.6" y="565" width="0.9" height="15.0" fill="rgb(253,145,33)" rx="2" ry="2" />
<text  x="970.64" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (5 samples, 0.07%)</title><rect x="728.1" y="645" width="0.8" height="15.0" fill="rgb(219,180,52)" rx="2" ry="2" />
<text  x="731.10" y="655.5" ></text>
</g>
<g >
<title>Game_Map::Refresh (12 samples, 0.17%)</title><rect x="754.7" y="661" width="2.0" height="15.0" fill="rgb(214,195,27)" rx="2" ry="2" />
<text  x="757.68" y="671.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="538.8" y="597" width="0.1" height="15.0" fill="rgb(205,144,9)" rx="2" ry="2" />
<text  x="541.75" y="607.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="239.1" y="453" width="0.2" height="15.0" fill="rgb(218,83,9)" rx="2" ry="2" />
<text  x="242.13" y="463.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (39 samples, 0.55%)</title><rect x="1165.6" y="565" width="6.4" height="15.0" fill="rgb(227,222,32)" rx="2" ry="2" />
<text  x="1168.57" y="575.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.01%)</title><rect x="768.4" y="581" width="0.1" height="15.0" fill="rgb(227,184,52)" rx="2" ry="2" />
<text  x="771.38" y="591.5" ></text>
</g>
<g >
<title>handle_edge_irq (2 samples, 0.03%)</title><rect x="703.8" y="517" width="0.4" height="15.0" fill="rgb(234,198,1)" rx="2" ry="2" />
<text  x="706.84" y="527.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (5 samples, 0.07%)</title><rect x="570.6" y="565" width="0.8" height="15.0" fill="rgb(229,178,11)" rx="2" ry="2" />
<text  x="573.62" y="575.5" ></text>
</g>
<g >
<title>pick_next_task_idle (2 samples, 0.03%)</title><rect x="45.8" y="725" width="0.4" height="15.0" fill="rgb(234,42,12)" rx="2" ry="2" />
<text  x="48.82" y="735.5" ></text>
</g>
<g >
<title>xhci_irq (2 samples, 0.03%)</title><rect x="467.9" y="501" width="0.4" height="15.0" fill="rgb(208,91,33)" rx="2" ry="2" />
<text  x="470.94" y="511.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (10 samples, 0.14%)</title><rect x="650.3" y="437" width="1.7" height="15.0" fill="rgb(214,87,33)" rx="2" ry="2" />
<text  x="653.35" y="447.5" ></text>
</g>
<g >
<title>usb_hcd_submit_urb (2 samples, 0.03%)</title><rect x="1162.4" y="373" width="0.4" height="15.0" fill="rgb(216,118,33)" rx="2" ry="2" />
<text  x="1165.43" y="383.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="775.5" y="533" width="0.1" height="15.0" fill="rgb(207,99,51)" rx="2" ry="2" />
<text  x="778.48" y="543.5" ></text>
</g>
<g >
<title>pixman_image_composite32@plt (1 samples, 0.01%)</title><rect x="897.8" y="661" width="0.2" height="15.0" fill="rgb(235,170,1)" rx="2" ry="2" />
<text  x="900.81" y="671.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, Drawable**, Drawable**&gt; (1 samples, 0.01%)</title><rect x="373.2" y="581" width="0.1" height="15.0" fill="rgb(243,74,10)" rx="2" ry="2" />
<text  x="376.18" y="591.5" ></text>
</g>
<g >
<title>_mm_mulhi_epu16 (18 samples, 0.25%)</title><rect x="276.8" y="565" width="2.9" height="15.0" fill="rgb(243,217,2)" rx="2" ry="2" />
<text  x="279.77" y="575.5" ></text>
</g>
<g >
<title>select_idle_sibling (1 samples, 0.01%)</title><rect x="49.5" y="661" width="0.1" height="15.0" fill="rgb(217,139,21)" rx="2" ry="2" />
<text  x="52.45" y="671.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="689.8" y="309" width="0.2" height="15.0" fill="rgb(229,24,21)" rx="2" ry="2" />
<text  x="692.80" y="319.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="968.6" y="581" width="0.2" height="15.0" fill="rgb(222,119,5)" rx="2" ry="2" />
<text  x="971.63" y="591.5" ></text>
</g>
<g >
<title>GL_RenderClear (8 samples, 0.11%)</title><rect x="996.2" y="725" width="1.3" height="15.0" fill="rgb(218,42,45)" rx="2" ry="2" />
<text  x="999.19" y="735.5" ></text>
</g>
<g >
<title>xhci_irq (10 samples, 0.14%)</title><rect x="1161.1" y="517" width="1.7" height="15.0" fill="rgb(249,55,39)" rx="2" ry="2" />
<text  x="1164.11" y="527.5" ></text>
</g>
<g >
<title>Sprite::SetY (1 samples, 0.01%)</title><rect x="970.3" y="677" width="0.1" height="15.0" fill="rgb(229,22,34)" rx="2" ry="2" />
<text  x="973.28" y="687.5" ></text>
</g>
<g >
<title>__vfs_write (1 samples, 0.01%)</title><rect x="587.3" y="261" width="0.2" height="15.0" fill="rgb(225,194,36)" rx="2" ry="2" />
<text  x="590.29" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (20 samples, 0.28%)</title><rect x="989.9" y="629" width="3.3" height="15.0" fill="rgb(210,116,53)" rx="2" ry="2" />
<text  x="992.92" y="639.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="561.9" y="549" width="0.1" height="15.0" fill="rgb(221,82,45)" rx="2" ry="2" />
<text  x="564.87" y="559.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (23 samples, 0.32%)</title><rect x="964.7" y="661" width="3.8" height="15.0" fill="rgb(223,112,52)" rx="2" ry="2" />
<text  x="967.66" y="671.5" ></text>
</g>
<g >
<title>Sprite::SetOy (3 samples, 0.04%)</title><rect x="72.7" y="853" width="0.5" height="15.0" fill="rgb(213,222,24)" rx="2" ry="2" />
<text  x="75.73" y="863.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="677.4" y="293" width="0.2" height="15.0" fill="rgb(214,139,43)" rx="2" ry="2" />
<text  x="680.42" y="303.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (6 samples, 0.08%)</title><rect x="652.3" y="405" width="1.0" height="15.0" fill="rgb(219,53,39)" rx="2" ry="2" />
<text  x="655.33" y="415.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (13 samples, 0.18%)</title><rect x="83.3" y="773" width="2.1" height="15.0" fill="rgb(242,14,13)" rx="2" ry="2" />
<text  x="86.30" y="783.5" ></text>
</g>
<g >
<title>Game_Map::IsValid (1 samples, 0.01%)</title><rect x="986.0" y="661" width="0.1" height="15.0" fill="rgb(241,77,30)" rx="2" ry="2" />
<text  x="988.96" y="671.5" ></text>
</g>
<g >
<title>pix_multiply_2x128 (51 samples, 0.71%)</title><rect x="281.1" y="597" width="8.4" height="15.0" fill="rgb(211,89,43)" rx="2" ry="2" />
<text  x="284.06" y="607.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="171.8" y="437" width="0.1" height="15.0" fill="rgb(211,188,33)" rx="2" ry="2" />
<text  x="174.78" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="987.9" y="565" width="0.2" height="15.0" fill="rgb(215,189,34)" rx="2" ry="2" />
<text  x="990.94" y="575.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="725.8" y="485" width="0.2" height="15.0" fill="rgb(241,136,10)" rx="2" ry="2" />
<text  x="728.79" y="495.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="319.4" y="373" width="0.1" height="15.0" fill="rgb(230,10,24)" rx="2" ry="2" />
<text  x="322.36" y="383.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="753.2" y="517" width="0.2" height="15.0" fill="rgb(218,81,5)" rx="2" ry="2" />
<text  x="756.20" y="527.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="883.4" y="517" width="0.2" height="15.0" fill="rgb(210,163,46)" rx="2" ry="2" />
<text  x="886.44" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="988.1" y="613" width="0.3" height="15.0" fill="rgb(243,67,54)" rx="2" ry="2" />
<text  x="991.11" y="623.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="956.4" y="597" width="0.2" height="15.0" fill="rgb(220,128,48)" rx="2" ry="2" />
<text  x="959.41" y="607.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (2 samples, 0.03%)</title><rect x="892.0" y="581" width="0.4" height="15.0" fill="rgb(254,113,15)" rx="2" ry="2" />
<text  x="895.03" y="591.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="319.5" y="565" width="0.2" height="15.0" fill="rgb(210,51,39)" rx="2" ry="2" />
<text  x="322.53" y="575.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (13 samples, 0.18%)</title><rect x="726.8" y="661" width="2.1" height="15.0" fill="rgb(226,171,23)" rx="2" ry="2" />
<text  x="729.78" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (17 samples, 0.24%)</title><rect x="596.7" y="533" width="2.8" height="15.0" fill="rgb(240,53,7)" rx="2" ry="2" />
<text  x="599.70" y="543.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="539.4" y="437" width="0.2" height="15.0" fill="rgb(211,27,19)" rx="2" ry="2" />
<text  x="542.42" y="447.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.01%)</title><rect x="32.3" y="677" width="0.2" height="15.0" fill="rgb(233,49,13)" rx="2" ry="2" />
<text  x="35.29" y="687.5" ></text>
</g>
<g >
<title>_mm_mulhi_epu16 (1 samples, 0.01%)</title><rect x="828.1" y="549" width="0.2" height="15.0" fill="rgb(206,113,13)" rx="2" ry="2" />
<text  x="831.14" y="559.5" ></text>
</g>
<g >
<title>xhci_get_frame (1 samples, 0.01%)</title><rect x="539.4" y="309" width="0.2" height="15.0" fill="rgb(252,167,43)" rx="2" ry="2" />
<text  x="542.42" y="319.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.01%)</title><rect x="708.5" y="565" width="0.1" height="15.0" fill="rgb(215,156,42)" rx="2" ry="2" />
<text  x="711.46" y="575.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="1184.4" y="693" width="0.2" height="15.0" fill="rgb(218,187,26)" rx="2" ry="2" />
<text  x="1187.39" y="703.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="452.1" y="565" width="0.2" height="15.0" fill="rgb(243,86,45)" rx="2" ry="2" />
<text  x="455.09" y="575.5" ></text>
</g>
<g >
<title>__GI___nanosleep (21 samples, 0.29%)</title><rect x="989.9" y="677" width="3.5" height="15.0" fill="rgb(242,8,45)" rx="2" ry="2" />
<text  x="992.92" y="687.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (4 samples, 0.06%)</title><rect x="996.9" y="661" width="0.6" height="15.0" fill="rgb(209,52,35)" rx="2" ry="2" />
<text  x="999.86" y="671.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="598.3" y="501" width="0.5" height="15.0" fill="rgb(205,119,14)" rx="2" ry="2" />
<text  x="601.35" y="511.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.01%)</title><rect x="587.3" y="117" width="0.2" height="15.0" fill="rgb(205,122,0)" rx="2" ry="2" />
<text  x="590.29" y="127.5" ></text>
</g>
<g >
<title>_mm_adds_epu8 (2 samples, 0.03%)</title><rect x="222.0" y="565" width="0.3" height="15.0" fill="rgb(210,176,12)" rx="2" ry="2" />
<text  x="224.96" y="575.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="677.4" y="341" width="0.2" height="15.0" fill="rgb(235,60,44)" rx="2" ry="2" />
<text  x="680.42" y="351.5" ></text>
</g>
<g >
<title>put_timespec64 (1 samples, 0.01%)</title><rect x="994.4" y="581" width="0.1" height="15.0" fill="rgb(211,104,20)" rx="2" ry="2" />
<text  x="997.38" y="591.5" ></text>
</g>
<g >
<title>xhci_get_frame (1 samples, 0.01%)</title><rect x="661.9" y="69" width="0.2" height="15.0" fill="rgb(237,138,36)" rx="2" ry="2" />
<text  x="664.91" y="79.5" ></text>
</g>
<g >
<title>_pixman_image_get_solid (1 samples, 0.01%)</title><rect x="331.7" y="597" width="0.2" height="15.0" fill="rgb(247,34,15)" rx="2" ry="2" />
<text  x="334.74" y="607.5" ></text>
</g>
<g >
<title>xhci_msi_irq (2 samples, 0.03%)</title><rect x="255.8" y="453" width="0.3" height="15.0" fill="rgb(225,126,5)" rx="2" ry="2" />
<text  x="258.81" y="463.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.01%)</title><rect x="404.9" y="453" width="0.1" height="15.0" fill="rgb(249,47,39)" rx="2" ry="2" />
<text  x="407.87" y="463.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="359.1" y="629" width="0.2" height="15.0" fill="rgb(227,109,29)" rx="2" ry="2" />
<text  x="362.15" y="639.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="881.5" y="565" width="0.1" height="15.0" fill="rgb(249,130,4)" rx="2" ry="2" />
<text  x="884.46" y="575.5" ></text>
</g>
<g >
<title>remove_wait_queue (2 samples, 0.03%)</title><rect x="30.8" y="789" width="0.3" height="15.0" fill="rgb(210,98,18)" rx="2" ry="2" />
<text  x="33.80" y="799.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="775.5" y="517" width="0.1" height="15.0" fill="rgb(230,193,15)" rx="2" ry="2" />
<text  x="778.48" y="527.5" ></text>
</g>
<g >
<title>operator== (1 samples, 0.01%)</title><rect x="358.3" y="677" width="0.2" height="15.0" fill="rgb(222,13,2)" rx="2" ry="2" />
<text  x="361.32" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (17 samples, 0.24%)</title><rect x="655.1" y="421" width="2.8" height="15.0" fill="rgb(207,113,38)" rx="2" ry="2" />
<text  x="658.14" y="431.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (1 samples, 0.01%)</title><rect x="997.4" y="645" width="0.1" height="15.0" fill="rgb(217,204,10)" rx="2" ry="2" />
<text  x="1000.35" y="655.5" ></text>
</g>
<g >
<title>interrupt_entry (1 samples, 0.01%)</title><rect x="66.1" y="837" width="0.2" height="15.0" fill="rgb(219,7,1)" rx="2" ry="2" />
<text  x="69.13" y="847.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (2,175 samples, 30.43%)</title><rect x="413.6" y="677" width="359.1" height="15.0" fill="rgb(242,44,2)" rx="2" ry="2" />
<text  x="416.62" y="687.5" >Game_Interpreter::Update</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (4 samples, 0.06%)</title><rect x="628.2" y="373" width="0.7" height="15.0" fill="rgb(246,98,41)" rx="2" ry="2" />
<text  x="631.23" y="383.5" ></text>
</g>
<g >
<title>delayed_work_timer_fn (1 samples, 0.01%)</title><rect x="881.5" y="469" width="0.1" height="15.0" fill="rgb(246,30,39)" rx="2" ry="2" />
<text  x="884.46" y="479.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="344.9" y="437" width="0.2" height="15.0" fill="rgb(217,134,39)" rx="2" ry="2" />
<text  x="347.95" y="447.5" ></text>
</g>
<g >
<title>pixman_transform_init_scale@plt (1 samples, 0.01%)</title><rect x="304.5" y="613" width="0.2" height="15.0" fill="rgb(254,91,20)" rx="2" ry="2" />
<text  x="307.50" y="623.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="122.1" y="821" width="0.2" height="15.0" fill="rgb(224,64,2)" rx="2" ry="2" />
<text  x="125.09" y="831.5" ></text>
</g>
<g >
<title>Game_System::OnSeReady (1 samples, 0.01%)</title><rect x="587.3" y="597" width="0.2" height="15.0" fill="rgb(242,174,12)" rx="2" ry="2" />
<text  x="590.29" y="607.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="32.3" y="661" width="0.2" height="15.0" fill="rgb(244,154,54)" rx="2" ry="2" />
<text  x="35.29" y="671.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.01%)</title><rect x="329.8" y="565" width="0.1" height="15.0" fill="rgb(218,49,40)" rx="2" ry="2" />
<text  x="332.76" y="575.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (7 samples, 0.10%)</title><rect x="849.9" y="421" width="1.2" height="15.0" fill="rgb(235,199,22)" rx="2" ry="2" />
<text  x="852.93" y="431.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.01%)</title><rect x="955.4" y="245" width="0.2" height="15.0" fill="rgb(240,110,8)" rx="2" ry="2" />
<text  x="958.42" y="255.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (1 samples, 0.01%)</title><rect x="52.3" y="821" width="0.1" height="15.0" fill="rgb(249,15,32)" rx="2" ry="2" />
<text  x="55.26" y="831.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (2 samples, 0.03%)</title><rect x="47.5" y="725" width="0.3" height="15.0" fill="rgb(217,144,41)" rx="2" ry="2" />
<text  x="50.47" y="735.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="1171.7" y="501" width="0.1" height="15.0" fill="rgb(252,227,9)" rx="2" ry="2" />
<text  x="1174.68" y="511.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.01%)</title><rect x="987.9" y="517" width="0.2" height="15.0" fill="rgb(209,174,29)" rx="2" ry="2" />
<text  x="990.94" y="527.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.01%)</title><rect x="329.8" y="549" width="0.1" height="15.0" fill="rgb(214,7,41)" rx="2" ry="2" />
<text  x="332.76" y="559.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (1 samples, 0.01%)</title><rect x="987.1" y="565" width="0.2" height="15.0" fill="rgb(236,222,51)" rx="2" ry="2" />
<text  x="990.12" y="575.5" ></text>
</g>
<g >
<title>rw_verify_area (2 samples, 0.03%)</title><rect x="48.1" y="789" width="0.4" height="15.0" fill="rgb(228,130,31)" rx="2" ry="2" />
<text  x="51.13" y="799.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.01%)</title><rect x="26.2" y="853" width="0.1" height="15.0" fill="rgb(246,89,3)" rx="2" ry="2" />
<text  x="29.18" y="863.5" ></text>
</g>
<g >
<title>std::min&lt;int&gt; (16 samples, 0.22%)</title><rect x="562.0" y="629" width="2.7" height="15.0" fill="rgb(250,173,6)" rx="2" ry="2" />
<text  x="565.03" y="639.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.01%)</title><rect x="587.3" y="53" width="0.2" height="15.0" fill="rgb(236,110,53)" rx="2" ry="2" />
<text  x="590.29" y="63.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (2 samples, 0.03%)</title><rect x="255.8" y="469" width="0.3" height="15.0" fill="rgb(252,54,34)" rx="2" ry="2" />
<text  x="258.81" y="479.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.01%)</title><rect x="582.2" y="549" width="0.1" height="15.0" fill="rgb(246,73,47)" rx="2" ry="2" />
<text  x="585.17" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_ppoll (112 samples, 1.57%)</title><rect x="28.7" y="837" width="18.4" height="15.0" fill="rgb(207,62,13)" rx="2" ry="2" />
<text  x="31.65" y="847.5" ></text>
</g>
<g >
<title>operator== (1 samples, 0.01%)</title><rect x="358.2" y="661" width="0.1" height="15.0" fill="rgb(205,84,18)" rx="2" ry="2" />
<text  x="361.16" y="671.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="348.9" y="405" width="0.2" height="15.0" fill="rgb(205,63,41)" rx="2" ry="2" />
<text  x="351.91" y="415.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="940.7" y="373" width="0.2" height="15.0" fill="rgb(207,120,36)" rx="2" ry="2" />
<text  x="943.73" y="383.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.01%)</title><rect x="690.1" y="405" width="0.2" height="15.0" fill="rgb(224,153,1)" rx="2" ry="2" />
<text  x="693.13" y="415.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (23 samples, 0.32%)</title><rect x="964.7" y="645" width="3.8" height="15.0" fill="rgb(253,54,46)" rx="2" ry="2" />
<text  x="967.66" y="655.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="758.1" y="661" width="0.4" height="15.0" fill="rgb(209,78,20)" rx="2" ry="2" />
<text  x="761.15" y="671.5" ></text>
</g>
<g >
<title>_mm_adds_epu8 (12 samples, 0.17%)</title><rect x="272.5" y="581" width="2.0" height="15.0" fill="rgb(228,207,52)" rx="2" ry="2" />
<text  x="275.48" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (8 samples, 0.11%)</title><rect x="704.3" y="565" width="1.4" height="15.0" fill="rgb(231,131,10)" rx="2" ry="2" />
<text  x="707.33" y="575.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="673.3" y="405" width="0.2" height="15.0" fill="rgb(219,78,42)" rx="2" ry="2" />
<text  x="676.30" y="415.5" ></text>
</g>
<g >
<title>__atomic_add (11 samples, 0.15%)</title><rect x="965.8" y="581" width="1.8" height="15.0" fill="rgb(210,201,29)" rx="2" ry="2" />
<text  x="968.82" y="591.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (2 samples, 0.03%)</title><rect x="925.5" y="325" width="0.4" height="15.0" fill="rgb(238,181,37)" rx="2" ry="2" />
<text  x="928.54" y="335.5" ></text>
</g>
<g >
<title>_pixman_implementation_lookup_composite (6 samples, 0.08%)</title><rect x="170.1" y="629" width="1.0" height="15.0" fill="rgb(228,118,24)" rx="2" ry="2" />
<text  x="173.13" y="639.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="51.1" y="837" width="0.2" height="15.0" fill="rgb(226,100,3)" rx="2" ry="2" />
<text  x="54.11" y="847.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (621 samples, 8.69%)</title><rect x="594.6" y="629" width="102.5" height="15.0" fill="rgb(249,103,0)" rx="2" ry="2" />
<text  x="597.55" y="639.5" >Game_Picture..</text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="467.9" y="613" width="0.4" height="15.0" fill="rgb(214,76,51)" rx="2" ry="2" />
<text  x="470.94" y="623.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="276.6" y="469" width="0.2" height="15.0" fill="rgb(228,101,0)" rx="2" ry="2" />
<text  x="279.61" y="479.5" ></text>
</g>
<g >
<title>Graphics::Draw (1,274 samples, 17.82%)</title><rect x="163.2" y="741" width="210.3" height="15.0" fill="rgb(241,125,36)" rx="2" ry="2" />
<text  x="166.20" y="751.5" >Graphics::Draw</text>
</g>
<g >
<title>Scene::OnFinishAsync (3 samples, 0.04%)</title><rect x="1185.2" y="757" width="0.5" height="15.0" fill="rgb(226,68,42)" rx="2" ry="2" />
<text  x="1188.21" y="767.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="404.9" y="469" width="0.1" height="15.0" fill="rgb(212,115,46)" rx="2" ry="2" />
<text  x="407.87" y="479.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="887.4" y="469" width="0.2" height="15.0" fill="rgb(220,18,9)" rx="2" ry="2" />
<text  x="890.41" y="479.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="849.3" y="485" width="0.1" height="15.0" fill="rgb(252,214,17)" rx="2" ry="2" />
<text  x="852.27" y="495.5" ></text>
</g>
<g >
<title>core_combine_over_u_pixel_sse2 (5 samples, 0.07%)</title><rect x="326.8" y="565" width="0.8" height="15.0" fill="rgb(253,70,30)" rx="2" ry="2" />
<text  x="329.79" y="575.5" ></text>
</g>
<g >
<title>do_IRQ (5 samples, 0.07%)</title><rect x="570.6" y="629" width="0.8" height="15.0" fill="rgb(225,56,23)" rx="2" ry="2" />
<text  x="573.62" y="639.5" ></text>
</g>
<g >
<title>_pixman_image_fini (6 samples, 0.08%)</title><rect x="61.8" y="853" width="1.0" height="15.0" fill="rgb(234,13,40)" rx="2" ry="2" />
<text  x="64.84" y="863.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.01%)</title><rect x="352.2" y="645" width="0.2" height="15.0" fill="rgb(224,18,7)" rx="2" ry="2" />
<text  x="355.21" y="655.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="887.4" y="501" width="0.2" height="15.0" fill="rgb(253,194,50)" rx="2" ry="2" />
<text  x="890.41" y="511.5" ></text>
</g>
<g >
<title>load_128_unaligned (1 samples, 0.01%)</title><rect x="364.1" y="597" width="0.2" height="15.0" fill="rgb(207,213,2)" rx="2" ry="2" />
<text  x="367.10" y="607.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="661.9" y="293" width="0.2" height="15.0" fill="rgb(207,14,11)" rx="2" ry="2" />
<text  x="664.91" y="303.5" ></text>
</g>
<g >
<title>__atomic_add (8 samples, 0.11%)</title><rect x="359.5" y="597" width="1.3" height="15.0" fill="rgb(246,94,7)" rx="2" ry="2" />
<text  x="362.48" y="607.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="725.6" y="629" width="0.4" height="15.0" fill="rgb(216,98,12)" rx="2" ry="2" />
<text  x="728.63" y="639.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="584.0" y="645" width="0.2" height="15.0" fill="rgb(232,118,7)" rx="2" ry="2" />
<text  x="586.99" y="655.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="561.9" y="629" width="0.1" height="15.0" fill="rgb(224,205,1)" rx="2" ry="2" />
<text  x="564.87" y="639.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="472.7" y="533" width="0.2" height="15.0" fill="rgb(208,48,10)" rx="2" ry="2" />
<text  x="475.72" y="543.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="319.5" y="453" width="0.2" height="15.0" fill="rgb(207,85,46)" rx="2" ry="2" />
<text  x="322.53" y="463.5" ></text>
</g>
<g >
<title>_mm_adds_epu16 (1 samples, 0.01%)</title><rect x="343.5" y="549" width="0.1" height="15.0" fill="rgb(245,167,18)" rx="2" ry="2" />
<text  x="346.46" y="559.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (15 samples, 0.21%)</title><rect x="375.2" y="661" width="2.4" height="15.0" fill="rgb(209,138,29)" rx="2" ry="2" />
<text  x="378.16" y="671.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="940.7" y="421" width="0.2" height="15.0" fill="rgb(244,40,18)" rx="2" ry="2" />
<text  x="943.73" y="431.5" ></text>
</g>
<g >
<title>Rect::Rect (1 samples, 0.01%)</title><rect x="72.1" y="853" width="0.1" height="15.0" fill="rgb(210,221,23)" rx="2" ry="2" />
<text  x="75.07" y="863.5" ></text>
</g>
<g >
<title>default_wake_function (1 samples, 0.01%)</title><rect x="377.3" y="421" width="0.2" height="15.0" fill="rgb(207,20,50)" rx="2" ry="2" />
<text  x="380.31" y="431.5" ></text>
</g>
<g >
<title>_mm_shufflehi_epi16 (11 samples, 0.15%)</title><rect x="229.9" y="597" width="1.8" height="15.0" fill="rgb(252,129,53)" rx="2" ry="2" />
<text  x="232.89" y="607.5" ></text>
</g>
<g >
<title>prepare_outbound_urb (1 samples, 0.01%)</title><rect x="121.8" y="597" width="0.1" height="15.0" fill="rgb(211,73,27)" rx="2" ry="2" />
<text  x="124.76" y="607.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="758.1" y="645" width="0.4" height="15.0" fill="rgb(253,222,20)" rx="2" ry="2" />
<text  x="761.15" y="655.5" ></text>
</g>
<g >
<title>ctx_sched_out (2 samples, 0.03%)</title><rect x="31.5" y="693" width="0.3" height="15.0" fill="rgb(251,169,32)" rx="2" ry="2" />
<text  x="34.46" y="703.5" ></text>
</g>
<g >
<title>process_timeout (1 samples, 0.01%)</title><rect x="297.4" y="501" width="0.2" height="15.0" fill="rgb(214,97,14)" rx="2" ry="2" />
<text  x="300.41" y="511.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.01%)</title><rect x="582.2" y="501" width="0.1" height="15.0" fill="rgb(212,104,23)" rx="2" ry="2" />
<text  x="585.17" y="511.5" ></text>
</g>
<g >
<title>Sprite::GetZ (1 samples, 0.01%)</title><rect x="368.9" y="597" width="0.2" height="15.0" fill="rgb(225,145,1)" rx="2" ry="2" />
<text  x="371.89" y="607.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.01%)</title><rect x="349.6" y="581" width="0.1" height="15.0" fill="rgb(223,120,43)" rx="2" ry="2" />
<text  x="352.57" y="591.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (2 samples, 0.03%)</title><rect x="780.8" y="661" width="0.3" height="15.0" fill="rgb(244,110,21)" rx="2" ry="2" />
<text  x="783.76" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (14 samples, 0.20%)</title><rect x="659.8" y="501" width="2.3" height="15.0" fill="rgb(213,71,9)" rx="2" ry="2" />
<text  x="662.76" y="511.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.08%)</title><rect x="710.8" y="597" width="1.0" height="15.0" fill="rgb(208,93,23)" rx="2" ry="2" />
<text  x="713.77" y="607.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (2 samples, 0.03%)</title><rect x="202.5" y="469" width="0.3" height="15.0" fill="rgb(207,135,48)" rx="2" ry="2" />
<text  x="205.48" y="479.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.01%)</title><rect x="377.3" y="357" width="0.2" height="15.0" fill="rgb(205,65,49)" rx="2" ry="2" />
<text  x="380.31" y="367.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (3 samples, 0.04%)</title><rect x="888.6" y="517" width="0.5" height="15.0" fill="rgb(224,166,45)" rx="2" ry="2" />
<text  x="891.56" y="527.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="472.7" y="549" width="0.2" height="15.0" fill="rgb(247,27,12)" rx="2" ry="2" />
<text  x="475.72" y="559.5" ></text>
</g>
<g >
<title>_int_free (23 samples, 0.32%)</title><rect x="670.2" y="437" width="3.8" height="15.0" fill="rgb(244,105,33)" rx="2" ry="2" />
<text  x="673.16" y="447.5" ></text>
</g>
<g >
<title>memcmp@plt (2 samples, 0.03%)</title><rect x="628.6" y="357" width="0.3" height="15.0" fill="rgb(210,115,33)" rx="2" ry="2" />
<text  x="631.56" y="367.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="539.4" y="453" width="0.2" height="15.0" fill="rgb(213,119,19)" rx="2" ry="2" />
<text  x="542.42" y="463.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="572.9" y="565" width="0.2" height="15.0" fill="rgb(217,221,41)" rx="2" ry="2" />
<text  x="575.93" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (78 samples, 1.09%)</title><rect x="943.2" y="549" width="12.9" height="15.0" fill="rgb(225,133,36)" rx="2" ry="2" />
<text  x="946.20" y="559.5" ></text>
</g>
<g >
<title>Game_Character::GetScreenX (2 samples, 0.03%)</title><rect x="68.4" y="853" width="0.4" height="15.0" fill="rgb(236,35,48)" rx="2" ry="2" />
<text  x="71.44" y="863.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="282.9" y="485" width="0.1" height="15.0" fill="rgb(248,165,14)" rx="2" ry="2" />
<text  x="285.88" y="495.5" ></text>
</g>
<g >
<title>_mm_adds_epu8 (1 samples, 0.01%)</title><rect x="233.0" y="581" width="0.2" height="15.0" fill="rgb(246,218,4)" rx="2" ry="2" />
<text  x="236.02" y="591.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.01%)</title><rect x="968.6" y="533" width="0.2" height="15.0" fill="rgb(247,56,21)" rx="2" ry="2" />
<text  x="971.63" y="543.5" ></text>
</g>
<g >
<title>_pixman_bits_image_init (208 samples, 2.91%)</title><rect x="900.6" y="485" width="34.3" height="15.0" fill="rgb(243,85,25)" rx="2" ry="2" />
<text  x="903.61" y="495.5" >_p..</text>
</g>
<g >
<title>_XEventsQueued (4 samples, 0.06%)</title><rect x="989.3" y="645" width="0.6" height="15.0" fill="rgb(219,207,13)" rx="2" ry="2" />
<text  x="992.26" y="655.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.01%)</title><rect x="689.8" y="117" width="0.2" height="15.0" fill="rgb(222,82,38)" rx="2" ry="2" />
<text  x="692.80" y="127.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="452.1" y="613" width="0.2" height="15.0" fill="rgb(243,139,36)" rx="2" ry="2" />
<text  x="455.09" y="623.5" ></text>
</g>
<g >
<title>Sdl2Ui::UpdateDisplay (1,065 samples, 14.90%)</title><rect x="996.2" y="741" width="175.8" height="15.0" fill="rgb(209,81,4)" rx="2" ry="2" />
<text  x="999.19" y="751.5" >Sdl2Ui::UpdateDisplay</text>
</g>
<g >
<title>usb_hcd_submit_urb (1 samples, 0.01%)</title><rect x="276.6" y="277" width="0.2" height="15.0" fill="rgb(213,196,2)" rx="2" ry="2" />
<text  x="279.61" y="287.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::swap (1 samples, 0.01%)</title><rect x="696.9" y="581" width="0.2" height="15.0" fill="rgb(217,21,48)" rx="2" ry="2" />
<text  x="699.90" y="591.5" ></text>
</g>
<g >
<title>[[heap]] (91 samples, 1.27%)</title><rect x="52.4" y="869" width="15.0" height="15.0" fill="rgb(214,10,29)" rx="2" ry="2" />
<text  x="55.43" y="879.5" ></text>
</g>
<g >
<title>_pixman_image_init (13 samples, 0.18%)</title><rect x="902.1" y="469" width="2.1" height="15.0" fill="rgb(221,72,54)" rx="2" ry="2" />
<text  x="905.10" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (266 samples, 3.72%)</title><rect x="899.3" y="549" width="43.9" height="15.0" fill="rgb(217,165,9)" rx="2" ry="2" />
<text  x="902.29" y="559.5" >__gn..</text>
</g>
<g >
<title>Game_Interpreter::CommandConditionalBranch (204 samples, 2.85%)</title><rect x="439.4" y="661" width="33.7" height="15.0" fill="rgb(233,108,14)" rx="2" ry="2" />
<text  x="442.38" y="671.5" >Ga..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="590.9" y="613" width="0.2" height="15.0" fill="rgb(244,0,9)" rx="2" ry="2" />
<text  x="593.92" y="623.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (24 samples, 0.34%)</title><rect x="645.9" y="373" width="4.0" height="15.0" fill="rgb(254,77,25)" rx="2" ry="2" />
<text  x="648.89" y="383.5" ></text>
</g>
<g >
<title>_mm_cmpeq_epi8 (33 samples, 0.46%)</title><rect x="829.8" y="581" width="5.4" height="15.0" fill="rgb(232,99,1)" rx="2" ry="2" />
<text  x="832.79" y="591.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="835.1" y="533" width="0.1" height="15.0" fill="rgb(224,182,32)" rx="2" ry="2" />
<text  x="838.08" y="543.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="1188.8" y="757" width="0.4" height="15.0" fill="rgb(237,214,38)" rx="2" ry="2" />
<text  x="1191.84" y="767.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate (78 samples, 1.09%)</title><rect x="943.2" y="565" width="12.9" height="15.0" fill="rgb(221,151,3)" rx="2" ry="2" />
<text  x="946.20" y="575.5" ></text>
</g>
<g >
<title>Bitmap::GetRect (7 samples, 0.10%)</title><rect x="963.3" y="661" width="1.2" height="15.0" fill="rgb(229,105,30)" rx="2" ry="2" />
<text  x="966.34" y="671.5" ></text>
</g>
<g >
<title>xhci_get_frame (1 samples, 0.01%)</title><rect x="375.0" y="357" width="0.2" height="15.0" fill="rgb(245,199,41)" rx="2" ry="2" />
<text  x="377.99" y="367.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (46 samples, 0.64%)</title><rect x="1164.4" y="581" width="7.6" height="15.0" fill="rgb(229,183,41)" rx="2" ry="2" />
<text  x="1167.41" y="591.5" ></text>
</g>
<g >
<title>Rect::Adjust (1 samples, 0.01%)</title><rect x="357.2" y="677" width="0.1" height="15.0" fill="rgb(227,149,17)" rx="2" ry="2" />
<text  x="360.17" y="687.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="756.5" y="581" width="0.2" height="15.0" fill="rgb(233,217,12)" rx="2" ry="2" />
<text  x="759.50" y="591.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="452.1" y="629" width="0.2" height="15.0" fill="rgb(219,170,25)" rx="2" ry="2" />
<text  x="455.09" y="639.5" ></text>
</g>
<g >
<title>_raw_read_lock (1 samples, 0.01%)</title><rect x="1171.7" y="229" width="0.1" height="15.0" fill="rgb(244,188,32)" rx="2" ry="2" />
<text  x="1174.68" y="239.5" ></text>
</g>
<g >
<title>_mm_adds_epu8 (3 samples, 0.04%)</title><rect x="342.6" y="549" width="0.5" height="15.0" fill="rgb(214,199,13)" rx="2" ry="2" />
<text  x="345.64" y="559.5" ></text>
</g>
<g >
<title>pixman_region32_init (1 samples, 0.01%)</title><rect x="904.1" y="453" width="0.1" height="15.0" fill="rgb(250,181,14)" rx="2" ry="2" />
<text  x="907.08" y="463.5" ></text>
</g>
<g >
<title>SDL_PeepEvents_REAL (1 samples, 0.01%)</title><rect x="123.9" y="853" width="0.2" height="15.0" fill="rgb(241,152,1)" rx="2" ry="2" />
<text  x="126.91" y="863.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="968.6" y="597" width="0.2" height="15.0" fill="rgb(251,5,31)" rx="2" ry="2" />
<text  x="971.63" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (2 samples, 0.03%)</title><rect x="621.8" y="453" width="0.3" height="15.0" fill="rgb(218,21,42)" rx="2" ry="2" />
<text  x="624.79" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (35 samples, 0.49%)</title><rect x="379.6" y="693" width="5.8" height="15.0" fill="rgb(224,226,9)" rx="2" ry="2" />
<text  x="382.62" y="703.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.01%)</title><rect x="987.9" y="485" width="0.2" height="15.0" fill="rgb(231,64,8)" rx="2" ry="2" />
<text  x="990.94" y="495.5" ></text>
</g>
<g >
<title>usb_submit_urb (1 samples, 0.01%)</title><rect x="888.9" y="341" width="0.2" height="15.0" fill="rgb(211,85,47)" rx="2" ry="2" />
<text  x="891.89" y="351.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="1185.0" y="565" width="0.2" height="15.0" fill="rgb(249,188,54)" rx="2" ry="2" />
<text  x="1188.05" y="575.5" ></text>
</g>
<g >
<title>pixman_image_create_solid_fill (1 samples, 0.01%)</title><rect x="75.9" y="853" width="0.1" height="15.0" fill="rgb(253,128,2)" rx="2" ry="2" />
<text  x="78.87" y="863.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="964.5" y="613" width="0.2" height="15.0" fill="rgb(225,11,54)" rx="2" ry="2" />
<text  x="967.50" y="623.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (7 samples, 0.10%)</title><rect x="611.1" y="453" width="1.1" height="15.0" fill="rgb(235,132,16)" rx="2" ry="2" />
<text  x="614.06" y="463.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="1184.4" y="661" width="0.2" height="15.0" fill="rgb(236,165,37)" rx="2" ry="2" />
<text  x="1187.39" y="671.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="472.7" y="501" width="0.2" height="15.0" fill="rgb(233,213,22)" rx="2" ry="2" />
<text  x="475.72" y="511.5" ></text>
</g>
<g >
<title>_mm_adds_epu8 (37 samples, 0.52%)</title><rect x="233.2" y="581" width="6.1" height="15.0" fill="rgb(207,152,24)" rx="2" ry="2" />
<text  x="236.19" y="591.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (2 samples, 0.03%)</title><rect x="319.2" y="469" width="0.3" height="15.0" fill="rgb(250,142,20)" rx="2" ry="2" />
<text  x="322.20" y="479.5" ></text>
</g>
<g >
<title>handle_irq_event (2 samples, 0.03%)</title><rect x="202.5" y="485" width="0.3" height="15.0" fill="rgb(213,143,43)" rx="2" ry="2" />
<text  x="205.48" y="495.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (29 samples, 0.41%)</title><rect x="368.6" y="677" width="4.7" height="15.0" fill="rgb(247,140,11)" rx="2" ry="2" />
<text  x="371.56" y="687.5" ></text>
</g>
<g >
<title>_mm_store_si128 (2 samples, 0.03%)</title><rect x="223.6" y="565" width="0.3" height="15.0" fill="rgb(233,139,2)" rx="2" ry="2" />
<text  x="226.61" y="575.5" ></text>
</g>
<g >
<title>Bitmap::width (5 samples, 0.07%)</title><rect x="956.6" y="661" width="0.8" height="15.0" fill="rgb(213,118,47)" rx="2" ry="2" />
<text  x="959.58" y="671.5" ></text>
</g>
<g >
<title>save_128_aligned (2 samples, 0.03%)</title><rect x="290.1" y="613" width="0.4" height="15.0" fill="rgb(225,189,40)" rx="2" ry="2" />
<text  x="293.14" y="623.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (2 samples, 0.03%)</title><rect x="1162.4" y="437" width="0.4" height="15.0" fill="rgb(233,138,18)" rx="2" ry="2" />
<text  x="1165.43" y="447.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.01%)</title><rect x="439.2" y="501" width="0.2" height="15.0" fill="rgb(225,7,15)" rx="2" ry="2" />
<text  x="442.21" y="511.5" ></text>
</g>
<g >
<title>usb_get_current_frame_number (1 samples, 0.01%)</title><rect x="404.9" y="405" width="0.1" height="15.0" fill="rgb(246,113,3)" rx="2" ry="2" />
<text  x="407.87" y="415.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="605.8" y="533" width="0.1" height="15.0" fill="rgb(244,152,33)" rx="2" ry="2" />
<text  x="608.78" y="543.5" ></text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (1 samples, 0.01%)</title><rect x="123.1" y="853" width="0.1" height="15.0" fill="rgb(240,24,14)" rx="2" ry="2" />
<text  x="126.08" y="863.5" ></text>
</g>
<g >
<title>_mm_cmpeq_epi8 (7 samples, 0.10%)</title><rect x="191.8" y="565" width="1.1" height="15.0" fill="rgb(240,222,12)" rx="2" ry="2" />
<text  x="194.75" y="575.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="538.8" y="581" width="0.1" height="15.0" fill="rgb(222,159,15)" rx="2" ry="2" />
<text  x="541.75" y="591.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (2 samples, 0.03%)</title><rect x="467.9" y="533" width="0.4" height="15.0" fill="rgb(240,145,54)" rx="2" ry="2" />
<text  x="470.94" y="543.5" ></text>
</g>
<g >
<title>XFindOnExtensionList (1 samples, 0.01%)</title><rect x="81.8" y="853" width="0.2" height="15.0" fill="rgb(253,34,36)" rx="2" ry="2" />
<text  x="84.81" y="863.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.10%)</title><rect x="994.9" y="517" width="1.1" height="15.0" fill="rgb(227,197,45)" rx="2" ry="2" />
<text  x="997.87" y="527.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="1160.9" y="613" width="0.2" height="15.0" fill="rgb(212,45,34)" rx="2" ry="2" />
<text  x="1163.95" y="623.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="661.9" y="373" width="0.2" height="15.0" fill="rgb(232,199,30)" rx="2" ry="2" />
<text  x="664.91" y="383.5" ></text>
</g>
<g >
<title>TilemapLayer::Draw (15 samples, 0.21%)</title><rect x="362.4" y="709" width="2.5" height="15.0" fill="rgb(250,97,13)" rx="2" ry="2" />
<text  x="365.45" y="719.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="202.3" y="469" width="0.2" height="15.0" fill="rgb(245,110,50)" rx="2" ry="2" />
<text  x="205.32" y="479.5" ></text>
</g>
<g >
<title>Game_Map::Update (2,254 samples, 31.53%)</title><rect x="410.5" y="725" width="372.1" height="15.0" fill="rgb(223,31,33)" rx="2" ry="2" />
<text  x="413.49" y="735.5" >Game_Map::Update</text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.01%)</title><rect x="893.3" y="549" width="0.2" height="15.0" fill="rgb(206,192,2)" rx="2" ry="2" />
<text  x="896.35" y="559.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.01%)</title><rect x="439.2" y="517" width="0.2" height="15.0" fill="rgb(212,91,19)" rx="2" ry="2" />
<text  x="442.21" y="527.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.01%)</title><rect x="587.3" y="277" width="0.2" height="15.0" fill="rgb(216,123,40)" rx="2" ry="2" />
<text  x="590.29" y="287.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="689.8" y="197" width="0.2" height="15.0" fill="rgb(225,21,28)" rx="2" ry="2" />
<text  x="692.80" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.08%)</title><rect x="86.1" y="837" width="1.0" height="15.0" fill="rgb(243,160,14)" rx="2" ry="2" />
<text  x="89.10" y="847.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="725.8" y="469" width="0.2" height="15.0" fill="rgb(239,96,45)" rx="2" ry="2" />
<text  x="728.79" y="479.5" ></text>
</g>
<g >
<title>unpack_128_2x128 (4 samples, 0.06%)</title><rect x="223.9" y="581" width="0.7" height="15.0" fill="rgb(224,95,43)" rx="2" ry="2" />
<text  x="226.95" y="591.5" ></text>
</g>
<g >
<title>usb_submit_urb (1 samples, 0.01%)</title><rect x="775.5" y="421" width="0.1" height="15.0" fill="rgb(225,210,9)" rx="2" ry="2" />
<text  x="778.48" y="431.5" ></text>
</g>
<g >
<title>xhci_get_frame (1 samples, 0.01%)</title><rect x="404.9" y="373" width="0.1" height="15.0" fill="rgb(219,144,30)" rx="2" ry="2" />
<text  x="407.87" y="383.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.01%)</title><rect x="756.5" y="405" width="0.2" height="15.0" fill="rgb(238,129,37)" rx="2" ry="2" />
<text  x="759.50" y="415.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (8 samples, 0.11%)</title><rect x="376.0" y="517" width="1.3" height="15.0" fill="rgb(216,69,44)" rx="2" ry="2" />
<text  x="378.98" y="527.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="52.3" y="597" width="0.1" height="15.0" fill="rgb(209,136,0)" rx="2" ry="2" />
<text  x="55.26" y="607.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="1171.7" y="325" width="0.1" height="15.0" fill="rgb(209,109,18)" rx="2" ry="2" />
<text  x="1174.68" y="335.5" ></text>
</g>
<g >
<title>SDL_UDEV_Poll (3 samples, 0.04%)</title><rect x="993.4" y="645" width="0.5" height="15.0" fill="rgb(254,178,54)" rx="2" ry="2" />
<text  x="996.39" y="655.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (9 samples, 0.13%)</title><rect x="359.3" y="645" width="1.5" height="15.0" fill="rgb(214,206,3)" rx="2" ry="2" />
<text  x="362.31" y="655.5" ></text>
</g>
<g >
<title>_pixman_image_fini (3 samples, 0.04%)</title><rect x="351.7" y="613" width="0.5" height="15.0" fill="rgb(249,176,10)" rx="2" ry="2" />
<text  x="354.72" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (25 samples, 0.35%)</title><rect x="709.1" y="629" width="4.1" height="15.0" fill="rgb(237,42,10)" rx="2" ry="2" />
<text  x="712.12" y="639.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::~_Head_base (1 samples, 0.01%)</title><rect x="52.3" y="805" width="0.1" height="15.0" fill="rgb(240,177,26)" rx="2" ry="2" />
<text  x="55.26" y="815.5" ></text>
</g>
<g >
<title>ksys_write (16 samples, 0.22%)</title><rect x="48.5" y="821" width="2.6" height="15.0" fill="rgb(206,35,32)" rx="2" ry="2" />
<text  x="51.46" y="831.5" ></text>
</g>
<g >
<title>_mm_adds_epu16 (3 samples, 0.04%)</title><rect x="222.6" y="549" width="0.5" height="15.0" fill="rgb(231,133,45)" rx="2" ry="2" />
<text  x="225.62" y="559.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (1 samples, 0.01%)</title><rect x="594.4" y="613" width="0.2" height="15.0" fill="rgb(211,9,44)" rx="2" ry="2" />
<text  x="597.39" y="623.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (1 samples, 0.01%)</title><rect x="1171.5" y="485" width="0.2" height="15.0" fill="rgb(240,158,16)" rx="2" ry="2" />
<text  x="1174.51" y="495.5" ></text>
</g>
<g >
<title>activate_task (1 samples, 0.01%)</title><rect x="582.2" y="485" width="0.1" height="15.0" fill="rgb(214,211,32)" rx="2" ry="2" />
<text  x="585.17" y="495.5" ></text>
</g>
<g >
<title>Utils::GetRandomNumber (4 samples, 0.06%)</title><rect x="569.6" y="645" width="0.7" height="15.0" fill="rgb(247,106,23)" rx="2" ry="2" />
<text  x="572.63" y="655.5" ></text>
</g>
<g >
<title>interrupt_entry (1 samples, 0.01%)</title><rect x="352.5" y="565" width="0.2" height="15.0" fill="rgb(240,36,25)" rx="2" ry="2" />
<text  x="355.54" y="575.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="468.1" y="405" width="0.2" height="15.0" fill="rgb(216,97,22)" rx="2" ry="2" />
<text  x="471.10" y="415.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="467.8" y="549" width="0.1" height="15.0" fill="rgb(232,50,46)" rx="2" ry="2" />
<text  x="470.77" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (3 samples, 0.04%)</title><rect x="654.6" y="389" width="0.5" height="15.0" fill="rgb(242,185,36)" rx="2" ry="2" />
<text  x="657.64" y="399.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (10 samples, 0.14%)</title><rect x="371.2" y="629" width="1.6" height="15.0" fill="rgb(251,13,4)" rx="2" ry="2" />
<text  x="374.20" y="639.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandConditionalBranch (1 samples, 0.01%)</title><rect x="412.5" y="677" width="0.1" height="15.0" fill="rgb(207,163,21)" rx="2" ry="2" />
<text  x="415.47" y="687.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="319.4" y="389" width="0.1" height="15.0" fill="rgb(230,216,21)" rx="2" ry="2" />
<text  x="322.36" y="399.5" ></text>
</g>
<g >
<title>Game_System::SePlay (1 samples, 0.01%)</title><rect x="587.3" y="645" width="0.2" height="15.0" fill="rgb(244,109,50)" rx="2" ry="2" />
<text  x="590.29" y="655.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.01%)</title><rect x="122.1" y="741" width="0.2" height="15.0" fill="rgb(234,185,39)" rx="2" ry="2" />
<text  x="125.09" y="751.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (1 samples, 0.01%)</title><rect x="985.5" y="645" width="0.1" height="15.0" fill="rgb(228,101,26)" rx="2" ry="2" />
<text  x="988.46" y="655.5" ></text>
</g>
<g >
<title>try_to_wake_up (8 samples, 0.11%)</title><rect x="49.3" y="693" width="1.3" height="15.0" fill="rgb(207,31,46)" rx="2" ry="2" />
<text  x="52.29" y="703.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (9 samples, 0.13%)</title><rect x="986.3" y="725" width="1.5" height="15.0" fill="rgb(210,216,8)" rx="2" ry="2" />
<text  x="989.29" y="735.5" ></text>
</g>
<g >
<title>setup_accessors (2 samples, 0.03%)</title><rect x="794.8" y="613" width="0.3" height="15.0" fill="rgb(215,63,24)" rx="2" ry="2" />
<text  x="797.80" y="623.5" ></text>
</g>
<g >
<title>save_128_aligned (2 samples, 0.03%)</title><rect x="223.6" y="581" width="0.3" height="15.0" fill="rgb(235,160,3)" rx="2" ry="2" />
<text  x="226.61" y="591.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.10%)</title><rect x="656.1" y="389" width="1.2" height="15.0" fill="rgb(207,53,0)" rx="2" ry="2" />
<text  x="659.13" y="399.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (1 samples, 0.01%)</title><rect x="587.3" y="613" width="0.2" height="15.0" fill="rgb(250,91,54)" rx="2" ry="2" />
<text  x="590.29" y="623.5" ></text>
</g>
<g >
<title>Game_Player::Update (16 samples, 0.22%)</title><rect x="776.1" y="709" width="2.7" height="15.0" fill="rgb(246,225,8)" rx="2" ry="2" />
<text  x="779.14" y="719.5" ></text>
</g>
<g >
<title>_mm_shufflehi_epi16 (1 samples, 0.01%)</title><rect x="828.3" y="581" width="0.2" height="15.0" fill="rgb(217,188,48)" rx="2" ry="2" />
<text  x="831.31" y="591.5" ></text>
</g>
<g >
<title>in_over_2x128 (103 samples, 1.44%)</title><rect x="272.5" y="613" width="17.0" height="15.0" fill="rgb(205,4,4)" rx="2" ry="2" />
<text  x="275.48" y="623.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="775.5" y="549" width="0.1" height="15.0" fill="rgb(211,32,44)" rx="2" ry="2" />
<text  x="778.48" y="559.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.01%)</title><rect x="775.5" y="437" width="0.1" height="15.0" fill="rgb(244,111,3)" rx="2" ry="2" />
<text  x="778.48" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (8 samples, 0.11%)</title><rect x="704.3" y="629" width="1.4" height="15.0" fill="rgb(210,62,25)" rx="2" ry="2" />
<text  x="707.33" y="639.5" ></text>
</g>
<g >
<title>TilemapLayer::DrawTile (2 samples, 0.03%)</title><rect x="364.1" y="693" width="0.3" height="15.0" fill="rgb(229,152,18)" rx="2" ry="2" />
<text  x="367.10" y="703.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.01%)</title><rect x="706.5" y="581" width="0.1" height="15.0" fill="rgb(209,106,26)" rx="2" ry="2" />
<text  x="709.48" y="591.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="223.1" y="485" width="0.2" height="15.0" fill="rgb(224,68,28)" rx="2" ry="2" />
<text  x="226.12" y="495.5" ></text>
</g>
<g >
<title>usb_hcd_get_frame_number (1 samples, 0.01%)</title><rect x="404.9" y="389" width="0.1" height="15.0" fill="rgb(216,148,7)" rx="2" ry="2" />
<text  x="407.87" y="399.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="1185.0" y="581" width="0.2" height="15.0" fill="rgb(253,72,0)" rx="2" ry="2" />
<text  x="1188.05" y="591.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (23 samples, 0.32%)</title><rect x="964.7" y="629" width="3.8" height="15.0" fill="rgb(252,70,25)" rx="2" ry="2" />
<text  x="967.66" y="639.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.01%)</title><rect x="989.3" y="549" width="0.1" height="15.0" fill="rgb(217,212,26)" rx="2" ry="2" />
<text  x="992.26" y="559.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="753.0" y="597" width="0.2" height="15.0" fill="rgb(224,193,34)" rx="2" ry="2" />
<text  x="756.03" y="607.5" ></text>
</g>
<g >
<title>Frame::GetZ (1 samples, 0.01%)</title><rect x="352.5" y="581" width="0.2" height="15.0" fill="rgb(220,150,0)" rx="2" ry="2" />
<text  x="355.54" y="591.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**&gt; (1 samples, 0.01%)</title><rect x="352.5" y="661" width="0.2" height="15.0" fill="rgb(244,104,13)" rx="2" ry="2" />
<text  x="355.54" y="671.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (11 samples, 0.15%)</title><rect x="690.8" y="453" width="1.8" height="15.0" fill="rgb(232,54,43)" rx="2" ry="2" />
<text  x="693.79" y="463.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="661.9" y="277" width="0.2" height="15.0" fill="rgb(234,157,43)" rx="2" ry="2" />
<text  x="664.91" y="287.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (3 samples, 0.04%)</title><rect x="888.6" y="501" width="0.5" height="15.0" fill="rgb(235,42,33)" rx="2" ry="2" />
<text  x="891.56" y="511.5" ></text>
</g>
<g >
<title>compute_image_info (2 samples, 0.03%)</title><rect x="795.1" y="629" width="0.4" height="15.0" fill="rgb(226,152,52)" rx="2" ry="2" />
<text  x="798.13" y="639.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.01%)</title><rect x="881.5" y="405" width="0.1" height="15.0" fill="rgb(223,2,7)" rx="2" ry="2" />
<text  x="884.46" y="415.5" ></text>
</g>
<g >
<title>__strlen_avx2 (2 samples, 0.03%)</title><rect x="662.6" y="501" width="0.3" height="15.0" fill="rgb(251,92,31)" rx="2" ry="2" />
<text  x="665.57" y="511.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="605.8" y="565" width="0.1" height="15.0" fill="rgb(231,39,39)" rx="2" ry="2" />
<text  x="608.78" y="575.5" ></text>
</g>
<g >
<title>GL_RenderCopy (6 samples, 0.08%)</title><rect x="997.5" y="709" width="1.0" height="15.0" fill="rgb(220,111,9)" rx="2" ry="2" />
<text  x="1000.52" y="719.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="344.9" y="533" width="0.2" height="15.0" fill="rgb(238,212,49)" rx="2" ry="2" />
<text  x="347.95" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (11 samples, 0.15%)</title><rect x="606.8" y="517" width="1.8" height="15.0" fill="rgb(231,48,25)" rx="2" ry="2" />
<text  x="609.77" y="527.5" ></text>
</g>
<g >
<title>dequeue_entity (2 samples, 0.03%)</title><rect x="32.1" y="693" width="0.4" height="15.0" fill="rgb(222,64,37)" rx="2" ry="2" />
<text  x="35.12" y="703.5" ></text>
</g>
<g >
<title>xhci_get_frame (1 samples, 0.01%)</title><rect x="955.4" y="165" width="0.2" height="15.0" fill="rgb(252,178,6)" rx="2" ry="2" />
<text  x="958.42" y="175.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="849.1" y="549" width="0.3" height="15.0" fill="rgb(241,99,50)" rx="2" ry="2" />
<text  x="852.11" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="1172.2" y="661" width="0.3" height="15.0" fill="rgb(239,182,25)" rx="2" ry="2" />
<text  x="1175.17" y="671.5" ></text>
</g>
<g >
<title>_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="364.3" y="581" width="0.1" height="15.0" fill="rgb(243,212,45)" rx="2" ry="2" />
<text  x="367.26" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (7 samples, 0.10%)</title><rect x="658.1" y="405" width="1.2" height="15.0" fill="rgb(219,18,39)" rx="2" ry="2" />
<text  x="661.11" y="415.5" ></text>
</g>
<g >
<title>xhci_msi_irq (10 samples, 0.14%)</title><rect x="1161.1" y="533" width="1.7" height="15.0" fill="rgb(246,197,22)" rx="2" ry="2" />
<text  x="1164.11" y="543.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="968.6" y="549" width="0.2" height="15.0" fill="rgb(221,49,19)" rx="2" ry="2" />
<text  x="971.63" y="559.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (2 samples, 0.03%)</title><rect x="1188.8" y="821" width="0.4" height="15.0" fill="rgb(211,124,52)" rx="2" ry="2" />
<text  x="1191.84" y="831.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="572.9" y="549" width="0.2" height="15.0" fill="rgb(247,153,10)" rx="2" ry="2" />
<text  x="575.93" y="559.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="539.4" y="469" width="0.2" height="15.0" fill="rgb(232,148,32)" rx="2" ry="2" />
<text  x="542.42" y="479.5" ></text>
</g>
<g >
<title>_XEventsQueued (9 samples, 0.13%)</title><rect x="994.7" y="629" width="1.5" height="15.0" fill="rgb(248,171,12)" rx="2" ry="2" />
<text  x="997.71" y="639.5" ></text>
</g>
<g >
<title>compute_image_info (10 samples, 0.14%)</title><rect x="305.7" y="597" width="1.6" height="15.0" fill="rgb(246,133,17)" rx="2" ry="2" />
<text  x="308.66" y="607.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (11 samples, 0.15%)</title><rect x="694.4" y="501" width="1.8" height="15.0" fill="rgb(233,160,31)" rx="2" ry="2" />
<text  x="697.43" y="511.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="756.5" y="421" width="0.2" height="15.0" fill="rgb(227,159,28)" rx="2" ry="2" />
<text  x="759.50" y="431.5" ></text>
</g>
<g >
<title>__GI__IO_fwrite (1 samples, 0.01%)</title><rect x="587.3" y="453" width="0.2" height="15.0" fill="rgb(250,133,41)" rx="2" ry="2" />
<text  x="590.29" y="463.5" ></text>
</g>
<g >
<title>Sprite_Character::Update (1 samples, 0.01%)</title><rect x="986.0" y="693" width="0.1" height="15.0" fill="rgb(206,50,21)" rx="2" ry="2" />
<text  x="988.96" y="703.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (32 samples, 0.45%)</title><rect x="1166.6" y="533" width="5.2" height="15.0" fill="rgb(206,118,16)" rx="2" ry="2" />
<text  x="1169.56" y="543.5" ></text>
</g>
<g >
<title>n_tty_write (1 samples, 0.01%)</title><rect x="587.3" y="229" width="0.2" height="15.0" fill="rgb(252,191,0)" rx="2" ry="2" />
<text  x="590.29" y="239.5" ></text>
</g>
<g >
<title>Game_Screen::GetPicture (4 samples, 0.06%)</title><rect x="705.7" y="645" width="0.6" height="15.0" fill="rgb(228,86,52)" rx="2" ry="2" />
<text  x="708.65" y="655.5" ></text>
</g>
<g >
<title>_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="364.1" y="581" width="0.2" height="15.0" fill="rgb(224,140,8)" rx="2" ry="2" />
<text  x="367.10" y="591.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (2 samples, 0.03%)</title><rect x="67.8" y="853" width="0.3" height="15.0" fill="rgb(216,134,46)" rx="2" ry="2" />
<text  x="70.78" y="863.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="677.4" y="309" width="0.2" height="15.0" fill="rgb(231,137,51)" rx="2" ry="2" />
<text  x="680.42" y="319.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.01%)</title><rect x="29.0" y="789" width="0.1" height="15.0" fill="rgb(211,182,21)" rx="2" ry="2" />
<text  x="31.98" y="799.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (26 samples, 0.36%)</title><rect x="596.2" y="581" width="4.3" height="15.0" fill="rgb(248,168,44)" rx="2" ry="2" />
<text  x="599.20" y="591.5" ></text>
</g>
<g >
<title>_int_free (4 samples, 0.06%)</title><rect x="126.1" y="853" width="0.6" height="15.0" fill="rgb(228,26,47)" rx="2" ry="2" />
<text  x="129.05" y="863.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="282.9" y="517" width="0.1" height="15.0" fill="rgb(242,104,15)" rx="2" ry="2" />
<text  x="285.88" y="527.5" ></text>
</g>
<g >
<title>dequeue_entity (2 samples, 0.03%)</title><rect x="990.6" y="517" width="0.3" height="15.0" fill="rgb(253,9,28)" rx="2" ry="2" />
<text  x="993.58" y="527.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (2 samples, 0.03%)</title><rect x="772.3" y="645" width="0.4" height="15.0" fill="rgb(238,81,37)" rx="2" ry="2" />
<text  x="775.34" y="655.5" ></text>
</g>
<g >
<title>Game_Interpreter::ValueOrVariable (10 samples, 0.14%)</title><rect x="591.1" y="645" width="1.6" height="15.0" fill="rgb(232,226,37)" rx="2" ry="2" />
<text  x="594.09" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (7 samples, 0.10%)</title><rect x="658.1" y="437" width="1.2" height="15.0" fill="rgb(241,136,15)" rx="2" ry="2" />
<text  x="661.11" y="447.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (4 samples, 0.06%)</title><rect x="989.3" y="581" width="0.6" height="15.0" fill="rgb(206,228,49)" rx="2" ry="2" />
<text  x="992.26" y="591.5" ></text>
</g>
<g >
<title>__fdget (4 samples, 0.06%)</title><rect x="29.0" y="805" width="0.6" height="15.0" fill="rgb(228,171,1)" rx="2" ry="2" />
<text  x="31.98" y="815.5" ></text>
</g>
<g >
<title>do_syscall_64 (151 samples, 2.11%)</title><rect x="26.5" y="853" width="24.9" height="15.0" fill="rgb(249,33,8)" rx="2" ry="2" />
<text  x="29.51" y="863.5" >d..</text>
</g>
<g >
<title>pix_multiply_2x128 (5 samples, 0.07%)</title><rect x="328.8" y="549" width="0.8" height="15.0" fill="rgb(220,96,3)" rx="2" ry="2" />
<text  x="331.77" y="559.5" ></text>
</g>
<g >
<title>handle_irq (2 samples, 0.03%)</title><rect x="255.8" y="533" width="0.3" height="15.0" fill="rgb(240,105,26)" rx="2" ry="2" />
<text  x="258.81" y="543.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (5 samples, 0.07%)</title><rect x="360.8" y="629" width="0.8" height="15.0" fill="rgb(209,36,37)" rx="2" ry="2" />
<text  x="363.80" y="639.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="888.9" y="293" width="0.2" height="15.0" fill="rgb(248,163,32)" rx="2" ry="2" />
<text  x="891.89" y="303.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="983.0" y="613" width="0.2" height="15.0" fill="rgb(249,124,37)" rx="2" ry="2" />
<text  x="985.99" y="623.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="661.9" y="197" width="0.2" height="15.0" fill="rgb(211,187,37)" rx="2" ry="2" />
<text  x="664.91" y="207.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="710.3" y="597" width="0.3" height="15.0" fill="rgb(236,192,52)" rx="2" ry="2" />
<text  x="713.27" y="607.5" ></text>
</g>
<g >
<title>unlink_chunk (1 samples, 0.01%)</title><rect x="79.7" y="853" width="0.1" height="15.0" fill="rgb(215,90,54)" rx="2" ry="2" />
<text  x="82.66" y="863.5" ></text>
</g>
<g >
<title>do_IRQ (10 samples, 0.14%)</title><rect x="1161.1" y="629" width="1.7" height="15.0" fill="rgb(230,188,10)" rx="2" ry="2" />
<text  x="1164.11" y="639.5" ></text>
</g>
<g >
<title>activate_task (4 samples, 0.06%)</title><rect x="49.9" y="661" width="0.7" height="15.0" fill="rgb(212,10,41)" rx="2" ry="2" />
<text  x="52.95" y="671.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="1171.7" y="405" width="0.1" height="15.0" fill="rgb(225,211,25)" rx="2" ry="2" />
<text  x="1174.68" y="415.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="605.8" y="501" width="0.1" height="15.0" fill="rgb(238,29,52)" rx="2" ry="2" />
<text  x="608.78" y="511.5" ></text>
</g>
<g >
<title>Bitmap::StretchBlit (301 samples, 4.21%)</title><rect x="302.5" y="645" width="49.7" height="15.0" fill="rgb(231,75,0)" rx="2" ry="2" />
<text  x="305.52" y="655.5" >Bitma..</text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (2 samples, 0.03%)</title><rect x="1188.8" y="677" width="0.4" height="15.0" fill="rgb(209,82,1)" rx="2" ry="2" />
<text  x="1191.84" y="687.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (1 samples, 0.01%)</title><rect x="995.7" y="437" width="0.2" height="15.0" fill="rgb(222,83,40)" rx="2" ry="2" />
<text  x="998.70" y="447.5" ></text>
</g>
<g >
<title>AsyncHandler::IsImportantFilePending (1 samples, 0.01%)</title><rect x="163.0" y="741" width="0.2" height="15.0" fill="rgb(243,223,40)" rx="2" ry="2" />
<text  x="166.03" y="751.5" ></text>
</g>
<g >
<title>posix_get_monotonic_raw (6 samples, 0.08%)</title><rect x="403.7" y="661" width="1.0" height="15.0" fill="rgb(230,46,9)" rx="2" ry="2" />
<text  x="406.72" y="671.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="404.9" y="645" width="0.1" height="15.0" fill="rgb(247,222,30)" rx="2" ry="2" />
<text  x="407.87" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_write (16 samples, 0.22%)</title><rect x="48.5" y="837" width="2.6" height="15.0" fill="rgb(214,6,22)" rx="2" ry="2" />
<text  x="51.46" y="847.5" ></text>
</g>
<g >
<title>sse2_composite_src_x888_8888 (41 samples, 0.57%)</title><rect x="294.8" y="629" width="6.7" height="15.0" fill="rgb(242,20,24)" rx="2" ry="2" />
<text  x="297.76" y="639.5" ></text>
</g>
<g >
<title>unpack_128_2x128 (5 samples, 0.07%)</title><rect x="329.9" y="565" width="0.9" height="15.0" fill="rgb(210,223,35)" rx="2" ry="2" />
<text  x="332.93" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (6 samples, 0.08%)</title><rect x="661.1" y="437" width="1.0" height="15.0" fill="rgb(240,11,15)" rx="2" ry="2" />
<text  x="664.08" y="447.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (3 samples, 0.04%)</title><rect x="663.4" y="565" width="0.5" height="15.0" fill="rgb(235,91,35)" rx="2" ry="2" />
<text  x="666.39" y="575.5" ></text>
</g>
<g >
<title>handle_irq (2 samples, 0.03%)</title><rect x="758.1" y="629" width="0.4" height="15.0" fill="rgb(238,209,24)" rx="2" ry="2" />
<text  x="761.15" y="639.5" ></text>
</g>
<g >
<title>do_IRQ (4 samples, 0.06%)</title><rect x="538.9" y="613" width="0.7" height="15.0" fill="rgb(229,2,15)" rx="2" ry="2" />
<text  x="541.92" y="623.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (2 samples, 0.03%)</title><rect x="955.3" y="405" width="0.3" height="15.0" fill="rgb(226,52,54)" rx="2" ry="2" />
<text  x="958.25" y="415.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.01%)</title><rect x="264.4" y="517" width="0.2" height="15.0" fill="rgb(238,125,42)" rx="2" ry="2" />
<text  x="267.39" y="527.5" ></text>
</g>
<g >
<title>usb_get_current_frame_number (1 samples, 0.01%)</title><rect x="661.9" y="101" width="0.2" height="15.0" fill="rgb(208,97,21)" rx="2" ry="2" />
<text  x="664.91" y="111.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="171.8" y="501" width="0.1" height="15.0" fill="rgb(244,33,26)" rx="2" ry="2" />
<text  x="174.78" y="511.5" ></text>
</g>
<g >
<title>_pixman_image_fini (1 samples, 0.01%)</title><rect x="75.0" y="853" width="0.2" height="15.0" fill="rgb(246,136,12)" rx="2" ry="2" />
<text  x="78.04" y="863.5" ></text>
</g>
<g >
<title>_mm_xor_si128 (9 samples, 0.13%)</title><rect x="883.6" y="565" width="1.5" height="15.0" fill="rgb(231,103,50)" rx="2" ry="2" />
<text  x="886.61" y="575.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="223.4" y="501" width="0.2" height="15.0" fill="rgb(212,148,46)" rx="2" ry="2" />
<text  x="226.45" y="511.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (45 samples, 0.63%)</title><rect x="642.9" y="421" width="7.4" height="15.0" fill="rgb(240,217,26)" rx="2" ry="2" />
<text  x="645.92" y="431.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (1 samples, 0.01%)</title><rect x="583.0" y="613" width="0.2" height="15.0" fill="rgb(207,77,21)" rx="2" ry="2" />
<text  x="586.00" y="623.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (1 samples, 0.01%)</title><rect x="958.4" y="645" width="0.2" height="15.0" fill="rgb(212,155,6)" rx="2" ry="2" />
<text  x="961.39" y="655.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (1 samples, 0.01%)</title><rect x="995.2" y="437" width="0.2" height="15.0" fill="rgb(233,55,17)" rx="2" ry="2" />
<text  x="998.20" y="447.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (3 samples, 0.04%)</title><rect x="654.6" y="357" width="0.5" height="15.0" fill="rgb(227,197,51)" rx="2" ry="2" />
<text  x="657.64" y="367.5" ></text>
</g>
<g >
<title>AsyncHandler::IsImportantFilePending (74 samples, 1.04%)</title><rect x="1173.0" y="741" width="12.2" height="15.0" fill="rgb(208,104,0)" rx="2" ry="2" />
<text  x="1176.00" y="751.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (7 samples, 0.10%)</title><rect x="611.1" y="437" width="1.1" height="15.0" fill="rgb(225,79,19)" rx="2" ry="2" />
<text  x="614.06" y="447.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="614.2" y="405" width="0.2" height="15.0" fill="rgb(212,71,8)" rx="2" ry="2" />
<text  x="617.20" y="415.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (489 samples, 6.84%)</title><rect x="615.5" y="581" width="80.7" height="15.0" fill="rgb(254,115,35)" rx="2" ry="2" />
<text  x="618.52" y="591.5" >Game_Pict..</text>
</g>
<g >
<title>posix_get_monotonic_raw (1 samples, 0.01%)</title><rect x="1188.7" y="821" width="0.1" height="15.0" fill="rgb(217,139,14)" rx="2" ry="2" />
<text  x="1191.68" y="831.5" ></text>
</g>
<g >
<title>schedule (3 samples, 0.04%)</title><rect x="86.6" y="773" width="0.5" height="15.0" fill="rgb(253,191,0)" rx="2" ry="2" />
<text  x="89.60" y="783.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="955.4" y="341" width="0.2" height="15.0" fill="rgb(250,145,43)" rx="2" ry="2" />
<text  x="958.42" y="351.5" ></text>
</g>
<g >
<title>unix_stream_read_generic (2 samples, 0.03%)</title><rect x="995.4" y="405" width="0.3" height="15.0" fill="rgb(250,133,0)" rx="2" ry="2" />
<text  x="998.37" y="415.5" ></text>
</g>
<g >
<title>usb_submit_urb (1 samples, 0.01%)</title><rect x="614.2" y="341" width="0.2" height="15.0" fill="rgb(213,92,40)" rx="2" ry="2" />
<text  x="617.20" y="351.5" ></text>
</g>
<g >
<title>snd_usb_pcm_delay.part.14 (1 samples, 0.01%)</title><rect x="955.4" y="213" width="0.2" height="15.0" fill="rgb(237,189,0)" rx="2" ry="2" />
<text  x="958.42" y="223.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="359.1" y="645" width="0.2" height="15.0" fill="rgb(210,48,42)" rx="2" ry="2" />
<text  x="362.15" y="655.5" ></text>
</g>
<g >
<title>Game_Picture::SyncCurrentToFinish (3 samples, 0.04%)</title><rect x="697.9" y="629" width="0.5" height="15.0" fill="rgb(225,227,37)" rx="2" ry="2" />
<text  x="700.89" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (1 samples, 0.01%)</title><rect x="985.3" y="645" width="0.2" height="15.0" fill="rgb(229,221,29)" rx="2" ry="2" />
<text  x="988.30" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2 samples, 0.03%)</title><rect x="622.1" y="469" width="0.4" height="15.0" fill="rgb(243,43,44)" rx="2" ry="2" />
<text  x="625.12" y="479.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="161.0" y="709" width="0.2" height="15.0" fill="rgb(216,48,20)" rx="2" ry="2" />
<text  x="164.05" y="719.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="756.5" y="597" width="0.2" height="15.0" fill="rgb(240,92,10)" rx="2" ry="2" />
<text  x="759.50" y="607.5" ></text>
</g>
<g >
<title>_pixman_compute_composite_region32 (1 samples, 0.01%)</title><rect x="794.5" y="629" width="0.1" height="15.0" fill="rgb(241,116,27)" rx="2" ry="2" />
<text  x="797.47" y="639.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="756.5" y="437" width="0.2" height="15.0" fill="rgb(225,140,7)" rx="2" ry="2" />
<text  x="759.50" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (5 samples, 0.07%)</title><rect x="353.7" y="629" width="0.8" height="15.0" fill="rgb(228,86,19)" rx="2" ry="2" />
<text  x="356.70" y="639.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="1185.0" y="677" width="0.2" height="15.0" fill="rgb(243,203,8)" rx="2" ry="2" />
<text  x="1188.05" y="687.5" ></text>
</g>
<g >
<title>usb_get_current_frame_number (1 samples, 0.01%)</title><rect x="725.8" y="357" width="0.2" height="15.0" fill="rgb(226,116,8)" rx="2" ry="2" />
<text  x="728.79" y="367.5" ></text>
</g>
<g >
<title>_raw_read_lock (1 samples, 0.01%)</title><rect x="319.7" y="309" width="0.2" height="15.0" fill="rgb(227,82,9)" rx="2" ry="2" />
<text  x="322.69" y="319.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="375.0" y="677" width="0.2" height="15.0" fill="rgb(237,75,43)" rx="2" ry="2" />
<text  x="377.99" y="687.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (1 samples, 0.01%)</title><rect x="987.1" y="533" width="0.2" height="15.0" fill="rgb(239,55,37)" rx="2" ry="2" />
<text  x="990.12" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (1 samples, 0.01%)</title><rect x="1188.7" y="837" width="0.1" height="15.0" fill="rgb(248,188,10)" rx="2" ry="2" />
<text  x="1191.68" y="847.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (8 samples, 0.11%)</title><rect x="376.0" y="565" width="1.3" height="15.0" fill="rgb(242,79,52)" rx="2" ry="2" />
<text  x="378.98" y="575.5" ></text>
</g>
<g >
<title>handle_irq (4 samples, 0.06%)</title><rect x="538.9" y="597" width="0.7" height="15.0" fill="rgb(226,159,6)" rx="2" ry="2" />
<text  x="541.92" y="607.5" ></text>
</g>
<g >
<title>std::get_temporary_buffer&lt;Drawable*&gt; (1 samples, 0.01%)</title><rect x="368.2" y="661" width="0.2" height="15.0" fill="rgb(230,52,17)" rx="2" ry="2" />
<text  x="371.23" y="671.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (5 samples, 0.07%)</title><rect x="360.8" y="645" width="0.8" height="15.0" fill="rgb(221,105,25)" rx="2" ry="2" />
<text  x="363.80" y="655.5" ></text>
</g>
<g >
<title>Rect::Rect (2 samples, 0.03%)</title><rect x="962.0" y="677" width="0.4" height="15.0" fill="rgb(249,201,9)" rx="2" ry="2" />
<text  x="965.02" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;Scene&gt;, std::allocator&lt;std::shared_ptr&lt;Scene&gt; &gt; &gt;::clear (1 samples, 0.01%)</title><rect x="1185.9" y="789" width="0.1" height="15.0" fill="rgb(211,228,36)" rx="2" ry="2" />
<text  x="1188.87" y="799.5" ></text>
</g>
<g >
<title>ret_from_intr (5 samples, 0.07%)</title><rect x="570.6" y="645" width="0.8" height="15.0" fill="rgb(214,85,30)" rx="2" ry="2" />
<text  x="573.62" y="655.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (70 samples, 0.98%)</title><rect x="33.3" y="709" width="11.5" height="15.0" fill="rgb(250,125,32)" rx="2" ry="2" />
<text  x="36.28" y="719.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (2 samples, 0.03%)</title><rect x="373.0" y="629" width="0.3" height="15.0" fill="rgb(216,75,18)" rx="2" ry="2" />
<text  x="376.01" y="639.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="689.8" y="245" width="0.2" height="15.0" fill="rgb(214,211,27)" rx="2" ry="2" />
<text  x="692.80" y="255.5" ></text>
</g>
<g >
<title>load_128_unaligned (1 samples, 0.01%)</title><rect x="364.3" y="597" width="0.1" height="15.0" fill="rgb(206,81,54)" rx="2" ry="2" />
<text  x="367.26" y="607.5" ></text>
</g>
<g >
<title>xhci_irq (2 samples, 0.03%)</title><rect x="925.5" y="293" width="0.4" height="15.0" fill="rgb(217,32,29)" rx="2" ry="2" />
<text  x="928.54" y="303.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="344.9" y="357" width="0.2" height="15.0" fill="rgb(239,66,42)" rx="2" ry="2" />
<text  x="347.95" y="367.5" ></text>
</g>
<g >
<title>xhci_msi_irq (5 samples, 0.07%)</title><rect x="570.6" y="533" width="0.8" height="15.0" fill="rgb(206,1,21)" rx="2" ry="2" />
<text  x="573.62" y="543.5" ></text>
</g>
<g >
<title>[unknown] (65 samples, 0.91%)</title><rect x="122.3" y="869" width="10.7" height="15.0" fill="rgb(212,214,5)" rx="2" ry="2" />
<text  x="125.26" y="879.5" ></text>
</g>
<g >
<title>Rect::GetSubRect (3 samples, 0.04%)</title><rect x="165.2" y="693" width="0.5" height="15.0" fill="rgb(221,220,31)" rx="2" ry="2" />
<text  x="168.18" y="703.5" ></text>
</g>
<g >
<title>add_interrupt_randomness (1 samples, 0.01%)</title><rect x="375.3" y="501" width="0.2" height="15.0" fill="rgb(236,23,28)" rx="2" ry="2" />
<text  x="378.32" y="511.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="452.1" y="549" width="0.2" height="15.0" fill="rgb(205,145,26)" rx="2" ry="2" />
<text  x="455.09" y="559.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.01%)</title><rect x="571.3" y="405" width="0.1" height="15.0" fill="rgb(245,219,6)" rx="2" ry="2" />
<text  x="574.28" y="415.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="375.3" y="549" width="0.2" height="15.0" fill="rgb(252,201,53)" rx="2" ry="2" />
<text  x="378.32" y="559.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="756.5" y="533" width="0.2" height="15.0" fill="rgb(234,41,11)" rx="2" ry="2" />
<text  x="759.50" y="543.5" ></text>
</g>
<g >
<title>sse2_blt (1 samples, 0.01%)</title><rect x="364.3" y="613" width="0.1" height="15.0" fill="rgb(212,52,14)" rx="2" ry="2" />
<text  x="367.26" y="623.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="202.3" y="517" width="0.2" height="15.0" fill="rgb(225,41,39)" rx="2" ry="2" />
<text  x="205.32" y="527.5" ></text>
</g>
<g >
<title>__task_pid_nr_ns (2 samples, 0.03%)</title><rect x="28.3" y="821" width="0.4" height="15.0" fill="rgb(229,148,31)" rx="2" ry="2" />
<text  x="31.32" y="831.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="344.9" y="373" width="0.2" height="15.0" fill="rgb(245,226,20)" rx="2" ry="2" />
<text  x="347.95" y="383.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="940.7" y="325" width="0.2" height="15.0" fill="rgb(225,30,16)" rx="2" ry="2" />
<text  x="943.73" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="77.2" y="853" width="0.2" height="15.0" fill="rgb(245,22,1)" rx="2" ry="2" />
<text  x="80.19" y="863.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (25 samples, 0.35%)</title><rect x="618.3" y="501" width="4.2" height="15.0" fill="rgb(245,54,46)" rx="2" ry="2" />
<text  x="621.32" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (3 samples, 0.04%)</title><rect x="657.4" y="389" width="0.5" height="15.0" fill="rgb(236,3,31)" rx="2" ry="2" />
<text  x="660.45" y="399.5" ></text>
</g>
<g >
<title>pix_multiply_2x128 (1 samples, 0.01%)</title><rect x="343.3" y="549" width="0.2" height="15.0" fill="rgb(239,133,49)" rx="2" ry="2" />
<text  x="346.30" y="559.5" ></text>
</g>
<g >
<title>Game_Switches_Class::Get (2 samples, 0.03%)</title><rect x="470.4" y="645" width="0.3" height="15.0" fill="rgb(218,167,3)" rx="2" ry="2" />
<text  x="473.41" y="655.5" ></text>
</g>
<g >
<title>perf_pending_event (1 samples, 0.01%)</title><rect x="377.3" y="517" width="0.2" height="15.0" fill="rgb(253,175,1)" rx="2" ry="2" />
<text  x="380.31" y="527.5" ></text>
</g>
<g >
<title>native_write_msr (69 samples, 0.97%)</title><rect x="33.4" y="629" width="11.4" height="15.0" fill="rgb(251,21,5)" rx="2" ry="2" />
<text  x="36.44" y="639.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (2 samples, 0.03%)</title><rect x="255.8" y="485" width="0.3" height="15.0" fill="rgb(207,60,27)" rx="2" ry="2" />
<text  x="258.81" y="495.5" ></text>
</g>
<g >
<title>Sprite_Timer::Update (1 samples, 0.01%)</title><rect x="986.1" y="693" width="0.2" height="15.0" fill="rgb(247,88,49)" rx="2" ry="2" />
<text  x="989.12" y="703.5" ></text>
</g>
<g >
<title>pixman_image_get_height (4 samples, 0.06%)</title><rect x="358.5" y="677" width="0.6" height="15.0" fill="rgb(249,21,5)" rx="2" ry="2" />
<text  x="361.49" y="687.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="775.5" y="501" width="0.1" height="15.0" fill="rgb(205,140,39)" rx="2" ry="2" />
<text  x="778.48" y="511.5" ></text>
</g>
<g >
<title>Sprite::SetZoomY (1 samples, 0.01%)</title><rect x="73.6" y="853" width="0.1" height="15.0" fill="rgb(209,220,10)" rx="2" ry="2" />
<text  x="76.56" y="863.5" ></text>
</g>
<g >
<title>_mm_adds_epu16 (3 samples, 0.04%)</title><rect x="328.8" y="533" width="0.5" height="15.0" fill="rgb(211,210,18)" rx="2" ry="2" />
<text  x="331.77" y="543.5" ></text>
</g>
<g >
<title>_mm_xor_si128 (1 samples, 0.01%)</title><rect x="342.1" y="533" width="0.2" height="15.0" fill="rgb(237,0,3)" rx="2" ry="2" />
<text  x="345.14" y="543.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="883.4" y="501" width="0.2" height="15.0" fill="rgb(242,213,38)" rx="2" ry="2" />
<text  x="886.44" y="511.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="375.3" y="597" width="0.2" height="15.0" fill="rgb(217,71,54)" rx="2" ry="2" />
<text  x="378.32" y="607.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="202.3" y="453" width="0.2" height="15.0" fill="rgb(246,6,36)" rx="2" ry="2" />
<text  x="205.32" y="463.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.03%)</title><rect x="1188.8" y="789" width="0.4" height="15.0" fill="rgb(236,26,21)" rx="2" ry="2" />
<text  x="1191.84" y="799.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.01%)</title><rect x="87.1" y="837" width="0.2" height="15.0" fill="rgb(210,27,10)" rx="2" ry="2" />
<text  x="90.09" y="847.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.01%)</title><rect x="1162.8" y="645" width="0.1" height="15.0" fill="rgb(212,28,35)" rx="2" ry="2" />
<text  x="1165.76" y="655.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (2 samples, 0.03%)</title><rect x="1162.4" y="469" width="0.4" height="15.0" fill="rgb(242,198,25)" rx="2" ry="2" />
<text  x="1165.43" y="479.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="888.9" y="373" width="0.2" height="15.0" fill="rgb(250,181,35)" rx="2" ry="2" />
<text  x="891.89" y="383.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (5 samples, 0.07%)</title><rect x="967.6" y="613" width="0.9" height="15.0" fill="rgb(215,120,19)" rx="2" ry="2" />
<text  x="970.64" y="623.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="673.3" y="293" width="0.2" height="15.0" fill="rgb(205,54,41)" rx="2" ry="2" />
<text  x="676.30" y="303.5" ></text>
</g>
<g >
<title>handle_irq_event (5 samples, 0.07%)</title><rect x="570.6" y="581" width="0.8" height="15.0" fill="rgb(211,21,18)" rx="2" ry="2" />
<text  x="573.62" y="591.5" ></text>
</g>
<g >
<title>__GI___poll (1 samples, 0.01%)</title><rect x="987.9" y="597" width="0.2" height="15.0" fill="rgb(223,8,37)" rx="2" ry="2" />
<text  x="990.94" y="607.5" ></text>
</g>
<g >
<title>__libc_calloc (2 samples, 0.03%)</title><rect x="125.6" y="853" width="0.3" height="15.0" fill="rgb(226,147,10)" rx="2" ry="2" />
<text  x="128.56" y="863.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (11 samples, 0.15%)</title><rect x="694.4" y="533" width="1.8" height="15.0" fill="rgb(227,83,10)" rx="2" ry="2" />
<text  x="697.43" y="543.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="348.9" y="357" width="0.2" height="15.0" fill="rgb(227,188,18)" rx="2" ry="2" />
<text  x="351.91" y="367.5" ></text>
</g>
<g >
<title>irq_enter (1 samples, 0.01%)</title><rect x="121.9" y="821" width="0.2" height="15.0" fill="rgb(232,208,13)" rx="2" ry="2" />
<text  x="124.93" y="831.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="272.3" y="581" width="0.2" height="15.0" fill="rgb(232,5,11)" rx="2" ry="2" />
<text  x="275.31" y="591.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="756.5" y="549" width="0.2" height="15.0" fill="rgb(237,200,51)" rx="2" ry="2" />
<text  x="759.50" y="559.5" ></text>
</g>
<g >
<title>SDL_UpdateTextureNative (1,050 samples, 14.69%)</title><rect x="998.7" y="709" width="173.3" height="15.0" fill="rgb(238,173,49)" rx="2" ry="2" />
<text  x="1001.67" y="719.5" >SDL_UpdateTextureNative</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (1 samples, 0.01%)</title><rect x="52.3" y="757" width="0.1" height="15.0" fill="rgb(208,1,7)" rx="2" ry="2" />
<text  x="55.26" y="767.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (344 samples, 4.81%)</title><rect x="899.3" y="629" width="56.8" height="15.0" fill="rgb(239,57,49)" rx="2" ry="2" />
<text  x="902.29" y="639.5" >std::s..</text>
</g>
<g >
<title>_pixman_implementation_lookup_composite (4 samples, 0.06%)</title><rect x="307.3" y="613" width="0.7" height="15.0" fill="rgb(214,206,49)" rx="2" ry="2" />
<text  x="310.31" y="623.5" ></text>
</g>
<g >
<title>LoadBitmap&lt;(&lt;unnamed&gt;::Material::Type)9&gt; (3 samples, 0.04%)</title><rect x="987.3" y="613" width="0.5" height="15.0" fill="rgb(216,104,34)" rx="2" ry="2" />
<text  x="990.28" y="623.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="297.4" y="549" width="0.2" height="15.0" fill="rgb(209,55,54)" rx="2" ry="2" />
<text  x="300.41" y="559.5" ></text>
</g>
<g >
<title>_copy_to_user (1 samples, 0.01%)</title><rect x="402.4" y="629" width="0.2" height="15.0" fill="rgb(225,12,7)" rx="2" ry="2" />
<text  x="405.40" y="639.5" ></text>
</g>
<g >
<title>xhci_msi_irq (2 samples, 0.03%)</title><rect x="155.9" y="597" width="0.4" height="15.0" fill="rgb(226,8,18)" rx="2" ry="2" />
<text  x="158.93" y="607.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.01%)</title><rect x="48.1" y="773" width="0.2" height="15.0" fill="rgb(244,170,37)" rx="2" ry="2" />
<text  x="51.13" y="783.5" ></text>
</g>
<g >
<title>SDL_UDEV_hotplug_update_available (2 samples, 0.03%)</title><rect x="993.6" y="629" width="0.3" height="15.0" fill="rgb(208,125,52)" rx="2" ry="2" />
<text  x="996.55" y="639.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="613.9" y="469" width="0.1" height="15.0" fill="rgb(232,171,16)" rx="2" ry="2" />
<text  x="616.87" y="479.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.01%)</title><rect x="468.1" y="389" width="0.2" height="15.0" fill="rgb(243,165,28)" rx="2" ry="2" />
<text  x="471.10" y="399.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateGraphics (1,234 samples, 17.26%)</title><rect x="782.6" y="725" width="203.7" height="15.0" fill="rgb(214,209,14)" rx="2" ry="2" />
<text  x="785.58" y="735.5" >Scene_Map::UpdateGraphics</text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.01%)</title><rect x="881.5" y="501" width="0.1" height="15.0" fill="rgb(238,168,40)" rx="2" ry="2" />
<text  x="884.46" y="511.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="223.4" y="565" width="0.2" height="15.0" fill="rgb(206,96,43)" rx="2" ry="2" />
<text  x="226.45" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_getpid (2 samples, 0.03%)</title><rect x="28.3" y="837" width="0.4" height="15.0" fill="rgb(213,9,53)" rx="2" ry="2" />
<text  x="31.32" y="847.5" ></text>
</g>
<g >
<title>posix_get_monotonic_raw (1 samples, 0.01%)</title><rect x="1172.3" y="629" width="0.2" height="15.0" fill="rgb(217,165,24)" rx="2" ry="2" />
<text  x="1175.34" y="639.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="359.1" y="677" width="0.2" height="15.0" fill="rgb(205,106,17)" rx="2" ry="2" />
<text  x="362.15" y="687.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="657.0" y="293" width="0.1" height="15.0" fill="rgb(226,153,14)" rx="2" ry="2" />
<text  x="659.95" y="303.5" ></text>
</g>
<g >
<title>usb_led_activity (1 samples, 0.01%)</title><rect x="319.7" y="341" width="0.2" height="15.0" fill="rgb(207,31,41)" rx="2" ry="2" />
<text  x="322.69" y="351.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="657.0" y="261" width="0.1" height="15.0" fill="rgb(248,109,40)" rx="2" ry="2" />
<text  x="659.95" y="271.5" ></text>
</g>
<g >
<title>_mm_loadu_si128 (22 samples, 0.31%)</title><rect x="297.6" y="597" width="3.6" height="15.0" fill="rgb(244,183,47)" rx="2" ry="2" />
<text  x="300.57" y="607.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="775.5" y="629" width="0.1" height="15.0" fill="rgb(220,156,16)" rx="2" ry="2" />
<text  x="778.48" y="639.5" ></text>
</g>
<g >
<title>ReplaceName (9 samples, 0.13%)</title><rect x="707.5" y="645" width="1.5" height="15.0" fill="rgb(253,131,0)" rx="2" ry="2" />
<text  x="710.47" y="655.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (9 samples, 0.13%)</title><rect x="941.7" y="485" width="1.5" height="15.0" fill="rgb(224,158,24)" rx="2" ry="2" />
<text  x="944.72" y="495.5" ></text>
</g>
<g >
<title>xhci_irq (2 samples, 0.03%)</title><rect x="319.2" y="421" width="0.3" height="15.0" fill="rgb(211,204,39)" rx="2" ry="2" />
<text  x="322.20" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="368.2" y="613" width="0.2" height="15.0" fill="rgb(231,228,9)" rx="2" ry="2" />
<text  x="371.23" y="623.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.01%)</title><rect x="48.8" y="773" width="0.2" height="15.0" fill="rgb(253,21,50)" rx="2" ry="2" />
<text  x="51.79" y="783.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (5 samples, 0.07%)</title><rect x="374.3" y="709" width="0.9" height="15.0" fill="rgb(239,152,41)" rx="2" ry="2" />
<text  x="377.33" y="719.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="768.4" y="645" width="0.1" height="15.0" fill="rgb(236,125,19)" rx="2" ry="2" />
<text  x="771.38" y="655.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (2 samples, 0.03%)</title><rect x="985.0" y="629" width="0.3" height="15.0" fill="rgb(213,170,40)" rx="2" ry="2" />
<text  x="987.97" y="639.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="673.3" y="421" width="0.2" height="15.0" fill="rgb(249,165,18)" rx="2" ry="2" />
<text  x="676.30" y="431.5" ></text>
</g>
<g >
<title>_mm_unpackhi_epi8 (2 samples, 0.03%)</title><rect x="345.1" y="565" width="0.3" height="15.0" fill="rgb(217,187,14)" rx="2" ry="2" />
<text  x="348.11" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="988.1" y="629" width="0.3" height="15.0" fill="rgb(209,23,39)" rx="2" ry="2" />
<text  x="991.11" y="639.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.01%)</title><rect x="297.4" y="485" width="0.2" height="15.0" fill="rgb(215,134,39)" rx="2" ry="2" />
<text  x="300.41" y="495.5" ></text>
</g>
<g >
<title>__libc_recvmsg (7 samples, 0.10%)</title><rect x="994.9" y="549" width="1.1" height="15.0" fill="rgb(251,17,54)" rx="2" ry="2" />
<text  x="997.87" y="559.5" ></text>
</g>
<g >
<title>raise_softirq (1 samples, 0.01%)</title><rect x="694.3" y="421" width="0.1" height="15.0" fill="rgb(242,124,44)" rx="2" ry="2" />
<text  x="697.26" y="431.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="883.4" y="533" width="0.2" height="15.0" fill="rgb(224,228,31)" rx="2" ry="2" />
<text  x="886.44" y="543.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (70 samples, 0.98%)</title><rect x="33.3" y="693" width="11.5" height="15.0" fill="rgb(219,13,24)" rx="2" ry="2" />
<text  x="36.28" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (11 samples, 0.15%)</title><rect x="660.3" y="485" width="1.8" height="15.0" fill="rgb(224,117,37)" rx="2" ry="2" />
<text  x="663.25" y="495.5" ></text>
</g>
<g >
<title>SDL_CreateSurfaceOnStack (1 samples, 0.01%)</title><rect x="998.7" y="677" width="0.1" height="15.0" fill="rgb(224,121,18)" rx="2" ry="2" />
<text  x="1001.67" y="687.5" ></text>
</g>
<g >
<title>_mm_adds_epu8 (2 samples, 0.03%)</title><rect x="328.4" y="549" width="0.4" height="15.0" fill="rgb(216,83,48)" rx="2" ry="2" />
<text  x="331.44" y="559.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="968.6" y="565" width="0.2" height="15.0" fill="rgb(236,214,50)" rx="2" ry="2" />
<text  x="971.63" y="575.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="344.9" y="501" width="0.2" height="15.0" fill="rgb(233,108,35)" rx="2" ry="2" />
<text  x="347.95" y="511.5" ></text>
</g>
<g >
<title>SDL_RenderCopy_REAL (6 samples, 0.08%)</title><rect x="997.5" y="725" width="1.0" height="15.0" fill="rgb(236,19,22)" rx="2" ry="2" />
<text  x="1000.52" y="735.5" ></text>
</g>
<g >
<title>usb_hcd_submit_urb (1 samples, 0.01%)</title><rect x="472.7" y="373" width="0.2" height="15.0" fill="rgb(241,56,35)" rx="2" ry="2" />
<text  x="475.72" y="383.5" ></text>
</g>
<g >
<title>Sprite::GetZ (4 samples, 0.06%)</title><rect x="59.0" y="853" width="0.7" height="15.0" fill="rgb(251,20,5)" rx="2" ry="2" />
<text  x="62.03" y="863.5" ></text>
</g>
<g >
<title>retire_playback_urb (1 samples, 0.01%)</title><rect x="468.1" y="373" width="0.2" height="15.0" fill="rgb(231,74,48)" rx="2" ry="2" />
<text  x="471.10" y="383.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="404.9" y="661" width="0.1" height="15.0" fill="rgb(230,7,50)" rx="2" ry="2" />
<text  x="407.87" y="671.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.06%)</title><rect x="598.3" y="517" width="0.7" height="15.0" fill="rgb(212,35,27)" rx="2" ry="2" />
<text  x="601.35" y="527.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (2 samples, 0.03%)</title><rect x="849.4" y="485" width="0.4" height="15.0" fill="rgb(233,128,42)" rx="2" ry="2" />
<text  x="852.44" y="495.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="121.8" y="693" width="0.1" height="15.0" fill="rgb(236,36,5)" rx="2" ry="2" />
<text  x="124.76" y="703.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (11 samples, 0.15%)</title><rect x="83.6" y="757" width="1.8" height="15.0" fill="rgb(249,67,39)" rx="2" ry="2" />
<text  x="86.63" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (2 samples, 0.03%)</title><rect x="632.9" y="373" width="0.3" height="15.0" fill="rgb(233,33,49)" rx="2" ry="2" />
<text  x="635.85" y="383.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (763 samples, 10.67%)</title><rect x="587.5" y="661" width="125.9" height="15.0" fill="rgb(212,99,43)" rx="2" ry="2" />
<text  x="590.45" y="671.5" >Game_Interprete..</text>
</g>
<g >
<title>usb_hcd_get_frame_number (1 samples, 0.01%)</title><rect x="539.4" y="325" width="0.2" height="15.0" fill="rgb(221,88,7)" rx="2" ry="2" />
<text  x="542.42" y="335.5" ></text>
</g>
<g >
<title>Game_Picture::Update (1 samples, 0.01%)</title><rect x="776.0" y="709" width="0.1" height="15.0" fill="rgb(234,120,17)" rx="2" ry="2" />
<text  x="778.98" y="719.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.01%)</title><rect x="582.2" y="469" width="0.1" height="15.0" fill="rgb(206,104,30)" rx="2" ry="2" />
<text  x="585.17" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.21%)</title><rect x="375.2" y="709" width="2.4" height="15.0" fill="rgb(232,146,14)" rx="2" ry="2" />
<text  x="378.16" y="719.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="52.3" y="677" width="0.1" height="15.0" fill="rgb(218,71,7)" rx="2" ry="2" />
<text  x="55.26" y="687.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (10 samples, 0.14%)</title><rect x="369.1" y="597" width="1.6" height="15.0" fill="rgb(245,119,51)" rx="2" ry="2" />
<text  x="372.05" y="607.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="375.0" y="549" width="0.2" height="15.0" fill="rgb(223,82,46)" rx="2" ry="2" />
<text  x="377.99" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;RPG::EventCommand&gt;::allocate (1 samples, 0.01%)</title><rect x="439.2" y="565" width="0.2" height="15.0" fill="rgb(211,166,20)" rx="2" ry="2" />
<text  x="442.21" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="373.0" y="613" width="0.2" height="15.0" fill="rgb(225,150,46)" rx="2" ry="2" />
<text  x="376.01" y="623.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (92 samples, 1.29%)</title><rect x="31.1" y="773" width="15.2" height="15.0" fill="rgb(228,200,34)" rx="2" ry="2" />
<text  x="34.13" y="783.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.01%)</title><rect x="64.0" y="853" width="0.1" height="15.0" fill="rgb(251,111,38)" rx="2" ry="2" />
<text  x="66.98" y="863.5" ></text>
</g>
<g >
<title>_mm_unpacklo_epi8 (17 samples, 0.24%)</title><rect x="264.6" y="597" width="2.8" height="15.0" fill="rgb(248,111,45)" rx="2" ry="2" />
<text  x="267.56" y="607.5" ></text>
</g>
<g >
<title>usb_hcd_get_frame_number (1 samples, 0.01%)</title><rect x="571.3" y="341" width="0.1" height="15.0" fill="rgb(225,116,54)" rx="2" ry="2" />
<text  x="574.28" y="351.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="290.0" y="581" width="0.1" height="15.0" fill="rgb(242,139,15)" rx="2" ry="2" />
<text  x="292.98" y="591.5" ></text>
</g>
<g >
<title>__libc_recvmsg (7 samples, 0.10%)</title><rect x="994.9" y="533" width="1.1" height="15.0" fill="rgb(240,24,5)" rx="2" ry="2" />
<text  x="997.87" y="543.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="404.9" y="581" width="0.1" height="15.0" fill="rgb(254,117,29)" rx="2" ry="2" />
<text  x="407.87" y="591.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="756.5" y="613" width="0.2" height="15.0" fill="rgb(248,125,22)" rx="2" ry="2" />
<text  x="759.50" y="623.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::~_Head_base (1 samples, 0.01%)</title><rect x="657.9" y="485" width="0.2" height="15.0" fill="rgb(226,114,11)" rx="2" ry="2" />
<text  x="660.94" y="495.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="223.4" y="453" width="0.2" height="15.0" fill="rgb(239,100,0)" rx="2" ry="2" />
<text  x="226.45" y="463.5" ></text>
</g>
<g >
<title>operator new@plt (2 samples, 0.03%)</title><rect x="621.3" y="437" width="0.3" height="15.0" fill="rgb(228,33,14)" rx="2" ry="2" />
<text  x="624.30" y="447.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.01%)</title><rect x="993.2" y="661" width="0.2" height="15.0" fill="rgb(238,168,43)" rx="2" ry="2" />
<text  x="996.22" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="1172.7" y="661" width="0.1" height="15.0" fill="rgb(240,223,25)" rx="2" ry="2" />
<text  x="1175.67" y="671.5" ></text>
</g>
<g >
<title>usb_submit_urb (2 samples, 0.03%)</title><rect x="1162.4" y="389" width="0.4" height="15.0" fill="rgb(205,199,34)" rx="2" ry="2" />
<text  x="1165.43" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.01%)</title><rect x="600.3" y="549" width="0.2" height="15.0" fill="rgb(253,74,54)" rx="2" ry="2" />
<text  x="603.33" y="559.5" ></text>
</g>
<g >
<title>_mm_unpackhi_epi8 (7 samples, 0.10%)</title><rect x="892.4" y="581" width="1.1" height="15.0" fill="rgb(207,15,50)" rx="2" ry="2" />
<text  x="895.36" y="591.5" ></text>
</g>
<g >
<title>insert_work (1 samples, 0.01%)</title><rect x="881.5" y="437" width="0.1" height="15.0" fill="rgb(242,133,37)" rx="2" ry="2" />
<text  x="884.46" y="447.5" ></text>
</g>
<g >
<title>_pixman_image_validate (3 samples, 0.04%)</title><rect x="62.8" y="853" width="0.5" height="15.0" fill="rgb(205,3,6)" rx="2" ry="2" />
<text  x="65.83" y="863.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (194 samples, 2.71%)</title><rect x="378.5" y="709" width="32.0" height="15.0" fill="rgb(247,18,27)" rx="2" ry="2" />
<text  x="381.46" y="719.5" >__..</text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.01%)</title><rect x="881.5" y="389" width="0.1" height="15.0" fill="rgb(231,222,16)" rx="2" ry="2" />
<text  x="884.46" y="399.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.01%)</title><rect x="673.1" y="421" width="0.2" height="15.0" fill="rgb(216,179,49)" rx="2" ry="2" />
<text  x="676.13" y="431.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="51.1" y="821" width="0.2" height="15.0" fill="rgb(240,79,9)" rx="2" ry="2" />
<text  x="54.11" y="831.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::begin (2 samples, 0.03%)</title><rect x="160.7" y="725" width="0.3" height="15.0" fill="rgb(212,217,27)" rx="2" ry="2" />
<text  x="163.72" y="735.5" ></text>
</g>
<g >
<title>sse2_composite_over_8888_n_8888 (1 samples, 0.01%)</title><rect x="132.5" y="853" width="0.2" height="15.0" fill="rgb(233,102,23)" rx="2" ry="2" />
<text  x="135.49" y="863.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.01%)</title><rect x="352.2" y="629" width="0.2" height="15.0" fill="rgb(252,169,25)" rx="2" ry="2" />
<text  x="355.21" y="639.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (9 samples, 0.13%)</title><rect x="84.0" y="741" width="1.4" height="15.0" fill="rgb(254,108,3)" rx="2" ry="2" />
<text  x="86.96" y="751.5" ></text>
</g>
<g >
<title>over_2x128 (7 samples, 0.10%)</title><rect x="328.4" y="565" width="1.2" height="15.0" fill="rgb(242,159,15)" rx="2" ry="2" />
<text  x="331.44" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream (1 samples, 0.01%)</title><rect x="708.6" y="629" width="0.2" height="15.0" fill="rgb(213,202,47)" rx="2" ry="2" />
<text  x="711.62" y="639.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.01%)</title><rect x="60.7" y="853" width="0.1" height="15.0" fill="rgb(228,210,54)" rx="2" ry="2" />
<text  x="63.68" y="863.5" ></text>
</g>
<g >
<title>Game_Screen::GetFlashColor (1 samples, 0.01%)</title><rect x="985.6" y="693" width="0.2" height="15.0" fill="rgb(242,171,47)" rx="2" ry="2" />
<text  x="988.63" y="703.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.01%)</title><rect x="375.0" y="437" width="0.2" height="15.0" fill="rgb(219,27,34)" rx="2" ry="2" />
<text  x="377.99" y="447.5" ></text>
</g>
<g >
<title>xhci_queue_isoc_tx_prepare (1 samples, 0.01%)</title><rect x="782.4" y="373" width="0.2" height="15.0" fill="rgb(221,117,28)" rx="2" ry="2" />
<text  x="785.41" y="383.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="932.0" y="309" width="0.1" height="15.0" fill="rgb(208,109,47)" rx="2" ry="2" />
<text  x="934.98" y="319.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="983.0" y="549" width="0.2" height="15.0" fill="rgb(229,191,3)" rx="2" ry="2" />
<text  x="985.99" y="559.5" ></text>
</g>
<g >
<title>LoadBitmap (1 samples, 0.01%)</title><rect x="52.3" y="869" width="0.1" height="15.0" fill="rgb(226,187,13)" rx="2" ry="2" />
<text  x="55.26" y="879.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash (9 samples, 0.13%)</title><rect x="628.9" y="437" width="1.5" height="15.0" fill="rgb(242,98,51)" rx="2" ry="2" />
<text  x="631.89" y="447.5" ></text>
</g>
<g >
<title>handle_edge_irq (2 samples, 0.03%)</title><rect x="155.9" y="661" width="0.4" height="15.0" fill="rgb(208,107,43)" rx="2" ry="2" />
<text  x="158.93" y="671.5" ></text>
</g>
<g >
<title>FileFinder::FindDefault (1 samples, 0.01%)</title><rect x="587.3" y="549" width="0.2" height="15.0" fill="rgb(249,29,49)" rx="2" ry="2" />
<text  x="590.29" y="559.5" ></text>
</g>
<g >
<title>_mm_adds_epu8 (12 samples, 0.17%)</title><rect x="881.6" y="581" width="2.0" height="15.0" fill="rgb(210,58,52)" rx="2" ry="2" />
<text  x="884.63" y="591.5" ></text>
</g>
<g >
<title>_mm_store_si128 (2 samples, 0.03%)</title><rect x="290.1" y="597" width="0.4" height="15.0" fill="rgb(221,198,36)" rx="2" ry="2" />
<text  x="293.14" y="607.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (170 samples, 2.38%)</title><rect x="666.2" y="517" width="28.1" height="15.0" fill="rgb(247,201,48)" rx="2" ry="2" />
<text  x="669.20" y="527.5" >s..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (2 samples, 0.03%)</title><rect x="599.8" y="533" width="0.4" height="15.0" fill="rgb(229,120,35)" rx="2" ry="2" />
<text  x="602.83" y="543.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6 samples, 0.08%)</title><rect x="78.7" y="853" width="1.0" height="15.0" fill="rgb(233,102,52)" rx="2" ry="2" />
<text  x="81.67" y="863.5" ></text>
</g>
<g >
<title>irq_entries_start (4 samples, 0.06%)</title><rect x="1189.2" y="869" width="0.6" height="15.0" fill="rgb(250,26,19)" rx="2" ry="2" />
<text  x="1192.17" y="879.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="614.2" y="581" width="0.2" height="15.0" fill="rgb(224,173,34)" rx="2" ry="2" />
<text  x="617.20" y="591.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (1 samples, 0.01%)</title><rect x="587.3" y="629" width="0.2" height="15.0" fill="rgb(214,5,9)" rx="2" ry="2" />
<text  x="590.29" y="639.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="694.3" y="549" width="0.1" height="15.0" fill="rgb(216,88,4)" rx="2" ry="2" />
<text  x="697.26" y="559.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="171.8" y="597" width="0.1" height="15.0" fill="rgb(224,45,17)" rx="2" ry="2" />
<text  x="174.78" y="607.5" ></text>
</g>
<g >
<title>malloc_consolidate (28 samples, 0.39%)</title><rect x="685.3" y="389" width="4.7" height="15.0" fill="rgb(242,203,53)" rx="2" ry="2" />
<text  x="688.35" y="399.5" ></text>
</g>
<g >
<title>none_of&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int&gt; &gt;, Input::UiSource::Update()::&lt;lambda(int)&gt; &gt; (2 samples, 0.03%)</title><rect x="373.8" y="693" width="0.4" height="15.0" fill="rgb(216,71,4)" rx="2" ry="2" />
<text  x="376.84" y="703.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.01%)</title><rect x="48.0" y="741" width="0.1" height="15.0" fill="rgb(223,155,28)" rx="2" ry="2" />
<text  x="50.97" y="751.5" ></text>
</g>
<g >
<title>handle_irq_event (2 samples, 0.03%)</title><rect x="155.9" y="645" width="0.4" height="15.0" fill="rgb(250,40,23)" rx="2" ry="2" />
<text  x="158.93" y="655.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="319.2" y="549" width="0.3" height="15.0" fill="rgb(240,16,38)" rx="2" ry="2" />
<text  x="322.20" y="559.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (3,497 samples, 48.92%)</title><rect x="410.5" y="741" width="577.3" height="15.0" fill="rgb(226,186,17)" rx="2" ry="2" />
<text  x="413.49" y="751.5" >Scene_Map::UpdateStage1</text>
</g>
<g >
<title>Game_Screen::UpdateGraphics (1,231 samples, 17.22%)</title><rect x="782.6" y="709" width="203.2" height="15.0" fill="rgb(230,70,45)" rx="2" ry="2" />
<text  x="785.58" y="719.5" >Game_Screen::UpdateGraphics</text>
</g>
<g >
<title>handle_irq_event_percpu (2 samples, 0.03%)</title><rect x="155.9" y="629" width="0.4" height="15.0" fill="rgb(211,13,43)" rx="2" ry="2" />
<text  x="158.93" y="639.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (2 samples, 0.03%)</title><rect x="849.4" y="469" width="0.4" height="15.0" fill="rgb(211,190,31)" rx="2" ry="2" />
<text  x="852.44" y="479.5" ></text>
</g>
<g >
<title>Sprite::SetTone (2 samples, 0.03%)</title><rect x="969.1" y="677" width="0.4" height="15.0" fill="rgb(228,154,54)" rx="2" ry="2" />
<text  x="972.12" y="687.5" ></text>
</g>
<g >
<title>handle_irq (2 samples, 0.03%)</title><rect x="155.9" y="677" width="0.4" height="15.0" fill="rgb(254,152,31)" rx="2" ry="2" />
<text  x="158.93" y="687.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.01%)</title><rect x="708.5" y="533" width="0.1" height="15.0" fill="rgb(238,17,38)" rx="2" ry="2" />
<text  x="711.46" y="543.5" ></text>
</g>
<g >
<title>_IO_new_file_write (1 samples, 0.01%)</title><rect x="587.3" y="389" width="0.2" height="15.0" fill="rgb(219,100,9)" rx="2" ry="2" />
<text  x="590.29" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_write (1 samples, 0.01%)</title><rect x="587.3" y="357" width="0.2" height="15.0" fill="rgb(227,141,6)" rx="2" ry="2" />
<text  x="590.29" y="367.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="782.4" y="677" width="0.2" height="15.0" fill="rgb(207,8,26)" rx="2" ry="2" />
<text  x="785.41" y="687.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="570.3" y="581" width="0.2" height="15.0" fill="rgb(211,229,51)" rx="2" ry="2" />
<text  x="573.29" y="591.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="756.5" y="645" width="0.2" height="15.0" fill="rgb(223,109,29)" rx="2" ry="2" />
<text  x="759.50" y="655.5" ></text>
</g>
<g >
<title>Game_Picture::Update (21 samples, 0.29%)</title><rect x="779.1" y="693" width="3.5" height="15.0" fill="rgb(213,18,39)" rx="2" ry="2" />
<text  x="782.11" y="703.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="121.8" y="629" width="0.1" height="15.0" fill="rgb(227,59,28)" rx="2" ry="2" />
<text  x="124.76" y="639.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="372.7" y="597" width="0.1" height="15.0" fill="rgb(227,100,26)" rx="2" ry="2" />
<text  x="375.68" y="607.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.01%)</title><rect x="985.8" y="661" width="0.2" height="15.0" fill="rgb(214,175,11)" rx="2" ry="2" />
<text  x="988.79" y="671.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.01%)</title><rect x="995.0" y="389" width="0.2" height="15.0" fill="rgb(232,104,53)" rx="2" ry="2" />
<text  x="998.04" y="399.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="452.1" y="581" width="0.2" height="15.0" fill="rgb(243,178,44)" rx="2" ry="2" />
<text  x="455.09" y="591.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (8 samples, 0.11%)</title><rect x="667.2" y="485" width="1.3" height="15.0" fill="rgb(240,220,42)" rx="2" ry="2" />
<text  x="670.19" y="495.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (12 samples, 0.17%)</title><rect x="470.7" y="645" width="2.0" height="15.0" fill="rgb(248,64,11)" rx="2" ry="2" />
<text  x="473.74" y="655.5" ></text>
</g>
<g >
<title>Sprite::GetZ (2 samples, 0.03%)</title><rect x="362.1" y="709" width="0.3" height="15.0" fill="rgb(246,152,11)" rx="2" ry="2" />
<text  x="365.12" y="719.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="983.0" y="645" width="0.2" height="15.0" fill="rgb(224,106,16)" rx="2" ry="2" />
<text  x="985.99" y="655.5" ></text>
</g>
<g >
<title>handle_irq_event (4 samples, 0.06%)</title><rect x="538.9" y="565" width="0.7" height="15.0" fill="rgb(253,182,18)" rx="2" ry="2" />
<text  x="541.92" y="575.5" ></text>
</g>
<g >
<title>ktime_get_raw_ts64 (1 samples, 0.01%)</title><rect x="399.4" y="645" width="0.2" height="15.0" fill="rgb(219,218,54)" rx="2" ry="2" />
<text  x="402.43" y="655.5" ></text>
</g>
<g >
<title>_int_free (2 samples, 0.03%)</title><rect x="351.2" y="613" width="0.4" height="15.0" fill="rgb(228,35,14)" rx="2" ry="2" />
<text  x="354.22" y="623.5" ></text>
</g>
<g >
<title>sock_recvmsg (1 samples, 0.01%)</title><rect x="989.4" y="453" width="0.2" height="15.0" fill="rgb(231,73,46)" rx="2" ry="2" />
<text  x="992.43" y="463.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="614.2" y="485" width="0.2" height="15.0" fill="rgb(232,182,26)" rx="2" ry="2" />
<text  x="617.20" y="495.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="1171.8" y="469" width="0.2" height="15.0" fill="rgb(237,4,13)" rx="2" ry="2" />
<text  x="1174.84" y="479.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (22 samples, 0.31%)</title><rect x="700.2" y="565" width="3.6" height="15.0" fill="rgb(230,150,53)" rx="2" ry="2" />
<text  x="703.20" y="575.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="239.1" y="485" width="0.2" height="15.0" fill="rgb(248,13,39)" rx="2" ry="2" />
<text  x="242.13" y="495.5" ></text>
</g>
<g >
<title>usb_hcd_submit_urb (1 samples, 0.01%)</title><rect x="888.9" y="325" width="0.2" height="15.0" fill="rgb(225,107,21)" rx="2" ry="2" />
<text  x="891.89" y="335.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (1 samples, 0.01%)</title><rect x="990.7" y="485" width="0.2" height="15.0" fill="rgb(230,94,39)" rx="2" ry="2" />
<text  x="993.75" y="495.5" ></text>
</g>
<g >
<title>Input::Update (10 samples, 0.14%)</title><rect x="373.5" y="741" width="1.7" height="15.0" fill="rgb(237,90,40)" rx="2" ry="2" />
<text  x="376.51" y="751.5" ></text>
</g>
<g >
<title>_pixman_image_fini (4 samples, 0.06%)</title><rect x="62.2" y="837" width="0.6" height="15.0" fill="rgb(213,35,53)" rx="2" ry="2" />
<text  x="65.17" y="847.5" ></text>
</g>
<g >
<title>reweight_entity (1 samples, 0.01%)</title><rect x="239.1" y="405" width="0.2" height="15.0" fill="rgb(235,184,48)" rx="2" ry="2" />
<text  x="242.13" y="415.5" ></text>
</g>
<g >
<title>scaled_nearest_scanline_sse2_8888_n_8888_OVER (101 samples, 1.41%)</title><rect x="332.4" y="597" width="16.7" height="15.0" fill="rgb(221,66,23)" rx="2" ry="2" />
<text  x="335.40" y="607.5" ></text>
</g>
<g >
<title>memcmp@plt (1 samples, 0.01%)</title><rect x="642.8" y="357" width="0.1" height="15.0" fill="rgb(213,167,25)" rx="2" ry="2" />
<text  x="645.76" y="367.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1186.0" y="869" width="0.2" height="15.0" fill="rgb(253,145,2)" rx="2" ry="2" />
<text  x="1189.04" y="879.5" ></text>
</g>
<g >
<title>__exchange_and_add (3 samples, 0.04%)</title><rect x="668.7" y="453" width="0.5" height="15.0" fill="rgb(236,89,24)" rx="2" ry="2" />
<text  x="671.67" y="463.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="52.3" y="613" width="0.1" height="15.0" fill="rgb(241,140,16)" rx="2" ry="2" />
<text  x="55.26" y="623.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (5 samples, 0.07%)</title><rect x="653.5" y="485" width="0.8" height="15.0" fill="rgb(242,150,14)" rx="2" ry="2" />
<text  x="656.49" y="495.5" ></text>
</g>
<g >
<title>_mm_set_epi32 (6 samples, 0.08%)</title><rect x="340.8" y="581" width="1.0" height="15.0" fill="rgb(236,200,29)" rx="2" ry="2" />
<text  x="343.82" y="591.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="689.8" y="277" width="0.2" height="15.0" fill="rgb(228,82,33)" rx="2" ry="2" />
<text  x="692.80" y="287.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="756.5" y="629" width="0.2" height="15.0" fill="rgb(231,195,52)" rx="2" ry="2" />
<text  x="759.50" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (9 samples, 0.13%)</title><rect x="698.4" y="629" width="1.5" height="15.0" fill="rgb(224,8,4)" rx="2" ry="2" />
<text  x="701.39" y="639.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="344.9" y="453" width="0.2" height="15.0" fill="rgb(217,228,23)" rx="2" ry="2" />
<text  x="347.95" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (16 samples, 0.22%)</title><rect x="655.3" y="405" width="2.6" height="15.0" fill="rgb(215,174,26)" rx="2" ry="2" />
<text  x="658.30" y="415.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="605.8" y="469" width="0.1" height="15.0" fill="rgb(249,15,14)" rx="2" ry="2" />
<text  x="608.78" y="479.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="289.3" y="565" width="0.2" height="15.0" fill="rgb(236,86,17)" rx="2" ry="2" />
<text  x="292.32" y="575.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="775.5" y="597" width="0.1" height="15.0" fill="rgb(206,42,45)" rx="2" ry="2" />
<text  x="778.48" y="607.5" ></text>
</g>
<g >
<title>Cache::System (1 samples, 0.01%)</title><rect x="987.1" y="613" width="0.2" height="15.0" fill="rgb(212,226,26)" rx="2" ry="2" />
<text  x="990.12" y="623.5" ></text>
</g>
<g >
<title>std::basic_iostream&lt;char, std::char_traits&lt;char&gt; &gt;::basic_iostream (6 samples, 0.08%)</title><rect x="707.6" y="613" width="1.0" height="15.0" fill="rgb(236,224,16)" rx="2" ry="2" />
<text  x="710.63" y="623.5" ></text>
</g>
<g >
<title>handle_irq (10 samples, 0.14%)</title><rect x="1161.1" y="613" width="1.7" height="15.0" fill="rgb(231,9,1)" rx="2" ry="2" />
<text  x="1164.11" y="623.5" ></text>
</g>
<g >
<title>unix_stream_read_generic (1 samples, 0.01%)</title><rect x="989.4" y="421" width="0.2" height="15.0" fill="rgb(207,37,50)" rx="2" ry="2" />
<text  x="992.43" y="431.5" ></text>
</g>
<g >
<title>is_zero (23 samples, 0.32%)</title><rect x="256.1" y="613" width="3.8" height="15.0" fill="rgb(249,9,46)" rx="2" ry="2" />
<text  x="259.14" y="623.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.01%)</title><rect x="377.3" y="453" width="0.2" height="15.0" fill="rgb(230,95,17)" rx="2" ry="2" />
<text  x="380.31" y="463.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="319.5" y="437" width="0.2" height="15.0" fill="rgb(237,160,2)" rx="2" ry="2" />
<text  x="322.53" y="447.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (4 samples, 0.06%)</title><rect x="454.6" y="613" width="0.6" height="15.0" fill="rgb(246,134,43)" rx="2" ry="2" />
<text  x="457.56" y="623.5" ></text>
</g>
<g >
<title>_mm_mulhi_epu16 (1 samples, 0.01%)</title><rect x="342.5" y="549" width="0.1" height="15.0" fill="rgb(230,132,38)" rx="2" ry="2" />
<text  x="345.47" y="559.5" ></text>
</g>
<g >
<title>_pixman_compute_composite_region32 (1 samples, 0.01%)</title><rect x="305.5" y="597" width="0.2" height="15.0" fill="rgb(245,123,1)" rx="2" ry="2" />
<text  x="308.50" y="607.5" ></text>
</g>
<g >
<title>pixman_image_create_solid_fill (5 samples, 0.07%)</title><rect x="349.6" y="629" width="0.8" height="15.0" fill="rgb(231,155,25)" rx="2" ry="2" />
<text  x="352.57" y="639.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="255.8" y="565" width="0.3" height="15.0" fill="rgb(230,96,13)" rx="2" ry="2" />
<text  x="258.81" y="575.5" ></text>
</g>
<g >
<title>__GI___libc_free (2 samples, 0.03%)</title><rect x="704.3" y="549" width="0.4" height="15.0" fill="rgb(216,62,29)" rx="2" ry="2" />
<text  x="707.33" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (2 samples, 0.03%)</title><rect x="66.8" y="853" width="0.3" height="15.0" fill="rgb(228,181,33)" rx="2" ry="2" />
<text  x="69.79" y="863.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="835.1" y="485" width="0.1" height="15.0" fill="rgb(235,90,32)" rx="2" ry="2" />
<text  x="838.08" y="495.5" ></text>
</g>
<g >
<title>compute_transformed_extents (70 samples, 0.98%)</title><rect x="308.3" y="597" width="11.6" height="15.0" fill="rgb(235,204,7)" rx="2" ry="2" />
<text  x="311.30" y="607.5" ></text>
</g>
<g >
<title>strlen@plt (2 samples, 0.03%)</title><rect x="663.1" y="501" width="0.3" height="15.0" fill="rgb(223,206,31)" rx="2" ry="2" />
<text  x="666.06" y="511.5" ></text>
</g>
<g >
<title>perf_event_wakeup (1 samples, 0.01%)</title><rect x="377.3" y="501" width="0.2" height="15.0" fill="rgb(221,92,27)" rx="2" ry="2" />
<text  x="380.31" y="511.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.01%)</title><rect x="658.1" y="373" width="0.2" height="15.0" fill="rgb(240,83,46)" rx="2" ry="2" />
<text  x="661.11" y="383.5" ></text>
</g>
<g >
<title>apic_ack_irq (1 samples, 0.01%)</title><rect x="264.4" y="501" width="0.2" height="15.0" fill="rgb(215,101,43)" rx="2" ry="2" />
<text  x="267.39" y="511.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="571.3" y="501" width="0.1" height="15.0" fill="rgb(233,51,18)" rx="2" ry="2" />
<text  x="574.28" y="511.5" ></text>
</g>
<g >
<title>Game_Picture::ShowParams::ShowParams (1 samples, 0.01%)</title><rect x="704.2" y="645" width="0.1" height="15.0" fill="rgb(243,208,2)" rx="2" ry="2" />
<text  x="707.17" y="655.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="782.4" y="565" width="0.2" height="15.0" fill="rgb(221,99,29)" rx="2" ry="2" />
<text  x="785.41" y="575.5" ></text>
</g>
<g >
<title>sse2_composite_over_8888_8888 (1 samples, 0.01%)</title><rect x="364.1" y="645" width="0.2" height="15.0" fill="rgb(213,20,35)" rx="2" ry="2" />
<text  x="367.10" y="655.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="989.3" y="565" width="0.1" height="15.0" fill="rgb(254,5,48)" rx="2" ry="2" />
<text  x="992.26" y="575.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="239.1" y="517" width="0.2" height="15.0" fill="rgb(208,134,19)" rx="2" ry="2" />
<text  x="242.13" y="527.5" ></text>
</g>
<g >
<title>SDL_PollEvent (1 samples, 0.01%)</title><rect x="987.8" y="725" width="0.1" height="15.0" fill="rgb(211,115,15)" rx="2" ry="2" />
<text  x="990.78" y="735.5" ></text>
</g>
<g >
<title>syscall (1 samples, 0.01%)</title><rect x="79.8" y="821" width="0.2" height="15.0" fill="rgb(220,72,51)" rx="2" ry="2" />
<text  x="82.83" y="831.5" ></text>
</g>
<g >
<title>handle_irq_event (2 samples, 0.03%)</title><rect x="703.8" y="501" width="0.4" height="15.0" fill="rgb(222,172,10)" rx="2" ry="2" />
<text  x="706.84" y="511.5" ></text>
</g>
<g >
<title>_mm_mulhi_epu16 (1 samples, 0.01%)</title><rect x="223.1" y="549" width="0.2" height="15.0" fill="rgb(226,216,46)" rx="2" ry="2" />
<text  x="226.12" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (1 samples, 0.01%)</title><rect x="52.3" y="725" width="0.1" height="15.0" fill="rgb(226,94,25)" rx="2" ry="2" />
<text  x="55.26" y="735.5" ></text>
</g>
<g >
<title>negate_2x128 (5 samples, 0.07%)</title><rect x="239.3" y="581" width="0.8" height="15.0" fill="rgb(247,113,49)" rx="2" ry="2" />
<text  x="242.30" y="591.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (6 samples, 0.08%)</title><rect x="661.1" y="421" width="1.0" height="15.0" fill="rgb(251,13,26)" rx="2" ry="2" />
<text  x="664.08" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (3 samples, 0.04%)</title><rect x="657.4" y="357" width="0.5" height="15.0" fill="rgb(246,15,10)" rx="2" ry="2" />
<text  x="660.45" y="367.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="272.3" y="533" width="0.2" height="15.0" fill="rgb(209,164,16)" rx="2" ry="2" />
<text  x="275.31" y="543.5" ></text>
</g>
<g >
<title>_pixman_image_fini (2 samples, 0.03%)</title><rect x="351.9" y="597" width="0.3" height="15.0" fill="rgb(231,69,51)" rx="2" ry="2" />
<text  x="354.88" y="607.5" ></text>
</g>
<g >
<title>select_task_rq_fair (3 samples, 0.04%)</title><rect x="49.3" y="677" width="0.5" height="15.0" fill="rgb(245,100,11)" rx="2" ry="2" />
<text  x="52.29" y="687.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="452.1" y="597" width="0.2" height="15.0" fill="rgb(250,47,17)" rx="2" ry="2" />
<text  x="455.09" y="607.5" ></text>
</g>
<g >
<title>usb_get_current_frame_number (1 samples, 0.01%)</title><rect x="539.4" y="341" width="0.2" height="15.0" fill="rgb(214,158,26)" rx="2" ry="2" />
<text  x="542.42" y="351.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (5 samples, 0.07%)</title><rect x="967.6" y="581" width="0.9" height="15.0" fill="rgb(246,188,47)" rx="2" ry="2" />
<text  x="970.64" y="591.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="590.9" y="597" width="0.2" height="15.0" fill="rgb(233,42,42)" rx="2" ry="2" />
<text  x="593.92" y="607.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="1185.0" y="597" width="0.2" height="15.0" fill="rgb(234,35,37)" rx="2" ry="2" />
<text  x="1188.05" y="607.5" ></text>
</g>
<g >
<title>_mm_unpacklo_epi8 (3 samples, 0.04%)</title><rect x="224.1" y="565" width="0.5" height="15.0" fill="rgb(236,227,48)" rx="2" ry="2" />
<text  x="227.11" y="575.5" ></text>
</g>
<g >
<title>xhci_msi_irq (2 samples, 0.03%)</title><rect x="202.5" y="437" width="0.3" height="15.0" fill="rgb(252,64,11)" rx="2" ry="2" />
<text  x="205.48" y="447.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="709.0" y="629" width="0.1" height="15.0" fill="rgb(225,112,23)" rx="2" ry="2" />
<text  x="711.95" y="639.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="605.8" y="437" width="0.1" height="15.0" fill="rgb(250,66,51)" rx="2" ry="2" />
<text  x="608.78" y="447.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (2 samples, 0.03%)</title><rect x="725.6" y="549" width="0.4" height="15.0" fill="rgb(238,121,47)" rx="2" ry="2" />
<text  x="728.63" y="559.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="276.6" y="389" width="0.2" height="15.0" fill="rgb(251,212,4)" rx="2" ry="2" />
<text  x="279.61" y="399.5" ></text>
</g>
<g >
<title>_pixman_image_allocate (1 samples, 0.01%)</title><rect x="74.9" y="853" width="0.1" height="15.0" fill="rgb(224,192,13)" rx="2" ry="2" />
<text  x="77.88" y="863.5" ></text>
</g>
<g >
<title>expand_alpha_2x128 (3 samples, 0.04%)</title><rect x="327.6" y="565" width="0.5" height="15.0" fill="rgb(227,154,38)" rx="2" ry="2" />
<text  x="330.62" y="575.5" ></text>
</g>
<g >
<title>std::_Temporary_buffer&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable*&gt;::~_Temporary_buffer (1 samples, 0.01%)</title><rect x="368.4" y="677" width="0.2" height="15.0" fill="rgb(224,27,33)" rx="2" ry="2" />
<text  x="371.39" y="687.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="775.5" y="565" width="0.1" height="15.0" fill="rgb(225,76,10)" rx="2" ry="2" />
<text  x="778.48" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (1 samples, 0.01%)</title><rect x="985.5" y="677" width="0.1" height="15.0" fill="rgb(234,217,44)" rx="2" ry="2" />
<text  x="988.46" y="687.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="694.3" y="485" width="0.1" height="15.0" fill="rgb(230,72,39)" rx="2" ry="2" />
<text  x="697.26" y="495.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="782.4" y="661" width="0.2" height="15.0" fill="rgb(239,196,23)" rx="2" ry="2" />
<text  x="785.41" y="671.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (8 samples, 0.11%)</title><rect x="994.7" y="597" width="1.3" height="15.0" fill="rgb(250,204,26)" rx="2" ry="2" />
<text  x="997.71" y="607.5" ></text>
</g>
<g >
<title>_mm_store_si128 (18 samples, 0.25%)</title><rect x="889.1" y="581" width="2.9" height="15.0" fill="rgb(233,205,9)" rx="2" ry="2" />
<text  x="892.06" y="591.5" ></text>
</g>
<g >
<title>sock_recvmsg (2 samples, 0.03%)</title><rect x="995.4" y="437" width="0.3" height="15.0" fill="rgb(237,17,32)" rx="2" ry="2" />
<text  x="998.37" y="447.5" ></text>
</g>
<g >
<title>_mm_adds_epu16 (8 samples, 0.11%)</title><rect x="885.1" y="565" width="1.3" height="15.0" fill="rgb(222,100,53)" rx="2" ry="2" />
<text  x="888.10" y="575.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.01%)</title><rect x="581.5" y="645" width="0.2" height="15.0" fill="rgb(251,133,35)" rx="2" ry="2" />
<text  x="584.51" y="655.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="725.5" y="645" width="0.1" height="15.0" fill="rgb(233,44,38)" rx="2" ry="2" />
<text  x="728.46" y="655.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="467.8" y="565" width="0.1" height="15.0" fill="rgb(239,104,54)" rx="2" ry="2" />
<text  x="470.77" y="575.5" ></text>
</g>
<g >
<title>handle_edge_irq (2 samples, 0.03%)</title><rect x="467.9" y="581" width="0.4" height="15.0" fill="rgb(225,72,51)" rx="2" ry="2" />
<text  x="470.94" y="591.5" ></text>
</g>
<g >
<title>expand_alpha_2x128 (4 samples, 0.06%)</title><rect x="828.3" y="597" width="0.7" height="15.0" fill="rgb(220,164,11)" rx="2" ry="2" />
<text  x="831.31" y="607.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="572.9" y="613" width="0.2" height="15.0" fill="rgb(231,121,22)" rx="2" ry="2" />
<text  x="575.93" y="623.5" ></text>
</g>
<g >
<title>Game_Screen::GetPicture (3 samples, 0.04%)</title><rect x="583.5" y="645" width="0.5" height="15.0" fill="rgb(237,10,11)" rx="2" ry="2" />
<text  x="586.49" y="655.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (8 samples, 0.11%)</title><rect x="591.4" y="629" width="1.3" height="15.0" fill="rgb(242,181,38)" rx="2" ry="2" />
<text  x="594.42" y="639.5" ></text>
</g>
<g >
<title>__GI___poll (1 samples, 0.01%)</title><rect x="994.5" y="613" width="0.2" height="15.0" fill="rgb(249,36,3)" rx="2" ry="2" />
<text  x="997.54" y="623.5" ></text>
</g>
<g >
<title>std::_Bit_iterator::operator* (1 samples, 0.01%)</title><rect x="773.8" y="645" width="0.2" height="15.0" fill="rgb(207,41,4)" rx="2" ry="2" />
<text  x="776.83" y="655.5" ></text>
</g>
<g >
<title>_mm_mullo_epi16 (8 samples, 0.11%)</title><rect x="279.7" y="565" width="1.4" height="15.0" fill="rgb(211,168,13)" rx="2" ry="2" />
<text  x="282.74" y="575.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.01%)</title><rect x="836.9" y="565" width="0.2" height="15.0" fill="rgb(220,102,42)" rx="2" ry="2" />
<text  x="839.89" y="575.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="1171.7" y="357" width="0.1" height="15.0" fill="rgb(237,73,26)" rx="2" ry="2" />
<text  x="1174.68" y="367.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (3 samples, 0.04%)</title><rect x="403.2" y="629" width="0.5" height="15.0" fill="rgb(209,174,7)" rx="2" ry="2" />
<text  x="406.22" y="639.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="267.2" y="501" width="0.2" height="15.0" fill="rgb(218,168,32)" rx="2" ry="2" />
<text  x="270.20" y="511.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.01%)</title><rect x="620.8" y="405" width="0.2" height="15.0" fill="rgb(212,214,18)" rx="2" ry="2" />
<text  x="623.80" y="415.5" ></text>
</g>
<g >
<title>put_timespec64 (8 samples, 0.11%)</title><rect x="402.4" y="645" width="1.3" height="15.0" fill="rgb(226,95,20)" rx="2" ry="2" />
<text  x="405.40" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (3 samples, 0.04%)</title><rect x="86.6" y="805" width="0.5" height="15.0" fill="rgb(213,162,35)" rx="2" ry="2" />
<text  x="89.60" y="815.5" ></text>
</g>
<g >
<title>sse2_combine_over_u (1 samples, 0.01%)</title><rect x="364.1" y="629" width="0.2" height="15.0" fill="rgb(207,148,33)" rx="2" ry="2" />
<text  x="367.10" y="639.5" ></text>
</g>
<g >
<title>core_combine_over_u_sse2_no_mask (1 samples, 0.01%)</title><rect x="364.1" y="613" width="0.2" height="15.0" fill="rgb(231,87,50)" rx="2" ry="2" />
<text  x="367.10" y="623.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="375.0" y="485" width="0.2" height="15.0" fill="rgb(249,110,49)" rx="2" ry="2" />
<text  x="377.99" y="495.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="932.0" y="421" width="0.1" height="15.0" fill="rgb(236,149,27)" rx="2" ry="2" />
<text  x="934.98" y="431.5" ></text>
</g>
<g >
<title>kthread_data (1 samples, 0.01%)</title><rect x="881.5" y="373" width="0.1" height="15.0" fill="rgb(229,89,8)" rx="2" ry="2" />
<text  x="884.46" y="383.5" ></text>
</g>
<g >
<title>XFlush (7 samples, 0.10%)</title><rect x="988.8" y="661" width="1.1" height="15.0" fill="rgb(206,63,36)" rx="2" ry="2" />
<text  x="991.77" y="671.5" ></text>
</g>
<g >
<title>_mm_loadu_si128 (105 samples, 1.47%)</title><rect x="204.6" y="565" width="17.4" height="15.0" fill="rgb(223,140,25)" rx="2" ry="2" />
<text  x="207.63" y="575.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="538.8" y="549" width="0.1" height="15.0" fill="rgb(214,197,49)" rx="2" ry="2" />
<text  x="541.75" y="559.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="694.3" y="565" width="0.1" height="15.0" fill="rgb(233,228,54)" rx="2" ry="2" />
<text  x="697.26" y="575.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="983.0" y="581" width="0.2" height="15.0" fill="rgb(230,104,34)" rx="2" ry="2" />
<text  x="985.99" y="591.5" ></text>
</g>
<g >
<title>task_ctx_sched_out (2 samples, 0.03%)</title><rect x="31.5" y="709" width="0.3" height="15.0" fill="rgb(217,74,19)" rx="2" ry="2" />
<text  x="34.46" y="719.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (8 samples, 0.11%)</title><rect x="996.2" y="709" width="1.3" height="15.0" fill="rgb(242,144,50)" rx="2" ry="2" />
<text  x="999.19" y="719.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (1 samples, 0.01%)</title><rect x="122.1" y="693" width="0.2" height="15.0" fill="rgb(214,120,6)" rx="2" ry="2" />
<text  x="125.09" y="703.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="689.8" y="325" width="0.2" height="15.0" fill="rgb(228,154,29)" rx="2" ry="2" />
<text  x="692.80" y="335.5" ></text>
</g>
<g >
<title>_pixman_image_validate (5 samples, 0.07%)</title><rect x="794.6" y="645" width="0.9" height="15.0" fill="rgb(233,4,22)" rx="2" ry="2" />
<text  x="797.63" y="655.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (1 samples, 0.01%)</title><rect x="58.0" y="853" width="0.2" height="15.0" fill="rgb(214,186,51)" rx="2" ry="2" />
<text  x="61.04" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (6 samples, 0.08%)</title><rect x="707.6" y="629" width="1.0" height="15.0" fill="rgb(245,147,4)" rx="2" ry="2" />
<text  x="710.63" y="639.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.01%)</title><rect x="122.1" y="677" width="0.2" height="15.0" fill="rgb(229,78,45)" rx="2" ry="2" />
<text  x="125.09" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (5 samples, 0.07%)</title><rect x="628.1" y="437" width="0.8" height="15.0" fill="rgb(216,59,48)" rx="2" ry="2" />
<text  x="631.06" y="447.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.01%)</title><rect x="50.9" y="789" width="0.2" height="15.0" fill="rgb(241,147,8)" rx="2" ry="2" />
<text  x="53.94" y="799.5" ></text>
</g>
<g >
<title>Game_Character::UpdateMovement (15 samples, 0.21%)</title><rect x="776.3" y="693" width="2.5" height="15.0" fill="rgb(238,59,10)" rx="2" ry="2" />
<text  x="779.31" y="703.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.01%)</title><rect x="297.4" y="517" width="0.2" height="15.0" fill="rgb(218,108,13)" rx="2" ry="2" />
<text  x="300.41" y="527.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipToNextConditional (2 samples, 0.03%)</title><rect x="729.1" y="661" width="0.3" height="15.0" fill="rgb(206,224,12)" rx="2" ry="2" />
<text  x="732.09" y="671.5" ></text>
</g>
<g >
<title>operator new (77 samples, 1.08%)</title><rect x="943.4" y="533" width="12.7" height="15.0" fill="rgb(224,7,5)" rx="2" ry="2" />
<text  x="946.37" y="543.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.01%)</title><rect x="995.5" y="325" width="0.2" height="15.0" fill="rgb(254,177,8)" rx="2" ry="2" />
<text  x="998.53" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (118 samples, 1.65%)</title><rect x="385.4" y="693" width="19.5" height="15.0" fill="rgb(250,200,41)" rx="2" ry="2" />
<text  x="388.39" y="703.5" ></text>
</g>
<g >
<title>operator== (1 samples, 0.01%)</title><rect x="962.4" y="629" width="0.1" height="15.0" fill="rgb(207,152,39)" rx="2" ry="2" />
<text  x="965.35" y="639.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="605.8" y="421" width="0.1" height="15.0" fill="rgb(236,86,6)" rx="2" ry="2" />
<text  x="608.78" y="431.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (12 samples, 0.17%)</title><rect x="612.2" y="533" width="2.0" height="15.0" fill="rgb(253,229,11)" rx="2" ry="2" />
<text  x="615.22" y="543.5" ></text>
</g>
<g >
<title>_IO_new_file_xsputn (1 samples, 0.01%)</title><rect x="587.3" y="437" width="0.2" height="15.0" fill="rgb(232,139,47)" rx="2" ry="2" />
<text  x="590.29" y="447.5" ></text>
</g>
<g >
<title>pixman_region32_fini (2 samples, 0.03%)</title><rect x="690.3" y="405" width="0.3" height="15.0" fill="rgb(213,99,51)" rx="2" ry="2" />
<text  x="693.30" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (1 samples, 0.01%)</title><rect x="581.3" y="629" width="0.2" height="15.0" fill="rgb(238,89,4)" rx="2" ry="2" />
<text  x="584.35" y="639.5" ></text>
</g>
<g >
<title>_pixman_image_allocate (1 samples, 0.01%)</title><rect x="349.6" y="613" width="0.1" height="15.0" fill="rgb(242,115,27)" rx="2" ry="2" />
<text  x="352.57" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (19 samples, 0.27%)</title><rect x="659.4" y="533" width="3.2" height="15.0" fill="rgb(248,191,8)" rx="2" ry="2" />
<text  x="662.43" y="543.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.01%)</title><rect x="375.7" y="549" width="0.1" height="15.0" fill="rgb(210,102,7)" rx="2" ry="2" />
<text  x="378.65" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2 samples, 0.03%)</title><rect x="599.8" y="469" width="0.4" height="15.0" fill="rgb(229,89,43)" rx="2" ry="2" />
<text  x="602.83" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Player, std::default_delete&lt;Game_Player&gt; &gt;::_M_ptr (1 samples, 0.01%)</title><rect x="986.8" y="629" width="0.2" height="15.0" fill="rgb(228,202,50)" rx="2" ry="2" />
<text  x="989.79" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.01%)</title><rect x="713.2" y="645" width="0.2" height="15.0" fill="rgb(247,103,34)" rx="2" ry="2" />
<text  x="716.25" y="655.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (2 samples, 0.03%)</title><rect x="998.2" y="629" width="0.3" height="15.0" fill="rgb(228,176,33)" rx="2" ry="2" />
<text  x="1001.18" y="639.5" ></text>
</g>
<g >
<title>Transform::Transform (5 samples, 0.07%)</title><rect x="303.7" y="613" width="0.8" height="15.0" fill="rgb(213,117,0)" rx="2" ry="2" />
<text  x="306.68" y="623.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="319.7" y="549" width="0.2" height="15.0" fill="rgb(231,116,3)" rx="2" ry="2" />
<text  x="322.69" y="559.5" ></text>
</g>
<g >
<title>_mm_set_epi16 (1 samples, 0.01%)</title><rect x="229.7" y="581" width="0.2" height="15.0" fill="rgb(235,15,49)" rx="2" ry="2" />
<text  x="232.72" y="591.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (1 samples, 0.01%)</title><rect x="374.2" y="677" width="0.1" height="15.0" fill="rgb(246,76,9)" rx="2" ry="2" />
<text  x="377.17" y="687.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (152 samples, 2.13%)</title><rect x="669.2" y="485" width="25.1" height="15.0" fill="rgb(221,130,44)" rx="2" ry="2" />
<text  x="672.17" y="495.5" >s..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="1172.7" y="645" width="0.1" height="15.0" fill="rgb(220,202,26)" rx="2" ry="2" />
<text  x="1175.67" y="655.5" ></text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (4 samples, 0.06%)</title><rect x="957.9" y="677" width="0.7" height="15.0" fill="rgb(234,143,14)" rx="2" ry="2" />
<text  x="960.90" y="687.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (7 samples, 0.10%)</title><rect x="849.9" y="549" width="1.2" height="15.0" fill="rgb(217,212,30)" rx="2" ry="2" />
<text  x="852.93" y="559.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="561.9" y="565" width="0.1" height="15.0" fill="rgb(237,126,2)" rx="2" ry="2" />
<text  x="564.87" y="575.5" ></text>
</g>
<g >
<title>pix_multiply_2x128 (21 samples, 0.29%)</title><rect x="885.1" y="581" width="3.5" height="15.0" fill="rgb(246,102,6)" rx="2" ry="2" />
<text  x="888.10" y="591.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="881.5" y="549" width="0.1" height="15.0" fill="rgb(211,44,13)" rx="2" ry="2" />
<text  x="884.46" y="559.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (2 samples, 0.03%)</title><rect x="47.5" y="757" width="0.3" height="15.0" fill="rgb(248,23,6)" rx="2" ry="2" />
<text  x="50.47" y="767.5" ></text>
</g>
<g >
<title>Utils::GetRandomNumber (1 samples, 0.01%)</title><rect x="59.7" y="853" width="0.2" height="15.0" fill="rgb(246,48,28)" rx="2" ry="2" />
<text  x="62.69" y="863.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (4 samples, 0.06%)</title><rect x="353.0" y="613" width="0.7" height="15.0" fill="rgb(221,179,23)" rx="2" ry="2" />
<text  x="356.04" y="623.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="439.2" y="533" width="0.2" height="15.0" fill="rgb(231,130,49)" rx="2" ry="2" />
<text  x="442.21" y="543.5" ></text>
</g>
<g >
<title>xhci_queue_isoc_tx_prepare (2 samples, 0.03%)</title><rect x="1162.4" y="341" width="0.4" height="15.0" fill="rgb(229,153,9)" rx="2" ry="2" />
<text  x="1165.43" y="351.5" ></text>
</g>
<g >
<title>_int_malloc (16 samples, 0.22%)</title><rect x="938.1" y="453" width="2.6" height="15.0" fill="rgb(244,98,32)" rx="2" ry="2" />
<text  x="941.09" y="463.5" ></text>
</g>
<g >
<title>SDL_UnlockTexture_REAL (54 samples, 0.76%)</title><rect x="1163.1" y="677" width="8.9" height="15.0" fill="rgb(251,187,15)" rx="2" ry="2" />
<text  x="1166.09" y="687.5" ></text>
</g>
<g >
<title>update_curr (3 samples, 0.04%)</title><rect x="86.6" y="725" width="0.5" height="15.0" fill="rgb(250,191,10)" rx="2" ry="2" />
<text  x="89.60" y="735.5" ></text>
</g>
<g >
<title>__x64_sys_read (8 samples, 0.11%)</title><rect x="47.1" y="837" width="1.4" height="15.0" fill="rgb(223,7,11)" rx="2" ry="2" />
<text  x="50.14" y="847.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="289.3" y="549" width="0.2" height="15.0" fill="rgb(237,178,22)" rx="2" ry="2" />
<text  x="292.32" y="559.5" ></text>
</g>
<g >
<title>_mm_cmpeq_epi8 (11 samples, 0.15%)</title><rect x="256.1" y="597" width="1.9" height="15.0" fill="rgb(243,126,22)" rx="2" ry="2" />
<text  x="259.14" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="782.1" y="629" width="0.1" height="15.0" fill="rgb(208,156,19)" rx="2" ry="2" />
<text  x="785.08" y="639.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (2 samples, 0.03%)</title><rect x="995.4" y="421" width="0.3" height="15.0" fill="rgb(239,104,32)" rx="2" ry="2" />
<text  x="998.37" y="431.5" ></text>
</g>
<g >
<title>X11_PumpEvents (13 samples, 0.18%)</title><rect x="994.0" y="677" width="2.2" height="15.0" fill="rgb(231,145,3)" rx="2" ry="2" />
<text  x="997.05" y="687.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="359.1" y="597" width="0.2" height="15.0" fill="rgb(250,203,26)" rx="2" ry="2" />
<text  x="362.15" y="607.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="657.0" y="357" width="0.1" height="15.0" fill="rgb(223,218,54)" rx="2" ry="2" />
<text  x="659.95" y="367.5" ></text>
</g>
<g >
<title>_mm_shufflelo_epi16 (2 samples, 0.03%)</title><rect x="327.8" y="549" width="0.3" height="15.0" fill="rgb(215,179,10)" rx="2" ry="2" />
<text  x="330.78" y="559.5" ></text>
</g>
<g >
<title>_int_malloc (35 samples, 0.49%)</title><rect x="926.9" y="437" width="5.7" height="15.0" fill="rgb(252,68,11)" rx="2" ry="2" />
<text  x="929.86" y="447.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="289.3" y="533" width="0.2" height="15.0" fill="rgb(227,192,37)" rx="2" ry="2" />
<text  x="292.32" y="543.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (16 samples, 0.22%)</title><rect x="82.8" y="821" width="2.6" height="15.0" fill="rgb(226,75,32)" rx="2" ry="2" />
<text  x="85.80" y="831.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="725.5" y="549" width="0.1" height="15.0" fill="rgb(238,142,2)" rx="2" ry="2" />
<text  x="728.46" y="559.5" ></text>
</g>
<g >
<title>SDL_LockMutex_REAL (1 samples, 0.01%)</title><rect x="993.9" y="645" width="0.1" height="15.0" fill="rgb(240,210,27)" rx="2" ry="2" />
<text  x="996.88" y="655.5" ></text>
</g>
<g >
<title>_mm_movemask_epi8 (3 samples, 0.04%)</title><rect x="192.9" y="565" width="0.5" height="15.0" fill="rgb(250,29,39)" rx="2" ry="2" />
<text  x="195.91" y="575.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingForegroundExecution (8 samples, 0.11%)</title><rect x="774.3" y="693" width="1.3" height="15.0" fill="rgb(239,71,26)" rx="2" ry="2" />
<text  x="777.33" y="703.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="344.9" y="581" width="0.2" height="15.0" fill="rgb(226,50,35)" rx="2" ry="2" />
<text  x="347.95" y="591.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="361.5" y="517" width="0.1" height="15.0" fill="rgb(212,147,35)" rx="2" ry="2" />
<text  x="364.46" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::end (1 samples, 0.01%)</title><rect x="618.0" y="501" width="0.2" height="15.0" fill="rgb(253,176,1)" rx="2" ry="2" />
<text  x="620.99" y="511.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="677.4" y="389" width="0.2" height="15.0" fill="rgb(246,138,34)" rx="2" ry="2" />
<text  x="680.42" y="399.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="452.1" y="501" width="0.2" height="15.0" fill="rgb(236,157,2)" rx="2" ry="2" />
<text  x="455.09" y="511.5" ></text>
</g>
<g >
<title>fast_composite_scaled_nearest_sse2_8888_n_8888_cover_OVER (111 samples, 1.55%)</title><rect x="330.8" y="613" width="18.3" height="15.0" fill="rgb(238,27,8)" rx="2" ry="2" />
<text  x="333.75" y="623.5" ></text>
</g>
<g >
<title>RPG::SavePicture::SavePicture (1 samples, 0.01%)</title><rect x="782.2" y="677" width="0.2" height="15.0" fill="rgb(247,135,2)" rx="2" ry="2" />
<text  x="785.25" y="687.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (5 samples, 0.07%)</title><rect x="653.5" y="501" width="0.8" height="15.0" fill="rgb(248,56,52)" rx="2" ry="2" />
<text  x="656.49" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (31 samples, 0.43%)</title><rect x="625.3" y="485" width="5.1" height="15.0" fill="rgb(225,67,54)" rx="2" ry="2" />
<text  x="628.26" y="495.5" ></text>
</g>
<g >
<title>account_entity_enqueue (1 samples, 0.01%)</title><rect x="49.9" y="613" width="0.2" height="15.0" fill="rgb(207,155,13)" rx="2" ry="2" />
<text  x="52.95" y="623.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="983.0" y="629" width="0.2" height="15.0" fill="rgb(206,32,13)" rx="2" ry="2" />
<text  x="985.99" y="639.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.01%)</title><rect x="881.5" y="485" width="0.1" height="15.0" fill="rgb(252,198,18)" rx="2" ry="2" />
<text  x="884.46" y="495.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.01%)</title><rect x="587.3" y="133" width="0.2" height="15.0" fill="rgb(237,52,22)" rx="2" ry="2" />
<text  x="590.29" y="143.5" ></text>
</g>
<g >
<title>xhci_msi_irq (2 samples, 0.03%)</title><rect x="955.3" y="373" width="0.3" height="15.0" fill="rgb(214,30,47)" rx="2" ry="2" />
<text  x="958.25" y="383.5" ></text>
</g>
<g >
<title>FileRequestAsync::SetGraphicFile (2 samples, 0.03%)</title><rect x="68.1" y="853" width="0.3" height="15.0" fill="rgb(230,54,16)" rx="2" ry="2" />
<text  x="71.11" y="863.5" ></text>
</g>
<g >
<title>Sprite::GetBitmap (2 samples, 0.03%)</title><rect x="72.4" y="853" width="0.3" height="15.0" fill="rgb(207,30,51)" rx="2" ry="2" />
<text  x="75.40" y="863.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="294.4" y="581" width="0.4" height="15.0" fill="rgb(211,159,6)" rx="2" ry="2" />
<text  x="297.43" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.01%)</title><rect x="622.0" y="389" width="0.1" height="15.0" fill="rgb(238,205,46)" rx="2" ry="2" />
<text  x="624.96" y="399.5" ></text>
</g>
<g >
<title>_int_free (6 samples, 0.08%)</title><rect x="704.7" y="549" width="1.0" height="15.0" fill="rgb(233,141,45)" rx="2" ry="2" />
<text  x="707.66" y="559.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.01%)</title><rect x="368.4" y="645" width="0.2" height="15.0" fill="rgb(215,117,16)" rx="2" ry="2" />
<text  x="371.39" y="655.5" ></text>
</g>
<g >
<title>usb_hcd_get_frame_number (1 samples, 0.01%)</title><rect x="955.4" y="181" width="0.2" height="15.0" fill="rgb(233,85,21)" rx="2" ry="2" />
<text  x="958.42" y="191.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="282.9" y="549" width="0.1" height="15.0" fill="rgb(251,200,48)" rx="2" ry="2" />
<text  x="285.88" y="559.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (1 samples, 0.01%)</title><rect x="615.4" y="597" width="0.1" height="15.0" fill="rgb(215,87,30)" rx="2" ry="2" />
<text  x="618.35" y="607.5" ></text>
</g>
<g >
<title>SDL_LowerBlit_REAL (1 samples, 0.01%)</title><rect x="123.7" y="853" width="0.2" height="15.0" fill="rgb(206,197,6)" rx="2" ry="2" />
<text  x="126.74" y="863.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Set (1 samples, 0.01%)</title><rect x="757.5" y="661" width="0.2" height="15.0" fill="rgb(219,219,54)" rx="2" ry="2" />
<text  x="760.49" y="671.5" ></text>
</g>
<g >
<title>XFlush (9 samples, 0.13%)</title><rect x="994.7" y="645" width="1.5" height="15.0" fill="rgb(244,42,21)" rx="2" ry="2" />
<text  x="997.71" y="655.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="538.8" y="629" width="0.1" height="15.0" fill="rgb(214,83,34)" rx="2" ry="2" />
<text  x="541.75" y="639.5" ></text>
</g>
<g >
<title>xhci_irq (2 samples, 0.03%)</title><rect x="202.5" y="421" width="0.3" height="15.0" fill="rgb(244,21,38)" rx="2" ry="2" />
<text  x="205.48" y="431.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="582.2" y="565" width="0.1" height="15.0" fill="rgb(248,208,23)" rx="2" ry="2" />
<text  x="585.17" y="575.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="348.9" y="469" width="0.2" height="15.0" fill="rgb(215,25,25)" rx="2" ry="2" />
<text  x="351.91" y="479.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.01%)</title><rect x="542.9" y="597" width="0.1" height="15.0" fill="rgb(223,176,49)" rx="2" ry="2" />
<text  x="545.88" y="607.5" ></text>
</g>
<g >
<title>__sched_text_start (7 samples, 0.10%)</title><rect x="849.9" y="501" width="1.2" height="15.0" fill="rgb(250,98,4)" rx="2" ry="2" />
<text  x="852.93" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (6 samples, 0.08%)</title><rect x="661.1" y="469" width="1.0" height="15.0" fill="rgb(207,1,24)" rx="2" ry="2" />
<text  x="664.08" y="479.5" ></text>
</g>
<g >
<title>unpack_128_2x128 (19 samples, 0.27%)</title><rect x="345.1" y="581" width="3.2" height="15.0" fill="rgb(220,214,34)" rx="2" ry="2" />
<text  x="348.11" y="591.5" ></text>
</g>
<g >
<title>x86_pmu_enable (2 samples, 0.03%)</title><rect x="1188.8" y="709" width="0.4" height="15.0" fill="rgb(235,227,7)" rx="2" ry="2" />
<text  x="1191.84" y="719.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="472.7" y="645" width="0.4" height="15.0" fill="rgb(231,17,31)" rx="2" ry="2" />
<text  x="475.72" y="655.5" ></text>
</g>
<g >
<title>pack_2x128_128 (3 samples, 0.04%)</title><rect x="289.5" y="613" width="0.5" height="15.0" fill="rgb(219,44,30)" rx="2" ry="2" />
<text  x="292.48" y="623.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (2 samples, 0.03%)</title><rect x="758.1" y="581" width="0.4" height="15.0" fill="rgb(227,61,34)" rx="2" ry="2" />
<text  x="761.15" y="591.5" ></text>
</g>
<g >
<title>std::_Bit_reference::operator bool (4 samples, 0.06%)</title><rect x="773.2" y="661" width="0.6" height="15.0" fill="rgb(208,213,4)" rx="2" ry="2" />
<text  x="776.17" y="671.5" ></text>
</g>
<g >
<title>handle_edge_irq (2 samples, 0.03%)</title><rect x="849.4" y="517" width="0.4" height="15.0" fill="rgb(238,100,50)" rx="2" ry="2" />
<text  x="852.44" y="527.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="614.2" y="501" width="0.2" height="15.0" fill="rgb(217,56,33)" rx="2" ry="2" />
<text  x="617.20" y="511.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="171.8" y="389" width="0.1" height="15.0" fill="rgb(243,28,29)" rx="2" ry="2" />
<text  x="174.78" y="399.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (344 samples, 4.81%)</title><rect x="899.3" y="661" width="56.8" height="15.0" fill="rgb(253,111,32)" rx="2" ry="2" />
<text  x="902.29" y="671.5" >std::m..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::push_back (2 samples, 0.03%)</title><rect x="706.8" y="613" width="0.3" height="15.0" fill="rgb(245,211,20)" rx="2" ry="2" />
<text  x="709.81" y="623.5" ></text>
</g>
<g >
<title>Game_Picture::SetNonEffectParams (5 samples, 0.07%)</title><rect x="697.1" y="629" width="0.8" height="15.0" fill="rgb(214,98,17)" rx="2" ry="2" />
<text  x="700.07" y="639.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="983.0" y="533" width="0.2" height="15.0" fill="rgb(244,28,29)" rx="2" ry="2" />
<text  x="985.99" y="543.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="753.0" y="565" width="0.2" height="15.0" fill="rgb(206,180,26)" rx="2" ry="2" />
<text  x="756.03" y="575.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.01%)</title><rect x="375.7" y="581" width="0.1" height="15.0" fill="rgb(212,140,54)" rx="2" ry="2" />
<text  x="378.65" y="591.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="964.5" y="629" width="0.2" height="15.0" fill="rgb(234,35,47)" rx="2" ry="2" />
<text  x="967.50" y="639.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (9 samples, 0.13%)</title><rect x="628.9" y="453" width="1.5" height="15.0" fill="rgb(246,172,18)" rx="2" ry="2" />
<text  x="631.89" y="463.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="267.2" y="517" width="0.2" height="15.0" fill="rgb(222,27,28)" rx="2" ry="2" />
<text  x="270.20" y="527.5" ></text>
</g>
<g >
<title>Utils::EncodeUTF (2 samples, 0.03%)</title><rect x="706.8" y="629" width="0.3" height="15.0" fill="rgb(246,1,16)" rx="2" ry="2" />
<text  x="709.81" y="639.5" ></text>
</g>
<g >
<title>_mm_adds_epu16 (1 samples, 0.01%)</title><rect x="342.3" y="533" width="0.2" height="15.0" fill="rgb(205,65,53)" rx="2" ry="2" />
<text  x="345.31" y="543.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="689.8" y="261" width="0.2" height="15.0" fill="rgb(231,22,21)" rx="2" ry="2" />
<text  x="692.80" y="271.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="571.3" y="421" width="0.1" height="15.0" fill="rgb(225,117,37)" rx="2" ry="2" />
<text  x="574.28" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="587.3" y="341" width="0.2" height="15.0" fill="rgb(254,17,6)" rx="2" ry="2" />
<text  x="590.29" y="351.5" ></text>
</g>
<g >
<title>negate_1x128 (1 samples, 0.01%)</title><rect x="342.1" y="549" width="0.2" height="15.0" fill="rgb(213,224,47)" rx="2" ry="2" />
<text  x="345.14" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_mutate (2 samples, 0.03%)</title><rect x="706.3" y="597" width="0.3" height="15.0" fill="rgb(214,104,33)" rx="2" ry="2" />
<text  x="709.31" y="607.5" ></text>
</g>
<g >
<title>std::__merge_sort_loop&lt;Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (10 samples, 0.14%)</title><rect x="371.2" y="645" width="1.6" height="15.0" fill="rgb(240,22,54)" rx="2" ry="2" />
<text  x="374.20" y="655.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="375.0" y="565" width="0.2" height="15.0" fill="rgb(224,223,24)" rx="2" ry="2" />
<text  x="377.99" y="575.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (2 samples, 0.03%)</title><rect x="986.5" y="661" width="0.3" height="15.0" fill="rgb(208,206,11)" rx="2" ry="2" />
<text  x="989.45" y="671.5" ></text>
</g>
<g >
<title>Bitmap::height (1 samples, 0.01%)</title><rect x="964.3" y="645" width="0.2" height="15.0" fill="rgb(224,149,27)" rx="2" ry="2" />
<text  x="967.33" y="655.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (48 samples, 0.67%)</title><rect x="1164.1" y="597" width="7.9" height="15.0" fill="rgb(228,215,11)" rx="2" ry="2" />
<text  x="1167.08" y="607.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (2 samples, 0.03%)</title><rect x="1162.4" y="421" width="0.4" height="15.0" fill="rgb(209,0,36)" rx="2" ry="2" />
<text  x="1165.43" y="431.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.01%)</title><rect x="542.9" y="613" width="0.1" height="15.0" fill="rgb(239,67,42)" rx="2" ry="2" />
<text  x="545.88" y="623.5" ></text>
</g>
<g >
<title>Scene::MainFunction (1 samples, 0.01%)</title><rect x="72.2" y="853" width="0.2" height="15.0" fill="rgb(217,51,5)" rx="2" ry="2" />
<text  x="75.24" y="863.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (12 samples, 0.17%)</title><rect x="991.1" y="517" width="2.0" height="15.0" fill="rgb(219,224,39)" rx="2" ry="2" />
<text  x="994.08" y="527.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (6 samples, 0.08%)</title><rect x="352.7" y="677" width="1.0" height="15.0" fill="rgb(226,124,4)" rx="2" ry="2" />
<text  x="355.71" y="687.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (1 samples, 0.01%)</title><rect x="987.4" y="517" width="0.2" height="15.0" fill="rgb(228,28,12)" rx="2" ry="2" />
<text  x="990.45" y="527.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="614.2" y="533" width="0.2" height="15.0" fill="rgb(243,76,43)" rx="2" ry="2" />
<text  x="617.20" y="543.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.03%)</title><rect x="892.0" y="597" width="0.4" height="15.0" fill="rgb(224,173,13)" rx="2" ry="2" />
<text  x="895.03" y="607.5" ></text>
</g>
<g >
<title>Game_Interpreter::Push (1 samples, 0.01%)</title><rect x="439.2" y="645" width="0.2" height="15.0" fill="rgb(236,96,49)" rx="2" ry="2" />
<text  x="442.21" y="655.5" ></text>
</g>
<g >
<title>load_128_unaligned (105 samples, 1.47%)</title><rect x="204.6" y="581" width="17.4" height="15.0" fill="rgb(209,75,0)" rx="2" ry="2" />
<text  x="207.63" y="591.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="282.9" y="501" width="0.1" height="15.0" fill="rgb(220,174,34)" rx="2" ry="2" />
<text  x="285.88" y="511.5" ></text>
</g>
<g >
<title>Game_Screen::GetFlashColor (12 samples, 0.17%)</title><rect x="958.6" y="677" width="1.9" height="15.0" fill="rgb(238,139,2)" rx="2" ry="2" />
<text  x="961.56" y="687.5" ></text>
</g>
<g >
<title>pixman_transform_point_3d (2 samples, 0.03%)</title><rect x="319.9" y="597" width="0.3" height="15.0" fill="rgb(216,181,38)" rx="2" ry="2" />
<text  x="322.86" y="607.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="598.2" y="437" width="0.1" height="15.0" fill="rgb(241,46,35)" rx="2" ry="2" />
<text  x="601.18" y="447.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="267.2" y="533" width="0.2" height="15.0" fill="rgb(229,8,20)" rx="2" ry="2" />
<text  x="270.20" y="543.5" ></text>
</g>
<g >
<title>irq_work_interrupt (1 samples, 0.01%)</title><rect x="377.5" y="597" width="0.1" height="15.0" fill="rgb(227,216,45)" rx="2" ry="2" />
<text  x="380.47" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (2 samples, 0.03%)</title><rect x="610.4" y="501" width="0.3" height="15.0" fill="rgb(212,187,28)" rx="2" ry="2" />
<text  x="613.40" y="511.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (2 samples, 0.03%)</title><rect x="319.2" y="453" width="0.3" height="15.0" fill="rgb(233,120,52)" rx="2" ry="2" />
<text  x="322.20" y="463.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="202.3" y="501" width="0.2" height="15.0" fill="rgb(208,24,7)" rx="2" ry="2" />
<text  x="205.32" y="511.5" ></text>
</g>
<g >
<title>compute_image_info (3 samples, 0.04%)</title><rect x="169.6" y="613" width="0.5" height="15.0" fill="rgb(215,107,27)" rx="2" ry="2" />
<text  x="172.63" y="623.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="319.4" y="357" width="0.1" height="15.0" fill="rgb(254,189,31)" rx="2" ry="2" />
<text  x="322.36" y="367.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (5 samples, 0.07%)</title><rect x="926.0" y="437" width="0.9" height="15.0" fill="rgb(245,110,38)" rx="2" ry="2" />
<text  x="929.04" y="447.5" ></text>
</g>
<g >
<title>x86_pmu_enable (70 samples, 0.98%)</title><rect x="33.3" y="677" width="11.5" height="15.0" fill="rgb(243,26,47)" rx="2" ry="2" />
<text  x="36.28" y="687.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="1171.7" y="389" width="0.1" height="15.0" fill="rgb(211,190,27)" rx="2" ry="2" />
<text  x="1174.68" y="399.5" ></text>
</g>
<g >
<title>create_bits_image_internal (3 samples, 0.04%)</title><rect x="129.5" y="853" width="0.5" height="15.0" fill="rgb(233,192,2)" rx="2" ry="2" />
<text  x="132.52" y="863.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="849.4" y="549" width="0.4" height="15.0" fill="rgb(205,96,51)" rx="2" ry="2" />
<text  x="852.44" y="559.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.01%)</title><rect x="472.9" y="597" width="0.2" height="15.0" fill="rgb(247,83,42)" rx="2" ry="2" />
<text  x="475.89" y="607.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="725.5" y="597" width="0.1" height="15.0" fill="rgb(245,10,2)" rx="2" ry="2" />
<text  x="728.46" y="607.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="276.6" y="517" width="0.2" height="15.0" fill="rgb(223,109,37)" rx="2" ry="2" />
<text  x="279.61" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (1 samples, 0.01%)</title><rect x="663.7" y="533" width="0.2" height="15.0" fill="rgb(241,112,24)" rx="2" ry="2" />
<text  x="666.72" y="543.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="472.7" y="437" width="0.2" height="15.0" fill="rgb(220,101,30)" rx="2" ry="2" />
<text  x="475.72" y="447.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="694.3" y="469" width="0.1" height="15.0" fill="rgb(233,71,42)" rx="2" ry="2" />
<text  x="697.26" y="479.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (5 samples, 0.07%)</title><rect x="628.1" y="405" width="0.8" height="15.0" fill="rgb(243,223,39)" rx="2" ry="2" />
<text  x="631.06" y="415.5" ></text>
</g>
<g >
<title>GetRandomU32 (3 samples, 0.04%)</title><rect x="569.8" y="613" width="0.5" height="15.0" fill="rgb(221,219,47)" rx="2" ry="2" />
<text  x="572.79" y="623.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash (12 samples, 0.17%)</title><rect x="612.2" y="517" width="2.0" height="15.0" fill="rgb(229,41,50)" rx="2" ry="2" />
<text  x="615.22" y="527.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="348.9" y="453" width="0.2" height="15.0" fill="rgb(227,190,10)" rx="2" ry="2" />
<text  x="351.91" y="463.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (17 samples, 0.24%)</title><rect x="655.1" y="469" width="2.8" height="15.0" fill="rgb(242,92,26)" rx="2" ry="2" />
<text  x="658.14" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (22 samples, 0.31%)</title><rect x="654.3" y="501" width="3.6" height="15.0" fill="rgb(218,127,25)" rx="2" ry="2" />
<text  x="657.31" y="511.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="754.5" y="517" width="0.2" height="15.0" fill="rgb(253,127,45)" rx="2" ry="2" />
<text  x="757.52" y="527.5" ></text>
</g>
<g >
<title>xhci_queue_isoc_tx_prepare (1 samples, 0.01%)</title><rect x="472.7" y="341" width="0.2" height="15.0" fill="rgb(209,122,42)" rx="2" ry="2" />
<text  x="475.72" y="351.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="888.9" y="437" width="0.2" height="15.0" fill="rgb(243,98,2)" rx="2" ry="2" />
<text  x="891.89" y="447.5" ></text>
</g>
<g >
<title>common_file_perm (1 samples, 0.01%)</title><rect x="48.3" y="741" width="0.2" height="15.0" fill="rgb(205,56,17)" rx="2" ry="2" />
<text  x="51.30" y="751.5" ></text>
</g>
<g >
<title>prepare_ring (1 samples, 0.01%)</title><rect x="472.7" y="325" width="0.2" height="15.0" fill="rgb(217,66,4)" rx="2" ry="2" />
<text  x="475.72" y="335.5" ></text>
</g>
<g >
<title>Rect::Rect (1 samples, 0.01%)</title><rect x="666.0" y="533" width="0.2" height="15.0" fill="rgb(209,88,54)" rx="2" ry="2" />
<text  x="669.03" y="543.5" ></text>
</g>
<g >
<title>pixman_unorm_to_float (3 samples, 0.04%)</title><rect x="349.9" y="597" width="0.5" height="15.0" fill="rgb(211,33,16)" rx="2" ry="2" />
<text  x="352.90" y="607.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (1 samples, 0.01%)</title><rect x="698.2" y="613" width="0.2" height="15.0" fill="rgb(246,67,48)" rx="2" ry="2" />
<text  x="701.22" y="623.5" ></text>
</g>
<g >
<title>pixman_image_get_width (2 samples, 0.03%)</title><rect x="76.2" y="853" width="0.3" height="15.0" fill="rgb(238,172,13)" rx="2" ry="2" />
<text  x="79.20" y="863.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (46 samples, 0.64%)</title><rect x="635.2" y="357" width="7.6" height="15.0" fill="rgb(206,129,13)" rx="2" ry="2" />
<text  x="638.16" y="367.5" ></text>
</g>
<g >
<title>Cache::SystemOrBlack (1 samples, 0.01%)</title><rect x="987.1" y="645" width="0.2" height="15.0" fill="rgb(214,179,32)" rx="2" ry="2" />
<text  x="990.12" y="655.5" ></text>
</g>
<g >
<title>handle_edge_irq (2 samples, 0.03%)</title><rect x="319.2" y="501" width="0.3" height="15.0" fill="rgb(228,118,22)" rx="2" ry="2" />
<text  x="322.20" y="511.5" ></text>
</g>
<g >
<title>handle_edge_irq (5 samples, 0.07%)</title><rect x="570.6" y="597" width="0.8" height="15.0" fill="rgb(234,111,14)" rx="2" ry="2" />
<text  x="573.62" y="607.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.01%)</title><rect x="377.3" y="389" width="0.2" height="15.0" fill="rgb(238,147,39)" rx="2" ry="2" />
<text  x="380.31" y="399.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (1 samples, 0.01%)</title><rect x="78.0" y="853" width="0.2" height="15.0" fill="rgb(227,69,8)" rx="2" ry="2" />
<text  x="81.01" y="863.5" ></text>
</g>
<g >
<title>mutex_lock (1 samples, 0.01%)</title><rect x="989.4" y="405" width="0.2" height="15.0" fill="rgb(223,134,5)" rx="2" ry="2" />
<text  x="992.43" y="415.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.01%)</title><rect x="587.3" y="101" width="0.2" height="15.0" fill="rgb(216,58,46)" rx="2" ry="2" />
<text  x="590.29" y="111.5" ></text>
</g>
<g >
<title>poll (2 samples, 0.03%)</title><rect x="993.6" y="597" width="0.3" height="15.0" fill="rgb(212,51,38)" rx="2" ry="2" />
<text  x="996.55" y="607.5" ></text>
</g>
<g >
<title>usb_hcd_poll_rh_status (1 samples, 0.01%)</title><rect x="613.9" y="373" width="0.1" height="15.0" fill="rgb(252,199,39)" rx="2" ry="2" />
<text  x="616.87" y="383.5" ></text>
</g>
<g >
<title>xhci_msi_irq (2 samples, 0.03%)</title><rect x="758.1" y="549" width="0.4" height="15.0" fill="rgb(244,15,26)" rx="2" ry="2" />
<text  x="761.15" y="559.5" ></text>
</g>
<g >
<title>_mm_shufflelo_epi16 (1 samples, 0.01%)</title><rect x="342.0" y="565" width="0.1" height="15.0" fill="rgb(217,220,47)" rx="2" ry="2" />
<text  x="344.98" y="575.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (2 samples, 0.03%)</title><rect x="50.6" y="757" width="0.3" height="15.0" fill="rgb(235,112,35)" rx="2" ry="2" />
<text  x="53.61" y="767.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (5 samples, 0.07%)</title><rect x="360.8" y="693" width="0.8" height="15.0" fill="rgb(241,180,11)" rx="2" ry="2" />
<text  x="363.80" y="703.5" ></text>
</g>
<g >
<title>std::_Hash_bytes@plt (1 samples, 0.01%)</title><rect x="614.0" y="501" width="0.2" height="15.0" fill="rgb(206,61,17)" rx="2" ry="2" />
<text  x="617.03" y="511.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (31 samples, 0.43%)</title><rect x="625.3" y="501" width="5.1" height="15.0" fill="rgb(232,101,42)" rx="2" ry="2" />
<text  x="628.26" y="511.5" ></text>
</g>
<g >
<title>_pixman_bits_image_init (2 samples, 0.03%)</title><rect x="133.2" y="869" width="0.3" height="15.0" fill="rgb(221,86,7)" rx="2" ry="2" />
<text  x="136.15" y="879.5" ></text>
</g>
<g >
<title>scaled_nearest_scanline_sse2_8888_8888_OVER_sse2_8888_8888_cover_OVER_wrapper (64 samples, 0.90%)</title><rect x="320.2" y="597" width="10.6" height="15.0" fill="rgb(205,120,16)" rx="2" ry="2" />
<text  x="323.19" y="607.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (2 samples, 0.03%)</title><rect x="725.6" y="565" width="0.4" height="15.0" fill="rgb(239,77,49)" rx="2" ry="2" />
<text  x="728.63" y="575.5" ></text>
</g>
<g >
<title>handle_irq_event (3 samples, 0.04%)</title><rect x="888.6" y="533" width="0.5" height="15.0" fill="rgb(214,124,6)" rx="2" ry="2" />
<text  x="891.56" y="543.5" ></text>
</g>
<g >
<title>main_arena (1 samples, 0.01%)</title><rect x="1189.8" y="869" width="0.2" height="15.0" fill="rgb(242,73,39)" rx="2" ry="2" />
<text  x="1192.83" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, unsigned long, true&gt;::_S_equals (5 samples, 0.07%)</title><rect x="628.1" y="421" width="0.8" height="15.0" fill="rgb(215,82,16)" rx="2" ry="2" />
<text  x="631.06" y="431.5" ></text>
</g>
<g >
<title>Bitmap::GetHeight (3 samples, 0.04%)</title><rect x="356.5" y="677" width="0.5" height="15.0" fill="rgb(210,110,24)" rx="2" ry="2" />
<text  x="359.51" y="687.5" ></text>
</g>
<g >
<title>negate_2x128 (2 samples, 0.03%)</title><rect x="222.3" y="565" width="0.3" height="15.0" fill="rgb(243,135,27)" rx="2" ry="2" />
<text  x="225.29" y="575.5" ></text>
</g>
<g >
<title>__pollwait (2 samples, 0.03%)</title><rect x="30.5" y="789" width="0.3" height="15.0" fill="rgb(244,144,48)" rx="2" ry="2" />
<text  x="33.47" y="799.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="725.5" y="581" width="0.1" height="15.0" fill="rgb(248,80,32)" rx="2" ry="2" />
<text  x="728.46" y="591.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (107 samples, 1.50%)</title><rect x="138.6" y="725" width="17.7" height="15.0" fill="rgb(212,172,42)" rx="2" ry="2" />
<text  x="141.60" y="735.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.01%)</title><rect x="297.4" y="469" width="0.2" height="15.0" fill="rgb(225,183,10)" rx="2" ry="2" />
<text  x="300.41" y="479.5" ></text>
</g>
<g >
<title>memcpy@plt (2 samples, 0.03%)</title><rect x="598.0" y="517" width="0.3" height="15.0" fill="rgb(234,25,1)" rx="2" ry="2" />
<text  x="601.02" y="527.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (7 samples, 0.10%)</title><rect x="130.0" y="853" width="1.2" height="15.0" fill="rgb(246,66,0)" rx="2" ry="2" />
<text  x="133.01" y="863.5" ></text>
</g>
<g >
<title>unlink_chunk (1 samples, 0.01%)</title><rect x="690.0" y="389" width="0.1" height="15.0" fill="rgb(219,152,14)" rx="2" ry="2" />
<text  x="692.97" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.01%)</title><rect x="74.1" y="853" width="0.1" height="15.0" fill="rgb(213,145,31)" rx="2" ry="2" />
<text  x="77.05" y="863.5" ></text>
</g>
<g >
<title>unpack_128_2x128 (31 samples, 0.43%)</title><rect x="262.2" y="613" width="5.2" height="15.0" fill="rgb(233,91,22)" rx="2" ry="2" />
<text  x="265.24" y="623.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="301.0" y="549" width="0.2" height="15.0" fill="rgb(238,91,1)" rx="2" ry="2" />
<text  x="304.04" y="559.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (9 samples, 0.13%)</title><rect x="610.7" y="469" width="1.5" height="15.0" fill="rgb(234,145,31)" rx="2" ry="2" />
<text  x="613.73" y="479.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, true&gt; (22 samples, 0.31%)</title><rect x="654.3" y="517" width="3.6" height="15.0" fill="rgb(253,221,10)" rx="2" ry="2" />
<text  x="657.31" y="527.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (2 samples, 0.03%)</title><rect x="758.1" y="565" width="0.4" height="15.0" fill="rgb(245,10,43)" rx="2" ry="2" />
<text  x="761.15" y="575.5" ></text>
</g>
<g >
<title>is_opaque (49 samples, 0.69%)</title><rect x="829.0" y="597" width="8.1" height="15.0" fill="rgb(248,167,53)" rx="2" ry="2" />
<text  x="831.97" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="587.3" y="325" width="0.2" height="15.0" fill="rgb(250,69,5)" rx="2" ry="2" />
<text  x="590.29" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="773.8" y="661" width="0.2" height="15.0" fill="rgb(213,30,29)" rx="2" ry="2" />
<text  x="776.83" y="671.5" ></text>
</g>
<g >
<title>read_tsc (6 samples, 0.08%)</title><rect x="401.4" y="629" width="1.0" height="15.0" fill="rgb(209,208,26)" rx="2" ry="2" />
<text  x="404.41" y="639.5" ></text>
</g>
<g >
<title>SDLAudioP2 (255 samples, 3.57%)</title><rect x="10.0" y="885" width="42.1" height="15.0" fill="rgb(246,34,50)" rx="2" ry="2" />
<text  x="13.00" y="895.5" >SDL..</text>
</g>
<g >
<title>pix_multiply_2x128 (4 samples, 0.06%)</title><rect x="343.5" y="565" width="0.6" height="15.0" fill="rgb(207,121,47)" rx="2" ry="2" />
<text  x="346.46" y="575.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="561.9" y="597" width="0.1" height="15.0" fill="rgb(225,47,5)" rx="2" ry="2" />
<text  x="564.87" y="607.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.01%)</title><rect x="239.1" y="437" width="0.2" height="15.0" fill="rgb(244,139,8)" rx="2" ry="2" />
<text  x="242.13" y="447.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="887.4" y="517" width="0.2" height="15.0" fill="rgb(241,183,15)" rx="2" ry="2" />
<text  x="890.41" y="527.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="956.4" y="629" width="0.2" height="15.0" fill="rgb(214,19,45)" rx="2" ry="2" />
<text  x="959.41" y="639.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="171.8" y="421" width="0.1" height="15.0" fill="rgb(215,182,28)" rx="2" ry="2" />
<text  x="174.78" y="431.5" ></text>
</g>
<g >
<title>finish_td (2 samples, 0.03%)</title><rect x="1162.4" y="485" width="0.4" height="15.0" fill="rgb(217,154,31)" rx="2" ry="2" />
<text  x="1165.43" y="495.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="276.6" y="453" width="0.2" height="15.0" fill="rgb(249,82,34)" rx="2" ry="2" />
<text  x="279.61" y="463.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="290.0" y="501" width="0.1" height="15.0" fill="rgb(207,77,40)" rx="2" ry="2" />
<text  x="292.98" y="511.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="570.3" y="629" width="0.2" height="15.0" fill="rgb(213,212,13)" rx="2" ry="2" />
<text  x="573.29" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (11 samples, 0.15%)</title><rect x="606.8" y="533" width="1.8" height="15.0" fill="rgb(221,105,53)" rx="2" ry="2" />
<text  x="609.77" y="543.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::~function (1 samples, 0.01%)</title><rect x="696.7" y="613" width="0.2" height="15.0" fill="rgb(206,201,38)" rx="2" ry="2" />
<text  x="699.74" y="623.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="614.2" y="597" width="0.2" height="15.0" fill="rgb(241,149,25)" rx="2" ry="2" />
<text  x="617.20" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (20 samples, 0.28%)</title><rect x="989.9" y="645" width="3.3" height="15.0" fill="rgb(219,194,53)" rx="2" ry="2" />
<text  x="992.92" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, true&gt;::_M_incr (4 samples, 0.06%)</title><rect x="1184.6" y="693" width="0.6" height="15.0" fill="rgb(233,111,7)" rx="2" ry="2" />
<text  x="1187.55" y="703.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2 samples, 0.03%)</title><rect x="125.2" y="853" width="0.4" height="15.0" fill="rgb(227,125,23)" rx="2" ry="2" />
<text  x="128.23" y="863.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="165.5" y="613" width="0.2" height="15.0" fill="rgb(225,31,0)" rx="2" ry="2" />
<text  x="168.51" y="623.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="301.0" y="517" width="0.2" height="15.0" fill="rgb(228,114,51)" rx="2" ry="2" />
<text  x="304.04" y="527.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="276.6" y="549" width="0.2" height="15.0" fill="rgb(217,51,39)" rx="2" ry="2" />
<text  x="279.61" y="559.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="754.5" y="549" width="0.2" height="15.0" fill="rgb(238,141,43)" rx="2" ry="2" />
<text  x="757.52" y="559.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="319.7" y="437" width="0.2" height="15.0" fill="rgb(231,18,35)" rx="2" ry="2" />
<text  x="322.69" y="447.5" ></text>
</g>
<g >
<title>schedule (18 samples, 0.25%)</title><rect x="990.3" y="581" width="2.9" height="15.0" fill="rgb(243,201,49)" rx="2" ry="2" />
<text  x="993.25" y="591.5" ></text>
</g>
<g >
<title>sse2_composite_over_8888_8888 (613 samples, 8.58%)</title><rect x="796.6" y="645" width="101.2" height="15.0" fill="rgb(219,209,50)" rx="2" ry="2" />
<text  x="799.61" y="655.5" >sse2_composi..</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="995.9" y="437" width="0.1" height="15.0" fill="rgb(225,205,54)" rx="2" ry="2" />
<text  x="998.86" y="447.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="673.3" y="325" width="0.2" height="15.0" fill="rgb(227,9,16)" rx="2" ry="2" />
<text  x="676.30" y="335.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="329.6" y="549" width="0.2" height="15.0" fill="rgb(235,73,47)" rx="2" ry="2" />
<text  x="332.60" y="559.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="375.3" y="565" width="0.2" height="15.0" fill="rgb(242,143,11)" rx="2" ry="2" />
<text  x="378.32" y="575.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="753.2" y="645" width="0.2" height="15.0" fill="rgb(238,79,38)" rx="2" ry="2" />
<text  x="756.20" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (1 samples, 0.01%)</title><rect x="985.3" y="661" width="0.2" height="15.0" fill="rgb(237,57,36)" rx="2" ry="2" />
<text  x="988.30" y="671.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (2 samples, 0.03%)</title><rect x="988.1" y="661" width="0.3" height="15.0" fill="rgb(214,201,47)" rx="2" ry="2" />
<text  x="991.11" y="671.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="753.0" y="613" width="0.2" height="15.0" fill="rgb(244,146,28)" rx="2" ry="2" />
<text  x="756.03" y="623.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="940.7" y="389" width="0.2" height="15.0" fill="rgb(249,34,0)" rx="2" ry="2" />
<text  x="943.73" y="399.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (2 samples, 0.03%)</title><rect x="467.9" y="549" width="0.4" height="15.0" fill="rgb(230,107,30)" rx="2" ry="2" />
<text  x="470.94" y="559.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (4 samples, 0.06%)</title><rect x="989.3" y="629" width="0.6" height="15.0" fill="rgb(250,182,32)" rx="2" ry="2" />
<text  x="992.26" y="639.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="597.9" y="517" width="0.1" height="15.0" fill="rgb(205,42,4)" rx="2" ry="2" />
<text  x="600.85" y="527.5" ></text>
</g>
<g >
<title>Opacity::IsTransparent (1 samples, 0.01%)</title><rect x="792.6" y="661" width="0.2" height="15.0" fill="rgb(206,77,31)" rx="2" ry="2" />
<text  x="795.65" y="671.5" ></text>
</g>
<g >
<title>_mm_shufflelo_epi16 (3 samples, 0.04%)</title><rect x="828.5" y="581" width="0.5" height="15.0" fill="rgb(243,139,15)" rx="2" ry="2" />
<text  x="831.47" y="591.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (3 samples, 0.04%)</title><rect x="582.7" y="629" width="0.5" height="15.0" fill="rgb(214,179,13)" rx="2" ry="2" />
<text  x="585.67" y="639.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="359.1" y="565" width="0.2" height="15.0" fill="rgb(206,17,16)" rx="2" ry="2" />
<text  x="362.15" y="575.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="967.5" y="533" width="0.1" height="15.0" fill="rgb(245,167,21)" rx="2" ry="2" />
<text  x="970.47" y="543.5" ></text>
</g>
<g >
<title>save_128_aligned (2 samples, 0.03%)</title><rect x="301.2" y="613" width="0.3" height="15.0" fill="rgb(251,210,12)" rx="2" ry="2" />
<text  x="304.20" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="782.2" y="645" width="0.2" height="15.0" fill="rgb(211,151,0)" rx="2" ry="2" />
<text  x="785.25" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (4 samples, 0.06%)</title><rect x="25.0" y="869" width="0.7" height="15.0" fill="rgb(218,9,6)" rx="2" ry="2" />
<text  x="28.02" y="879.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandMovePicture (15 samples, 0.21%)</title><rect x="581.8" y="661" width="2.5" height="15.0" fill="rgb(251,37,22)" rx="2" ry="2" />
<text  x="584.84" y="671.5" ></text>
</g>
<g >
<title>Game_Map::GetBushDepth (1 samples, 0.01%)</title><rect x="986.0" y="677" width="0.1" height="15.0" fill="rgb(228,70,17)" rx="2" ry="2" />
<text  x="988.96" y="687.5" ></text>
</g>
<g >
<title>is_zero (102 samples, 1.43%)</title><rect x="837.1" y="597" width="16.8" height="15.0" fill="rgb(229,7,8)" rx="2" ry="2" />
<text  x="840.06" y="607.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="375.0" y="645" width="0.2" height="15.0" fill="rgb(230,168,27)" rx="2" ry="2" />
<text  x="377.99" y="655.5" ></text>
</g>
<g >
<title>_pixman_compute_composite_region32 (1 samples, 0.01%)</title><rect x="305.5" y="613" width="0.2" height="15.0" fill="rgb(207,199,47)" rx="2" ry="2" />
<text  x="308.50" y="623.5" ></text>
</g>
<g >
<title>[unknown] (/tmp/.glXDM2C5 (202 samples, 2.83%)</title><rect x="88.9" y="869" width="33.4" height="15.0" fill="rgb(248,4,2)" rx="2" ry="2" />
<text  x="91.91" y="879.5" >[u..</text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (61 samples, 0.85%)</title><rect x="758.5" y="661" width="10.0" height="15.0" fill="rgb(254,224,3)" rx="2" ry="2" />
<text  x="761.48" y="671.5" ></text>
</g>
<g >
<title>X11_DispatchEvent (1 samples, 0.01%)</title><rect x="988.4" y="677" width="0.2" height="15.0" fill="rgb(223,208,30)" rx="2" ry="2" />
<text  x="991.44" y="687.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="223.1" y="517" width="0.2" height="15.0" fill="rgb(218,217,20)" rx="2" ry="2" />
<text  x="226.12" y="527.5" ></text>
</g>
<g >
<title>[[stack]] (65 samples, 0.91%)</title><rect x="67.4" y="869" width="10.8" height="15.0" fill="rgb(232,114,50)" rx="2" ry="2" />
<text  x="70.45" y="879.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="319.7" y="357" width="0.2" height="15.0" fill="rgb(237,110,47)" rx="2" ry="2" />
<text  x="322.69" y="367.5" ></text>
</g>
<g >
<title>__sched_text_start (18 samples, 0.25%)</title><rect x="990.3" y="565" width="2.9" height="15.0" fill="rgb(218,218,54)" rx="2" ry="2" />
<text  x="993.25" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_getpid (1 samples, 0.01%)</title><rect x="25.8" y="853" width="0.2" height="15.0" fill="rgb(239,207,32)" rx="2" ry="2" />
<text  x="28.85" y="863.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="605.8" y="373" width="0.1" height="15.0" fill="rgb(233,144,26)" rx="2" ry="2" />
<text  x="608.78" y="383.5" ></text>
</g>
<g >
<title>_pixman_image_validate (6 samples, 0.08%)</title><rect x="169.1" y="629" width="1.0" height="15.0" fill="rgb(242,221,38)" rx="2" ry="2" />
<text  x="172.14" y="639.5" ></text>
</g>
<g >
<title>xhci_urb_enqueue (1 samples, 0.01%)</title><rect x="276.6" y="261" width="0.2" height="15.0" fill="rgb(242,172,26)" rx="2" ry="2" />
<text  x="279.61" y="271.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="1160.9" y="565" width="0.2" height="15.0" fill="rgb(239,156,36)" rx="2" ry="2" />
<text  x="1163.95" y="575.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (4 samples, 0.06%)</title><rect x="593.9" y="629" width="0.7" height="15.0" fill="rgb(225,101,19)" rx="2" ry="2" />
<text  x="596.89" y="639.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="598.2" y="373" width="0.1" height="15.0" fill="rgb(215,88,13)" rx="2" ry="2" />
<text  x="601.18" y="383.5" ></text>
</g>
<g >
<title>__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int&gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;Input::UiSource::Update()::&lt;lambda(int)&gt; &gt; &gt; (2 samples, 0.03%)</title><rect x="373.8" y="661" width="0.4" height="15.0" fill="rgb(245,147,1)" rx="2" ry="2" />
<text  x="376.84" y="671.5" ></text>
</g>
<g >
<title>__wake_up_common (10 samples, 0.14%)</title><rect x="49.0" y="741" width="1.6" height="15.0" fill="rgb(223,5,46)" rx="2" ry="2" />
<text  x="51.96" y="751.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.01%)</title><rect x="708.5" y="581" width="0.1" height="15.0" fill="rgb(254,198,33)" rx="2" ry="2" />
<text  x="711.46" y="591.5" ></text>
</g>
<g >
<title>dequeue_task_fair (3 samples, 0.04%)</title><rect x="32.0" y="709" width="0.5" height="15.0" fill="rgb(218,37,42)" rx="2" ry="2" />
<text  x="34.96" y="719.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="673.3" y="341" width="0.2" height="15.0" fill="rgb(207,4,53)" rx="2" ry="2" />
<text  x="676.30" y="351.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="1171.7" y="485" width="0.1" height="15.0" fill="rgb(222,4,8)" rx="2" ry="2" />
<text  x="1174.68" y="495.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (18 samples, 0.25%)</title><rect x="650.3" y="485" width="3.0" height="15.0" fill="rgb(209,83,51)" rx="2" ry="2" />
<text  x="653.35" y="495.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.01%)</title><rect x="74.7" y="853" width="0.2" height="15.0" fill="rgb(220,44,35)" rx="2" ry="2" />
<text  x="77.71" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (15 samples, 0.21%)</title><rect x="619.3" y="453" width="2.5" height="15.0" fill="rgb(243,165,13)" rx="2" ry="2" />
<text  x="622.31" y="463.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="255.8" y="549" width="0.3" height="15.0" fill="rgb(230,207,36)" rx="2" ry="2" />
<text  x="258.81" y="559.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="373.2" y="549" width="0.1" height="15.0" fill="rgb(249,126,11)" rx="2" ry="2" />
<text  x="376.18" y="559.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.01%)</title><rect x="582.2" y="517" width="0.1" height="15.0" fill="rgb(254,51,31)" rx="2" ry="2" />
<text  x="585.17" y="527.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="657.8" y="325" width="0.1" height="15.0" fill="rgb(229,173,18)" rx="2" ry="2" />
<text  x="660.78" y="335.5" ></text>
</g>
<g >
<title>retire_playback_urb (1 samples, 0.01%)</title><rect x="404.9" y="437" width="0.1" height="15.0" fill="rgb(246,42,26)" rx="2" ry="2" />
<text  x="407.87" y="447.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;::basic_ostream (1 samples, 0.01%)</title><rect x="708.5" y="597" width="0.1" height="15.0" fill="rgb(252,60,12)" rx="2" ry="2" />
<text  x="711.46" y="607.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="932.0" y="341" width="0.1" height="15.0" fill="rgb(207,107,29)" rx="2" ry="2" />
<text  x="934.98" y="351.5" ></text>
</g>
<g >
<title>xhci_irq (2 samples, 0.03%)</title><rect x="849.4" y="437" width="0.4" height="15.0" fill="rgb(216,180,43)" rx="2" ry="2" />
<text  x="852.44" y="447.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (8 samples, 0.11%)</title><rect x="359.5" y="613" width="1.3" height="15.0" fill="rgb(223,97,12)" rx="2" ry="2" />
<text  x="362.48" y="623.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (15 samples, 0.21%)</title><rect x="375.2" y="677" width="2.4" height="15.0" fill="rgb(212,216,36)" rx="2" ry="2" />
<text  x="378.16" y="687.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**&gt; (1 samples, 0.01%)</title><rect x="373.2" y="613" width="0.1" height="15.0" fill="rgb(221,81,42)" rx="2" ry="2" />
<text  x="376.18" y="623.5" ></text>
</g>
<g >
<title>Tone::Tone (6 samples, 0.08%)</title><rect x="970.8" y="677" width="1.0" height="15.0" fill="rgb(206,28,2)" rx="2" ry="2" />
<text  x="973.77" y="687.5" ></text>
</g>
<g >
<title>x86_pmu_enable (12 samples, 0.17%)</title><rect x="991.1" y="501" width="2.0" height="15.0" fill="rgb(240,70,17)" rx="2" ry="2" />
<text  x="994.08" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (5 samples, 0.07%)</title><rect x="654.3" y="437" width="0.8" height="15.0" fill="rgb(244,150,18)" rx="2" ry="2" />
<text  x="657.31" y="447.5" ></text>
</g>
<g >
<title>Sprite::Refresh (38 samples, 0.53%)</title><rect x="354.5" y="693" width="6.3" height="15.0" fill="rgb(226,86,26)" rx="2" ry="2" />
<text  x="357.52" y="703.5" ></text>
</g>
<g >
<title>SDL_GetTicks_REAL (2 samples, 0.03%)</title><rect x="1172.2" y="709" width="0.3" height="15.0" fill="rgb(232,168,28)" rx="2" ry="2" />
<text  x="1175.17" y="719.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (2 samples, 0.03%)</title><rect x="703.8" y="485" width="0.4" height="15.0" fill="rgb(228,143,12)" rx="2" ry="2" />
<text  x="706.84" y="495.5" ></text>
</g>
<g >
<title>eventfd_poll (1 samples, 0.01%)</title><rect x="46.8" y="821" width="0.2" height="15.0" fill="rgb(215,158,12)" rx="2" ry="2" />
<text  x="49.81" y="831.5" ></text>
</g>
<g >
<title>led_trigger_blink_oneshot (1 samples, 0.01%)</title><rect x="1171.7" y="245" width="0.1" height="15.0" fill="rgb(250,50,9)" rx="2" ry="2" />
<text  x="1174.68" y="255.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="753.2" y="613" width="0.2" height="15.0" fill="rgb(247,87,24)" rx="2" ry="2" />
<text  x="756.20" y="623.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.01%)</title><rect x="993.1" y="549" width="0.1" height="15.0" fill="rgb(223,143,10)" rx="2" ry="2" />
<text  x="996.06" y="559.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="468.1" y="453" width="0.2" height="15.0" fill="rgb(212,199,5)" rx="2" ry="2" />
<text  x="471.10" y="463.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (195 samples, 2.73%)</title><rect x="378.3" y="725" width="32.2" height="15.0" fill="rgb(222,16,1)" rx="2" ry="2" />
<text  x="381.30" y="735.5" >__..</text>
</g>
<g >
<title>activate_task (1 samples, 0.01%)</title><rect x="587.3" y="85" width="0.2" height="15.0" fill="rgb(253,167,22)" rx="2" ry="2" />
<text  x="590.29" y="95.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (17 samples, 0.24%)</title><rect x="655.1" y="485" width="2.8" height="15.0" fill="rgb(209,70,49)" rx="2" ry="2" />
<text  x="658.14" y="495.5" ></text>
</g>
<g >
<title>_pixman_image_allocate (39 samples, 0.55%)</title><rect x="934.9" y="485" width="6.5" height="15.0" fill="rgb(217,188,8)" rx="2" ry="2" />
<text  x="937.95" y="495.5" ></text>
</g>
<g >
<title>put_prev_task_fair (1 samples, 0.01%)</title><rect x="46.2" y="725" width="0.1" height="15.0" fill="rgb(240,42,14)" rx="2" ry="2" />
<text  x="49.15" y="735.5" ></text>
</g>
<g >
<title>__strlen_avx2 (2 samples, 0.03%)</title><rect x="662.2" y="501" width="0.4" height="15.0" fill="rgb(206,93,0)" rx="2" ry="2" />
<text  x="665.24" y="511.5" ></text>
</g>
<g >
<title>main (6,376 samples, 89.20%)</title><rect x="133.5" y="837" width="1052.5" height="15.0" fill="rgb(247,66,46)" rx="2" ry="2" />
<text  x="136.48" y="847.5" >main</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="467.8" y="581" width="0.1" height="15.0" fill="rgb(231,175,25)" rx="2" ry="2" />
<text  x="470.77" y="591.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (3 samples, 0.04%)</title><rect x="121.4" y="757" width="0.5" height="15.0" fill="rgb(235,128,35)" rx="2" ry="2" />
<text  x="124.43" y="767.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="983.0" y="661" width="0.2" height="15.0" fill="rgb(206,217,30)" rx="2" ry="2" />
<text  x="985.99" y="671.5" ></text>
</g>
<g >
<title>pixman_image_set_transform (1 samples, 0.01%)</title><rect x="131.2" y="853" width="0.1" height="15.0" fill="rgb(249,99,22)" rx="2" ry="2" />
<text  x="134.17" y="863.5" ></text>
</g>
<g >
<title>SDL_JoystickUpdate_REAL (1 samples, 0.01%)</title><rect x="987.9" y="693" width="0.2" height="15.0" fill="rgb(205,22,10)" rx="2" ry="2" />
<text  x="990.94" y="703.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (344 samples, 4.81%)</title><rect x="899.3" y="597" width="56.8" height="15.0" fill="rgb(230,164,14)" rx="2" ry="2" />
<text  x="902.29" y="607.5" >std::_..</text>
</g>
<g >
<title>update_curr (1 samples, 0.01%)</title><rect x="587.3" y="37" width="0.2" height="15.0" fill="rgb(242,60,30)" rx="2" ry="2" />
<text  x="590.29" y="47.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="348.9" y="549" width="0.2" height="15.0" fill="rgb(247,49,14)" rx="2" ry="2" />
<text  x="351.91" y="559.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="51.1" y="757" width="0.2" height="15.0" fill="rgb(220,197,53)" rx="2" ry="2" />
<text  x="54.11" y="767.5" ></text>
</g>
<g >
<title>_mm_or_si128 (17 samples, 0.24%)</title><rect x="269.7" y="613" width="2.8" height="15.0" fill="rgb(240,146,21)" rx="2" ry="2" />
<text  x="272.67" y="623.5" ></text>
</g>
<g >
<title>handle_irq (2 samples, 0.03%)</title><rect x="703.8" y="533" width="0.4" height="15.0" fill="rgb(250,86,44)" rx="2" ry="2" />
<text  x="706.84" y="543.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.01%)</title><rect x="276.6" y="309" width="0.2" height="15.0" fill="rgb(244,125,38)" rx="2" ry="2" />
<text  x="279.61" y="319.5" ></text>
</g>
<g >
<title>max&lt;int&gt; (1 samples, 0.01%)</title><rect x="570.5" y="645" width="0.1" height="15.0" fill="rgb(227,64,30)" rx="2" ry="2" />
<text  x="573.45" y="655.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="883.4" y="485" width="0.2" height="15.0" fill="rgb(248,208,35)" rx="2" ry="2" />
<text  x="886.44" y="495.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (10 samples, 0.14%)</title><rect x="1161.1" y="565" width="1.7" height="15.0" fill="rgb(249,116,21)" rx="2" ry="2" />
<text  x="1164.11" y="575.5" ></text>
</g>
<g >
<title>__vfs_write (13 samples, 0.18%)</title><rect x="48.8" y="789" width="2.1" height="15.0" fill="rgb(229,131,33)" rx="2" ry="2" />
<text  x="51.79" y="799.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="468.1" y="421" width="0.2" height="15.0" fill="rgb(235,93,18)" rx="2" ry="2" />
<text  x="471.10" y="431.5" ></text>
</g>
<g >
<title>put_prev_task_fair (1 samples, 0.01%)</title><rect x="46.0" y="709" width="0.2" height="15.0" fill="rgb(215,32,36)" rx="2" ry="2" />
<text  x="48.99" y="719.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="319.5" y="501" width="0.2" height="15.0" fill="rgb(246,160,35)" rx="2" ry="2" />
<text  x="322.53" y="511.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="319.7" y="517" width="0.2" height="15.0" fill="rgb(220,136,0)" rx="2" ry="2" />
<text  x="322.69" y="527.5" ></text>
</g>
<g >
<title>std::bitset&lt;32ul&gt;::reference::operator= (1 samples, 0.01%)</title><rect x="581.7" y="645" width="0.1" height="15.0" fill="rgb(235,192,5)" rx="2" ry="2" />
<text  x="584.68" y="655.5" ></text>
</g>
<g >
<title>xhci_irq (2 samples, 0.03%)</title><rect x="255.8" y="437" width="0.3" height="15.0" fill="rgb(246,87,20)" rx="2" ry="2" />
<text  x="258.81" y="447.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="753.2" y="629" width="0.2" height="15.0" fill="rgb(215,0,39)" rx="2" ry="2" />
<text  x="756.20" y="639.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="264.4" y="533" width="0.2" height="15.0" fill="rgb(243,192,11)" rx="2" ry="2" />
<text  x="267.39" y="543.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (11 samples, 0.15%)</title><rect x="690.8" y="469" width="1.8" height="15.0" fill="rgb(240,155,47)" rx="2" ry="2" />
<text  x="693.79" y="479.5" ></text>
</g>
<g >
<title>poll (1 samples, 0.01%)</title><rect x="994.5" y="629" width="0.2" height="15.0" fill="rgb(218,145,30)" rx="2" ry="2" />
<text  x="997.54" y="639.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="294.6" y="549" width="0.2" height="15.0" fill="rgb(240,29,50)" rx="2" ry="2" />
<text  x="297.60" y="559.5" ></text>
</g>
<g >
<title>in_over_1x128 (3 samples, 0.04%)</title><rect x="342.1" y="581" width="0.5" height="15.0" fill="rgb(247,121,33)" rx="2" ry="2" />
<text  x="345.14" y="591.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="883.4" y="565" width="0.2" height="15.0" fill="rgb(205,93,33)" rx="2" ry="2" />
<text  x="886.44" y="575.5" ></text>
</g>
<g >
<title>account_entity_enqueue (1 samples, 0.01%)</title><rect x="377.3" y="341" width="0.2" height="15.0" fill="rgb(216,17,30)" rx="2" ry="2" />
<text  x="380.31" y="351.5" ></text>
</g>
<g >
<title>__exchange_and_add (5 samples, 0.07%)</title><rect x="353.7" y="581" width="0.8" height="15.0" fill="rgb(224,75,2)" rx="2" ry="2" />
<text  x="356.70" y="591.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandWait (2 samples, 0.03%)</title><rect x="713.4" y="661" width="0.3" height="15.0" fill="rgb(240,22,30)" rx="2" ry="2" />
<text  x="716.41" y="671.5" ></text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.01%)</title><rect x="374.2" y="709" width="0.1" height="15.0" fill="rgb(205,147,28)" rx="2" ry="2" />
<text  x="377.17" y="719.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (1 samples, 0.01%)</title><rect x="989.4" y="437" width="0.2" height="15.0" fill="rgb(230,176,34)" rx="2" ry="2" />
<text  x="992.43" y="447.5" ></text>
</g>
<g >
<title>sse2_composite_copy_area (1 samples, 0.01%)</title><rect x="364.3" y="645" width="0.1" height="15.0" fill="rgb(246,201,42)" rx="2" ry="2" />
<text  x="367.26" y="655.5" ></text>
</g>
<g >
<title>__vfs_read (5 samples, 0.07%)</title><rect x="47.3" y="789" width="0.8" height="15.0" fill="rgb(233,181,48)" rx="2" ry="2" />
<text  x="50.31" y="799.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (5 samples, 0.07%)</title><rect x="360.8" y="661" width="0.8" height="15.0" fill="rgb(240,136,37)" rx="2" ry="2" />
<text  x="363.80" y="671.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (2 samples, 0.03%)</title><rect x="696.4" y="597" width="0.3" height="15.0" fill="rgb(216,205,42)" rx="2" ry="2" />
<text  x="699.41" y="607.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="598.2" y="501" width="0.1" height="15.0" fill="rgb(214,194,41)" rx="2" ry="2" />
<text  x="601.18" y="511.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="467.8" y="533" width="0.1" height="15.0" fill="rgb(246,100,19)" rx="2" ry="2" />
<text  x="470.77" y="543.5" ></text>
</g>
<g >
<title>schedule (92 samples, 1.29%)</title><rect x="31.1" y="757" width="15.2" height="15.0" fill="rgb(232,63,24)" rx="2" ry="2" />
<text  x="34.13" y="767.5" ></text>
</g>
<g >
<title>handle_irq_event (2 samples, 0.03%)</title><rect x="925.5" y="357" width="0.4" height="15.0" fill="rgb(249,124,20)" rx="2" ry="2" />
<text  x="928.54" y="367.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (79 samples, 1.11%)</title><rect x="713.7" y="661" width="13.1" height="15.0" fill="rgb(219,129,0)" rx="2" ry="2" />
<text  x="716.74" y="671.5" ></text>
</g>
<g >
<title>__GI___nanosleep (15 samples, 0.21%)</title><rect x="375.2" y="725" width="2.4" height="15.0" fill="rgb(242,113,48)" rx="2" ry="2" />
<text  x="378.16" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::size (1 samples, 0.01%)</title><rect x="455.2" y="613" width="0.2" height="15.0" fill="rgb(234,213,34)" rx="2" ry="2" />
<text  x="458.22" y="623.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (5 samples, 0.07%)</title><rect x="756.7" y="661" width="0.8" height="15.0" fill="rgb(208,137,51)" rx="2" ry="2" />
<text  x="759.66" y="671.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, Drawable**, Drawable**&gt; (1 samples, 0.01%)</title><rect x="372.7" y="581" width="0.1" height="15.0" fill="rgb(216,152,52)" rx="2" ry="2" />
<text  x="375.68" y="591.5" ></text>
</g>
<g >
<title>SDL_LowerBlit_REAL (1 samples, 0.01%)</title><rect x="998.8" y="677" width="0.2" height="15.0" fill="rgb(221,134,34)" rx="2" ry="2" />
<text  x="1001.84" y="687.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.01%)</title><rect x="377.3" y="485" width="0.2" height="15.0" fill="rgb(242,69,19)" rx="2" ry="2" />
<text  x="380.31" y="495.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="472.7" y="421" width="0.2" height="15.0" fill="rgb(216,203,2)" rx="2" ry="2" />
<text  x="475.72" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (22 samples, 0.31%)</title><rect x="608.6" y="549" width="3.6" height="15.0" fill="rgb(242,144,37)" rx="2" ry="2" />
<text  x="611.58" y="559.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (22 samples, 0.31%)</title><rect x="700.2" y="549" width="3.6" height="15.0" fill="rgb(239,127,46)" rx="2" ry="2" />
<text  x="703.20" y="559.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="561.9" y="613" width="0.1" height="15.0" fill="rgb(207,135,7)" rx="2" ry="2" />
<text  x="564.87" y="623.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (1 samples, 0.01%)</title><rect x="161.0" y="725" width="0.2" height="15.0" fill="rgb(245,28,51)" rx="2" ry="2" />
<text  x="164.05" y="735.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="272.3" y="517" width="0.2" height="15.0" fill="rgb(237,183,16)" rx="2" ry="2" />
<text  x="275.31" y="527.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.01%)</title><rect x="995.5" y="373" width="0.2" height="15.0" fill="rgb(215,206,18)" rx="2" ry="2" />
<text  x="998.53" y="383.5" ></text>
</g>
<g >
<title>[libXi.so.6.1.0] (1 samples, 0.01%)</title><rect x="996.0" y="581" width="0.2" height="15.0" fill="rgb(240,115,37)" rx="2" ry="2" />
<text  x="999.03" y="591.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (2,201 samples, 30.79%)</title><rect x="410.7" y="709" width="363.3" height="15.0" fill="rgb(220,67,3)" rx="2" ry="2" />
<text  x="413.65" y="719.5" >Game_Map::UpdateCommonEvents</text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="155.9" y="709" width="0.4" height="15.0" fill="rgb(234,122,54)" rx="2" ry="2" />
<text  x="158.93" y="719.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="155.8" y="709" width="0.1" height="15.0" fill="rgb(218,85,10)" rx="2" ry="2" />
<text  x="158.77" y="719.5" ></text>
</g>
<g >
<title>std::__move_merge_adaptive&lt;Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (3 samples, 0.04%)</title><rect x="368.6" y="645" width="0.5" height="15.0" fill="rgb(251,21,33)" rx="2" ry="2" />
<text  x="371.56" y="655.5" ></text>
</g>
<g >
<title>_pixman_multiply_overflows_size (11 samples, 0.15%)</title><rect x="933.0" y="453" width="1.8" height="15.0" fill="rgb(208,225,54)" rx="2" ry="2" />
<text  x="935.97" y="463.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (69 samples, 0.97%)</title><rect x="33.4" y="645" width="11.4" height="15.0" fill="rgb(208,178,5)" rx="2" ry="2" />
<text  x="36.44" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (2 samples, 0.03%)</title><rect x="452.3" y="629" width="0.3" height="15.0" fill="rgb(240,173,7)" rx="2" ry="2" />
<text  x="455.25" y="639.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="704.0" y="421" width="0.2" height="15.0" fill="rgb(219,166,4)" rx="2" ry="2" />
<text  x="707.00" y="431.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="753.2" y="581" width="0.2" height="15.0" fill="rgb(221,129,30)" rx="2" ry="2" />
<text  x="756.20" y="591.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (92 samples, 1.29%)</title><rect x="31.1" y="789" width="15.2" height="15.0" fill="rgb(221,11,43)" rx="2" ry="2" />
<text  x="34.13" y="799.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="753.2" y="597" width="0.2" height="15.0" fill="rgb(213,188,10)" rx="2" ry="2" />
<text  x="756.20" y="607.5" ></text>
</g>
<g >
<title>__atomic_add (4 samples, 0.06%)</title><rect x="653.7" y="437" width="0.6" height="15.0" fill="rgb(213,105,6)" rx="2" ry="2" />
<text  x="656.65" y="447.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="571.3" y="453" width="0.1" height="15.0" fill="rgb(227,73,43)" rx="2" ry="2" />
<text  x="574.28" y="463.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="165.5" y="597" width="0.2" height="15.0" fill="rgb(252,9,21)" rx="2" ry="2" />
<text  x="168.51" y="607.5" ></text>
</g>
<g >
<title>_mm_adds_epu16 (11 samples, 0.15%)</title><rect x="240.1" y="565" width="1.8" height="15.0" fill="rgb(220,10,40)" rx="2" ry="2" />
<text  x="243.12" y="575.5" ></text>
</g>
<g >
<title>Scene::MainFunction (6,373 samples, 89.16%)</title><rect x="133.6" y="789" width="1052.1" height="15.0" fill="rgb(235,160,28)" rx="2" ry="2" />
<text  x="136.65" y="799.5" >Scene::MainFunction</text>
</g>
<g >
<title>GetRequest (31 samples, 0.43%)</title><rect x="625.3" y="517" width="5.1" height="15.0" fill="rgb(250,55,34)" rx="2" ry="2" />
<text  x="628.26" y="527.5" ></text>
</g>
<g >
<title>packet_rcv (1 samples, 0.01%)</title><rect x="122.1" y="661" width="0.2" height="15.0" fill="rgb(216,156,40)" rx="2" ry="2" />
<text  x="125.09" y="671.5" ></text>
</g>
<g >
<title>_pixman_bits_image_init (4 samples, 0.06%)</title><rect x="126.9" y="853" width="0.6" height="15.0" fill="rgb(235,83,39)" rx="2" ry="2" />
<text  x="129.88" y="863.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="657.0" y="325" width="0.1" height="15.0" fill="rgb(239,69,18)" rx="2" ry="2" />
<text  x="659.95" y="335.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="756.5" y="501" width="0.2" height="15.0" fill="rgb(248,21,15)" rx="2" ry="2" />
<text  x="759.50" y="511.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (1 samples, 0.01%)</title><rect x="995.0" y="405" width="0.2" height="15.0" fill="rgb(207,89,26)" rx="2" ry="2" />
<text  x="998.04" y="415.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="223.4" y="581" width="0.2" height="15.0" fill="rgb(237,26,34)" rx="2" ry="2" />
<text  x="226.45" y="591.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="319.7" y="533" width="0.2" height="15.0" fill="rgb(221,208,3)" rx="2" ry="2" />
<text  x="322.69" y="543.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.01%)</title><rect x="993.7" y="565" width="0.2" height="15.0" fill="rgb(228,171,13)" rx="2" ry="2" />
<text  x="996.72" y="575.5" ></text>
</g>
<g >
<title>GL_UpdateTexture (54 samples, 0.76%)</title><rect x="1163.1" y="661" width="8.9" height="15.0" fill="rgb(246,154,35)" rx="2" ry="2" />
<text  x="1166.09" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (10 samples, 0.14%)</title><rect x="625.4" y="437" width="1.7" height="15.0" fill="rgb(252,206,40)" rx="2" ry="2" />
<text  x="628.42" y="447.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.01%)</title><rect x="587.3" y="69" width="0.2" height="15.0" fill="rgb(231,19,51)" rx="2" ry="2" />
<text  x="590.29" y="79.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (2 samples, 0.03%)</title><rect x="467.4" y="629" width="0.4" height="15.0" fill="rgb(238,164,2)" rx="2" ry="2" />
<text  x="470.44" y="639.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="276.6" y="325" width="0.2" height="15.0" fill="rgb(212,147,12)" rx="2" ry="2" />
<text  x="279.61" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (8 samples, 0.11%)</title><rect x="652.0" y="421" width="1.3" height="15.0" fill="rgb(237,177,3)" rx="2" ry="2" />
<text  x="655.00" y="431.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.01%)</title><rect x="307.8" y="597" width="0.2" height="15.0" fill="rgb(235,81,31)" rx="2" ry="2" />
<text  x="310.81" y="607.5" ></text>
</g>
<g >
<title>sock_poll (3 samples, 0.04%)</title><rect x="46.3" y="805" width="0.5" height="15.0" fill="rgb(214,16,1)" rx="2" ry="2" />
<text  x="49.32" y="815.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (36 samples, 0.50%)</title><rect x="962.5" y="677" width="6.0" height="15.0" fill="rgb(242,191,24)" rx="2" ry="2" />
<text  x="965.52" y="687.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="756.5" y="517" width="0.2" height="15.0" fill="rgb(249,171,23)" rx="2" ry="2" />
<text  x="759.50" y="527.5" ></text>
</g>
<g >
<title>memcpy@plt (2 samples, 0.03%)</title><rect x="620.0" y="437" width="0.3" height="15.0" fill="rgb(248,47,43)" rx="2" ry="2" />
<text  x="622.97" y="447.5" ></text>
</g>
<g >
<title>PicPointerPatch::ReplaceName (5 samples, 0.07%)</title><rect x="706.3" y="645" width="0.8" height="15.0" fill="rgb(229,165,44)" rx="2" ry="2" />
<text  x="709.31" y="655.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="694.3" y="453" width="0.1" height="15.0" fill="rgb(214,156,20)" rx="2" ry="2" />
<text  x="697.26" y="463.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (8 samples, 0.11%)</title><rect x="667.2" y="501" width="1.3" height="15.0" fill="rgb(205,102,3)" rx="2" ry="2" />
<text  x="670.19" y="511.5" ></text>
</g>
<g >
<title>handle_irq (2 samples, 0.03%)</title><rect x="925.5" y="389" width="0.4" height="15.0" fill="rgb(230,152,5)" rx="2" ry="2" />
<text  x="928.54" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (5 samples, 0.07%)</title><rect x="726.0" y="645" width="0.8" height="15.0" fill="rgb(221,96,14)" rx="2" ry="2" />
<text  x="728.96" y="655.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.01%)</title><rect x="30.1" y="805" width="0.2" height="15.0" fill="rgb(237,142,18)" rx="2" ry="2" />
<text  x="33.14" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;::operator++ (1 samples, 0.01%)</title><rect x="371.4" y="613" width="0.1" height="15.0" fill="rgb(221,135,5)" rx="2" ry="2" />
<text  x="374.36" y="623.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (5 samples, 0.07%)</title><rect x="360.8" y="677" width="0.8" height="15.0" fill="rgb(251,154,29)" rx="2" ry="2" />
<text  x="363.80" y="687.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="85.8" y="853" width="0.1" height="15.0" fill="rgb(233,2,16)" rx="2" ry="2" />
<text  x="88.77" y="863.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (11 samples, 0.15%)</title><rect x="694.4" y="565" width="1.8" height="15.0" fill="rgb(220,185,32)" rx="2" ry="2" />
<text  x="697.43" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="993.6" y="565" width="0.1" height="15.0" fill="rgb(247,99,52)" rx="2" ry="2" />
<text  x="996.55" y="575.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="264.4" y="581" width="0.2" height="15.0" fill="rgb(229,198,21)" rx="2" ry="2" />
<text  x="267.39" y="591.5" ></text>
</g>
<g >
<title>_mm_unpackhi_epi8 (14 samples, 0.20%)</title><rect x="262.2" y="597" width="2.4" height="15.0" fill="rgb(225,45,13)" rx="2" ry="2" />
<text  x="265.24" y="607.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (5 samples, 0.07%)</title><rect x="353.7" y="677" width="0.8" height="15.0" fill="rgb(211,170,1)" rx="2" ry="2" />
<text  x="356.70" y="687.5" ></text>
</g>
<g >
<title>SDL_GetTicks_REAL (198 samples, 2.77%)</title><rect x="377.8" y="741" width="32.7" height="15.0" fill="rgb(218,170,6)" rx="2" ry="2" />
<text  x="380.80" y="751.5" >SD..</text>
</g>
<g >
<title>poll_freewait (2 samples, 0.03%)</title><rect x="30.8" y="805" width="0.3" height="15.0" fill="rgb(254,30,2)" rx="2" ry="2" />
<text  x="33.80" y="815.5" ></text>
</g>
<g >
<title>Game_Map::LoopVertical (1 samples, 0.01%)</title><rect x="363.9" y="693" width="0.2" height="15.0" fill="rgb(207,154,37)" rx="2" ry="2" />
<text  x="366.93" y="703.5" ></text>
</g>
<g >
<title>handle_edge_irq (4 samples, 0.06%)</title><rect x="538.9" y="581" width="0.7" height="15.0" fill="rgb(226,52,4)" rx="2" ry="2" />
<text  x="541.92" y="591.5" ></text>
</g>
<g >
<title>Sprite::SetVisible (1 samples, 0.01%)</title><rect x="985.8" y="693" width="0.2" height="15.0" fill="rgb(214,62,40)" rx="2" ry="2" />
<text  x="988.79" y="703.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="1160.9" y="549" width="0.2" height="15.0" fill="rgb(245,75,36)" rx="2" ry="2" />
<text  x="1163.95" y="559.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="297.4" y="581" width="0.2" height="15.0" fill="rgb(243,115,6)" rx="2" ry="2" />
<text  x="300.41" y="591.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.01%)</title><rect x="297.4" y="533" width="0.2" height="15.0" fill="rgb(207,152,54)" rx="2" ry="2" />
<text  x="300.41" y="543.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.01%)</title><rect x="614.5" y="517" width="0.2" height="15.0" fill="rgb(231,57,33)" rx="2" ry="2" />
<text  x="617.53" y="527.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="605.8" y="517" width="0.1" height="15.0" fill="rgb(219,120,24)" rx="2" ry="2" />
<text  x="608.78" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (8 samples, 0.11%)</title><rect x="704.3" y="597" width="1.4" height="15.0" fill="rgb(254,124,0)" rx="2" ry="2" />
<text  x="707.33" y="607.5" ></text>
</g>
<g >
<title>_mm_mullo_epi16 (22 samples, 0.31%)</title><rect x="252.5" y="581" width="3.6" height="15.0" fill="rgb(232,71,25)" rx="2" ry="2" />
<text  x="255.50" y="591.5" ></text>
</g>
<g >
<title>Bitmap::GetWidth (5 samples, 0.07%)</title><rect x="956.6" y="677" width="0.8" height="15.0" fill="rgb(238,7,30)" rx="2" ry="2" />
<text  x="959.58" y="687.5" ></text>
</g>
<g >
<title>operator!= (1 samples, 0.01%)</title><rect x="962.4" y="645" width="0.1" height="15.0" fill="rgb(248,157,39)" rx="2" ry="2" />
<text  x="965.35" y="655.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="964.5" y="581" width="0.2" height="15.0" fill="rgb(233,127,20)" rx="2" ry="2" />
<text  x="967.50" y="591.5" ></text>
</g>
<g >
<title>hrtimer_active (1 samples, 0.01%)</title><rect x="202.3" y="405" width="0.2" height="15.0" fill="rgb(216,21,27)" rx="2" ry="2" />
<text  x="205.32" y="415.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="359.1" y="613" width="0.2" height="15.0" fill="rgb(242,83,2)" rx="2" ry="2" />
<text  x="362.15" y="623.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (170 samples, 2.38%)</title><rect x="666.2" y="533" width="28.1" height="15.0" fill="rgb(207,212,25)" rx="2" ry="2" />
<text  x="669.20" y="543.5" >s..</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="995.4" y="389" width="0.1" height="15.0" fill="rgb(248,67,18)" rx="2" ry="2" />
<text  x="998.37" y="399.5" ></text>
</g>
<g >
<title>pix_multiply_2x128 (54 samples, 0.76%)</title><rect x="240.1" y="581" width="8.9" height="15.0" fill="rgb(214,5,47)" rx="2" ry="2" />
<text  x="243.12" y="591.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="223.4" y="485" width="0.2" height="15.0" fill="rgb(246,205,39)" rx="2" ry="2" />
<text  x="226.45" y="495.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (5 samples, 0.07%)</title><rect x="653.5" y="453" width="0.8" height="15.0" fill="rgb(233,1,35)" rx="2" ry="2" />
<text  x="656.49" y="463.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.01%)</title><rect x="925.9" y="405" width="0.1" height="15.0" fill="rgb(224,65,36)" rx="2" ry="2" />
<text  x="928.87" y="415.5" ></text>
</g>
<g >
<title>Sprite::BlitScreen (1,191 samples, 16.66%)</title><rect x="165.0" y="709" width="196.6" height="15.0" fill="rgb(218,159,17)" rx="2" ry="2" />
<text  x="168.01" y="719.5" >Sprite::BlitScreen</text>
</g>
<g >
<title>apic_ack_irq (1 samples, 0.01%)</title><rect x="768.4" y="565" width="0.1" height="15.0" fill="rgb(234,7,51)" rx="2" ry="2" />
<text  x="771.38" y="575.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="995.9" y="453" width="0.1" height="15.0" fill="rgb(217,71,48)" rx="2" ry="2" />
<text  x="998.86" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.08%)</title><rect x="86.1" y="821" width="1.0" height="15.0" fill="rgb(232,49,9)" rx="2" ry="2" />
<text  x="89.10" y="831.5" ></text>
</g>
<g >
<title>common_file_perm (1 samples, 0.01%)</title><rect x="50.9" y="741" width="0.2" height="15.0" fill="rgb(248,161,12)" rx="2" ry="2" />
<text  x="53.94" y="751.5" ></text>
</g>
<g >
<title>handle_edge_irq (3 samples, 0.04%)</title><rect x="888.6" y="549" width="0.5" height="15.0" fill="rgb(248,194,17)" rx="2" ry="2" />
<text  x="891.56" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.01%)</title><rect x="706.8" y="597" width="0.2" height="15.0" fill="rgb(208,108,51)" rx="2" ry="2" />
<text  x="709.81" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.01%)</title><rect x="472.6" y="629" width="0.1" height="15.0" fill="rgb(222,195,12)" rx="2" ry="2" />
<text  x="475.56" y="639.5" ></text>
</g>
<g >
<title>memcmp@plt (1 samples, 0.01%)</title><rect x="662.9" y="501" width="0.2" height="15.0" fill="rgb(253,191,47)" rx="2" ry="2" />
<text  x="665.90" y="511.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="572.9" y="581" width="0.2" height="15.0" fill="rgb(214,133,50)" rx="2" ry="2" />
<text  x="575.93" y="591.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="45.2" y="693" width="0.1" height="15.0" fill="rgb(207,133,17)" rx="2" ry="2" />
<text  x="48.16" y="703.5" ></text>
</g>
<g >
<title>led_trigger_blink_oneshot (1 samples, 0.01%)</title><rect x="319.7" y="325" width="0.2" height="15.0" fill="rgb(242,142,51)" rx="2" ry="2" />
<text  x="322.69" y="335.5" ></text>
</g>
<g >
<title>snd_usb_pcm_delay.part.14 (1 samples, 0.01%)</title><rect x="404.9" y="421" width="0.1" height="15.0" fill="rgb(254,226,50)" rx="2" ry="2" />
<text  x="407.87" y="431.5" ></text>
</g>
<g >
<title>Game_Player::UpdateSelfMovement (12 samples, 0.17%)</title><rect x="776.8" y="677" width="2.0" height="15.0" fill="rgb(207,189,12)" rx="2" ry="2" />
<text  x="779.80" y="687.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="968.6" y="517" width="0.2" height="15.0" fill="rgb(234,124,31)" rx="2" ry="2" />
<text  x="971.63" y="527.5" ></text>
</g>
<g >
<title>load_128_unaligned (12 samples, 0.17%)</title><rect x="259.9" y="613" width="2.0" height="15.0" fill="rgb(212,193,42)" rx="2" ry="2" />
<text  x="262.93" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (25 samples, 0.35%)</title><rect x="709.1" y="645" width="4.1" height="15.0" fill="rgb(248,60,53)" rx="2" ry="2" />
<text  x="712.12" y="655.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="290.0" y="533" width="0.1" height="15.0" fill="rgb(205,136,21)" rx="2" ry="2" />
<text  x="292.98" y="543.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="276.6" y="485" width="0.2" height="15.0" fill="rgb(249,173,50)" rx="2" ry="2" />
<text  x="279.61" y="495.5" ></text>
</g>
<g >
<title>insert_work (1 samples, 0.01%)</title><rect x="587.3" y="149" width="0.2" height="15.0" fill="rgb(207,103,36)" rx="2" ry="2" />
<text  x="590.29" y="159.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="379.3" y="661" width="0.3" height="15.0" fill="rgb(212,118,44)" rx="2" ry="2" />
<text  x="382.29" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.01%)</title><rect x="600.2" y="549" width="0.1" height="15.0" fill="rgb(217,94,26)" rx="2" ry="2" />
<text  x="603.17" y="559.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (265 samples, 3.71%)</title><rect x="899.5" y="533" width="43.7" height="15.0" fill="rgb(217,1,27)" rx="2" ry="2" />
<text  x="902.46" y="543.5" >Bitm..</text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (5 samples, 0.07%)</title><rect x="124.2" y="853" width="0.9" height="15.0" fill="rgb(249,151,13)" rx="2" ry="2" />
<text  x="127.24" y="863.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (4 samples, 0.06%)</title><rect x="989.3" y="597" width="0.6" height="15.0" fill="rgb(233,42,36)" rx="2" ry="2" />
<text  x="992.26" y="607.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="708.0" y="549" width="0.1" height="15.0" fill="rgb(218,63,2)" rx="2" ry="2" />
<text  x="710.96" y="559.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (3 samples, 0.04%)</title><rect x="51.6" y="869" width="0.5" height="15.0" fill="rgb(221,83,39)" rx="2" ry="2" />
<text  x="54.60" y="879.5" ></text>
</g>
<g >
<title>__libc_recvmsg (3 samples, 0.04%)</title><rect x="989.4" y="549" width="0.5" height="15.0" fill="rgb(215,119,8)" rx="2" ry="2" />
<text  x="992.43" y="559.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="202.5" y="549" width="0.3" height="15.0" fill="rgb(221,136,19)" rx="2" ry="2" />
<text  x="205.48" y="559.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="239.1" y="501" width="0.2" height="15.0" fill="rgb(222,157,29)" rx="2" ry="2" />
<text  x="242.13" y="511.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (20 samples, 0.28%)</title><rect x="364.9" y="709" width="3.3" height="15.0" fill="rgb(237,151,34)" rx="2" ry="2" />
<text  x="367.92" y="719.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="605.8" y="453" width="0.1" height="15.0" fill="rgb(212,164,13)" rx="2" ry="2" />
<text  x="608.78" y="463.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (33 samples, 0.46%)</title><rect x="405.0" y="693" width="5.5" height="15.0" fill="rgb(231,43,41)" rx="2" ry="2" />
<text  x="408.04" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (1 samples, 0.01%)</title><rect x="987.4" y="533" width="0.2" height="15.0" fill="rgb(252,227,30)" rx="2" ry="2" />
<text  x="990.45" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (1 samples, 0.01%)</title><rect x="52.3" y="741" width="0.1" height="15.0" fill="rgb(242,16,54)" rx="2" ry="2" />
<text  x="55.26" y="751.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="964.5" y="549" width="0.2" height="15.0" fill="rgb(242,163,17)" rx="2" ry="2" />
<text  x="967.50" y="559.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="1184.4" y="645" width="0.2" height="15.0" fill="rgb(218,135,44)" rx="2" ry="2" />
<text  x="1187.39" y="655.5" ></text>
</g>
<g >
<title>_mm_cmpeq_epi8 (1 samples, 0.01%)</title><rect x="328.3" y="549" width="0.1" height="15.0" fill="rgb(252,36,14)" rx="2" ry="2" />
<text  x="331.28" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (17 samples, 0.24%)</title><rect x="655.1" y="453" width="2.8" height="15.0" fill="rgb(210,215,51)" rx="2" ry="2" />
<text  x="658.14" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (22 samples, 0.31%)</title><rect x="608.6" y="533" width="3.6" height="15.0" fill="rgb(219,220,39)" rx="2" ry="2" />
<text  x="611.58" y="543.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="133.0" y="869" width="0.2" height="15.0" fill="rgb(216,209,19)" rx="2" ry="2" />
<text  x="135.99" y="879.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (3 samples, 0.04%)</title><rect x="614.4" y="533" width="0.5" height="15.0" fill="rgb(224,175,26)" rx="2" ry="2" />
<text  x="617.36" y="543.5" ></text>
</g>
<g >
<title>Game_Interpreter::IsAsyncPending (2 samples, 0.03%)</title><rect x="413.3" y="677" width="0.3" height="15.0" fill="rgb(217,30,29)" rx="2" ry="2" />
<text  x="416.29" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create@plt (1 samples, 0.01%)</title><rect x="782.2" y="597" width="0.2" height="15.0" fill="rgb(254,123,23)" rx="2" ry="2" />
<text  x="785.25" y="607.5" ></text>
</g>
<g >
<title>over_2x128 (42 samples, 0.59%)</title><rect x="881.6" y="597" width="7.0" height="15.0" fill="rgb(238,135,42)" rx="2" ry="2" />
<text  x="884.63" y="607.5" ></text>
</g>
<g >
<title>pixman_image_get_data (1 samples, 0.01%)</title><rect x="898.8" y="645" width="0.2" height="15.0" fill="rgb(248,207,22)" rx="2" ry="2" />
<text  x="901.80" y="655.5" ></text>
</g>
<g >
<title>_pixman_implementation_lookup_composite (4 samples, 0.06%)</title><rect x="795.5" y="645" width="0.6" height="15.0" fill="rgb(226,205,4)" rx="2" ry="2" />
<text  x="798.46" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.01%)</title><rect x="782.2" y="629" width="0.2" height="15.0" fill="rgb(226,169,21)" rx="2" ry="2" />
<text  x="785.25" y="639.5" ></text>
</g>
<g >
<title>XFlush (1 samples, 0.01%)</title><rect x="59.9" y="853" width="0.1" height="15.0" fill="rgb(213,103,22)" rx="2" ry="2" />
<text  x="62.85" y="863.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="472.7" y="565" width="0.2" height="15.0" fill="rgb(222,128,34)" rx="2" ry="2" />
<text  x="475.72" y="575.5" ></text>
</g>
<g >
<title>i40e_clean_rx_irq (1 samples, 0.01%)</title><rect x="122.1" y="757" width="0.2" height="15.0" fill="rgb(209,129,26)" rx="2" ry="2" />
<text  x="125.09" y="767.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="888.9" y="389" width="0.2" height="15.0" fill="rgb(254,94,17)" rx="2" ry="2" />
<text  x="891.89" y="399.5" ></text>
</g>
<g >
<title>Scene::GetGraphicsState (1 samples, 0.01%)</title><rect x="164.8" y="693" width="0.2" height="15.0" fill="rgb(227,36,4)" rx="2" ry="2" />
<text  x="167.85" y="703.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="223.1" y="469" width="0.2" height="15.0" fill="rgb(211,17,26)" rx="2" ry="2" />
<text  x="226.12" y="479.5" ></text>
</g>
<g >
<title>std::__find_if&lt;int const*, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (13 samples, 0.18%)</title><rect x="468.3" y="613" width="2.1" height="15.0" fill="rgb(221,156,1)" rx="2" ry="2" />
<text  x="471.27" y="623.5" ></text>
</g>
<g >
<title>__GI___sched_yield (8 samples, 0.11%)</title><rect x="85.9" y="853" width="1.4" height="15.0" fill="rgb(222,212,28)" rx="2" ry="2" />
<text  x="88.94" y="863.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.01%)</title><rect x="670.0" y="453" width="0.2" height="15.0" fill="rgb(251,156,17)" rx="2" ry="2" />
<text  x="672.99" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.03%)</title><rect x="599.8" y="517" width="0.4" height="15.0" fill="rgb(238,202,34)" rx="2" ry="2" />
<text  x="602.83" y="527.5" ></text>
</g>
<g >
<title>_mm_mullo_epi16 (14 samples, 0.20%)</title><rect x="246.7" y="565" width="2.3" height="15.0" fill="rgb(239,40,46)" rx="2" ry="2" />
<text  x="249.73" y="575.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="590.9" y="549" width="0.2" height="15.0" fill="rgb(253,86,33)" rx="2" ry="2" />
<text  x="593.92" y="559.5" ></text>
</g>
<g >
<title>pixman_image_unref (1 samples, 0.01%)</title><rect x="64.8" y="853" width="0.2" height="15.0" fill="rgb(236,196,51)" rx="2" ry="2" />
<text  x="67.81" y="863.5" ></text>
</g>
<g >
<title>finish_task_switch (70 samples, 0.98%)</title><rect x="33.3" y="725" width="11.5" height="15.0" fill="rgb(231,176,36)" rx="2" ry="2" />
<text  x="36.28" y="735.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="359.1" y="661" width="0.2" height="15.0" fill="rgb(235,80,43)" rx="2" ry="2" />
<text  x="362.15" y="671.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="319.5" y="485" width="0.2" height="15.0" fill="rgb(239,205,16)" rx="2" ry="2" />
<text  x="322.53" y="495.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="171.8" y="581" width="0.1" height="15.0" fill="rgb(244,184,23)" rx="2" ry="2" />
<text  x="174.78" y="591.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.01%)</title><rect x="297.4" y="421" width="0.2" height="15.0" fill="rgb(210,11,34)" rx="2" ry="2" />
<text  x="300.41" y="431.5" ></text>
</g>
<g >
<title>_mm_packus_epi16 (2 samples, 0.03%)</title><rect x="261.9" y="597" width="0.3" height="15.0" fill="rgb(235,44,5)" rx="2" ry="2" />
<text  x="264.91" y="607.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (1 samples, 0.01%)</title><rect x="163.0" y="709" width="0.2" height="15.0" fill="rgb(242,45,18)" rx="2" ry="2" />
<text  x="166.03" y="719.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="709.0" y="613" width="0.1" height="15.0" fill="rgb(206,85,28)" rx="2" ry="2" />
<text  x="711.95" y="623.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="598.2" y="453" width="0.1" height="15.0" fill="rgb(228,22,46)" rx="2" ry="2" />
<text  x="601.18" y="463.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (18 samples, 0.25%)</title><rect x="82.8" y="837" width="3.0" height="15.0" fill="rgb(245,5,3)" rx="2" ry="2" />
<text  x="85.80" y="847.5" ></text>
</g>
<g >
<title>SDL_GetWindowSize_REAL (1 samples, 0.01%)</title><rect x="988.4" y="629" width="0.2" height="15.0" fill="rgb(213,42,49)" rx="2" ry="2" />
<text  x="991.44" y="639.5" ></text>
</g>
<g >
<title>usb_hcd_submit_urb (1 samples, 0.01%)</title><rect x="782.4" y="405" width="0.2" height="15.0" fill="rgb(222,141,52)" rx="2" ry="2" />
<text  x="785.41" y="415.5" ></text>
</g>
<g >
<title>Bitmap::GetWidth (1 samples, 0.01%)</title><rect x="357.0" y="677" width="0.2" height="15.0" fill="rgb(238,213,39)" rx="2" ry="2" />
<text  x="360.00" y="687.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="709.0" y="581" width="0.1" height="15.0" fill="rgb(243,180,6)" rx="2" ry="2" />
<text  x="711.95" y="591.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.01%)</title><rect x="47.6" y="693" width="0.2" height="15.0" fill="rgb(227,22,12)" rx="2" ry="2" />
<text  x="50.64" y="703.5" ></text>
</g>
<g >
<title>_mm_unpacklo_epi8 (17 samples, 0.24%)</title><rect x="345.4" y="565" width="2.9" height="15.0" fill="rgb(227,202,10)" rx="2" ry="2" />
<text  x="348.44" y="575.5" ></text>
</g>
<g >
<title>read_tsc (6 samples, 0.08%)</title><rect x="400.4" y="613" width="1.0" height="15.0" fill="rgb(232,152,50)" rx="2" ry="2" />
<text  x="403.42" y="623.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (184 samples, 2.57%)</title><rect x="663.9" y="565" width="30.4" height="15.0" fill="rgb(236,84,33)" rx="2" ry="2" />
<text  x="666.89" y="575.5" >Sp..</text>
</g>
<g >
<title>Game_Map::SetNeedRefresh (9 samples, 0.13%)</title><rect x="56.6" y="853" width="1.4" height="15.0" fill="rgb(210,107,41)" rx="2" ry="2" />
<text  x="59.55" y="863.5" ></text>
</g>
<g >
<title>prepare_playback_urb (1 samples, 0.01%)</title><rect x="348.9" y="277" width="0.2" height="15.0" fill="rgb(228,197,45)" rx="2" ry="2" />
<text  x="351.91" y="287.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.01%)</title><rect x="1160.9" y="533" width="0.2" height="15.0" fill="rgb(248,55,20)" rx="2" ry="2" />
<text  x="1163.95" y="543.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (24 samples, 0.34%)</title><rect x="700.2" y="613" width="4.0" height="15.0" fill="rgb(226,22,53)" rx="2" ry="2" />
<text  x="703.20" y="623.5" ></text>
</g>
<g >
<title>AsyncHandler::IsImportantFilePending (4 samples, 0.06%)</title><rect x="122.3" y="853" width="0.6" height="15.0" fill="rgb(238,227,42)" rx="2" ry="2" />
<text  x="125.26" y="863.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="52.3" y="629" width="0.1" height="15.0" fill="rgb(247,88,9)" rx="2" ry="2" />
<text  x="55.26" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign@plt (6 samples, 0.08%)</title><rect x="712.3" y="613" width="0.9" height="15.0" fill="rgb(208,55,34)" rx="2" ry="2" />
<text  x="715.26" y="623.5" ></text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.01%)</title><rect x="587.3" y="485" width="0.2" height="15.0" fill="rgb(209,58,14)" rx="2" ry="2" />
<text  x="590.29" y="495.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="673.3" y="389" width="0.2" height="15.0" fill="rgb(210,176,53)" rx="2" ry="2" />
<text  x="676.30" y="399.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (12 samples, 0.17%)</title><rect x="991.1" y="469" width="2.0" height="15.0" fill="rgb(245,92,12)" rx="2" ry="2" />
<text  x="994.08" y="479.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="165.5" y="565" width="0.2" height="15.0" fill="rgb(227,212,2)" rx="2" ry="2" />
<text  x="168.51" y="575.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="165.5" y="677" width="0.2" height="15.0" fill="rgb(234,53,52)" rx="2" ry="2" />
<text  x="168.51" y="687.5" ></text>
</g>
<g >
<title>unlink_chunk (17 samples, 0.24%)</title><rect x="687.2" y="373" width="2.8" height="15.0" fill="rgb(217,130,10)" rx="2" ry="2" />
<text  x="690.16" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (1 samples, 0.01%)</title><rect x="76.9" y="853" width="0.1" height="15.0" fill="rgb(222,114,6)" rx="2" ry="2" />
<text  x="79.86" y="863.5" ></text>
</g>
<g >
<title>__GI___libc_write (1 samples, 0.01%)</title><rect x="587.3" y="373" width="0.2" height="15.0" fill="rgb(210,138,26)" rx="2" ry="2" />
<text  x="590.29" y="383.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (1 samples, 0.01%)</title><rect x="364.1" y="661" width="0.2" height="15.0" fill="rgb(236,136,21)" rx="2" ry="2" />
<text  x="367.10" y="671.5" ></text>
</g>
<g >
<title>X11_GL_SwapWindow (2 samples, 0.03%)</title><rect x="1172.5" y="741" width="0.3" height="15.0" fill="rgb(246,1,25)" rx="2" ry="2" />
<text  x="1175.50" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.01%)</title><rect x="657.9" y="469" width="0.2" height="15.0" fill="rgb(235,133,10)" rx="2" ry="2" />
<text  x="660.94" y="479.5" ></text>
</g>
<g >
<title>compute_transformed_extents (2 samples, 0.03%)</title><rect x="63.5" y="853" width="0.3" height="15.0" fill="rgb(234,182,47)" rx="2" ry="2" />
<text  x="66.49" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::end (4 samples, 0.06%)</title><rect x="595.5" y="581" width="0.7" height="15.0" fill="rgb(208,66,15)" rx="2" ry="2" />
<text  x="598.54" y="591.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="375.0" y="469" width="0.2" height="15.0" fill="rgb(241,52,40)" rx="2" ry="2" />
<text  x="377.99" y="479.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="1171.8" y="517" width="0.2" height="15.0" fill="rgb(251,48,37)" rx="2" ry="2" />
<text  x="1174.84" y="527.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (36 samples, 0.50%)</title><rect x="1166.1" y="549" width="5.9" height="15.0" fill="rgb(247,131,2)" rx="2" ry="2" />
<text  x="1169.06" y="559.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="404.9" y="549" width="0.1" height="15.0" fill="rgb(234,191,41)" rx="2" ry="2" />
<text  x="407.87" y="559.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="276.6" y="405" width="0.2" height="15.0" fill="rgb(230,102,4)" rx="2" ry="2" />
<text  x="279.61" y="415.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="472.7" y="597" width="0.2" height="15.0" fill="rgb(217,110,38)" rx="2" ry="2" />
<text  x="475.72" y="607.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="171.8" y="453" width="0.1" height="15.0" fill="rgb(248,1,44)" rx="2" ry="2" />
<text  x="174.78" y="463.5" ></text>
</g>
<g >
<title>pack_2x128_128 (2 samples, 0.03%)</title><rect x="261.9" y="613" width="0.3" height="15.0" fill="rgb(237,16,12)" rx="2" ry="2" />
<text  x="264.91" y="623.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (5 samples, 0.07%)</title><rect x="997.7" y="693" width="0.8" height="15.0" fill="rgb(215,170,30)" rx="2" ry="2" />
<text  x="1000.68" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;TilemapLayer::TileData, std::allocator&lt;TilemapLayer::TileData&gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="364.8" y="693" width="0.1" height="15.0" fill="rgb(230,175,29)" rx="2" ry="2" />
<text  x="367.76" y="703.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.01%)</title><rect x="987.9" y="501" width="0.2" height="15.0" fill="rgb(210,68,30)" rx="2" ry="2" />
<text  x="990.94" y="511.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (2 samples, 0.03%)</title><rect x="781.9" y="661" width="0.3" height="15.0" fill="rgb(210,26,39)" rx="2" ry="2" />
<text  x="784.92" y="671.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="379.3" y="645" width="0.3" height="15.0" fill="rgb(234,171,41)" rx="2" ry="2" />
<text  x="382.29" y="655.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage2 (1 samples, 0.01%)</title><rect x="986.8" y="677" width="0.2" height="15.0" fill="rgb(205,95,5)" rx="2" ry="2" />
<text  x="989.79" y="687.5" ></text>
</g>
<g >
<title>__queue_work (1 samples, 0.01%)</title><rect x="587.3" y="165" width="0.2" height="15.0" fill="rgb(233,40,32)" rx="2" ry="2" />
<text  x="590.29" y="175.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="994.2" y="629" width="0.3" height="15.0" fill="rgb(228,4,14)" rx="2" ry="2" />
<text  x="997.21" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, true&gt;::_M_incr (27 samples, 0.38%)</title><rect x="156.3" y="709" width="4.4" height="15.0" fill="rgb(245,37,40)" rx="2" ry="2" />
<text  x="159.26" y="719.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="223.1" y="453" width="0.2" height="15.0" fill="rgb(231,206,34)" rx="2" ry="2" />
<text  x="226.12" y="463.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.01%)</title><rect x="48.6" y="789" width="0.2" height="15.0" fill="rgb(226,128,33)" rx="2" ry="2" />
<text  x="51.63" y="799.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (3 samples, 0.04%)</title><rect x="386.1" y="677" width="0.5" height="15.0" fill="rgb(239,226,41)" rx="2" ry="2" />
<text  x="389.05" y="687.5" ></text>
</g>
<g >
<title>usb_hcd_get_frame_number (1 samples, 0.01%)</title><rect x="348.9" y="245" width="0.2" height="15.0" fill="rgb(227,64,6)" rx="2" ry="2" />
<text  x="351.91" y="255.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.01%)</title><rect x="587.3" y="293" width="0.2" height="15.0" fill="rgb(211,51,42)" rx="2" ry="2" />
<text  x="590.29" y="303.5" ></text>
</g>
<g >
<title>_mm_mulhi_epu16 (22 samples, 0.31%)</title><rect x="283.0" y="581" width="3.7" height="15.0" fill="rgb(238,214,4)" rx="2" ry="2" />
<text  x="286.04" y="591.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandControlVariables (596 samples, 8.34%)</title><rect x="473.1" y="661" width="98.3" height="15.0" fill="rgb(236,186,50)" rx="2" ry="2" />
<text  x="476.05" y="671.5" >Game_Interp..</text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="289.3" y="501" width="0.2" height="15.0" fill="rgb(218,168,15)" rx="2" ry="2" />
<text  x="292.32" y="511.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="467.8" y="613" width="0.1" height="15.0" fill="rgb(236,27,20)" rx="2" ry="2" />
<text  x="470.77" y="623.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="941.2" y="389" width="0.2" height="15.0" fill="rgb(234,104,39)" rx="2" ry="2" />
<text  x="944.22" y="399.5" ></text>
</g>
<g >
<title>_mm_cmpeq_epi8 (85 samples, 1.19%)</title><rect x="837.1" y="581" width="14.0" height="15.0" fill="rgb(238,139,13)" rx="2" ry="2" />
<text  x="840.06" y="591.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::swap (2 samples, 0.03%)</title><rect x="985.0" y="645" width="0.3" height="15.0" fill="rgb(242,122,9)" rx="2" ry="2" />
<text  x="987.97" y="655.5" ></text>
</g>
<g >
<title>pixman_transform_point_31_16 (2 samples, 0.03%)</title><rect x="132.0" y="853" width="0.3" height="15.0" fill="rgb(238,119,5)" rx="2" ry="2" />
<text  x="134.99" y="863.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="725.8" y="453" width="0.2" height="15.0" fill="rgb(237,188,33)" rx="2" ry="2" />
<text  x="728.79" y="463.5" ></text>
</g>
<g >
<title>unlink_chunk (3 samples, 0.04%)</title><rect x="955.6" y="485" width="0.5" height="15.0" fill="rgb(233,145,13)" rx="2" ry="2" />
<text  x="958.58" y="495.5" ></text>
</g>
<g >
<title>Scene::OnFinishAsync (1 samples, 0.01%)</title><rect x="1185.7" y="789" width="0.2" height="15.0" fill="rgb(237,57,20)" rx="2" ry="2" />
<text  x="1188.71" y="799.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (2 samples, 0.03%)</title><rect x="955.3" y="389" width="0.3" height="15.0" fill="rgb(220,186,33)" rx="2" ry="2" />
<text  x="958.25" y="399.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (18 samples, 0.25%)</title><rect x="650.3" y="469" width="3.0" height="15.0" fill="rgb(205,109,31)" rx="2" ry="2" />
<text  x="653.35" y="479.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="661.9" y="357" width="0.2" height="15.0" fill="rgb(230,155,52)" rx="2" ry="2" />
<text  x="664.91" y="367.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="725.8" y="437" width="0.2" height="15.0" fill="rgb(252,113,21)" rx="2" ry="2" />
<text  x="728.79" y="447.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (78 samples, 1.09%)</title><rect x="943.2" y="581" width="12.9" height="15.0" fill="rgb(211,36,42)" rx="2" ry="2" />
<text  x="946.20" y="591.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (3 samples, 0.04%)</title><rect x="708.0" y="565" width="0.5" height="15.0" fill="rgb(224,223,9)" rx="2" ry="2" />
<text  x="710.96" y="575.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (70 samples, 0.98%)</title><rect x="631.4" y="421" width="11.5" height="15.0" fill="rgb(228,82,6)" rx="2" ry="2" />
<text  x="634.37" y="431.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.01%)</title><rect x="368.2" y="597" width="0.2" height="15.0" fill="rgb(237,190,37)" rx="2" ry="2" />
<text  x="371.23" y="607.5" ></text>
</g>
<g >
<title>xhci_msi_irq (4 samples, 0.06%)</title><rect x="538.9" y="517" width="0.7" height="15.0" fill="rgb(220,66,35)" rx="2" ry="2" />
<text  x="541.92" y="527.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="605.8" y="485" width="0.1" height="15.0" fill="rgb(205,0,15)" rx="2" ry="2" />
<text  x="608.78" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (19 samples, 0.27%)</title><rect x="709.1" y="613" width="3.2" height="15.0" fill="rgb(249,153,44)" rx="2" ry="2" />
<text  x="712.12" y="623.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (3 samples, 0.04%)</title><rect x="988.8" y="629" width="0.5" height="15.0" fill="rgb(234,112,28)" rx="2" ry="2" />
<text  x="991.77" y="639.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::_M_allocate (1 samples, 0.01%)</title><rect x="439.2" y="597" width="0.2" height="15.0" fill="rgb(220,187,30)" rx="2" ry="2" />
<text  x="442.21" y="607.5" ></text>
</g>
<g >
<title>usb_get_current_frame_number (1 samples, 0.01%)</title><rect x="955.4" y="197" width="0.2" height="15.0" fill="rgb(207,199,43)" rx="2" ry="2" />
<text  x="958.42" y="207.5" ></text>
</g>
<g >
<title>Rect::IsOutOfBounds (2 samples, 0.03%)</title><rect x="357.3" y="677" width="0.4" height="15.0" fill="rgb(242,179,51)" rx="2" ry="2" />
<text  x="360.33" y="687.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.01%)</title><rect x="49.9" y="645" width="0.2" height="15.0" fill="rgb(245,207,11)" rx="2" ry="2" />
<text  x="52.95" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (17 samples, 0.24%)</title><rect x="655.1" y="437" width="2.8" height="15.0" fill="rgb(219,8,49)" rx="2" ry="2" />
<text  x="658.14" y="447.5" ></text>
</g>
<g >
<title>std::__find_if&lt;int const*, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (1 samples, 0.01%)</title><rect x="587.0" y="597" width="0.1" height="15.0" fill="rgb(249,173,48)" rx="2" ry="2" />
<text  x="589.96" y="607.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (7 samples, 0.10%)</title><rect x="849.9" y="453" width="1.2" height="15.0" fill="rgb(222,209,54)" rx="2" ry="2" />
<text  x="852.93" y="463.5" ></text>
</g>
<g >
<title>SDL_LockTexture_REAL (1 samples, 0.01%)</title><rect x="1162.9" y="693" width="0.2" height="15.0" fill="rgb(228,2,39)" rx="2" ry="2" />
<text  x="1165.93" y="703.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (8 samples, 0.11%)</title><rect x="704.3" y="581" width="1.4" height="15.0" fill="rgb(243,128,8)" rx="2" ry="2" />
<text  x="707.33" y="591.5" ></text>
</g>
<g >
<title>snd_usb_endpoint_next_packet_size (1 samples, 0.01%)</title><rect x="319.4" y="261" width="0.1" height="15.0" fill="rgb(215,154,23)" rx="2" ry="2" />
<text  x="322.36" y="271.5" ></text>
</g>
<g >
<title>xhci_msi_irq (3 samples, 0.04%)</title><rect x="888.6" y="485" width="0.5" height="15.0" fill="rgb(211,203,38)" rx="2" ry="2" />
<text  x="891.56" y="495.5" ></text>
</g>
<g >
<title>pixman_transform_point_31_16 (1 samples, 0.01%)</title><rect x="76.5" y="853" width="0.2" height="15.0" fill="rgb(219,203,38)" rx="2" ry="2" />
<text  x="79.53" y="863.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="775.5" y="581" width="0.1" height="15.0" fill="rgb(249,121,6)" rx="2" ry="2" />
<text  x="778.48" y="591.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::CommonEvent&gt; (3 samples, 0.04%)</title><rect x="778.3" y="629" width="0.5" height="15.0" fill="rgb(226,91,25)" rx="2" ry="2" />
<text  x="781.29" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::size (1 samples, 0.01%)</title><rect x="584.5" y="629" width="0.1" height="15.0" fill="rgb(254,172,10)" rx="2" ry="2" />
<text  x="587.48" y="639.5" ></text>
</g>
<g >
<title>handle_irq_event (2 samples, 0.03%)</title><rect x="955.3" y="421" width="0.3" height="15.0" fill="rgb(231,196,13)" rx="2" ry="2" />
<text  x="958.25" y="431.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.01%)</title><rect x="893.3" y="565" width="0.2" height="15.0" fill="rgb(244,183,2)" rx="2" ry="2" />
<text  x="896.35" y="575.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (7 samples, 0.10%)</title><rect x="849.9" y="405" width="1.2" height="15.0" fill="rgb(237,40,17)" rx="2" ry="2" />
<text  x="852.93" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (2 samples, 0.03%)</title><rect x="696.4" y="581" width="0.3" height="15.0" fill="rgb(217,84,5)" rx="2" ry="2" />
<text  x="699.41" y="591.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (3 samples, 0.04%)</title><rect x="662.1" y="517" width="0.5" height="15.0" fill="rgb(207,38,43)" rx="2" ry="2" />
<text  x="665.07" y="527.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.01%)</title><rect x="377.3" y="469" width="0.2" height="15.0" fill="rgb(210,42,49)" rx="2" ry="2" />
<text  x="380.31" y="479.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="964.5" y="661" width="0.2" height="15.0" fill="rgb(231,134,21)" rx="2" ry="2" />
<text  x="967.50" y="671.5" ></text>
</g>
<g >
<title>pty_write (1 samples, 0.01%)</title><rect x="587.3" y="213" width="0.2" height="15.0" fill="rgb(239,61,35)" rx="2" ry="2" />
<text  x="590.29" y="223.5" ></text>
</g>
<g >
<title>psi_task_change (4 samples, 0.06%)</title><rect x="32.5" y="709" width="0.6" height="15.0" fill="rgb(212,65,42)" rx="2" ry="2" />
<text  x="35.45" y="719.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="121.8" y="709" width="0.1" height="15.0" fill="rgb(230,12,42)" rx="2" ry="2" />
<text  x="124.76" y="719.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.10%)</title><rect x="994.9" y="501" width="1.1" height="15.0" fill="rgb(233,73,12)" rx="2" ry="2" />
<text  x="997.87" y="511.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="349.6" y="597" width="0.1" height="15.0" fill="rgb(208,215,47)" rx="2" ry="2" />
<text  x="352.57" y="607.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="661.9" y="261" width="0.2" height="15.0" fill="rgb(224,165,7)" rx="2" ry="2" />
<text  x="664.91" y="271.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="887.4" y="549" width="0.2" height="15.0" fill="rgb(213,22,27)" rx="2" ry="2" />
<text  x="890.41" y="559.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="925.5" y="421" width="0.4" height="15.0" fill="rgb(234,76,8)" rx="2" ry="2" />
<text  x="928.54" y="431.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipToNextConditional (91 samples, 1.27%)</title><rect x="455.4" y="645" width="15.0" height="15.0" fill="rgb(246,100,35)" rx="2" ry="2" />
<text  x="458.39" y="655.5" ></text>
</g>
<g >
<title>Transition::IsActive (1 samples, 0.01%)</title><rect x="124.1" y="853" width="0.1" height="15.0" fill="rgb(253,170,25)" rx="2" ry="2" />
<text  x="127.07" y="863.5" ></text>
</g>
<g >
<title>expand_alpha_2x128 (1 samples, 0.01%)</title><rect x="342.0" y="581" width="0.1" height="15.0" fill="rgb(225,82,22)" rx="2" ry="2" />
<text  x="344.98" y="591.5" ></text>
</g>
<g >
<title>activate_task (1 samples, 0.01%)</title><rect x="297.4" y="437" width="0.2" height="15.0" fill="rgb(249,102,16)" rx="2" ry="2" />
<text  x="300.41" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.01%)</title><rect x="294.6" y="533" width="0.2" height="15.0" fill="rgb(232,142,25)" rx="2" ry="2" />
<text  x="297.60" y="543.5" ></text>
</g>
<g >
<title>std::replace&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (33 samples, 0.46%)</title><rect x="600.5" y="581" width="5.4" height="15.0" fill="rgb(245,25,27)" rx="2" ry="2" />
<text  x="603.50" y="591.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.03%)</title><rect x="379.3" y="613" width="0.3" height="15.0" fill="rgb(228,31,6)" rx="2" ry="2" />
<text  x="382.29" y="623.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (1 samples, 0.01%)</title><rect x="697.7" y="597" width="0.2" height="15.0" fill="rgb(227,23,21)" rx="2" ry="2" />
<text  x="700.73" y="607.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="614.2" y="373" width="0.2" height="15.0" fill="rgb(224,20,15)" rx="2" ry="2" />
<text  x="617.20" y="383.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="613.9" y="485" width="0.1" height="15.0" fill="rgb(226,60,0)" rx="2" ry="2" />
<text  x="616.87" y="495.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="171.8" y="469" width="0.1" height="15.0" fill="rgb(248,7,8)" rx="2" ry="2" />
<text  x="174.78" y="479.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (2 samples, 0.03%)</title><rect x="699.9" y="597" width="0.3" height="15.0" fill="rgb(239,6,37)" rx="2" ry="2" />
<text  x="702.87" y="607.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~tuple (1 samples, 0.01%)</title><rect x="52.3" y="853" width="0.1" height="15.0" fill="rgb(245,215,36)" rx="2" ry="2" />
<text  x="55.26" y="863.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (1 samples, 0.01%)</title><rect x="372.8" y="629" width="0.2" height="15.0" fill="rgb(245,118,37)" rx="2" ry="2" />
<text  x="375.85" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (7 samples, 0.10%)</title><rect x="753.4" y="645" width="1.1" height="15.0" fill="rgb(224,51,22)" rx="2" ry="2" />
<text  x="756.36" y="655.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.01%)</title><rect x="375.2" y="629" width="0.1" height="15.0" fill="rgb(207,91,28)" rx="2" ry="2" />
<text  x="378.16" y="639.5" ></text>
</g>
<g >
<title>poll_schedule_timeout.constprop.14 (92 samples, 1.29%)</title><rect x="31.1" y="805" width="15.2" height="15.0" fill="rgb(241,212,10)" rx="2" ry="2" />
<text  x="34.13" y="815.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.01%)</title><rect x="707.5" y="549" width="0.1" height="15.0" fill="rgb(238,190,24)" rx="2" ry="2" />
<text  x="710.47" y="559.5" ></text>
</g>
<g >
<title>SDL_WaitEventTimeout_REAL (12 samples, 0.17%)</title><rect x="987.9" y="725" width="2.0" height="15.0" fill="rgb(221,13,13)" rx="2" ry="2" />
<text  x="990.94" y="735.5" ></text>
</g>
<g >
<title>xhci_irq (2 samples, 0.03%)</title><rect x="725.6" y="517" width="0.4" height="15.0" fill="rgb(235,140,23)" rx="2" ry="2" />
<text  x="728.63" y="527.5" ></text>
</g>
<g >
<title>import_iovec (1 samples, 0.01%)</title><rect x="995.0" y="421" width="0.2" height="15.0" fill="rgb(252,25,21)" rx="2" ry="2" />
<text  x="998.04" y="431.5" ></text>
</g>
<g >
<title>xhci_queue_isoc_tx_prepare (1 samples, 0.01%)</title><rect x="614.2" y="293" width="0.2" height="15.0" fill="rgb(246,226,34)" rx="2" ry="2" />
<text  x="617.20" y="303.5" ></text>
</g>
<g >
<title>__libc_recvmsg (1 samples, 0.01%)</title><rect x="60.5" y="853" width="0.2" height="15.0" fill="rgb(246,107,51)" rx="2" ry="2" />
<text  x="63.51" y="863.5" ></text>
</g>
<g >
<title>handle_edge_irq (3 samples, 0.04%)</title><rect x="121.4" y="805" width="0.5" height="15.0" fill="rgb(206,220,28)" rx="2" ry="2" />
<text  x="124.43" y="815.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="887.4" y="485" width="0.2" height="15.0" fill="rgb(236,190,20)" rx="2" ry="2" />
<text  x="890.41" y="495.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.01%)</title><rect x="994.9" y="421" width="0.1" height="15.0" fill="rgb(223,133,25)" rx="2" ry="2" />
<text  x="997.87" y="431.5" ></text>
</g>
<g >
<title>AdjustShowParams (4 samples, 0.06%)</title><rect x="590.4" y="645" width="0.7" height="15.0" fill="rgb(235,219,16)" rx="2" ry="2" />
<text  x="593.43" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (1 samples, 0.01%)</title><rect x="25.7" y="853" width="0.1" height="15.0" fill="rgb(237,179,24)" rx="2" ry="2" />
<text  x="28.68" y="863.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="983.0" y="565" width="0.2" height="15.0" fill="rgb(247,102,44)" rx="2" ry="2" />
<text  x="985.99" y="575.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="614.2" y="469" width="0.2" height="15.0" fill="rgb(227,65,12)" rx="2" ry="2" />
<text  x="617.20" y="479.5" ></text>
</g>
<g >
<title>Game_Map::LoopHorizontal (2 samples, 0.03%)</title><rect x="363.6" y="693" width="0.3" height="15.0" fill="rgb(232,179,13)" rx="2" ry="2" />
<text  x="366.60" y="703.5" ></text>
</g>
<g >
<title>Transform::Scale (6 samples, 0.08%)</title><rect x="303.7" y="629" width="1.0" height="15.0" fill="rgb(209,114,13)" rx="2" ry="2" />
<text  x="306.68" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (20 samples, 0.28%)</title><rect x="564.7" y="629" width="3.3" height="15.0" fill="rgb(242,214,24)" rx="2" ry="2" />
<text  x="567.67" y="639.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="995.9" y="421" width="0.1" height="15.0" fill="rgb(240,39,3)" rx="2" ry="2" />
<text  x="998.86" y="431.5" ></text>
</g>
<g >
<title>retire_playback_urb (1 samples, 0.01%)</title><rect x="375.0" y="421" width="0.2" height="15.0" fill="rgb(237,133,42)" rx="2" ry="2" />
<text  x="377.99" y="431.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="661.9" y="213" width="0.2" height="15.0" fill="rgb(233,206,33)" rx="2" ry="2" />
<text  x="664.91" y="223.5" ></text>
</g>
<g >
<title>SDL_IOReady (1 samples, 0.01%)</title><rect x="987.9" y="629" width="0.2" height="15.0" fill="rgb(212,158,35)" rx="2" ry="2" />
<text  x="990.94" y="639.5" ></text>
</g>
<g >
<title>posix_get_monotonic_raw (17 samples, 0.24%)</title><rect x="399.6" y="645" width="2.8" height="15.0" fill="rgb(226,87,53)" rx="2" ry="2" />
<text  x="402.59" y="655.5" ></text>
</g>
<g >
<title>[libGLX.so.0.0.0] (2 samples, 0.03%)</title><rect x="1172.5" y="693" width="0.3" height="15.0" fill="rgb(248,149,39)" rx="2" ry="2" />
<text  x="1175.50" y="703.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.01%)</title><rect x="657.1" y="373" width="0.2" height="15.0" fill="rgb(227,33,28)" rx="2" ry="2" />
<text  x="660.12" y="383.5" ></text>
</g>
<g >
<title>pick_next_task_fair (5 samples, 0.07%)</title><rect x="45.0" y="725" width="0.8" height="15.0" fill="rgb(230,90,21)" rx="2" ry="2" />
<text  x="48.00" y="735.5" ></text>
</g>
<g >
<title>tty_flip_buffer_push (1 samples, 0.01%)</title><rect x="587.3" y="197" width="0.2" height="15.0" fill="rgb(244,87,25)" rx="2" ry="2" />
<text  x="590.29" y="207.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.01%)</title><rect x="582.2" y="533" width="0.1" height="15.0" fill="rgb(213,212,3)" rx="2" ry="2" />
<text  x="585.17" y="543.5" ></text>
</g>
<g >
<title>__exchange_and_add (5 samples, 0.07%)</title><rect x="360.8" y="597" width="0.8" height="15.0" fill="rgb(236,206,19)" rx="2" ry="2" />
<text  x="363.80" y="607.5" ></text>
</g>
<g >
<title>do_nanosleep (15 samples, 0.21%)</title><rect x="375.2" y="645" width="2.4" height="15.0" fill="rgb(241,187,36)" rx="2" ry="2" />
<text  x="378.16" y="655.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="319.7" y="421" width="0.2" height="15.0" fill="rgb(210,209,43)" rx="2" ry="2" />
<text  x="322.69" y="431.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (1 samples, 0.01%)</title><rect x="85.3" y="693" width="0.1" height="15.0" fill="rgb(224,119,46)" rx="2" ry="2" />
<text  x="88.28" y="703.5" ></text>
</g>
<g >
<title>Cache::System (3 samples, 0.04%)</title><rect x="987.3" y="645" width="0.5" height="15.0" fill="rgb(213,35,51)" rx="2" ry="2" />
<text  x="990.28" y="655.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="967.5" y="517" width="0.1" height="15.0" fill="rgb(236,111,37)" rx="2" ry="2" />
<text  x="970.47" y="527.5" ></text>
</g>
<g >
<title>_mm_unpackhi_epi8 (1 samples, 0.01%)</title><rect x="223.9" y="565" width="0.2" height="15.0" fill="rgb(244,150,7)" rx="2" ry="2" />
<text  x="226.95" y="575.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::reset (26 samples, 0.36%)</title><rect x="699.9" y="629" width="4.3" height="15.0" fill="rgb(209,69,12)" rx="2" ry="2" />
<text  x="702.87" y="639.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (8 samples, 0.11%)</title><rect x="359.5" y="629" width="1.3" height="15.0" fill="rgb(212,37,11)" rx="2" ry="2" />
<text  x="362.48" y="639.5" ></text>
</g>
<g >
<title>analyze_extent (3 samples, 0.04%)</title><rect x="129.0" y="853" width="0.5" height="15.0" fill="rgb(229,123,14)" rx="2" ry="2" />
<text  x="132.02" y="863.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Set (153 samples, 2.14%)</title><rect x="544.4" y="645" width="25.2" height="15.0" fill="rgb(224,9,43)" rx="2" ry="2" />
<text  x="547.37" y="655.5" >G..</text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="768.4" y="613" width="0.1" height="15.0" fill="rgb(209,50,52)" rx="2" ry="2" />
<text  x="771.38" y="623.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="782.4" y="613" width="0.2" height="15.0" fill="rgb(211,81,43)" rx="2" ry="2" />
<text  x="785.41" y="623.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (3 samples, 0.04%)</title><rect x="725.0" y="645" width="0.5" height="15.0" fill="rgb(228,119,18)" rx="2" ry="2" />
<text  x="727.97" y="655.5" ></text>
</g>
<g >
<title>Player::IsRPG2k3 (21 samples, 0.29%)</title><rect x="558.4" y="629" width="3.5" height="15.0" fill="rgb(207,69,48)" rx="2" ry="2" />
<text  x="561.40" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (8 samples, 0.11%)</title><rect x="543.0" y="629" width="1.4" height="15.0" fill="rgb(239,19,30)" rx="2" ry="2" />
<text  x="546.05" y="639.5" ></text>
</g>
<g >
<title>xhci_msi_irq (3 samples, 0.04%)</title><rect x="121.4" y="741" width="0.5" height="15.0" fill="rgb(223,167,8)" rx="2" ry="2" />
<text  x="124.43" y="751.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (8 samples, 0.11%)</title><rect x="994.7" y="565" width="1.3" height="15.0" fill="rgb(216,15,17)" rx="2" ry="2" />
<text  x="997.71" y="575.5" ></text>
</g>
<g >
<title>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;::basic_istream (5 samples, 0.07%)</title><rect x="707.6" y="597" width="0.9" height="15.0" fill="rgb(221,87,6)" rx="2" ry="2" />
<text  x="710.63" y="607.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (1 samples, 0.01%)</title><rect x="125.1" y="853" width="0.1" height="15.0" fill="rgb(210,141,23)" rx="2" ry="2" />
<text  x="128.06" y="863.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (2 samples, 0.03%)</title><rect x="64.1" y="853" width="0.4" height="15.0" fill="rgb(242,0,20)" rx="2" ry="2" />
<text  x="67.15" y="863.5" ></text>
</g>
<g >
<title>SDL_InitFormat (1 samples, 0.01%)</title><rect x="998.7" y="661" width="0.1" height="15.0" fill="rgb(232,49,49)" rx="2" ry="2" />
<text  x="1001.67" y="671.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="955.3" y="469" width="0.3" height="15.0" fill="rgb(220,172,30)" rx="2" ry="2" />
<text  x="958.25" y="479.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.01%)</title><rect x="33.1" y="725" width="0.2" height="15.0" fill="rgb(215,56,2)" rx="2" ry="2" />
<text  x="36.11" y="735.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="725.5" y="629" width="0.1" height="15.0" fill="rgb(246,95,25)" rx="2" ry="2" />
<text  x="728.46" y="639.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="348.9" y="421" width="0.2" height="15.0" fill="rgb(208,211,34)" rx="2" ry="2" />
<text  x="351.91" y="431.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.01%)</title><rect x="49.9" y="629" width="0.2" height="15.0" fill="rgb(247,4,35)" rx="2" ry="2" />
<text  x="52.95" y="639.5" ></text>
</g>
<g >
<title>ret_from_intr (10 samples, 0.14%)</title><rect x="1161.1" y="645" width="1.7" height="15.0" fill="rgb(246,122,21)" rx="2" ry="2" />
<text  x="1164.11" y="655.5" ></text>
</g>
<g >
<title>core_combine_over_u_sse2_no_mask (604 samples, 8.45%)</title><rect x="798.1" y="613" width="99.7" height="15.0" fill="rgb(209,49,21)" rx="2" ry="2" />
<text  x="801.10" y="623.5" >core_combine..</text>
</g>
<g >
<title>create_bits (1 samples, 0.01%)</title><rect x="127.4" y="837" width="0.1" height="15.0" fill="rgb(253,111,29)" rx="2" ry="2" />
<text  x="130.37" y="847.5" ></text>
</g>
<g >
<title>schedule (13 samples, 0.18%)</title><rect x="375.5" y="629" width="2.1" height="15.0" fill="rgb(253,126,29)" rx="2" ry="2" />
<text  x="378.49" y="639.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="654.8" y="341" width="0.3" height="15.0" fill="rgb(222,168,1)" rx="2" ry="2" />
<text  x="657.81" y="351.5" ></text>
</g>
<g >
<title>xhci_get_frame (1 samples, 0.01%)</title><rect x="725.8" y="325" width="0.2" height="15.0" fill="rgb(207,121,16)" rx="2" ry="2" />
<text  x="728.79" y="335.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (1 samples, 0.01%)</title><rect x="987.1" y="517" width="0.2" height="15.0" fill="rgb(253,38,46)" rx="2" ry="2" />
<text  x="990.12" y="527.5" ></text>
</g>
<g >
<title>Game_Screen::Update (23 samples, 0.32%)</title><rect x="778.8" y="709" width="3.8" height="15.0" fill="rgb(216,32,51)" rx="2" ry="2" />
<text  x="781.78" y="719.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="1171.7" y="309" width="0.1" height="15.0" fill="rgb(232,178,18)" rx="2" ry="2" />
<text  x="1174.68" y="319.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="223.1" y="437" width="0.2" height="15.0" fill="rgb(209,1,46)" rx="2" ry="2" />
<text  x="226.12" y="447.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="661.9" y="165" width="0.2" height="15.0" fill="rgb(223,30,37)" rx="2" ry="2" />
<text  x="664.91" y="175.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (1 samples, 0.01%)</title><rect x="352.5" y="597" width="0.2" height="15.0" fill="rgb(218,154,53)" rx="2" ry="2" />
<text  x="355.54" y="607.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="165.5" y="549" width="0.2" height="15.0" fill="rgb(231,189,46)" rx="2" ry="2" />
<text  x="168.51" y="559.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (13 samples, 0.18%)</title><rect x="83.3" y="789" width="2.1" height="15.0" fill="rgb(225,146,48)" rx="2" ry="2" />
<text  x="86.30" y="799.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="689.8" y="357" width="0.2" height="15.0" fill="rgb(247,74,45)" rx="2" ry="2" />
<text  x="692.80" y="367.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.01%)</title><rect x="122.1" y="789" width="0.2" height="15.0" fill="rgb(243,62,1)" rx="2" ry="2" />
<text  x="125.09" y="799.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (2 samples, 0.03%)</title><rect x="998.2" y="661" width="0.3" height="15.0" fill="rgb(216,181,22)" rx="2" ry="2" />
<text  x="1001.18" y="671.5" ></text>
</g>
<g >
<title>prepare_playback_urb (1 samples, 0.01%)</title><rect x="121.8" y="581" width="0.1" height="15.0" fill="rgb(242,53,49)" rx="2" ry="2" />
<text  x="124.76" y="591.5" ></text>
</g>
<g >
<title>fast_composite_scaled_nearest_sse2_8888_8888_cover_OVER (66 samples, 0.92%)</title><rect x="319.9" y="613" width="10.9" height="15.0" fill="rgb(252,173,38)" rx="2" ry="2" />
<text  x="322.86" y="623.5" ></text>
</g>
<g >
<title>over_1x128 (1 samples, 0.01%)</title><rect x="828.1" y="581" width="0.2" height="15.0" fill="rgb(218,30,54)" rx="2" ry="2" />
<text  x="831.14" y="591.5" ></text>
</g>
<g >
<title>pixman_transform_point_3d (3 samples, 0.04%)</title><rect x="331.9" y="597" width="0.5" height="15.0" fill="rgb(254,31,53)" rx="2" ry="2" />
<text  x="334.91" y="607.5" ></text>
</g>
<g >
<title>skb_free_head (1 samples, 0.01%)</title><rect x="995.5" y="341" width="0.2" height="15.0" fill="rgb(206,192,32)" rx="2" ry="2" />
<text  x="998.53" y="351.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (4 samples, 0.06%)</title><rect x="374.3" y="677" width="0.7" height="15.0" fill="rgb(235,7,19)" rx="2" ry="2" />
<text  x="377.33" y="687.5" ></text>
</g>
<g >
<title>ret_from_intr (5 samples, 0.07%)</title><rect x="121.4" y="853" width="0.9" height="15.0" fill="rgb(224,174,54)" rx="2" ry="2" />
<text  x="124.43" y="863.5" ></text>
</g>
<g >
<title>Bitmap::height (3 samples, 0.04%)</title><rect x="356.5" y="661" width="0.5" height="15.0" fill="rgb(219,52,30)" rx="2" ry="2" />
<text  x="359.51" y="671.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (7 samples, 0.10%)</title><rect x="849.9" y="469" width="1.2" height="15.0" fill="rgb(222,65,52)" rx="2" ry="2" />
<text  x="852.93" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator bool (1 samples, 0.01%)</title><rect x="985.3" y="677" width="0.2" height="15.0" fill="rgb(250,20,36)" rx="2" ry="2" />
<text  x="988.30" y="687.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="404.9" y="485" width="0.1" height="15.0" fill="rgb(217,4,11)" rx="2" ry="2" />
<text  x="407.87" y="495.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="849.3" y="517" width="0.1" height="15.0" fill="rgb(207,33,41)" rx="2" ry="2" />
<text  x="852.27" y="527.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="52.3" y="661" width="0.1" height="15.0" fill="rgb(239,76,1)" rx="2" ry="2" />
<text  x="55.26" y="671.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="570.3" y="565" width="0.2" height="15.0" fill="rgb(242,227,10)" rx="2" ry="2" />
<text  x="573.29" y="575.5" ></text>
</g>
<g >
<title>usb_hcd_get_frame_number (1 samples, 0.01%)</title><rect x="661.9" y="85" width="0.2" height="15.0" fill="rgb(227,221,21)" rx="2" ry="2" />
<text  x="664.91" y="95.5" ></text>
</g>
<g >
<title>__hrtimer_get_next_event (1 samples, 0.01%)</title><rect x="155.8" y="677" width="0.1" height="15.0" fill="rgb(215,97,1)" rx="2" ry="2" />
<text  x="158.77" y="687.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.01%)</title><rect x="352.0" y="581" width="0.2" height="15.0" fill="rgb(237,58,28)" rx="2" ry="2" />
<text  x="355.05" y="591.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.01%)</title><rect x="696.7" y="597" width="0.2" height="15.0" fill="rgb(216,77,12)" rx="2" ry="2" />
<text  x="699.74" y="607.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="289.3" y="453" width="0.2" height="15.0" fill="rgb(235,137,35)" rx="2" ry="2" />
<text  x="292.32" y="463.5" ></text>
</g>
<g >
<title>pixman_image_get_width (1 samples, 0.01%)</title><rect x="987.6" y="597" width="0.2" height="15.0" fill="rgb(220,122,32)" rx="2" ry="2" />
<text  x="990.61" y="607.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="165.5" y="581" width="0.2" height="15.0" fill="rgb(221,192,16)" rx="2" ry="2" />
<text  x="168.51" y="591.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (4 samples, 0.06%)</title><rect x="52.6" y="853" width="0.7" height="15.0" fill="rgb(244,207,14)" rx="2" ry="2" />
<text  x="55.59" y="863.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="1171.7" y="373" width="0.1" height="15.0" fill="rgb(212,60,34)" rx="2" ry="2" />
<text  x="1174.68" y="383.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="1171.7" y="277" width="0.1" height="15.0" fill="rgb(254,74,52)" rx="2" ry="2" />
<text  x="1174.68" y="287.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="359.1" y="581" width="0.2" height="15.0" fill="rgb(253,132,13)" rx="2" ry="2" />
<text  x="362.15" y="591.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.01%)</title><rect x="52.3" y="709" width="0.1" height="15.0" fill="rgb(228,65,3)" rx="2" ry="2" />
<text  x="55.26" y="719.5" ></text>
</g>
<g >
<title>handle_irq_event (2 samples, 0.03%)</title><rect x="255.8" y="501" width="0.3" height="15.0" fill="rgb(247,120,38)" rx="2" ry="2" />
<text  x="258.81" y="511.5" ></text>
</g>
<g >
<title>std::find&lt;int const*, int&gt; (1 samples, 0.01%)</title><rect x="587.0" y="629" width="0.1" height="15.0" fill="rgb(212,178,28)" rx="2" ry="2" />
<text  x="589.96" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="989.4" y="533" width="0.4" height="15.0" fill="rgb(234,88,39)" rx="2" ry="2" />
<text  x="992.43" y="543.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (7 samples, 0.10%)</title><rect x="849.9" y="533" width="1.2" height="15.0" fill="rgb(213,18,32)" rx="2" ry="2" />
<text  x="852.93" y="543.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="768.4" y="629" width="0.1" height="15.0" fill="rgb(224,14,0)" rx="2" ry="2" />
<text  x="771.38" y="639.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.01%)</title><rect x="30.6" y="773" width="0.2" height="15.0" fill="rgb(227,33,36)" rx="2" ry="2" />
<text  x="33.64" y="783.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (13 samples, 0.18%)</title><rect x="1169.5" y="501" width="2.2" height="15.0" fill="rgb(205,174,12)" rx="2" ry="2" />
<text  x="1172.53" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Player, std::default_delete&lt;Game_Player&gt; &gt;::operator (1 samples, 0.01%)</title><rect x="986.8" y="661" width="0.2" height="15.0" fill="rgb(235,202,19)" rx="2" ry="2" />
<text  x="989.79" y="671.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="614.2" y="421" width="0.2" height="15.0" fill="rgb(208,209,52)" rx="2" ry="2" />
<text  x="617.20" y="431.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (1 samples, 0.01%)</title><rect x="708.3" y="517" width="0.2" height="15.0" fill="rgb(236,174,46)" rx="2" ry="2" />
<text  x="711.29" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_compare (2 samples, 0.03%)</title><rect x="632.5" y="373" width="0.4" height="15.0" fill="rgb(231,103,43)" rx="2" ry="2" />
<text  x="635.52" y="383.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="375.0" y="661" width="0.2" height="15.0" fill="rgb(225,215,13)" rx="2" ry="2" />
<text  x="377.99" y="671.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="782.4" y="517" width="0.2" height="15.0" fill="rgb(211,208,42)" rx="2" ry="2" />
<text  x="785.41" y="527.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (3 samples, 0.04%)</title><rect x="452.1" y="645" width="0.5" height="15.0" fill="rgb(241,138,42)" rx="2" ry="2" />
<text  x="455.09" y="655.5" ></text>
</g>
<g >
<title>Player::Update (1 samples, 0.01%)</title><rect x="161.0" y="757" width="0.2" height="15.0" fill="rgb(206,158,41)" rx="2" ry="2" />
<text  x="164.05" y="767.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="709.0" y="533" width="0.1" height="15.0" fill="rgb(254,129,41)" rx="2" ry="2" />
<text  x="711.95" y="543.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.01%)</title><rect x="32.9" y="677" width="0.2" height="15.0" fill="rgb(212,120,36)" rx="2" ry="2" />
<text  x="35.95" y="687.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetSubcommandIndex (2 samples, 0.03%)</title><rect x="584.3" y="645" width="0.3" height="15.0" fill="rgb(237,58,39)" rx="2" ry="2" />
<text  x="587.32" y="655.5" ></text>
</g>
<g >
<title>GL_SetupCopy (1 samples, 0.01%)</title><rect x="997.5" y="693" width="0.2" height="15.0" fill="rgb(237,35,38)" rx="2" ry="2" />
<text  x="1000.52" y="703.5" ></text>
</g>
<g >
<title>_mm_unpacklo_epi8 (1 samples, 0.01%)</title><rect x="348.9" y="565" width="0.2" height="15.0" fill="rgb(213,3,34)" rx="2" ry="2" />
<text  x="351.91" y="575.5" ></text>
</g>
<g >
<title>__fget (2 samples, 0.03%)</title><rect x="29.3" y="773" width="0.3" height="15.0" fill="rgb(242,218,49)" rx="2" ry="2" />
<text  x="32.31" y="783.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustParams (2 samples, 0.03%)</title><rect x="590.6" y="629" width="0.3" height="15.0" fill="rgb(237,13,48)" rx="2" ry="2" />
<text  x="593.59" y="639.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="51.1" y="805" width="0.2" height="15.0" fill="rgb(229,86,44)" rx="2" ry="2" />
<text  x="54.11" y="815.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="883.4" y="437" width="0.2" height="15.0" fill="rgb(228,211,26)" rx="2" ry="2" />
<text  x="886.44" y="447.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="301.0" y="581" width="0.2" height="15.0" fill="rgb(237,71,14)" rx="2" ry="2" />
<text  x="304.04" y="591.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (271 samples, 3.79%)</title><rect x="304.7" y="629" width="44.7" height="15.0" fill="rgb(232,109,39)" rx="2" ry="2" />
<text  x="307.67" y="639.5" >pixm..</text>
</g>
<g >
<title>Game_CommonEvent::Update (2,201 samples, 30.79%)</title><rect x="410.7" y="693" width="363.3" height="15.0" fill="rgb(240,49,3)" rx="2" ry="2" />
<text  x="413.65" y="703.5" >Game_CommonEvent::Update</text>
</g>
<g >
<title>Game_Variables_Class::Get (128 samples, 1.79%)</title><rect x="523.2" y="645" width="21.2" height="15.0" fill="rgb(232,46,18)" rx="2" ry="2" />
<text  x="526.24" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.28%)</title><rect x="989.9" y="661" width="3.3" height="15.0" fill="rgb(229,41,9)" rx="2" ry="2" />
<text  x="992.92" y="671.5" ></text>
</g>
<g >
<title>[libGLX.so.0.0.0] (2 samples, 0.03%)</title><rect x="1172.5" y="709" width="0.3" height="15.0" fill="rgb(233,113,40)" rx="2" ry="2" />
<text  x="1175.50" y="719.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.01%)</title><rect x="990.7" y="501" width="0.2" height="15.0" fill="rgb(221,118,21)" rx="2" ry="2" />
<text  x="993.75" y="511.5" ></text>
</g>
<g >
<title>__errno_location (1 samples, 0.01%)</title><rect x="994.7" y="549" width="0.2" height="15.0" fill="rgb(244,100,29)" rx="2" ry="2" />
<text  x="997.71" y="559.5" ></text>
</g>
<g >
<title>eventfd_poll (2 samples, 0.03%)</title><rect x="30.5" y="805" width="0.3" height="15.0" fill="rgb(232,47,46)" rx="2" ry="2" />
<text  x="33.47" y="815.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (2 samples, 0.03%)</title><rect x="780.4" y="677" width="0.4" height="15.0" fill="rgb(236,176,36)" rx="2" ry="2" />
<text  x="783.43" y="687.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="881.5" y="517" width="0.1" height="15.0" fill="rgb(221,217,24)" rx="2" ry="2" />
<text  x="884.46" y="527.5" ></text>
</g>
<g >
<title>__libc_recvmsg (1 samples, 0.01%)</title><rect x="60.5" y="837" width="0.2" height="15.0" fill="rgb(246,151,10)" rx="2" ry="2" />
<text  x="63.51" y="847.5" ></text>
</g>
<g >
<title>Blend (3 samples, 0.04%)</title><rect x="957.4" y="677" width="0.5" height="15.0" fill="rgb(235,37,42)" rx="2" ry="2" />
<text  x="960.40" y="687.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (36 samples, 0.50%)</title><rect x="934.9" y="469" width="6.0" height="15.0" fill="rgb(207,179,10)" rx="2" ry="2" />
<text  x="937.95" y="479.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="689.8" y="293" width="0.2" height="15.0" fill="rgb(221,76,3)" rx="2" ry="2" />
<text  x="692.80" y="303.5" ></text>
</g>
<g >
<title>rcu_segcblist_ready_cbs (1 samples, 0.01%)</title><rect x="677.4" y="277" width="0.2" height="15.0" fill="rgb(224,159,49)" rx="2" ry="2" />
<text  x="680.42" y="287.5" ></text>
</g>
<g >
<title>_mm_mulhi_epu16 (29 samples, 0.41%)</title><rect x="241.9" y="565" width="4.8" height="15.0" fill="rgb(246,54,24)" rx="2" ry="2" />
<text  x="244.94" y="575.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="782.4" y="597" width="0.2" height="15.0" fill="rgb(248,225,16)" rx="2" ry="2" />
<text  x="785.41" y="607.5" ></text>
</g>
<g >
<title>over_2x128 (9 samples, 0.13%)</title><rect x="222.0" y="581" width="1.4" height="15.0" fill="rgb(235,38,32)" rx="2" ry="2" />
<text  x="224.96" y="591.5" ></text>
</g>
<g >
<title>xhci_urb_enqueue (1 samples, 0.01%)</title><rect x="472.7" y="357" width="0.2" height="15.0" fill="rgb(243,78,21)" rx="2" ry="2" />
<text  x="475.72" y="367.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (1 samples, 0.01%)</title><rect x="581.3" y="645" width="0.2" height="15.0" fill="rgb(239,77,11)" rx="2" ry="2" />
<text  x="584.35" y="655.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandOptionGeneric (18 samples, 0.25%)</title><rect x="584.3" y="661" width="3.0" height="15.0" fill="rgb(216,8,53)" rx="2" ry="2" />
<text  x="587.32" y="671.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="782.4" y="453" width="0.2" height="15.0" fill="rgb(227,90,33)" rx="2" ry="2" />
<text  x="785.41" y="463.5" ></text>
</g>
<g >
<title>expand_alpha_1x128 (1 samples, 0.01%)</title><rect x="341.8" y="581" width="0.2" height="15.0" fill="rgb(237,225,35)" rx="2" ry="2" />
<text  x="344.81" y="591.5" ></text>
</g>
<g >
<title>save_128_aligned (18 samples, 0.25%)</title><rect x="889.1" y="597" width="2.9" height="15.0" fill="rgb(238,194,47)" rx="2" ry="2" />
<text  x="892.06" y="607.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingBackgroundExecution (8 samples, 0.11%)</title><rect x="411.1" y="677" width="1.4" height="15.0" fill="rgb(218,162,54)" rx="2" ry="2" />
<text  x="414.15" y="687.5" ></text>
</g>
<g >
<title>_int_free (4 samples, 0.06%)</title><rect x="630.4" y="437" width="0.6" height="15.0" fill="rgb(245,44,8)" rx="2" ry="2" />
<text  x="633.37" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Player, std::default_delete&lt;Game_Player&gt; &gt;::get (1 samples, 0.01%)</title><rect x="986.8" y="645" width="0.2" height="15.0" fill="rgb(253,95,39)" rx="2" ry="2" />
<text  x="989.79" y="655.5" ></text>
</g>
<g >
<title>LINUX_JoystickDetect (3 samples, 0.04%)</title><rect x="993.4" y="661" width="0.5" height="15.0" fill="rgb(214,120,29)" rx="2" ry="2" />
<text  x="996.39" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (9 samples, 0.13%)</title><rect x="628.9" y="469" width="1.5" height="15.0" fill="rgb(232,108,40)" rx="2" ry="2" />
<text  x="631.89" y="479.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="988.1" y="645" width="0.3" height="15.0" fill="rgb(241,178,40)" rx="2" ry="2" />
<text  x="991.11" y="655.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (3 samples, 0.04%)</title><rect x="121.4" y="773" width="0.5" height="15.0" fill="rgb(227,108,45)" rx="2" ry="2" />
<text  x="124.43" y="783.5" ></text>
</g>
<g >
<title>SDL_SoftBlit (993 samples, 13.89%)</title><rect x="999.0" y="677" width="163.9" height="15.0" fill="rgb(252,167,20)" rx="2" ry="2" />
<text  x="1002.00" y="687.5" >SDL_SoftBlit</text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.01%)</title><rect x="350.9" y="613" width="0.2" height="15.0" fill="rgb(224,4,53)" rx="2" ry="2" />
<text  x="353.89" y="623.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="344.9" y="469" width="0.2" height="15.0" fill="rgb(247,65,16)" rx="2" ry="2" />
<text  x="347.95" y="479.5" ></text>
</g>
<g >
<title>_mm_cmpeq_epi8 (1 samples, 0.01%)</title><rect x="328.1" y="549" width="0.2" height="15.0" fill="rgb(250,142,52)" rx="2" ry="2" />
<text  x="331.11" y="559.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (49 samples, 0.69%)</title><rect x="606.1" y="565" width="8.1" height="15.0" fill="rgb(222,170,8)" rx="2" ry="2" />
<text  x="609.11" y="575.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="348.9" y="373" width="0.2" height="15.0" fill="rgb(241,73,29)" rx="2" ry="2" />
<text  x="351.91" y="383.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="171.9" y="613" width="0.2" height="15.0" fill="rgb(232,219,49)" rx="2" ry="2" />
<text  x="174.94" y="623.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (3 samples, 0.04%)</title><rect x="772.7" y="677" width="0.5" height="15.0" fill="rgb(214,8,52)" rx="2" ry="2" />
<text  x="775.67" y="687.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="955.3" y="485" width="0.3" height="15.0" fill="rgb(215,108,38)" rx="2" ry="2" />
<text  x="958.25" y="495.5" ></text>
</g>
<g >
<title>Sprite::Draw (3 samples, 0.04%)</title><rect x="361.6" y="709" width="0.5" height="15.0" fill="rgb(249,20,17)" rx="2" ry="2" />
<text  x="364.62" y="719.5" ></text>
</g>
<g >
<title>Bitmap::pixels (1 samples, 0.01%)</title><rect x="898.6" y="645" width="0.2" height="15.0" fill="rgb(246,14,39)" rx="2" ry="2" />
<text  x="901.63" y="655.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (1 samples, 0.01%)</title><rect x="60.0" y="853" width="0.2" height="15.0" fill="rgb(231,98,6)" rx="2" ry="2" />
<text  x="63.02" y="863.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.08%)</title><rect x="620.3" y="437" width="1.0" height="15.0" fill="rgb(245,39,52)" rx="2" ry="2" />
<text  x="623.30" y="447.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="614.2" y="453" width="0.2" height="15.0" fill="rgb(212,22,1)" rx="2" ry="2" />
<text  x="617.20" y="463.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="319.7" y="469" width="0.2" height="15.0" fill="rgb(216,43,34)" rx="2" ry="2" />
<text  x="322.69" y="479.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="598.2" y="485" width="0.1" height="15.0" fill="rgb(241,81,9)" rx="2" ry="2" />
<text  x="601.18" y="495.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (48 samples, 0.67%)</title><rect x="1164.1" y="613" width="7.9" height="15.0" fill="rgb(223,192,3)" rx="2" ry="2" />
<text  x="1167.08" y="623.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="1185.0" y="629" width="0.2" height="15.0" fill="rgb(234,29,48)" rx="2" ry="2" />
<text  x="1188.05" y="639.5" ></text>
</g>
<g >
<title>_mm_set1_epi16 (1 samples, 0.01%)</title><rect x="229.7" y="597" width="0.2" height="15.0" fill="rgb(213,40,36)" rx="2" ry="2" />
<text  x="232.72" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Val_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;Drawable*, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (3 samples, 0.04%)</title><rect x="370.7" y="597" width="0.5" height="15.0" fill="rgb(215,41,2)" rx="2" ry="2" />
<text  x="373.70" y="607.5" ></text>
</g>
<g >
<title>_mm_movemask_epi8 (11 samples, 0.15%)</title><rect x="835.2" y="581" width="1.9" height="15.0" fill="rgb(229,189,12)" rx="2" ry="2" />
<text  x="838.24" y="591.5" ></text>
</g>
<g >
<title>SDL_UpdateMouseFocus (1 samples, 0.01%)</title><rect x="988.4" y="645" width="0.2" height="15.0" fill="rgb(225,104,54)" rx="2" ry="2" />
<text  x="991.44" y="655.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="694.3" y="533" width="0.1" height="15.0" fill="rgb(215,167,53)" rx="2" ry="2" />
<text  x="697.26" y="543.5" ></text>
</g>
<g >
<title>do_syscall_64 (111 samples, 1.55%)</title><rect x="386.6" y="677" width="18.3" height="15.0" fill="rgb(240,107,2)" rx="2" ry="2" />
<text  x="389.55" y="687.5" ></text>
</g>
<g >
<title>put_prev_entity (1 samples, 0.01%)</title><rect x="46.0" y="693" width="0.2" height="15.0" fill="rgb(212,177,49)" rx="2" ry="2" />
<text  x="48.99" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (5 samples, 0.07%)</title><rect x="654.3" y="421" width="0.8" height="15.0" fill="rgb(247,18,43)" rx="2" ry="2" />
<text  x="657.31" y="431.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (8 samples, 0.11%)</title><rect x="849.8" y="565" width="1.3" height="15.0" fill="rgb(214,68,48)" rx="2" ry="2" />
<text  x="852.77" y="575.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.01%)</title><rect x="581.5" y="629" width="0.2" height="15.0" fill="rgb(225,99,26)" rx="2" ry="2" />
<text  x="584.51" y="639.5" ></text>
</g>
<g >
<title>pix_multiply_1x128 (1 samples, 0.01%)</title><rect x="342.5" y="565" width="0.1" height="15.0" fill="rgb(249,85,35)" rx="2" ry="2" />
<text  x="345.47" y="575.5" ></text>
</g>
<g >
<title>tcache_put (2 samples, 0.03%)</title><rect x="630.7" y="421" width="0.3" height="15.0" fill="rgb(227,109,21)" rx="2" ry="2" />
<text  x="633.71" y="431.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="754.5" y="597" width="0.2" height="15.0" fill="rgb(227,81,9)" rx="2" ry="2" />
<text  x="757.52" y="607.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="995.9" y="469" width="0.1" height="15.0" fill="rgb(217,207,43)" rx="2" ry="2" />
<text  x="998.86" y="479.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="319.7" y="501" width="0.2" height="15.0" fill="rgb(241,222,41)" rx="2" ry="2" />
<text  x="322.69" y="511.5" ></text>
</g>
<g >
<title>Bitmap::width (1 samples, 0.01%)</title><rect x="357.0" y="661" width="0.2" height="15.0" fill="rgb(220,89,7)" rx="2" ry="2" />
<text  x="360.00" y="671.5" ></text>
</g>
<g >
<title>SDL_UpdateTexture_REAL (1,051 samples, 14.70%)</title><rect x="998.5" y="725" width="173.5" height="15.0" fill="rgb(205,32,17)" rx="2" ry="2" />
<text  x="1001.51" y="735.5" >SDL_UpdateTexture_REAL</text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (7 samples, 0.10%)</title><rect x="658.1" y="485" width="1.2" height="15.0" fill="rgb(252,152,31)" rx="2" ry="2" />
<text  x="661.11" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="663.6" y="533" width="0.1" height="15.0" fill="rgb(241,109,50)" rx="2" ry="2" />
<text  x="666.56" y="543.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.01%)</title><rect x="622.0" y="357" width="0.1" height="15.0" fill="rgb(236,83,45)" rx="2" ry="2" />
<text  x="624.96" y="367.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="319.4" y="405" width="0.1" height="15.0" fill="rgb(220,19,32)" rx="2" ry="2" />
<text  x="322.36" y="415.5" ></text>
</g>
<g >
<title>operator() (2 samples, 0.03%)</title><rect x="364.4" y="693" width="0.4" height="15.0" fill="rgb(219,71,13)" rx="2" ry="2" />
<text  x="367.43" y="703.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.04%)</title><rect x="661.6" y="405" width="0.5" height="15.0" fill="rgb(227,31,7)" rx="2" ry="2" />
<text  x="664.58" y="415.5" ></text>
</g>
<g >
<title>handle_irq_event (3 samples, 0.04%)</title><rect x="121.4" y="789" width="0.5" height="15.0" fill="rgb(251,227,51)" rx="2" ry="2" />
<text  x="124.43" y="799.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (4 samples, 0.06%)</title><rect x="668.5" y="485" width="0.7" height="15.0" fill="rgb(239,116,43)" rx="2" ry="2" />
<text  x="671.51" y="495.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;int&gt;::operator= (1 samples, 0.01%)</title><rect x="696.9" y="613" width="0.2" height="15.0" fill="rgb(212,217,41)" rx="2" ry="2" />
<text  x="699.90" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (2 samples, 0.03%)</title><rect x="599.8" y="501" width="0.4" height="15.0" fill="rgb(229,14,5)" rx="2" ry="2" />
<text  x="602.83" y="511.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="404.9" y="613" width="0.1" height="15.0" fill="rgb(230,190,35)" rx="2" ry="2" />
<text  x="407.87" y="623.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (77 samples, 1.08%)</title><rect x="943.4" y="517" width="12.7" height="15.0" fill="rgb(222,116,23)" rx="2" ry="2" />
<text  x="946.37" y="527.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="202.3" y="549" width="0.2" height="15.0" fill="rgb(252,33,48)" rx="2" ry="2" />
<text  x="205.32" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (67 samples, 0.94%)</title><rect x="631.9" y="389" width="11.0" height="15.0" fill="rgb(208,48,29)" rx="2" ry="2" />
<text  x="634.86" y="399.5" ></text>
</g>
<g >
<title>irq_enter (1 samples, 0.01%)</title><rect x="329.6" y="533" width="0.2" height="15.0" fill="rgb(205,153,40)" rx="2" ry="2" />
<text  x="332.60" y="543.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (2 samples, 0.03%)</title><rect x="1172.2" y="693" width="0.3" height="15.0" fill="rgb(242,175,29)" rx="2" ry="2" />
<text  x="1175.17" y="703.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="689.8" y="133" width="0.2" height="15.0" fill="rgb(208,110,7)" rx="2" ry="2" />
<text  x="692.80" y="143.5" ></text>
</g>
<g >
<title>std::find&lt;int const*, int&gt; (13 samples, 0.18%)</title><rect x="468.3" y="629" width="2.1" height="15.0" fill="rgb(243,16,34)" rx="2" ry="2" />
<text  x="471.27" y="639.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (69 samples, 0.97%)</title><rect x="971.8" y="677" width="11.4" height="15.0" fill="rgb(214,143,11)" rx="2" ry="2" />
<text  x="974.76" y="687.5" ></text>
</g>
<g >
<title>std::replace&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (17 samples, 0.24%)</title><rect x="622.5" y="501" width="2.8" height="15.0" fill="rgb(240,92,38)" rx="2" ry="2" />
<text  x="625.45" y="511.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="301.0" y="533" width="0.2" height="15.0" fill="rgb(237,16,20)" rx="2" ry="2" />
<text  x="304.04" y="543.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="1171.8" y="533" width="0.2" height="15.0" fill="rgb(219,26,34)" rx="2" ry="2" />
<text  x="1174.84" y="543.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (1 samples, 0.01%)</title><rect x="631.2" y="533" width="0.2" height="15.0" fill="rgb(230,132,11)" rx="2" ry="2" />
<text  x="634.20" y="543.5" ></text>
</g>
<g >
<title>Game_Picture::Show (675 samples, 9.44%)</title><rect x="592.7" y="645" width="111.5" height="15.0" fill="rgb(238,43,53)" rx="2" ry="2" />
<text  x="595.74" y="655.5" >Game_Picture:..</text>
</g>
<g >
<title>__exchange_and_add_dispatch (5 samples, 0.07%)</title><rect x="353.7" y="613" width="0.8" height="15.0" fill="rgb(207,193,3)" rx="2" ry="2" />
<text  x="356.70" y="623.5" ></text>
</g>
<g >
<title>_pixman_image_validate (10 samples, 0.14%)</title><rect x="305.7" y="613" width="1.6" height="15.0" fill="rgb(220,106,49)" rx="2" ry="2" />
<text  x="308.66" y="623.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (8 samples, 0.11%)</title><rect x="376.0" y="581" width="1.3" height="15.0" fill="rgb(214,207,6)" rx="2" ry="2" />
<text  x="378.98" y="591.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="468.1" y="469" width="0.2" height="15.0" fill="rgb(250,160,8)" rx="2" ry="2" />
<text  x="471.10" y="479.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="282.9" y="533" width="0.1" height="15.0" fill="rgb(236,178,0)" rx="2" ry="2" />
<text  x="285.88" y="543.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="775.5" y="453" width="0.1" height="15.0" fill="rgb(225,9,51)" rx="2" ry="2" />
<text  x="778.48" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (10 samples, 0.14%)</title><rect x="650.3" y="405" width="1.7" height="15.0" fill="rgb(212,158,2)" rx="2" ry="2" />
<text  x="653.35" y="415.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipToNextConditional (16 samples, 0.22%)</title><rect x="584.6" y="645" width="2.7" height="15.0" fill="rgb(226,132,30)" rx="2" ry="2" />
<text  x="587.65" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (156 samples, 2.18%)</title><rect x="25.7" y="869" width="25.7" height="15.0" fill="rgb(235,114,47)" rx="2" ry="2" />
<text  x="28.68" y="879.5" >e..</text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, false, true&gt;::operator++ (4 samples, 0.06%)</title><rect x="1184.6" y="709" width="0.6" height="15.0" fill="rgb(210,131,11)" rx="2" ry="2" />
<text  x="1187.55" y="719.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="404.9" y="501" width="0.1" height="15.0" fill="rgb(252,45,33)" rx="2" ry="2" />
<text  x="407.87" y="511.5" ></text>
</g>
<g >
<title>_mm_movemask_epi8 (11 samples, 0.15%)</title><rect x="202.8" y="565" width="1.8" height="15.0" fill="rgb(223,94,1)" rx="2" ry="2" />
<text  x="205.81" y="575.5" ></text>
</g>
<g >
<title>retire_playback_urb (1 samples, 0.01%)</title><rect x="661.9" y="133" width="0.2" height="15.0" fill="rgb(211,136,33)" rx="2" ry="2" />
<text  x="664.91" y="143.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="319.7" y="373" width="0.2" height="15.0" fill="rgb(226,176,30)" rx="2" ry="2" />
<text  x="322.69" y="383.5" ></text>
</g>
<g >
<title>xhci_msi_irq (2 samples, 0.03%)</title><rect x="849.4" y="453" width="0.4" height="15.0" fill="rgb(236,124,28)" rx="2" ry="2" />
<text  x="852.44" y="463.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="708.3" y="549" width="0.2" height="15.0" fill="rgb(228,62,8)" rx="2" ry="2" />
<text  x="711.29" y="559.5" ></text>
</g>
<g >
<title>_int_free (10 samples, 0.14%)</title><rect x="692.6" y="469" width="1.7" height="15.0" fill="rgb(242,127,25)" rx="2" ry="2" />
<text  x="695.61" y="479.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="468.1" y="437" width="0.2" height="15.0" fill="rgb(244,73,48)" rx="2" ry="2" />
<text  x="471.10" y="447.5" ></text>
</g>
<g >
<title>Tone::Tone (2 samples, 0.03%)</title><rect x="357.8" y="677" width="0.4" height="15.0" fill="rgb(248,222,15)" rx="2" ry="2" />
<text  x="360.83" y="687.5" ></text>
</g>
<g >
<title>pixman_region32_extents (2 samples, 0.03%)</title><rect x="65.0" y="853" width="0.3" height="15.0" fill="rgb(210,126,26)" rx="2" ry="2" />
<text  x="67.97" y="863.5" ></text>
</g>
<g >
<title>SDL_GetTicks_REAL (3 samples, 0.04%)</title><rect x="994.0" y="661" width="0.5" height="15.0" fill="rgb(209,136,41)" rx="2" ry="2" />
<text  x="997.05" y="671.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="835.1" y="549" width="0.1" height="15.0" fill="rgb(253,229,1)" rx="2" ry="2" />
<text  x="838.08" y="559.5" ></text>
</g>
<g >
<title>xhci_get_frame (1 samples, 0.01%)</title><rect x="348.9" y="229" width="0.2" height="15.0" fill="rgb(235,118,19)" rx="2" ry="2" />
<text  x="351.91" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="988.6" y="613" width="0.2" height="15.0" fill="rgb(207,138,31)" rx="2" ry="2" />
<text  x="991.60" y="623.5" ></text>
</g>
<g >
<title>sock_poll (1 samples, 0.01%)</title><rect x="47.0" y="821" width="0.1" height="15.0" fill="rgb(241,197,5)" rx="2" ry="2" />
<text  x="49.98" y="831.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="725.5" y="533" width="0.1" height="15.0" fill="rgb(226,74,20)" rx="2" ry="2" />
<text  x="728.46" y="543.5" ></text>
</g>
<g >
<title>scaled_nearest_scanline_sse2_8888_8888_OVER (64 samples, 0.90%)</title><rect x="320.2" y="581" width="10.6" height="15.0" fill="rgb(238,178,13)" rx="2" ry="2" />
<text  x="323.19" y="591.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="361.5" y="565" width="0.1" height="15.0" fill="rgb(210,39,25)" rx="2" ry="2" />
<text  x="364.46" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (9 samples, 0.13%)</title><rect x="698.4" y="613" width="1.5" height="15.0" fill="rgb(228,31,1)" rx="2" ry="2" />
<text  x="701.39" y="623.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (51 samples, 0.71%)</title><rect x="1163.6" y="629" width="8.4" height="15.0" fill="rgb(219,141,4)" rx="2" ry="2" />
<text  x="1166.59" y="639.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.01%)</title><rect x="614.4" y="517" width="0.1" height="15.0" fill="rgb(238,105,14)" rx="2" ry="2" />
<text  x="617.36" y="527.5" ></text>
</g>
<g >
<title>all (7,148 samples, 100%)</title><rect x="10.0" y="901" width="1180.0" height="15.0" fill="rgb(224,201,30)" rx="2" ry="2" />
<text  x="13.00" y="911.5" ></text>
</g>
<g >
<title>__libc_recvmsg (3 samples, 0.04%)</title><rect x="989.4" y="565" width="0.5" height="15.0" fill="rgb(205,77,12)" rx="2" ry="2" />
<text  x="992.43" y="575.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Set (3 samples, 0.04%)</title><rect x="71.4" y="853" width="0.5" height="15.0" fill="rgb(209,116,9)" rx="2" ry="2" />
<text  x="74.41" y="863.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="52.3" y="565" width="0.1" height="15.0" fill="rgb(219,24,17)" rx="2" ry="2" />
<text  x="55.26" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2 samples, 0.03%)</title><rect x="599.8" y="485" width="0.4" height="15.0" fill="rgb(210,180,19)" rx="2" ry="2" />
<text  x="602.83" y="495.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="661.9" y="325" width="0.2" height="15.0" fill="rgb(248,106,51)" rx="2" ry="2" />
<text  x="664.91" y="335.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (344 samples, 4.81%)</title><rect x="899.3" y="645" width="56.8" height="15.0" fill="rgb(226,39,41)" rx="2" ry="2" />
<text  x="902.29" y="655.5" >std::a..</text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, unsigned long, true&gt;::_S_equals (9 samples, 0.13%)</title><rect x="610.7" y="501" width="1.5" height="15.0" fill="rgb(228,65,44)" rx="2" ry="2" />
<text  x="613.73" y="511.5" ></text>
</g>
<g >
<title>SDL_Delay_REAL (21 samples, 0.29%)</title><rect x="989.9" y="693" width="3.5" height="15.0" fill="rgb(221,167,43)" rx="2" ry="2" />
<text  x="992.92" y="703.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="404.9" y="693" width="0.1" height="15.0" fill="rgb(247,36,19)" rx="2" ry="2" />
<text  x="407.87" y="703.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="239.1" y="533" width="0.2" height="15.0" fill="rgb(230,118,49)" rx="2" ry="2" />
<text  x="242.13" y="543.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="1171.8" y="501" width="0.2" height="15.0" fill="rgb(239,7,10)" rx="2" ry="2" />
<text  x="1174.84" y="511.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (3 samples, 0.04%)</title><rect x="657.4" y="341" width="0.5" height="15.0" fill="rgb(211,37,41)" rx="2" ry="2" />
<text  x="660.45" y="351.5" ></text>
</g>
<g >
<title>pixman_image_get_height@plt (1 samples, 0.01%)</title><rect x="898.5" y="629" width="0.1" height="15.0" fill="rgb(248,151,20)" rx="2" ry="2" />
<text  x="901.47" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="87.6" y="821" width="0.3" height="15.0" fill="rgb(242,49,50)" rx="2" ry="2" />
<text  x="90.59" y="831.5" ></text>
</g>
<g >
<title>_mm_loadu_si128 (12 samples, 0.17%)</title><rect x="259.9" y="597" width="2.0" height="15.0" fill="rgb(219,137,31)" rx="2" ry="2" />
<text  x="262.93" y="607.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="673.3" y="357" width="0.2" height="15.0" fill="rgb(212,140,35)" rx="2" ry="2" />
<text  x="676.30" y="367.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="941.2" y="421" width="0.2" height="15.0" fill="rgb(223,100,51)" rx="2" ry="2" />
<text  x="944.22" y="431.5" ></text>
</g>
<g >
<title>__sched_text_start (2 samples, 0.03%)</title><rect x="1188.8" y="773" width="0.4" height="15.0" fill="rgb(253,24,23)" rx="2" ry="2" />
<text  x="1191.84" y="783.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.01%)</title><rect x="708.0" y="533" width="0.1" height="15.0" fill="rgb(225,170,27)" rx="2" ry="2" />
<text  x="710.96" y="543.5" ></text>
</g>
<g >
<title>sse2_combine_over_u (604 samples, 8.45%)</title><rect x="798.1" y="629" width="99.7" height="15.0" fill="rgb(233,83,44)" rx="2" ry="2" />
<text  x="801.10" y="639.5" >sse2_combine..</text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="202.3" y="485" width="0.2" height="15.0" fill="rgb(209,105,0)" rx="2" ry="2" />
<text  x="205.32" y="495.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (1 samples, 0.01%)</title><rect x="582.2" y="629" width="0.1" height="15.0" fill="rgb(233,144,9)" rx="2" ry="2" />
<text  x="585.17" y="639.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.01%)</title><rect x="706.5" y="549" width="0.1" height="15.0" fill="rgb(225,70,42)" rx="2" ry="2" />
<text  x="709.48" y="559.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="267.2" y="581" width="0.2" height="15.0" fill="rgb(247,49,7)" rx="2" ry="2" />
<text  x="270.20" y="591.5" ></text>
</g>
<g >
<title>pixman_image_get_height (2 samples, 0.03%)</title><rect x="984.0" y="677" width="0.3" height="15.0" fill="rgb(244,77,39)" rx="2" ry="2" />
<text  x="986.98" y="687.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (11 samples, 0.15%)</title><rect x="627.1" y="453" width="1.8" height="15.0" fill="rgb(250,98,49)" rx="2" ry="2" />
<text  x="630.07" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::push_back (3 samples, 0.04%)</title><rect x="706.3" y="613" width="0.5" height="15.0" fill="rgb(205,24,3)" rx="2" ry="2" />
<text  x="709.31" y="623.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="52.3" y="693" width="0.1" height="15.0" fill="rgb(250,84,25)" rx="2" ry="2" />
<text  x="55.26" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.01%)</title><rect x="621.6" y="437" width="0.2" height="15.0" fill="rgb(250,102,17)" rx="2" ry="2" />
<text  x="624.63" y="447.5" ></text>
</g>
<g >
<title>Game_Interpreter::SetSubcommandIndex (17 samples, 0.24%)</title><rect x="452.6" y="645" width="2.8" height="15.0" fill="rgb(253,120,35)" rx="2" ry="2" />
<text  x="455.58" y="655.5" ></text>
</g>
<g >
<title>Bitmap::height (3 samples, 0.04%)</title><rect x="956.1" y="661" width="0.5" height="15.0" fill="rgb(245,85,19)" rx="2" ry="2" />
<text  x="959.08" y="671.5" ></text>
</g>
<g >
<title>_pixman_multiply_overflows_int (2 samples, 0.03%)</title><rect x="932.6" y="453" width="0.4" height="15.0" fill="rgb(241,154,19)" rx="2" ry="2" />
<text  x="935.64" y="463.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandJumpToLabel (52 samples, 0.73%)</title><rect x="573.1" y="661" width="8.6" height="15.0" fill="rgb(207,18,2)" rx="2" ry="2" />
<text  x="576.09" y="671.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (24 samples, 0.34%)</title><rect x="700.2" y="581" width="4.0" height="15.0" fill="rgb(237,49,16)" rx="2" ry="2" />
<text  x="703.20" y="591.5" ></text>
</g>
<g >
<title>pixman_image_get_height (1 samples, 0.01%)</title><rect x="76.0" y="853" width="0.2" height="15.0" fill="rgb(218,56,14)" rx="2" ry="2" />
<text  x="79.03" y="863.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (2 samples, 0.03%)</title><rect x="703.8" y="469" width="0.4" height="15.0" fill="rgb(218,3,32)" rx="2" ry="2" />
<text  x="706.84" y="479.5" ></text>
</g>
<g >
<title>___sys_recvmsg (1 samples, 0.01%)</title><rect x="989.4" y="469" width="0.2" height="15.0" fill="rgb(227,193,9)" rx="2" ry="2" />
<text  x="992.43" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, false, true&gt;::operator++ (27 samples, 0.38%)</title><rect x="156.3" y="725" width="4.4" height="15.0" fill="rgb(225,29,32)" rx="2" ry="2" />
<text  x="159.26" y="735.5" ></text>
</g>
<g >
<title>compute_transformed_extents (2 samples, 0.03%)</title><rect x="75.4" y="853" width="0.3" height="15.0" fill="rgb(239,192,18)" rx="2" ry="2" />
<text  x="78.37" y="863.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (1 samples, 0.01%)</title><rect x="125.9" y="853" width="0.2" height="15.0" fill="rgb(252,181,10)" rx="2" ry="2" />
<text  x="128.89" y="863.5" ></text>
</g>
<g >
<title>find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int&gt; &gt;, Input::UiSource::Update()::&lt;lambda(int)&gt; &gt; (2 samples, 0.03%)</title><rect x="373.8" y="677" width="0.4" height="15.0" fill="rgb(224,190,37)" rx="2" ry="2" />
<text  x="376.84" y="687.5" ></text>
</g>
<g >
<title>do_sched_yield (3 samples, 0.04%)</title><rect x="86.6" y="789" width="0.5" height="15.0" fill="rgb(242,212,45)" rx="2" ry="2" />
<text  x="89.60" y="799.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="319.2" y="533" width="0.3" height="15.0" fill="rgb(254,227,3)" rx="2" ry="2" />
<text  x="322.20" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (4 samples, 0.06%)</title><rect x="621.8" y="485" width="0.7" height="15.0" fill="rgb(227,85,13)" rx="2" ry="2" />
<text  x="624.79" y="495.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="673.3" y="373" width="0.2" height="15.0" fill="rgb(235,121,12)" rx="2" ry="2" />
<text  x="676.30" y="383.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="582.2" y="581" width="0.1" height="15.0" fill="rgb(220,135,46)" rx="2" ry="2" />
<text  x="585.17" y="591.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (8 samples, 0.11%)</title><rect x="650.7" y="389" width="1.3" height="15.0" fill="rgb(218,76,42)" rx="2" ry="2" />
<text  x="653.68" y="399.5" ></text>
</g>
<g >
<title>in_over_1x128 (1 samples, 0.01%)</title><rect x="233.0" y="613" width="0.2" height="15.0" fill="rgb(212,96,19)" rx="2" ry="2" />
<text  x="236.02" y="623.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (2 samples, 0.03%)</title><rect x="1162.4" y="453" width="0.4" height="15.0" fill="rgb(205,129,30)" rx="2" ry="2" />
<text  x="1165.43" y="463.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (1 samples, 0.01%)</title><rect x="86.8" y="709" width="0.1" height="15.0" fill="rgb(228,2,25)" rx="2" ry="2" />
<text  x="89.76" y="719.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (1 samples, 0.01%)</title><rect x="987.1" y="501" width="0.2" height="15.0" fill="rgb(236,17,15)" rx="2" ry="2" />
<text  x="990.12" y="511.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="375.0" y="629" width="0.2" height="15.0" fill="rgb(209,115,45)" rx="2" ry="2" />
<text  x="377.99" y="639.5" ></text>
</g>
<g >
<title>SDL_UDEV_hotplug_update_available (1 samples, 0.01%)</title><rect x="987.9" y="645" width="0.2" height="15.0" fill="rgb(227,20,7)" rx="2" ry="2" />
<text  x="990.94" y="655.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="703.8" y="565" width="0.4" height="15.0" fill="rgb(242,162,8)" rx="2" ry="2" />
<text  x="706.84" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create@plt (1 samples, 0.01%)</title><rect x="657.3" y="389" width="0.1" height="15.0" fill="rgb(216,29,33)" rx="2" ry="2" />
<text  x="660.28" y="399.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="968.6" y="613" width="0.2" height="15.0" fill="rgb(235,45,33)" rx="2" ry="2" />
<text  x="971.63" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (7 samples, 0.10%)</title><rect x="658.1" y="453" width="1.2" height="15.0" fill="rgb(250,222,7)" rx="2" ry="2" />
<text  x="661.11" y="463.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="452.1" y="533" width="0.2" height="15.0" fill="rgb(209,188,3)" rx="2" ry="2" />
<text  x="455.09" y="543.5" ></text>
</g>
<g >
<title>pixman_image_get_height (1 samples, 0.01%)</title><rect x="64.5" y="853" width="0.1" height="15.0" fill="rgb(239,161,10)" rx="2" ry="2" />
<text  x="67.48" y="863.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="754.5" y="565" width="0.2" height="15.0" fill="rgb(230,199,38)" rx="2" ry="2" />
<text  x="757.52" y="575.5" ></text>
</g>
<g >
<title>Game_Picture::SetNonEffectParams (2 samples, 0.03%)</title><rect x="583.2" y="629" width="0.3" height="15.0" fill="rgb(243,134,12)" rx="2" ry="2" />
<text  x="586.16" y="639.5" ></text>
</g>
<g >
<title>_mm_unpackhi_epi8 (9 samples, 0.13%)</title><rect x="290.5" y="597" width="1.5" height="15.0" fill="rgb(235,64,9)" rx="2" ry="2" />
<text  x="293.47" y="607.5" ></text>
</g>
<g >
<title>__GI___getpid (1 samples, 0.01%)</title><rect x="1172.7" y="677" width="0.1" height="15.0" fill="rgb(244,225,8)" rx="2" ry="2" />
<text  x="1175.67" y="687.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="290.0" y="565" width="0.1" height="15.0" fill="rgb(238,77,45)" rx="2" ry="2" />
<text  x="292.98" y="575.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="983.0" y="597" width="0.2" height="15.0" fill="rgb(222,217,12)" rx="2" ry="2" />
<text  x="985.99" y="607.5" ></text>
</g>
<g >
<title>pixman_transform_point_31_16_3d (1 samples, 0.01%)</title><rect x="320.0" y="581" width="0.2" height="15.0" fill="rgb(247,209,19)" rx="2" ry="2" />
<text  x="323.02" y="591.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="756.5" y="485" width="0.2" height="15.0" fill="rgb(212,190,1)" rx="2" ry="2" />
<text  x="759.50" y="495.5" ></text>
</g>
<g >
<title>SDL_CalculateBlitN (1 samples, 0.01%)</title><rect x="998.8" y="645" width="0.2" height="15.0" fill="rgb(249,229,45)" rx="2" ry="2" />
<text  x="1001.84" y="655.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="709.0" y="549" width="0.1" height="15.0" fill="rgb(220,37,20)" rx="2" ry="2" />
<text  x="711.95" y="559.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.01%)</title><rect x="613.9" y="421" width="0.1" height="15.0" fill="rgb(219,9,25)" rx="2" ry="2" />
<text  x="616.87" y="431.5" ></text>
</g>
<g >
<title>rcu_irq_enter (1 samples, 0.01%)</title><rect x="121.9" y="805" width="0.2" height="15.0" fill="rgb(224,137,8)" rx="2" ry="2" />
<text  x="124.93" y="815.5" ></text>
</g>
<g >
<title>aa_file_perm (1 samples, 0.01%)</title><rect x="50.9" y="725" width="0.2" height="15.0" fill="rgb(221,20,2)" rx="2" ry="2" />
<text  x="53.94" y="735.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;@plt (1 samples, 0.01%)</title><rect x="708.1" y="549" width="0.2" height="15.0" fill="rgb(251,151,45)" rx="2" ry="2" />
<text  x="711.13" y="559.5" ></text>
</g>
<g >
<title>xhci_irq (2 samples, 0.03%)</title><rect x="121.6" y="725" width="0.3" height="15.0" fill="rgb(216,17,47)" rx="2" ry="2" />
<text  x="124.59" y="735.5" ></text>
</g>
<g >
<title>std::__stable_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (31 samples, 0.43%)</title><rect x="368.2" y="693" width="5.1" height="15.0" fill="rgb(241,112,39)" rx="2" ry="2" />
<text  x="371.23" y="703.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="165.5" y="661" width="0.2" height="15.0" fill="rgb(228,19,28)" rx="2" ry="2" />
<text  x="168.51" y="671.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (74 samples, 1.04%)</title><rect x="1173.0" y="725" width="12.2" height="15.0" fill="rgb(207,57,54)" rx="2" ry="2" />
<text  x="1176.00" y="735.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="282.9" y="565" width="0.1" height="15.0" fill="rgb(218,6,33)" rx="2" ry="2" />
<text  x="285.88" y="575.5" ></text>
</g>
<g >
<title>_mm_unpacklo_epi8 (17 samples, 0.24%)</title><rect x="292.0" y="597" width="2.8" height="15.0" fill="rgb(208,191,17)" rx="2" ry="2" />
<text  x="294.96" y="607.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (490 samples, 6.86%)</title><rect x="615.5" y="597" width="80.9" height="15.0" fill="rgb(221,108,50)" rx="2" ry="2" />
<text  x="618.52" y="607.5" >std::func..</text>
</g>
<g >
<title>Sprite::SetX (1 samples, 0.01%)</title><rect x="970.1" y="677" width="0.2" height="15.0" fill="rgb(215,16,7)" rx="2" ry="2" />
<text  x="973.11" y="687.5" ></text>
</g>
<g >
<title>consume_skb (1 samples, 0.01%)</title><rect x="995.5" y="389" width="0.2" height="15.0" fill="rgb(242,195,36)" rx="2" ry="2" />
<text  x="998.53" y="399.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.01%)</title><rect x="348.9" y="309" width="0.2" height="15.0" fill="rgb(225,20,19)" rx="2" ry="2" />
<text  x="351.91" y="319.5" ></text>
</g>
<g >
<title>snd_usb_pcm_delay.part.14 (1 samples, 0.01%)</title><rect x="661.9" y="117" width="0.2" height="15.0" fill="rgb(253,61,54)" rx="2" ry="2" />
<text  x="664.91" y="127.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="289.3" y="485" width="0.2" height="15.0" fill="rgb(214,147,53)" rx="2" ry="2" />
<text  x="292.32" y="495.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="1171.7" y="341" width="0.1" height="15.0" fill="rgb(226,148,35)" rx="2" ry="2" />
<text  x="1174.68" y="351.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="348.9" y="325" width="0.2" height="15.0" fill="rgb(234,45,15)" rx="2" ry="2" />
<text  x="351.91" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::~basic_string (1 samples, 0.01%)</title><rect x="707.5" y="629" width="0.1" height="15.0" fill="rgb(237,144,28)" rx="2" ry="2" />
<text  x="710.47" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (3 samples, 0.04%)</title><rect x="654.6" y="373" width="0.5" height="15.0" fill="rgb(238,168,37)" rx="2" ry="2" />
<text  x="657.64" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="657.9" y="453" width="0.2" height="15.0" fill="rgb(224,223,18)" rx="2" ry="2" />
<text  x="660.94" y="463.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (813 samples, 11.37%)</title><rect x="167.3" y="645" width="134.2" height="15.0" fill="rgb(240,69,18)" rx="2" ry="2" />
<text  x="170.32" y="655.5" >pixman_image_com..</text>
</g>
<g >
<title>Sdl2Ui::ProcessEvents (51 samples, 0.71%)</title><rect x="987.8" y="741" width="8.4" height="15.0" fill="rgb(222,224,34)" rx="2" ry="2" />
<text  x="990.78" y="751.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="782.4" y="581" width="0.2" height="15.0" fill="rgb(245,5,35)" rx="2" ry="2" />
<text  x="785.41" y="591.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.01%)</title><rect x="368.2" y="645" width="0.2" height="15.0" fill="rgb(237,189,36)" rx="2" ry="2" />
<text  x="371.23" y="655.5" ></text>
</g>
<g >
<title>usb_submit_urb (1 samples, 0.01%)</title><rect x="472.7" y="389" width="0.2" height="15.0" fill="rgb(245,98,2)" rx="2" ry="2" />
<text  x="475.72" y="399.5" ></text>
</g>
<g >
<title>SDL_IOReady (2 samples, 0.03%)</title><rect x="993.6" y="613" width="0.3" height="15.0" fill="rgb(248,180,33)" rx="2" ry="2" />
<text  x="996.55" y="623.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="404.9" y="677" width="0.1" height="15.0" fill="rgb(250,212,37)" rx="2" ry="2" />
<text  x="407.87" y="687.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="968.6" y="629" width="0.2" height="15.0" fill="rgb(236,214,1)" rx="2" ry="2" />
<text  x="971.63" y="639.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (5 samples, 0.07%)</title><rect x="662.6" y="533" width="0.8" height="15.0" fill="rgb(247,7,25)" rx="2" ry="2" />
<text  x="665.57" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.03%)</title><rect x="621.8" y="469" width="0.3" height="15.0" fill="rgb(236,149,27)" rx="2" ry="2" />
<text  x="624.79" y="479.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="538.8" y="565" width="0.1" height="15.0" fill="rgb(236,115,40)" rx="2" ry="2" />
<text  x="541.75" y="575.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="955.4" y="293" width="0.2" height="15.0" fill="rgb(244,59,26)" rx="2" ry="2" />
<text  x="958.42" y="303.5" ></text>
</g>
<g >
<title>over_1x128 (2 samples, 0.03%)</title><rect x="342.1" y="565" width="0.4" height="15.0" fill="rgb(233,79,28)" rx="2" ry="2" />
<text  x="345.14" y="575.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="472.7" y="485" width="0.2" height="15.0" fill="rgb(210,51,20)" rx="2" ry="2" />
<text  x="475.72" y="495.5" ></text>
</g>
<g >
<title>__put_user_8 (1 samples, 0.01%)</title><rect x="47.3" y="773" width="0.2" height="15.0" fill="rgb(209,146,46)" rx="2" ry="2" />
<text  x="50.31" y="783.5" ></text>
</g>
<g >
<title>handle_irq_event (2 samples, 0.03%)</title><rect x="849.4" y="501" width="0.4" height="15.0" fill="rgb(250,148,44)" rx="2" ry="2" />
<text  x="852.44" y="511.5" ></text>
</g>
<g >
<title>Window_Base::Update (1 samples, 0.01%)</title><rect x="987.0" y="693" width="0.1" height="15.0" fill="rgb(211,79,31)" rx="2" ry="2" />
<text  x="989.95" y="703.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (1 samples, 0.01%)</title><rect x="697.7" y="613" width="0.2" height="15.0" fill="rgb(229,64,31)" rx="2" ry="2" />
<text  x="700.73" y="623.5" ></text>
</g>
<g >
<title>std::return_temporary_buffer&lt;Drawable*&gt; (1 samples, 0.01%)</title><rect x="368.4" y="661" width="0.2" height="15.0" fill="rgb(225,45,38)" rx="2" ry="2" />
<text  x="371.39" y="671.5" ></text>
</g>
<g >
<title>_M_invoke (1 samples, 0.01%)</title><rect x="696.2" y="581" width="0.2" height="15.0" fill="rgb(207,213,21)" rx="2" ry="2" />
<text  x="699.24" y="591.5" ></text>
</g>
<g >
<title>Game_Picture::Move (7 samples, 0.10%)</title><rect x="582.3" y="645" width="1.2" height="15.0" fill="rgb(245,71,49)" rx="2" ry="2" />
<text  x="585.34" y="655.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.01%)</title><rect x="122.1" y="709" width="0.2" height="15.0" fill="rgb(228,229,46)" rx="2" ry="2" />
<text  x="125.09" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (3 samples, 0.04%)</title><rect x="614.4" y="565" width="0.5" height="15.0" fill="rgb(207,133,28)" rx="2" ry="2" />
<text  x="617.36" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (2 samples, 0.03%)</title><rect x="77.7" y="853" width="0.3" height="15.0" fill="rgb(246,15,41)" rx="2" ry="2" />
<text  x="80.68" y="863.5" ></text>
</g>
<g >
<title>std::mersenne_twister_engine&lt;unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul&gt;::_M_gen_rand (1 samples, 0.01%)</title><rect x="570.1" y="581" width="0.2" height="15.0" fill="rgb(233,26,2)" rx="2" ry="2" />
<text  x="573.12" y="591.5" ></text>
</g>
<g >
<title>deactivate_task (2 samples, 0.03%)</title><rect x="990.6" y="549" width="0.3" height="15.0" fill="rgb(253,1,20)" rx="2" ry="2" />
<text  x="993.58" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.01%)</title><rect x="592.6" y="613" width="0.1" height="15.0" fill="rgb(218,146,19)" rx="2" ry="2" />
<text  x="595.57" y="623.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="725.8" y="501" width="0.2" height="15.0" fill="rgb(223,18,44)" rx="2" ry="2" />
<text  x="728.79" y="511.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="570.3" y="645" width="0.2" height="15.0" fill="rgb(221,226,10)" rx="2" ry="2" />
<text  x="573.29" y="655.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="171.8" y="565" width="0.1" height="15.0" fill="rgb(213,54,34)" rx="2" ry="2" />
<text  x="174.78" y="575.5" ></text>
</g>
<g >
<title>pixman_image_get_stride (1 samples, 0.01%)</title><rect x="64.6" y="853" width="0.2" height="15.0" fill="rgb(210,57,0)" rx="2" ry="2" />
<text  x="67.64" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (2 samples, 0.03%)</title><rect x="780.8" y="629" width="0.3" height="15.0" fill="rgb(249,175,21)" rx="2" ry="2" />
<text  x="783.76" y="639.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (12 samples, 0.17%)</title><rect x="965.7" y="597" width="1.9" height="15.0" fill="rgb(211,120,6)" rx="2" ry="2" />
<text  x="968.65" y="607.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="756.5" y="453" width="0.2" height="15.0" fill="rgb(216,163,19)" rx="2" ry="2" />
<text  x="759.50" y="463.5" ></text>
</g>
<g >
<title>Game_Interpreter::ValueOrVariable (1 samples, 0.01%)</title><rect x="582.2" y="645" width="0.1" height="15.0" fill="rgb(234,113,38)" rx="2" ry="2" />
<text  x="585.17" y="655.5" ></text>
</g>
<g >
<title>_mm_mulhi_epu16 (13 samples, 0.18%)</title><rect x="250.4" y="581" width="2.1" height="15.0" fill="rgb(208,13,2)" rx="2" ry="2" />
<text  x="253.36" y="591.5" ></text>
</g>
<g >
<title>usb_get_current_frame_number (1 samples, 0.01%)</title><rect x="571.3" y="357" width="0.1" height="15.0" fill="rgb(254,31,47)" rx="2" ry="2" />
<text  x="574.28" y="367.5" ></text>
</g>
<g >
<title>Sprite::GetZ (3 samples, 0.04%)</title><rect x="370.2" y="581" width="0.5" height="15.0" fill="rgb(248,204,20)" rx="2" ry="2" />
<text  x="373.21" y="591.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="708.5" y="549" width="0.1" height="15.0" fill="rgb(244,48,33)" rx="2" ry="2" />
<text  x="711.46" y="559.5" ></text>
</g>
<g >
<title>Bitmap::ZoomOpacityBlit (308 samples, 4.31%)</title><rect x="301.5" y="661" width="50.9" height="15.0" fill="rgb(237,78,16)" rx="2" ry="2" />
<text  x="304.53" y="671.5" >Bitma..</text>
</g>
<g >
<title>[libGLX.so.0.0.0] (1 samples, 0.01%)</title><rect x="79.8" y="853" width="0.2" height="15.0" fill="rgb(240,69,25)" rx="2" ry="2" />
<text  x="82.83" y="863.5" ></text>
</g>
<g >
<title>Game_Map::Refresh (7 samples, 0.10%)</title><rect x="55.4" y="853" width="1.2" height="15.0" fill="rgb(239,16,4)" rx="2" ry="2" />
<text  x="58.40" y="863.5" ></text>
</g>
<g >
<title>usb_hcd_submit_urb (1 samples, 0.01%)</title><rect x="775.5" y="405" width="0.1" height="15.0" fill="rgb(229,78,4)" rx="2" ry="2" />
<text  x="778.48" y="415.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1 samples, 0.01%)</title><rect x="47.6" y="709" width="0.2" height="15.0" fill="rgb(248,150,15)" rx="2" ry="2" />
<text  x="50.64" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_M_lower_bound (9 samples, 0.13%)</title><rect x="941.7" y="453" width="1.5" height="15.0" fill="rgb(240,138,54)" rx="2" ry="2" />
<text  x="944.72" y="463.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.01%)</title><rect x="171.0" y="613" width="0.1" height="15.0" fill="rgb(209,142,9)" rx="2" ry="2" />
<text  x="173.95" y="623.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (5 samples, 0.07%)</title><rect x="654.3" y="485" width="0.8" height="15.0" fill="rgb(245,7,41)" rx="2" ry="2" />
<text  x="657.31" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (15 samples, 0.21%)</title><rect x="375.2" y="693" width="2.4" height="15.0" fill="rgb(243,21,46)" rx="2" ry="2" />
<text  x="378.16" y="703.5" ></text>
</g>
<g >
<title>irq_work_interrupt (1 samples, 0.01%)</title><rect x="377.3" y="581" width="0.2" height="15.0" fill="rgb(221,216,39)" rx="2" ry="2" />
<text  x="380.31" y="591.5" ></text>
</g>
<g >
<title>prepare_outbound_urb (1 samples, 0.01%)</title><rect x="571.3" y="389" width="0.1" height="15.0" fill="rgb(247,210,20)" rx="2" ry="2" />
<text  x="574.28" y="399.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="941.2" y="357" width="0.2" height="15.0" fill="rgb(209,80,24)" rx="2" ry="2" />
<text  x="944.22" y="367.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="52.3" y="581" width="0.1" height="15.0" fill="rgb(220,0,21)" rx="2" ry="2" />
<text  x="55.26" y="591.5" ></text>
</g>
<g >
<title>Output::DebugStr (1 samples, 0.01%)</title><rect x="587.3" y="517" width="0.2" height="15.0" fill="rgb(211,90,24)" rx="2" ry="2" />
<text  x="590.29" y="527.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="1160.9" y="581" width="0.2" height="15.0" fill="rgb(242,25,1)" rx="2" ry="2" />
<text  x="1163.95" y="591.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="276.6" y="533" width="0.2" height="15.0" fill="rgb(234,215,38)" rx="2" ry="2" />
<text  x="279.61" y="543.5" ></text>
</g>
<g >
<title>prepare_outbound_urb (1 samples, 0.01%)</title><rect x="319.4" y="293" width="0.1" height="15.0" fill="rgb(236,37,46)" rx="2" ry="2" />
<text  x="322.36" y="303.5" ></text>
</g>
<g >
<title>Scene::IsAsyncPending (167 samples, 2.34%)</title><rect x="133.6" y="773" width="27.6" height="15.0" fill="rgb(227,168,19)" rx="2" ry="2" />
<text  x="136.65" y="783.5" >S..</text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="661.9" y="229" width="0.2" height="15.0" fill="rgb(252,218,26)" rx="2" ry="2" />
<text  x="664.91" y="239.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="572.9" y="597" width="0.2" height="15.0" fill="rgb(223,99,43)" rx="2" ry="2" />
<text  x="575.93" y="607.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (5 samples, 0.07%)</title><rect x="983.2" y="677" width="0.8" height="15.0" fill="rgb(232,118,0)" rx="2" ry="2" />
<text  x="986.15" y="687.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandPlaySound (1 samples, 0.01%)</title><rect x="587.3" y="661" width="0.2" height="15.0" fill="rgb(209,78,6)" rx="2" ry="2" />
<text  x="590.29" y="671.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="361.5" y="533" width="0.1" height="15.0" fill="rgb(230,175,8)" rx="2" ry="2" />
<text  x="364.46" y="543.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (24 samples, 0.34%)</title><rect x="700.2" y="597" width="4.0" height="15.0" fill="rgb(214,186,50)" rx="2" ry="2" />
<text  x="703.20" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.01%)</title><rect x="600.3" y="533" width="0.2" height="15.0" fill="rgb(235,70,0)" rx="2" ry="2" />
<text  x="603.33" y="543.5" ></text>
</g>
<g >
<title>AudioDecoder::Update (1 samples, 0.01%)</title><rect x="1172.0" y="709" width="0.2" height="15.0" fill="rgb(243,212,9)" rx="2" ry="2" />
<text  x="1175.01" y="719.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.01%)</title><rect x="925.9" y="421" width="0.1" height="15.0" fill="rgb(207,227,13)" rx="2" ry="2" />
<text  x="928.87" y="431.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.01%)</title><rect x="708.3" y="533" width="0.2" height="15.0" fill="rgb(242,8,25)" rx="2" ry="2" />
<text  x="711.29" y="543.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="290.0" y="485" width="0.1" height="15.0" fill="rgb(234,209,22)" rx="2" ry="2" />
<text  x="292.98" y="495.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.01%)</title><rect x="1162.8" y="629" width="0.1" height="15.0" fill="rgb(234,105,10)" rx="2" ry="2" />
<text  x="1165.76" y="639.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.01%)</title><rect x="239.1" y="421" width="0.2" height="15.0" fill="rgb(220,213,2)" rx="2" ry="2" />
<text  x="242.13" y="431.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.01%)</title><rect x="202.3" y="421" width="0.2" height="15.0" fill="rgb(249,107,48)" rx="2" ry="2" />
<text  x="205.32" y="431.5" ></text>
</g>
<g >
<title>_start (6,376 samples, 89.20%)</title><rect x="133.5" y="869" width="1052.5" height="15.0" fill="rgb(243,112,16)" rx="2" ry="2" />
<text  x="136.48" y="879.5" >_start</text>
</g>
<g >
<title>core_combine_over_u_sse2_no_mask (313 samples, 4.38%)</title><rect x="172.9" y="597" width="51.7" height="15.0" fill="rgb(210,159,3)" rx="2" ry="2" />
<text  x="175.94" y="607.5" >core_..</text>
</g>
<g >
<title>AsyncHandler::RequestFile (1 samples, 0.01%)</title><rect x="987.4" y="597" width="0.2" height="15.0" fill="rgb(208,156,5)" rx="2" ry="2" />
<text  x="990.45" y="607.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="775.5" y="469" width="0.1" height="15.0" fill="rgb(252,169,35)" rx="2" ry="2" />
<text  x="778.48" y="479.5" ></text>
</g>
<g >
<title>prepare_outbound_urb (1 samples, 0.01%)</title><rect x="348.9" y="293" width="0.2" height="15.0" fill="rgb(232,228,50)" rx="2" ry="2" />
<text  x="351.91" y="303.5" ></text>
</g>
<g >
<title>pixman_image_get_width@plt (1 samples, 0.01%)</title><rect x="984.6" y="677" width="0.2" height="15.0" fill="rgb(212,114,3)" rx="2" ry="2" />
<text  x="987.64" y="687.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="276.6" y="421" width="0.2" height="15.0" fill="rgb(247,20,32)" rx="2" ry="2" />
<text  x="279.61" y="431.5" ></text>
</g>
<g >
<title>Bitmap::~Bitmap (128 samples, 1.79%)</title><rect x="669.5" y="469" width="21.1" height="15.0" fill="rgb(223,199,46)" rx="2" ry="2" />
<text  x="672.50" y="479.5" ></text>
</g>
<g >
<title>load_128_unaligned (168 samples, 2.35%)</title><rect x="853.9" y="597" width="27.7" height="15.0" fill="rgb(229,65,30)" rx="2" ry="2" />
<text  x="856.89" y="607.5" >l..</text>
</g>
<g >
<title>is_zero (5 samples, 0.07%)</title><rect x="344.1" y="581" width="0.8" height="15.0" fill="rgb(242,19,50)" rx="2" ry="2" />
<text  x="347.12" y="591.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.01%)</title><rect x="881.5" y="421" width="0.1" height="15.0" fill="rgb(211,142,40)" rx="2" ry="2" />
<text  x="884.46" y="431.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.01%)</title><rect x="45.2" y="709" width="0.1" height="15.0" fill="rgb(233,6,21)" rx="2" ry="2" />
<text  x="48.16" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate@plt (1 samples, 0.01%)</title><rect x="599.5" y="533" width="0.2" height="15.0" fill="rgb(253,167,11)" rx="2" ry="2" />
<text  x="602.50" y="543.5" ></text>
</g>
<g >
<title>xhci_urb_enqueue (1 samples, 0.01%)</title><rect x="782.4" y="389" width="0.2" height="15.0" fill="rgb(214,219,30)" rx="2" ry="2" />
<text  x="785.41" y="399.5" ></text>
</g>
<g >
<title>xhci_get_ep_ctx (1 samples, 0.01%)</title><rect x="941.2" y="309" width="0.2" height="15.0" fill="rgb(246,132,17)" rx="2" ry="2" />
<text  x="944.22" y="319.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="171.8" y="549" width="0.1" height="15.0" fill="rgb(244,196,43)" rx="2" ry="2" />
<text  x="174.78" y="559.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="375.0" y="501" width="0.2" height="15.0" fill="rgb(245,160,26)" rx="2" ry="2" />
<text  x="377.99" y="511.5" ></text>
</g>
<g >
<title>snd_usb_endpoint_next_packet_size.part.8 (1 samples, 0.01%)</title><rect x="319.4" y="245" width="0.1" height="15.0" fill="rgb(209,76,32)" rx="2" ry="2" />
<text  x="322.36" y="255.5" ></text>
</g>
<g >
<title>__exchange_and_add (22 samples, 0.31%)</title><rect x="700.2" y="533" width="3.6" height="15.0" fill="rgb(212,13,53)" rx="2" ry="2" />
<text  x="703.20" y="543.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="941.2" y="405" width="0.2" height="15.0" fill="rgb(208,1,40)" rx="2" ry="2" />
<text  x="944.22" y="415.5" ></text>
</g>
<g >
<title>operator() (1 samples, 0.01%)</title><rect x="986.8" y="693" width="0.2" height="15.0" fill="rgb(244,167,36)" rx="2" ry="2" />
<text  x="989.79" y="703.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="319.7" y="485" width="0.2" height="15.0" fill="rgb(222,5,25)" rx="2" ry="2" />
<text  x="322.69" y="495.5" ></text>
</g>
<g >
<title>handle_irq (3 samples, 0.04%)</title><rect x="888.6" y="565" width="0.5" height="15.0" fill="rgb(230,16,45)" rx="2" ry="2" />
<text  x="891.56" y="575.5" ></text>
</g>
<g >
<title>LINUX_JoystickDetect (1 samples, 0.01%)</title><rect x="987.9" y="677" width="0.2" height="15.0" fill="rgb(206,40,33)" rx="2" ry="2" />
<text  x="990.94" y="687.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="677.4" y="325" width="0.2" height="15.0" fill="rgb(246,163,23)" rx="2" ry="2" />
<text  x="680.42" y="335.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="955.4" y="277" width="0.2" height="15.0" fill="rgb(205,114,18)" rx="2" ry="2" />
<text  x="958.42" y="287.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="319.7" y="389" width="0.2" height="15.0" fill="rgb(238,51,54)" rx="2" ry="2" />
<text  x="322.69" y="399.5" ></text>
</g>
<g >
<title>queue_work_on (1 samples, 0.01%)</title><rect x="587.3" y="181" width="0.2" height="15.0" fill="rgb(231,75,31)" rx="2" ry="2" />
<text  x="590.29" y="191.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="613.9" y="437" width="0.1" height="15.0" fill="rgb(238,121,22)" rx="2" ry="2" />
<text  x="616.87" y="447.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="290.0" y="613" width="0.1" height="15.0" fill="rgb(243,140,54)" rx="2" ry="2" />
<text  x="292.98" y="623.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (45 samples, 0.63%)</title><rect x="617.8" y="517" width="7.5" height="15.0" fill="rgb(213,11,33)" rx="2" ry="2" />
<text  x="620.83" y="527.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="472.7" y="469" width="0.2" height="15.0" fill="rgb(237,173,54)" rx="2" ry="2" />
<text  x="475.72" y="479.5" ></text>
</g>
<g >
<title>_pixman_bits_image_setup_accessors (3 samples, 0.04%)</title><rect x="169.1" y="613" width="0.5" height="15.0" fill="rgb(238,193,25)" rx="2" ry="2" />
<text  x="172.14" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (1 samples, 0.01%)</title><rect x="659.3" y="533" width="0.1" height="15.0" fill="rgb(209,116,3)" rx="2" ry="2" />
<text  x="662.26" y="543.5" ></text>
</g>
<g >
<title>_mm_loadu_si128 (168 samples, 2.35%)</title><rect x="853.9" y="581" width="27.7" height="15.0" fill="rgb(222,41,22)" rx="2" ry="2" />
<text  x="856.89" y="591.5" >_..</text>
</g>
<g >
<title>_pixman_image_fini (97 samples, 1.36%)</title><rect x="674.6" y="421" width="16.0" height="15.0" fill="rgb(253,144,14)" rx="2" ry="2" />
<text  x="677.62" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (3 samples, 0.04%)</title><rect x="614.4" y="549" width="0.5" height="15.0" fill="rgb(237,177,31)" rx="2" ry="2" />
<text  x="617.36" y="559.5" ></text>
</g>
<g >
<title>handle_irq_event (2 samples, 0.03%)</title><rect x="725.6" y="581" width="0.4" height="15.0" fill="rgb(214,198,21)" rx="2" ry="2" />
<text  x="728.63" y="591.5" ></text>
</g>
<g >
<title>XextFindDisplay (1 samples, 0.01%)</title><rect x="82.0" y="853" width="0.1" height="15.0" fill="rgb(251,193,38)" rx="2" ry="2" />
<text  x="84.98" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (21 samples, 0.29%)</title><rect x="596.2" y="565" width="3.5" height="15.0" fill="rgb(211,213,3)" rx="2" ry="2" />
<text  x="599.20" y="575.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.01%)</title><rect x="782.4" y="437" width="0.2" height="15.0" fill="rgb(231,180,32)" rx="2" ry="2" />
<text  x="785.41" y="447.5" ></text>
</g>
<g >
<title>_mm_cvtsi32_si128 (4 samples, 0.06%)</title><rect x="348.3" y="565" width="0.6" height="15.0" fill="rgb(230,228,20)" rx="2" ry="2" />
<text  x="351.25" y="575.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (8 samples, 0.11%)</title><rect x="652.0" y="437" width="1.3" height="15.0" fill="rgb(207,134,37)" rx="2" ry="2" />
<text  x="655.00" y="447.5" ></text>
</g>
<g >
<title>xhci_urb_enqueue (1 samples, 0.01%)</title><rect x="888.9" y="309" width="0.2" height="15.0" fill="rgb(217,152,26)" rx="2" ry="2" />
<text  x="891.89" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="87.6" y="837" width="0.3" height="15.0" fill="rgb(223,157,2)" rx="2" ry="2" />
<text  x="90.59" y="847.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (5 samples, 0.07%)</title><rect x="353.7" y="661" width="0.8" height="15.0" fill="rgb(224,19,28)" rx="2" ry="2" />
<text  x="356.70" y="671.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="319.7" y="565" width="0.2" height="15.0" fill="rgb(245,105,25)" rx="2" ry="2" />
<text  x="322.69" y="575.5" ></text>
</g>
<g >
<title>_M_lower_bound (115 samples, 1.61%)</title><rect x="631.4" y="485" width="18.9" height="15.0" fill="rgb(252,6,18)" rx="2" ry="2" />
<text  x="634.37" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (266 samples, 3.72%)</title><rect x="899.3" y="565" width="43.9" height="15.0" fill="rgb(240,88,54)" rx="2" ry="2" />
<text  x="902.29" y="575.5" >std:..</text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::CommonEvent&gt; (1 samples, 0.01%)</title><rect x="775.3" y="677" width="0.2" height="15.0" fill="rgb(225,153,8)" rx="2" ry="2" />
<text  x="778.32" y="687.5" ></text>
</g>
<g >
<title>native_write_msr (12 samples, 0.17%)</title><rect x="991.1" y="453" width="2.0" height="15.0" fill="rgb(245,97,33)" rx="2" ry="2" />
<text  x="994.08" y="463.5" ></text>
</g>
<g >
<title>usb_get_current_frame_number (1 samples, 0.01%)</title><rect x="348.9" y="261" width="0.2" height="15.0" fill="rgb(229,144,7)" rx="2" ry="2" />
<text  x="351.91" y="271.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="955.4" y="325" width="0.2" height="15.0" fill="rgb(206,97,45)" rx="2" ry="2" />
<text  x="958.42" y="335.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="995.9" y="405" width="0.1" height="15.0" fill="rgb(220,49,49)" rx="2" ry="2" />
<text  x="998.86" y="415.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.01%)</title><rect x="375.7" y="565" width="0.1" height="15.0" fill="rgb(208,104,10)" rx="2" ry="2" />
<text  x="378.65" y="575.5" ></text>
</g>
<g >
<title>record_times (1 samples, 0.01%)</title><rect x="32.9" y="693" width="0.2" height="15.0" fill="rgb(254,160,33)" rx="2" ry="2" />
<text  x="35.95" y="703.5" ></text>
</g>
<g >
<title>Sprite::SetZoomX (1 samples, 0.01%)</title><rect x="73.4" y="853" width="0.2" height="15.0" fill="rgb(235,63,51)" rx="2" ry="2" />
<text  x="76.39" y="863.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="753.2" y="565" width="0.2" height="15.0" fill="rgb(245,12,23)" rx="2" ry="2" />
<text  x="756.20" y="575.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.01%)</title><rect x="48.3" y="757" width="0.2" height="15.0" fill="rgb(223,200,2)" rx="2" ry="2" />
<text  x="51.30" y="767.5" ></text>
</g>
<g >
<title>Utils::DecodeUTF32 (3 samples, 0.04%)</title><rect x="706.3" y="629" width="0.5" height="15.0" fill="rgb(236,171,25)" rx="2" ry="2" />
<text  x="709.31" y="639.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="835.1" y="565" width="0.1" height="15.0" fill="rgb(225,32,6)" rx="2" ry="2" />
<text  x="838.08" y="575.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="932.0" y="357" width="0.1" height="15.0" fill="rgb(254,113,46)" rx="2" ry="2" />
<text  x="934.98" y="367.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="239.1" y="549" width="0.2" height="15.0" fill="rgb(246,97,52)" rx="2" ry="2" />
<text  x="242.13" y="559.5" ></text>
</g>
<g >
<title>__atomic_add (1 samples, 0.01%)</title><rect x="987.1" y="485" width="0.2" height="15.0" fill="rgb(214,148,14)" rx="2" ry="2" />
<text  x="990.12" y="495.5" ></text>
</g>
<g >
<title>Player::Update (6,127 samples, 85.72%)</title><rect x="161.4" y="757" width="1011.4" height="15.0" fill="rgb(223,156,48)" rx="2" ry="2" />
<text  x="164.38" y="767.5" >Player::Update</text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (1 samples, 0.01%)</title><rect x="696.9" y="565" width="0.2" height="15.0" fill="rgb(252,156,22)" rx="2" ry="2" />
<text  x="699.90" y="575.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="272.3" y="549" width="0.2" height="15.0" fill="rgb(223,177,41)" rx="2" ry="2" />
<text  x="275.31" y="559.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (2 samples, 0.03%)</title><rect x="610.4" y="517" width="0.3" height="15.0" fill="rgb(241,176,19)" rx="2" ry="2" />
<text  x="613.40" y="527.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="467.8" y="597" width="0.1" height="15.0" fill="rgb(250,13,47)" rx="2" ry="2" />
<text  x="470.77" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.10%)</title><rect x="1188.0" y="869" width="1.2" height="15.0" fill="rgb(218,11,4)" rx="2" ry="2" />
<text  x="1191.02" y="879.5" ></text>
</g>
<g >
<title>do_sys_poll (110 samples, 1.54%)</title><rect x="28.7" y="821" width="18.1" height="15.0" fill="rgb(215,112,11)" rx="2" ry="2" />
<text  x="31.65" y="831.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::~_Head_base (7 samples, 0.10%)</title><rect x="658.1" y="469" width="1.2" height="15.0" fill="rgb(232,200,51)" rx="2" ry="2" />
<text  x="661.11" y="479.5" ></text>
</g>
<g >
<title>GetRequest (1 samples, 0.01%)</title><rect x="987.4" y="581" width="0.2" height="15.0" fill="rgb(234,75,4)" rx="2" ry="2" />
<text  x="990.45" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char32_t&gt; &gt;::deallocate (1 samples, 0.01%)</title><rect x="707.5" y="581" width="0.1" height="15.0" fill="rgb(242,216,34)" rx="2" ry="2" />
<text  x="710.47" y="591.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="361.5" y="549" width="0.1" height="15.0" fill="rgb(240,21,40)" rx="2" ry="2" />
<text  x="364.46" y="559.5" ></text>
</g>
<g >
<title>std::stable_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, bool (*)(Drawable const*, Drawable const*)&gt; (31 samples, 0.43%)</title><rect x="368.2" y="709" width="5.1" height="15.0" fill="rgb(219,7,24)" rx="2" ry="2" />
<text  x="371.23" y="719.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="404.9" y="565" width="0.1" height="15.0" fill="rgb(217,61,5)" rx="2" ry="2" />
<text  x="407.87" y="575.5" ></text>
</g>
<g >
<title>Player::IsRPG2k (1 samples, 0.01%)</title><rect x="58.7" y="853" width="0.2" height="15.0" fill="rgb(212,136,10)" rx="2" ry="2" />
<text  x="61.70" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (4 samples, 0.06%)</title><rect x="630.4" y="517" width="0.6" height="15.0" fill="rgb(243,12,44)" rx="2" ry="2" />
<text  x="633.37" y="527.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (115 samples, 1.61%)</title><rect x="631.4" y="469" width="18.9" height="15.0" fill="rgb(223,28,36)" rx="2" ry="2" />
<text  x="634.37" y="479.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.01%)</title><rect x="132.8" y="853" width="0.2" height="15.0" fill="rgb(233,169,27)" rx="2" ry="2" />
<text  x="135.82" y="863.5" ></text>
</g>
<g >
<title>LoadBitmap (1 samples, 0.01%)</title><rect x="987.1" y="581" width="0.2" height="15.0" fill="rgb(209,223,54)" rx="2" ry="2" />
<text  x="990.12" y="591.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="361.5" y="501" width="0.1" height="15.0" fill="rgb(221,162,11)" rx="2" ry="2" />
<text  x="364.46" y="511.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="689.8" y="341" width="0.2" height="15.0" fill="rgb(212,205,13)" rx="2" ry="2" />
<text  x="692.80" y="351.5" ></text>
</g>
<g >
<title>color_to_float (4 samples, 0.06%)</title><rect x="349.7" y="613" width="0.7" height="15.0" fill="rgb(243,151,49)" rx="2" ry="2" />
<text  x="352.74" y="623.5" ></text>
</g>
<g >
<title>glXSwapBuffers (2 samples, 0.03%)</title><rect x="1172.5" y="725" width="0.3" height="15.0" fill="rgb(236,114,35)" rx="2" ry="2" />
<text  x="1175.50" y="735.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1 samples, 0.01%)</title><rect x="47.8" y="741" width="0.2" height="15.0" fill="rgb(237,153,35)" rx="2" ry="2" />
<text  x="50.80" y="751.5" ></text>
</g>
<g >
<title>do_IRQ (5 samples, 0.07%)</title><rect x="121.4" y="837" width="0.9" height="15.0" fill="rgb(239,55,2)" rx="2" ry="2" />
<text  x="124.43" y="847.5" ></text>
</g>
<g >
<title>__queue_work (1 samples, 0.01%)</title><rect x="881.5" y="453" width="0.1" height="15.0" fill="rgb(216,149,0)" rx="2" ry="2" />
<text  x="884.46" y="463.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="941.2" y="373" width="0.2" height="15.0" fill="rgb(254,222,42)" rx="2" ry="2" />
<text  x="944.22" y="383.5" ></text>
</g>
<g >
<title>_pixman_image_allocate (1 samples, 0.01%)</title><rect x="128.2" y="853" width="0.2" height="15.0" fill="rgb(222,72,44)" rx="2" ry="2" />
<text  x="131.20" y="863.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.01%)</title><rect x="76.7" y="853" width="0.2" height="15.0" fill="rgb(212,150,31)" rx="2" ry="2" />
<text  x="79.69" y="863.5" ></text>
</g>
<g >
<title>any_of&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int&gt; &gt;, Input::UiSource::Update()::&lt;lambda(int)&gt; &gt; (2 samples, 0.03%)</title><rect x="373.8" y="709" width="0.4" height="15.0" fill="rgb(249,228,0)" rx="2" ry="2" />
<text  x="376.84" y="719.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="883.4" y="453" width="0.2" height="15.0" fill="rgb(211,187,19)" rx="2" ry="2" />
<text  x="886.44" y="463.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.01%)</title><rect x="725.8" y="405" width="0.2" height="15.0" fill="rgb(228,98,23)" rx="2" ry="2" />
<text  x="728.79" y="415.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="348.9" y="341" width="0.2" height="15.0" fill="rgb(227,5,29)" rx="2" ry="2" />
<text  x="351.91" y="351.5" ></text>
</g>
<g >
<title>xhci_irq (2 samples, 0.03%)</title><rect x="955.3" y="357" width="0.3" height="15.0" fill="rgb(239,18,50)" rx="2" ry="2" />
<text  x="958.25" y="367.5" ></text>
</g>
<g >
<title>AsyncHandler::IsImportantFilePending (165 samples, 2.31%)</title><rect x="133.8" y="757" width="27.2" height="15.0" fill="rgb(209,104,52)" rx="2" ry="2" />
<text  x="136.81" y="767.5" >A..</text>
</g>
<g >
<title>handle_irq (2 samples, 0.03%)</title><rect x="319.2" y="517" width="0.3" height="15.0" fill="rgb(220,36,47)" rx="2" ry="2" />
<text  x="322.20" y="527.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6 samples, 0.08%)</title><rect x="650.7" y="373" width="1.0" height="15.0" fill="rgb(249,163,19)" rx="2" ry="2" />
<text  x="653.68" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.01%)</title><rect x="26.3" y="853" width="0.2" height="15.0" fill="rgb(211,195,46)" rx="2" ry="2" />
<text  x="29.34" y="863.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.01%)</title><rect x="48.6" y="773" width="0.2" height="15.0" fill="rgb(211,211,33)" rx="2" ry="2" />
<text  x="51.63" y="783.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="319.4" y="341" width="0.1" height="15.0" fill="rgb(254,114,43)" rx="2" ry="2" />
<text  x="322.36" y="351.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="967.5" y="549" width="0.1" height="15.0" fill="rgb(210,190,29)" rx="2" ry="2" />
<text  x="970.47" y="559.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (1 samples, 0.01%)</title><rect x="708.6" y="597" width="0.2" height="15.0" fill="rgb(227,7,16)" rx="2" ry="2" />
<text  x="711.62" y="607.5" ></text>
</g>
<g >
<title>sse2_combine_over_u (313 samples, 4.38%)</title><rect x="172.9" y="613" width="51.7" height="15.0" fill="rgb(243,6,24)" rx="2" ry="2" />
<text  x="175.94" y="623.5" >sse2_..</text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="472.7" y="629" width="0.4" height="15.0" fill="rgb(244,48,39)" rx="2" ry="2" />
<text  x="475.72" y="639.5" ></text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt;, 36ul&gt; (6 samples, 0.08%)</title><rect x="374.2" y="725" width="1.0" height="15.0" fill="rgb(230,109,24)" rx="2" ry="2" />
<text  x="377.17" y="735.5" ></text>
</g>
<g >
<title>pix_multiply_2x128 (43 samples, 0.60%)</title><rect x="249.0" y="597" width="7.1" height="15.0" fill="rgb(209,59,53)" rx="2" ry="2" />
<text  x="252.04" y="607.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="319.7" y="581" width="0.2" height="15.0" fill="rgb(220,147,24)" rx="2" ry="2" />
<text  x="322.69" y="591.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (1 samples, 0.01%)</title><rect x="631.0" y="533" width="0.2" height="15.0" fill="rgb(218,170,35)" rx="2" ry="2" />
<text  x="634.04" y="543.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="272.3" y="565" width="0.2" height="15.0" fill="rgb(248,54,29)" rx="2" ry="2" />
<text  x="275.31" y="575.5" ></text>
</g>
<g >
<title>hrtimer_active (1 samples, 0.01%)</title><rect x="375.3" y="613" width="0.2" height="15.0" fill="rgb(250,173,10)" rx="2" ry="2" />
<text  x="378.32" y="623.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="677.4" y="373" width="0.2" height="15.0" fill="rgb(214,12,6)" rx="2" ry="2" />
<text  x="680.42" y="383.5" ></text>
</g>
<g >
<title>security_file_permission (1 samples, 0.01%)</title><rect x="50.9" y="773" width="0.2" height="15.0" fill="rgb(236,22,41)" rx="2" ry="2" />
<text  x="53.94" y="783.5" ></text>
</g>
<g >
<title>psi_task_change (3 samples, 0.04%)</title><rect x="50.1" y="645" width="0.5" height="15.0" fill="rgb(228,144,49)" rx="2" ry="2" />
<text  x="53.11" y="655.5" ></text>
</g>
<g >
<title>set_user_sigmask (1 samples, 0.01%)</title><rect x="51.3" y="837" width="0.1" height="15.0" fill="rgb(206,117,2)" rx="2" ry="2" />
<text  x="54.27" y="847.5" ></text>
</g>
<g >
<title>Bitmap::GetHeight (3 samples, 0.04%)</title><rect x="956.1" y="677" width="0.5" height="15.0" fill="rgb(232,176,12)" rx="2" ry="2" />
<text  x="959.08" y="687.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="348.9" y="485" width="0.2" height="15.0" fill="rgb(213,52,47)" rx="2" ry="2" />
<text  x="351.91" y="495.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (9 samples, 0.13%)</title><rect x="994.7" y="613" width="1.5" height="15.0" fill="rgb(238,88,36)" rx="2" ry="2" />
<text  x="997.71" y="623.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="379.5" y="597" width="0.1" height="15.0" fill="rgb(249,90,31)" rx="2" ry="2" />
<text  x="382.45" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.06%)</title><rect x="1188.5" y="853" width="0.7" height="15.0" fill="rgb(228,198,27)" rx="2" ry="2" />
<text  x="1191.51" y="863.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="582.2" y="597" width="0.1" height="15.0" fill="rgb(242,170,43)" rx="2" ry="2" />
<text  x="585.17" y="607.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="121.8" y="677" width="0.1" height="15.0" fill="rgb(253,100,43)" rx="2" ry="2" />
<text  x="124.76" y="687.5" ></text>
</g>
<g >
<title>_mm_shufflehi_epi16 (1 samples, 0.01%)</title><rect x="327.6" y="549" width="0.2" height="15.0" fill="rgb(244,216,22)" rx="2" ry="2" />
<text  x="330.62" y="559.5" ></text>
</g>
<g >
<title>handle_tx_event (3 samples, 0.04%)</title><rect x="1162.3" y="501" width="0.5" height="15.0" fill="rgb(253,9,20)" rx="2" ry="2" />
<text  x="1165.27" y="511.5" ></text>
</g>
<g >
<title>handle_irq (5 samples, 0.07%)</title><rect x="570.6" y="613" width="0.8" height="15.0" fill="rgb(210,104,36)" rx="2" ry="2" />
<text  x="573.62" y="623.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (2 samples, 0.03%)</title><rect x="58.2" y="853" width="0.3" height="15.0" fill="rgb(245,10,13)" rx="2" ry="2" />
<text  x="61.20" y="863.5" ></text>
</g>
<g >
<title>ksys_read (8 samples, 0.11%)</title><rect x="47.1" y="821" width="1.4" height="15.0" fill="rgb(238,164,0)" rx="2" ry="2" />
<text  x="50.14" y="831.5" ></text>
</g>
<g >
<title>run_rebalance_domains (2 samples, 0.03%)</title><rect x="379.3" y="629" width="0.3" height="15.0" fill="rgb(238,189,10)" rx="2" ry="2" />
<text  x="382.29" y="639.5" ></text>
</g>
<g >
<title>pix_multiply_1x128 (1 samples, 0.01%)</title><rect x="828.1" y="565" width="0.2" height="15.0" fill="rgb(246,199,30)" rx="2" ry="2" />
<text  x="831.14" y="575.5" ></text>
</g>
<g >
<title>calloc@plt (1 samples, 0.01%)</title><rect x="934.8" y="453" width="0.1" height="15.0" fill="rgb(217,110,47)" rx="2" ry="2" />
<text  x="937.78" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="782.2" y="613" width="0.2" height="15.0" fill="rgb(234,99,36)" rx="2" ry="2" />
<text  x="785.25" y="623.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (2 samples, 0.03%)</title><rect x="155.9" y="613" width="0.4" height="15.0" fill="rgb(254,131,34)" rx="2" ry="2" />
<text  x="158.93" y="623.5" ></text>
</g>
<g >
<title>inc_enq (1 samples, 0.01%)</title><rect x="782.4" y="357" width="0.2" height="15.0" fill="rgb(208,146,16)" rx="2" ry="2" />
<text  x="785.41" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.01%)</title><rect x="132.7" y="853" width="0.1" height="15.0" fill="rgb(235,23,52)" rx="2" ry="2" />
<text  x="135.66" y="863.5" ></text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.01%)</title><rect x="708.8" y="629" width="0.2" height="15.0" fill="rgb(252,164,23)" rx="2" ry="2" />
<text  x="711.79" y="639.5" ></text>
</g>
<g >
<title>SDL_PumpEvents_REAL (12 samples, 0.17%)</title><rect x="987.9" y="709" width="2.0" height="15.0" fill="rgb(217,142,37)" rx="2" ry="2" />
<text  x="990.94" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.01%)</title><rect x="712.1" y="597" width="0.2" height="15.0" fill="rgb(250,30,26)" rx="2" ry="2" />
<text  x="715.09" y="607.5" ></text>
</g>
<g >
<title>pixman_transform_point_31_16_3d (3 samples, 0.04%)</title><rect x="331.9" y="581" width="0.5" height="15.0" fill="rgb(219,143,1)" rx="2" ry="2" />
<text  x="334.91" y="591.5" ></text>
</g>
<g >
<title>[libGLX.so.0.0.0] (1 samples, 0.01%)</title><rect x="79.8" y="869" width="0.2" height="15.0" fill="rgb(207,187,7)" rx="2" ry="2" />
<text  x="82.83" y="879.5" ></text>
</g>
<g >
<title>sse2_composite_over_8888_8888 (1 samples, 0.01%)</title><rect x="132.3" y="853" width="0.2" height="15.0" fill="rgb(235,207,14)" rx="2" ry="2" />
<text  x="135.33" y="863.5" ></text>
</g>
<g >
<title>interrupt_entry (1 samples, 0.01%)</title><rect x="612.1" y="421" width="0.1" height="15.0" fill="rgb(225,30,10)" rx="2" ry="2" />
<text  x="615.05" y="431.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (5 samples, 0.07%)</title><rect x="84.6" y="725" width="0.8" height="15.0" fill="rgb(218,55,44)" rx="2" ry="2" />
<text  x="87.62" y="735.5" ></text>
</g>
<g >
<title>SDL_GetTicks_REAL (1 samples, 0.01%)</title><rect x="161.0" y="741" width="0.2" height="15.0" fill="rgb(214,50,24)" rx="2" ry="2" />
<text  x="164.05" y="751.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="699.5" y="581" width="0.4" height="15.0" fill="rgb(239,219,42)" rx="2" ry="2" />
<text  x="702.54" y="591.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.01%)</title><rect x="711.4" y="565" width="0.2" height="15.0" fill="rgb(223,74,23)" rx="2" ry="2" />
<text  x="714.43" y="575.5" ></text>
</g>
<g >
<title>_pixman_compute_composite_region32 (4 samples, 0.06%)</title><rect x="127.5" y="853" width="0.7" height="15.0" fill="rgb(225,29,7)" rx="2" ry="2" />
<text  x="130.54" y="863.5" ></text>
</g>
<g >
<title>SDL_PumpEvents_REAL (17 samples, 0.24%)</title><rect x="993.4" y="693" width="2.8" height="15.0" fill="rgb(242,111,41)" rx="2" ry="2" />
<text  x="996.39" y="703.5" ></text>
</g>
<g >
<title>___sys_recvmsg (6 samples, 0.08%)</title><rect x="994.9" y="453" width="1.0" height="15.0" fill="rgb(215,144,54)" rx="2" ry="2" />
<text  x="997.87" y="463.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="956.4" y="565" width="0.2" height="15.0" fill="rgb(243,84,46)" rx="2" ry="2" />
<text  x="959.41" y="575.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (10 samples, 0.14%)</title><rect x="625.4" y="469" width="1.7" height="15.0" fill="rgb(205,108,8)" rx="2" ry="2" />
<text  x="628.42" y="479.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (6 samples, 0.08%)</title><rect x="352.7" y="661" width="1.0" height="15.0" fill="rgb(228,124,49)" rx="2" ry="2" />
<text  x="355.71" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (5 samples, 0.07%)</title><rect x="662.6" y="517" width="0.8" height="15.0" fill="rgb(250,155,41)" rx="2" ry="2" />
<text  x="665.57" y="527.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="264.4" y="549" width="0.2" height="15.0" fill="rgb(247,80,42)" rx="2" ry="2" />
<text  x="267.39" y="559.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="1171.7" y="421" width="0.1" height="15.0" fill="rgb(224,177,9)" rx="2" ry="2" />
<text  x="1174.68" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (6 samples, 0.08%)</title><rect x="661.1" y="453" width="1.0" height="15.0" fill="rgb(217,43,4)" rx="2" ry="2" />
<text  x="664.08" y="463.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.01%)</title><rect x="987.9" y="533" width="0.2" height="15.0" fill="rgb(236,161,11)" rx="2" ry="2" />
<text  x="990.94" y="543.5" ></text>
</g>
<g >
<title>Spriteset_Map::Update (3 samples, 0.04%)</title><rect x="985.8" y="709" width="0.5" height="15.0" fill="rgb(251,188,43)" rx="2" ry="2" />
<text  x="988.79" y="719.5" ></text>
</g>
<g >
<title>_mm_mulhi_epu16 (7 samples, 0.10%)</title><rect x="886.4" y="565" width="1.2" height="15.0" fill="rgb(230,175,1)" rx="2" ry="2" />
<text  x="889.42" y="575.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="940.7" y="341" width="0.2" height="15.0" fill="rgb(213,223,46)" rx="2" ry="2" />
<text  x="943.73" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (11 samples, 0.15%)</title><rect x="627.1" y="469" width="1.8" height="15.0" fill="rgb(232,49,14)" rx="2" ry="2" />
<text  x="630.07" y="479.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (2 samples, 0.03%)</title><rect x="599.8" y="453" width="0.4" height="15.0" fill="rgb(231,72,28)" rx="2" ry="2" />
<text  x="602.83" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::size (19 samples, 0.27%)</title><rect x="769.2" y="661" width="3.1" height="15.0" fill="rgb(215,72,15)" rx="2" ry="2" />
<text  x="772.21" y="671.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="955.4" y="309" width="0.2" height="15.0" fill="rgb(225,56,1)" rx="2" ry="2" />
<text  x="958.42" y="319.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="605.8" y="405" width="0.1" height="15.0" fill="rgb(237,60,28)" rx="2" ry="2" />
<text  x="608.78" y="415.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandEndLoop (10 samples, 0.14%)</title><rect x="571.4" y="661" width="1.7" height="15.0" fill="rgb(230,202,37)" rx="2" ry="2" />
<text  x="574.44" y="671.5" ></text>
</g>
<g >
<title>LoadBitmap (169 samples, 2.36%)</title><rect x="631.4" y="533" width="27.9" height="15.0" fill="rgb(211,90,47)" rx="2" ry="2" />
<text  x="634.37" y="543.5" >L..</text>
</g>
<g >
<title>negate_2x128 (1 samples, 0.01%)</title><rect x="343.1" y="549" width="0.2" height="15.0" fill="rgb(235,2,25)" rx="2" ry="2" />
<text  x="346.13" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.01%)</title><rect x="618.2" y="469" width="0.1" height="15.0" fill="rgb(221,204,7)" rx="2" ry="2" />
<text  x="621.16" y="479.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="849.1" y="533" width="0.3" height="15.0" fill="rgb(247,165,5)" rx="2" ry="2" />
<text  x="852.11" y="543.5" ></text>
</g>
<g >
<title>Game_Map::GetNeedRefresh (12 samples, 0.17%)</title><rect x="53.4" y="853" width="2.0" height="15.0" fill="rgb(225,19,42)" rx="2" ry="2" />
<text  x="56.42" y="863.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.01%)</title><rect x="987.4" y="549" width="0.2" height="15.0" fill="rgb(227,69,23)" rx="2" ry="2" />
<text  x="990.45" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (1 samples, 0.01%)</title><rect x="467.6" y="613" width="0.2" height="15.0" fill="rgb(248,197,43)" rx="2" ry="2" />
<text  x="470.60" y="623.5" ></text>
</g>
<g >
<title>memcmp@plt (3 samples, 0.04%)</title><rect x="649.9" y="373" width="0.4" height="15.0" fill="rgb(245,22,4)" rx="2" ry="2" />
<text  x="652.85" y="383.5" ></text>
</g>
<g >
<title>__fdget_pos (1 samples, 0.01%)</title><rect x="47.1" y="805" width="0.2" height="15.0" fill="rgb(247,136,22)" rx="2" ry="2" />
<text  x="50.14" y="815.5" ></text>
</g>
<g >
<title>unpack_128_2x128 (33 samples, 0.46%)</title><rect x="892.4" y="597" width="5.4" height="15.0" fill="rgb(235,9,52)" rx="2" ry="2" />
<text  x="895.36" y="607.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="276.6" y="501" width="0.2" height="15.0" fill="rgb(244,129,42)" rx="2" ry="2" />
<text  x="279.61" y="511.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandControlVariables (3 samples, 0.04%)</title><rect x="412.6" y="677" width="0.5" height="15.0" fill="rgb(211,40,52)" rx="2" ry="2" />
<text  x="415.63" y="687.5" ></text>
</g>
<g >
<title>Game_Switches_Class::Get (5 samples, 0.07%)</title><rect x="773.2" y="677" width="0.8" height="15.0" fill="rgb(244,66,0)" rx="2" ry="2" />
<text  x="776.17" y="687.5" ></text>
</g>
<g >
<title>xhci_urb_enqueue (1 samples, 0.01%)</title><rect x="614.2" y="309" width="0.2" height="15.0" fill="rgb(234,44,9)" rx="2" ry="2" />
<text  x="617.20" y="319.5" ></text>
</g>
<g >
<title>Bitmap::BlitFast (1 samples, 0.01%)</title><rect x="364.3" y="677" width="0.1" height="15.0" fill="rgb(217,163,51)" rx="2" ry="2" />
<text  x="367.26" y="687.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="768.4" y="597" width="0.1" height="15.0" fill="rgb(253,56,18)" rx="2" ry="2" />
<text  x="771.38" y="607.5" ></text>
</g>
<g >
<title>Sprite::SetZ (2 samples, 0.03%)</title><rect x="970.4" y="677" width="0.4" height="15.0" fill="rgb(241,204,13)" rx="2" ry="2" />
<text  x="973.44" y="687.5" ></text>
</g>
<g >
<title>_mm_adds_epu16 (12 samples, 0.17%)</title><rect x="281.1" y="581" width="1.9" height="15.0" fill="rgb(220,123,34)" rx="2" ry="2" />
<text  x="284.06" y="591.5" ></text>
</g>
<g >
<title>__sched_text_start (12 samples, 0.17%)</title><rect x="375.7" y="613" width="1.9" height="15.0" fill="rgb(225,135,17)" rx="2" ry="2" />
<text  x="378.65" y="623.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="267.2" y="549" width="0.2" height="15.0" fill="rgb(241,121,52)" rx="2" ry="2" />
<text  x="270.20" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (3 samples, 0.04%)</title><rect x="614.4" y="597" width="0.5" height="15.0" fill="rgb(252,144,0)" rx="2" ry="2" />
<text  x="617.36" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (5 samples, 0.07%)</title><rect x="599.7" y="565" width="0.8" height="15.0" fill="rgb(209,140,18)" rx="2" ry="2" />
<text  x="602.67" y="575.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.01%)</title><rect x="539.4" y="389" width="0.2" height="15.0" fill="rgb(219,117,43)" rx="2" ry="2" />
<text  x="542.42" y="399.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="614.2" y="517" width="0.2" height="15.0" fill="rgb(226,56,1)" rx="2" ry="2" />
<text  x="617.20" y="527.5" ></text>
</g>
<g >
<title>default_wake_function (8 samples, 0.11%)</title><rect x="49.3" y="709" width="1.3" height="15.0" fill="rgb(243,221,25)" rx="2" ry="2" />
<text  x="52.29" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (2 samples, 0.03%)</title><rect x="610.4" y="485" width="0.3" height="15.0" fill="rgb(206,208,31)" rx="2" ry="2" />
<text  x="613.40" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**&gt; (3 samples, 0.04%)</title><rect x="368.6" y="629" width="0.5" height="15.0" fill="rgb(208,225,49)" rx="2" ry="2" />
<text  x="371.56" y="639.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (7 samples, 0.10%)</title><rect x="996.4" y="693" width="1.1" height="15.0" fill="rgb(225,38,7)" rx="2" ry="2" />
<text  x="999.36" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (2 samples, 0.03%)</title><rect x="77.4" y="853" width="0.3" height="15.0" fill="rgb(242,5,8)" rx="2" ry="2" />
<text  x="80.35" y="863.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="881.5" y="533" width="0.1" height="15.0" fill="rgb(224,169,4)" rx="2" ry="2" />
<text  x="884.46" y="543.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (9 samples, 0.13%)</title><rect x="359.3" y="661" width="1.5" height="15.0" fill="rgb(241,5,51)" rx="2" ry="2" />
<text  x="362.31" y="671.5" ></text>
</g>
<g >
<title>is_zero (1 samples, 0.01%)</title><rect x="328.3" y="565" width="0.1" height="15.0" fill="rgb(232,69,39)" rx="2" ry="2" />
<text  x="331.28" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="993.6" y="549" width="0.1" height="15.0" fill="rgb(230,17,28)" rx="2" ry="2" />
<text  x="996.55" y="559.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.01%)</title><rect x="994.5" y="597" width="0.2" height="15.0" fill="rgb(222,133,7)" rx="2" ry="2" />
<text  x="997.54" y="607.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="348.9" y="533" width="0.2" height="15.0" fill="rgb(230,15,31)" rx="2" ry="2" />
<text  x="351.91" y="543.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="941.2" y="341" width="0.2" height="15.0" fill="rgb(208,144,53)" rx="2" ry="2" />
<text  x="944.22" y="351.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="709.0" y="565" width="0.1" height="15.0" fill="rgb(214,148,5)" rx="2" ry="2" />
<text  x="711.95" y="575.5" ></text>
</g>
<g >
<title>finish_task_switch (7 samples, 0.10%)</title><rect x="849.9" y="485" width="1.2" height="15.0" fill="rgb(243,119,36)" rx="2" ry="2" />
<text  x="852.93" y="495.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="940.7" y="357" width="0.2" height="15.0" fill="rgb(211,146,36)" rx="2" ry="2" />
<text  x="943.73" y="367.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.03%)</title><rect x="628.2" y="357" width="0.4" height="15.0" fill="rgb(213,22,45)" rx="2" ry="2" />
<text  x="631.23" y="367.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.01%)</title><rect x="613.9" y="405" width="0.1" height="15.0" fill="rgb(243,8,16)" rx="2" ry="2" />
<text  x="616.87" y="415.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (9 samples, 0.13%)</title><rect x="628.9" y="421" width="1.5" height="15.0" fill="rgb(222,33,44)" rx="2" ry="2" />
<text  x="631.89" y="431.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="202.3" y="437" width="0.2" height="15.0" fill="rgb(252,188,23)" rx="2" ry="2" />
<text  x="205.32" y="447.5" ></text>
</g>
<g >
<title>_mm_shufflelo_epi16 (1 samples, 0.01%)</title><rect x="341.8" y="565" width="0.2" height="15.0" fill="rgb(226,21,43)" rx="2" ry="2" />
<text  x="344.81" y="575.5" ></text>
</g>
<g >
<title>update_min_vruntime (1 samples, 0.01%)</title><rect x="86.9" y="709" width="0.2" height="15.0" fill="rgb(234,21,53)" rx="2" ry="2" />
<text  x="89.93" y="719.5" ></text>
</g>
<g >
<title>put_timespec64 (1 samples, 0.01%)</title><rect x="404.7" y="661" width="0.2" height="15.0" fill="rgb(254,184,22)" rx="2" ry="2" />
<text  x="407.71" y="671.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="404.9" y="517" width="0.1" height="15.0" fill="rgb(233,112,18)" rx="2" ry="2" />
<text  x="407.87" y="527.5" ></text>
</g>
<g >
<title>xhci_irq (5 samples, 0.07%)</title><rect x="570.6" y="517" width="0.8" height="15.0" fill="rgb(236,210,51)" rx="2" ry="2" />
<text  x="573.62" y="527.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.01%)</title><rect x="30.3" y="805" width="0.2" height="15.0" fill="rgb(212,50,6)" rx="2" ry="2" />
<text  x="33.30" y="815.5" ></text>
</g>
<g >
<title>_mm_xor_si128 (1 samples, 0.01%)</title><rect x="343.1" y="533" width="0.2" height="15.0" fill="rgb(214,37,14)" rx="2" ry="2" />
<text  x="346.13" y="543.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (1 samples, 0.01%)</title><rect x="73.9" y="853" width="0.2" height="15.0" fill="rgb(227,90,16)" rx="2" ry="2" />
<text  x="76.89" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (5 samples, 0.07%)</title><rect x="654.3" y="469" width="0.8" height="15.0" fill="rgb(206,94,51)" rx="2" ry="2" />
<text  x="657.31" y="479.5" ></text>
</g>
<g >
<title>handle_tx_event (2 samples, 0.03%)</title><rect x="539.3" y="485" width="0.3" height="15.0" fill="rgb(232,123,40)" rx="2" ry="2" />
<text  x="542.25" y="495.5" ></text>
</g>
<g >
<title>handle_edge_irq (2 samples, 0.03%)</title><rect x="255.8" y="517" width="0.3" height="15.0" fill="rgb(217,56,7)" rx="2" ry="2" />
<text  x="258.81" y="527.5" ></text>
</g>
<g >
<title>std::bitset&lt;32ul&gt;::reference::operator= (1 samples, 0.01%)</title><rect x="581.7" y="629" width="0.1" height="15.0" fill="rgb(244,185,41)" rx="2" ry="2" />
<text  x="584.68" y="639.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="379.3" y="677" width="0.3" height="15.0" fill="rgb(242,111,45)" rx="2" ry="2" />
<text  x="382.29" y="687.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="539.4" y="405" width="0.2" height="15.0" fill="rgb(235,148,29)" rx="2" ry="2" />
<text  x="542.42" y="415.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="171.8" y="517" width="0.1" height="15.0" fill="rgb(241,113,23)" rx="2" ry="2" />
<text  x="174.78" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (3 samples, 0.04%)</title><rect x="614.4" y="581" width="0.5" height="15.0" fill="rgb(207,32,42)" rx="2" ry="2" />
<text  x="617.36" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (9 samples, 0.13%)</title><rect x="941.7" y="469" width="1.5" height="15.0" fill="rgb(242,118,49)" rx="2" ry="2" />
<text  x="944.72" y="479.5" ></text>
</g>
<g >
<title>xhci_urb_enqueue (2 samples, 0.03%)</title><rect x="1162.4" y="357" width="0.4" height="15.0" fill="rgb(214,111,53)" rx="2" ry="2" />
<text  x="1165.43" y="367.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandConditionalBranch (1 samples, 0.01%)</title><rect x="68.8" y="853" width="0.1" height="15.0" fill="rgb(239,169,12)" rx="2" ry="2" />
<text  x="71.77" y="863.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="319.5" y="533" width="0.2" height="15.0" fill="rgb(234,118,52)" rx="2" ry="2" />
<text  x="322.53" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (9 samples, 0.13%)</title><rect x="698.4" y="597" width="1.5" height="15.0" fill="rgb(209,96,22)" rx="2" ry="2" />
<text  x="701.39" y="607.5" ></text>
</g>
<g >
<title>X11_PumpEvents (11 samples, 0.15%)</title><rect x="988.1" y="693" width="1.8" height="15.0" fill="rgb(235,10,49)" rx="2" ry="2" />
<text  x="991.11" y="703.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="835.1" y="469" width="0.1" height="15.0" fill="rgb(244,16,8)" rx="2" ry="2" />
<text  x="838.08" y="479.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (1,228 samples, 17.18%)</title><rect x="782.9" y="693" width="202.7" height="15.0" fill="rgb(242,176,19)" rx="2" ry="2" />
<text  x="785.91" y="703.5" >Game_Picture::UpdateSprite</text>
</g>
<g >
<title>_pixman_compute_composite_region32 (1 samples, 0.01%)</title><rect x="794.5" y="645" width="0.1" height="15.0" fill="rgb(210,159,24)" rx="2" ry="2" />
<text  x="797.47" y="655.5" ></text>
</g>
<g >
<title>update_blocked_averages (3 samples, 0.04%)</title><rect x="45.3" y="709" width="0.5" height="15.0" fill="rgb(213,101,49)" rx="2" ry="2" />
<text  x="48.33" y="719.5" ></text>
</g>
<g >
<title>pixman_image_unref (4 samples, 0.06%)</title><rect x="351.6" y="629" width="0.6" height="15.0" fill="rgb(215,187,6)" rx="2" ry="2" />
<text  x="354.55" y="639.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="272.3" y="485" width="0.2" height="15.0" fill="rgb(236,217,23)" rx="2" ry="2" />
<text  x="275.31" y="495.5" ></text>
</g>
<g >
<title>BlitNtoNCopyAlpha (993 samples, 13.89%)</title><rect x="999.0" y="661" width="163.9" height="15.0" fill="rgb(248,100,31)" rx="2" ry="2" />
<text  x="1002.00" y="671.5" >BlitNtoNCopyAlpha</text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;Drawable*&gt; (1 samples, 0.01%)</title><rect x="352.5" y="613" width="0.2" height="15.0" fill="rgb(226,173,42)" rx="2" ry="2" />
<text  x="355.54" y="623.5" ></text>
</g>
<g >
<title>unpack_128_2x128 (26 samples, 0.36%)</title><rect x="290.5" y="613" width="4.3" height="15.0" fill="rgb(239,108,42)" rx="2" ry="2" />
<text  x="293.47" y="623.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipToNextConditional (1 samples, 0.01%)</title><rect x="53.3" y="853" width="0.1" height="15.0" fill="rgb(248,206,31)" rx="2" ry="2" />
<text  x="56.25" y="863.5" ></text>
</g>
<g >
<title>MakeFlashColor (3 samples, 0.04%)</title><rect x="960.0" y="661" width="0.5" height="15.0" fill="rgb(253,62,35)" rx="2" ry="2" />
<text  x="963.04" y="671.5" ></text>
</g>
<g >
<title>WriteLog (1 samples, 0.01%)</title><rect x="587.3" y="501" width="0.2" height="15.0" fill="rgb(217,221,24)" rx="2" ry="2" />
<text  x="590.29" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (6 samples, 0.08%)</title><rect x="994.9" y="485" width="1.0" height="15.0" fill="rgb(252,160,41)" rx="2" ry="2" />
<text  x="997.87" y="495.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="1184.4" y="629" width="0.2" height="15.0" fill="rgb(231,2,40)" rx="2" ry="2" />
<text  x="1187.39" y="639.5" ></text>
</g>
<g >
<title>i40e_napi_poll (1 samples, 0.01%)</title><rect x="122.1" y="773" width="0.2" height="15.0" fill="rgb(224,97,32)" rx="2" ry="2" />
<text  x="125.09" y="783.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (1 samples, 0.01%)</title><rect x="52.3" y="837" width="0.1" height="15.0" fill="rgb(246,147,32)" rx="2" ry="2" />
<text  x="55.26" y="847.5" ></text>
</g>
<g >
<title>handle_irq (2 samples, 0.03%)</title><rect x="955.3" y="453" width="0.3" height="15.0" fill="rgb(223,203,0)" rx="2" ry="2" />
<text  x="958.25" y="463.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (32 samples, 0.45%)</title><rect x="645.1" y="389" width="5.2" height="15.0" fill="rgb(247,168,24)" rx="2" ry="2" />
<text  x="648.07" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_ppoll (1 samples, 0.01%)</title><rect x="26.0" y="853" width="0.2" height="15.0" fill="rgb(219,85,43)" rx="2" ry="2" />
<text  x="29.01" y="863.5" ></text>
</g>
<g >
<title>handle_edge_irq (2 samples, 0.03%)</title><rect x="955.3" y="437" width="0.3" height="15.0" fill="rgb(251,127,31)" rx="2" ry="2" />
<text  x="958.25" y="447.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="404.9" y="533" width="0.1" height="15.0" fill="rgb(229,93,43)" rx="2" ry="2" />
<text  x="407.87" y="543.5" ></text>
</g>
<g >
<title>ret_from_intr (4 samples, 0.06%)</title><rect x="538.9" y="629" width="0.7" height="15.0" fill="rgb(232,201,23)" rx="2" ry="2" />
<text  x="541.92" y="639.5" ></text>
</g>
<g >
<title>pix_multiply_2x128 (5 samples, 0.07%)</title><rect x="222.6" y="565" width="0.8" height="15.0" fill="rgb(239,113,4)" rx="2" ry="2" />
<text  x="225.62" y="575.5" ></text>
</g>
<g >
<title>pipe_read (2 samples, 0.03%)</title><rect x="47.8" y="757" width="0.3" height="15.0" fill="rgb(224,160,15)" rx="2" ry="2" />
<text  x="50.80" y="767.5" ></text>
</g>
<g >
<title>rcu_irq_enter (1 samples, 0.01%)</title><rect x="329.6" y="517" width="0.2" height="15.0" fill="rgb(229,158,27)" rx="2" ry="2" />
<text  x="332.60" y="527.5" ></text>
</g>
<g >
<title>migrate_task_rq_fair (1 samples, 0.01%)</title><rect x="49.8" y="661" width="0.1" height="15.0" fill="rgb(239,205,34)" rx="2" ry="2" />
<text  x="52.78" y="671.5" ></text>
</g>
<g >
<title>Tone::Tone (1 samples, 0.01%)</title><rect x="73.7" y="853" width="0.2" height="15.0" fill="rgb(253,66,48)" rx="2" ry="2" />
<text  x="76.72" y="863.5" ></text>
</g>
<g >
<title>Bitmap::find_format (11 samples, 0.15%)</title><rect x="941.4" y="517" width="1.8" height="15.0" fill="rgb(227,165,41)" rx="2" ry="2" />
<text  x="944.39" y="527.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.01%)</title><rect x="122.1" y="725" width="0.2" height="15.0" fill="rgb(252,191,24)" rx="2" ry="2" />
<text  x="125.09" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_compare (6 samples, 0.08%)</title><rect x="644.1" y="389" width="1.0" height="15.0" fill="rgb(237,129,11)" rx="2" ry="2" />
<text  x="647.08" y="399.5" ></text>
</g>
<g >
<title>trigger_load_balance (1 samples, 0.01%)</title><rect x="694.3" y="437" width="0.1" height="15.0" fill="rgb(222,123,20)" rx="2" ry="2" />
<text  x="697.26" y="447.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="956.4" y="645" width="0.2" height="15.0" fill="rgb(244,134,19)" rx="2" ry="2" />
<text  x="959.41" y="655.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="375.0" y="533" width="0.2" height="15.0" fill="rgb(234,60,9)" rx="2" ry="2" />
<text  x="377.99" y="543.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="319.7" y="405" width="0.2" height="15.0" fill="rgb(211,1,35)" rx="2" ry="2" />
<text  x="322.69" y="415.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (5 samples, 0.07%)</title><rect x="69.4" y="853" width="0.9" height="15.0" fill="rgb(220,204,22)" rx="2" ry="2" />
<text  x="72.43" y="863.5" ></text>
</g>
<g >
<title>security_file_permission (1 samples, 0.01%)</title><rect x="48.3" y="773" width="0.2" height="15.0" fill="rgb(222,148,14)" rx="2" ry="2" />
<text  x="51.30" y="783.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="571.3" y="469" width="0.1" height="15.0" fill="rgb(240,127,20)" rx="2" ry="2" />
<text  x="574.28" y="479.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="967.5" y="565" width="0.1" height="15.0" fill="rgb(237,138,19)" rx="2" ry="2" />
<text  x="970.47" y="575.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (121 samples, 1.69%)</title><rect x="594.9" y="613" width="20.0" height="15.0" fill="rgb(247,179,38)" rx="2" ry="2" />
<text  x="597.88" y="623.5" ></text>
</g>
<g >
<title>compute_transformed_extents (2 samples, 0.03%)</title><rect x="171.4" y="613" width="0.4" height="15.0" fill="rgb(242,97,39)" rx="2" ry="2" />
<text  x="174.45" y="623.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (3 samples, 0.04%)</title><rect x="986.3" y="677" width="0.5" height="15.0" fill="rgb(236,117,7)" rx="2" ry="2" />
<text  x="989.29" y="687.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.01%)</title><rect x="622.0" y="373" width="0.1" height="15.0" fill="rgb(207,209,16)" rx="2" ry="2" />
<text  x="624.96" y="383.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="696.2" y="565" width="0.2" height="15.0" fill="rgb(224,183,44)" rx="2" ry="2" />
<text  x="699.24" y="575.5" ></text>
</g>
<g >
<title>operator== (2 samples, 0.03%)</title><rect x="969.1" y="645" width="0.4" height="15.0" fill="rgb(235,103,43)" rx="2" ry="2" />
<text  x="972.12" y="655.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="297.4" y="597" width="0.2" height="15.0" fill="rgb(248,211,50)" rx="2" ry="2" />
<text  x="300.41" y="607.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="375.0" y="517" width="0.2" height="15.0" fill="rgb(253,29,39)" rx="2" ry="2" />
<text  x="377.99" y="527.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (5 samples, 0.07%)</title><rect x="353.7" y="645" width="0.8" height="15.0" fill="rgb(252,172,40)" rx="2" ry="2" />
<text  x="356.70" y="655.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandKeyInputProc (1 samples, 0.01%)</title><rect x="581.7" y="661" width="0.1" height="15.0" fill="rgb(235,37,27)" rx="2" ry="2" />
<text  x="584.68" y="671.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="467.9" y="629" width="0.4" height="15.0" fill="rgb(237,34,5)" rx="2" ry="2" />
<text  x="470.94" y="639.5" ></text>
</g>
<g >
<title>is_opaque (1 samples, 0.01%)</title><rect x="328.1" y="565" width="0.2" height="15.0" fill="rgb(214,168,15)" rx="2" ry="2" />
<text  x="331.11" y="575.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="375.3" y="581" width="0.2" height="15.0" fill="rgb(223,202,0)" rx="2" ry="2" />
<text  x="378.32" y="591.5" ></text>
</g>
<g >
<title>Bitmap::height (1 samples, 0.01%)</title><rect x="898.5" y="645" width="0.1" height="15.0" fill="rgb(217,112,51)" rx="2" ry="2" />
<text  x="901.47" y="655.5" ></text>
</g>
<g >
<title>Game_Screen::GetTone (9 samples, 0.13%)</title><rect x="960.5" y="677" width="1.5" height="15.0" fill="rgb(229,207,43)" rx="2" ry="2" />
<text  x="963.54" y="687.5" ></text>
</g>
<g >
<title>SdlMixerAudio::Update (3 samples, 0.04%)</title><rect x="1172.0" y="741" width="0.5" height="15.0" fill="rgb(231,123,48)" rx="2" ry="2" />
<text  x="1175.01" y="751.5" ></text>
</g>
<g >
<title>handle_irq_event (2 samples, 0.03%)</title><rect x="467.9" y="565" width="0.4" height="15.0" fill="rgb(215,168,8)" rx="2" ry="2" />
<text  x="470.94" y="575.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="657.0" y="309" width="0.1" height="15.0" fill="rgb(208,53,54)" rx="2" ry="2" />
<text  x="659.95" y="319.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="276.6" y="357" width="0.2" height="15.0" fill="rgb(244,187,43)" rx="2" ry="2" />
<text  x="279.61" y="367.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (3 samples, 0.04%)</title><rect x="994.0" y="645" width="0.5" height="15.0" fill="rgb(241,91,48)" rx="2" ry="2" />
<text  x="997.05" y="655.5" ></text>
</g>
<g >
<title>Rect::Rect (2 samples, 0.03%)</title><rect x="123.4" y="853" width="0.3" height="15.0" fill="rgb(248,115,44)" rx="2" ry="2" />
<text  x="126.41" y="863.5" ></text>
</g>
<g >
<title>Cache::SystemOrBlack (3 samples, 0.04%)</title><rect x="987.3" y="661" width="0.5" height="15.0" fill="rgb(209,21,2)" rx="2" ry="2" />
<text  x="990.28" y="671.5" ></text>
</g>
<g >
<title>unlink_chunk (3 samples, 0.04%)</title><rect x="932.1" y="421" width="0.5" height="15.0" fill="rgb(219,54,24)" rx="2" ry="2" />
<text  x="935.14" y="431.5" ></text>
</g>
<g >
<title>sse2_blt (1 samples, 0.01%)</title><rect x="364.3" y="629" width="0.1" height="15.0" fill="rgb(222,208,37)" rx="2" ry="2" />
<text  x="367.26" y="639.5" ></text>
</g>
<g >
<title>SDL_GL_GetCurrentContext_REAL (1 samples, 0.01%)</title><rect x="1163.1" y="629" width="0.2" height="15.0" fill="rgb(214,122,36)" rx="2" ry="2" />
<text  x="1166.09" y="639.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="754.5" y="645" width="0.2" height="15.0" fill="rgb(221,186,11)" rx="2" ry="2" />
<text  x="757.52" y="655.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="782.4" y="485" width="0.2" height="15.0" fill="rgb(228,197,23)" rx="2" ry="2" />
<text  x="785.41" y="495.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="932.0" y="373" width="0.1" height="15.0" fill="rgb(242,81,1)" rx="2" ry="2" />
<text  x="934.98" y="383.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="775.5" y="677" width="0.1" height="15.0" fill="rgb(214,113,12)" rx="2" ry="2" />
<text  x="778.48" y="687.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="614.2" y="565" width="0.2" height="15.0" fill="rgb(205,20,7)" rx="2" ry="2" />
<text  x="617.20" y="575.5" ></text>
</g>
<g >
<title>std::__find_if&lt;int const*, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (13 samples, 0.18%)</title><rect x="468.3" y="597" width="2.1" height="15.0" fill="rgb(235,114,48)" rx="2" ry="2" />
<text  x="471.27" y="607.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="709.0" y="517" width="0.1" height="15.0" fill="rgb(214,28,11)" rx="2" ry="2" />
<text  x="711.95" y="527.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingForegroundExecution (10 samples, 0.14%)</title><rect x="777.1" y="645" width="1.7" height="15.0" fill="rgb(245,133,52)" rx="2" ry="2" />
<text  x="780.13" y="655.5" ></text>
</g>
<g >
<title>Window_Base::Update (3 samples, 0.04%)</title><rect x="987.3" y="677" width="0.5" height="15.0" fill="rgb(228,169,19)" rx="2" ry="2" />
<text  x="990.28" y="687.5" ></text>
</g>
<g >
<title>std::__insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (13 samples, 0.18%)</title><rect x="369.1" y="629" width="2.1" height="15.0" fill="rgb(237,205,2)" rx="2" ry="2" />
<text  x="372.05" y="639.5" ></text>
</g>
<g >
<title>_mm_set_epi32 (4 samples, 0.06%)</title><rect x="348.3" y="549" width="0.6" height="15.0" fill="rgb(225,147,41)" rx="2" ry="2" />
<text  x="351.25" y="559.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="619.8" y="437" width="0.2" height="15.0" fill="rgb(222,76,43)" rx="2" ry="2" />
<text  x="622.81" y="447.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="940.7" y="405" width="0.2" height="15.0" fill="rgb(207,191,32)" rx="2" ry="2" />
<text  x="943.73" y="415.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="1184.4" y="597" width="0.2" height="15.0" fill="rgb(208,198,0)" rx="2" ry="2" />
<text  x="1187.39" y="607.5" ></text>
</g>
<g >
<title>X11_Pending (10 samples, 0.14%)</title><rect x="994.5" y="661" width="1.7" height="15.0" fill="rgb(206,150,0)" rx="2" ry="2" />
<text  x="997.54" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (5 samples, 0.07%)</title><rect x="654.3" y="453" width="0.8" height="15.0" fill="rgb(240,195,43)" rx="2" ry="2" />
<text  x="657.31" y="463.5" ></text>
</g>
<g >
<title>_mm_mullo_epi16 (1 samples, 0.01%)</title><rect x="329.4" y="533" width="0.2" height="15.0" fill="rgb(217,31,3)" rx="2" ry="2" />
<text  x="332.43" y="543.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (11 samples, 0.15%)</title><rect x="606.8" y="549" width="1.8" height="15.0" fill="rgb(240,26,9)" rx="2" ry="2" />
<text  x="609.77" y="559.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="329.6" y="565" width="0.2" height="15.0" fill="rgb(207,123,43)" rx="2" ry="2" />
<text  x="332.60" y="575.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="753.0" y="629" width="0.2" height="15.0" fill="rgb(222,73,23)" rx="2" ry="2" />
<text  x="756.03" y="639.5" ></text>
</g>
<g >
<title>analyze_extent (5 samples, 0.07%)</title><rect x="171.1" y="629" width="0.8" height="15.0" fill="rgb(211,202,20)" rx="2" ry="2" />
<text  x="174.12" y="639.5" ></text>
</g>
<g >
<title>usb_hcd_is_primary_hcd (1 samples, 0.01%)</title><rect x="121.4" y="725" width="0.2" height="15.0" fill="rgb(210,206,0)" rx="2" ry="2" />
<text  x="124.43" y="735.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="165.5" y="645" width="0.2" height="15.0" fill="rgb(219,141,42)" rx="2" ry="2" />
<text  x="168.51" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (4 samples, 0.06%)</title><rect x="630.4" y="501" width="0.6" height="15.0" fill="rgb(226,12,48)" rx="2" ry="2" />
<text  x="633.37" y="511.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.01%)</title><rect x="75.7" y="853" width="0.2" height="15.0" fill="rgb(207,25,39)" rx="2" ry="2" />
<text  x="78.70" y="863.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="968.6" y="661" width="0.2" height="15.0" fill="rgb(230,181,25)" rx="2" ry="2" />
<text  x="971.63" y="671.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="202.5" y="533" width="0.3" height="15.0" fill="rgb(221,74,4)" rx="2" ry="2" />
<text  x="205.48" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="697.7" y="581" width="0.2" height="15.0" fill="rgb(249,171,12)" rx="2" ry="2" />
<text  x="700.73" y="591.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="171.8" y="613" width="0.1" height="15.0" fill="rgb(248,36,35)" rx="2" ry="2" />
<text  x="174.78" y="623.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="725.6" y="645" width="0.4" height="15.0" fill="rgb(244,156,14)" rx="2" ry="2" />
<text  x="728.63" y="655.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="538.8" y="613" width="0.1" height="15.0" fill="rgb(218,150,26)" rx="2" ry="2" />
<text  x="541.75" y="623.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="348.9" y="437" width="0.2" height="15.0" fill="rgb(229,147,43)" rx="2" ry="2" />
<text  x="351.91" y="447.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.01%)</title><rect x="710.6" y="597" width="0.2" height="15.0" fill="rgb(216,35,54)" rx="2" ry="2" />
<text  x="713.60" y="607.5" ></text>
</g>
<g >
<title>ttwu_do_activate (4 samples, 0.06%)</title><rect x="49.9" y="677" width="0.7" height="15.0" fill="rgb(223,127,48)" rx="2" ry="2" />
<text  x="52.95" y="687.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (1 samples, 0.01%)</title><rect x="163.0" y="725" width="0.2" height="15.0" fill="rgb(225,164,35)" rx="2" ry="2" />
<text  x="166.03" y="735.5" ></text>
</g>
<g >
<title>Cache::Picture (286 samples, 4.00%)</title><rect x="616.2" y="565" width="47.2" height="15.0" fill="rgb(221,205,43)" rx="2" ry="2" />
<text  x="619.18" y="575.5" >Cach..</text>
</g>
<g >
<title>_XEnq (1 samples, 0.01%)</title><rect x="996.0" y="597" width="0.2" height="15.0" fill="rgb(248,99,50)" rx="2" ry="2" />
<text  x="999.03" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (2 samples, 0.03%)</title><rect x="659.4" y="517" width="0.4" height="15.0" fill="rgb(245,118,43)" rx="2" ry="2" />
<text  x="662.43" y="527.5" ></text>
</g>
<g >
<title>Sprite::SetX (1 samples, 0.01%)</title><rect x="73.2" y="853" width="0.2" height="15.0" fill="rgb(231,208,21)" rx="2" ry="2" />
<text  x="76.23" y="863.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (2 samples, 0.03%)</title><rect x="202.5" y="453" width="0.3" height="15.0" fill="rgb(240,189,22)" rx="2" ry="2" />
<text  x="205.48" y="463.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="782.4" y="469" width="0.2" height="15.0" fill="rgb(229,180,35)" rx="2" ry="2" />
<text  x="785.41" y="479.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="121.8" y="645" width="0.1" height="15.0" fill="rgb(237,138,23)" rx="2" ry="2" />
<text  x="124.76" y="655.5" ></text>
</g>
<g >
<title>xhci_irq (2 samples, 0.03%)</title><rect x="155.9" y="581" width="0.4" height="15.0" fill="rgb(230,185,32)" rx="2" ry="2" />
<text  x="158.93" y="591.5" ></text>
</g>
<g >
<title>analyze_extent (3 samples, 0.04%)</title><rect x="796.1" y="645" width="0.5" height="15.0" fill="rgb(221,187,50)" rx="2" ry="2" />
<text  x="799.12" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (45 samples, 0.63%)</title><rect x="642.9" y="405" width="7.4" height="15.0" fill="rgb(218,10,24)" rx="2" ry="2" />
<text  x="645.92" y="415.5" ></text>
</g>
<g >
<title>Window_Selectable::Update (3 samples, 0.04%)</title><rect x="987.3" y="693" width="0.5" height="15.0" fill="rgb(231,167,35)" rx="2" ry="2" />
<text  x="990.28" y="703.5" ></text>
</g>
<g >
<title>GetRequest (50 samples, 0.70%)</title><rect x="605.9" y="597" width="8.3" height="15.0" fill="rgb(240,227,22)" rx="2" ry="2" />
<text  x="608.94" y="607.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="661.9" y="389" width="0.2" height="15.0" fill="rgb(218,119,18)" rx="2" ry="2" />
<text  x="664.91" y="399.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="155.9" y="693" width="0.4" height="15.0" fill="rgb(213,135,18)" rx="2" ry="2" />
<text  x="158.93" y="703.5" ></text>
</g>
<g >
<title>pixman_image_get_width (2 samples, 0.03%)</title><rect x="984.3" y="677" width="0.3" height="15.0" fill="rgb(221,74,19)" rx="2" ry="2" />
<text  x="987.31" y="687.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="932.0" y="405" width="0.1" height="15.0" fill="rgb(244,56,10)" rx="2" ry="2" />
<text  x="934.98" y="415.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="753.2" y="533" width="0.2" height="15.0" fill="rgb(236,43,7)" rx="2" ry="2" />
<text  x="756.20" y="543.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="584.0" y="597" width="0.2" height="15.0" fill="rgb(242,42,29)" rx="2" ry="2" />
<text  x="586.99" y="607.5" ></text>
</g>
<g >
<title>irq_work_run (1 samples, 0.01%)</title><rect x="377.3" y="549" width="0.2" height="15.0" fill="rgb(206,215,6)" rx="2" ry="2" />
<text  x="380.31" y="559.5" ></text>
</g>
<g >
<title>AsyncNext&lt;Scene_Map::UpdateStage1(MapUpdateAsyncContext)::&lt;lambda()&gt; &gt; (4 samples, 0.06%)</title><rect x="986.3" y="709" width="0.7" height="15.0" fill="rgb(211,164,12)" rx="2" ry="2" />
<text  x="989.29" y="719.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.01%)</title><rect x="661.9" y="149" width="0.2" height="15.0" fill="rgb(206,160,18)" rx="2" ry="2" />
<text  x="664.91" y="159.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (115 samples, 1.61%)</title><rect x="631.4" y="453" width="18.9" height="15.0" fill="rgb(254,31,14)" rx="2" ry="2" />
<text  x="634.37" y="463.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (5 samples, 0.07%)</title><rect x="653.5" y="469" width="0.8" height="15.0" fill="rgb(225,140,19)" rx="2" ry="2" />
<text  x="656.49" y="479.5" ></text>
</g>
<g >
<title>Sprite::Flash (1 samples, 0.01%)</title><rect x="962.4" y="677" width="0.1" height="15.0" fill="rgb(228,156,37)" rx="2" ry="2" />
<text  x="965.35" y="687.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="932.0" y="389" width="0.1" height="15.0" fill="rgb(238,110,12)" rx="2" ry="2" />
<text  x="934.98" y="399.5" ></text>
</g>
<g >
<title>xhci_msi_irq (2 samples, 0.03%)</title><rect x="703.8" y="453" width="0.4" height="15.0" fill="rgb(210,130,46)" rx="2" ry="2" />
<text  x="706.84" y="463.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="598.2" y="389" width="0.1" height="15.0" fill="rgb(242,180,44)" rx="2" ry="2" />
<text  x="601.18" y="399.5" ></text>
</g>
<g >
<title>Bitmap::Create (1 samples, 0.01%)</title><rect x="67.4" y="853" width="0.2" height="15.0" fill="rgb(213,219,15)" rx="2" ry="2" />
<text  x="70.45" y="863.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="657.0" y="229" width="0.1" height="15.0" fill="rgb(211,161,2)" rx="2" ry="2" />
<text  x="659.95" y="239.5" ></text>
</g>
<g >
<title>std::__merge_adaptive&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, long, Drawable**, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (3 samples, 0.04%)</title><rect x="368.6" y="661" width="0.5" height="15.0" fill="rgb(239,91,39)" rx="2" ry="2" />
<text  x="371.56" y="671.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="725.5" y="613" width="0.1" height="15.0" fill="rgb(205,159,2)" rx="2" ry="2" />
<text  x="728.46" y="623.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (22 samples, 0.31%)</title><rect x="82.1" y="853" width="3.7" height="15.0" fill="rgb(215,62,47)" rx="2" ry="2" />
<text  x="85.14" y="863.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (5 samples, 0.07%)</title><rect x="570.6" y="549" width="0.8" height="15.0" fill="rgb(205,133,50)" rx="2" ry="2" />
<text  x="573.62" y="559.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.01%)</title><rect x="998.3" y="613" width="0.2" height="15.0" fill="rgb(251,68,2)" rx="2" ry="2" />
<text  x="1001.34" y="623.5" ></text>
</g>
<g >
<title>_mm_mulhi_epu16 (1 samples, 0.01%)</title><rect x="329.3" y="533" width="0.1" height="15.0" fill="rgb(222,55,41)" rx="2" ry="2" />
<text  x="332.27" y="543.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="725.5" y="565" width="0.1" height="15.0" fill="rgb(241,114,8)" rx="2" ry="2" />
<text  x="728.46" y="575.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="276.6" y="341" width="0.2" height="15.0" fill="rgb(218,141,44)" rx="2" ry="2" />
<text  x="279.61" y="351.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="359.1" y="549" width="0.2" height="15.0" fill="rgb(245,213,22)" rx="2" ry="2" />
<text  x="362.15" y="559.5" ></text>
</g>
<g >
<title>_mm_mullo_epi16 (6 samples, 0.08%)</title><rect x="887.6" y="565" width="1.0" height="15.0" fill="rgb(212,39,7)" rx="2" ry="2" />
<text  x="890.57" y="575.5" ></text>
</g>
<g >
<title>sse2_composite_over_8888_8888 (318 samples, 4.45%)</title><rect x="172.1" y="629" width="52.5" height="15.0" fill="rgb(239,69,32)" rx="2" ry="2" />
<text  x="175.11" y="639.5" >sse2_..</text>
</g>
<g >
<title>ret_from_intr (3 samples, 0.04%)</title><rect x="888.6" y="597" width="0.5" height="15.0" fill="rgb(233,167,4)" rx="2" ry="2" />
<text  x="891.56" y="607.5" ></text>
</g>
<g >
<title>xhci_msi_irq (2 samples, 0.03%)</title><rect x="725.6" y="533" width="0.4" height="15.0" fill="rgb(208,111,42)" rx="2" ry="2" />
<text  x="728.63" y="543.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.01%)</title><rect x="987.4" y="485" width="0.2" height="15.0" fill="rgb(217,46,43)" rx="2" ry="2" />
<text  x="990.45" y="495.5" ></text>
</g>
<g >
<title>_mm_movemask_epi8 (17 samples, 0.24%)</title><rect x="851.1" y="581" width="2.8" height="15.0" fill="rgb(252,158,54)" rx="2" ry="2" />
<text  x="854.09" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator bool (3 samples, 0.04%)</title><rect x="705.8" y="629" width="0.5" height="15.0" fill="rgb(226,97,38)" rx="2" ry="2" />
<text  x="708.82" y="639.5" ></text>
</g>
<g >
<title>new_sync_read (4 samples, 0.06%)</title><rect x="47.5" y="773" width="0.6" height="15.0" fill="rgb(237,192,30)" rx="2" ry="2" />
<text  x="50.47" y="783.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="51.1" y="789" width="0.2" height="15.0" fill="rgb(249,191,26)" rx="2" ry="2" />
<text  x="54.11" y="799.5" ></text>
</g>
<g >
<title>_mm_cmpeq_epi8 (5 samples, 0.07%)</title><rect x="344.1" y="565" width="0.8" height="15.0" fill="rgb(215,163,6)" rx="2" ry="2" />
<text  x="347.12" y="575.5" ></text>
</g>
<g >
<title>pixman_transform_point_31_16 (46 samples, 0.64%)</title><rect x="311.9" y="565" width="7.6" height="15.0" fill="rgb(231,49,19)" rx="2" ry="2" />
<text  x="314.93" y="575.5" ></text>
</g>
<g >
<title>update_cfs_rq_h_load (1 samples, 0.01%)</title><rect x="49.6" y="661" width="0.2" height="15.0" fill="rgb(230,162,29)" rx="2" ry="2" />
<text  x="52.62" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (2 samples, 0.03%)</title><rect x="592.2" y="613" width="0.4" height="15.0" fill="rgb(235,120,24)" rx="2" ry="2" />
<text  x="595.24" y="623.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (103 samples, 1.44%)</title><rect x="909.0" y="437" width="17.0" height="15.0" fill="rgb(228,196,33)" rx="2" ry="2" />
<text  x="912.03" y="447.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="1171.7" y="453" width="0.1" height="15.0" fill="rgb(223,199,38)" rx="2" ry="2" />
<text  x="1174.68" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (10 samples, 0.14%)</title><rect x="625.4" y="453" width="1.7" height="15.0" fill="rgb(253,98,28)" rx="2" ry="2" />
<text  x="628.42" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (11 samples, 0.15%)</title><rect x="1186.2" y="869" width="1.8" height="15.0" fill="rgb(210,168,40)" rx="2" ry="2" />
<text  x="1189.20" y="879.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="941.2" y="453" width="0.2" height="15.0" fill="rgb(247,93,45)" rx="2" ry="2" />
<text  x="944.22" y="463.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="689.8" y="165" width="0.2" height="15.0" fill="rgb(245,143,13)" rx="2" ry="2" />
<text  x="692.80" y="175.5" ></text>
</g>
<g >
<title>[libGLdispatch.so.0.0.0] (2 samples, 0.03%)</title><rect x="87.9" y="869" width="0.3" height="15.0" fill="rgb(228,143,19)" rx="2" ry="2" />
<text  x="90.92" y="879.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="989.4" y="517" width="0.4" height="15.0" fill="rgb(234,105,46)" rx="2" ry="2" />
<text  x="992.43" y="527.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.01%)</title><rect x="990.6" y="501" width="0.1" height="15.0" fill="rgb(214,83,41)" rx="2" ry="2" />
<text  x="993.58" y="511.5" ></text>
</g>
<g >
<title>retire_playback_urb (1 samples, 0.01%)</title><rect x="955.4" y="229" width="0.2" height="15.0" fill="rgb(217,85,54)" rx="2" ry="2" />
<text  x="958.42" y="239.5" ></text>
</g>
<g >
<title>create_bits_image_internal (251 samples, 3.51%)</title><rect x="900.0" y="501" width="41.4" height="15.0" fill="rgb(206,173,32)" rx="2" ry="2" />
<text  x="902.95" y="511.5" >cre..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (1 samples, 0.01%)</title><rect x="605.9" y="565" width="0.2" height="15.0" fill="rgb(242,48,21)" rx="2" ry="2" />
<text  x="608.94" y="575.5" ></text>
</g>
<g >
<title>X11_Pending (8 samples, 0.11%)</title><rect x="988.6" y="677" width="1.3" height="15.0" fill="rgb(210,12,24)" rx="2" ry="2" />
<text  x="991.60" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (21 samples, 0.29%)</title><rect x="618.3" y="485" width="3.5" height="15.0" fill="rgb(211,173,38)" rx="2" ry="2" />
<text  x="621.32" y="495.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;int, (__gnu_cxx::_Lock_policy)2&gt;::operator= (1 samples, 0.01%)</title><rect x="696.9" y="597" width="0.2" height="15.0" fill="rgb(243,198,35)" rx="2" ry="2" />
<text  x="699.90" y="607.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~tuple (8 samples, 0.11%)</title><rect x="657.9" y="517" width="1.4" height="15.0" fill="rgb(243,11,45)" rx="2" ry="2" />
<text  x="660.94" y="527.5" ></text>
</g>
<g >
<title>syscall (3 samples, 0.04%)</title><rect x="87.4" y="853" width="0.5" height="15.0" fill="rgb(245,98,4)" rx="2" ry="2" />
<text  x="90.42" y="863.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="155.8" y="693" width="0.1" height="15.0" fill="rgb(211,36,45)" rx="2" ry="2" />
<text  x="158.77" y="703.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="51.1" y="773" width="0.2" height="15.0" fill="rgb(254,129,10)" rx="2" ry="2" />
<text  x="54.11" y="783.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (3 samples, 0.04%)</title><rect x="998.0" y="677" width="0.5" height="15.0" fill="rgb(242,121,53)" rx="2" ry="2" />
<text  x="1001.01" y="687.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (67 samples, 0.94%)</title><rect x="631.9" y="405" width="11.0" height="15.0" fill="rgb(249,3,44)" rx="2" ry="2" />
<text  x="634.86" y="415.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (45 samples, 0.63%)</title><rect x="1177.1" y="709" width="7.5" height="15.0" fill="rgb(235,85,25)" rx="2" ry="2" />
<text  x="1180.12" y="719.5" ></text>
</g>
<g >
<title>xhci_get_frame (1 samples, 0.01%)</title><rect x="571.3" y="325" width="0.1" height="15.0" fill="rgb(210,34,21)" rx="2" ry="2" />
<text  x="574.28" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (4 samples, 0.06%)</title><rect x="630.4" y="453" width="0.6" height="15.0" fill="rgb(241,213,40)" rx="2" ry="2" />
<text  x="633.37" y="463.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.01%)</title><rect x="51.4" y="869" width="0.2" height="15.0" fill="rgb(247,120,8)" rx="2" ry="2" />
<text  x="54.44" y="879.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (165 samples, 2.31%)</title><rect x="133.8" y="741" width="27.2" height="15.0" fill="rgb(249,198,8)" rx="2" ry="2" />
<text  x="136.81" y="751.5" >A..</text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (1 samples, 0.01%)</title><rect x="413.1" y="677" width="0.2" height="15.0" fill="rgb(221,210,38)" rx="2" ry="2" />
<text  x="416.13" y="687.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="572.9" y="629" width="0.2" height="15.0" fill="rgb(245,58,47)" rx="2" ry="2" />
<text  x="575.93" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="1172.2" y="645" width="0.3" height="15.0" fill="rgb(232,179,48)" rx="2" ry="2" />
<text  x="1175.17" y="655.5" ></text>
</g>
<g >
<title>Bitmap::Clear (7 samples, 0.10%)</title><rect x="898.0" y="677" width="1.1" height="15.0" fill="rgb(247,204,5)" rx="2" ry="2" />
<text  x="900.97" y="687.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (16 samples, 0.22%)</title><rect x="82.8" y="805" width="2.6" height="15.0" fill="rgb(233,183,18)" rx="2" ry="2" />
<text  x="85.80" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (21 samples, 0.29%)</title><rect x="539.6" y="629" width="3.4" height="15.0" fill="rgb(208,206,53)" rx="2" ry="2" />
<text  x="542.58" y="639.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::operator[] (9 samples, 0.13%)</title><rect x="941.7" y="501" width="1.5" height="15.0" fill="rgb(214,90,19)" rx="2" ry="2" />
<text  x="944.72" y="511.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="45.7" y="693" width="0.1" height="15.0" fill="rgb(247,96,39)" rx="2" ry="2" />
<text  x="48.66" y="703.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandControlVariables (1 samples, 0.01%)</title><rect x="68.9" y="853" width="0.2" height="15.0" fill="rgb(243,106,18)" rx="2" ry="2" />
<text  x="71.93" y="863.5" ></text>
</g>
<g >
<title>Sprite::Draw (1 samples, 0.01%)</title><rect x="373.3" y="725" width="0.2" height="15.0" fill="rgb(231,157,16)" rx="2" ry="2" />
<text  x="376.34" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (14 samples, 0.20%)</title><rect x="659.8" y="517" width="2.3" height="15.0" fill="rgb(222,52,20)" rx="2" ry="2" />
<text  x="662.76" y="527.5" ></text>
</g>
<g >
<title>Game_Character::IsProcessed (1 samples, 0.01%)</title><rect x="776.1" y="693" width="0.2" height="15.0" fill="rgb(242,209,29)" rx="2" ry="2" />
<text  x="779.14" y="703.5" ></text>
</g>
<g >
<title>pollwake (1 samples, 0.01%)</title><rect x="377.3" y="437" width="0.2" height="15.0" fill="rgb(238,215,38)" rx="2" ry="2" />
<text  x="380.31" y="447.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (4 samples, 0.06%)</title><rect x="31.1" y="725" width="0.7" height="15.0" fill="rgb(221,181,47)" rx="2" ry="2" />
<text  x="34.13" y="735.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (8 samples, 0.11%)</title><rect x="376.0" y="533" width="1.3" height="15.0" fill="rgb(238,97,30)" rx="2" ry="2" />
<text  x="378.98" y="543.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (2 samples, 0.03%)</title><rect x="998.2" y="645" width="0.3" height="15.0" fill="rgb(254,189,24)" rx="2" ry="2" />
<text  x="1001.18" y="655.5" ></text>
</g>
<g >
<title>SDL_LockJoysticks_REAL (1 samples, 0.01%)</title><rect x="993.9" y="661" width="0.1" height="15.0" fill="rgb(228,120,46)" rx="2" ry="2" />
<text  x="996.88" y="671.5" ></text>
</g>
<g >
<title>_mm_xor_si128 (2 samples, 0.03%)</title><rect x="222.3" y="549" width="0.3" height="15.0" fill="rgb(205,44,19)" rx="2" ry="2" />
<text  x="225.29" y="559.5" ></text>
</g>
<g >
<title>poll (1 samples, 0.01%)</title><rect x="987.9" y="613" width="0.2" height="15.0" fill="rgb(228,158,13)" rx="2" ry="2" />
<text  x="990.94" y="623.5" ></text>
</g>
<g >
<title>prepare_playback_urb (1 samples, 0.01%)</title><rect x="571.3" y="373" width="0.1" height="15.0" fill="rgb(250,34,22)" rx="2" ry="2" />
<text  x="574.28" y="383.5" ></text>
</g>
<g >
<title>std::__merge_sort_with_buffer&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (26 samples, 0.36%)</title><rect x="369.1" y="661" width="4.2" height="15.0" fill="rgb(224,115,51)" rx="2" ry="2" />
<text  x="372.05" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::_M_allocate_and_copy&lt;__gnu_cxx::__normal_iterator&lt;RPG::EventCommand const*, std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="439.2" y="613" width="0.2" height="15.0" fill="rgb(240,214,14)" rx="2" ry="2" />
<text  x="442.21" y="623.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (4 samples, 0.06%)</title><rect x="538.9" y="533" width="0.7" height="15.0" fill="rgb(253,35,38)" rx="2" ry="2" />
<text  x="541.92" y="543.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="782.4" y="501" width="0.2" height="15.0" fill="rgb(242,117,37)" rx="2" ry="2" />
<text  x="785.41" y="511.5" ></text>
</g>
<g >
<title>sse2_composite_over_x888_n_8888 (166 samples, 2.32%)</title><rect x="267.4" y="629" width="27.4" height="15.0" fill="rgb(253,71,26)" rx="2" ry="2" />
<text  x="270.36" y="639.5" >s..</text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (5 samples, 0.07%)</title><rect x="653.5" y="517" width="0.8" height="15.0" fill="rgb(240,194,41)" rx="2" ry="2" />
<text  x="656.49" y="527.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (2 samples, 0.03%)</title><rect x="368.7" y="613" width="0.4" height="15.0" fill="rgb(228,142,50)" rx="2" ry="2" />
<text  x="371.72" y="623.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="941.2" y="325" width="0.2" height="15.0" fill="rgb(215,155,28)" rx="2" ry="2" />
<text  x="944.22" y="335.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="344.9" y="565" width="0.2" height="15.0" fill="rgb(221,162,3)" rx="2" ry="2" />
<text  x="347.95" y="575.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (5 samples, 0.07%)</title><rect x="656.3" y="373" width="0.8" height="15.0" fill="rgb(214,43,41)" rx="2" ry="2" />
<text  x="659.29" y="383.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;Drawable*&gt; (1 samples, 0.01%)</title><rect x="373.2" y="565" width="0.1" height="15.0" fill="rgb(216,104,1)" rx="2" ry="2" />
<text  x="376.18" y="575.5" ></text>
</g>
<g >
<title>std::__merge_sort_loop&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (3 samples, 0.04%)</title><rect x="372.8" y="645" width="0.5" height="15.0" fill="rgb(230,177,25)" rx="2" ry="2" />
<text  x="375.85" y="655.5" ></text>
</g>
<g >
<title>create_bits (186 samples, 2.60%)</title><rect x="904.2" y="469" width="30.7" height="15.0" fill="rgb(206,70,52)" rx="2" ry="2" />
<text  x="907.24" y="479.5" >cr..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="994.2" y="613" width="0.3" height="15.0" fill="rgb(219,62,7)" rx="2" ry="2" />
<text  x="997.21" y="623.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (64 samples, 0.90%)</title><rect x="595.4" y="597" width="10.5" height="15.0" fill="rgb(236,89,10)" rx="2" ry="2" />
<text  x="598.38" y="607.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::begin (2 samples, 0.03%)</title><rect x="160.7" y="709" width="0.3" height="15.0" fill="rgb(216,204,6)" rx="2" ry="2" />
<text  x="163.72" y="719.5" ></text>
</g>
<g >
<title>xhci_urb_enqueue (1 samples, 0.01%)</title><rect x="689.8" y="69" width="0.2" height="15.0" fill="rgb(206,173,30)" rx="2" ry="2" />
<text  x="692.80" y="79.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (1 samples, 0.01%)</title><rect x="782.1" y="645" width="0.1" height="15.0" fill="rgb(252,96,45)" rx="2" ry="2" />
<text  x="785.08" y="655.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (9 samples, 0.13%)</title><rect x="612.5" y="501" width="1.5" height="15.0" fill="rgb(213,189,24)" rx="2" ry="2" />
<text  x="615.55" y="511.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="375.0" y="581" width="0.2" height="15.0" fill="rgb(206,34,24)" rx="2" ry="2" />
<text  x="377.99" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (12 samples, 0.17%)</title><rect x="612.2" y="549" width="2.0" height="15.0" fill="rgb(226,69,30)" rx="2" ry="2" />
<text  x="615.22" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char32_t&gt;::deallocate (1 samples, 0.01%)</title><rect x="707.5" y="565" width="0.1" height="15.0" fill="rgb(253,128,21)" rx="2" ry="2" />
<text  x="710.47" y="575.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.01%)</title><rect x="47.8" y="725" width="0.2" height="15.0" fill="rgb(212,68,48)" rx="2" ry="2" />
<text  x="50.80" y="735.5" ></text>
</g>
<g >
<title>FileFinder::FindSound (1 samples, 0.01%)</title><rect x="587.3" y="581" width="0.2" height="15.0" fill="rgb(246,124,30)" rx="2" ry="2" />
<text  x="590.29" y="591.5" ></text>
</g>
<g >
<title>__wake_up_locked_key (10 samples, 0.14%)</title><rect x="49.0" y="757" width="1.6" height="15.0" fill="rgb(229,159,19)" rx="2" ry="2" />
<text  x="51.96" y="767.5" ></text>
</g>
<g >
<title>Game_Picture::SyncCurrentToFinish (7 samples, 0.10%)</title><rect x="781.1" y="677" width="1.1" height="15.0" fill="rgb(244,214,21)" rx="2" ry="2" />
<text  x="784.09" y="687.5" ></text>
</g>
<g >
<title>Game_Map::UpdateForegroundEvents (11 samples, 0.15%)</title><rect x="774.0" y="709" width="1.8" height="15.0" fill="rgb(224,219,25)" rx="2" ry="2" />
<text  x="777.00" y="719.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="223.4" y="533" width="0.2" height="15.0" fill="rgb(226,92,24)" rx="2" ry="2" />
<text  x="226.45" y="543.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (152 samples, 2.13%)</title><rect x="729.4" y="661" width="25.1" height="15.0" fill="rgb(208,174,5)" rx="2" ry="2" />
<text  x="732.42" y="671.5" >G..</text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.01%)</title><rect x="377.3" y="405" width="0.2" height="15.0" fill="rgb(236,159,6)" rx="2" ry="2" />
<text  x="380.31" y="415.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="379.3" y="693" width="0.3" height="15.0" fill="rgb(222,171,12)" rx="2" ry="2" />
<text  x="382.29" y="703.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (4 samples, 0.06%)</title><rect x="402.6" y="629" width="0.6" height="15.0" fill="rgb(210,105,12)" rx="2" ry="2" />
<text  x="405.56" y="639.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="375.0" y="453" width="0.2" height="15.0" fill="rgb(231,198,50)" rx="2" ry="2" />
<text  x="377.99" y="463.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="1184.4" y="565" width="0.2" height="15.0" fill="rgb(223,176,39)" rx="2" ry="2" />
<text  x="1187.39" y="575.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (53 samples, 0.74%)</title><rect x="1163.3" y="645" width="8.7" height="15.0" fill="rgb(236,127,21)" rx="2" ry="2" />
<text  x="1166.26" y="655.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (50 samples, 0.70%)</title><rect x="605.9" y="581" width="8.3" height="15.0" fill="rgb(214,176,40)" rx="2" ry="2" />
<text  x="608.94" y="591.5" ></text>
</g>
<g >
<title>usb_submit_urb (1 samples, 0.01%)</title><rect x="689.8" y="101" width="0.2" height="15.0" fill="rgb(224,34,3)" rx="2" ry="2" />
<text  x="692.80" y="111.5" ></text>
</g>
<g >
<title>Window_Selectable::Update (1 samples, 0.01%)</title><rect x="987.1" y="677" width="0.2" height="15.0" fill="rgb(248,229,15)" rx="2" ry="2" />
<text  x="990.12" y="687.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="782.4" y="629" width="0.2" height="15.0" fill="rgb(232,208,11)" rx="2" ry="2" />
<text  x="785.41" y="639.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="753.0" y="645" width="0.2" height="15.0" fill="rgb(246,16,46)" rx="2" ry="2" />
<text  x="756.03" y="655.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks@plt (1 samples, 0.01%)</title><rect x="708.6" y="581" width="0.2" height="15.0" fill="rgb(235,197,34)" rx="2" ry="2" />
<text  x="711.62" y="591.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2 samples, 0.03%)</title><rect x="74.2" y="853" width="0.3" height="15.0" fill="rgb(249,93,50)" rx="2" ry="2" />
<text  x="77.22" y="863.5" ></text>
</g>
<g >
<title>pixman_image_set_transform (7 samples, 0.10%)</title><rect x="350.4" y="629" width="1.2" height="15.0" fill="rgb(214,21,32)" rx="2" ry="2" />
<text  x="353.40" y="639.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="289.3" y="517" width="0.2" height="15.0" fill="rgb(217,98,15)" rx="2" ry="2" />
<text  x="292.32" y="527.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.01%)</title><rect x="599.0" y="517" width="0.2" height="15.0" fill="rgb(249,105,17)" rx="2" ry="2" />
<text  x="602.01" y="527.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.01%)</title><rect x="47.1" y="789" width="0.2" height="15.0" fill="rgb(250,16,46)" rx="2" ry="2" />
<text  x="50.14" y="799.5" ></text>
</g>
<g >
<title>unlink_chunk (1 samples, 0.01%)</title><rect x="439.2" y="485" width="0.2" height="15.0" fill="rgb(210,14,45)" rx="2" ry="2" />
<text  x="442.21" y="495.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (4 samples, 0.06%)</title><rect x="353.0" y="629" width="0.7" height="15.0" fill="rgb(222,215,26)" rx="2" ry="2" />
<text  x="356.04" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_compare (2 samples, 0.03%)</title><rect x="652.0" y="405" width="0.3" height="15.0" fill="rgb(213,225,19)" rx="2" ry="2" />
<text  x="655.00" y="415.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="348.9" y="501" width="0.2" height="15.0" fill="rgb(246,12,44)" rx="2" ry="2" />
<text  x="351.91" y="511.5" ></text>
</g>
<g >
<title>Game_Interpreter::ReserveSubcommandIndex (1 samples, 0.01%)</title><rect x="728.9" y="661" width="0.2" height="15.0" fill="rgb(253,202,16)" rx="2" ry="2" />
<text  x="731.93" y="671.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="171.8" y="485" width="0.1" height="15.0" fill="rgb(207,35,24)" rx="2" ry="2" />
<text  x="174.78" y="495.5" ></text>
</g>
<g >
<title>handle_edge_irq (2 samples, 0.03%)</title><rect x="202.5" y="501" width="0.3" height="15.0" fill="rgb(249,110,44)" rx="2" ry="2" />
<text  x="205.48" y="511.5" ></text>
</g>
<g >
<title>handle_edge_irq (2 samples, 0.03%)</title><rect x="925.5" y="373" width="0.4" height="15.0" fill="rgb(221,183,24)" rx="2" ry="2" />
<text  x="928.54" y="383.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (1 samples, 0.01%)</title><rect x="52.4" y="853" width="0.2" height="15.0" fill="rgb(214,18,50)" rx="2" ry="2" />
<text  x="55.43" y="863.5" ></text>
</g>
<g >
<title>LoadBitmap&lt;(&lt;unnamed&gt;::Material::Type)9&gt; (1 samples, 0.01%)</title><rect x="987.1" y="597" width="0.2" height="15.0" fill="rgb(238,141,4)" rx="2" ry="2" />
<text  x="990.12" y="607.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="572.9" y="533" width="0.2" height="15.0" fill="rgb(246,11,19)" rx="2" ry="2" />
<text  x="575.93" y="543.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="775.5" y="613" width="0.1" height="15.0" fill="rgb(233,119,13)" rx="2" ry="2" />
<text  x="778.48" y="623.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="888.9" y="405" width="0.2" height="15.0" fill="rgb(226,123,53)" rx="2" ry="2" />
<text  x="891.89" y="415.5" ></text>
</g>
<g >
<title>Window_NumberInput::Update (1 samples, 0.01%)</title><rect x="987.1" y="693" width="0.2" height="15.0" fill="rgb(210,180,43)" rx="2" ry="2" />
<text  x="990.12" y="703.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="121.8" y="661" width="0.1" height="15.0" fill="rgb(241,120,39)" rx="2" ry="2" />
<text  x="124.76" y="671.5" ></text>
</g>
<g >
<title>Player::IsRPG2k3 (1 samples, 0.01%)</title><rect x="123.2" y="853" width="0.2" height="15.0" fill="rgb(209,40,33)" rx="2" ry="2" />
<text  x="126.25" y="863.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (266 samples, 3.72%)</title><rect x="899.3" y="581" width="43.9" height="15.0" fill="rgb(252,60,20)" rx="2" ry="2" />
<text  x="902.29" y="591.5" >std:..</text>
</g>
<g >
<title>_int_free (76 samples, 1.06%)</title><rect x="677.6" y="405" width="12.5" height="15.0" fill="rgb(243,223,33)" rx="2" ry="2" />
<text  x="680.59" y="415.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.01%)</title><rect x="707.0" y="597" width="0.1" height="15.0" fill="rgb(233,219,35)" rx="2" ry="2" />
<text  x="709.97" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.01%)</title><rect x="618.2" y="501" width="0.1" height="15.0" fill="rgb(210,100,52)" rx="2" ry="2" />
<text  x="621.16" y="511.5" ></text>
</g>
<g >
<title>__GI___libc_free (13 samples, 0.18%)</title><rect x="675.4" y="405" width="2.2" height="15.0" fill="rgb(218,122,17)" rx="2" ry="2" />
<text  x="678.44" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_poll (1 samples, 0.01%)</title><rect x="987.9" y="549" width="0.2" height="15.0" fill="rgb(229,2,18)" rx="2" ry="2" />
<text  x="990.94" y="559.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="835.1" y="517" width="0.1" height="15.0" fill="rgb(222,221,25)" rx="2" ry="2" />
<text  x="838.08" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (3 samples, 0.04%)</title><rect x="725.0" y="629" width="0.5" height="15.0" fill="rgb(238,13,25)" rx="2" ry="2" />
<text  x="727.97" y="639.5" ></text>
</g>
<g >
<title>pixman_transform_point (58 samples, 0.81%)</title><rect x="310.1" y="581" width="9.6" height="15.0" fill="rgb(229,31,37)" rx="2" ry="2" />
<text  x="313.12" y="591.5" ></text>
</g>
<g >
<title>native_write_msr (2 samples, 0.03%)</title><rect x="1188.8" y="661" width="0.4" height="15.0" fill="rgb(220,197,14)" rx="2" ry="2" />
<text  x="1191.84" y="671.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandCallEvent (1 samples, 0.01%)</title><rect x="439.2" y="661" width="0.2" height="15.0" fill="rgb(248,136,19)" rx="2" ry="2" />
<text  x="442.21" y="671.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="171.9" y="629" width="0.2" height="15.0" fill="rgb(214,186,39)" rx="2" ry="2" />
<text  x="174.94" y="639.5" ></text>
</g>
<g >
<title>_IO_new_file_xsputn (1 samples, 0.01%)</title><rect x="587.3" y="421" width="0.2" height="15.0" fill="rgb(216,25,12)" rx="2" ry="2" />
<text  x="590.29" y="431.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="782.4" y="549" width="0.2" height="15.0" fill="rgb(239,90,33)" rx="2" ry="2" />
<text  x="785.41" y="559.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="1171.7" y="469" width="0.1" height="15.0" fill="rgb(253,143,3)" rx="2" ry="2" />
<text  x="1174.68" y="479.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="754.5" y="581" width="0.2" height="15.0" fill="rgb(229,54,1)" rx="2" ry="2" />
<text  x="757.52" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="583.0" y="597" width="0.2" height="15.0" fill="rgb(206,78,51)" rx="2" ry="2" />
<text  x="586.00" y="607.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (8 samples, 0.11%)</title><rect x="994.7" y="581" width="1.3" height="15.0" fill="rgb(249,127,18)" rx="2" ry="2" />
<text  x="997.71" y="591.5" ></text>
</g>
<g >
<title>x86_pmu_enable (8 samples, 0.11%)</title><rect x="376.0" y="549" width="1.3" height="15.0" fill="rgb(207,200,34)" rx="2" ry="2" />
<text  x="378.98" y="559.5" ></text>
</g>
<g >
<title>unorm_to_float (3 samples, 0.04%)</title><rect x="349.9" y="581" width="0.5" height="15.0" fill="rgb(223,122,30)" rx="2" ry="2" />
<text  x="352.90" y="591.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="223.4" y="517" width="0.2" height="15.0" fill="rgb(231,112,3)" rx="2" ry="2" />
<text  x="226.45" y="527.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="202.3" y="533" width="0.2" height="15.0" fill="rgb(240,189,16)" rx="2" ry="2" />
<text  x="205.32" y="543.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="584.0" y="565" width="0.2" height="15.0" fill="rgb(209,22,19)" rx="2" ry="2" />
<text  x="586.99" y="575.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, Drawable**, Drawable**&gt; (1 samples, 0.01%)</title><rect x="352.5" y="629" width="0.2" height="15.0" fill="rgb(211,181,38)" rx="2" ry="2" />
<text  x="355.54" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (3 samples, 0.04%)</title><rect x="657.4" y="373" width="0.5" height="15.0" fill="rgb(227,9,20)" rx="2" ry="2" />
<text  x="660.45" y="383.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.01%)</title><rect x="319.4" y="309" width="0.1" height="15.0" fill="rgb(237,195,20)" rx="2" ry="2" />
<text  x="322.36" y="319.5" ></text>
</g>
<g >
<title>setup_accessors (3 samples, 0.04%)</title><rect x="169.1" y="597" width="0.5" height="15.0" fill="rgb(205,29,35)" rx="2" ry="2" />
<text  x="172.14" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (7 samples, 0.10%)</title><rect x="658.1" y="389" width="1.2" height="15.0" fill="rgb(222,12,9)" rx="2" ry="2" />
<text  x="661.11" y="399.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="539.4" y="421" width="0.2" height="15.0" fill="rgb(223,164,4)" rx="2" ry="2" />
<text  x="542.42" y="431.5" ></text>
</g>
<g >
<title>__GI___poll (2 samples, 0.03%)</title><rect x="993.6" y="581" width="0.3" height="15.0" fill="rgb(242,11,28)" rx="2" ry="2" />
<text  x="996.55" y="591.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="689.8" y="181" width="0.2" height="15.0" fill="rgb(224,36,38)" rx="2" ry="2" />
<text  x="692.80" y="191.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1160.9" y="645" width="0.2" height="15.0" fill="rgb(233,44,36)" rx="2" ry="2" />
<text  x="1163.95" y="655.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="598.2" y="405" width="0.1" height="15.0" fill="rgb(243,208,35)" rx="2" ry="2" />
<text  x="601.18" y="415.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="661.9" y="181" width="0.2" height="15.0" fill="rgb(230,192,18)" rx="2" ry="2" />
<text  x="664.91" y="191.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="782.4" y="645" width="0.2" height="15.0" fill="rgb(248,167,50)" rx="2" ry="2" />
<text  x="785.41" y="655.5" ></text>
</g>
<g >
<title>SDL_WaitEventTimeout_REAL (38 samples, 0.53%)</title><rect x="989.9" y="709" width="6.3" height="15.0" fill="rgb(206,84,10)" rx="2" ry="2" />
<text  x="992.92" y="719.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="165.5" y="629" width="0.2" height="15.0" fill="rgb(212,40,38)" rx="2" ry="2" />
<text  x="168.51" y="639.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (4 samples, 0.06%)</title><rect x="374.3" y="661" width="0.7" height="15.0" fill="rgb(245,155,41)" rx="2" ry="2" />
<text  x="377.33" y="671.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (83 samples, 1.16%)</title><rect x="617.3" y="533" width="13.7" height="15.0" fill="rgb(237,229,35)" rx="2" ry="2" />
<text  x="620.33" y="543.5" ></text>
</g>
<g >
<title>analyze_extent (1 samples, 0.01%)</title><rect x="63.3" y="853" width="0.2" height="15.0" fill="rgb(232,84,14)" rx="2" ry="2" />
<text  x="66.32" y="863.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (2 samples, 0.03%)</title><rect x="1188.8" y="741" width="0.4" height="15.0" fill="rgb(243,207,41)" rx="2" ry="2" />
<text  x="1191.84" y="751.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.07%)</title><rect x="652.5" y="389" width="0.8" height="15.0" fill="rgb(219,149,50)" rx="2" ry="2" />
<text  x="655.50" y="399.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="1171.7" y="437" width="0.1" height="15.0" fill="rgb(233,187,42)" rx="2" ry="2" />
<text  x="1174.68" y="447.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="1160.9" y="597" width="0.2" height="15.0" fill="rgb(233,218,33)" rx="2" ry="2" />
<text  x="1163.95" y="607.5" ></text>
</g>
<g >
<title>[libGLX.so.0.0.0] (1 samples, 0.01%)</title><rect x="79.8" y="837" width="0.2" height="15.0" fill="rgb(220,24,54)" rx="2" ry="2" />
<text  x="82.83" y="847.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (3 samples, 0.04%)</title><rect x="984.8" y="677" width="0.5" height="15.0" fill="rgb(219,36,12)" rx="2" ry="2" />
<text  x="987.80" y="687.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="955.4" y="261" width="0.2" height="15.0" fill="rgb(247,107,29)" rx="2" ry="2" />
<text  x="958.42" y="271.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="709.0" y="645" width="0.1" height="15.0" fill="rgb(254,125,26)" rx="2" ry="2" />
<text  x="711.95" y="655.5" ></text>
</g>
<g >
<title>Game_Map::GetNeedRefresh (1 samples, 0.01%)</title><rect x="754.5" y="661" width="0.2" height="15.0" fill="rgb(226,124,16)" rx="2" ry="2" />
<text  x="757.52" y="671.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (1 samples, 0.01%)</title><rect x="958.4" y="661" width="0.2" height="15.0" fill="rgb(220,53,22)" rx="2" ry="2" />
<text  x="961.39" y="671.5" ></text>
</g>
<g >
<title>handle_irq (2 samples, 0.03%)</title><rect x="202.5" y="517" width="0.3" height="15.0" fill="rgb(216,218,17)" rx="2" ry="2" />
<text  x="205.48" y="527.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_ios (1 samples, 0.01%)</title><rect x="708.6" y="613" width="0.2" height="15.0" fill="rgb(237,136,33)" rx="2" ry="2" />
<text  x="711.62" y="623.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (5 samples, 0.07%)</title><rect x="360.8" y="613" width="0.8" height="15.0" fill="rgb(206,9,17)" rx="2" ry="2" />
<text  x="363.80" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (6 samples, 0.08%)</title><rect x="752.0" y="629" width="1.0" height="15.0" fill="rgb(247,209,38)" rx="2" ry="2" />
<text  x="755.04" y="639.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="754.5" y="533" width="0.2" height="15.0" fill="rgb(250,126,35)" rx="2" ry="2" />
<text  x="757.52" y="543.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.01%)</title><rect x="239.1" y="389" width="0.2" height="15.0" fill="rgb(245,179,11)" rx="2" ry="2" />
<text  x="242.13" y="399.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="452.1" y="517" width="0.2" height="15.0" fill="rgb(229,130,50)" rx="2" ry="2" />
<text  x="455.09" y="527.5" ></text>
</g>
<g >
<title>AsyncHandler::IsImportantFilePending (3 samples, 0.04%)</title><rect x="986.3" y="693" width="0.5" height="15.0" fill="rgb(229,19,47)" rx="2" ry="2" />
<text  x="989.29" y="703.5" ></text>
</g>
<g >
<title>_copy_from_user (1 samples, 0.01%)</title><rect x="30.0" y="805" width="0.1" height="15.0" fill="rgb(207,27,45)" rx="2" ry="2" />
<text  x="32.97" y="815.5" ></text>
</g>
<g >
<title>usb_led_activity (1 samples, 0.01%)</title><rect x="1171.7" y="261" width="0.1" height="15.0" fill="rgb(220,189,26)" rx="2" ry="2" />
<text  x="1174.68" y="271.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="301.0" y="501" width="0.2" height="15.0" fill="rgb(209,94,27)" rx="2" ry="2" />
<text  x="304.04" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="707.5" y="613" width="0.1" height="15.0" fill="rgb(232,71,53)" rx="2" ry="2" />
<text  x="710.47" y="623.5" ></text>
</g>
<g >
<title>native_write_msr (8 samples, 0.11%)</title><rect x="376.0" y="501" width="1.3" height="15.0" fill="rgb(205,35,36)" rx="2" ry="2" />
<text  x="378.98" y="511.5" ></text>
</g>
<g >
<title>Game_Map::IsValid (1 samples, 0.01%)</title><rect x="986.0" y="645" width="0.1" height="15.0" fill="rgb(244,172,14)" rx="2" ry="2" />
<text  x="988.96" y="655.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="756.5" y="469" width="0.2" height="15.0" fill="rgb(249,63,43)" rx="2" ry="2" />
<text  x="759.50" y="479.5" ></text>
</g>
<g >
<title>Sprite::BlitScreen (1 samples, 0.01%)</title><rect x="58.9" y="853" width="0.1" height="15.0" fill="rgb(231,114,19)" rx="2" ry="2" />
<text  x="61.86" y="863.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (1 samples, 0.01%)</title><rect x="989.6" y="469" width="0.2" height="15.0" fill="rgb(241,146,28)" rx="2" ry="2" />
<text  x="992.59" y="479.5" ></text>
</g>
<g >
<title>Sprite::BlitScreenIntern (1,144 samples, 16.00%)</title><rect x="165.7" y="693" width="188.8" height="15.0" fill="rgb(240,205,3)" rx="2" ry="2" />
<text  x="168.67" y="703.5" >Sprite::BlitScreenIntern</text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="753.2" y="549" width="0.2" height="15.0" fill="rgb(254,4,13)" rx="2" ry="2" />
<text  x="756.20" y="559.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="590.9" y="629" width="0.2" height="15.0" fill="rgb(232,167,19)" rx="2" ry="2" />
<text  x="593.92" y="639.5" ></text>
</g>
<g >
<title>handle_edge_irq (10 samples, 0.14%)</title><rect x="1161.1" y="597" width="1.7" height="15.0" fill="rgb(228,182,45)" rx="2" ry="2" />
<text  x="1164.11" y="607.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="657.0" y="277" width="0.1" height="15.0" fill="rgb(223,158,37)" rx="2" ry="2" />
<text  x="659.95" y="287.5" ></text>
</g>
<g >
<title>account_user_time (1 samples, 0.01%)</title><rect x="1160.9" y="517" width="0.2" height="15.0" fill="rgb(212,3,4)" rx="2" ry="2" />
<text  x="1163.95" y="527.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (2 samples, 0.03%)</title><rect x="1188.8" y="693" width="0.4" height="15.0" fill="rgb(246,71,31)" rx="2" ry="2" />
<text  x="1191.84" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="52.3" y="773" width="0.1" height="15.0" fill="rgb(238,189,35)" rx="2" ry="2" />
<text  x="55.26" y="783.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="661.9" y="309" width="0.2" height="15.0" fill="rgb(236,85,25)" rx="2" ry="2" />
<text  x="664.91" y="319.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (4 samples, 0.06%)</title><rect x="989.3" y="613" width="0.6" height="15.0" fill="rgb(226,95,15)" rx="2" ry="2" />
<text  x="992.26" y="623.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="605.8" y="389" width="0.1" height="15.0" fill="rgb(211,10,15)" rx="2" ry="2" />
<text  x="608.78" y="399.5" ></text>
</g>
<g >
<title>unpack_32_1x128 (5 samples, 0.07%)</title><rect x="348.3" y="581" width="0.8" height="15.0" fill="rgb(209,3,33)" rx="2" ry="2" />
<text  x="351.25" y="591.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (115 samples, 1.61%)</title><rect x="631.4" y="437" width="18.9" height="15.0" fill="rgb(234,64,5)" rx="2" ry="2" />
<text  x="634.37" y="447.5" ></text>
</g>
<g >
<title>SDL_GetTicks_REAL (2 samples, 0.03%)</title><rect x="988.1" y="677" width="0.3" height="15.0" fill="rgb(213,107,53)" rx="2" ry="2" />
<text  x="991.11" y="687.5" ></text>
</g>
<g >
<title>prepare_playback_urb (1 samples, 0.01%)</title><rect x="725.8" y="373" width="0.2" height="15.0" fill="rgb(230,113,42)" rx="2" ry="2" />
<text  x="728.79" y="383.5" ></text>
</g>
<g >
<title>copy_to_urb.isra.7 (1 samples, 0.01%)</title><rect x="121.8" y="565" width="0.1" height="15.0" fill="rgb(205,170,10)" rx="2" ry="2" />
<text  x="124.76" y="575.5" ></text>
</g>
<g >
<title>pixman_transform_point (4 samples, 0.06%)</title><rect x="131.3" y="853" width="0.7" height="15.0" fill="rgb(238,208,11)" rx="2" ry="2" />
<text  x="134.33" y="863.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (20 samples, 0.28%)</title><rect x="989.9" y="613" width="3.3" height="15.0" fill="rgb(251,115,22)" rx="2" ry="2" />
<text  x="992.92" y="623.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (10 samples, 0.14%)</title><rect x="650.3" y="421" width="1.7" height="15.0" fill="rgb(233,45,34)" rx="2" ry="2" />
<text  x="653.35" y="431.5" ></text>
</g>
<g >
<title>prepare_outbound_urb (1 samples, 0.01%)</title><rect x="539.4" y="373" width="0.2" height="15.0" fill="rgb(240,106,0)" rx="2" ry="2" />
<text  x="542.42" y="383.5" ></text>
</g>
<g >
<title>Bitmap::Blit (815 samples, 11.40%)</title><rect x="167.0" y="661" width="134.5" height="15.0" fill="rgb(236,146,46)" rx="2" ry="2" />
<text  x="169.99" y="671.5" >Bitmap::Blit</text>
</g>
<g >
<title>Bitmap::Create (345 samples, 4.83%)</title><rect x="899.1" y="677" width="57.0" height="15.0" fill="rgb(247,157,35)" rx="2" ry="2" />
<text  x="902.13" y="687.5" >Bitmap..</text>
</g>
<g >
<title>pixman_image_get_data@plt (1 samples, 0.01%)</title><rect x="899.0" y="645" width="0.1" height="15.0" fill="rgb(218,17,52)" rx="2" ry="2" />
<text  x="901.96" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (3 samples, 0.04%)</title><rect x="705.8" y="597" width="0.5" height="15.0" fill="rgb(220,3,38)" rx="2" ry="2" />
<text  x="708.82" y="607.5" ></text>
</g>
<g >
<title>handle_irq (2 samples, 0.03%)</title><rect x="725.6" y="613" width="0.4" height="15.0" fill="rgb(242,188,1)" rx="2" ry="2" />
<text  x="728.63" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="79.8" y="805" width="0.2" height="15.0" fill="rgb(251,5,2)" rx="2" ry="2" />
<text  x="82.83" y="815.5" ></text>
</g>
<g >
<title>pixman_image_get_data (1 samples, 0.01%)</title><rect x="898.6" y="629" width="0.2" height="15.0" fill="rgb(233,51,48)" rx="2" ry="2" />
<text  x="901.63" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.01%)</title><rect x="782.2" y="661" width="0.2" height="15.0" fill="rgb(208,3,17)" rx="2" ry="2" />
<text  x="785.25" y="671.5" ></text>
</g>
<g >
<title>_mm_packus_epi16 (3 samples, 0.04%)</title><rect x="289.5" y="597" width="0.5" height="15.0" fill="rgb(246,194,44)" rx="2" ry="2" />
<text  x="292.48" y="607.5" ></text>
</g>
<g >
<title>__libc_calloc (170 samples, 2.38%)</title><rect x="904.6" y="453" width="28.0" height="15.0" fill="rgb(253,192,24)" rx="2" ry="2" />
<text  x="907.57" y="463.5" >_..</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="1184.4" y="677" width="0.2" height="15.0" fill="rgb(250,182,16)" rx="2" ry="2" />
<text  x="1187.39" y="687.5" ></text>
</g>
<g >
<title>snd_usb_pcm_delay.part.14 (1 samples, 0.01%)</title><rect x="375.0" y="405" width="0.2" height="15.0" fill="rgb(240,154,43)" rx="2" ry="2" />
<text  x="377.99" y="415.5" ></text>
</g>
<g >
<title>_pixman_image_fini (1 samples, 0.01%)</title><rect x="352.4" y="645" width="0.1" height="15.0" fill="rgb(238,11,46)" rx="2" ry="2" />
<text  x="355.38" y="655.5" ></text>
</g>
<g >
<title>Window::Update (1 samples, 0.01%)</title><rect x="987.0" y="677" width="0.1" height="15.0" fill="rgb(225,205,38)" rx="2" ry="2" />
<text  x="989.95" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (2 samples, 0.03%)</title><rect x="454.9" y="597" width="0.3" height="15.0" fill="rgb(248,44,37)" rx="2" ry="2" />
<text  x="457.89" y="607.5" ></text>
</g>
<g >
<title>Sprite::SetOy (2 samples, 0.03%)</title><rect x="968.8" y="677" width="0.3" height="15.0" fill="rgb(230,224,24)" rx="2" ry="2" />
<text  x="971.79" y="687.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**&gt; (1 samples, 0.01%)</title><rect x="373.2" y="597" width="0.1" height="15.0" fill="rgb(220,208,42)" rx="2" ry="2" />
<text  x="376.18" y="607.5" ></text>
</g>
<g >
<title>_mm_mullo_epi16 (1 samples, 0.01%)</title><rect x="223.3" y="549" width="0.1" height="15.0" fill="rgb(208,208,5)" rx="2" ry="2" />
<text  x="226.28" y="559.5" ></text>
</g>
<g >
<title>SDL_UDEV_Poll (1 samples, 0.01%)</title><rect x="987.9" y="661" width="0.2" height="15.0" fill="rgb(236,223,40)" rx="2" ry="2" />
<text  x="990.94" y="671.5" ></text>
</g>
<g >
<title>__sched_text_start (92 samples, 1.29%)</title><rect x="31.1" y="741" width="15.2" height="15.0" fill="rgb(245,33,30)" rx="2" ry="2" />
<text  x="34.13" y="751.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (18 samples, 0.25%)</title><rect x="650.3" y="453" width="3.0" height="15.0" fill="rgb(252,32,7)" rx="2" ry="2" />
<text  x="653.35" y="463.5" ></text>
</g>
<g >
<title>prepare_outbound_urb (1 samples, 0.01%)</title><rect x="725.8" y="389" width="0.2" height="15.0" fill="rgb(210,94,14)" rx="2" ry="2" />
<text  x="728.79" y="399.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (2 samples, 0.03%)</title><rect x="696.4" y="613" width="0.3" height="15.0" fill="rgb(224,185,37)" rx="2" ry="2" />
<text  x="699.41" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.01%)</title><rect x="77.0" y="853" width="0.2" height="15.0" fill="rgb(227,86,30)" rx="2" ry="2" />
<text  x="80.02" y="863.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="964.5" y="597" width="0.2" height="15.0" fill="rgb(239,88,45)" rx="2" ry="2" />
<text  x="967.50" y="607.5" ></text>
</g>
<g >
<title>operator new@plt (2 samples, 0.03%)</title><rect x="711.8" y="597" width="0.3" height="15.0" fill="rgb(206,110,8)" rx="2" ry="2" />
<text  x="714.76" y="607.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.01%)</title><rect x="614.7" y="517" width="0.2" height="15.0" fill="rgb(219,93,12)" rx="2" ry="2" />
<text  x="617.69" y="527.5" ></text>
</g>
<g >
<title>__sched_text_start (3 samples, 0.04%)</title><rect x="86.6" y="757" width="0.5" height="15.0" fill="rgb(240,198,23)" rx="2" ry="2" />
<text  x="89.60" y="767.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (31 samples, 0.43%)</title><rect x="1166.7" y="517" width="5.1" height="15.0" fill="rgb(224,17,2)" rx="2" ry="2" />
<text  x="1169.72" y="527.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.01%)</title><rect x="472.7" y="405" width="0.2" height="15.0" fill="rgb(252,196,48)" rx="2" ry="2" />
<text  x="475.72" y="415.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="1185.0" y="613" width="0.2" height="15.0" fill="rgb(231,62,16)" rx="2" ry="2" />
<text  x="1188.05" y="623.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="294.4" y="565" width="0.4" height="15.0" fill="rgb(241,69,4)" rx="2" ry="2" />
<text  x="297.43" y="575.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (3 samples, 0.04%)</title><rect x="984.8" y="661" width="0.5" height="15.0" fill="rgb(247,198,51)" rx="2" ry="2" />
<text  x="987.80" y="671.5" ></text>
</g>
<g >
<title>is_zero (68 samples, 0.95%)</title><rect x="193.4" y="581" width="11.2" height="15.0" fill="rgb(237,9,42)" rx="2" ry="2" />
<text  x="196.41" y="591.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="290.0" y="517" width="0.1" height="15.0" fill="rgb(223,12,27)" rx="2" ry="2" />
<text  x="292.98" y="527.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (59 samples, 0.83%)</title><rect x="633.2" y="373" width="9.7" height="15.0" fill="rgb(209,102,14)" rx="2" ry="2" />
<text  x="636.18" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt;, std::_Select1st&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt;, std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;, std::allocator&lt;std::pair&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; const, (anonymous namespace)::CacheItem&gt; &gt; &gt;::find (1 samples, 0.01%)</title><rect x="653.3" y="501" width="0.2" height="15.0" fill="rgb(244,32,9)" rx="2" ry="2" />
<text  x="656.32" y="511.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (4 samples, 0.06%)</title><rect x="88.2" y="869" width="0.7" height="15.0" fill="rgb(231,177,32)" rx="2" ry="2" />
<text  x="91.25" y="879.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (3 samples, 0.04%)</title><rect x="708.0" y="581" width="0.5" height="15.0" fill="rgb(251,12,53)" rx="2" ry="2" />
<text  x="710.96" y="591.5" ></text>
</g>
<g >
<title>pick_next_task_fair (3 samples, 0.04%)</title><rect x="86.6" y="741" width="0.5" height="15.0" fill="rgb(239,164,54)" rx="2" ry="2" />
<text  x="89.60" y="751.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="223.4" y="469" width="0.2" height="15.0" fill="rgb(239,166,40)" rx="2" ry="2" />
<text  x="226.45" y="479.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1160.9" y="629" width="0.2" height="15.0" fill="rgb(225,9,50)" rx="2" ry="2" />
<text  x="1163.95" y="639.5" ></text>
</g>
<g >
<title>_mm_movemask_epi8 (12 samples, 0.17%)</title><rect x="258.0" y="597" width="1.9" height="15.0" fill="rgb(248,49,32)" rx="2" ry="2" />
<text  x="260.95" y="607.5" ></text>
</g>
<g >
<title>memcmp@plt (2 samples, 0.03%)</title><rect x="651.7" y="373" width="0.3" height="15.0" fill="rgb(241,96,43)" rx="2" ry="2" />
<text  x="654.67" y="383.5" ></text>
</g>
<g >
<title>is_opaque (14 samples, 0.20%)</title><rect x="191.1" y="581" width="2.3" height="15.0" fill="rgb(223,50,36)" rx="2" ry="2" />
<text  x="194.09" y="591.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="319.7" y="453" width="0.2" height="15.0" fill="rgb(214,188,35)" rx="2" ry="2" />
<text  x="322.69" y="463.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (2 samples, 0.03%)</title><rect x="994.9" y="437" width="0.3" height="15.0" fill="rgb(217,122,1)" rx="2" ry="2" />
<text  x="997.87" y="447.5" ></text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (2 samples, 0.03%)</title><rect x="780.8" y="677" width="0.3" height="15.0" fill="rgb(235,123,14)" rx="2" ry="2" />
<text  x="783.76" y="687.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="703.8" y="549" width="0.4" height="15.0" fill="rgb(238,181,35)" rx="2" ry="2" />
<text  x="706.84" y="559.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="711.1" y="581" width="0.5" height="15.0" fill="rgb(228,16,32)" rx="2" ry="2" />
<text  x="714.10" y="591.5" ></text>
</g>
<g >
<title>combine1 (1 samples, 0.01%)</title><rect x="326.6" y="565" width="0.2" height="15.0" fill="rgb(230,126,10)" rx="2" ry="2" />
<text  x="329.63" y="575.5" ></text>
</g>
<g >
<title>create_mask_16_128 (1 samples, 0.01%)</title><rect x="229.7" y="613" width="0.2" height="15.0" fill="rgb(207,59,33)" rx="2" ry="2" />
<text  x="232.72" y="623.5" ></text>
</g>
<g >
<title>__update_load_avg_blocked_se (1 samples, 0.01%)</title><rect x="49.8" y="645" width="0.1" height="15.0" fill="rgb(241,124,33)" rx="2" ry="2" />
<text  x="52.78" y="655.5" ></text>
</g>
<g >
<title>Graphics::LocalDraw (1,273 samples, 17.81%)</title><rect x="163.2" y="725" width="210.1" height="15.0" fill="rgb(229,165,33)" rx="2" ry="2" />
<text  x="166.20" y="735.5" >Graphics::LocalDraw</text>
</g>
<g >
<title>load_128_unaligned (22 samples, 0.31%)</title><rect x="297.6" y="613" width="3.6" height="15.0" fill="rgb(224,99,40)" rx="2" ry="2" />
<text  x="300.57" y="623.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.01%)</title><rect x="368.2" y="629" width="0.2" height="15.0" fill="rgb(248,175,32)" rx="2" ry="2" />
<text  x="371.23" y="639.5" ></text>
</g>
<g >
<title>get_max_fast (1 samples, 0.01%)</title><rect x="955.1" y="485" width="0.2" height="15.0" fill="rgb(213,35,43)" rx="2" ry="2" />
<text  x="958.09" y="495.5" ></text>
</g>
<g >
<title>usb_hcd_submit_urb (1 samples, 0.01%)</title><rect x="689.8" y="85" width="0.2" height="15.0" fill="rgb(242,111,17)" rx="2" ry="2" />
<text  x="692.80" y="95.5" ></text>
</g>
<g >
<title>xhci_queue_isoc_tx_prepare (1 samples, 0.01%)</title><rect x="276.6" y="245" width="0.2" height="15.0" fill="rgb(230,220,50)" rx="2" ry="2" />
<text  x="279.61" y="255.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (69 samples, 0.97%)</title><rect x="33.4" y="661" width="11.4" height="15.0" fill="rgb(223,201,48)" rx="2" ry="2" />
<text  x="36.44" y="671.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="1171.8" y="485" width="0.2" height="15.0" fill="rgb(240,69,25)" rx="2" ry="2" />
<text  x="1174.84" y="495.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="472.7" y="581" width="0.2" height="15.0" fill="rgb(226,83,42)" rx="2" ry="2" />
<text  x="475.72" y="591.5" ></text>
</g>
<g >
<title>LoadBitmap&lt;(&lt;unnamed&gt;::Material::Type)8&gt; (285 samples, 3.99%)</title><rect x="616.3" y="549" width="47.1" height="15.0" fill="rgb(212,205,6)" rx="2" ry="2" />
<text  x="619.34" y="559.5" >Load..</text>
</g>
<g >
<title>irq_work_run_list (1 samples, 0.01%)</title><rect x="377.3" y="533" width="0.2" height="15.0" fill="rgb(253,28,14)" rx="2" ry="2" />
<text  x="380.31" y="543.5" ></text>
</g>
<g >
<title>negate_2x128 (9 samples, 0.13%)</title><rect x="883.6" y="581" width="1.5" height="15.0" fill="rgb(237,115,40)" rx="2" ry="2" />
<text  x="886.61" y="591.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::end (1 samples, 0.01%)</title><rect x="587.1" y="629" width="0.2" height="15.0" fill="rgb(209,151,27)" rx="2" ry="2" />
<text  x="590.12" y="639.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="849.1" y="565" width="0.3" height="15.0" fill="rgb(243,140,7)" rx="2" ry="2" />
<text  x="852.11" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (2 samples, 0.03%)</title><rect x="989.4" y="501" width="0.4" height="15.0" fill="rgb(229,29,25)" rx="2" ry="2" />
<text  x="992.43" y="511.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="297.4" y="565" width="0.2" height="15.0" fill="rgb(221,94,8)" rx="2" ry="2" />
<text  x="300.41" y="575.5" ></text>
</g>
<g >
<title>__kmalloc (1 samples, 0.01%)</title><rect x="689.8" y="53" width="0.2" height="15.0" fill="rgb(250,159,52)" rx="2" ry="2" />
<text  x="692.80" y="63.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.01%)</title><rect x="32.1" y="677" width="0.2" height="15.0" fill="rgb(247,150,25)" rx="2" ry="2" />
<text  x="35.12" y="687.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.01%)</title><rect x="985.8" y="677" width="0.2" height="15.0" fill="rgb(216,41,35)" rx="2" ry="2" />
<text  x="988.79" y="687.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="264.4" y="565" width="0.2" height="15.0" fill="rgb(241,64,49)" rx="2" ry="2" />
<text  x="267.39" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (10 samples, 0.14%)</title><rect x="568.0" y="629" width="1.6" height="15.0" fill="rgb(214,8,14)" rx="2" ry="2" />
<text  x="570.97" y="639.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.01%)</title><rect x="66.1" y="853" width="0.2" height="15.0" fill="rgb(211,186,27)" rx="2" ry="2" />
<text  x="69.13" y="863.5" ></text>
</g>
<g >
<title>_mm_adds_epu16 (1 samples, 0.01%)</title><rect x="343.3" y="533" width="0.2" height="15.0" fill="rgb(223,134,51)" rx="2" ry="2" />
<text  x="346.30" y="543.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.01%)</title><rect x="587.3" y="469" width="0.2" height="15.0" fill="rgb(240,34,44)" rx="2" ry="2" />
<text  x="590.29" y="479.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="605.8" y="549" width="0.1" height="15.0" fill="rgb(236,121,30)" rx="2" ry="2" />
<text  x="608.78" y="559.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (2 samples, 0.03%)</title><rect x="780.8" y="645" width="0.3" height="15.0" fill="rgb(240,91,44)" rx="2" ry="2" />
<text  x="783.76" y="655.5" ></text>
</g>
<g >
<title>find (133 samples, 1.86%)</title><rect x="631.4" y="501" width="21.9" height="15.0" fill="rgb(241,228,40)" rx="2" ry="2" />
<text  x="634.37" y="511.5" >f..</text>
</g>
<g >
<title>handle_irq_event_percpu (4 samples, 0.06%)</title><rect x="538.9" y="549" width="0.7" height="15.0" fill="rgb(217,78,18)" rx="2" ry="2" />
<text  x="541.92" y="559.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="267.2" y="565" width="0.2" height="15.0" fill="rgb(245,228,53)" rx="2" ry="2" />
<text  x="270.20" y="575.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="725.8" y="421" width="0.2" height="15.0" fill="rgb(235,71,19)" rx="2" ry="2" />
<text  x="728.79" y="431.5" ></text>
</g>
<g >
<title>pix_multiply_2x128 (40 samples, 0.56%)</title><rect x="274.5" y="581" width="6.6" height="15.0" fill="rgb(252,150,31)" rx="2" ry="2" />
<text  x="277.46" y="591.5" ></text>
</g>
<g >
<title>xhci_hub_status_data (1 samples, 0.01%)</title><rect x="613.9" y="357" width="0.1" height="15.0" fill="rgb(240,129,22)" rx="2" ry="2" />
<text  x="616.87" y="367.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="272.3" y="597" width="0.2" height="15.0" fill="rgb(222,214,7)" rx="2" ry="2" />
<text  x="275.31" y="607.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="239.1" y="469" width="0.2" height="15.0" fill="rgb(219,167,35)" rx="2" ry="2" />
<text  x="242.13" y="479.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="404.9" y="597" width="0.1" height="15.0" fill="rgb(233,79,44)" rx="2" ry="2" />
<text  x="407.87" y="607.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="756.5" y="565" width="0.2" height="15.0" fill="rgb(238,184,50)" rx="2" ry="2" />
<text  x="759.50" y="575.5" ></text>
</g>
<g >
<title>over_2x128 (52 samples, 0.73%)</title><rect x="272.5" y="597" width="8.6" height="15.0" fill="rgb(232,68,31)" rx="2" ry="2" />
<text  x="275.48" y="607.5" ></text>
</g>
<g >
<title>_mm_or_si128 (9 samples, 0.13%)</title><rect x="296.1" y="613" width="1.5" height="15.0" fill="rgb(217,202,37)" rx="2" ry="2" />
<text  x="299.09" y="623.5" ></text>
</g>
<g >
<title>[anon] (10 samples, 0.14%)</title><rect x="78.2" y="869" width="1.6" height="15.0" fill="rgb(235,87,10)" rx="2" ry="2" />
<text  x="81.18" y="879.5" ></text>
</g>
<g >
<title>handle_irq (2 samples, 0.03%)</title><rect x="849.4" y="533" width="0.4" height="15.0" fill="rgb(210,36,54)" rx="2" ry="2" />
<text  x="852.44" y="543.5" ></text>
</g>
<g >
<title>operator()&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int&gt; &gt; &gt; (2 samples, 0.03%)</title><rect x="373.8" y="629" width="0.4" height="15.0" fill="rgb(229,44,51)" rx="2" ry="2" />
<text  x="376.84" y="639.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="995.9" y="485" width="0.1" height="15.0" fill="rgb(205,104,22)" rx="2" ry="2" />
<text  x="998.86" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (4 samples, 0.06%)</title><rect x="630.4" y="485" width="0.6" height="15.0" fill="rgb(209,15,52)" rx="2" ry="2" />
<text  x="633.37" y="495.5" ></text>
</g>
<g >
<title>SDL_GetTicks@plt (1 samples, 0.01%)</title><rect x="377.6" y="741" width="0.2" height="15.0" fill="rgb(216,66,24)" rx="2" ry="2" />
<text  x="380.64" y="751.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.01%)</title><rect x="1189.8" y="853" width="0.2" height="15.0" fill="rgb(216,212,2)" rx="2" ry="2" />
<text  x="1192.83" y="863.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="1171.7" y="293" width="0.1" height="15.0" fill="rgb(232,74,25)" rx="2" ry="2" />
<text  x="1174.68" y="303.5" ></text>
</g>
<g >
<title>Tone::Tone (3 samples, 0.04%)</title><rect x="961.5" y="661" width="0.5" height="15.0" fill="rgb(220,102,16)" rx="2" ry="2" />
<text  x="964.53" y="671.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="272.3" y="469" width="0.2" height="15.0" fill="rgb(209,165,18)" rx="2" ry="2" />
<text  x="275.31" y="479.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (2 samples, 0.03%)</title><rect x="370.9" y="581" width="0.3" height="15.0" fill="rgb(221,208,30)" rx="2" ry="2" />
<text  x="373.87" y="591.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (10 samples, 0.14%)</title><rect x="1161.1" y="549" width="1.7" height="15.0" fill="rgb(234,215,18)" rx="2" ry="2" />
<text  x="1164.11" y="559.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (1 samples, 0.01%)</title><rect x="364.3" y="661" width="0.1" height="15.0" fill="rgb(239,78,54)" rx="2" ry="2" />
<text  x="367.26" y="671.5" ></text>
</g>
<g >
<title>smp_irq_work_interrupt (1 samples, 0.01%)</title><rect x="377.3" y="565" width="0.2" height="15.0" fill="rgb(251,49,22)" rx="2" ry="2" />
<text  x="380.31" y="575.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="348.9" y="517" width="0.2" height="15.0" fill="rgb(248,131,5)" rx="2" ry="2" />
<text  x="351.91" y="527.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.01%)</title><rect x="297.4" y="453" width="0.2" height="15.0" fill="rgb(217,59,35)" rx="2" ry="2" />
<text  x="300.41" y="463.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.03%)</title><rect x="849.4" y="565" width="0.4" height="15.0" fill="rgb(206,113,0)" rx="2" ry="2" />
<text  x="852.44" y="575.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="472.7" y="453" width="0.2" height="15.0" fill="rgb(252,203,50)" rx="2" ry="2" />
<text  x="475.72" y="463.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="223.1" y="533" width="0.2" height="15.0" fill="rgb(226,10,47)" rx="2" ry="2" />
<text  x="226.12" y="543.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="582.2" y="613" width="0.1" height="15.0" fill="rgb(240,37,21)" rx="2" ry="2" />
<text  x="585.17" y="623.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="689.8" y="229" width="0.2" height="15.0" fill="rgb(234,228,21)" rx="2" ry="2" />
<text  x="692.80" y="239.5" ></text>
</g>
<g >
<title>deactivate_task (1 samples, 0.01%)</title><rect x="375.7" y="597" width="0.1" height="15.0" fill="rgb(235,49,46)" rx="2" ry="2" />
<text  x="378.65" y="607.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="782.4" y="533" width="0.2" height="15.0" fill="rgb(222,28,31)" rx="2" ry="2" />
<text  x="785.41" y="543.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="584.0" y="613" width="0.2" height="15.0" fill="rgb(242,225,48)" rx="2" ry="2" />
<text  x="586.99" y="623.5" ></text>
</g>
<g >
<title>_int_free (6 samples, 0.08%)</title><rect x="658.3" y="373" width="1.0" height="15.0" fill="rgb(209,174,22)" rx="2" ry="2" />
<text  x="661.27" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.01%)</title><rect x="622.0" y="405" width="0.1" height="15.0" fill="rgb(229,149,40)" rx="2" ry="2" />
<text  x="624.96" y="415.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="276.6" y="437" width="0.2" height="15.0" fill="rgb(232,56,34)" rx="2" ry="2" />
<text  x="279.61" y="447.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="276.6" y="373" width="0.2" height="15.0" fill="rgb(226,14,6)" rx="2" ry="2" />
<text  x="279.61" y="383.5" ></text>
</g>
<g >
<title>_int_free (3 samples, 0.04%)</title><rect x="60.8" y="853" width="0.5" height="15.0" fill="rgb(231,81,45)" rx="2" ry="2" />
<text  x="63.84" y="863.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="614.2" y="389" width="0.2" height="15.0" fill="rgb(208,115,46)" rx="2" ry="2" />
<text  x="617.20" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (1 samples, 0.01%)</title><rect x="599.7" y="549" width="0.1" height="15.0" fill="rgb(230,210,19)" rx="2" ry="2" />
<text  x="602.67" y="559.5" ></text>
</g>
<g >
<title>eventfd_write (12 samples, 0.17%)</title><rect x="49.0" y="773" width="1.9" height="15.0" fill="rgb(236,80,33)" rx="2" ry="2" />
<text  x="51.96" y="783.5" ></text>
</g>
<g >
<title>kmalloc_slab (1 samples, 0.01%)</title><rect x="689.8" y="37" width="0.2" height="15.0" fill="rgb(246,188,25)" rx="2" ry="2" />
<text  x="692.80" y="47.5" ></text>
</g>
<g >
<title>vfs_read (7 samples, 0.10%)</title><rect x="47.3" y="805" width="1.2" height="15.0" fill="rgb(213,0,5)" rx="2" ry="2" />
<text  x="50.31" y="815.5" ></text>
</g>
<g >
<title>handle_edge_irq (2 samples, 0.03%)</title><rect x="758.1" y="613" width="0.4" height="15.0" fill="rgb(232,191,7)" rx="2" ry="2" />
<text  x="761.15" y="623.5" ></text>
</g>
<g >
<title>poll (1 samples, 0.01%)</title><rect x="988.6" y="645" width="0.2" height="15.0" fill="rgb(205,10,11)" rx="2" ry="2" />
<text  x="991.60" y="655.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (11 samples, 0.15%)</title><rect x="694.4" y="517" width="1.8" height="15.0" fill="rgb(238,217,48)" rx="2" ry="2" />
<text  x="697.43" y="527.5" ></text>
</g>
<g >
<title>operator!= (2 samples, 0.03%)</title><rect x="969.1" y="661" width="0.4" height="15.0" fill="rgb(238,155,13)" rx="2" ry="2" />
<text  x="972.12" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (3 samples, 0.04%)</title><rect x="654.6" y="405" width="0.5" height="15.0" fill="rgb(231,92,38)" rx="2" ry="2" />
<text  x="657.64" y="415.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="888.9" y="453" width="0.2" height="15.0" fill="rgb(223,157,9)" rx="2" ry="2" />
<text  x="891.89" y="463.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="849.3" y="501" width="0.1" height="15.0" fill="rgb(217,135,46)" rx="2" ry="2" />
<text  x="852.27" y="511.5" ></text>
</g>
<g >
<title>xhci_msi_irq (2 samples, 0.03%)</title><rect x="925.5" y="309" width="0.4" height="15.0" fill="rgb(247,120,0)" rx="2" ry="2" />
<text  x="928.54" y="319.5" ></text>
</g>
<g >
<title>SDL_ConvertPixels_REAL (995 samples, 13.92%)</title><rect x="998.7" y="693" width="164.2" height="15.0" fill="rgb(221,122,50)" rx="2" ry="2" />
<text  x="1001.67" y="703.5" >SDL_ConvertPixels_REAL</text>
</g>
<g >
<title>_mm_mullo_epi16 (17 samples, 0.24%)</title><rect x="286.7" y="581" width="2.8" height="15.0" fill="rgb(222,77,21)" rx="2" ry="2" />
<text  x="289.68" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.01%)</title><rect x="622.0" y="421" width="0.1" height="15.0" fill="rgb(222,54,8)" rx="2" ry="2" />
<text  x="624.96" y="431.5" ></text>
</g>
<g >
<title>ktime_get_raw_ts64 (1 samples, 0.01%)</title><rect x="1188.7" y="805" width="0.1" height="15.0" fill="rgb(212,75,18)" rx="2" ry="2" />
<text  x="1191.68" y="815.5" ></text>
</g>
<g >
<title>__sys_recvmsg (2 samples, 0.03%)</title><rect x="989.4" y="485" width="0.4" height="15.0" fill="rgb(218,113,36)" rx="2" ry="2" />
<text  x="992.43" y="495.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="657.0" y="341" width="0.1" height="15.0" fill="rgb(218,145,24)" rx="2" ry="2" />
<text  x="659.95" y="351.5" ></text>
</g>
<g >
<title>sse2_composite_over_8888_n_8888 (259 samples, 3.62%)</title><rect x="224.6" y="629" width="42.8" height="15.0" fill="rgb(215,23,40)" rx="2" ry="2" />
<text  x="227.61" y="639.5" >sse2..</text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="375.3" y="533" width="0.2" height="15.0" fill="rgb(227,5,31)" rx="2" ry="2" />
<text  x="378.32" y="543.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.01%)</title><rect x="995.5" y="357" width="0.2" height="15.0" fill="rgb(243,194,24)" rx="2" ry="2" />
<text  x="998.53" y="367.5" ></text>
</g>
<g >
<title>interrupt_entry (1 samples, 0.01%)</title><rect x="74.4" y="821" width="0.1" height="15.0" fill="rgb(251,206,41)" rx="2" ry="2" />
<text  x="77.38" y="831.5" ></text>
</g>
<g >
<title>handle_irq (2 samples, 0.03%)</title><rect x="467.9" y="597" width="0.4" height="15.0" fill="rgb(229,197,27)" rx="2" ry="2" />
<text  x="470.94" y="607.5" ></text>
</g>
<g >
<title>schedule (7 samples, 0.10%)</title><rect x="849.9" y="517" width="1.2" height="15.0" fill="rgb(248,150,1)" rx="2" ry="2" />
<text  x="852.93" y="527.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="1185.0" y="549" width="0.2" height="15.0" fill="rgb(254,80,41)" rx="2" ry="2" />
<text  x="1188.05" y="559.5" ></text>
</g>
<g >
<title>Scene::IsAsyncPending (75 samples, 1.05%)</title><rect x="1172.8" y="757" width="12.4" height="15.0" fill="rgb(225,196,8)" rx="2" ry="2" />
<text  x="1175.83" y="767.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.01%)</title><rect x="439.2" y="549" width="0.2" height="15.0" fill="rgb(243,60,4)" rx="2" ry="2" />
<text  x="442.21" y="559.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="689.8" y="149" width="0.2" height="15.0" fill="rgb(215,42,34)" rx="2" ry="2" />
<text  x="692.80" y="159.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.01%)</title><rect x="126.7" y="853" width="0.2" height="15.0" fill="rgb(236,129,34)" rx="2" ry="2" />
<text  x="129.71" y="863.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (5 samples, 0.07%)</title><rect x="628.1" y="389" width="0.8" height="15.0" fill="rgb(221,204,49)" rx="2" ry="2" />
<text  x="631.06" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (9 samples, 0.13%)</title><rect x="610.7" y="517" width="1.5" height="15.0" fill="rgb(221,8,40)" rx="2" ry="2" />
<text  x="613.73" y="527.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (1 samples, 0.01%)</title><rect x="987.4" y="565" width="0.2" height="15.0" fill="rgb(246,79,10)" rx="2" ry="2" />
<text  x="990.45" y="575.5" ></text>
</g>
<g >
<title>xhci_msi_irq (2 samples, 0.03%)</title><rect x="467.9" y="517" width="0.4" height="15.0" fill="rgb(225,38,12)" rx="2" ry="2" />
<text  x="470.94" y="527.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.01%)</title><rect x="711.6" y="581" width="0.2" height="15.0" fill="rgb(235,31,12)" rx="2" ry="2" />
<text  x="714.59" y="591.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.01%)</title><rect x="614.2" y="357" width="0.2" height="15.0" fill="rgb(238,127,42)" rx="2" ry="2" />
<text  x="617.20" y="367.5" ></text>
</g>
<g >
<title>Sprite::Draw (1 samples, 0.01%)</title><rect x="362.0" y="693" width="0.1" height="15.0" fill="rgb(248,121,12)" rx="2" ry="2" />
<text  x="364.95" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.03%)</title><rect x="621.8" y="437" width="0.3" height="15.0" fill="rgb(246,201,20)" rx="2" ry="2" />
<text  x="624.79" y="447.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.01%)</title><rect x="344.9" y="341" width="0.2" height="15.0" fill="rgb(240,141,36)" rx="2" ry="2" />
<text  x="347.95" y="351.5" ></text>
</g>
<g >
<title>[libGLX_nvidia.so.390.116] (48 samples, 0.67%)</title><rect x="80.0" y="869" width="7.9" height="15.0" fill="rgb(225,130,6)" rx="2" ry="2" />
<text  x="82.99" y="879.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (12 samples, 0.17%)</title><rect x="991.1" y="485" width="2.0" height="15.0" fill="rgb(207,32,42)" rx="2" ry="2" />
<text  x="994.08" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_destroy (1 samples, 0.01%)</title><rect x="707.5" y="597" width="0.1" height="15.0" fill="rgb(240,205,7)" rx="2" ry="2" />
<text  x="710.47" y="607.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="171.8" y="405" width="0.1" height="15.0" fill="rgb(231,191,35)" rx="2" ry="2" />
<text  x="174.78" y="415.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (6 samples, 0.08%)</title><rect x="70.4" y="853" width="1.0" height="15.0" fill="rgb(208,205,27)" rx="2" ry="2" />
<text  x="73.42" y="863.5" ></text>
</g>
<g >
<title>interrupt_entry (1 samples, 0.01%)</title><rect x="53.3" y="837" width="0.1" height="15.0" fill="rgb(244,25,53)" rx="2" ry="2" />
<text  x="56.25" y="847.5" ></text>
</g>
<g >
<title>__update_idle_core (1 samples, 0.01%)</title><rect x="31.8" y="725" width="0.2" height="15.0" fill="rgb(232,196,54)" rx="2" ry="2" />
<text  x="34.79" y="735.5" ></text>
</g>
<g >
<title>Bitmap::StretchBlit (1 samples, 0.01%)</title><rect x="122.9" y="853" width="0.2" height="15.0" fill="rgb(248,165,50)" rx="2" ry="2" />
<text  x="125.92" y="863.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (1 samples, 0.01%)</title><rect x="78.5" y="853" width="0.2" height="15.0" fill="rgb(225,145,12)" rx="2" ry="2" />
<text  x="81.51" y="863.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="571.3" y="485" width="0.1" height="15.0" fill="rgb(249,123,39)" rx="2" ry="2" />
<text  x="574.28" y="495.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (3 samples, 0.04%)</title><rect x="988.8" y="645" width="0.5" height="15.0" fill="rgb(222,105,38)" rx="2" ry="2" />
<text  x="991.77" y="655.5" ></text>
</g>
<g >
<title>_pixman_image_validate (4 samples, 0.06%)</title><rect x="128.4" y="853" width="0.6" height="15.0" fill="rgb(208,58,1)" rx="2" ry="2" />
<text  x="131.36" y="863.5" ></text>
</g>
<g >
<title>xhci_irq (2 samples, 0.03%)</title><rect x="758.1" y="533" width="0.4" height="15.0" fill="rgb(243,0,46)" rx="2" ry="2" />
<text  x="761.15" y="543.5" ></text>
</g>
<g >
<title>tcache_put (1 samples, 0.01%)</title><rect x="705.5" y="533" width="0.2" height="15.0" fill="rgb(235,212,27)" rx="2" ry="2" />
<text  x="708.49" y="543.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="344.9" y="421" width="0.2" height="15.0" fill="rgb(252,23,1)" rx="2" ry="2" />
<text  x="347.95" y="431.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="956.4" y="581" width="0.2" height="15.0" fill="rgb(241,23,33)" rx="2" ry="2" />
<text  x="959.41" y="591.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (1 samples, 0.01%)</title><rect x="984.8" y="645" width="0.2" height="15.0" fill="rgb(249,120,46)" rx="2" ry="2" />
<text  x="987.80" y="655.5" ></text>
</g>
<g >
<title>Output::Debug (1 samples, 0.01%)</title><rect x="587.3" y="533" width="0.2" height="15.0" fill="rgb(226,128,31)" rx="2" ry="2" />
<text  x="590.29" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (2 samples, 0.03%)</title><rect x="1188.8" y="837" width="0.4" height="15.0" fill="rgb(253,120,49)" rx="2" ry="2" />
<text  x="1191.84" y="847.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.01%)</title><rect x="74.4" y="837" width="0.1" height="15.0" fill="rgb(205,116,8)" rx="2" ry="2" />
<text  x="77.38" y="847.5" ></text>
</g>
<g >
<title>handle_edge_irq (2 samples, 0.03%)</title><rect x="725.6" y="597" width="0.4" height="15.0" fill="rgb(228,55,40)" rx="2" ry="2" />
<text  x="728.63" y="607.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="584.0" y="629" width="0.2" height="15.0" fill="rgb(249,56,49)" rx="2" ry="2" />
<text  x="586.99" y="639.5" ></text>
</g>
<g >
<title>easyrpg-player (6,893 samples, 96.43%)</title><rect x="52.1" y="885" width="1137.9" height="15.0" fill="rgb(242,133,21)" rx="2" ry="2" />
<text  x="55.10" y="895.5" >easyrpg-player</text>
</g>
<g >
<title>sse2_composite_over_8888_8888 (5 samples, 0.07%)</title><rect x="65.3" y="853" width="0.8" height="15.0" fill="rgb(212,100,24)" rx="2" ry="2" />
<text  x="68.30" y="863.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="932.0" y="293" width="0.1" height="15.0" fill="rgb(220,199,46)" rx="2" ry="2" />
<text  x="934.98" y="303.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipToNextConditional (2 samples, 0.03%)</title><rect x="69.1" y="853" width="0.3" height="15.0" fill="rgb(244,180,14)" rx="2" ry="2" />
<text  x="72.10" y="863.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="223.1" y="501" width="0.2" height="15.0" fill="rgb(232,67,7)" rx="2" ry="2" />
<text  x="226.12" y="511.5" ></text>
</g>
<g >
<title>Bitmap::pixels (2 samples, 0.03%)</title><rect x="898.8" y="661" width="0.3" height="15.0" fill="rgb(222,144,1)" rx="2" ry="2" />
<text  x="901.80" y="671.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="590.9" y="565" width="0.2" height="15.0" fill="rgb(241,147,16)" rx="2" ry="2" />
<text  x="593.92" y="575.5" ></text>
</g>
<g >
<title>usb_get_urb (1 samples, 0.01%)</title><rect x="775.5" y="389" width="0.1" height="15.0" fill="rgb(234,210,18)" rx="2" ry="2" />
<text  x="778.48" y="399.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="694.3" y="501" width="0.1" height="15.0" fill="rgb(208,140,44)" rx="2" ry="2" />
<text  x="697.26" y="511.5" ></text>
</g>
<g >
<title>set_task_cpu (1 samples, 0.01%)</title><rect x="49.8" y="677" width="0.1" height="15.0" fill="rgb(236,165,39)" rx="2" ry="2" />
<text  x="52.78" y="687.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (32 samples, 0.45%)</title><rect x="398.4" y="661" width="5.3" height="15.0" fill="rgb(205,50,12)" rx="2" ry="2" />
<text  x="401.44" y="671.5" ></text>
</g>
<g >
<title>Sprite::SetOpacity (2 samples, 0.03%)</title><rect x="968.5" y="677" width="0.3" height="15.0" fill="rgb(211,74,34)" rx="2" ry="2" />
<text  x="971.46" y="687.5" ></text>
</g>
<g >
<title>operator!= (1 samples, 0.01%)</title><rect x="358.2" y="677" width="0.1" height="15.0" fill="rgb(228,55,41)" rx="2" ry="2" />
<text  x="361.16" y="687.5" ></text>
</g>
<g >
<title>__atomic_add (8 samples, 0.11%)</title><rect x="667.2" y="469" width="1.3" height="15.0" fill="rgb(240,123,51)" rx="2" ry="2" />
<text  x="670.19" y="479.5" ></text>
</g>
<g >
<title>Sdl2Ui::ProcessActiveEvent (38 samples, 0.53%)</title><rect x="989.9" y="725" width="6.3" height="15.0" fill="rgb(207,164,13)" rx="2" ry="2" />
<text  x="992.92" y="735.5" ></text>
</g>
<g >
<title>irq_entries_start (1 samples, 0.01%)</title><rect x="44.8" y="725" width="0.2" height="15.0" fill="rgb(214,0,35)" rx="2" ry="2" />
<text  x="47.83" y="735.5" ></text>
</g>
<g >
<title>_mm_set_epi32 (1 samples, 0.01%)</title><rect x="326.5" y="565" width="0.1" height="15.0" fill="rgb(241,40,13)" rx="2" ry="2" />
<text  x="329.46" y="575.5" ></text>
</g>
<g >
<title>usb_get_current_frame_number (1 samples, 0.01%)</title><rect x="375.0" y="389" width="0.2" height="15.0" fill="rgb(210,62,21)" rx="2" ry="2" />
<text  x="377.99" y="399.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="888.9" y="421" width="0.2" height="15.0" fill="rgb(244,170,31)" rx="2" ry="2" />
<text  x="891.89" y="431.5" ></text>
</g>
<g >
<title>Scene::MainFunction (6,206 samples, 86.82%)</title><rect x="161.2" y="773" width="1024.5" height="15.0" fill="rgb(223,14,25)" rx="2" ry="2" />
<text  x="164.21" y="783.5" >Scene::MainFunction</text>
</g>
<g >
<title>__find_if&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int&gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;Input::UiSource::Update()::&lt;lambda(int)&gt; &gt; &gt; (2 samples, 0.03%)</title><rect x="373.8" y="645" width="0.4" height="15.0" fill="rgb(243,47,25)" rx="2" ry="2" />
<text  x="376.84" y="655.5" ></text>
</g>
<g >
<title>Game_Map::SetNeedRefresh (2 samples, 0.03%)</title><rect x="522.9" y="645" width="0.3" height="15.0" fill="rgb(213,65,3)" rx="2" ry="2" />
<text  x="525.91" y="655.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="968.6" y="645" width="0.2" height="15.0" fill="rgb(217,201,25)" rx="2" ry="2" />
<text  x="971.63" y="655.5" ></text>
</g>
<g >
<title>Game_Party::UpdateTimers (1 samples, 0.01%)</title><rect x="775.8" y="709" width="0.2" height="15.0" fill="rgb(236,47,12)" rx="2" ry="2" />
<text  x="778.81" y="719.5" ></text>
</g>
<g >
<title>icu_63::ComposeNormalizer2::normalize (1 samples, 0.01%)</title><rect x="63.8" y="853" width="0.2" height="15.0" fill="rgb(214,121,6)" rx="2" ry="2" />
<text  x="66.82" y="863.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="1184.4" y="613" width="0.2" height="15.0" fill="rgb(222,191,21)" rx="2" ry="2" />
<text  x="1187.39" y="623.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;RPG::EventCommand&gt; &gt;::allocate (1 samples, 0.01%)</title><rect x="439.2" y="581" width="0.2" height="15.0" fill="rgb(211,95,33)" rx="2" ry="2" />
<text  x="442.21" y="591.5" ></text>
</g>
<g >
<title>xhci_irq (3 samples, 0.04%)</title><rect x="888.6" y="469" width="0.5" height="15.0" fill="rgb(213,19,45)" rx="2" ry="2" />
<text  x="891.56" y="479.5" ></text>
</g>
<g >
<title>Scene::HasRequestedScene (3 samples, 0.04%)</title><rect x="757.7" y="661" width="0.4" height="15.0" fill="rgb(223,105,15)" rx="2" ry="2" />
<text  x="760.65" y="671.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustParams (1 samples, 0.01%)</title><rect x="58.5" y="853" width="0.2" height="15.0" fill="rgb(245,104,5)" rx="2" ry="2" />
<text  x="61.53" y="863.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (636 samples, 8.90%)</title><rect x="792.8" y="661" width="105.0" height="15.0" fill="rgb(224,163,15)" rx="2" ry="2" />
<text  x="795.81" y="671.5" >pixman_image..</text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.03%)</title><rect x="772.3" y="661" width="0.4" height="15.0" fill="rgb(244,18,17)" rx="2" ry="2" />
<text  x="775.34" y="671.5" ></text>
</g>
<g >
<title>activate_task (1 samples, 0.01%)</title><rect x="377.3" y="373" width="0.2" height="15.0" fill="rgb(235,67,44)" rx="2" ry="2" />
<text  x="380.31" y="383.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="883.4" y="469" width="0.2" height="15.0" fill="rgb(208,37,28)" rx="2" ry="2" />
<text  x="886.44" y="479.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;Drawable*&gt; (1 samples, 0.01%)</title><rect x="372.7" y="565" width="0.1" height="15.0" fill="rgb(253,139,38)" rx="2" ry="2" />
<text  x="375.68" y="575.5" ></text>
</g>
<g >
<title>_mm_cmpeq_epi8 (57 samples, 0.80%)</title><rect x="193.4" y="565" width="9.4" height="15.0" fill="rgb(236,219,3)" rx="2" ry="2" />
<text  x="196.41" y="575.5" ></text>
</g>
<g >
<title>vfs_write (14 samples, 0.20%)</title><rect x="48.8" y="805" width="2.3" height="15.0" fill="rgb(246,197,36)" rx="2" ry="2" />
<text  x="51.79" y="815.5" ></text>
</g>
<g >
<title>do_IRQ (3 samples, 0.04%)</title><rect x="888.6" y="581" width="0.5" height="15.0" fill="rgb(241,63,31)" rx="2" ry="2" />
<text  x="891.56" y="591.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (3 samples, 0.04%)</title><rect x="668.7" y="469" width="0.5" height="15.0" fill="rgb(229,207,20)" rx="2" ry="2" />
<text  x="671.67" y="479.5" ></text>
</g>
<g >
<title>snd_complete_urb (2 samples, 0.03%)</title><rect x="1162.4" y="405" width="0.4" height="15.0" fill="rgb(252,30,22)" rx="2" ry="2" />
<text  x="1165.43" y="415.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="1185.0" y="661" width="0.2" height="15.0" fill="rgb(215,222,48)" rx="2" ry="2" />
<text  x="1188.05" y="671.5" ></text>
</g>
<g >
<title>usb_hcd_submit_urb (1 samples, 0.01%)</title><rect x="614.2" y="325" width="0.2" height="15.0" fill="rgb(229,90,18)" rx="2" ry="2" />
<text  x="617.20" y="335.5" ></text>
</g>
<g >
<title>usb_submit_urb (1 samples, 0.01%)</title><rect x="276.6" y="293" width="0.2" height="15.0" fill="rgb(239,187,8)" rx="2" ry="2" />
<text  x="279.61" y="303.5" ></text>
</g>
<g >
<title>dequeue_task_fair (2 samples, 0.03%)</title><rect x="990.6" y="533" width="0.3" height="15.0" fill="rgb(226,107,15)" rx="2" ry="2" />
<text  x="993.58" y="543.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="706.5" y="565" width="0.1" height="15.0" fill="rgb(223,101,10)" rx="2" ry="2" />
<text  x="709.48" y="575.5" ></text>
</g>
<g >
<title>do_nanosleep (2 samples, 0.03%)</title><rect x="1188.8" y="805" width="0.4" height="15.0" fill="rgb(229,228,53)" rx="2" ry="2" />
<text  x="1191.84" y="815.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="598.2" y="469" width="0.1" height="15.0" fill="rgb(228,104,5)" rx="2" ry="2" />
<text  x="601.18" y="479.5" ></text>
</g>
<g >
<title>__libc_start_main (6,376 samples, 89.20%)</title><rect x="133.5" y="853" width="1052.5" height="15.0" fill="rgb(251,209,2)" rx="2" ry="2" />
<text  x="136.48" y="863.5" >__libc_start_main</text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator= (1 samples, 0.01%)</title><rect x="439.2" y="629" width="0.2" height="15.0" fill="rgb(235,201,34)" rx="2" ry="2" />
<text  x="442.21" y="639.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="964.5" y="645" width="0.2" height="15.0" fill="rgb(237,199,38)" rx="2" ry="2" />
<text  x="967.50" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="60.5" y="821" width="0.2" height="15.0" fill="rgb(250,103,53)" rx="2" ry="2" />
<text  x="63.51" y="831.5" ></text>
</g>
<g >
<title>SDL_JoystickUpdate_REAL (4 samples, 0.06%)</title><rect x="993.4" y="677" width="0.6" height="15.0" fill="rgb(205,76,36)" rx="2" ry="2" />
<text  x="996.39" y="687.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.01%)</title><rect x="374.2" y="693" width="0.1" height="15.0" fill="rgb(230,12,32)" rx="2" ry="2" />
<text  x="377.17" y="703.5" ></text>
</g>
<g >
<title>__libc_calloc (1 samples, 0.01%)</title><rect x="87.3" y="853" width="0.1" height="15.0" fill="rgb(214,97,8)" rx="2" ry="2" />
<text  x="90.26" y="863.5" ></text>
</g>
<g >
<title>__sys_recvmsg (6 samples, 0.08%)</title><rect x="994.9" y="469" width="1.0" height="15.0" fill="rgb(210,227,8)" rx="2" ry="2" />
<text  x="997.87" y="479.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="883.4" y="549" width="0.2" height="15.0" fill="rgb(235,49,26)" rx="2" ry="2" />
<text  x="886.44" y="559.5" ></text>
</g>
<g >
<title>_pixman_bits_image_setup_accessors (2 samples, 0.03%)</title><rect x="794.8" y="629" width="0.3" height="15.0" fill="rgb(206,63,43)" rx="2" ry="2" />
<text  x="797.80" y="639.5" ></text>
</g>
<g >
<title>available_idle_cpu (1 samples, 0.01%)</title><rect x="49.5" y="645" width="0.1" height="15.0" fill="rgb(251,157,32)" rx="2" ry="2" />
<text  x="52.45" y="655.5" ></text>
</g>
<g >
<title>Bitmap::Blit (641 samples, 8.97%)</title><rect x="792.2" y="677" width="105.8" height="15.0" fill="rgb(250,179,29)" rx="2" ry="2" />
<text  x="795.15" y="687.5" >Bitmap::Blit</text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="967.5" y="501" width="0.1" height="15.0" fill="rgb(240,69,44)" rx="2" ry="2" />
<text  x="970.47" y="511.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.01%)</title><rect x="888.9" y="357" width="0.2" height="15.0" fill="rgb(229,228,48)" rx="2" ry="2" />
<text  x="891.89" y="367.5" ></text>
</g>
<g >
<title>pixman_image_unref (124 samples, 1.73%)</title><rect x="670.2" y="453" width="20.4" height="15.0" fill="rgb(211,99,22)" rx="2" ry="2" />
<text  x="673.16" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (2 samples, 0.03%)</title><rect x="599.2" y="517" width="0.3" height="15.0" fill="rgb(231,0,8)" rx="2" ry="2" />
<text  x="602.17" y="527.5" ></text>
</g>
<g >
<title>Window_Base::Update (1 samples, 0.01%)</title><rect x="987.1" y="661" width="0.2" height="15.0" fill="rgb(230,204,15)" rx="2" ry="2" />
<text  x="990.12" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="994.2" y="597" width="0.3" height="15.0" fill="rgb(205,109,25)" rx="2" ry="2" />
<text  x="997.21" y="607.5" ></text>
</g>
<g >
<title>Cache::System (1 samples, 0.01%)</title><rect x="987.1" y="629" width="0.2" height="15.0" fill="rgb(252,96,46)" rx="2" ry="2" />
<text  x="990.12" y="639.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.01%)</title><rect x="989.8" y="533" width="0.1" height="15.0" fill="rgb(251,142,48)" rx="2" ry="2" />
<text  x="992.76" y="543.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.01%)</title><rect x="990.1" y="581" width="0.2" height="15.0" fill="rgb(250,112,34)" rx="2" ry="2" />
<text  x="993.09" y="591.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="754.5" y="613" width="0.2" height="15.0" fill="rgb(254,147,45)" rx="2" ry="2" />
<text  x="757.52" y="623.5" ></text>
</g>
<g >
<title>SDL_UnlockTexture_REAL (54 samples, 0.76%)</title><rect x="1163.1" y="693" width="8.9" height="15.0" fill="rgb(221,224,48)" rx="2" ry="2" />
<text  x="1166.09" y="703.5" ></text>
</g>
<g >
<title>GetRandomUnsigned (4 samples, 0.06%)</title><rect x="569.6" y="629" width="0.7" height="15.0" fill="rgb(241,150,49)" rx="2" ry="2" />
<text  x="572.63" y="639.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="319.5" y="549" width="0.2" height="15.0" fill="rgb(232,202,29)" rx="2" ry="2" />
<text  x="322.53" y="559.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (1 samples, 0.01%)</title><rect x="375.3" y="629" width="0.2" height="15.0" fill="rgb(221,61,14)" rx="2" ry="2" />
<text  x="378.32" y="639.5" ></text>
</g>
<g >
<title>handle_irq (2 samples, 0.03%)</title><rect x="472.7" y="613" width="0.4" height="15.0" fill="rgb(234,136,44)" rx="2" ry="2" />
<text  x="475.72" y="623.5" ></text>
</g>
<g >
<title>SDL_SendMouseMotion (1 samples, 0.01%)</title><rect x="988.4" y="661" width="0.2" height="15.0" fill="rgb(225,54,7)" rx="2" ry="2" />
<text  x="991.44" y="671.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (2 samples, 0.03%)</title><rect x="925.5" y="341" width="0.4" height="15.0" fill="rgb(206,160,6)" rx="2" ry="2" />
<text  x="928.54" y="351.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="561.9" y="581" width="0.1" height="15.0" fill="rgb(237,114,51)" rx="2" ry="2" />
<text  x="564.87" y="591.5" ></text>
</g>
<g >
<title>unlink_chunk (1 samples, 0.01%)</title><rect x="67.3" y="853" width="0.1" height="15.0" fill="rgb(229,202,9)" rx="2" ry="2" />
<text  x="70.28" y="863.5" ></text>
</g>
<g >
<title>over_2x128 (96 samples, 1.34%)</title><rect x="233.2" y="597" width="15.8" height="15.0" fill="rgb(224,42,27)" rx="2" ry="2" />
<text  x="236.19" y="607.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="468.1" y="485" width="0.2" height="15.0" fill="rgb(231,157,9)" rx="2" ry="2" />
<text  x="471.10" y="495.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (1 samples, 0.01%)</title><rect x="990.4" y="549" width="0.2" height="15.0" fill="rgb(245,39,19)" rx="2" ry="2" />
<text  x="993.42" y="559.5" ></text>
</g>
<g >
<title>Player::IsRPG2k3E (2 samples, 0.03%)</title><rect x="707.1" y="645" width="0.4" height="15.0" fill="rgb(210,93,17)" rx="2" ry="2" />
<text  x="710.14" y="655.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (2 samples, 0.03%)</title><rect x="78.2" y="853" width="0.3" height="15.0" fill="rgb(236,148,26)" rx="2" ry="2" />
<text  x="81.18" y="863.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (170 samples, 2.38%)</title><rect x="666.2" y="549" width="28.1" height="15.0" fill="rgb(211,8,34)" rx="2" ry="2" />
<text  x="669.20" y="559.5" >s..</text>
</g>
<g >
<title>over_2x128 (5 samples, 0.07%)</title><rect x="342.6" y="565" width="0.9" height="15.0" fill="rgb(225,224,11)" rx="2" ry="2" />
<text  x="345.64" y="575.5" ></text>
</g>
<g >
<title>generic_file_read_iter (2 samples, 0.03%)</title><rect x="47.5" y="741" width="0.3" height="15.0" fill="rgb(246,66,5)" rx="2" ry="2" />
<text  x="50.47" y="751.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="572.9" y="645" width="0.2" height="15.0" fill="rgb(215,27,18)" rx="2" ry="2" />
<text  x="575.93" y="655.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="1185.0" y="645" width="0.2" height="15.0" fill="rgb(218,183,46)" rx="2" ry="2" />
<text  x="1188.05" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.01%)</title><rect x="52.3" y="789" width="0.1" height="15.0" fill="rgb(243,99,52)" rx="2" ry="2" />
<text  x="55.26" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (20 samples, 0.28%)</title><rect x="596.4" y="549" width="3.3" height="15.0" fill="rgb(215,20,3)" rx="2" ry="2" />
<text  x="599.37" y="559.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.01%)</title><rect x="67.1" y="853" width="0.2" height="15.0" fill="rgb(206,204,9)" rx="2" ry="2" />
<text  x="70.12" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.01%)</title><rect x="584.2" y="645" width="0.1" height="15.0" fill="rgb(254,102,54)" rx="2" ry="2" />
<text  x="587.15" y="655.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.01%)</title><rect x="319.4" y="229" width="0.1" height="15.0" fill="rgb(246,122,52)" rx="2" ry="2" />
<text  x="322.36" y="239.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="598.2" y="421" width="0.1" height="15.0" fill="rgb(254,149,29)" rx="2" ry="2" />
<text  x="601.18" y="431.5" ></text>
</g>
<g >
<title>std::move&lt;Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="372.7" y="613" width="0.1" height="15.0" fill="rgb(209,116,39)" rx="2" ry="2" />
<text  x="375.68" y="623.5" ></text>
</g>
<g >
<title>prepare_playback_urb (1 samples, 0.01%)</title><rect x="539.4" y="357" width="0.2" height="15.0" fill="rgb(220,71,42)" rx="2" ry="2" />
<text  x="542.42" y="367.5" ></text>
</g>
<g >
<title>FileFinder::FindDefault (1 samples, 0.01%)</title><rect x="587.3" y="565" width="0.2" height="15.0" fill="rgb(218,142,39)" rx="2" ry="2" />
<text  x="590.29" y="575.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="613.9" y="453" width="0.1" height="15.0" fill="rgb(254,191,43)" rx="2" ry="2" />
<text  x="616.87" y="463.5" ></text>
</g>
<g >
<title>do_nanosleep (19 samples, 0.27%)</title><rect x="990.1" y="597" width="3.1" height="15.0" fill="rgb(251,3,7)" rx="2" ry="2" />
<text  x="993.09" y="607.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char32_t&gt;::assign (1 samples, 0.01%)</title><rect x="706.6" y="597" width="0.2" height="15.0" fill="rgb(240,60,46)" rx="2" ry="2" />
<text  x="709.64" y="607.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="709.0" y="597" width="0.1" height="15.0" fill="rgb(208,190,47)" rx="2" ry="2" />
<text  x="711.95" y="607.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="319.5" y="469" width="0.2" height="15.0" fill="rgb(232,185,28)" rx="2" ry="2" />
<text  x="322.53" y="479.5" ></text>
</g>
<g >
<title>Bitmap::EffectsBlit (1 samples, 0.01%)</title><rect x="67.6" y="853" width="0.2" height="15.0" fill="rgb(245,176,52)" rx="2" ry="2" />
<text  x="70.61" y="863.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (3 samples, 0.04%)</title><rect x="705.8" y="613" width="0.5" height="15.0" fill="rgb(214,141,10)" rx="2" ry="2" />
<text  x="708.82" y="623.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.01%)</title><rect x="598.8" y="501" width="0.2" height="15.0" fill="rgb(238,74,43)" rx="2" ry="2" />
<text  x="601.84" y="511.5" ></text>
</g>
<g >
<title>handle_irq_event (10 samples, 0.14%)</title><rect x="1161.1" y="581" width="1.7" height="15.0" fill="rgb(207,171,50)" rx="2" ry="2" />
<text  x="1164.11" y="591.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (8 samples, 0.11%)</title><rect x="657.9" y="501" width="1.4" height="15.0" fill="rgb(249,74,22)" rx="2" ry="2" />
<text  x="660.94" y="511.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="614.2" y="437" width="0.2" height="15.0" fill="rgb(225,137,46)" rx="2" ry="2" />
<text  x="617.20" y="447.5" ></text>
</g>
<g >
<title>_mm_store_si128 (2 samples, 0.03%)</title><rect x="301.2" y="597" width="0.3" height="15.0" fill="rgb(222,132,9)" rx="2" ry="2" />
<text  x="304.20" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.01%)</title><rect x="587.3" y="309" width="0.2" height="15.0" fill="rgb(209,55,23)" rx="2" ry="2" />
<text  x="590.29" y="319.5" ></text>
</g>
<g >
<title>xhci_msi_irq (2 samples, 0.03%)</title><rect x="319.2" y="437" width="0.3" height="15.0" fill="rgb(223,92,2)" rx="2" ry="2" />
<text  x="322.20" y="447.5" ></text>
</g>
<g >
<title>SDL_IOReady (1 samples, 0.01%)</title><rect x="994.5" y="645" width="0.2" height="15.0" fill="rgb(208,170,24)" rx="2" ry="2" />
<text  x="997.54" y="655.5" ></text>
</g>
<g >
<title>malloc@plt (2 samples, 0.03%)</title><rect x="621.0" y="421" width="0.3" height="15.0" fill="rgb(236,29,20)" rx="2" ry="2" />
<text  x="623.97" y="431.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (5 samples, 0.07%)</title><rect x="967.6" y="597" width="0.9" height="15.0" fill="rgb(218,142,4)" rx="2" ry="2" />
<text  x="970.64" y="607.5" ></text>
</g>
<g >
<title>pixman_region32_init (2 samples, 0.03%)</title><rect x="349.1" y="613" width="0.3" height="15.0" fill="rgb(217,6,4)" rx="2" ry="2" />
<text  x="352.08" y="623.5" ></text>
</g>
<g >
<title>_pixman_image_validate (1 samples, 0.01%)</title><rect x="75.2" y="853" width="0.2" height="15.0" fill="rgb(211,213,27)" rx="2" ry="2" />
<text  x="78.21" y="863.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="289.3" y="469" width="0.2" height="15.0" fill="rgb(234,199,41)" rx="2" ry="2" />
<text  x="292.32" y="479.5" ></text>
</g>
<g >
<title>Input::UiSource::Update (1 samples, 0.01%)</title><rect x="71.9" y="853" width="0.2" height="15.0" fill="rgb(232,218,34)" rx="2" ry="2" />
<text  x="74.91" y="863.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.07%)</title><rect x="374.3" y="693" width="0.9" height="15.0" fill="rgb(250,122,10)" rx="2" ry="2" />
<text  x="377.33" y="703.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (3 samples, 0.04%)</title><rect x="663.4" y="549" width="0.5" height="15.0" fill="rgb(215,228,17)" rx="2" ry="2" />
<text  x="666.39" y="559.5" ></text>
</g>
<g >
<title>tty_write (1 samples, 0.01%)</title><rect x="587.3" y="245" width="0.2" height="15.0" fill="rgb(238,137,29)" rx="2" ry="2" />
<text  x="590.29" y="255.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="467.8" y="629" width="0.1" height="15.0" fill="rgb(208,111,39)" rx="2" ry="2" />
<text  x="470.77" y="639.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.01%)</title><rect x="47.1" y="773" width="0.2" height="15.0" fill="rgb(237,163,13)" rx="2" ry="2" />
<text  x="50.14" y="783.5" ></text>
</g>
<g >
<title>_mm_mullo_epi16 (3 samples, 0.04%)</title><rect x="343.6" y="549" width="0.5" height="15.0" fill="rgb(251,48,16)" rx="2" ry="2" />
<text  x="346.63" y="559.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="967.5" y="485" width="0.1" height="15.0" fill="rgb(209,150,32)" rx="2" ry="2" />
<text  x="970.47" y="495.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="572.9" y="517" width="0.2" height="15.0" fill="rgb(217,138,8)" rx="2" ry="2" />
<text  x="575.93" y="527.5" ></text>
</g>
<g >
<title>DynamicFormat::code_alpha (1 samples, 0.01%)</title><rect x="941.6" y="501" width="0.1" height="15.0" fill="rgb(226,68,34)" rx="2" ry="2" />
<text  x="944.55" y="511.5" ></text>
</g>
<g >
<title>Sprite::SetFlashEffect (1 samples, 0.01%)</title><rect x="962.4" y="661" width="0.1" height="15.0" fill="rgb(207,46,2)" rx="2" ry="2" />
<text  x="965.35" y="671.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="590.9" y="581" width="0.2" height="15.0" fill="rgb(211,191,51)" rx="2" ry="2" />
<text  x="593.92" y="591.5" ></text>
</g>
<g >
<title>Bitmap::Clear (2 samples, 0.03%)</title><rect x="898.5" y="661" width="0.3" height="15.0" fill="rgb(236,210,3)" rx="2" ry="2" />
<text  x="901.47" y="671.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="344.9" y="389" width="0.2" height="15.0" fill="rgb(225,18,13)" rx="2" ry="2" />
<text  x="347.95" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (21 samples, 0.29%)</title><rect x="618.3" y="469" width="3.5" height="15.0" fill="rgb(247,128,28)" rx="2" ry="2" />
<text  x="621.32" y="479.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="570.3" y="613" width="0.2" height="15.0" fill="rgb(249,41,24)" rx="2" ry="2" />
<text  x="573.29" y="623.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="24.9" y="869" width="0.1" height="15.0" fill="rgb(217,167,47)" rx="2" ry="2" />
<text  x="27.86" y="879.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="775.5" y="661" width="0.1" height="15.0" fill="rgb(242,88,37)" rx="2" ry="2" />
<text  x="778.48" y="671.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (6 samples, 0.08%)</title><rect x="352.7" y="645" width="1.0" height="15.0" fill="rgb(218,61,47)" rx="2" ry="2" />
<text  x="355.71" y="655.5" ></text>
</g>
<g >
<title>__fdget_pos (2 samples, 0.03%)</title><rect x="48.5" y="805" width="0.3" height="15.0" fill="rgb(237,89,17)" rx="2" ry="2" />
<text  x="51.46" y="815.5" ></text>
</g>
<g >
<title>xhci_irq (4 samples, 0.06%)</title><rect x="538.9" y="501" width="0.7" height="15.0" fill="rgb(209,207,2)" rx="2" ry="2" />
<text  x="541.92" y="511.5" ></text>
</g>
<g >
<title>Window_Message::Update (5 samples, 0.07%)</title><rect x="987.0" y="709" width="0.8" height="15.0" fill="rgb(215,18,0)" rx="2" ry="2" />
<text  x="989.95" y="719.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="775.5" y="485" width="0.1" height="15.0" fill="rgb(214,140,50)" rx="2" ry="2" />
<text  x="778.48" y="495.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="584.0" y="549" width="0.2" height="15.0" fill="rgb(208,202,29)" rx="2" ry="2" />
<text  x="586.99" y="559.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="940.7" y="453" width="0.2" height="15.0" fill="rgb(214,137,12)" rx="2" ry="2" />
<text  x="943.73" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.03%)</title><rect x="599.8" y="549" width="0.4" height="15.0" fill="rgb(229,88,52)" rx="2" ry="2" />
<text  x="602.83" y="559.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="74.5" y="853" width="0.2" height="15.0" fill="rgb(230,122,23)" rx="2" ry="2" />
<text  x="77.55" y="863.5" ></text>
</g>
<g >
<title>pix_multiply_1x128 (1 samples, 0.01%)</title><rect x="342.3" y="549" width="0.2" height="15.0" fill="rgb(213,68,51)" rx="2" ry="2" />
<text  x="345.31" y="559.5" ></text>
</g>
<g >
<title>GL_ActivateRenderer (1 samples, 0.01%)</title><rect x="1163.1" y="645" width="0.2" height="15.0" fill="rgb(219,196,51)" rx="2" ry="2" />
<text  x="1166.09" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::operator[] (4 samples, 0.06%)</title><rect x="768.5" y="661" width="0.7" height="15.0" fill="rgb(236,8,10)" rx="2" ry="2" />
<text  x="771.55" y="671.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (1 samples, 0.01%)</title><rect x="985.5" y="661" width="0.1" height="15.0" fill="rgb(250,176,26)" rx="2" ry="2" />
<text  x="988.46" y="671.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (344 samples, 4.81%)</title><rect x="899.3" y="613" width="56.8" height="15.0" fill="rgb(245,98,4)" rx="2" ry="2" />
<text  x="902.29" y="623.5" >std::_..</text>
</g>
<g >
<title>_int_malloc (56 samples, 0.78%)</title><rect x="946.8" y="501" width="9.3" height="15.0" fill="rgb(228,30,2)" rx="2" ry="2" />
<text  x="949.84" y="511.5" ></text>
</g>
<g >
<title>_mm_unpacklo_epi8 (5 samples, 0.07%)</title><rect x="329.9" y="549" width="0.9" height="15.0" fill="rgb(242,89,1)" rx="2" ry="2" />
<text  x="332.93" y="559.5" ></text>
</g>
<g >
<title>pixman_image_get_height (1 samples, 0.01%)</title><rect x="964.3" y="629" width="0.2" height="15.0" fill="rgb(240,24,4)" rx="2" ry="2" />
<text  x="967.33" y="639.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="941.2" y="437" width="0.2" height="15.0" fill="rgb(208,10,6)" rx="2" ry="2" />
<text  x="944.22" y="447.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="122.1" y="805" width="0.2" height="15.0" fill="rgb(240,189,2)" rx="2" ry="2" />
<text  x="125.09" y="815.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="351.1" y="613" width="0.1" height="15.0" fill="rgb(252,114,15)" rx="2" ry="2" />
<text  x="354.06" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (7 samples, 0.10%)</title><rect x="658.1" y="421" width="1.2" height="15.0" fill="rgb(233,145,47)" rx="2" ry="2" />
<text  x="661.11" y="431.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (1 samples, 0.01%)</title><rect x="775.6" y="693" width="0.2" height="15.0" fill="rgb(247,45,2)" rx="2" ry="2" />
<text  x="778.65" y="703.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="348.9" y="389" width="0.2" height="15.0" fill="rgb(217,212,3)" rx="2" ry="2" />
<text  x="351.91" y="399.5" ></text>
</g>
<g >
<title>pixman_image_composite32@plt (1 samples, 0.01%)</title><rect x="349.4" y="629" width="0.2" height="15.0" fill="rgb(212,23,52)" rx="2" ry="2" />
<text  x="352.41" y="639.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="319.4" y="325" width="0.1" height="15.0" fill="rgb(212,31,23)" rx="2" ry="2" />
<text  x="322.36" y="335.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="932.0" y="325" width="0.1" height="15.0" fill="rgb(240,39,34)" rx="2" ry="2" />
<text  x="934.98" y="335.5" ></text>
</g>
<g >
<title>in_over_2x128 (139 samples, 1.94%)</title><rect x="233.2" y="613" width="22.9" height="15.0" fill="rgb(229,90,20)" rx="2" ry="2" />
<text  x="236.19" y="623.5" >i..</text>
</g>
<g >
<title>SDL_CalculateBlit (1 samples, 0.01%)</title><rect x="998.8" y="661" width="0.2" height="15.0" fill="rgb(215,119,6)" rx="2" ry="2" />
<text  x="1001.84" y="671.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (1 samples, 0.01%)</title><rect x="987.1" y="549" width="0.2" height="15.0" fill="rgb(243,44,47)" rx="2" ry="2" />
<text  x="990.12" y="559.5" ></text>
</g>
<g >
<title>x86_pmu_enable (7 samples, 0.10%)</title><rect x="849.9" y="437" width="1.2" height="15.0" fill="rgb(252,126,5)" rx="2" ry="2" />
<text  x="852.93" y="447.5" ></text>
</g>
<g >
<title>analyze_extent (72 samples, 1.01%)</title><rect x="308.0" y="613" width="11.9" height="15.0" fill="rgb(229,154,3)" rx="2" ry="2" />
<text  x="310.97" y="623.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1 samples, 0.01%)</title><rect x="50.9" y="757" width="0.2" height="15.0" fill="rgb(208,213,14)" rx="2" ry="2" />
<text  x="53.94" y="767.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (156 samples, 2.18%)</title><rect x="668.5" y="501" width="25.8" height="15.0" fill="rgb(236,5,46)" rx="2" ry="2" />
<text  x="671.51" y="511.5" >s..</text>
</g>
<g >
<title>__perf_event_task_sched_in (12 samples, 0.17%)</title><rect x="991.1" y="533" width="2.0" height="15.0" fill="rgb(214,88,27)" rx="2" ry="2" />
<text  x="994.08" y="543.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="290.0" y="597" width="0.1" height="15.0" fill="rgb(225,225,53)" rx="2" ry="2" />
<text  x="292.98" y="607.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="52.3" y="645" width="0.1" height="15.0" fill="rgb(220,119,12)" rx="2" ry="2" />
<text  x="55.26" y="655.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="223.4" y="549" width="0.2" height="15.0" fill="rgb(206,173,26)" rx="2" ry="2" />
<text  x="226.45" y="559.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="940.7" y="437" width="0.2" height="15.0" fill="rgb(214,196,17)" rx="2" ry="2" />
<text  x="943.73" y="447.5" ></text>
</g>
<g >
<title>usb_hcd_get_frame_number (1 samples, 0.01%)</title><rect x="725.8" y="341" width="0.2" height="15.0" fill="rgb(215,204,19)" rx="2" ry="2" />
<text  x="728.79" y="351.5" ></text>
</g>
<g >
<title>_mm_shufflelo_epi16 (8 samples, 0.11%)</title><rect x="231.7" y="597" width="1.3" height="15.0" fill="rgb(228,151,8)" rx="2" ry="2" />
<text  x="234.70" y="607.5" ></text>
</g>
<g >
<title>__exchange_and_add (11 samples, 0.15%)</title><rect x="690.8" y="437" width="1.8" height="15.0" fill="rgb(246,112,28)" rx="2" ry="2" />
<text  x="693.79" y="447.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="584.0" y="581" width="0.2" height="15.0" fill="rgb(247,149,30)" rx="2" ry="2" />
<text  x="586.99" y="591.5" ></text>
</g>
<g >
<title>Sprite::SetWaverPhase (4 samples, 0.06%)</title><rect x="969.5" y="677" width="0.6" height="15.0" fill="rgb(233,77,13)" rx="2" ry="2" />
<text  x="972.45" y="687.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="1184.4" y="581" width="0.2" height="15.0" fill="rgb(218,66,49)" rx="2" ry="2" />
<text  x="1187.39" y="591.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (2 samples, 0.03%)</title><rect x="85.1" y="709" width="0.3" height="15.0" fill="rgb(244,227,35)" rx="2" ry="2" />
<text  x="88.11" y="719.5" ></text>
</g>
<g >
<title>SDL_Delay_REAL (15 samples, 0.21%)</title><rect x="375.2" y="741" width="2.4" height="15.0" fill="rgb(243,47,15)" rx="2" ry="2" />
<text  x="378.16" y="751.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="571.3" y="437" width="0.1" height="15.0" fill="rgb(220,131,28)" rx="2" ry="2" />
<text  x="574.28" y="447.5" ></text>
</g>
<g >
<title>deactivate_task (7 samples, 0.10%)</title><rect x="32.0" y="725" width="1.1" height="15.0" fill="rgb(232,40,10)" rx="2" ry="2" />
<text  x="34.96" y="735.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="753.0" y="581" width="0.2" height="15.0" fill="rgb(251,141,5)" rx="2" ry="2" />
<text  x="756.03" y="591.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (4 samples, 0.06%)</title><rect x="620.3" y="421" width="0.7" height="15.0" fill="rgb(223,219,29)" rx="2" ry="2" />
<text  x="623.30" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (3 samples, 0.04%)</title><rect x="66.3" y="853" width="0.5" height="15.0" fill="rgb(240,213,5)" rx="2" ry="2" />
<text  x="69.29" y="863.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="754.5" y="501" width="0.2" height="15.0" fill="rgb(226,181,19)" rx="2" ry="2" />
<text  x="757.52" y="511.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="964.5" y="565" width="0.2" height="15.0" fill="rgb(210,3,52)" rx="2" ry="2" />
<text  x="967.50" y="575.5" ></text>
</g>
<g >
<title>__atomic_add (4 samples, 0.06%)</title><rect x="353.0" y="597" width="0.7" height="15.0" fill="rgb(210,87,9)" rx="2" ry="2" />
<text  x="356.04" y="607.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="344.9" y="517" width="0.2" height="15.0" fill="rgb(240,176,31)" rx="2" ry="2" />
<text  x="347.95" y="527.5" ></text>
</g>
<g >
<title>Game_Picture::ShowParams::~ShowParams (8 samples, 0.11%)</title><rect x="704.3" y="645" width="1.4" height="15.0" fill="rgb(247,34,15)" rx="2" ry="2" />
<text  x="707.33" y="655.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**&gt; (1 samples, 0.01%)</title><rect x="352.5" y="645" width="0.2" height="15.0" fill="rgb(229,42,37)" rx="2" ry="2" />
<text  x="355.54" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (8 samples, 0.11%)</title><rect x="704.3" y="613" width="1.4" height="15.0" fill="rgb(253,223,47)" rx="2" ry="2" />
<text  x="707.33" y="623.5" ></text>
</g>
<g >
<title>_pixman_image_fini (101 samples, 1.41%)</title><rect x="674.0" y="437" width="16.6" height="15.0" fill="rgb(232,174,12)" rx="2" ry="2" />
<text  x="676.96" y="447.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (2 samples, 0.03%)</title><rect x="1188.8" y="725" width="0.4" height="15.0" fill="rgb(249,0,47)" rx="2" ry="2" />
<text  x="1191.84" y="735.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="239.1" y="565" width="0.2" height="15.0" fill="rgb(250,18,19)" rx="2" ry="2" />
<text  x="242.13" y="575.5" ></text>
</g>
<g >
<title>prepare_playback_urb (1 samples, 0.01%)</title><rect x="319.4" y="277" width="0.1" height="15.0" fill="rgb(216,69,46)" rx="2" ry="2" />
<text  x="322.36" y="287.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="661.9" y="245" width="0.2" height="15.0" fill="rgb(245,121,16)" rx="2" ry="2" />
<text  x="664.91" y="255.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="319.5" y="517" width="0.2" height="15.0" fill="rgb(216,187,12)" rx="2" ry="2" />
<text  x="322.53" y="527.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (9 samples, 0.13%)</title><rect x="359.3" y="677" width="1.5" height="15.0" fill="rgb(224,183,28)" rx="2" ry="2" />
<text  x="362.31" y="687.5" ></text>
</g>
<g >
<title>Cache::System (3 samples, 0.04%)</title><rect x="987.3" y="629" width="0.5" height="15.0" fill="rgb(205,4,28)" rx="2" ry="2" />
<text  x="990.28" y="639.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="673.3" y="309" width="0.2" height="15.0" fill="rgb(226,141,49)" rx="2" ry="2" />
<text  x="676.30" y="319.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="689.8" y="213" width="0.2" height="15.0" fill="rgb(251,159,12)" rx="2" ry="2" />
<text  x="692.80" y="223.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="570.3" y="597" width="0.2" height="15.0" fill="rgb(218,36,16)" rx="2" ry="2" />
<text  x="573.29" y="607.5" ></text>
</g>
<g >
<title>Player::Run (6,376 samples, 89.20%)</title><rect x="133.5" y="821" width="1052.5" height="15.0" fill="rgb(248,23,23)" rx="2" ry="2" />
<text  x="136.48" y="831.5" >Player::Run</text>
</g>
<g >
<title>pollwake (9 samples, 0.13%)</title><rect x="49.1" y="725" width="1.5" height="15.0" fill="rgb(216,156,42)" rx="2" ry="2" />
<text  x="52.12" y="735.5" ></text>
</g>
<g >
<title>tcache_put (1 samples, 0.01%)</title><rect x="351.4" y="597" width="0.2" height="15.0" fill="rgb(205,18,46)" rx="2" ry="2" />
<text  x="354.39" y="607.5" ></text>
</g>
<g >
<title>interrupt_entry (1 samples, 0.01%)</title><rect x="161.0" y="693" width="0.2" height="15.0" fill="rgb(246,226,4)" rx="2" ry="2" />
<text  x="164.05" y="703.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="30.8" y="773" width="0.3" height="15.0" fill="rgb(232,33,17)" rx="2" ry="2" />
<text  x="33.80" y="783.5" ></text>
</g>
<g >
<title>in_over_2x128 (9 samples, 0.13%)</title><rect x="342.6" y="581" width="1.5" height="15.0" fill="rgb(240,86,3)" rx="2" ry="2" />
<text  x="345.64" y="591.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="375.0" y="613" width="0.2" height="15.0" fill="rgb(236,18,51)" rx="2" ry="2" />
<text  x="377.99" y="623.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="561.9" y="533" width="0.1" height="15.0" fill="rgb(231,122,27)" rx="2" ry="2" />
<text  x="564.87" y="543.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="677.4" y="357" width="0.2" height="15.0" fill="rgb(221,66,46)" rx="2" ry="2" />
<text  x="680.42" y="367.5" ></text>
</g>
<g >
<title>pixman_image_get_height (2 samples, 0.03%)</title><rect x="665.7" y="517" width="0.3" height="15.0" fill="rgb(227,5,1)" rx="2" ry="2" />
<text  x="668.70" y="527.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="375.0" y="597" width="0.2" height="15.0" fill="rgb(206,143,15)" rx="2" ry="2" />
<text  x="377.99" y="607.5" ></text>
</g>
<g >
<title>Bitmap::EffectsBlit (1,129 samples, 15.79%)</title><rect x="166.2" y="677" width="186.3" height="15.0" fill="rgb(252,123,3)" rx="2" ry="2" />
<text  x="169.17" y="687.5" >Bitmap::EffectsBlit</text>
</g>
<g >
<title>Game_Interpreter::GetFrame (7 samples, 0.10%)</title><rect x="751.9" y="645" width="1.1" height="15.0" fill="rgb(248,54,50)" rx="2" ry="2" />
<text  x="754.87" y="655.5" ></text>
</g>
<g >
<title>rh_timer_func (1 samples, 0.01%)</title><rect x="613.9" y="389" width="0.1" height="15.0" fill="rgb(240,45,16)" rx="2" ry="2" />
<text  x="616.87" y="399.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2 samples, 0.03%)</title><rect x="85.4" y="821" width="0.4" height="15.0" fill="rgb(223,79,49)" rx="2" ry="2" />
<text  x="88.44" y="831.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="988.6" y="597" width="0.2" height="15.0" fill="rgb(227,99,42)" rx="2" ry="2" />
<text  x="991.60" y="607.5" ></text>
</g>
<g >
<title>std::mersenne_twister_engine&lt;unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul&gt;::operator() (3 samples, 0.04%)</title><rect x="569.8" y="597" width="0.5" height="15.0" fill="rgb(229,102,18)" rx="2" ry="2" />
<text  x="572.79" y="607.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="694.3" y="517" width="0.1" height="15.0" fill="rgb(219,49,36)" rx="2" ry="2" />
<text  x="697.26" y="527.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::swap (2 samples, 0.03%)</title><rect x="699.9" y="613" width="0.3" height="15.0" fill="rgb(206,82,27)" rx="2" ry="2" />
<text  x="702.87" y="623.5" ></text>
</g>
<g >
<title>usb_hcd_get_frame_number (1 samples, 0.01%)</title><rect x="375.0" y="373" width="0.2" height="15.0" fill="rgb(215,96,43)" rx="2" ry="2" />
<text  x="377.99" y="383.5" ></text>
</g>
<g >
<title>_pixman_image_init (3 samples, 0.04%)</title><rect x="940.9" y="469" width="0.5" height="15.0" fill="rgb(206,137,28)" rx="2" ry="2" />
<text  x="943.89" y="479.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.01%)</title><rect x="121.8" y="613" width="0.1" height="15.0" fill="rgb(216,127,33)" rx="2" ry="2" />
<text  x="124.76" y="623.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="361.5" y="581" width="0.1" height="15.0" fill="rgb(254,108,51)" rx="2" ry="2" />
<text  x="364.46" y="591.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 2ul, 3ul&gt;::__less (1 samples, 0.01%)</title><rect x="631.7" y="405" width="0.2" height="15.0" fill="rgb(241,170,48)" rx="2" ry="2" />
<text  x="634.70" y="415.5" ></text>
</g>
<g >
<title>usb_submit_urb (1 samples, 0.01%)</title><rect x="782.4" y="421" width="0.2" height="15.0" fill="rgb(230,31,6)" rx="2" ry="2" />
<text  x="785.41" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2 samples, 0.03%)</title><rect x="60.2" y="853" width="0.3" height="15.0" fill="rgb(235,130,36)" rx="2" ry="2" />
<text  x="63.18" y="863.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="344.9" y="549" width="0.2" height="15.0" fill="rgb(216,100,52)" rx="2" ry="2" />
<text  x="347.95" y="559.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="171.8" y="533" width="0.1" height="15.0" fill="rgb(225,179,44)" rx="2" ry="2" />
<text  x="174.78" y="543.5" ></text>
</g>
<g >
<title>over_1x128 (1 samples, 0.01%)</title><rect x="233.0" y="597" width="0.2" height="15.0" fill="rgb(206,48,45)" rx="2" ry="2" />
<text  x="236.02" y="607.5" ></text>
</g>
<g >
<title>std::__find_if&lt;int const*, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (1 samples, 0.01%)</title><rect x="587.0" y="613" width="0.1" height="15.0" fill="rgb(241,18,1)" rx="2" ry="2" />
<text  x="589.96" y="623.5" ></text>
</g>
<g >
<title>finish_task_switch (10 samples, 0.14%)</title><rect x="375.8" y="597" width="1.7" height="15.0" fill="rgb(231,95,19)" rx="2" ry="2" />
<text  x="378.82" y="607.5" ></text>
</g>
<g >
<title>_mm_adds_epu16 (8 samples, 0.11%)</title><rect x="249.0" y="581" width="1.4" height="15.0" fill="rgb(244,208,6)" rx="2" ry="2" />
<text  x="252.04" y="591.5" ></text>
</g>
<g >
<title>std::_Temporary_buffer&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable*&gt;::_Temporary_buffer (1 samples, 0.01%)</title><rect x="368.2" y="677" width="0.2" height="15.0" fill="rgb(221,140,43)" rx="2" ry="2" />
<text  x="371.23" y="687.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash (1 samples, 0.01%)</title><rect x="987.4" y="501" width="0.2" height="15.0" fill="rgb(222,38,46)" rx="2" ry="2" />
<text  x="990.45" y="511.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="754.5" y="629" width="0.2" height="15.0" fill="rgb(254,8,39)" rx="2" ry="2" />
<text  x="757.52" y="639.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (11 samples, 0.15%)</title><rect x="694.4" y="549" width="1.8" height="15.0" fill="rgb(230,182,30)" rx="2" ry="2" />
<text  x="697.43" y="559.5" ></text>
</g>
<g >
<title>_mm_adds_epu16 (14 samples, 0.20%)</title><rect x="274.5" y="565" width="2.3" height="15.0" fill="rgb(219,125,26)" rx="2" ry="2" />
<text  x="277.46" y="575.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="375.3" y="517" width="0.2" height="15.0" fill="rgb(213,19,50)" rx="2" ry="2" />
<text  x="378.32" y="527.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="956.4" y="613" width="0.2" height="15.0" fill="rgb(226,102,31)" rx="2" ry="2" />
<text  x="959.41" y="623.5" ></text>
</g>
<g >
<title>_mm_xor_si128 (5 samples, 0.07%)</title><rect x="239.3" y="565" width="0.8" height="15.0" fill="rgb(205,88,50)" rx="2" ry="2" />
<text  x="242.30" y="575.5" ></text>
</g>
<g >
<title>handle_irq_event (2 samples, 0.03%)</title><rect x="758.1" y="597" width="0.4" height="15.0" fill="rgb(239,25,26)" rx="2" ry="2" />
<text  x="761.15" y="607.5" ></text>
</g>
<g >
<title>std::__unguarded_linear_insert&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Val_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (3 samples, 0.04%)</title><rect x="370.7" y="613" width="0.5" height="15.0" fill="rgb(251,102,4)" rx="2" ry="2" />
<text  x="373.70" y="623.5" ></text>
</g>
<g >
<title>Opacity::IsSplit (1 samples, 0.01%)</title><rect x="792.6" y="645" width="0.2" height="15.0" fill="rgb(208,134,5)" rx="2" ry="2" />
<text  x="795.65" y="655.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="835.1" y="501" width="0.1" height="15.0" fill="rgb(251,134,4)" rx="2" ry="2" />
<text  x="838.08" y="511.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="1172.2" y="677" width="0.3" height="15.0" fill="rgb(224,101,33)" rx="2" ry="2" />
<text  x="1175.17" y="687.5" ></text>
</g>
<g >
<title>Tone::Tone (2 samples, 0.03%)</title><rect x="957.6" y="661" width="0.3" height="15.0" fill="rgb(205,37,41)" rx="2" ry="2" />
<text  x="960.57" y="671.5" ></text>
</g>
<g >
<title>core_combine_over_u_pixel_sse2 (1 samples, 0.01%)</title><rect x="828.1" y="597" width="0.2" height="15.0" fill="rgb(207,118,50)" rx="2" ry="2" />
<text  x="831.14" y="607.5" ></text>
</g>
<g >
<title>Rect::Rect (1 samples, 0.01%)</title><rect x="357.7" y="677" width="0.1" height="15.0" fill="rgb(242,70,20)" rx="2" ry="2" />
<text  x="360.66" y="687.5" ></text>
</g>
<g >
<title>Bitmap::Init (251 samples, 3.51%)</title><rect x="900.0" y="517" width="41.4" height="15.0" fill="rgb(230,73,37)" rx="2" ry="2" />
<text  x="902.95" y="527.5" >Bit..</text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (9 samples, 0.13%)</title><rect x="610.7" y="485" width="1.5" height="15.0" fill="rgb(223,54,20)" rx="2" ry="2" />
<text  x="613.73" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="618.2" y="485" width="0.1" height="15.0" fill="rgb(236,96,32)" rx="2" ry="2" />
<text  x="621.16" y="495.5" ></text>
</g>
<g >
<title>__fget_light (3 samples, 0.04%)</title><rect x="29.1" y="789" width="0.5" height="15.0" fill="rgb(218,167,13)" rx="2" ry="2" />
<text  x="32.15" y="799.5" ></text>
</g>
<g >
<title>std::__chunk_insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (13 samples, 0.18%)</title><rect x="369.1" y="645" width="2.1" height="15.0" fill="rgb(210,37,44)" rx="2" ry="2" />
<text  x="372.05" y="655.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.01%)</title><rect x="690.6" y="469" width="0.2" height="15.0" fill="rgb(205,198,45)" rx="2" ry="2" />
<text  x="693.63" y="479.5" ></text>
</g>
<g >
<title>__libc_calloc (1 samples, 0.01%)</title><rect x="996.0" y="565" width="0.2" height="15.0" fill="rgb(207,190,9)" rx="2" ry="2" />
<text  x="999.03" y="575.5" ></text>
</g>
<g >
<title>FileRequestAsync::BindStart (494 samples, 6.91%)</title><rect x="614.9" y="613" width="81.5" height="15.0" fill="rgb(225,54,19)" rx="2" ry="2" />
<text  x="617.86" y="623.5" >FileReque..</text>
</g>
<g >
<title>Bitmap::Blit (1 samples, 0.01%)</title><rect x="364.1" y="677" width="0.2" height="15.0" fill="rgb(226,182,54)" rx="2" ry="2" />
<text  x="367.10" y="687.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="165.5" y="533" width="0.2" height="15.0" fill="rgb(206,172,12)" rx="2" ry="2" />
<text  x="168.51" y="543.5" ></text>
</g>
<g >
<title>_int_malloc (3 samples, 0.04%)</title><rect x="61.3" y="853" width="0.5" height="15.0" fill="rgb(227,194,24)" rx="2" ry="2" />
<text  x="64.34" y="863.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (10 samples, 0.14%)</title><rect x="369.1" y="613" width="1.6" height="15.0" fill="rgb(246,148,54)" rx="2" ry="2" />
<text  x="372.05" y="623.5" ></text>
</g>
<g >
<title>Bitmap::GetRect (9 samples, 0.13%)</title><rect x="664.7" y="549" width="1.5" height="15.0" fill="rgb(254,76,37)" rx="2" ry="2" />
<text  x="667.71" y="559.5" ></text>
</g>
<g >
<title>Game_Switches_Class::Get (1 samples, 0.01%)</title><rect x="70.3" y="853" width="0.1" height="15.0" fill="rgb(213,196,18)" rx="2" ry="2" />
<text  x="73.25" y="863.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="290.0" y="549" width="0.1" height="15.0" fill="rgb(237,34,33)" rx="2" ry="2" />
<text  x="292.98" y="559.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="775.5" y="645" width="0.1" height="15.0" fill="rgb(231,160,4)" rx="2" ry="2" />
<text  x="778.48" y="655.5" ></text>
</g>
<g >
<title>new_do_write (1 samples, 0.01%)</title><rect x="587.3" y="405" width="0.2" height="15.0" fill="rgb(246,170,40)" rx="2" ry="2" />
<text  x="590.29" y="415.5" ></text>
</g>
<g >
<title>__GI___poll (1 samples, 0.01%)</title><rect x="988.6" y="629" width="0.2" height="15.0" fill="rgb(216,102,54)" rx="2" ry="2" />
<text  x="991.60" y="639.5" ></text>
</g>
<g >
<title>Scene_Map::DrawBackground (1 samples, 0.01%)</title><rect x="164.8" y="709" width="0.2" height="15.0" fill="rgb(217,60,49)" rx="2" ry="2" />
<text  x="167.85" y="719.5" ></text>
</g>
<g >
<title>Player::MainLoop (6,375 samples, 89.19%)</title><rect x="133.6" y="805" width="1052.4" height="15.0" fill="rgb(209,130,44)" rx="2" ry="2" />
<text  x="136.65" y="815.5" >Player::MainLoop</text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="301.0" y="565" width="0.2" height="15.0" fill="rgb(211,214,13)" rx="2" ry="2" />
<text  x="304.04" y="575.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.03%)</title><rect x="925.5" y="405" width="0.4" height="15.0" fill="rgb(253,13,42)" rx="2" ry="2" />
<text  x="928.54" y="415.5" ></text>
</g>
<g >
<title>Input::UiSource::Update (4 samples, 0.06%)</title><rect x="373.5" y="725" width="0.7" height="15.0" fill="rgb(207,56,8)" rx="2" ry="2" />
<text  x="376.51" y="735.5" ></text>
</g>
<g >
<title>Game_Interpreter::ReserveSubcommandIndex (11 samples, 0.15%)</title><rect x="453.6" y="629" width="1.8" height="15.0" fill="rgb(250,75,51)" rx="2" ry="2" />
<text  x="456.57" y="639.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="964.5" y="533" width="0.2" height="15.0" fill="rgb(223,215,13)" rx="2" ry="2" />
<text  x="967.50" y="543.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (7 samples, 0.10%)</title><rect x="371.5" y="597" width="1.2" height="15.0" fill="rgb(239,192,7)" rx="2" ry="2" />
<text  x="374.53" y="607.5" ></text>
</g>
<g >
<title>native_write_msr (7 samples, 0.10%)</title><rect x="849.9" y="389" width="1.2" height="15.0" fill="rgb(222,100,43)" rx="2" ry="2" />
<text  x="852.93" y="399.5" ></text>
</g>
<g >
<title>xhci_irq (2 samples, 0.03%)</title><rect x="703.8" y="437" width="0.4" height="15.0" fill="rgb(215,174,35)" rx="2" ry="2" />
<text  x="706.84" y="447.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (5 samples, 0.07%)</title><rect x="353.7" y="597" width="0.8" height="15.0" fill="rgb(252,55,33)" rx="2" ry="2" />
<text  x="356.70" y="607.5" ></text>
</g>
<g >
<title>SDL_IOReady (1 samples, 0.01%)</title><rect x="988.6" y="661" width="0.2" height="15.0" fill="rgb(240,85,19)" rx="2" ry="2" />
<text  x="991.60" y="671.5" ></text>
</g>
<g >
<title>handle_irq_event (2 samples, 0.03%)</title><rect x="319.2" y="485" width="0.3" height="15.0" fill="rgb(214,118,0)" rx="2" ry="2" />
<text  x="322.20" y="495.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="344.9" y="485" width="0.2" height="15.0" fill="rgb(228,122,17)" rx="2" ry="2" />
<text  x="347.95" y="495.5" ></text>
</g>
<g >
<title>unlink_chunk (3 samples, 0.04%)</title><rect x="673.5" y="421" width="0.5" height="15.0" fill="rgb(222,184,47)" rx="2" ry="2" />
<text  x="676.46" y="431.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="472.7" y="517" width="0.2" height="15.0" fill="rgb(229,154,10)" rx="2" ry="2" />
<text  x="475.72" y="527.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="344.9" y="405" width="0.2" height="15.0" fill="rgb(240,50,3)" rx="2" ry="2" />
<text  x="347.95" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="1171.8" y="453" width="0.2" height="15.0" fill="rgb(217,69,26)" rx="2" ry="2" />
<text  x="1174.84" y="463.5" ></text>
</g>
<g >
<title>handle_irq (3 samples, 0.04%)</title><rect x="121.4" y="821" width="0.5" height="15.0" fill="rgb(226,165,41)" rx="2" ry="2" />
<text  x="124.43" y="831.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="887.4" y="533" width="0.2" height="15.0" fill="rgb(235,122,10)" rx="2" ry="2" />
<text  x="890.41" y="543.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (1 samples, 0.01%)</title><rect x="352.5" y="677" width="0.2" height="15.0" fill="rgb(230,73,5)" rx="2" ry="2" />
<text  x="355.54" y="687.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (1 samples, 0.01%)</title><rect x="373.0" y="597" width="0.2" height="15.0" fill="rgb(205,15,35)" rx="2" ry="2" />
<text  x="376.01" y="607.5" ></text>
</g>
<g >
<title>SdlMixerAudio::Update (3 samples, 0.04%)</title><rect x="1172.0" y="725" width="0.5" height="15.0" fill="rgb(211,36,25)" rx="2" ry="2" />
<text  x="1175.01" y="735.5" ></text>
</g>
<g >
<title>expand_alpha_2x128 (19 samples, 0.27%)</title><rect x="229.9" y="613" width="3.1" height="15.0" fill="rgb(206,107,50)" rx="2" ry="2" />
<text  x="232.89" y="623.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (4 samples, 0.06%)</title><rect x="996.9" y="677" width="0.6" height="15.0" fill="rgb(246,164,8)" rx="2" ry="2" />
<text  x="999.86" y="687.5" ></text>
</g>
<g >
<title>__pollwait (2 samples, 0.03%)</title><rect x="29.6" y="805" width="0.4" height="15.0" fill="rgb(250,201,41)" rx="2" ry="2" />
<text  x="32.64" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;Drawable**, Drawable**&gt; (7 samples, 0.10%)</title><rect x="371.5" y="613" width="1.2" height="15.0" fill="rgb(212,185,46)" rx="2" ry="2" />
<text  x="374.53" y="623.5" ></text>
</g>
</g>
</svg>
