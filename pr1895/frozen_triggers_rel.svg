<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="870.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="853" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="853" > </text>
<g id="frames">
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="918.2" y="533" width="0.1" height="15.0" fill="rgb(254,93,41)" rx="2" ry="2" />
<text  x="921.20" y="543.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.01%)</title><rect x="997.4" y="373" width="0.1" height="15.0" fill="rgb(206,54,19)" rx="2" ry="2" />
<text  x="1000.40" y="383.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (3 samples, 0.04%)</title><rect x="71.0" y="773" width="0.4" height="15.0" fill="rgb(214,185,39)" rx="2" ry="2" />
<text  x="73.98" y="783.5" ></text>
</g>
<g >
<title>__sys_recvmsg (4 samples, 0.05%)</title><rect x="1001.7" y="389" width="0.6" height="15.0" fill="rgb(216,112,39)" rx="2" ry="2" />
<text  x="1004.74" y="399.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (9 samples, 0.11%)</title><rect x="996.0" y="533" width="1.3" height="15.0" fill="rgb(225,62,39)" rx="2" ry="2" />
<text  x="999.00" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (20 samples, 0.24%)</title><rect x="359.0" y="533" width="2.8" height="15.0" fill="rgb(213,173,38)" rx="2" ry="2" />
<text  x="362.04" y="543.5" ></text>
</g>
<g >
<title>__next_timer_interrupt (1 samples, 0.01%)</title><rect x="849.1" y="389" width="0.1" height="15.0" fill="rgb(223,33,4)" rx="2" ry="2" />
<text  x="852.09" y="399.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustParams (1 samples, 0.01%)</title><rect x="592.3" y="549" width="0.1" height="15.0" fill="rgb(226,0,26)" rx="2" ry="2" />
<text  x="595.29" y="559.5" ></text>
</g>
<g >
<title>FileRequestAsync::BindStart (1,845 samples, 21.92%)</title><rect x="619.8" y="533" width="258.6" height="15.0" fill="rgb(230,139,13)" rx="2" ry="2" />
<text  x="622.76" y="543.5" >FileRequestAsync::BindStart</text>
</g>
<g >
<title>Sprite::SetOx (1 samples, 0.01%)</title><rect x="893.2" y="533" width="0.2" height="15.0" fill="rgb(232,29,23)" rx="2" ry="2" />
<text  x="896.25" y="543.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.01%)</title><rect x="48.7" y="693" width="0.1" height="15.0" fill="rgb(207,75,53)" rx="2" ry="2" />
<text  x="51.69" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (2 samples, 0.02%)</title><rect x="887.8" y="485" width="0.3" height="15.0" fill="rgb(239,99,2)" rx="2" ry="2" />
<text  x="890.78" y="495.5" ></text>
</g>
<g >
<title>__libc_calloc (149 samples, 1.77%)</title><rect x="798.2" y="245" width="20.9" height="15.0" fill="rgb(235,194,11)" rx="2" ry="2" />
<text  x="801.21" y="255.5" ></text>
</g>
<g >
<title>TilemapLayer::DrawTile (1 samples, 0.01%)</title><rect x="353.4" y="613" width="0.2" height="15.0" fill="rgb(225,14,36)" rx="2" ry="2" />
<text  x="356.43" y="623.5" ></text>
</g>
<g >
<title>Game_Map::ScrollRight (1 samples, 0.01%)</title><rect x="65.8" y="773" width="0.1" height="15.0" fill="rgb(236,106,29)" rx="2" ry="2" />
<text  x="68.79" y="783.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="747.7" y="213" width="0.2" height="15.0" fill="rgb(240,48,48)" rx="2" ry="2" />
<text  x="750.75" y="223.5" ></text>
</g>
<g >
<title>prepare_ring (1 samples, 0.01%)</title><rect x="747.7" y="37" width="0.2" height="15.0" fill="rgb(230,43,2)" rx="2" ry="2" />
<text  x="750.75" y="47.5" ></text>
</g>
<g >
<title>setup_accessors (3 samples, 0.04%)</title><rect x="683.4" y="405" width="0.4" height="15.0" fill="rgb(230,54,53)" rx="2" ry="2" />
<text  x="686.40" y="415.5" ></text>
</g>
<g >
<title>Cache::Picture (1 samples, 0.01%)</title><rect x="620.7" y="501" width="0.2" height="15.0" fill="rgb(238,146,9)" rx="2" ry="2" />
<text  x="623.75" y="511.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.06%)</title><rect x="77.3" y="773" width="0.7" height="15.0" fill="rgb(205,54,30)" rx="2" ry="2" />
<text  x="80.28" y="783.5" ></text>
</g>
<g >
<title>_int_free (2 samples, 0.02%)</title><rect x="875.4" y="389" width="0.3" height="15.0" fill="rgb(231,172,12)" rx="2" ry="2" />
<text  x="878.45" y="399.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="375.0" y="277" width="0.2" height="15.0" fill="rgb(254,102,32)" rx="2" ry="2" />
<text  x="378.02" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare@plt (1 samples, 0.01%)</title><rect x="671.8" y="437" width="0.1" height="15.0" fill="rgb(217,147,50)" rx="2" ry="2" />
<text  x="674.77" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (1 samples, 0.01%)</title><rect x="583.7" y="533" width="0.2" height="15.0" fill="rgb(234,26,51)" rx="2" ry="2" />
<text  x="586.74" y="543.5" ></text>
</g>
<g >
<title>__vfs_read (9 samples, 0.11%)</title><rect x="46.4" y="709" width="1.3" height="15.0" fill="rgb(235,56,27)" rx="2" ry="2" />
<text  x="49.45" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="995.2" y="549" width="0.2" height="15.0" fill="rgb(205,21,21)" rx="2" ry="2" />
<text  x="998.16" y="559.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="31.4" y="677" width="0.2" height="15.0" fill="rgb(247,33,14)" rx="2" ry="2" />
<text  x="34.45" y="687.5" ></text>
</g>
<g >
<title>_mm_movemask_epi8 (23 samples, 0.27%)</title><rect x="748.0" y="373" width="3.2" height="15.0" fill="rgb(205,66,10)" rx="2" ry="2" />
<text  x="751.03" y="383.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.01%)</title><rect x="1002.0" y="197" width="0.2" height="15.0" fill="rgb(206,201,7)" rx="2" ry="2" />
<text  x="1005.02" y="207.5" ></text>
</g>
<g >
<title>save_128_aligned (2 samples, 0.02%)</title><rect x="292.2" y="533" width="0.3" height="15.0" fill="rgb(248,206,51)" rx="2" ry="2" />
<text  x="295.17" y="543.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="117.9" y="741" width="0.2" height="15.0" fill="rgb(210,68,22)" rx="2" ry="2" />
<text  x="120.94" y="751.5" ></text>
</g>
<g >
<title>SDL_GetTicks_REAL (1 samples, 0.01%)</title><rect x="51.5" y="789" width="0.1" height="15.0" fill="rgb(253,188,27)" rx="2" ry="2" />
<text  x="54.49" y="799.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="375.0" y="357" width="0.2" height="15.0" fill="rgb(205,48,28)" rx="2" ry="2" />
<text  x="378.02" y="367.5" ></text>
</g>
<g >
<title>Sprite::SetWaverDepth (2 samples, 0.02%)</title><rect x="836.1" y="469" width="0.2" height="15.0" fill="rgb(213,200,45)" rx="2" ry="2" />
<text  x="839.06" y="479.5" ></text>
</g>
<g >
<title>__libc_recvmsg (7 samples, 0.08%)</title><rect x="996.1" y="469" width="1.0" height="15.0" fill="rgb(229,98,27)" rx="2" ry="2" />
<text  x="999.14" y="479.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="82.6" y="773" width="0.2" height="15.0" fill="rgb(223,164,1)" rx="2" ry="2" />
<text  x="85.61" y="783.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="995.4" y="453" width="0.2" height="15.0" fill="rgb(251,181,46)" rx="2" ry="2" />
<text  x="998.44" y="463.5" ></text>
</g>
<g >
<title>SDL_GetTicks_REAL (2 samples, 0.02%)</title><rect x="57.7" y="773" width="0.2" height="15.0" fill="rgb(218,185,52)" rx="2" ry="2" />
<text  x="60.66" y="783.5" ></text>
</g>
<g >
<title>pixman_image_create_solid_fill (2 samples, 0.02%)</title><rect x="292.5" y="565" width="0.2" height="15.0" fill="rgb(230,146,28)" rx="2" ry="2" />
<text  x="295.45" y="575.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="58.9" y="773" width="0.3" height="15.0" fill="rgb(241,200,30)" rx="2" ry="2" />
<text  x="61.92" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (4 samples, 0.05%)</title><rect x="667.4" y="357" width="0.6" height="15.0" fill="rgb(225,218,42)" rx="2" ry="2" />
<text  x="670.42" y="367.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="50.5" y="757" width="0.2" height="15.0" fill="rgb(251,85,23)" rx="2" ry="2" />
<text  x="53.51" y="767.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="563.7" y="469" width="0.1" height="15.0" fill="rgb(236,60,36)" rx="2" ry="2" />
<text  x="566.69" y="479.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (5 samples, 0.06%)</title><rect x="120.9" y="773" width="0.7" height="15.0" fill="rgb(209,61,9)" rx="2" ry="2" />
<text  x="123.88" y="783.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="1000.5" y="469" width="0.3" height="15.0" fill="rgb(253,64,19)" rx="2" ry="2" />
<text  x="1003.48" y="479.5" ></text>
</g>
<g >
<title>__wake_up_common (8 samples, 0.10%)</title><rect x="48.8" y="661" width="1.2" height="15.0" fill="rgb(250,111,27)" rx="2" ry="2" />
<text  x="51.83" y="671.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="44.9" y="453" width="0.1" height="15.0" fill="rgb(231,219,25)" rx="2" ry="2" />
<text  x="47.90" y="463.5" ></text>
</g>
<g >
<title>Game_Interpreter::ValueOrVariable (29 samples, 0.34%)</title><rect x="592.4" y="565" width="4.1" height="15.0" fill="rgb(214,80,32)" rx="2" ry="2" />
<text  x="595.43" y="575.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (10 samples, 0.12%)</title><rect x="341.9" y="581" width="1.4" height="15.0" fill="rgb(252,61,21)" rx="2" ry="2" />
<text  x="344.94" y="591.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="747.7" y="181" width="0.2" height="15.0" fill="rgb(235,72,19)" rx="2" ry="2" />
<text  x="750.75" y="191.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (21 samples, 0.25%)</title><rect x="612.2" y="373" width="2.9" height="15.0" fill="rgb(214,35,31)" rx="2" ry="2" />
<text  x="615.20" y="383.5" ></text>
</g>
<g >
<title>Sprite::GetZ (1 samples, 0.01%)</title><rect x="351.6" y="629" width="0.1" height="15.0" fill="rgb(219,15,28)" rx="2" ry="2" />
<text  x="354.61" y="639.5" ></text>
</g>
<g >
<title>poll (2 samples, 0.02%)</title><rect x="1000.5" y="517" width="0.3" height="15.0" fill="rgb(208,215,50)" rx="2" ry="2" />
<text  x="1003.48" y="527.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="276.2" y="421" width="0.1" height="15.0" fill="rgb(247,12,52)" rx="2" ry="2" />
<text  x="279.19" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (8 samples, 0.10%)</title><rect x="636.6" y="357" width="1.1" height="15.0" fill="rgb(242,136,37)" rx="2" ry="2" />
<text  x="639.59" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.01%)</title><rect x="45.7" y="661" width="0.2" height="15.0" fill="rgb(227,129,10)" rx="2" ry="2" />
<text  x="48.74" y="671.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="747.7" y="149" width="0.2" height="15.0" fill="rgb(215,107,7)" rx="2" ry="2" />
<text  x="750.75" y="159.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;long&gt; (1 samples, 0.01%)</title><rect x="76.7" y="773" width="0.2" height="15.0" fill="rgb(247,149,33)" rx="2" ry="2" />
<text  x="79.72" y="783.5" ></text>
</g>
<g >
<title>SDLAudioP2 (295 samples, 3.50%)</title><rect x="10.0" y="805" width="41.4" height="15.0" fill="rgb(234,135,18)" rx="2" ry="2" />
<text  x="13.00" y="815.5" >SDL..</text>
</g>
<g >
<title>Game_Picture::UpdateSprite (94 samples, 1.12%)</title><rect x="881.2" y="549" width="13.2" height="15.0" fill="rgb(206,141,33)" rx="2" ry="2" />
<text  x="884.19" y="559.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (159 samples, 1.89%)</title><rect x="854.0" y="469" width="22.3" height="15.0" fill="rgb(224,77,19)" rx="2" ry="2" />
<text  x="857.00" y="479.5" >s..</text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (1 samples, 0.01%)</title><rect x="826.8" y="421" width="0.1" height="15.0" fill="rgb(225,50,50)" rx="2" ry="2" />
<text  x="829.80" y="431.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandControlVariables (676 samples, 8.03%)</title><rect x="475.2" y="581" width="94.8" height="15.0" fill="rgb(253,213,52)" rx="2" ry="2" />
<text  x="478.24" y="591.5" >Game_Interp..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (4 samples, 0.05%)</title><rect x="667.4" y="373" width="0.6" height="15.0" fill="rgb(253,88,54)" rx="2" ry="2" />
<text  x="670.42" y="383.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="563.7" y="533" width="0.1" height="15.0" fill="rgb(230,105,13)" rx="2" ry="2" />
<text  x="566.69" y="543.5" ></text>
</g>
<g >
<title>pixman_image_get_width@plt (1 samples, 0.01%)</title><rect x="833.4" y="421" width="0.1" height="15.0" fill="rgb(247,153,6)" rx="2" ry="2" />
<text  x="836.39" y="431.5" ></text>
</g>
<g >
<title>run_rebalance_domains (2 samples, 0.02%)</title><rect x="1166.3" y="501" width="0.3" height="15.0" fill="rgb(232,145,6)" rx="2" ry="2" />
<text  x="1169.31" y="511.5" ></text>
</g>
<g >
<title>do_nanosleep (54 samples, 0.64%)</title><rect x="367.7" y="565" width="7.6" height="15.0" fill="rgb(222,170,52)" rx="2" ry="2" />
<text  x="370.73" y="575.5" ></text>
</g>
<g >
<title>AsyncHandler::IsImportantFilePending (178 samples, 2.11%)</title><rect x="126.9" y="677" width="25.0" height="15.0" fill="rgb(215,152,19)" rx="2" ry="2" />
<text  x="129.91" y="687.5" >A..</text>
</g>
<g >
<title>__kmalloc (1 samples, 0.01%)</title><rect x="1167.4" y="261" width="0.2" height="15.0" fill="rgb(213,114,15)" rx="2" ry="2" />
<text  x="1170.43" y="271.5" ></text>
</g>
<g >
<title>[libGLdispatch.so.0.0.0] (1 samples, 0.01%)</title><rect x="1177.0" y="597" width="0.1" height="15.0" fill="rgb(228,30,24)" rx="2" ry="2" />
<text  x="1179.96" y="607.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~tuple (5 samples, 0.06%)</title><rect x="667.3" y="437" width="0.7" height="15.0" fill="rgb(234,153,45)" rx="2" ry="2" />
<text  x="670.28" y="447.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (6 samples, 0.07%)</title><rect x="1001.7" y="517" width="0.9" height="15.0" fill="rgb(250,177,26)" rx="2" ry="2" />
<text  x="1004.74" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (1 samples, 0.01%)</title><rect x="1001.0" y="501" width="0.2" height="15.0" fill="rgb(240,108,41)" rx="2" ry="2" />
<text  x="1004.04" y="511.5" ></text>
</g>
<g >
<title>Bitmap::GetOperator (1 samples, 0.01%)</title><rect x="681.9" y="453" width="0.1" height="15.0" fill="rgb(230,76,34)" rx="2" ry="2" />
<text  x="684.86" y="463.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.01%)</title><rect x="232.5" y="341" width="0.1" height="15.0" fill="rgb(206,31,34)" rx="2" ry="2" />
<text  x="235.46" y="351.5" ></text>
</g>
<g >
<title>__fdget_pos (1 samples, 0.01%)</title><rect x="46.0" y="741" width="0.2" height="15.0" fill="rgb(205,160,6)" rx="2" ry="2" />
<text  x="49.03" y="751.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (4 samples, 0.05%)</title><rect x="32.6" y="645" width="0.5" height="15.0" fill="rgb(211,8,37)" rx="2" ry="2" />
<text  x="35.57" y="655.5" ></text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (2 samples, 0.02%)</title><rect x="968.7" y="597" width="0.2" height="15.0" fill="rgb(247,71,53)" rx="2" ry="2" />
<text  x="971.66" y="607.5" ></text>
</g>
<g >
<title>sock_poll (3 samples, 0.04%)</title><rect x="45.5" y="725" width="0.4" height="15.0" fill="rgb(219,17,52)" rx="2" ry="2" />
<text  x="48.46" y="735.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.01%)</title><rect x="1184.3" y="501" width="0.1" height="15.0" fill="rgb(223,66,44)" rx="2" ry="2" />
<text  x="1187.25" y="511.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="375.0" y="501" width="0.2" height="15.0" fill="rgb(244,163,19)" rx="2" ry="2" />
<text  x="378.02" y="511.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (10 samples, 0.12%)</title><rect x="833.5" y="437" width="1.4" height="15.0" fill="rgb(225,176,31)" rx="2" ry="2" />
<text  x="836.53" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::CommonEvent, std::allocator&lt;RPG::CommonEvent&gt; &gt;::size (2 samples, 0.02%)</title><rect x="965.7" y="533" width="0.3" height="15.0" fill="rgb(218,4,17)" rx="2" ry="2" />
<text  x="968.72" y="543.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (10 samples, 0.12%)</title><rect x="636.3" y="373" width="1.4" height="15.0" fill="rgb(241,153,35)" rx="2" ry="2" />
<text  x="639.31" y="383.5" ></text>
</g>
<g >
<title>__exchange_and_add (6 samples, 0.07%)</title><rect x="343.6" y="501" width="0.9" height="15.0" fill="rgb(220,101,16)" rx="2" ry="2" />
<text  x="346.62" y="511.5" ></text>
</g>
<g >
<title>kick_ilb (1 samples, 0.01%)</title><rect x="538.0" y="405" width="0.2" height="15.0" fill="rgb(211,138,8)" rx="2" ry="2" />
<text  x="541.04" y="415.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="949.3" y="485" width="0.2" height="15.0" fill="rgb(224,184,5)" rx="2" ry="2" />
<text  x="952.32" y="495.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="401.9" y="581" width="0.2" height="15.0" fill="rgb(229,169,25)" rx="2" ry="2" />
<text  x="404.93" y="591.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (1 samples, 0.01%)</title><rect x="580.9" y="565" width="0.2" height="15.0" fill="rgb(207,49,2)" rx="2" ry="2" />
<text  x="583.94" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1 samples, 0.01%)</title><rect x="904.0" y="485" width="0.2" height="15.0" fill="rgb(216,63,24)" rx="2" ry="2" />
<text  x="907.04" y="495.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="408.2" y="549" width="0.2" height="15.0" fill="rgb(207,32,44)" rx="2" ry="2" />
<text  x="411.24" y="559.5" ></text>
</g>
<g >
<title>memset (2 samples, 0.02%)</title><rect x="790.9" y="437" width="0.3" height="15.0" fill="rgb(251,15,50)" rx="2" ry="2" />
<text  x="793.92" y="447.5" ></text>
</g>
<g >
<title>pipe_poll (4 samples, 0.05%)</title><rect x="31.7" y="725" width="0.6" height="15.0" fill="rgb(221,209,49)" rx="2" ry="2" />
<text  x="34.73" y="735.5" ></text>
</g>
<g >
<title>FpsOverlay::Update (1 samples, 0.01%)</title><rect x="366.3" y="645" width="0.2" height="15.0" fill="rgb(222,173,37)" rx="2" ry="2" />
<text  x="369.33" y="655.5" ></text>
</g>
<g >
<title>common_file_perm (3 samples, 0.04%)</title><rect x="48.0" y="661" width="0.4" height="15.0" fill="rgb(207,15,53)" rx="2" ry="2" />
<text  x="50.99" y="671.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (3 samples, 0.04%)</title><rect x="834.5" y="405" width="0.4" height="15.0" fill="rgb(245,205,14)" rx="2" ry="2" />
<text  x="837.51" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (2 samples, 0.02%)</title><rect x="474.8" y="549" width="0.3" height="15.0" fill="rgb(252,195,44)" rx="2" ry="2" />
<text  x="477.82" y="559.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="119.9" y="773" width="0.4" height="15.0" fill="rgb(239,175,9)" rx="2" ry="2" />
<text  x="122.90" y="783.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Set (3 samples, 0.04%)</title><rect x="57.1" y="773" width="0.4" height="15.0" fill="rgb(214,204,38)" rx="2" ry="2" />
<text  x="60.10" y="783.5" ></text>
</g>
<g >
<title>usb_submit_urb (1 samples, 0.01%)</title><rect x="1167.4" y="309" width="0.2" height="15.0" fill="rgb(252,142,11)" rx="2" ry="2" />
<text  x="1170.43" y="319.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;@plt (1 samples, 0.01%)</title><rect x="903.2" y="469" width="0.1" height="15.0" fill="rgb(246,44,53)" rx="2" ry="2" />
<text  x="906.20" y="479.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="244.9" y="325" width="0.2" height="15.0" fill="rgb(242,102,24)" rx="2" ry="2" />
<text  x="247.93" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="154.8" y="549" width="0.1" height="15.0" fill="rgb(245,58,21)" rx="2" ry="2" />
<text  x="157.80" y="559.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="375.0" y="341" width="0.2" height="15.0" fill="rgb(205,30,20)" rx="2" ry="2" />
<text  x="378.02" y="351.5" ></text>
</g>
<g >
<title>pixman_transform_point_31_16_3d (5 samples, 0.06%)</title><rect x="320.6" y="501" width="0.7" height="15.0" fill="rgb(235,205,21)" rx="2" ry="2" />
<text  x="323.63" y="511.5" ></text>
</g>
<g >
<title>unix_write_space (1 samples, 0.01%)</title><rect x="1002.0" y="229" width="0.2" height="15.0" fill="rgb(254,159,4)" rx="2" ry="2" />
<text  x="1005.02" y="239.5" ></text>
</g>
<g >
<title>poll (2 samples, 0.02%)</title><rect x="1001.5" y="549" width="0.2" height="15.0" fill="rgb(252,162,53)" rx="2" ry="2" />
<text  x="1004.46" y="559.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (1 samples, 0.01%)</title><rect x="671.9" y="437" width="0.2" height="15.0" fill="rgb(229,95,13)" rx="2" ry="2" />
<text  x="674.91" y="447.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (3,909 samples, 46.44%)</title><rect x="414.3" y="597" width="547.9" height="15.0" fill="rgb(239,36,4)" rx="2" ry="2" />
<text  x="417.27" y="607.5" >Game_Interpreter::Update</text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="44.9" y="485" width="0.1" height="15.0" fill="rgb(234,149,3)" rx="2" ry="2" />
<text  x="47.90" y="495.5" ></text>
</g>
<g >
<title>over_2x128 (78 samples, 0.93%)</title><rect x="266.4" y="517" width="10.9" height="15.0" fill="rgb(230,155,41)" rx="2" ry="2" />
<text  x="269.38" y="527.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="71.7" y="773" width="0.1" height="15.0" fill="rgb(242,41,33)" rx="2" ry="2" />
<text  x="74.68" y="783.5" ></text>
</g>
<g >
<title>XFreeEventData (1 samples, 0.01%)</title><rect x="995.6" y="565" width="0.1" height="15.0" fill="rgb(211,215,35)" rx="2" ry="2" />
<text  x="998.58" y="575.5" ></text>
</g>
<g >
<title>Scene::MainFunction (7,378 samples, 87.65%)</title><rect x="152.0" y="693" width="1034.2" height="15.0" fill="rgb(253,109,25)" rx="2" ry="2" />
<text  x="155.00" y="703.5" >Scene::MainFunction</text>
</g>
<g >
<title>std::__copy_move_a&lt;true, Drawable**, Drawable**&gt; (1 samples, 0.01%)</title><rect x="363.7" y="501" width="0.1" height="15.0" fill="rgb(221,35,6)" rx="2" ry="2" />
<text  x="366.66" y="511.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="50.7" y="757" width="0.1" height="15.0" fill="rgb(235,215,34)" rx="2" ry="2" />
<text  x="53.65" y="767.5" ></text>
</g>
<g >
<title>pagecache_get_page (3 samples, 0.04%)</title><rect x="46.9" y="629" width="0.4" height="15.0" fill="rgb(233,22,53)" rx="2" ry="2" />
<text  x="49.87" y="639.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.02%)</title><rect x="1176.0" y="597" width="0.3" height="15.0" fill="rgb(205,217,25)" rx="2" ry="2" />
<text  x="1178.98" y="607.5" ></text>
</g>
<g >
<title>posix_get_monotonic_raw (3 samples, 0.04%)</title><rect x="402.1" y="581" width="0.4" height="15.0" fill="rgb(219,103,9)" rx="2" ry="2" />
<text  x="405.07" y="591.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.01%)</title><rect x="60.9" y="773" width="0.1" height="15.0" fill="rgb(248,74,5)" rx="2" ry="2" />
<text  x="63.88" y="783.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="538.0" y="533" width="0.2" height="15.0" fill="rgb(231,131,11)" rx="2" ry="2" />
<text  x="541.04" y="543.5" ></text>
</g>
<g >
<title>fast_composite_scaled_nearest_sse2_8888_n_8888_cover_OVER (128 samples, 1.52%)</title><rect x="319.4" y="533" width="17.9" height="15.0" fill="rgb(231,183,54)" rx="2" ry="2" />
<text  x="322.37" y="543.5" ></text>
</g>
<g >
<title>pixman_image_get_height@plt (1 samples, 0.01%)</title><rect x="988.1" y="581" width="0.2" height="15.0" fill="rgb(253,42,1)" rx="2" ry="2" />
<text  x="991.15" y="591.5" ></text>
</g>
<g >
<title>posix_get_monotonic_raw (13 samples, 0.15%)</title><rect x="398.7" y="565" width="1.8" height="15.0" fill="rgb(252,213,51)" rx="2" ry="2" />
<text  x="401.71" y="575.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (7 samples, 0.08%)</title><rect x="660.7" y="325" width="1.0" height="15.0" fill="rgb(251,87,30)" rx="2" ry="2" />
<text  x="663.70" y="335.5" ></text>
</g>
<g >
<title>Game_Picture::ShowParams::~ShowParams (10 samples, 0.12%)</title><rect x="899.4" y="565" width="1.4" height="15.0" fill="rgb(240,144,18)" rx="2" ry="2" />
<text  x="902.42" y="575.5" ></text>
</g>
<g >
<title>Game_Picture::RequestPictureSprite (2,009 samples, 23.87%)</title><rect x="598.5" y="549" width="281.6" height="15.0" fill="rgb(221,209,35)" rx="2" ry="2" />
<text  x="601.46" y="559.5" >Game_Picture::RequestPictureSprite</text>
</g>
<g >
<title>_mm_shufflelo_epi16 (4 samples, 0.05%)</title><rect x="723.1" y="373" width="0.5" height="15.0" fill="rgb(230,157,40)" rx="2" ry="2" />
<text  x="726.07" y="383.5" ></text>
</g>
<g >
<title>finish_td (2 samples, 0.02%)</title><rect x="1167.3" y="405" width="0.3" height="15.0" fill="rgb(250,9,11)" rx="2" ry="2" />
<text  x="1170.29" y="415.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.01%)</title><rect x="50.2" y="629" width="0.2" height="15.0" fill="rgb(235,97,50)" rx="2" ry="2" />
<text  x="53.23" y="639.5" ></text>
</g>
<g >
<title>_pixman_image_init (13 samples, 0.15%)</title><rect x="796.0" y="261" width="1.8" height="15.0" fill="rgb(248,214,24)" rx="2" ry="2" />
<text  x="798.97" y="271.5" ></text>
</g>
<g >
<title>_mm_store_si128 (8 samples, 0.10%)</title><rect x="782.2" y="373" width="1.1" height="15.0" fill="rgb(217,43,35)" rx="2" ry="2" />
<text  x="785.23" y="383.5" ></text>
</g>
<g >
<title>trigger_load_balance (1 samples, 0.01%)</title><rect x="569.7" y="437" width="0.2" height="15.0" fill="rgb(211,112,42)" rx="2" ry="2" />
<text  x="572.72" y="447.5" ></text>
</g>
<g >
<title>_pixman_image_fini (2 samples, 0.02%)</title><rect x="340.7" y="517" width="0.3" height="15.0" fill="rgb(249,22,9)" rx="2" ry="2" />
<text  x="343.67" y="527.5" ></text>
</g>
<g >
<title>GL_RenderClear (7 samples, 0.08%)</title><rect x="1002.9" y="645" width="0.9" height="15.0" fill="rgb(235,44,4)" rx="2" ry="2" />
<text  x="1005.87" y="655.5" ></text>
</g>
<g >
<title>_pixman_image_fini (3 samples, 0.04%)</title><rect x="59.9" y="773" width="0.4" height="15.0" fill="rgb(228,35,34)" rx="2" ry="2" />
<text  x="62.90" y="783.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="664.1" y="261" width="0.1" height="15.0" fill="rgb(246,106,1)" rx="2" ry="2" />
<text  x="667.06" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.01%)</title><rect x="873.9" y="389" width="0.1" height="15.0" fill="rgb(235,165,33)" rx="2" ry="2" />
<text  x="876.90" y="399.5" ></text>
</g>
<g >
<title>file_update_time (2 samples, 0.02%)</title><rect x="50.1" y="661" width="0.3" height="15.0" fill="rgb(223,64,17)" rx="2" ry="2" />
<text  x="53.09" y="671.5" ></text>
</g>
<g >
<title>_mm_unpackhi_epi8 (2 samples, 0.02%)</title><rect x="783.3" y="373" width="0.3" height="15.0" fill="rgb(206,221,16)" rx="2" ry="2" />
<text  x="786.35" y="383.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.01%)</title><rect x="998.1" y="421" width="0.1" height="15.0" fill="rgb(248,67,25)" rx="2" ry="2" />
<text  x="1001.10" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="1189.2" y="773" width="0.1" height="15.0" fill="rgb(211,183,23)" rx="2" ry="2" />
<text  x="1192.16" y="783.5" ></text>
</g>
<g >
<title>std::stable_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, bool (*)(Drawable const*, Drawable const*)&gt; (4 samples, 0.05%)</title><rect x="154.5" y="629" width="0.6" height="15.0" fill="rgb(225,24,35)" rx="2" ry="2" />
<text  x="157.52" y="639.5" ></text>
</g>
<g >
<title>_pixman_image_fini (92 samples, 1.09%)</title><rect x="861.0" y="341" width="12.9" height="15.0" fill="rgb(215,101,22)" rx="2" ry="2" />
<text  x="864.01" y="351.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (19 samples, 0.23%)</title><rect x="659.0" y="405" width="2.7" height="15.0" fill="rgb(218,61,49)" rx="2" ry="2" />
<text  x="662.01" y="415.5" ></text>
</g>
<g >
<title>sock_poll (1 samples, 0.01%)</title><rect x="45.9" y="741" width="0.1" height="15.0" fill="rgb(217,29,40)" rx="2" ry="2" />
<text  x="48.89" y="751.5" ></text>
</g>
<g >
<title>raise_softirq (1 samples, 0.01%)</title><rect x="25.8" y="645" width="0.2" height="15.0" fill="rgb(254,208,6)" rx="2" ry="2" />
<text  x="28.84" y="655.5" ></text>
</g>
<g >
<title>Scene::HasRequestedScene (5 samples, 0.06%)</title><rect x="948.6" y="581" width="0.7" height="15.0" fill="rgb(221,66,8)" rx="2" ry="2" />
<text  x="951.62" y="591.5" ></text>
</g>
<g >
<title>Game_Character::IsMoving (1 samples, 0.01%)</title><rect x="964.6" y="597" width="0.1" height="15.0" fill="rgb(226,219,35)" rx="2" ry="2" />
<text  x="967.60" y="607.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="273.1" y="453" width="0.2" height="15.0" fill="rgb(224,143,39)" rx="2" ry="2" />
<text  x="276.11" y="463.5" ></text>
</g>
<g >
<title>usb_submit_urb (1 samples, 0.01%)</title><rect x="244.9" y="229" width="0.2" height="15.0" fill="rgb(206,114,0)" rx="2" ry="2" />
<text  x="247.93" y="239.5" ></text>
</g>
<g >
<title>Game_Screen::GetTone (1 samples, 0.01%)</title><rect x="993.1" y="597" width="0.1" height="15.0" fill="rgb(242,203,38)" rx="2" ry="2" />
<text  x="996.05" y="607.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.14%)</title><rect x="904.9" y="517" width="1.7" height="15.0" fill="rgb(241,40,33)" rx="2" ry="2" />
<text  x="907.88" y="527.5" ></text>
</g>
<g >
<title>is_zero (27 samples, 0.32%)</title><rect x="248.6" y="533" width="3.8" height="15.0" fill="rgb(229,102,48)" rx="2" ry="2" />
<text  x="251.58" y="543.5" ></text>
</g>
<g >
<title>sse2_composite_over_8888_8888 (1 samples, 0.01%)</title><rect x="353.4" y="565" width="0.2" height="15.0" fill="rgb(229,30,13)" rx="2" ry="2" />
<text  x="356.43" y="575.5" ></text>
</g>
<g >
<title>pixman_transform_point_31_16 (2 samples, 0.02%)</title><rect x="125.4" y="773" width="0.2" height="15.0" fill="rgb(236,159,22)" rx="2" ry="2" />
<text  x="128.36" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.01%)</title><rect x="475.1" y="549" width="0.1" height="15.0" fill="rgb(241,186,11)" rx="2" ry="2" />
<text  x="478.10" y="559.5" ></text>
</g>
<g >
<title>Scene::OnFinishAsync (3 samples, 0.04%)</title><rect x="1185.8" y="677" width="0.4" height="15.0" fill="rgb(224,84,53)" rx="2" ry="2" />
<text  x="1188.79" y="687.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="375.0" y="293" width="0.2" height="15.0" fill="rgb(229,66,42)" rx="2" ry="2" />
<text  x="378.02" y="303.5" ></text>
</g>
<g >
<title>SDL_CalculateBlitN (1 samples, 0.01%)</title><rect x="1004.0" y="565" width="0.1" height="15.0" fill="rgb(227,58,7)" rx="2" ry="2" />
<text  x="1006.99" y="575.5" ></text>
</g>
<g >
<title>pixman_image_get_height (1 samples, 0.01%)</title><rect x="833.0" y="421" width="0.1" height="15.0" fill="rgb(245,61,12)" rx="2" ry="2" />
<text  x="835.97" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="997.3" y="469" width="0.2" height="15.0" fill="rgb(218,171,45)" rx="2" ry="2" />
<text  x="1000.26" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="1176.0" y="581" width="0.3" height="15.0" fill="rgb(242,225,32)" rx="2" ry="2" />
<text  x="1178.98" y="591.5" ></text>
</g>
<g >
<title>pix_multiply_2x128 (68 samples, 0.81%)</title><rect x="239.0" y="517" width="9.6" height="15.0" fill="rgb(229,134,4)" rx="2" ry="2" />
<text  x="242.05" y="527.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="565.5" y="501" width="0.2" height="15.0" fill="rgb(244,98,29)" rx="2" ry="2" />
<text  x="568.52" y="511.5" ></text>
</g>
<g >
<title>Sprite::GetBitmap (3 samples, 0.04%)</title><rect x="68.7" y="773" width="0.5" height="15.0" fill="rgb(237,98,1)" rx="2" ry="2" />
<text  x="71.73" y="783.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (3 samples, 0.04%)</title><rect x="569.6" y="549" width="0.4" height="15.0" fill="rgb(207,70,1)" rx="2" ry="2" />
<text  x="572.58" y="559.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.01%)</title><rect x="71.5" y="773" width="0.2" height="15.0" fill="rgb(215,44,24)" rx="2" ry="2" />
<text  x="74.54" y="783.5" ></text>
</g>
<g >
<title>native_apic_msr_eoi_write (1 samples, 0.01%)</title><rect x="1166.6" y="549" width="0.1" height="15.0" fill="rgb(219,134,34)" rx="2" ry="2" />
<text  x="1169.59" y="559.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="456.9" y="501" width="0.1" height="15.0" fill="rgb(224,53,2)" rx="2" ry="2" />
<text  x="459.88" y="511.5" ></text>
</g>
<g >
<title>SDL_UDEV_hotplug_update_available (2 samples, 0.02%)</title><rect x="994.7" y="565" width="0.3" height="15.0" fill="rgb(244,60,24)" rx="2" ry="2" />
<text  x="997.74" y="575.5" ></text>
</g>
<g >
<title>over_2x128 (99 samples, 1.18%)</title><rect x="225.2" y="517" width="13.8" height="15.0" fill="rgb(249,79,5)" rx="2" ry="2" />
<text  x="228.17" y="527.5" ></text>
</g>
<g >
<title>schedule (17 samples, 0.20%)</title><rect x="998.1" y="501" width="2.4" height="15.0" fill="rgb(248,17,43)" rx="2" ry="2" />
<text  x="1001.10" y="511.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (1 samples, 0.01%)</title><rect x="851.2" y="437" width="0.1" height="15.0" fill="rgb(223,129,52)" rx="2" ry="2" />
<text  x="854.20" y="447.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.01%)</title><rect x="33.0" y="597" width="0.1" height="15.0" fill="rgb(234,136,27)" rx="2" ry="2" />
<text  x="35.99" y="607.5" ></text>
</g>
<g >
<title>_mm_adds_epu16 (13 samples, 0.15%)</title><rect x="277.3" y="501" width="1.8" height="15.0" fill="rgb(252,5,40)" rx="2" ry="2" />
<text  x="280.32" y="511.5" ></text>
</g>
<g >
<title>inc_deq (1 samples, 0.01%)</title><rect x="117.9" y="597" width="0.2" height="15.0" fill="rgb(254,229,8)" rx="2" ry="2" />
<text  x="120.94" y="607.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.02%)</title><rect x="30.3" y="741" width="0.3" height="15.0" fill="rgb(234,64,27)" rx="2" ry="2" />
<text  x="33.33" y="751.5" ></text>
</g>
<g >
<title>Bitmap::EffectsBlit (1,304 samples, 15.49%)</title><rect x="158.9" y="597" width="182.8" height="15.0" fill="rgb(205,50,31)" rx="2" ry="2" />
<text  x="161.87" y="607.5" >Bitmap::EffectsBlit</text>
</g>
<g >
<title>Game_Switches_Class::Get (3 samples, 0.04%)</title><rect x="962.2" y="597" width="0.4" height="15.0" fill="rgb(230,102,11)" rx="2" ry="2" />
<text  x="965.21" y="607.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.01%)</title><rect x="341.4" y="565" width="0.1" height="15.0" fill="rgb(223,205,35)" rx="2" ry="2" />
<text  x="344.38" y="575.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (2 samples, 0.02%)</title><rect x="1176.0" y="613" width="0.3" height="15.0" fill="rgb(244,6,7)" rx="2" ry="2" />
<text  x="1178.98" y="623.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="374.7" y="373" width="0.2" height="15.0" fill="rgb(243,114,5)" rx="2" ry="2" />
<text  x="377.74" y="383.5" ></text>
</g>
<g >
<title>_int_free (5 samples, 0.06%)</title><rect x="857.2" y="357" width="0.7" height="15.0" fill="rgb(218,136,15)" rx="2" ry="2" />
<text  x="860.22" y="367.5" ></text>
</g>
<g >
<title>__libc_recvmsg (2 samples, 0.02%)</title><rect x="997.3" y="485" width="0.2" height="15.0" fill="rgb(219,66,54)" rx="2" ry="2" />
<text  x="1000.26" y="495.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (5 samples, 0.06%)</title><rect x="350.1" y="613" width="0.7" height="15.0" fill="rgb(207,96,3)" rx="2" ry="2" />
<text  x="353.07" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::_M_ptr (2 samples, 0.02%)</title><rect x="126.6" y="661" width="0.3" height="15.0" fill="rgb(228,70,17)" rx="2" ry="2" />
<text  x="129.63" y="671.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (3 samples, 0.04%)</title><rect x="878.9" y="517" width="0.5" height="15.0" fill="rgb(239,5,20)" rx="2" ry="2" />
<text  x="881.95" y="527.5" ></text>
</g>
<g >
<title>GL_ClearErrors (1 samples, 0.01%)</title><rect x="1002.9" y="613" width="0.1" height="15.0" fill="rgb(217,81,35)" rx="2" ry="2" />
<text  x="1005.87" y="623.5" ></text>
</g>
<g >
<title>Sprite::GetZ (5 samples, 0.06%)</title><rect x="57.9" y="773" width="0.7" height="15.0" fill="rgb(249,0,34)" rx="2" ry="2" />
<text  x="60.94" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (3 samples, 0.04%)</title><rect x="629.4" y="341" width="0.5" height="15.0" fill="rgb(224,60,29)" rx="2" ry="2" />
<text  x="632.44" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (1 samples, 0.01%)</title><rect x="993.6" y="405" width="0.2" height="15.0" fill="rgb(228,31,12)" rx="2" ry="2" />
<text  x="996.61" y="415.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1184.3" y="629" width="0.1" height="15.0" fill="rgb(249,195,1)" rx="2" ry="2" />
<text  x="1187.25" y="639.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1184.3" y="613" width="0.1" height="15.0" fill="rgb(230,165,21)" rx="2" ry="2" />
<text  x="1187.25" y="623.5" ></text>
</g>
<g >
<title>Utils::DecodeUTF32 (1 samples, 0.01%)</title><rect x="70.6" y="773" width="0.1" height="15.0" fill="rgb(243,49,25)" rx="2" ry="2" />
<text  x="73.56" y="783.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (72 samples, 0.86%)</title><rect x="641.8" y="341" width="10.1" height="15.0" fill="rgb(253,2,26)" rx="2" ry="2" />
<text  x="644.77" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::size (1 samples, 0.01%)</title><rect x="456.7" y="533" width="0.2" height="15.0" fill="rgb(251,171,1)" rx="2" ry="2" />
<text  x="459.74" y="543.5" ></text>
</g>
<g >
<title>_mm_movemask_epi8 (8 samples, 0.10%)</title><rect x="251.2" y="517" width="1.2" height="15.0" fill="rgb(208,158,0)" rx="2" ry="2" />
<text  x="254.24" y="527.5" ></text>
</g>
<g >
<title>pix_multiply_1x128 (2 samples, 0.02%)</title><rect x="333.1" y="485" width="0.3" height="15.0" fill="rgb(221,196,36)" rx="2" ry="2" />
<text  x="336.11" y="495.5" ></text>
</g>
<g >
<title>X11_GL_SwapWindow (6 samples, 0.07%)</title><rect x="1176.3" y="661" width="0.8" height="15.0" fill="rgb(218,184,9)" rx="2" ry="2" />
<text  x="1179.26" y="671.5" ></text>
</g>
<g >
<title>unix_poll (2 samples, 0.02%)</title><rect x="45.6" y="709" width="0.3" height="15.0" fill="rgb(218,161,38)" rx="2" ry="2" />
<text  x="48.60" y="719.5" ></text>
</g>
<g >
<title>_mm_mullo_epi16 (25 samples, 0.30%)</title><rect x="245.1" y="501" width="3.5" height="15.0" fill="rgb(244,144,37)" rx="2" ry="2" />
<text  x="248.07" y="511.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (5 samples, 0.06%)</title><rect x="968.0" y="597" width="0.7" height="15.0" fill="rgb(244,195,3)" rx="2" ry="2" />
<text  x="970.96" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (21 samples, 0.25%)</title><rect x="664.3" y="341" width="3.0" height="15.0" fill="rgb(218,148,51)" rx="2" ry="2" />
<text  x="667.34" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.01%)</title><rect x="125.9" y="773" width="0.2" height="15.0" fill="rgb(227,218,30)" rx="2" ry="2" />
<text  x="128.93" y="783.5" ></text>
</g>
<g >
<title>pixman_transform_point (54 samples, 0.64%)</title><rect x="303.8" y="501" width="7.6" height="15.0" fill="rgb(247,202,42)" rx="2" ry="2" />
<text  x="306.81" y="511.5" ></text>
</g>
<g >
<title>xhci_urb_enqueue (1 samples, 0.01%)</title><rect x="1167.4" y="277" width="0.2" height="15.0" fill="rgb(222,30,52)" rx="2" ry="2" />
<text  x="1170.43" y="287.5" ></text>
</g>
<g >
<title>LINUX_JoystickDetect (2 samples, 0.02%)</title><rect x="1000.5" y="581" width="0.3" height="15.0" fill="rgb(238,0,54)" rx="2" ry="2" />
<text  x="1003.48" y="591.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (157 samples, 1.87%)</title><rect x="923.1" y="581" width="22.0" height="15.0" fill="rgb(250,72,36)" rx="2" ry="2" />
<text  x="926.11" y="591.5" >G..</text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (11 samples, 0.13%)</title><rect x="876.4" y="469" width="1.6" height="15.0" fill="rgb(206,209,41)" rx="2" ry="2" />
<text  x="879.43" y="479.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (5 samples, 0.06%)</title><rect x="401.2" y="549" width="0.7" height="15.0" fill="rgb(221,61,51)" rx="2" ry="2" />
<text  x="404.23" y="559.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.01%)</title><rect x="995.4" y="389" width="0.2" height="15.0" fill="rgb(226,34,52)" rx="2" ry="2" />
<text  x="998.44" y="399.5" ></text>
</g>
<g >
<title>Game_Screen::GetFlashColor (1 samples, 0.01%)</title><rect x="851.3" y="485" width="0.2" height="15.0" fill="rgb(215,27,16)" rx="2" ry="2" />
<text  x="854.34" y="495.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (20 samples, 0.24%)</title><rect x="354.4" y="629" width="2.8" height="15.0" fill="rgb(218,82,48)" rx="2" ry="2" />
<text  x="357.41" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (2 samples, 0.02%)</title><rect x="879.1" y="501" width="0.3" height="15.0" fill="rgb(206,10,43)" rx="2" ry="2" />
<text  x="882.09" y="511.5" ></text>
</g>
<g >
<title>pack_2x128_128 (2 samples, 0.02%)</title><rect x="254.5" y="533" width="0.2" height="15.0" fill="rgb(221,200,18)" rx="2" ry="2" />
<text  x="257.47" y="543.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (26 samples, 0.31%)</title><rect x="1180.6" y="629" width="3.7" height="15.0" fill="rgb(215,31,29)" rx="2" ry="2" />
<text  x="1183.61" y="639.5" ></text>
</g>
<g >
<title>SDL_UnlockTexture_REAL (58 samples, 0.69%)</title><rect x="1167.7" y="613" width="8.1" height="15.0" fill="rgb(253,183,49)" rx="2" ry="2" />
<text  x="1170.71" y="623.5" ></text>
</g>
<g >
<title>__tls_get_addr (5 samples, 0.06%)</title><rect x="686.1" y="421" width="0.7" height="15.0" fill="rgb(218,196,18)" rx="2" ry="2" />
<text  x="689.07" y="431.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (24 samples, 0.29%)</title><rect x="615.1" y="453" width="3.4" height="15.0" fill="rgb(221,117,30)" rx="2" ry="2" />
<text  x="618.14" y="463.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.01%)</title><rect x="279.0" y="485" width="0.1" height="15.0" fill="rgb(251,129,53)" rx="2" ry="2" />
<text  x="282.00" y="495.5" ></text>
</g>
<g >
<title>copy_msghdr_from_user (1 samples, 0.01%)</title><rect x="1001.7" y="357" width="0.2" height="15.0" fill="rgb(235,160,1)" rx="2" ry="2" />
<text  x="1004.74" y="367.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (301 samples, 3.58%)</title><rect x="295.7" y="549" width="42.2" height="15.0" fill="rgb(210,138,35)" rx="2" ry="2" />
<text  x="298.68" y="559.5" >pix..</text>
</g>
<g >
<title>compute_transformed_extents (1 samples, 0.01%)</title><rect x="60.6" y="773" width="0.1" height="15.0" fill="rgb(224,65,30)" rx="2" ry="2" />
<text  x="63.60" y="783.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="1000.5" y="485" width="0.3" height="15.0" fill="rgb(242,150,47)" rx="2" ry="2" />
<text  x="1003.48" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.01%)</title><rect x="1185.5" y="533" width="0.2" height="15.0" fill="rgb(232,27,5)" rx="2" ry="2" />
<text  x="1188.51" y="543.5" ></text>
</g>
<g >
<title>[unknown] (/tmp/.glVW9sAb (230 samples, 2.73%)</title><rect x="85.8" y="789" width="32.3" height="15.0" fill="rgb(224,228,48)" rx="2" ry="2" />
<text  x="88.84" y="799.5" >[u..</text>
</g>
<g >
<title>pixman_image_get_height@plt (2 samples, 0.02%)</title><rect x="849.8" y="469" width="0.3" height="15.0" fill="rgb(244,199,37)" rx="2" ry="2" />
<text  x="852.79" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="1176.0" y="565" width="0.3" height="15.0" fill="rgb(222,159,37)" rx="2" ry="2" />
<text  x="1178.98" y="575.5" ></text>
</g>
<g >
<title>Cache::System (5 samples, 0.06%)</title><rect x="993.5" y="565" width="0.7" height="15.0" fill="rgb(220,146,9)" rx="2" ry="2" />
<text  x="996.47" y="575.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="273.1" y="389" width="0.2" height="15.0" fill="rgb(207,156,22)" rx="2" ry="2" />
<text  x="276.11" y="399.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="244.9" y="357" width="0.2" height="15.0" fill="rgb(251,30,44)" rx="2" ry="2" />
<text  x="247.93" y="367.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="44.9" y="613" width="0.1" height="15.0" fill="rgb(223,120,42)" rx="2" ry="2" />
<text  x="47.90" y="623.5" ></text>
</g>
<g >
<title>Bitmap::GetHeight (1 samples, 0.01%)</title><rect x="825.5" y="469" width="0.2" height="15.0" fill="rgb(226,121,21)" rx="2" ry="2" />
<text  x="828.54" y="479.5" ></text>
</g>
<g >
<title>std::__merge_sort_with_buffer&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (50 samples, 0.59%)</title><rect x="358.8" y="581" width="7.0" height="15.0" fill="rgb(212,101,0)" rx="2" ry="2" />
<text  x="361.76" y="591.5" ></text>
</g>
<g >
<title>__libc_recvmsg (4 samples, 0.05%)</title><rect x="1001.7" y="453" width="0.6" height="15.0" fill="rgb(250,88,0)" rx="2" ry="2" />
<text  x="1004.74" y="463.5" ></text>
</g>
<g >
<title>operator!= (2 samples, 0.02%)</title><rect x="983.0" y="549" width="0.2" height="15.0" fill="rgb(237,175,45)" rx="2" ry="2" />
<text  x="985.96" y="559.5" ></text>
</g>
<g >
<title>negate_2x128 (2 samples, 0.02%)</title><rect x="333.4" y="469" width="0.3" height="15.0" fill="rgb(213,79,7)" rx="2" ry="2" />
<text  x="336.39" y="479.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (6 samples, 0.07%)</title><rect x="626.8" y="341" width="0.8" height="15.0" fill="rgb(223,98,35)" rx="2" ry="2" />
<text  x="629.77" y="351.5" ></text>
</g>
<g >
<title>main (7,562 samples, 89.83%)</title><rect x="126.5" y="757" width="1060.0" height="15.0" fill="rgb(254,96,29)" rx="2" ry="2" />
<text  x="129.49" y="767.5" >main</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (9 samples, 0.11%)</title><rect x="640.1" y="405" width="1.3" height="15.0" fill="rgb(234,80,40)" rx="2" ry="2" />
<text  x="643.09" y="415.5" ></text>
</g>
<g >
<title>perf_pmu_disable.part.103 (1 samples, 0.01%)</title><rect x="32.8" y="597" width="0.2" height="15.0" fill="rgb(240,98,38)" rx="2" ry="2" />
<text  x="35.85" y="607.5" ></text>
</g>
<g >
<title>_mm_unpacklo_epi8 (4 samples, 0.05%)</title><rect x="215.9" y="485" width="0.6" height="15.0" fill="rgb(209,67,45)" rx="2" ry="2" />
<text  x="218.92" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::end (1 samples, 0.01%)</title><rect x="599.9" y="501" width="0.1" height="15.0" fill="rgb(253,146,7)" rx="2" ry="2" />
<text  x="602.86" y="511.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="117.9" y="757" width="0.2" height="15.0" fill="rgb(215,188,38)" rx="2" ry="2" />
<text  x="120.94" y="767.5" ></text>
</g>
<g >
<title>_mm_unpacklo_epi8 (2 samples, 0.02%)</title><rect x="319.1" y="469" width="0.3" height="15.0" fill="rgb(241,69,32)" rx="2" ry="2" />
<text  x="322.09" y="479.5" ></text>
</g>
<g >
<title>perf_event_wakeup (1 samples, 0.01%)</title><rect x="374.9" y="421" width="0.1" height="15.0" fill="rgb(213,4,37)" rx="2" ry="2" />
<text  x="377.88" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (55 samples, 0.65%)</title><rect x="367.6" y="613" width="7.7" height="15.0" fill="rgb(241,64,19)" rx="2" ry="2" />
<text  x="370.59" y="623.5" ></text>
</g>
<g >
<title>over_2x128 (8 samples, 0.10%)</title><rect x="213.8" y="501" width="1.1" height="15.0" fill="rgb(253,131,18)" rx="2" ry="2" />
<text  x="216.82" y="511.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="722.9" y="261" width="0.2" height="15.0" fill="rgb(228,158,15)" rx="2" ry="2" />
<text  x="725.93" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.01%)</title><rect x="879.7" y="517" width="0.1" height="15.0" fill="rgb(253,14,18)" rx="2" ry="2" />
<text  x="882.65" y="527.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.01%)</title><rect x="374.9" y="309" width="0.1" height="15.0" fill="rgb(207,63,5)" rx="2" ry="2" />
<text  x="377.88" y="319.5" ></text>
</g>
<g >
<title>do_IRQ (6 samples, 0.07%)</title><rect x="1166.7" y="549" width="0.9" height="15.0" fill="rgb(241,112,34)" rx="2" ry="2" />
<text  x="1169.73" y="559.5" ></text>
</g>
<g >
<title>find (1 samples, 0.01%)</title><rect x="993.6" y="501" width="0.2" height="15.0" fill="rgb(209,181,8)" rx="2" ry="2" />
<text  x="996.61" y="511.5" ></text>
</g>
<g >
<title>dequeue_entity (4 samples, 0.05%)</title><rect x="33.1" y="613" width="0.6" height="15.0" fill="rgb(235,226,34)" rx="2" ry="2" />
<text  x="36.13" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (2 samples, 0.02%)</title><rect x="600.0" y="501" width="0.3" height="15.0" fill="rgb(249,88,20)" rx="2" ry="2" />
<text  x="603.00" y="511.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="538.0" y="549" width="0.2" height="15.0" fill="rgb(249,59,0)" rx="2" ry="2" />
<text  x="541.04" y="559.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="818.7" y="133" width="0.1" height="15.0" fill="rgb(217,120,29)" rx="2" ry="2" />
<text  x="821.67" y="143.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="818.7" y="165" width="0.1" height="15.0" fill="rgb(219,177,8)" rx="2" ry="2" />
<text  x="821.67" y="175.5" ></text>
</g>
<g >
<title>FileRequestAsync::IsReady (114 samples, 1.35%)</title><rect x="130.4" y="645" width="16.0" height="15.0" fill="rgb(225,94,0)" rx="2" ry="2" />
<text  x="133.41" y="655.5" ></text>
</g>
<g >
<title>__GI___libc_free (8 samples, 0.10%)</title><rect x="861.4" y="325" width="1.1" height="15.0" fill="rgb(236,215,20)" rx="2" ry="2" />
<text  x="864.43" y="335.5" ></text>
</g>
<g >
<title>Tone::Tone (2 samples, 0.02%)</title><rect x="892.5" y="517" width="0.3" height="15.0" fill="rgb(222,46,13)" rx="2" ry="2" />
<text  x="895.55" y="527.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (19 samples, 0.23%)</title><rect x="659.0" y="373" width="2.7" height="15.0" fill="rgb(228,215,40)" rx="2" ry="2" />
<text  x="662.01" y="383.5" ></text>
</g>
<g >
<title>pick_next_task_fair (3 samples, 0.04%)</title><rect x="45.0" y="645" width="0.5" height="15.0" fill="rgb(227,34,46)" rx="2" ry="2" />
<text  x="48.04" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.01%)</title><rect x="663.2" y="373" width="0.2" height="15.0" fill="rgb(210,115,25)" rx="2" ry="2" />
<text  x="666.22" y="383.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (4 samples, 0.05%)</title><rect x="1003.3" y="613" width="0.5" height="15.0" fill="rgb(227,72,1)" rx="2" ry="2" />
<text  x="1006.29" y="623.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.01%)</title><rect x="50.0" y="677" width="0.1" height="15.0" fill="rgb(217,61,28)" rx="2" ry="2" />
<text  x="52.95" y="687.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (2 samples, 0.02%)</title><rect x="52.1" y="773" width="0.2" height="15.0" fill="rgb(251,46,44)" rx="2" ry="2" />
<text  x="55.05" y="783.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="747.7" y="277" width="0.2" height="15.0" fill="rgb(227,176,16)" rx="2" ry="2" />
<text  x="750.75" y="287.5" ></text>
</g>
<g >
<title>_pixman_image_fini (1 samples, 0.01%)</title><rect x="341.5" y="549" width="0.2" height="15.0" fill="rgb(238,152,0)" rx="2" ry="2" />
<text  x="344.52" y="559.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (123 samples, 1.46%)</title><rect x="641.8" y="357" width="17.2" height="15.0" fill="rgb(250,160,36)" rx="2" ry="2" />
<text  x="644.77" y="367.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.01%)</title><rect x="401.9" y="501" width="0.2" height="15.0" fill="rgb(230,215,4)" rx="2" ry="2" />
<text  x="404.93" y="511.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.01%)</title><rect x="48.5" y="693" width="0.2" height="15.0" fill="rgb(247,179,14)" rx="2" ry="2" />
<text  x="51.55" y="703.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="472.6" y="389" width="0.1" height="15.0" fill="rgb(241,122,44)" rx="2" ry="2" />
<text  x="475.58" y="399.5" ></text>
</g>
<g >
<title>__fdget_pos (1 samples, 0.01%)</title><rect x="46.2" y="725" width="0.1" height="15.0" fill="rgb(239,3,49)" rx="2" ry="2" />
<text  x="49.17" y="735.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="818.7" y="149" width="0.1" height="15.0" fill="rgb(240,77,25)" rx="2" ry="2" />
<text  x="821.67" y="159.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="50.5" y="741" width="0.2" height="15.0" fill="rgb(240,152,32)" rx="2" ry="2" />
<text  x="53.51" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.01%)</title><rect x="629.3" y="341" width="0.1" height="15.0" fill="rgb(209,116,25)" rx="2" ry="2" />
<text  x="632.30" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="995.9" y="533" width="0.1" height="15.0" fill="rgb(207,31,10)" rx="2" ry="2" />
<text  x="998.86" y="543.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (1 samples, 0.01%)</title><rect x="826.8" y="453" width="0.1" height="15.0" fill="rgb(225,223,5)" rx="2" ry="2" />
<text  x="829.80" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="58.8" y="725" width="0.1" height="15.0" fill="rgb(249,166,6)" rx="2" ry="2" />
<text  x="61.78" y="735.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (67 samples, 0.80%)</title><rect x="599.4" y="517" width="9.4" height="15.0" fill="rgb(206,23,37)" rx="2" ry="2" />
<text  x="602.44" y="527.5" ></text>
</g>
<g >
<title>_mm_packus_epi16 (4 samples, 0.05%)</title><rect x="283.1" y="517" width="0.5" height="15.0" fill="rgb(223,152,12)" rx="2" ry="2" />
<text  x="286.06" y="527.5" ></text>
</g>
<g >
<title>_mm_cmpeq_epi8 (48 samples, 0.57%)</title><rect x="187.3" y="485" width="6.8" height="15.0" fill="rgb(244,141,42)" rx="2" ry="2" />
<text  x="190.32" y="495.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.01%)</title><rect x="664.1" y="277" width="0.1" height="15.0" fill="rgb(238,229,19)" rx="2" ry="2" />
<text  x="667.06" y="287.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="595.2" y="501" width="0.2" height="15.0" fill="rgb(235,115,4)" rx="2" ry="2" />
<text  x="598.23" y="511.5" ></text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (3 samples, 0.04%)</title><rect x="887.6" y="533" width="0.5" height="15.0" fill="rgb(253,192,13)" rx="2" ry="2" />
<text  x="890.64" y="543.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (1 samples, 0.01%)</title><rect x="611.9" y="437" width="0.2" height="15.0" fill="rgb(224,154,0)" rx="2" ry="2" />
<text  x="614.91" y="447.5" ></text>
</g>
<g >
<title>strlen@plt (1 samples, 0.01%)</title><rect x="993.9" y="469" width="0.1" height="15.0" fill="rgb(253,101,33)" rx="2" ry="2" />
<text  x="996.89" y="479.5" ></text>
</g>
<g >
<title>AsyncHandler::IsImportantFilePending (1 samples, 0.01%)</title><rect x="154.2" y="661" width="0.2" height="15.0" fill="rgb(231,203,46)" rx="2" ry="2" />
<text  x="157.24" y="671.5" ></text>
</g>
<g >
<title>Bitmap::Clear (7 samples, 0.08%)</title><rect x="790.2" y="453" width="1.0" height="15.0" fill="rgb(246,88,49)" rx="2" ry="2" />
<text  x="793.22" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.07%)</title><rect x="996.1" y="437" width="0.9" height="15.0" fill="rgb(225,78,54)" rx="2" ry="2" />
<text  x="999.14" y="447.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned (1 samples, 0.01%)</title><rect x="1175.7" y="437" width="0.1" height="15.0" fill="rgb(246,0,7)" rx="2" ry="2" />
<text  x="1178.70" y="447.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (3 samples, 0.04%)</title><rect x="452.5" y="565" width="0.5" height="15.0" fill="rgb(221,144,47)" rx="2" ry="2" />
<text  x="455.54" y="575.5" ></text>
</g>
<g >
<title>__libc_recvmsg (4 samples, 0.05%)</title><rect x="1001.7" y="469" width="0.6" height="15.0" fill="rgb(234,189,8)" rx="2" ry="2" />
<text  x="1004.74" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (9 samples, 0.11%)</title><rect x="364.4" y="533" width="1.2" height="15.0" fill="rgb(208,51,29)" rx="2" ry="2" />
<text  x="367.36" y="543.5" ></text>
</g>
<g >
<title>GL_UpdateTexture (56 samples, 0.67%)</title><rect x="1168.0" y="581" width="7.8" height="15.0" fill="rgb(234,6,41)" rx="2" ry="2" />
<text  x="1170.99" y="591.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="595.2" y="485" width="0.2" height="15.0" fill="rgb(242,44,29)" rx="2" ry="2" />
<text  x="598.23" y="495.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="374.7" y="501" width="0.2" height="15.0" fill="rgb(222,169,21)" rx="2" ry="2" />
<text  x="377.74" y="511.5" ></text>
</g>
<g >
<title>_mm_adds_epu16 (14 samples, 0.17%)</title><rect x="230.6" y="485" width="2.0" height="15.0" fill="rgb(211,78,30)" rx="2" ry="2" />
<text  x="233.64" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (1 samples, 0.01%)</title><rect x="879.7" y="501" width="0.1" height="15.0" fill="rgb(238,135,2)" rx="2" ry="2" />
<text  x="882.65" y="511.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.01%)</title><rect x="49.5" y="517" width="0.2" height="15.0" fill="rgb(209,109,27)" rx="2" ry="2" />
<text  x="52.53" y="527.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (1 samples, 0.01%)</title><rect x="671.9" y="421" width="0.2" height="15.0" fill="rgb(213,211,42)" rx="2" ry="2" />
<text  x="674.91" y="431.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (11 samples, 0.13%)</title><rect x="412.6" y="597" width="1.5" height="15.0" fill="rgb(240,156,15)" rx="2" ry="2" />
<text  x="415.58" y="607.5" ></text>
</g>
<g >
<title>__exchange_and_add (10 samples, 0.12%)</title><rect x="874.0" y="357" width="1.4" height="15.0" fill="rgb(227,148,10)" rx="2" ry="2" />
<text  x="877.04" y="367.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.01%)</title><rect x="72.5" y="773" width="0.2" height="15.0" fill="rgb(248,96,9)" rx="2" ry="2" />
<text  x="75.52" y="783.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandConditionalBranch (3 samples, 0.04%)</title><rect x="64.0" y="773" width="0.4" height="15.0" fill="rgb(244,34,28)" rx="2" ry="2" />
<text  x="66.97" y="783.5" ></text>
</g>
<g >
<title>SDL_IOReady (1 samples, 0.01%)</title><rect x="995.9" y="581" width="0.1" height="15.0" fill="rgb(211,49,44)" rx="2" ry="2" />
<text  x="998.86" y="591.5" ></text>
</g>
<g >
<title>snd_complete_urb (2 samples, 0.02%)</title><rect x="1167.3" y="325" width="0.3" height="15.0" fill="rgb(207,133,31)" rx="2" ry="2" />
<text  x="1170.29" y="335.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (148 samples, 1.76%)</title><rect x="599.0" y="533" width="20.8" height="15.0" fill="rgb(235,69,51)" rx="2" ry="2" />
<text  x="602.02" y="543.5" ></text>
</g>
<g >
<title>Drawable::GetPriorityForMapLayer (1 samples, 0.01%)</title><rect x="979.6" y="581" width="0.1" height="15.0" fill="rgb(245,57,41)" rx="2" ry="2" />
<text  x="982.60" y="591.5" ></text>
</g>
<g >
<title>_pixman_image_allocate (3 samples, 0.04%)</title><rect x="338.2" y="533" width="0.4" height="15.0" fill="rgb(251,65,20)" rx="2" ry="2" />
<text  x="341.15" y="543.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="244.9" y="405" width="0.2" height="15.0" fill="rgb(232,40,51)" rx="2" ry="2" />
<text  x="247.93" y="415.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (1 samples, 0.01%)</title><rect x="154.2" y="645" width="0.2" height="15.0" fill="rgb(211,229,46)" rx="2" ry="2" />
<text  x="157.24" y="655.5" ></text>
</g>
<g >
<title>Sprite::GetZ (1 samples, 0.01%)</title><rect x="365.3" y="501" width="0.2" height="15.0" fill="rgb(252,142,2)" rx="2" ry="2" />
<text  x="368.35" y="511.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="1185.5" y="565" width="0.2" height="15.0" fill="rgb(249,37,12)" rx="2" ry="2" />
<text  x="1188.51" y="575.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (1,836 samples, 21.81%)</title><rect x="620.9" y="501" width="257.3" height="15.0" fill="rgb(207,169,35)" rx="2" ry="2" />
<text  x="623.89" y="511.5" >Game_Picture::OnPictureSpriteReady</text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::operator[] (3 samples, 0.04%)</title><rect x="959.6" y="581" width="0.4" height="15.0" fill="rgb(210,180,28)" rx="2" ry="2" />
<text  x="962.55" y="591.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="722.9" y="245" width="0.2" height="15.0" fill="rgb(212,76,21)" rx="2" ry="2" />
<text  x="725.93" y="255.5" ></text>
</g>
<g >
<title>XNextEvent (1 samples, 0.01%)</title><rect x="70.8" y="773" width="0.2" height="15.0" fill="rgb(205,156,44)" rx="2" ry="2" />
<text  x="73.84" y="783.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (7 samples, 0.08%)</title><rect x="996.1" y="501" width="1.0" height="15.0" fill="rgb(225,141,37)" rx="2" ry="2" />
<text  x="999.14" y="511.5" ></text>
</g>
<g >
<title>std::__insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (1 samples, 0.01%)</title><rect x="154.7" y="581" width="0.1" height="15.0" fill="rgb(217,46,7)" rx="2" ry="2" />
<text  x="157.66" y="591.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (1 samples, 0.01%)</title><rect x="895.6" y="517" width="0.2" height="15.0" fill="rgb(218,43,19)" rx="2" ry="2" />
<text  x="898.63" y="527.5" ></text>
</g>
<g >
<title>SDL_Delay_REAL (21 samples, 0.25%)</title><rect x="997.5" y="613" width="3.0" height="15.0" fill="rgb(252,180,12)" rx="2" ry="2" />
<text  x="1000.54" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (7 samples, 0.08%)</title><rect x="668.4" y="405" width="1.0" height="15.0" fill="rgb(254,185,47)" rx="2" ry="2" />
<text  x="671.41" y="415.5" ></text>
</g>
<g >
<title>Player::MainLoop (7,562 samples, 89.83%)</title><rect x="126.5" y="725" width="1060.0" height="15.0" fill="rgb(253,148,52)" rx="2" ry="2" />
<text  x="129.49" y="735.5" >Player::MainLoop</text>
</g>
<g >
<title>__update_load_avg_se (1 samples, 0.01%)</title><rect x="33.5" y="581" width="0.2" height="15.0" fill="rgb(222,199,20)" rx="2" ry="2" />
<text  x="36.55" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (7 samples, 0.08%)</title><rect x="618.8" y="453" width="1.0" height="15.0" fill="rgb(228,135,14)" rx="2" ry="2" />
<text  x="621.78" y="463.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (22 samples, 0.26%)</title><rect x="612.1" y="389" width="3.0" height="15.0" fill="rgb(251,219,3)" rx="2" ry="2" />
<text  x="615.06" y="399.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="849.0" y="421" width="0.2" height="15.0" fill="rgb(248,37,28)" rx="2" ry="2" />
<text  x="851.95" y="431.5" ></text>
</g>
<g >
<title>_pixman_implementation_lookup_composite (8 samples, 0.10%)</title><rect x="162.9" y="549" width="1.2" height="15.0" fill="rgb(225,5,23)" rx="2" ry="2" />
<text  x="165.93" y="559.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="949.3" y="549" width="0.2" height="15.0" fill="rgb(231,95,34)" rx="2" ry="2" />
<text  x="952.32" y="559.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.01%)</title><rect x="629.3" y="325" width="0.1" height="15.0" fill="rgb(253,142,17)" rx="2" ry="2" />
<text  x="632.30" y="335.5" ></text>
</g>
<g >
<title>Game_Picture::ShowParams::ShowParams (2 samples, 0.02%)</title><rect x="899.1" y="565" width="0.3" height="15.0" fill="rgb(230,23,51)" rx="2" ry="2" />
<text  x="902.14" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (1 samples, 0.01%)</title><rect x="84.3" y="725" width="0.1" height="15.0" fill="rgb(212,226,40)" rx="2" ry="2" />
<text  x="87.29" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Player, std::default_delete&lt;Game_Player&gt; &gt;::operator (1 samples, 0.01%)</title><rect x="993.2" y="581" width="0.1" height="15.0" fill="rgb(232,189,28)" rx="2" ry="2" />
<text  x="996.19" y="591.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.01%)</title><rect x="375.2" y="485" width="0.1" height="15.0" fill="rgb(252,162,33)" rx="2" ry="2" />
<text  x="378.16" y="495.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="76.6" y="773" width="0.1" height="15.0" fill="rgb(241,178,16)" rx="2" ry="2" />
<text  x="79.58" y="783.5" ></text>
</g>
<g >
<title>Game_Picture::OnPictureSpriteReady (1 samples, 0.01%)</title><rect x="65.9" y="773" width="0.2" height="15.0" fill="rgb(219,123,28)" rx="2" ry="2" />
<text  x="68.93" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create@plt (1 samples, 0.01%)</title><rect x="666.6" y="309" width="0.1" height="15.0" fill="rgb(219,69,22)" rx="2" ry="2" />
<text  x="669.58" y="319.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (4 samples, 0.05%)</title><rect x="597.9" y="549" width="0.6" height="15.0" fill="rgb(218,92,24)" rx="2" ry="2" />
<text  x="600.90" y="559.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (1 samples, 0.01%)</title><rect x="353.4" y="581" width="0.2" height="15.0" fill="rgb(213,43,9)" rx="2" ry="2" />
<text  x="356.43" y="591.5" ></text>
</g>
<g >
<title>Game_Map::AddScreenX (1 samples, 0.01%)</title><rect x="966.1" y="565" width="0.2" height="15.0" fill="rgb(245,227,0)" rx="2" ry="2" />
<text  x="969.14" y="575.5" ></text>
</g>
<g >
<title>_pixman_image_fini (114 samples, 1.35%)</title><rect x="857.9" y="357" width="16.0" height="15.0" fill="rgb(254,217,23)" rx="2" ry="2" />
<text  x="860.92" y="367.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (4 samples, 0.05%)</title><rect x="902.9" y="485" width="0.6" height="15.0" fill="rgb(235,29,15)" rx="2" ry="2" />
<text  x="905.92" y="495.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (17 samples, 0.20%)</title><rect x="472.9" y="565" width="2.3" height="15.0" fill="rgb(249,19,27)" rx="2" ry="2" />
<text  x="475.86" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (1 samples, 0.01%)</title><rect x="1189.2" y="757" width="0.1" height="15.0" fill="rgb(242,200,18)" rx="2" ry="2" />
<text  x="1192.16" y="767.5" ></text>
</g>
<g >
<title>Sprite::Flash (2 samples, 0.02%)</title><rect x="892.8" y="533" width="0.3" height="15.0" fill="rgb(222,40,46)" rx="2" ry="2" />
<text  x="895.83" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow (1 samples, 0.01%)</title><rect x="904.0" y="501" width="0.2" height="15.0" fill="rgb(247,77,43)" rx="2" ry="2" />
<text  x="907.04" y="511.5" ></text>
</g>
<g >
<title>std::initializer_list&lt;int&gt;::end (1 samples, 0.01%)</title><rect x="586.1" y="549" width="0.2" height="15.0" fill="rgb(248,180,35)" rx="2" ry="2" />
<text  x="589.12" y="559.5" ></text>
</g>
<g >
<title>expand_alpha_2x128 (1 samples, 0.01%)</title><rect x="317.7" y="485" width="0.1" height="15.0" fill="rgb(219,14,45)" rx="2" ry="2" />
<text  x="320.69" y="495.5" ></text>
</g>
<g >
<title>Bitmap::Init (204 samples, 2.42%)</title><rect x="792.6" y="309" width="28.6" height="15.0" fill="rgb(236,131,23)" rx="2" ry="2" />
<text  x="795.60" y="319.5" >Bi..</text>
</g>
<g >
<title>__glDispatchCheckMultithreaded (1 samples, 0.01%)</title><rect x="1177.0" y="613" width="0.1" height="15.0" fill="rgb(245,135,9)" rx="2" ry="2" />
<text  x="1179.96" y="623.5" ></text>
</g>
<g >
<title>std::_Bit_reference::operator bool (2 samples, 0.02%)</title><rect x="962.2" y="581" width="0.3" height="15.0" fill="rgb(218,179,19)" rx="2" ry="2" />
<text  x="965.21" y="591.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="595.2" y="453" width="0.2" height="15.0" fill="rgb(239,122,29)" rx="2" ry="2" />
<text  x="598.23" y="463.5" ></text>
</g>
<g >
<title>Bitmap::GetHeight (2 samples, 0.02%)</title><rect x="975.1" y="581" width="0.3" height="15.0" fill="rgb(227,50,24)" rx="2" ry="2" />
<text  x="978.11" y="591.5" ></text>
</g>
<g >
<title>Game_Player::UpdateScroll (1 samples, 0.01%)</title><rect x="66.1" y="773" width="0.1" height="15.0" fill="rgb(218,168,3)" rx="2" ry="2" />
<text  x="69.07" y="783.5" ></text>
</g>
<g >
<title>analyze_extent (2 samples, 0.02%)</title><rect x="123.3" y="773" width="0.2" height="15.0" fill="rgb(226,39,34)" rx="2" ry="2" />
<text  x="126.26" y="783.5" ></text>
</g>
<g >
<title>load_128_unaligned (15 samples, 0.18%)</title><rect x="252.4" y="533" width="2.1" height="15.0" fill="rgb(233,54,26)" rx="2" ry="2" />
<text  x="255.36" y="543.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (6 samples, 0.07%)</title><rect x="362.8" y="517" width="0.9" height="15.0" fill="rgb(229,41,35)" rx="2" ry="2" />
<text  x="365.82" y="527.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="899.3" y="501" width="0.1" height="15.0" fill="rgb(246,182,14)" rx="2" ry="2" />
<text  x="902.28" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.01%)</title><rect x="1189.2" y="789" width="0.1" height="15.0" fill="rgb(239,105,30)" rx="2" ry="2" />
<text  x="1192.16" y="799.5" ></text>
</g>
<g >
<title>_mm_adds_epu8 (2 samples, 0.02%)</title><rect x="332.3" y="469" width="0.2" height="15.0" fill="rgb(229,85,33)" rx="2" ry="2" />
<text  x="335.26" y="479.5" ></text>
</g>
<g >
<title>_pixman_image_validate (14 samples, 0.17%)</title><rect x="683.3" y="437" width="1.9" height="15.0" fill="rgb(218,2,10)" rx="2" ry="2" />
<text  x="686.26" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (160 samples, 1.90%)</title><rect x="28.2" y="773" width="22.5" height="15.0" fill="rgb(243,80,1)" rx="2" ry="2" />
<text  x="31.22" y="783.5" >d..</text>
</g>
<g >
<title>Graphics::SortDrawableList (7 samples, 0.08%)</title><rect x="364.6" y="517" width="1.0" height="15.0" fill="rgb(232,147,41)" rx="2" ry="2" />
<text  x="367.64" y="527.5" ></text>
</g>
<g >
<title>Sprite::Flash (2 samples, 0.02%)</title><rect x="983.0" y="581" width="0.2" height="15.0" fill="rgb(232,54,22)" rx="2" ry="2" />
<text  x="985.96" y="591.5" ></text>
</g>
<g >
<title>_int_malloc (9 samples, 0.11%)</title><rect x="817.7" y="229" width="1.3" height="15.0" fill="rgb(252,100,48)" rx="2" ry="2" />
<text  x="820.69" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (1 samples, 0.01%)</title><rect x="571.5" y="549" width="0.2" height="15.0" fill="rgb(253,4,45)" rx="2" ry="2" />
<text  x="574.54" y="559.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (2 samples, 0.02%)</title><rect x="75.6" y="773" width="0.3" height="15.0" fill="rgb(232,40,23)" rx="2" ry="2" />
<text  x="78.60" y="783.5" ></text>
</g>
<g >
<title>schedule (3 samples, 0.04%)</title><rect x="82.9" y="693" width="0.4" height="15.0" fill="rgb(225,79,36)" rx="2" ry="2" />
<text  x="85.89" y="703.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="747.5" y="325" width="0.1" height="15.0" fill="rgb(225,203,47)" rx="2" ry="2" />
<text  x="750.46" y="335.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.01%)</title><rect x="340.5" y="533" width="0.2" height="15.0" fill="rgb(250,179,50)" rx="2" ry="2" />
<text  x="343.53" y="543.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Set (1 samples, 0.01%)</title><rect x="948.5" y="581" width="0.1" height="15.0" fill="rgb(241,143,46)" rx="2" ry="2" />
<text  x="951.48" y="591.5" ></text>
</g>
<g >
<title>core_combine_over_u_sse2_no_mask (359 samples, 4.26%)</title><rect x="166.2" y="517" width="50.3" height="15.0" fill="rgb(253,30,32)" rx="2" ry="2" />
<text  x="169.16" y="527.5" >core_..</text>
</g>
<g >
<title>Game_Interpreter::CommandEndLoop (10 samples, 0.12%)</title><rect x="570.0" y="581" width="1.4" height="15.0" fill="rgb(211,87,52)" rx="2" ry="2" />
<text  x="573.00" y="591.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="819.0" y="197" width="0.1" height="15.0" fill="rgb(227,16,10)" rx="2" ry="2" />
<text  x="821.95" y="207.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (1 samples, 0.01%)</title><rect x="83.5" y="741" width="0.1" height="15.0" fill="rgb(248,184,36)" rx="2" ry="2" />
<text  x="86.45" y="751.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.01%)</title><rect x="163.8" y="533" width="0.1" height="15.0" fill="rgb(252,130,3)" rx="2" ry="2" />
<text  x="166.77" y="543.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.01%)</title><rect x="46.7" y="613" width="0.2" height="15.0" fill="rgb(209,67,28)" rx="2" ry="2" />
<text  x="49.73" y="623.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (4 samples, 0.05%)</title><rect x="1001.7" y="485" width="0.6" height="15.0" fill="rgb(232,60,31)" rx="2" ry="2" />
<text  x="1004.74" y="495.5" ></text>
</g>
<g >
<title>sse2_composite_src_x888_8888 (34 samples, 0.40%)</title><rect x="287.7" y="549" width="4.8" height="15.0" fill="rgb(214,116,36)" rx="2" ry="2" />
<text  x="290.69" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_poll (1 samples, 0.01%)</title><rect x="1001.6" y="485" width="0.1" height="15.0" fill="rgb(243,196,21)" rx="2" ry="2" />
<text  x="1004.60" y="495.5" ></text>
</g>
<g >
<title>__GI___libc_free (2 samples, 0.02%)</title><rect x="340.3" y="533" width="0.2" height="15.0" fill="rgb(238,81,39)" rx="2" ry="2" />
<text  x="343.25" y="543.5" ></text>
</g>
<g >
<title>_mm_cmpeq_epi8 (1 samples, 0.01%)</title><rect x="334.1" y="485" width="0.1" height="15.0" fill="rgb(231,52,50)" rx="2" ry="2" />
<text  x="337.09" y="495.5" ></text>
</g>
<g >
<title>ksys_write (15 samples, 0.18%)</title><rect x="48.4" y="741" width="2.1" height="15.0" fill="rgb(216,128,4)" rx="2" ry="2" />
<text  x="51.41" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (8 samples, 0.10%)</title><rect x="668.3" y="437" width="1.1" height="15.0" fill="rgb(244,20,39)" rx="2" ry="2" />
<text  x="671.27" y="447.5" ></text>
</g>
<g >
<title>XFlush (6 samples, 0.07%)</title><rect x="1001.7" y="565" width="0.9" height="15.0" fill="rgb(254,197,40)" rx="2" ry="2" />
<text  x="1004.74" y="575.5" ></text>
</g>
<g >
<title>Window_Base::Update (1 samples, 0.01%)</title><rect x="993.3" y="613" width="0.2" height="15.0" fill="rgb(207,185,28)" rx="2" ry="2" />
<text  x="996.33" y="623.5" ></text>
</g>
<g >
<title>_mm_set_epi32 (4 samples, 0.05%)</title><rect x="331.6" y="501" width="0.5" height="15.0" fill="rgb(222,6,22)" rx="2" ry="2" />
<text  x="334.56" y="511.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="341.1" y="437" width="0.1" height="15.0" fill="rgb(252,138,13)" rx="2" ry="2" />
<text  x="344.10" y="447.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="1166.0" y="485" width="0.2" height="15.0" fill="rgb(233,66,34)" rx="2" ry="2" />
<text  x="1169.03" y="495.5" ></text>
</g>
<g >
<title>apic_ack_irq (1 samples, 0.01%)</title><rect x="50.7" y="709" width="0.1" height="15.0" fill="rgb(242,50,32)" rx="2" ry="2" />
<text  x="53.65" y="719.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (19 samples, 0.23%)</title><rect x="659.0" y="389" width="2.7" height="15.0" fill="rgb(239,220,48)" rx="2" ry="2" />
<text  x="662.01" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (1 samples, 0.01%)</title><rect x="992.9" y="581" width="0.2" height="15.0" fill="rgb(247,138,27)" rx="2" ry="2" />
<text  x="995.91" y="591.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (24 samples, 0.29%)</title><rect x="895.8" y="501" width="3.3" height="15.0" fill="rgb(250,126,32)" rx="2" ry="2" />
<text  x="898.77" y="511.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::swap (2 samples, 0.02%)</title><rect x="876.4" y="453" width="0.3" height="15.0" fill="rgb(235,38,15)" rx="2" ry="2" />
<text  x="879.43" y="463.5" ></text>
</g>
<g >
<title>LoadBitmap&lt;(&lt;unnamed&gt;::Material::Type)9&gt; (5 samples, 0.06%)</title><rect x="993.5" y="533" width="0.7" height="15.0" fill="rgb(232,228,8)" rx="2" ry="2" />
<text  x="996.47" y="543.5" ></text>
</g>
<g >
<title>psi_task_change (6 samples, 0.07%)</title><rect x="33.7" y="629" width="0.8" height="15.0" fill="rgb(224,221,2)" rx="2" ry="2" />
<text  x="36.69" y="639.5" ></text>
</g>
<g >
<title>__atomic_add (10 samples, 0.12%)</title><rect x="341.9" y="517" width="1.4" height="15.0" fill="rgb(248,11,26)" rx="2" ry="2" />
<text  x="344.94" y="527.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (1 samples, 0.01%)</title><rect x="367.2" y="629" width="0.1" height="15.0" fill="rgb(234,16,3)" rx="2" ry="2" />
<text  x="370.17" y="639.5" ></text>
</g>
<g >
<title>__libc_recvmsg (7 samples, 0.08%)</title><rect x="996.1" y="485" width="1.0" height="15.0" fill="rgb(236,52,11)" rx="2" ry="2" />
<text  x="999.14" y="495.5" ></text>
</g>
<g >
<title>std::replace&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (30 samples, 0.36%)</title><rect x="604.6" y="501" width="4.2" height="15.0" fill="rgb(240,203,7)" rx="2" ry="2" />
<text  x="607.63" y="511.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (2 samples, 0.02%)</title><rect x="670.2" y="421" width="0.3" height="15.0" fill="rgb(251,208,9)" rx="2" ry="2" />
<text  x="673.23" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (1 samples, 0.01%)</title><rect x="366.6" y="597" width="0.1" height="15.0" fill="rgb(239,219,24)" rx="2" ry="2" />
<text  x="369.61" y="607.5" ></text>
</g>
<g >
<title>Transform::Scale (6 samples, 0.07%)</title><rect x="294.8" y="549" width="0.9" height="15.0" fill="rgb(239,126,2)" rx="2" ry="2" />
<text  x="297.84" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, false, true&gt;::operator++ (39 samples, 0.46%)</title><rect x="146.4" y="645" width="5.5" height="15.0" fill="rgb(254,68,3)" rx="2" ry="2" />
<text  x="149.39" y="655.5" ></text>
</g>
<g >
<title>ktime_get_raw_ts64 (1 samples, 0.01%)</title><rect x="30.0" y="741" width="0.2" height="15.0" fill="rgb(239,151,43)" rx="2" ry="2" />
<text  x="33.05" y="751.5" ></text>
</g>
<g >
<title>_mm_shufflehi_epi16 (1 samples, 0.01%)</title><rect x="184.7" y="485" width="0.1" height="15.0" fill="rgb(220,109,31)" rx="2" ry="2" />
<text  x="187.66" y="495.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Set (4 samples, 0.05%)</title><rect x="67.6" y="773" width="0.6" height="15.0" fill="rgb(240,0,0)" rx="2" ry="2" />
<text  x="70.61" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (9 samples, 0.11%)</title><rect x="640.1" y="421" width="1.3" height="15.0" fill="rgb(235,55,22)" rx="2" ry="2" />
<text  x="643.09" y="431.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (769 samples, 9.14%)</title><rect x="682.0" y="453" width="107.8" height="15.0" fill="rgb(216,90,3)" rx="2" ry="2" />
<text  x="685.00" y="463.5" >pixman_image_..</text>
</g>
<g >
<title>__pollwait (1 samples, 0.01%)</title><rect x="45.7" y="693" width="0.2" height="15.0" fill="rgb(213,210,33)" rx="2" ry="2" />
<text  x="48.74" y="703.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (29 samples, 0.34%)</title><rect x="397.9" y="581" width="4.0" height="15.0" fill="rgb(245,13,32)" rx="2" ry="2" />
<text  x="400.87" y="591.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (170 samples, 2.02%)</title><rect x="969.2" y="597" width="23.9" height="15.0" fill="rgb(231,61,16)" rx="2" ry="2" />
<text  x="972.22" y="607.5" >G..</text>
</g>
<g >
<title>Sprite::SetOx (2 samples, 0.02%)</title><rect x="69.2" y="773" width="0.2" height="15.0" fill="rgb(221,153,48)" rx="2" ry="2" />
<text  x="72.15" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (1 samples, 0.01%)</title><rect x="636.4" y="341" width="0.2" height="15.0" fill="rgb(213,115,52)" rx="2" ry="2" />
<text  x="639.45" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (8 samples, 0.10%)</title><rect x="628.7" y="405" width="1.2" height="15.0" fill="rgb(217,5,42)" rx="2" ry="2" />
<text  x="631.74" y="415.5" ></text>
</g>
<g >
<title>__GI___poll (2 samples, 0.02%)</title><rect x="994.7" y="517" width="0.3" height="15.0" fill="rgb(217,117,0)" rx="2" ry="2" />
<text  x="997.74" y="527.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (69 samples, 0.82%)</title><rect x="608.8" y="501" width="9.7" height="15.0" fill="rgb(251,204,45)" rx="2" ry="2" />
<text  x="611.83" y="511.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.01%)</title><rect x="906.4" y="501" width="0.2" height="15.0" fill="rgb(220,92,0)" rx="2" ry="2" />
<text  x="909.42" y="511.5" ></text>
</g>
<g >
<title>native_write_msr (16 samples, 0.19%)</title><rect x="998.2" y="373" width="2.3" height="15.0" fill="rgb(219,39,51)" rx="2" ry="2" />
<text  x="1001.24" y="383.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="363.7" y="469" width="0.1" height="15.0" fill="rgb(208,229,22)" rx="2" ry="2" />
<text  x="366.66" y="479.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (20 samples, 0.24%)</title><rect x="612.3" y="357" width="2.8" height="15.0" fill="rgb(211,146,5)" rx="2" ry="2" />
<text  x="615.34" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (6 samples, 0.07%)</title><rect x="665.6" y="293" width="0.8" height="15.0" fill="rgb(219,74,31)" rx="2" ry="2" />
<text  x="668.60" y="303.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="244.9" y="437" width="0.2" height="15.0" fill="rgb(215,10,44)" rx="2" ry="2" />
<text  x="247.93" y="447.5" ></text>
</g>
<g >
<title>__enqueue_entity (1 samples, 0.01%)</title><rect x="731.6" y="245" width="0.2" height="15.0" fill="rgb(239,83,26)" rx="2" ry="2" />
<text  x="734.63" y="255.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::operator[] (18 samples, 0.21%)</title><rect x="822.0" y="293" width="2.6" height="15.0" fill="rgb(247,224,3)" rx="2" ry="2" />
<text  x="825.04" y="303.5" ></text>
</g>
<g >
<title>__GI___sched_yield (4 samples, 0.05%)</title><rect x="82.8" y="773" width="0.5" height="15.0" fill="rgb(212,14,31)" rx="2" ry="2" />
<text  x="85.75" y="783.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (7 samples, 0.08%)</title><rect x="349.1" y="565" width="1.0" height="15.0" fill="rgb(211,67,25)" rx="2" ry="2" />
<text  x="352.09" y="575.5" ></text>
</g>
<g >
<title>pixman_unorm_to_float (1 samples, 0.01%)</title><rect x="338.9" y="517" width="0.1" height="15.0" fill="rgb(229,61,15)" rx="2" ry="2" />
<text  x="341.85" y="527.5" ></text>
</g>
<g >
<title>analyze_extent (2 samples, 0.02%)</title><rect x="164.1" y="549" width="0.2" height="15.0" fill="rgb(222,108,49)" rx="2" ry="2" />
<text  x="167.05" y="559.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="918.2" y="485" width="0.1" height="15.0" fill="rgb(216,15,6)" rx="2" ry="2" />
<text  x="921.20" y="495.5" ></text>
</g>
<g >
<title>_pixman_image_fini (1 samples, 0.01%)</title><rect x="341.5" y="565" width="0.2" height="15.0" fill="rgb(226,26,47)" rx="2" ry="2" />
<text  x="344.52" y="575.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (9 samples, 0.11%)</title><rect x="659.2" y="341" width="1.2" height="15.0" fill="rgb(210,120,41)" rx="2" ry="2" />
<text  x="662.15" y="351.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;Drawable*&gt; (1 samples, 0.01%)</title><rect x="363.7" y="485" width="0.1" height="15.0" fill="rgb(230,1,31)" rx="2" ry="2" />
<text  x="366.66" y="495.5" ></text>
</g>
<g >
<title>update_process_times (2 samples, 0.02%)</title><rect x="25.7" y="693" width="0.3" height="15.0" fill="rgb(219,182,22)" rx="2" ry="2" />
<text  x="28.70" y="703.5" ></text>
</g>
<g >
<title>__vfs_write (12 samples, 0.14%)</title><rect x="48.7" y="709" width="1.7" height="15.0" fill="rgb(229,45,13)" rx="2" ry="2" />
<text  x="51.69" y="719.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.01%)</title><rect x="663.9" y="309" width="0.2" height="15.0" fill="rgb(210,94,19)" rx="2" ry="2" />
<text  x="666.92" y="319.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.01%)</title><rect x="374.9" y="325" width="0.1" height="15.0" fill="rgb(238,115,48)" rx="2" ry="2" />
<text  x="377.88" y="335.5" ></text>
</g>
<g >
<title>scaled_nearest_scanline_sse2_8888_8888_OVER_sse2_8888_8888_cover_OVER_wrapper (55 samples, 0.65%)</title><rect x="311.7" y="517" width="7.7" height="15.0" fill="rgb(218,218,43)" rx="2" ry="2" />
<text  x="314.66" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::push_back (2 samples, 0.02%)</title><rect x="901.7" y="533" width="0.2" height="15.0" fill="rgb(243,198,46)" rx="2" ry="2" />
<text  x="904.66" y="543.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (22 samples, 0.26%)</title><rect x="919.7" y="581" width="3.1" height="15.0" fill="rgb(251,114,15)" rx="2" ry="2" />
<text  x="922.74" y="591.5" ></text>
</g>
<g >
<title>pack_2x128_128 (4 samples, 0.05%)</title><rect x="283.1" y="533" width="0.5" height="15.0" fill="rgb(233,229,33)" rx="2" ry="2" />
<text  x="286.06" y="543.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="276.2" y="469" width="0.1" height="15.0" fill="rgb(251,77,10)" rx="2" ry="2" />
<text  x="279.19" y="479.5" ></text>
</g>
<g >
<title>_M_lower_bound (125 samples, 1.48%)</title><rect x="641.5" y="405" width="17.5" height="15.0" fill="rgb(234,23,51)" rx="2" ry="2" />
<text  x="644.49" y="415.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.01%)</title><rect x="232.5" y="325" width="0.1" height="15.0" fill="rgb(214,55,41)" rx="2" ry="2" />
<text  x="235.46" y="335.5" ></text>
</g>
<g >
<title>Sprite::SetFlashEffect (2 samples, 0.02%)</title><rect x="983.0" y="565" width="0.2" height="15.0" fill="rgb(224,113,27)" rx="2" ry="2" />
<text  x="985.96" y="575.5" ></text>
</g>
<g >
<title>pixman_image_get_height (11 samples, 0.13%)</title><rect x="347.4" y="597" width="1.5" height="15.0" fill="rgb(221,88,24)" rx="2" ry="2" />
<text  x="350.40" y="607.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, true&gt; (29 samples, 0.34%)</title><rect x="663.2" y="437" width="4.1" height="15.0" fill="rgb(223,48,50)" rx="2" ry="2" />
<text  x="666.22" y="447.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (5 samples, 0.06%)</title><rect x="1166.9" y="469" width="0.7" height="15.0" fill="rgb(207,225,2)" rx="2" ry="2" />
<text  x="1169.87" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (10 samples, 0.12%)</title><rect x="634.9" y="389" width="1.4" height="15.0" fill="rgb(212,48,42)" rx="2" ry="2" />
<text  x="637.90" y="399.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="273.1" y="357" width="0.2" height="15.0" fill="rgb(218,8,53)" rx="2" ry="2" />
<text  x="276.11" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (18 samples, 0.21%)</title><rect x="998.0" y="549" width="2.5" height="15.0" fill="rgb(226,218,46)" rx="2" ry="2" />
<text  x="1000.96" y="559.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="987.7" y="565" width="0.2" height="15.0" fill="rgb(211,60,15)" rx="2" ry="2" />
<text  x="990.73" y="575.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="456.9" y="485" width="0.1" height="15.0" fill="rgb(240,60,45)" rx="2" ry="2" />
<text  x="459.88" y="495.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="472.6" y="469" width="0.1" height="15.0" fill="rgb(218,18,44)" rx="2" ry="2" />
<text  x="475.58" y="479.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="1184.3" y="549" width="0.1" height="15.0" fill="rgb(216,92,25)" rx="2" ry="2" />
<text  x="1187.25" y="559.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (1 samples, 0.01%)</title><rect x="1175.8" y="613" width="0.2" height="15.0" fill="rgb(226,139,16)" rx="2" ry="2" />
<text  x="1178.84" y="623.5" ></text>
</g>
<g >
<title>Game_Interpreter::ValueOrVariable (5 samples, 0.06%)</title><rect x="581.6" y="565" width="0.7" height="15.0" fill="rgb(227,171,13)" rx="2" ry="2" />
<text  x="584.64" y="575.5" ></text>
</g>
<g >
<title>core_combine_over_u_pixel_sse2 (3 samples, 0.04%)</title><rect x="317.3" y="485" width="0.4" height="15.0" fill="rgb(243,185,54)" rx="2" ry="2" />
<text  x="320.27" y="495.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (5 samples, 0.06%)</title><rect x="850.5" y="421" width="0.7" height="15.0" fill="rgb(239,41,16)" rx="2" ry="2" />
<text  x="853.49" y="431.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (8 samples, 0.10%)</title><rect x="357.6" y="533" width="1.2" height="15.0" fill="rgb(236,192,18)" rx="2" ry="2" />
<text  x="360.64" y="543.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="660.3" y="229" width="0.1" height="15.0" fill="rgb(213,73,48)" rx="2" ry="2" />
<text  x="663.28" y="239.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandOptionGeneric (17 samples, 0.20%)</title><rect x="583.9" y="581" width="2.4" height="15.0" fill="rgb(235,199,37)" rx="2" ry="2" />
<text  x="586.88" y="591.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (17 samples, 0.20%)</title><rect x="637.7" y="373" width="2.4" height="15.0" fill="rgb(211,216,42)" rx="2" ry="2" />
<text  x="640.71" y="383.5" ></text>
</g>
<g >
<title>Sprite::SetWaverDepth (1 samples, 0.01%)</title><rect x="119.3" y="773" width="0.2" height="15.0" fill="rgb(251,44,23)" rx="2" ry="2" />
<text  x="122.34" y="783.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="117.9" y="773" width="0.2" height="15.0" fill="rgb(226,171,22)" rx="2" ry="2" />
<text  x="120.94" y="783.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="816.2" y="197" width="0.1" height="15.0" fill="rgb(247,164,20)" rx="2" ry="2" />
<text  x="819.15" y="207.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="50.5" y="709" width="0.2" height="15.0" fill="rgb(207,152,19)" rx="2" ry="2" />
<text  x="53.51" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (6 samples, 0.07%)</title><rect x="894.8" y="549" width="0.8" height="15.0" fill="rgb(239,101,15)" rx="2" ry="2" />
<text  x="897.79" y="559.5" ></text>
</g>
<g >
<title>find_get_entry (3 samples, 0.04%)</title><rect x="46.9" y="613" width="0.4" height="15.0" fill="rgb(253,224,19)" rx="2" ry="2" />
<text  x="49.87" y="623.5" ></text>
</g>
<g >
<title>Game_Screen::GetTone (10 samples, 0.12%)</title><rect x="981.6" y="581" width="1.4" height="15.0" fill="rgb(242,102,17)" rx="2" ry="2" />
<text  x="984.56" y="591.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.01%)</title><rect x="31.2" y="725" width="0.1" height="15.0" fill="rgb(251,109,0)" rx="2" ry="2" />
<text  x="34.17" y="735.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="569.9" y="469" width="0.1" height="15.0" fill="rgb(245,152,38)" rx="2" ry="2" />
<text  x="572.86" y="479.5" ></text>
</g>
<g >
<title>handle_irq_event (6 samples, 0.07%)</title><rect x="1166.7" y="501" width="0.9" height="15.0" fill="rgb(208,160,31)" rx="2" ry="2" />
<text  x="1169.73" y="511.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (16 samples, 0.19%)</title><rect x="998.2" y="405" width="2.3" height="15.0" fill="rgb(247,47,46)" rx="2" ry="2" />
<text  x="1001.24" y="415.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.01%)</title><rect x="46.2" y="709" width="0.1" height="15.0" fill="rgb(244,204,23)" rx="2" ry="2" />
<text  x="49.17" y="719.5" ></text>
</g>
<g >
<title>eventfd_poll (2 samples, 0.02%)</title><rect x="31.3" y="725" width="0.3" height="15.0" fill="rgb(238,87,29)" rx="2" ry="2" />
<text  x="34.31" y="735.5" ></text>
</g>
<g >
<title>trigger_load_balance (1 samples, 0.01%)</title><rect x="538.0" y="421" width="0.2" height="15.0" fill="rgb(227,98,25)" rx="2" ry="2" />
<text  x="541.04" y="431.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandOptionGeneric (1 samples, 0.01%)</title><rect x="64.5" y="773" width="0.2" height="15.0" fill="rgb(206,37,10)" rx="2" ry="2" />
<text  x="67.53" y="783.5" ></text>
</g>
<g >
<title>pix_multiply_2x128 (2 samples, 0.02%)</title><rect x="333.8" y="485" width="0.3" height="15.0" fill="rgb(213,66,41)" rx="2" ry="2" />
<text  x="336.81" y="495.5" ></text>
</g>
<g >
<title>_int_free (3 samples, 0.04%)</title><rect x="121.6" y="773" width="0.4" height="15.0" fill="rgb(223,13,46)" rx="2" ry="2" />
<text  x="124.58" y="783.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (7 samples, 0.08%)</title><rect x="636.7" y="325" width="1.0" height="15.0" fill="rgb(235,9,23)" rx="2" ry="2" />
<text  x="639.73" y="335.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (11 samples, 0.13%)</title><rect x="661.7" y="437" width="1.5" height="15.0" fill="rgb(215,165,8)" rx="2" ry="2" />
<text  x="664.68" y="447.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="472.7" y="437" width="0.2" height="15.0" fill="rgb(234,199,13)" rx="2" ry="2" />
<text  x="475.72" y="447.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (1 samples, 0.01%)</title><rect x="77.0" y="773" width="0.1" height="15.0" fill="rgb(245,114,6)" rx="2" ry="2" />
<text  x="80.00" y="783.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.25%)</title><rect x="997.5" y="581" width="3.0" height="15.0" fill="rgb(222,187,45)" rx="2" ry="2" />
<text  x="1000.54" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (1 samples, 0.01%)</title><rect x="851.2" y="453" width="0.1" height="15.0" fill="rgb(246,142,36)" rx="2" ry="2" />
<text  x="854.20" y="463.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (6 samples, 0.07%)</title><rect x="947.6" y="581" width="0.9" height="15.0" fill="rgb(206,71,28)" rx="2" ry="2" />
<text  x="950.64" y="591.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (229 samples, 2.72%)</title><rect x="376.3" y="645" width="32.1" height="15.0" fill="rgb(240,177,10)" rx="2" ry="2" />
<text  x="379.28" y="655.5" >__..</text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="747.7" y="293" width="0.2" height="15.0" fill="rgb(205,138,48)" rx="2" ry="2" />
<text  x="750.75" y="303.5" ></text>
</g>
<g >
<title>vfs_write (13 samples, 0.15%)</title><rect x="48.7" y="725" width="1.8" height="15.0" fill="rgb(242,11,11)" rx="2" ry="2" />
<text  x="51.69" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::get (4 samples, 0.05%)</title><rect x="901.1" y="533" width="0.6" height="15.0" fill="rgb(226,120,26)" rx="2" ry="2" />
<text  x="904.10" y="543.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (8 samples, 0.10%)</title><rect x="343.3" y="533" width="1.2" height="15.0" fill="rgb(244,40,50)" rx="2" ry="2" />
<text  x="346.34" y="543.5" ></text>
</g>
<g >
<title>__atomic_add (6 samples, 0.07%)</title><rect x="854.3" y="389" width="0.8" height="15.0" fill="rgb(226,189,10)" rx="2" ry="2" />
<text  x="857.28" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="48.8" y="597" width="0.2" height="15.0" fill="rgb(212,5,35)" rx="2" ry="2" />
<text  x="51.83" y="607.5" ></text>
</g>
<g >
<title>Bitmap::height (4 samples, 0.05%)</title><rect x="790.2" y="437" width="0.6" height="15.0" fill="rgb(205,94,26)" rx="2" ry="2" />
<text  x="793.22" y="447.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="747.7" y="133" width="0.2" height="15.0" fill="rgb(252,226,53)" rx="2" ry="2" />
<text  x="750.75" y="143.5" ></text>
</g>
<g >
<title>pixman_image_get_height (2 samples, 0.02%)</title><rect x="790.4" y="421" width="0.2" height="15.0" fill="rgb(214,120,39)" rx="2" ry="2" />
<text  x="793.36" y="431.5" ></text>
</g>
<g >
<title>Scene::IsAsyncPending (62 samples, 0.74%)</title><rect x="1177.1" y="677" width="8.7" height="15.0" fill="rgb(247,194,44)" rx="2" ry="2" />
<text  x="1180.10" y="687.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (2 samples, 0.02%)</title><rect x="834.7" y="373" width="0.2" height="15.0" fill="rgb(226,174,7)" rx="2" ry="2" />
<text  x="837.65" y="383.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.01%)</title><rect x="849.1" y="405" width="0.1" height="15.0" fill="rgb(220,219,43)" rx="2" ry="2" />
<text  x="852.09" y="415.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="44.9" y="469" width="0.1" height="15.0" fill="rgb(236,52,37)" rx="2" ry="2" />
<text  x="47.90" y="479.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.01%)</title><rect x="903.3" y="469" width="0.2" height="15.0" fill="rgb(241,216,33)" rx="2" ry="2" />
<text  x="906.34" y="479.5" ></text>
</g>
<g >
<title>__GI___libc_free (3 samples, 0.04%)</title><rect x="339.1" y="533" width="0.5" height="15.0" fill="rgb(210,156,30)" rx="2" ry="2" />
<text  x="342.13" y="543.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (47 samples, 0.56%)</title><rect x="1169.3" y="485" width="6.5" height="15.0" fill="rgb(247,198,43)" rx="2" ry="2" />
<text  x="1172.25" y="495.5" ></text>
</g>
<g >
<title>negate_2x128 (8 samples, 0.10%)</title><rect x="229.5" y="501" width="1.1" height="15.0" fill="rgb(225,38,32)" rx="2" ry="2" />
<text  x="232.52" y="511.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="375.0" y="453" width="0.2" height="15.0" fill="rgb(212,104,29)" rx="2" ry="2" />
<text  x="378.02" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;Drawable**, Drawable**&gt; (7 samples, 0.08%)</title><rect x="362.7" y="533" width="1.0" height="15.0" fill="rgb(227,114,34)" rx="2" ry="2" />
<text  x="365.68" y="543.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="25.8" y="677" width="0.2" height="15.0" fill="rgb(224,103,6)" rx="2" ry="2" />
<text  x="28.84" y="687.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::swap (5 samples, 0.06%)</title><rect x="850.5" y="437" width="0.7" height="15.0" fill="rgb(244,195,51)" rx="2" ry="2" />
<text  x="853.49" y="447.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="408.2" y="613" width="0.2" height="15.0" fill="rgb(236,139,34)" rx="2" ry="2" />
<text  x="411.24" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (1 samples, 0.01%)</title><rect x="636.4" y="357" width="0.2" height="15.0" fill="rgb(240,46,38)" rx="2" ry="2" />
<text  x="639.45" y="367.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="997.1" y="501" width="0.2" height="15.0" fill="rgb(225,93,47)" rx="2" ry="2" />
<text  x="1000.12" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="1001.0" y="533" width="0.3" height="15.0" fill="rgb(231,228,30)" rx="2" ry="2" />
<text  x="1004.04" y="543.5" ></text>
</g>
<g >
<title>Blend (4 samples, 0.05%)</title><rect x="826.0" y="469" width="0.5" height="15.0" fill="rgb(232,88,17)" rx="2" ry="2" />
<text  x="828.96" y="479.5" ></text>
</g>
<g >
<title>Game_Map::GetEventsXY (1 samples, 0.01%)</title><rect x="65.6" y="773" width="0.2" height="15.0" fill="rgb(228,89,21)" rx="2" ry="2" />
<text  x="68.65" y="783.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (1 samples, 0.01%)</title><rect x="993.6" y="453" width="0.2" height="15.0" fill="rgb(208,8,46)" rx="2" ry="2" />
<text  x="996.61" y="463.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (108 samples, 1.28%)</title><rect x="801.2" y="229" width="15.1" height="15.0" fill="rgb(225,156,45)" rx="2" ry="2" />
<text  x="804.15" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::end (1 samples, 0.01%)</title><rect x="624.5" y="421" width="0.2" height="15.0" fill="rgb(222,168,50)" rx="2" ry="2" />
<text  x="627.53" y="431.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="384.0" y="517" width="0.1" height="15.0" fill="rgb(228,197,52)" rx="2" ry="2" />
<text  x="386.99" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (42 samples, 0.50%)</title><rect x="377.3" y="613" width="5.8" height="15.0" fill="rgb(252,43,31)" rx="2" ry="2" />
<text  x="380.26" y="623.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (1 samples, 0.01%)</title><rect x="598.3" y="533" width="0.2" height="15.0" fill="rgb(232,154,26)" rx="2" ry="2" />
<text  x="601.32" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::_M_lower_bound (18 samples, 0.21%)</title><rect x="822.0" y="245" width="2.6" height="15.0" fill="rgb(208,198,26)" rx="2" ry="2" />
<text  x="825.04" y="255.5" ></text>
</g>
<g >
<title>_int_free (3 samples, 0.04%)</title><rect x="59.3" y="773" width="0.5" height="15.0" fill="rgb(210,2,30)" rx="2" ry="2" />
<text  x="62.34" y="783.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (2 samples, 0.02%)</title><rect x="902.5" y="517" width="0.3" height="15.0" fill="rgb(250,157,20)" rx="2" ry="2" />
<text  x="905.50" y="527.5" ></text>
</g>
<g >
<title>Sprite::SetX (3 samples, 0.04%)</title><rect x="69.6" y="773" width="0.4" height="15.0" fill="rgb(235,79,49)" rx="2" ry="2" />
<text  x="72.57" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (4 samples, 0.05%)</title><rect x="666.7" y="309" width="0.6" height="15.0" fill="rgb(234,102,51)" rx="2" ry="2" />
<text  x="669.72" y="319.5" ></text>
</g>
<g >
<title>Game_Picture::SyncCurrentToFinish (2 samples, 0.02%)</title><rect x="968.9" y="597" width="0.3" height="15.0" fill="rgb(216,82,15)" rx="2" ry="2" />
<text  x="971.94" y="607.5" ></text>
</g>
<g >
<title>Game_Screen::GetTone (3 samples, 0.04%)</title><rect x="894.4" y="549" width="0.4" height="15.0" fill="rgb(225,85,25)" rx="2" ry="2" />
<text  x="897.37" y="559.5" ></text>
</g>
<g >
<title>std::ostream::_M_insert&lt;long&gt; (2 samples, 0.02%)</title><rect x="902.1" y="549" width="0.3" height="15.0" fill="rgb(215,152,51)" rx="2" ry="2" />
<text  x="905.08" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (1 samples, 0.01%)</title><rect x="979.7" y="549" width="0.2" height="15.0" fill="rgb(228,16,44)" rx="2" ry="2" />
<text  x="982.74" y="559.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (7 samples, 0.08%)</title><rect x="854.1" y="405" width="1.0" height="15.0" fill="rgb(225,144,24)" rx="2" ry="2" />
<text  x="857.14" y="415.5" ></text>
</g>
<g >
<title>operator!= (2 samples, 0.02%)</title><rect x="892.8" y="501" width="0.3" height="15.0" fill="rgb(248,210,1)" rx="2" ry="2" />
<text  x="895.83" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.01%)</title><rect x="664.1" y="325" width="0.1" height="15.0" fill="rgb(222,203,47)" rx="2" ry="2" />
<text  x="667.06" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="1001.0" y="517" width="0.3" height="15.0" fill="rgb(233,28,10)" rx="2" ry="2" />
<text  x="1004.04" y="527.5" ></text>
</g>
<g >
<title>Sprite::BlitScreen (1,381 samples, 16.41%)</title><rect x="157.2" y="629" width="193.6" height="15.0" fill="rgb(253,130,16)" rx="2" ry="2" />
<text  x="160.18" y="639.5" >Sprite::BlitScreen</text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="1166.7" y="485" width="0.2" height="15.0" fill="rgb(234,35,37)" rx="2" ry="2" />
<text  x="1169.73" y="495.5" ></text>
</g>
<g >
<title>pixman_image_get_height (5 samples, 0.06%)</title><rect x="73.6" y="773" width="0.7" height="15.0" fill="rgb(240,47,3)" rx="2" ry="2" />
<text  x="76.64" y="783.5" ></text>
</g>
<g >
<title>enqueue_entity (2 samples, 0.02%)</title><rect x="49.1" y="549" width="0.3" height="15.0" fill="rgb(238,18,17)" rx="2" ry="2" />
<text  x="52.11" y="559.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (14 samples, 0.17%)</title><rect x="669.9" y="453" width="2.0" height="15.0" fill="rgb(238,153,45)" rx="2" ry="2" />
<text  x="672.95" y="463.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="899.3" y="421" width="0.1" height="15.0" fill="rgb(250,109,41)" rx="2" ry="2" />
<text  x="902.28" y="431.5" ></text>
</g>
<g >
<title>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;::basic_istream (6 samples, 0.07%)</title><rect x="902.9" y="517" width="0.9" height="15.0" fill="rgb(237,153,21)" rx="2" ry="2" />
<text  x="905.92" y="527.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (1 samples, 0.01%)</title><rect x="902.2" y="517" width="0.2" height="15.0" fill="rgb(220,120,20)" rx="2" ry="2" />
<text  x="905.22" y="527.5" ></text>
</g>
<g >
<title>_mm_cmpeq_epi8 (50 samples, 0.59%)</title><rect x="724.8" y="373" width="7.0" height="15.0" fill="rgb(205,215,26)" rx="2" ry="2" />
<text  x="727.76" y="383.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (2 samples, 0.02%)</title><rect x="604.1" y="373" width="0.2" height="15.0" fill="rgb(243,193,4)" rx="2" ry="2" />
<text  x="607.07" y="383.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1 samples, 0.01%)</title><rect x="82.1" y="597" width="0.1" height="15.0" fill="rgb(247,9,28)" rx="2" ry="2" />
<text  x="85.05" y="607.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (24 samples, 0.29%)</title><rect x="895.8" y="485" width="3.3" height="15.0" fill="rgb(214,197,43)" rx="2" ry="2" />
<text  x="898.77" y="495.5" ></text>
</g>
<g >
<title>core_combine_over_u_sse2_no_mask (1 samples, 0.01%)</title><rect x="353.4" y="533" width="0.2" height="15.0" fill="rgb(224,57,50)" rx="2" ry="2" />
<text  x="356.43" y="543.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (131 samples, 1.56%)</title><rect x="623.0" y="453" width="18.4" height="15.0" fill="rgb(241,112,37)" rx="2" ry="2" />
<text  x="625.99" y="463.5" ></text>
</g>
<g >
<title>SDL_IOReady (2 samples, 0.02%)</title><rect x="994.7" y="549" width="0.3" height="15.0" fill="rgb(240,111,20)" rx="2" ry="2" />
<text  x="997.74" y="559.5" ></text>
</g>
<g >
<title>SDL_Delay_REAL (60 samples, 0.71%)</title><rect x="367.2" y="661" width="8.4" height="15.0" fill="rgb(229,23,22)" rx="2" ry="2" />
<text  x="370.17" y="671.5" ></text>
</g>
<g >
<title>Game_Screen::GetTone (18 samples, 0.21%)</title><rect x="890.3" y="533" width="2.5" height="15.0" fill="rgb(209,147,47)" rx="2" ry="2" />
<text  x="893.30" y="543.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="384.0" y="565" width="0.1" height="15.0" fill="rgb(235,54,8)" rx="2" ry="2" />
<text  x="386.99" y="575.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="50.7" y="741" width="0.1" height="15.0" fill="rgb(234,77,5)" rx="2" ry="2" />
<text  x="53.65" y="751.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.01%)</title><rect x="273.1" y="229" width="0.2" height="15.0" fill="rgb(246,55,10)" rx="2" ry="2" />
<text  x="276.11" y="239.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;Drawable*&gt; (1 samples, 0.01%)</title><rect x="365.6" y="485" width="0.2" height="15.0" fill="rgb(225,30,24)" rx="2" ry="2" />
<text  x="368.63" y="495.5" ></text>
</g>
<g >
<title>generic_file_read_iter (5 samples, 0.06%)</title><rect x="46.6" y="661" width="0.7" height="15.0" fill="rgb(241,44,26)" rx="2" ry="2" />
<text  x="49.59" y="671.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="341.1" y="517" width="0.1" height="15.0" fill="rgb(247,32,28)" rx="2" ry="2" />
<text  x="344.10" y="527.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="862.4" y="293" width="0.1" height="15.0" fill="rgb(249,54,22)" rx="2" ry="2" />
<text  x="865.41" y="303.5" ></text>
</g>
<g >
<title>sock_poll (1 samples, 0.01%)</title><rect x="1000.6" y="421" width="0.2" height="15.0" fill="rgb(225,131,52)" rx="2" ry="2" />
<text  x="1003.62" y="431.5" ></text>
</g>
<g >
<title>std::make_shared&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (242 samples, 2.87%)</title><rect x="791.6" y="453" width="33.9" height="15.0" fill="rgb(213,113,43)" rx="2" ry="2" />
<text  x="794.62" y="463.5" >st..</text>
</g>
<g >
<title>apparmor_file_permission (3 samples, 0.04%)</title><rect x="48.0" y="677" width="0.4" height="15.0" fill="rgb(241,36,20)" rx="2" ry="2" />
<text  x="50.99" y="687.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="987.7" y="533" width="0.2" height="15.0" fill="rgb(223,81,12)" rx="2" ry="2" />
<text  x="990.73" y="543.5" ></text>
</g>
<g >
<title>[libGLX.so.0.0.0] (5 samples, 0.06%)</title><rect x="1176.3" y="613" width="0.7" height="15.0" fill="rgb(217,142,47)" rx="2" ry="2" />
<text  x="1179.26" y="623.5" ></text>
</g>
<g >
<title>_mm_cmpeq_epi8 (5 samples, 0.06%)</title><rect x="318.0" y="469" width="0.7" height="15.0" fill="rgb(252,72,14)" rx="2" ry="2" />
<text  x="320.97" y="479.5" ></text>
</g>
<g >
<title>handle_irq (6 samples, 0.07%)</title><rect x="1166.7" y="533" width="0.9" height="15.0" fill="rgb(249,126,44)" rx="2" ry="2" />
<text  x="1169.73" y="543.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (1 samples, 0.01%)</title><rect x="887.5" y="533" width="0.1" height="15.0" fill="rgb(240,140,45)" rx="2" ry="2" />
<text  x="890.50" y="543.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="244.9" y="341" width="0.2" height="15.0" fill="rgb(232,47,2)" rx="2" ry="2" />
<text  x="247.93" y="351.5" ></text>
</g>
<g >
<title>FileRequestAsync::SetGraphicFile (4 samples, 0.05%)</title><rect x="878.4" y="533" width="0.5" height="15.0" fill="rgb(226,9,5)" rx="2" ry="2" />
<text  x="881.39" y="543.5" ></text>
</g>
<g >
<title>sock_recvmsg (2 samples, 0.02%)</title><rect x="1001.9" y="357" width="0.3" height="15.0" fill="rgb(217,78,37)" rx="2" ry="2" />
<text  x="1004.88" y="367.5" ></text>
</g>
<g >
<title>Game_Screen::GetFlashColor (11 samples, 0.13%)</title><rect x="980.0" y="581" width="1.6" height="15.0" fill="rgb(241,163,39)" rx="2" ry="2" />
<text  x="983.02" y="591.5" ></text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (1 samples, 0.01%)</title><rect x="979.9" y="581" width="0.1" height="15.0" fill="rgb(244,185,29)" rx="2" ry="2" />
<text  x="982.88" y="591.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="25.7" y="773" width="0.3" height="15.0" fill="rgb(226,11,45)" rx="2" ry="2" />
<text  x="28.70" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (23 samples, 0.27%)</title><rect x="904.2" y="549" width="3.2" height="15.0" fill="rgb(212,229,19)" rx="2" ry="2" />
<text  x="907.18" y="559.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.01%)</title><rect x="279.0" y="469" width="0.1" height="15.0" fill="rgb(252,43,26)" rx="2" ry="2" />
<text  x="282.00" y="479.5" ></text>
</g>
<g >
<title>in_over_2x128 (119 samples, 1.41%)</title><rect x="266.4" y="533" width="16.7" height="15.0" fill="rgb(241,192,0)" rx="2" ry="2" />
<text  x="269.38" y="543.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.01%)</title><rect x="879.7" y="453" width="0.1" height="15.0" fill="rgb(246,63,17)" rx="2" ry="2" />
<text  x="882.65" y="463.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="565.5" y="485" width="0.2" height="15.0" fill="rgb(219,214,42)" rx="2" ry="2" />
<text  x="568.52" y="495.5" ></text>
</g>
<g >
<title>Game_Screen::GetPicture (5 samples, 0.06%)</title><rect x="583.2" y="565" width="0.7" height="15.0" fill="rgb(249,216,11)" rx="2" ry="2" />
<text  x="586.18" y="575.5" ></text>
</g>
<g >
<title>Rect::Adjust (2 samples, 0.02%)</title><rect x="345.9" y="597" width="0.2" height="15.0" fill="rgb(205,178,13)" rx="2" ry="2" />
<text  x="348.86" y="607.5" ></text>
</g>
<g >
<title>Game_Map::UpdateCommonEvents (3,954 samples, 46.97%)</title><rect x="408.4" y="629" width="554.2" height="15.0" fill="rgb(214,66,52)" rx="2" ry="2" />
<text  x="411.38" y="639.5" >Game_Map::UpdateCommonEvents</text>
</g>
<g >
<title>Bitmap::height (2 samples, 0.02%)</title><rect x="975.1" y="565" width="0.3" height="15.0" fill="rgb(213,104,4)" rx="2" ry="2" />
<text  x="978.11" y="575.5" ></text>
</g>
<g >
<title>_pixman_compute_composite_region32 (2 samples, 0.02%)</title><rect x="161.2" y="549" width="0.3" height="15.0" fill="rgb(242,195,22)" rx="2" ry="2" />
<text  x="164.25" y="559.5" ></text>
</g>
<g >
<title>_mm_xor_si128 (1 samples, 0.01%)</title><rect x="214.0" y="469" width="0.1" height="15.0" fill="rgb(252,91,27)" rx="2" ry="2" />
<text  x="216.96" y="479.5" ></text>
</g>
<g >
<title>_mm_mullo_epi16 (18 samples, 0.21%)</title><rect x="280.5" y="501" width="2.6" height="15.0" fill="rgb(254,156,38)" rx="2" ry="2" />
<text  x="283.54" y="511.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (16 samples, 0.19%)</title><rect x="998.2" y="453" width="2.3" height="15.0" fill="rgb(225,97,53)" rx="2" ry="2" />
<text  x="1001.24" y="463.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::~_Head_base (1 samples, 0.01%)</title><rect x="667.3" y="405" width="0.1" height="15.0" fill="rgb(213,4,37)" rx="2" ry="2" />
<text  x="670.28" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;Drawable**, Drawable**&gt; (3 samples, 0.04%)</title><rect x="365.9" y="565" width="0.4" height="15.0" fill="rgb(212,17,19)" rx="2" ry="2" />
<text  x="368.91" y="575.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_swap (2 samples, 0.02%)</title><rect x="876.4" y="437" width="0.3" height="15.0" fill="rgb(215,88,26)" rx="2" ry="2" />
<text  x="879.43" y="447.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (19 samples, 0.23%)</title><rect x="359.2" y="517" width="2.6" height="15.0" fill="rgb(233,197,46)" rx="2" ry="2" />
<text  x="362.18" y="527.5" ></text>
</g>
<g >
<title>__atomic_add (7 samples, 0.08%)</title><rect x="349.1" y="517" width="1.0" height="15.0" fill="rgb(225,19,21)" rx="2" ry="2" />
<text  x="352.09" y="527.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="899.3" y="517" width="0.1" height="15.0" fill="rgb(239,112,16)" rx="2" ry="2" />
<text  x="902.28" y="527.5" ></text>
</g>
<g >
<title>GL_RenderCopy (1 samples, 0.01%)</title><rect x="1003.8" y="629" width="0.2" height="15.0" fill="rgb(234,11,42)" rx="2" ry="2" />
<text  x="1006.85" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (4 samples, 0.05%)</title><rect x="628.2" y="389" width="0.5" height="15.0" fill="rgb(214,139,40)" rx="2" ry="2" />
<text  x="631.18" y="399.5" ></text>
</g>
<g >
<title>_mm_cmpeq_epi8 (9 samples, 0.11%)</title><rect x="185.8" y="485" width="1.2" height="15.0" fill="rgb(208,203,54)" rx="2" ry="2" />
<text  x="188.78" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (2 samples, 0.02%)</title><rect x="30.0" y="757" width="0.3" height="15.0" fill="rgb(224,219,10)" rx="2" ry="2" />
<text  x="33.05" y="767.5" ></text>
</g>
<g >
<title>activate_task (1 samples, 0.01%)</title><rect x="374.9" y="293" width="0.1" height="15.0" fill="rgb(220,9,39)" rx="2" ry="2" />
<text  x="377.88" y="303.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (10 samples, 0.12%)</title><rect x="833.5" y="453" width="1.4" height="15.0" fill="rgb(206,204,40)" rx="2" ry="2" />
<text  x="836.53" y="463.5" ></text>
</g>
<g >
<title>[libGLX.so.0.0.0] (6 samples, 0.07%)</title><rect x="1176.3" y="629" width="0.8" height="15.0" fill="rgb(235,26,53)" rx="2" ry="2" />
<text  x="1179.26" y="639.5" ></text>
</g>
<g >
<title>Game_Picture::Show (2,159 samples, 25.65%)</title><rect x="596.5" y="565" width="302.6" height="15.0" fill="rgb(252,20,46)" rx="2" ry="2" />
<text  x="599.50" y="575.5" >Game_Picture::Show</text>
</g>
<g >
<title>__libc_calloc (3 samples, 0.04%)</title><rect x="120.5" y="773" width="0.4" height="15.0" fill="rgb(230,11,43)" rx="2" ry="2" />
<text  x="123.46" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**&gt; (8 samples, 0.10%)</title><rect x="357.6" y="549" width="1.2" height="15.0" fill="rgb(220,105,31)" rx="2" ry="2" />
<text  x="360.64" y="559.5" ></text>
</g>
<g >
<title>xhci_get_frame (1 samples, 0.01%)</title><rect x="273.1" y="149" width="0.2" height="15.0" fill="rgb(225,64,47)" rx="2" ry="2" />
<text  x="276.11" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="1001.5" y="517" width="0.2" height="15.0" fill="rgb(228,147,24)" rx="2" ry="2" />
<text  x="1004.46" y="527.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (1 samples, 0.01%)</title><rect x="367.3" y="629" width="0.1" height="15.0" fill="rgb(227,60,24)" rx="2" ry="2" />
<text  x="370.31" y="639.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (6 samples, 0.07%)</title><rect x="343.6" y="517" width="0.9" height="15.0" fill="rgb(233,77,27)" rx="2" ry="2" />
<text  x="346.62" y="527.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.04%)</title><rect x="825.0" y="325" width="0.4" height="15.0" fill="rgb(248,35,49)" rx="2" ry="2" />
<text  x="827.98" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2 samples, 0.02%)</title><rect x="604.1" y="389" width="0.2" height="15.0" fill="rgb(216,117,44)" rx="2" ry="2" />
<text  x="607.07" y="399.5" ></text>
</g>
<g >
<title>_mm_mulhi_epu16 (1 samples, 0.01%)</title><rect x="333.1" y="469" width="0.1" height="15.0" fill="rgb(231,216,37)" rx="2" ry="2" />
<text  x="336.11" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.01%)</title><rect x="668.8" y="389" width="0.2" height="15.0" fill="rgb(245,122,51)" rx="2" ry="2" />
<text  x="671.83" y="399.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (242 samples, 2.87%)</title><rect x="791.6" y="405" width="33.9" height="15.0" fill="rgb(210,228,0)" rx="2" ry="2" />
<text  x="794.62" y="415.5" >st..</text>
</g>
<g >
<title>pix_multiply_2x128 (50 samples, 0.59%)</title><rect x="270.3" y="501" width="7.0" height="15.0" fill="rgb(240,175,32)" rx="2" ry="2" />
<text  x="273.31" y="511.5" ></text>
</g>
<g >
<title>pixman_transform_point_31_16_3d (1 samples, 0.01%)</title><rect x="311.5" y="501" width="0.2" height="15.0" fill="rgb(250,69,50)" rx="2" ry="2" />
<text  x="314.52" y="511.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.01%)</title><rect x="1001.2" y="501" width="0.1" height="15.0" fill="rgb(243,33,20)" rx="2" ry="2" />
<text  x="1004.18" y="511.5" ></text>
</g>
<g >
<title>SDL_PumpEvents_REAL (15 samples, 0.18%)</title><rect x="1000.5" y="613" width="2.1" height="15.0" fill="rgb(226,177,12)" rx="2" ry="2" />
<text  x="1003.48" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (6 samples, 0.07%)</title><rect x="609.5" y="469" width="0.9" height="15.0" fill="rgb(213,22,7)" rx="2" ry="2" />
<text  x="612.53" y="479.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="849.0" y="453" width="0.2" height="15.0" fill="rgb(243,174,8)" rx="2" ry="2" />
<text  x="851.95" y="463.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (1 samples, 0.01%)</title><rect x="154.7" y="549" width="0.1" height="15.0" fill="rgb(234,46,23)" rx="2" ry="2" />
<text  x="157.66" y="559.5" ></text>
</g>
<g >
<title>_mm_unpacklo_epi8 (1 samples, 0.01%)</title><rect x="260.5" y="517" width="0.1" height="15.0" fill="rgb(250,172,30)" rx="2" ry="2" />
<text  x="263.49" y="527.5" ></text>
</g>
<g >
<title>_mm_adds_epu16 (21 samples, 0.25%)</title><rect x="270.3" y="485" width="3.0" height="15.0" fill="rgb(247,226,45)" rx="2" ry="2" />
<text  x="273.31" y="495.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.01%)</title><rect x="825.3" y="293" width="0.1" height="15.0" fill="rgb(254,148,46)" rx="2" ry="2" />
<text  x="828.26" y="303.5" ></text>
</g>
<g >
<title>SDL_ConvertPixels_REAL (1,168 samples, 13.88%)</title><rect x="1004.0" y="613" width="163.7" height="15.0" fill="rgb(209,64,29)" rx="2" ry="2" />
<text  x="1006.99" y="623.5" >SDL_ConvertPixels_REAL</text>
</g>
<g >
<title>__libc_recvmsg (2 samples, 0.02%)</title><rect x="997.3" y="501" width="0.2" height="15.0" fill="rgb(227,200,8)" rx="2" ry="2" />
<text  x="1000.26" y="511.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (2 samples, 0.02%)</title><rect x="1189.7" y="789" width="0.3" height="15.0" fill="rgb(229,48,45)" rx="2" ry="2" />
<text  x="1192.72" y="799.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipToNextConditional (113 samples, 1.34%)</title><rect x="457.0" y="565" width="15.9" height="15.0" fill="rgb(244,73,36)" rx="2" ry="2" />
<text  x="460.02" y="575.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="154.5" y="533" width="0.2" height="15.0" fill="rgb(221,189,16)" rx="2" ry="2" />
<text  x="157.52" y="543.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (4 samples, 0.05%)</title><rect x="85.3" y="789" width="0.5" height="15.0" fill="rgb(241,125,36)" rx="2" ry="2" />
<text  x="88.27" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create@plt (1 samples, 0.01%)</title><rect x="603.6" y="437" width="0.2" height="15.0" fill="rgb(218,148,20)" rx="2" ry="2" />
<text  x="606.64" y="447.5" ></text>
</g>
<g >
<title>usb_hcd_submit_urb (1 samples, 0.01%)</title><rect x="747.7" y="85" width="0.2" height="15.0" fill="rgb(238,131,0)" rx="2" ry="2" />
<text  x="750.75" y="95.5" ></text>
</g>
<g >
<title>Tone::Tone (4 samples, 0.05%)</title><rect x="829.3" y="453" width="0.6" height="15.0" fill="rgb(216,202,40)" rx="2" ry="2" />
<text  x="832.33" y="463.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="44.9" y="597" width="0.1" height="15.0" fill="rgb(246,44,14)" rx="2" ry="2" />
<text  x="47.90" y="607.5" ></text>
</g>
<g >
<title>smp_irq_work_interrupt (1 samples, 0.01%)</title><rect x="374.9" y="485" width="0.1" height="15.0" fill="rgb(242,177,47)" rx="2" ry="2" />
<text  x="377.88" y="495.5" ></text>
</g>
<g >
<title>Bitmap::find_format (1 samples, 0.01%)</title><rect x="824.6" y="325" width="0.1" height="15.0" fill="rgb(223,158,32)" rx="2" ry="2" />
<text  x="827.56" y="335.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (7 samples, 0.08%)</title><rect x="659.4" y="309" width="1.0" height="15.0" fill="rgb(206,7,18)" rx="2" ry="2" />
<text  x="662.43" y="319.5" ></text>
</g>
<g >
<title>color_to_float (2 samples, 0.02%)</title><rect x="292.5" y="549" width="0.2" height="15.0" fill="rgb(207,103,46)" rx="2" ry="2" />
<text  x="295.45" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (163 samples, 1.94%)</title><rect x="27.8" y="789" width="22.9" height="15.0" fill="rgb(245,226,52)" rx="2" ry="2" />
<text  x="30.80" y="799.5" >e..</text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (143 samples, 1.70%)</title><rect x="856.2" y="405" width="20.1" height="15.0" fill="rgb(225,188,13)" rx="2" ry="2" />
<text  x="859.24" y="415.5" ></text>
</g>
<g >
<title>easyrpg-player (8,123 samples, 96.50%)</title><rect x="51.4" y="805" width="1138.6" height="15.0" fill="rgb(222,173,12)" rx="2" ry="2" />
<text  x="54.35" y="815.5" >easyrpg-player</text>
</g>
<g >
<title>Bitmap::Create (243 samples, 2.89%)</title><rect x="791.5" y="469" width="34.0" height="15.0" fill="rgb(238,218,52)" rx="2" ry="2" />
<text  x="794.48" y="479.5" >Bi..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (23 samples, 0.27%)</title><rect x="904.2" y="565" width="3.2" height="15.0" fill="rgb(215,189,18)" rx="2" ry="2" />
<text  x="907.18" y="575.5" ></text>
</g>
<g >
<title>ctx_sched_out (2 samples, 0.02%)</title><rect x="32.8" y="613" width="0.3" height="15.0" fill="rgb(225,120,9)" rx="2" ry="2" />
<text  x="35.85" y="623.5" ></text>
</g>
<g >
<title>SDL_UDEV_Poll (2 samples, 0.02%)</title><rect x="994.7" y="581" width="0.3" height="15.0" fill="rgb(230,129,23)" rx="2" ry="2" />
<text  x="997.74" y="591.5" ></text>
</g>
<g >
<title>sse2_composite_over_x888_n_8888 (193 samples, 2.29%)</title><rect x="260.6" y="549" width="27.1" height="15.0" fill="rgb(251,149,10)" rx="2" ry="2" />
<text  x="263.63" y="559.5" >s..</text>
</g>
<g >
<title>Game_Character::UpdateMovement (9 samples, 0.11%)</title><rect x="964.7" y="613" width="1.3" height="15.0" fill="rgb(254,71,8)" rx="2" ry="2" />
<text  x="967.74" y="623.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (8 samples, 0.10%)</title><rect x="663.2" y="405" width="1.1" height="15.0" fill="rgb(254,218,44)" rx="2" ry="2" />
<text  x="666.22" y="415.5" ></text>
</g>
<g >
<title>unix_stream_read_generic (2 samples, 0.02%)</title><rect x="1001.9" y="325" width="0.3" height="15.0" fill="rgb(252,8,23)" rx="2" ry="2" />
<text  x="1004.88" y="335.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (10 samples, 0.12%)</title><rect x="341.9" y="597" width="1.4" height="15.0" fill="rgb(208,200,18)" rx="2" ry="2" />
<text  x="344.94" y="607.5" ></text>
</g>
<g >
<title>Player::Update (7,304 samples, 86.77%)</title><rect x="153.3" y="677" width="1023.8" height="15.0" fill="rgb(212,7,8)" rx="2" ry="2" />
<text  x="156.26" y="687.5" >Player::Update</text>
</g>
<g >
<title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::size (1 samples, 0.01%)</title><rect x="962.5" y="581" width="0.1" height="15.0" fill="rgb(209,113,25)" rx="2" ry="2" />
<text  x="965.49" y="591.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**&gt; (1 samples, 0.01%)</title><rect x="365.6" y="517" width="0.2" height="15.0" fill="rgb(252,151,34)" rx="2" ry="2" />
<text  x="368.63" y="527.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (3 samples, 0.04%)</title><rect x="400.8" y="549" width="0.4" height="15.0" fill="rgb(238,3,5)" rx="2" ry="2" />
<text  x="403.81" y="559.5" ></text>
</g>
<g >
<title>create_bits (164 samples, 1.95%)</title><rect x="797.8" y="261" width="23.0" height="15.0" fill="rgb(226,37,19)" rx="2" ry="2" />
<text  x="800.79" y="271.5" >c..</text>
</g>
<g >
<title>pix_multiply_1x128 (1 samples, 0.01%)</title><rect x="225.0" y="517" width="0.2" height="15.0" fill="rgb(227,181,10)" rx="2" ry="2" />
<text  x="228.03" y="527.5" ></text>
</g>
<g >
<title>operator== (2 samples, 0.02%)</title><rect x="892.8" y="485" width="0.3" height="15.0" fill="rgb(252,185,16)" rx="2" ry="2" />
<text  x="895.83" y="495.5" ></text>
</g>
<g >
<title>in_over_2x128 (5 samples, 0.06%)</title><rect x="333.4" y="501" width="0.7" height="15.0" fill="rgb(252,190,51)" rx="2" ry="2" />
<text  x="336.39" y="511.5" ></text>
</g>
<g >
<title>Game_Screen::GetPicture (6 samples, 0.07%)</title><rect x="900.8" y="565" width="0.9" height="15.0" fill="rgb(241,75,0)" rx="2" ry="2" />
<text  x="903.82" y="575.5" ></text>
</g>
<g >
<title>set_task_cpu (1 samples, 0.01%)</title><rect x="49.0" y="597" width="0.1" height="15.0" fill="rgb(230,167,45)" rx="2" ry="2" />
<text  x="51.97" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::operator (1 samples, 0.01%)</title><rect x="851.2" y="469" width="0.1" height="15.0" fill="rgb(205,144,22)" rx="2" ry="2" />
<text  x="854.20" y="479.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (4 samples, 0.05%)</title><rect x="365.8" y="581" width="0.5" height="15.0" fill="rgb(221,46,6)" rx="2" ry="2" />
<text  x="368.77" y="591.5" ></text>
</g>
<g >
<title>optimize_operator (1 samples, 0.01%)</title><rect x="337.3" y="533" width="0.2" height="15.0" fill="rgb(212,44,18)" rx="2" ry="2" />
<text  x="340.31" y="543.5" ></text>
</g>
<g >
<title>enqueue_task_fair (2 samples, 0.02%)</title><rect x="49.1" y="565" width="0.3" height="15.0" fill="rgb(231,211,39)" rx="2" ry="2" />
<text  x="52.11" y="575.5" ></text>
</g>
<g >
<title>Game_Character::SetProcessed (2 samples, 0.02%)</title><rect x="964.3" y="597" width="0.3" height="15.0" fill="rgb(244,143,22)" rx="2" ry="2" />
<text  x="967.32" y="607.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandErasePicture (2 samples, 0.02%)</title><rect x="571.4" y="581" width="0.3" height="15.0" fill="rgb(224,209,22)" rx="2" ry="2" />
<text  x="574.40" y="591.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandMovePicture (1 samples, 0.01%)</title><rect x="64.4" y="773" width="0.1" height="15.0" fill="rgb(247,48,10)" rx="2" ry="2" />
<text  x="67.39" y="783.5" ></text>
</g>
<g >
<title>Bitmap::width (2 samples, 0.02%)</title><rect x="853.7" y="453" width="0.3" height="15.0" fill="rgb(239,108,26)" rx="2" ry="2" />
<text  x="856.72" y="463.5" ></text>
</g>
<g >
<title>Game_Map::IsAnyEventStarting (9 samples, 0.11%)</title><rect x="964.7" y="581" width="1.3" height="15.0" fill="rgb(232,79,40)" rx="2" ry="2" />
<text  x="967.74" y="591.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="276.2" y="341" width="0.1" height="15.0" fill="rgb(216,45,4)" rx="2" ry="2" />
<text  x="279.19" y="351.5" ></text>
</g>
<g >
<title>operator== (2 samples, 0.02%)</title><rect x="983.0" y="533" width="0.2" height="15.0" fill="rgb(215,45,1)" rx="2" ry="2" />
<text  x="985.96" y="543.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.02%)</title><rect x="472.6" y="501" width="0.3" height="15.0" fill="rgb(234,184,15)" rx="2" ry="2" />
<text  x="475.58" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (1 samples, 0.01%)</title><rect x="636.4" y="325" width="0.2" height="15.0" fill="rgb(223,124,44)" rx="2" ry="2" />
<text  x="639.45" y="335.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (6 samples, 0.07%)</title><rect x="848.1" y="469" width="0.9" height="15.0" fill="rgb(252,30,50)" rx="2" ry="2" />
<text  x="851.11" y="479.5" ></text>
</g>
<g >
<title>scaled_nearest_scanline_sse2_8888_n_8888_OVER (114 samples, 1.35%)</title><rect x="321.3" y="517" width="16.0" height="15.0" fill="rgb(221,105,39)" rx="2" ry="2" />
<text  x="324.33" y="527.5" ></text>
</g>
<g >
<title>pixman_image_composite32@plt (1 samples, 0.01%)</title><rect x="337.9" y="549" width="0.1" height="15.0" fill="rgb(245,137,18)" rx="2" ry="2" />
<text  x="340.87" y="559.5" ></text>
</g>
<g >
<title>free@plt (2 samples, 0.02%)</title><rect x="340.7" y="501" width="0.3" height="15.0" fill="rgb(253,71,2)" rx="2" ry="2" />
<text  x="343.67" y="511.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (2 samples, 0.02%)</title><rect x="880.8" y="533" width="0.3" height="15.0" fill="rgb(215,16,39)" rx="2" ry="2" />
<text  x="883.77" y="543.5" ></text>
</g>
<g >
<title>pick_next_entity (1 samples, 0.01%)</title><rect x="83.0" y="645" width="0.2" height="15.0" fill="rgb(222,56,45)" rx="2" ry="2" />
<text  x="86.03" y="655.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (2 samples, 0.02%)</title><rect x="878.0" y="485" width="0.2" height="15.0" fill="rgb(234,89,36)" rx="2" ry="2" />
<text  x="880.97" y="495.5" ></text>
</g>
<g >
<title>__strlen_avx2 (3 samples, 0.04%)</title><rect x="669.5" y="421" width="0.4" height="15.0" fill="rgb(220,111,34)" rx="2" ry="2" />
<text  x="672.53" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (12 samples, 0.14%)</title><rect x="26.1" y="789" width="1.7" height="15.0" fill="rgb(208,146,47)" rx="2" ry="2" />
<text  x="29.12" y="799.5" ></text>
</g>
<g >
<title>Game_Map::UpdateForegroundEvents (12 samples, 0.14%)</title><rect x="962.6" y="629" width="1.7" height="15.0" fill="rgb(243,66,10)" rx="2" ry="2" />
<text  x="965.63" y="639.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="667.0" y="245" width="0.3" height="15.0" fill="rgb(219,163,40)" rx="2" ry="2" />
<text  x="670.00" y="255.5" ></text>
</g>
<g >
<title>Cache::SystemOrBlack (5 samples, 0.06%)</title><rect x="993.5" y="581" width="0.7" height="15.0" fill="rgb(239,136,26)" rx="2" ry="2" />
<text  x="996.47" y="591.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="995.4" y="485" width="0.2" height="15.0" fill="rgb(244,156,26)" rx="2" ry="2" />
<text  x="998.44" y="495.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="232.5" y="405" width="0.1" height="15.0" fill="rgb(208,138,46)" rx="2" ry="2" />
<text  x="235.46" y="415.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, FileRequestAsync, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt; &gt;::find (40 samples, 0.48%)</title><rect x="634.5" y="421" width="5.6" height="15.0" fill="rgb(244,57,51)" rx="2" ry="2" />
<text  x="637.48" y="431.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.01%)</title><rect x="1002.0" y="293" width="0.2" height="15.0" fill="rgb(209,35,0)" rx="2" ry="2" />
<text  x="1005.02" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.01%)</title><rect x="899.6" y="469" width="0.1" height="15.0" fill="rgb(234,200,8)" rx="2" ry="2" />
<text  x="902.56" y="479.5" ></text>
</g>
<g >
<title>Game_Player::UpdateScroll (2 samples, 0.02%)</title><rect x="966.0" y="597" width="0.3" height="15.0" fill="rgb(206,25,1)" rx="2" ry="2" />
<text  x="969.00" y="607.5" ></text>
</g>
<g >
<title>pix_multiply_2x128 (1 samples, 0.01%)</title><rect x="318.9" y="469" width="0.2" height="15.0" fill="rgb(224,129,8)" rx="2" ry="2" />
<text  x="321.95" y="479.5" ></text>
</g>
<g >
<title>__fdget (3 samples, 0.04%)</title><rect x="996.6" y="373" width="0.4" height="15.0" fill="rgb(248,70,20)" rx="2" ry="2" />
<text  x="999.56" y="383.5" ></text>
</g>
<g >
<title>account_entity_dequeue (1 samples, 0.01%)</title><rect x="368.3" y="485" width="0.1" height="15.0" fill="rgb(228,66,41)" rx="2" ry="2" />
<text  x="371.29" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (4 samples, 0.05%)</title><rect x="901.1" y="517" width="0.6" height="15.0" fill="rgb(207,123,53)" rx="2" ry="2" />
<text  x="904.10" y="527.5" ></text>
</g>
<g >
<title>irq_work_run (1 samples, 0.01%)</title><rect x="374.9" y="469" width="0.1" height="15.0" fill="rgb(228,90,29)" rx="2" ry="2" />
<text  x="377.88" y="479.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (45 samples, 0.53%)</title><rect x="368.4" y="453" width="6.3" height="15.0" fill="rgb(250,70,30)" rx="2" ry="2" />
<text  x="371.43" y="463.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="44.9" y="581" width="0.1" height="15.0" fill="rgb(205,20,0)" rx="2" ry="2" />
<text  x="47.90" y="591.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (2 samples, 0.02%)</title><rect x="880.8" y="517" width="0.3" height="15.0" fill="rgb(248,75,24)" rx="2" ry="2" />
<text  x="883.77" y="527.5" ></text>
</g>
<g >
<title>xhci_urb_enqueue (1 samples, 0.01%)</title><rect x="747.7" y="69" width="0.2" height="15.0" fill="rgb(233,76,8)" rx="2" ry="2" />
<text  x="750.75" y="79.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (1 samples, 0.01%)</title><rect x="881.1" y="533" width="0.1" height="15.0" fill="rgb(248,73,22)" rx="2" ry="2" />
<text  x="884.05" y="543.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.01%)</title><rect x="1001.7" y="309" width="0.2" height="15.0" fill="rgb(208,26,5)" rx="2" ry="2" />
<text  x="1004.74" y="319.5" ></text>
</g>
<g >
<title>_mm_adds_epu8 (19 samples, 0.23%)</title><rect x="773.5" y="373" width="2.7" height="15.0" fill="rgb(227,168,45)" rx="2" ry="2" />
<text  x="776.54" y="383.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="565.5" y="533" width="0.2" height="15.0" fill="rgb(240,139,22)" rx="2" ry="2" />
<text  x="568.52" y="543.5" ></text>
</g>
<g >
<title>snd_usb_pcm_delay.part.14 (1 samples, 0.01%)</title><rect x="273.1" y="197" width="0.2" height="15.0" fill="rgb(205,194,48)" rx="2" ry="2" />
<text  x="276.11" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (3 samples, 0.04%)</title><rect x="669.0" y="373" width="0.4" height="15.0" fill="rgb(227,60,25)" rx="2" ry="2" />
<text  x="671.97" y="383.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="117.9" y="677" width="0.2" height="15.0" fill="rgb(230,136,29)" rx="2" ry="2" />
<text  x="120.94" y="687.5" ></text>
</g>
<g >
<title>SDL_EventState_REAL (1 samples, 0.01%)</title><rect x="1000.9" y="581" width="0.1" height="15.0" fill="rgb(222,218,13)" rx="2" ry="2" />
<text  x="1003.90" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.02%)</title><rect x="899.1" y="549" width="0.3" height="15.0" fill="rgb(215,166,45)" rx="2" ry="2" />
<text  x="902.14" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="997.3" y="453" width="0.2" height="15.0" fill="rgb(206,55,17)" rx="2" ry="2" />
<text  x="1000.26" y="463.5" ></text>
</g>
<g >
<title>rcu_check_callbacks (1 samples, 0.01%)</title><rect x="25.7" y="677" width="0.1" height="15.0" fill="rgb(221,116,8)" rx="2" ry="2" />
<text  x="28.70" y="687.5" ></text>
</g>
<g >
<title>__x64_sys_read (17 samples, 0.20%)</title><rect x="46.0" y="757" width="2.4" height="15.0" fill="rgb(222,42,35)" rx="2" ry="2" />
<text  x="49.03" y="767.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="902.6" y="501" width="0.2" height="15.0" fill="rgb(250,119,9)" rx="2" ry="2" />
<text  x="905.64" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (8 samples, 0.10%)</title><rect x="628.7" y="389" width="1.2" height="15.0" fill="rgb(206,128,35)" rx="2" ry="2" />
<text  x="631.74" y="399.5" ></text>
</g>
<g >
<title>_mm_unpacklo_epi8 (19 samples, 0.23%)</title><rect x="334.2" y="485" width="2.7" height="15.0" fill="rgb(254,57,18)" rx="2" ry="2" />
<text  x="337.23" y="495.5" ></text>
</g>
<g >
<title>dequeue_task_fair (2 samples, 0.02%)</title><rect x="368.1" y="501" width="0.3" height="15.0" fill="rgb(215,65,2)" rx="2" ry="2" />
<text  x="371.15" y="511.5" ></text>
</g>
<g >
<title>put_timespec64 (10 samples, 0.12%)</title><rect x="400.5" y="565" width="1.4" height="15.0" fill="rgb(208,1,27)" rx="2" ry="2" />
<text  x="403.53" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.07%)</title><rect x="83.6" y="741" width="0.8" height="15.0" fill="rgb(228,135,44)" rx="2" ry="2" />
<text  x="86.59" y="751.5" ></text>
</g>
<g >
<title>Graphics::Draw (1,512 samples, 17.96%)</title><rect x="154.4" y="661" width="211.9" height="15.0" fill="rgb(215,110,40)" rx="2" ry="2" />
<text  x="157.38" y="671.5" >Graphics::Draw</text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, pixman_format_code_t&gt;, std::_Select1st&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (18 samples, 0.21%)</title><rect x="822.0" y="261" width="2.6" height="15.0" fill="rgb(242,29,9)" rx="2" ry="2" />
<text  x="825.04" y="271.5" ></text>
</g>
<g >
<title>Tilemap::SetTone (1 samples, 0.01%)</title><rect x="994.3" y="629" width="0.2" height="15.0" fill="rgb(235,191,18)" rx="2" ry="2" />
<text  x="997.31" y="639.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="232.5" y="373" width="0.1" height="15.0" fill="rgb(210,127,0)" rx="2" ry="2" />
<text  x="235.46" y="383.5" ></text>
</g>
<g >
<title>__libc_recvmsg (1 samples, 0.01%)</title><rect x="59.2" y="757" width="0.1" height="15.0" fill="rgb(253,117,44)" rx="2" ry="2" />
<text  x="62.20" y="767.5" ></text>
</g>
<g >
<title>unix_stream_recvmsg (2 samples, 0.02%)</title><rect x="1001.9" y="341" width="0.3" height="15.0" fill="rgb(243,55,31)" rx="2" ry="2" />
<text  x="1004.88" y="351.5" ></text>
</g>
<g >
<title>operator== (1 samples, 0.01%)</title><rect x="994.3" y="597" width="0.2" height="15.0" fill="rgb(224,53,41)" rx="2" ry="2" />
<text  x="997.31" y="607.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.01%)</title><rect x="565.5" y="421" width="0.2" height="15.0" fill="rgb(232,53,33)" rx="2" ry="2" />
<text  x="568.52" y="431.5" ></text>
</g>
<g >
<title>__GI___nanosleep (60 samples, 0.71%)</title><rect x="367.2" y="645" width="8.4" height="15.0" fill="rgb(237,184,21)" rx="2" ry="2" />
<text  x="370.17" y="655.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="384.0" y="533" width="0.1" height="15.0" fill="rgb(215,141,22)" rx="2" ry="2" />
<text  x="386.99" y="543.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (45 samples, 0.53%)</title><rect x="368.4" y="501" width="6.3" height="15.0" fill="rgb(207,172,0)" rx="2" ry="2" />
<text  x="371.43" y="511.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="569.9" y="517" width="0.1" height="15.0" fill="rgb(251,114,36)" rx="2" ry="2" />
<text  x="572.86" y="527.5" ></text>
</g>
<g >
<title>retire_playback_urb (1 samples, 0.01%)</title><rect x="273.1" y="213" width="0.2" height="15.0" fill="rgb(249,60,8)" rx="2" ry="2" />
<text  x="276.11" y="223.5" ></text>
</g>
<g >
<title>std::__find_if&lt;int const*, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (11 samples, 0.13%)</title><rect x="471.3" y="533" width="1.6" height="15.0" fill="rgb(214,12,30)" rx="2" ry="2" />
<text  x="474.32" y="543.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (2 samples, 0.02%)</title><rect x="1001.0" y="565" width="0.3" height="15.0" fill="rgb(215,78,3)" rx="2" ry="2" />
<text  x="1004.04" y="575.5" ></text>
</g>
<g >
<title>load_128_unaligned (159 samples, 1.89%)</title><rect x="751.2" y="389" width="22.3" height="15.0" fill="rgb(238,200,53)" rx="2" ry="2" />
<text  x="754.25" y="399.5" >l..</text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="747.7" y="165" width="0.2" height="15.0" fill="rgb(217,89,32)" rx="2" ry="2" />
<text  x="750.75" y="175.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="731.5" y="309" width="0.1" height="15.0" fill="rgb(209,117,22)" rx="2" ry="2" />
<text  x="734.48" y="319.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingForegroundExecution (11 samples, 0.13%)</title><rect x="962.8" y="613" width="1.5" height="15.0" fill="rgb(226,193,26)" rx="2" ry="2" />
<text  x="965.78" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (9 samples, 0.11%)</title><rect x="618.5" y="517" width="1.3" height="15.0" fill="rgb(237,44,27)" rx="2" ry="2" />
<text  x="621.50" y="527.5" ></text>
</g>
<g >
<title>Tone::Tone (3 samples, 0.04%)</title><rect x="979.2" y="565" width="0.4" height="15.0" fill="rgb(230,27,52)" rx="2" ry="2" />
<text  x="982.18" y="575.5" ></text>
</g>
<g >
<title>SDL_RenderCopy_REAL (1 samples, 0.01%)</title><rect x="1003.8" y="645" width="0.2" height="15.0" fill="rgb(245,47,21)" rx="2" ry="2" />
<text  x="1006.85" y="655.5" ></text>
</g>
<g >
<title>pixman_image_get_width@plt (1 samples, 0.01%)</title><rect x="992.8" y="581" width="0.1" height="15.0" fill="rgb(245,103,51)" rx="2" ry="2" />
<text  x="995.77" y="591.5" ></text>
</g>
<g >
<title>pixman_image_unref (120 samples, 1.43%)</title><rect x="857.1" y="373" width="16.8" height="15.0" fill="rgb(218,201,47)" rx="2" ry="2" />
<text  x="860.08" y="383.5" ></text>
</g>
<g >
<title>_pixman_image_get_solid (1 samples, 0.01%)</title><rect x="320.5" y="517" width="0.1" height="15.0" fill="rgb(254,21,47)" rx="2" ry="2" />
<text  x="323.49" y="527.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (3 samples, 0.04%)</title><rect x="629.4" y="293" width="0.5" height="15.0" fill="rgb(239,17,3)" rx="2" ry="2" />
<text  x="632.44" y="303.5" ></text>
</g>
<g >
<title>std::__move_merge_adaptive_backward&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (1 samples, 0.01%)</title><rect x="154.8" y="565" width="0.1" height="15.0" fill="rgb(239,12,12)" rx="2" ry="2" />
<text  x="157.80" y="575.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.01%)</title><rect x="33.0" y="565" width="0.1" height="15.0" fill="rgb(219,94,23)" rx="2" ry="2" />
<text  x="35.99" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.01%)</title><rect x="907.7" y="565" width="0.1" height="15.0" fill="rgb(226,118,14)" rx="2" ry="2" />
<text  x="910.69" y="575.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (34 samples, 0.40%)</title><rect x="830.2" y="469" width="4.7" height="15.0" fill="rgb(220,29,42)" rx="2" ry="2" />
<text  x="833.17" y="479.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="456.9" y="453" width="0.1" height="15.0" fill="rgb(212,67,41)" rx="2" ry="2" />
<text  x="459.88" y="463.5" ></text>
</g>
<g >
<title>SDL_CalculateBlit (1 samples, 0.01%)</title><rect x="1004.0" y="581" width="0.1" height="15.0" fill="rgb(206,44,1)" rx="2" ry="2" />
<text  x="1006.99" y="591.5" ></text>
</g>
<g >
<title>std::ios_base::getloc (1 samples, 0.01%)</title><rect x="366.7" y="629" width="0.2" height="15.0" fill="rgb(250,229,54)" rx="2" ry="2" />
<text  x="369.75" y="639.5" ></text>
</g>
<g >
<title>std::__stable_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (65 samples, 0.77%)</title><rect x="357.2" y="613" width="9.1" height="15.0" fill="rgb(220,156,12)" rx="2" ry="2" />
<text  x="360.22" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (23 samples, 0.27%)</title><rect x="624.7" y="389" width="3.2" height="15.0" fill="rgb(229,190,15)" rx="2" ry="2" />
<text  x="627.67" y="399.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_ios (2 samples, 0.02%)</title><rect x="903.8" y="533" width="0.2" height="15.0" fill="rgb(253,33,11)" rx="2" ry="2" />
<text  x="906.76" y="543.5" ></text>
</g>
<g >
<title>pixman_transform_point_3d (1 samples, 0.01%)</title><rect x="311.5" y="517" width="0.2" height="15.0" fill="rgb(230,115,35)" rx="2" ry="2" />
<text  x="314.52" y="527.5" ></text>
</g>
<g >
<title>_mm_store_si128 (2 samples, 0.02%)</title><rect x="292.2" y="517" width="0.3" height="15.0" fill="rgb(210,162,9)" rx="2" ry="2" />
<text  x="295.17" y="527.5" ></text>
</g>
<g >
<title>_mm_unpacklo_epi8 (41 samples, 0.49%)</title><rect x="783.6" y="373" width="5.8" height="15.0" fill="rgb(206,46,13)" rx="2" ry="2" />
<text  x="786.63" y="383.5" ></text>
</g>
<g >
<title>std::__merge_adaptive&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, long, Drawable**, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (1 samples, 0.01%)</title><rect x="154.8" y="581" width="0.1" height="15.0" fill="rgb(224,42,51)" rx="2" ry="2" />
<text  x="157.80" y="591.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1 samples, 0.01%)</title><rect x="46.7" y="629" width="0.2" height="15.0" fill="rgb(221,67,7)" rx="2" ry="2" />
<text  x="49.73" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.01%)</title><rect x="668.0" y="453" width="0.1" height="15.0" fill="rgb(220,81,22)" rx="2" ry="2" />
<text  x="670.99" y="463.5" ></text>
</g>
<g >
<title>__atomic_add (6 samples, 0.07%)</title><rect x="833.7" y="373" width="0.8" height="15.0" fill="rgb(220,21,34)" rx="2" ry="2" />
<text  x="836.67" y="383.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.01%)</title><rect x="993.6" y="421" width="0.2" height="15.0" fill="rgb(226,136,15)" rx="2" ry="2" />
<text  x="996.61" y="431.5" ></text>
</g>
<g >
<title>Bitmap::GetHeight (1 samples, 0.01%)</title><rect x="345.7" y="597" width="0.2" height="15.0" fill="rgb(244,197,51)" rx="2" ry="2" />
<text  x="348.72" y="607.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.01%)</title><rect x="1189.2" y="581" width="0.1" height="15.0" fill="rgb(241,43,6)" rx="2" ry="2" />
<text  x="1192.16" y="591.5" ></text>
</g>
<g >
<title>unpack_128_2x128 (4 samples, 0.05%)</title><rect x="215.9" y="501" width="0.6" height="15.0" fill="rgb(213,157,41)" rx="2" ry="2" />
<text  x="218.92" y="511.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (3 samples, 0.04%)</title><rect x="154.7" y="597" width="0.4" height="15.0" fill="rgb(220,90,18)" rx="2" ry="2" />
<text  x="157.66" y="607.5" ></text>
</g>
<g >
<title>_mm_movemask_epi8 (12 samples, 0.14%)</title><rect x="731.8" y="373" width="1.6" height="15.0" fill="rgb(217,150,10)" rx="2" ry="2" />
<text  x="734.77" y="383.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="747.7" y="197" width="0.2" height="15.0" fill="rgb(223,100,51)" rx="2" ry="2" />
<text  x="750.75" y="207.5" ></text>
</g>
<g >
<title>xhci_queue_isoc_tx_prepare (1 samples, 0.01%)</title><rect x="747.7" y="53" width="0.2" height="15.0" fill="rgb(242,187,32)" rx="2" ry="2" />
<text  x="750.75" y="63.5" ></text>
</g>
<g >
<title>std::__find_if&lt;int const*, __gnu_cxx::__ops::_Iter_equals_val&lt;int const&gt; &gt; (11 samples, 0.13%)</title><rect x="471.3" y="517" width="1.6" height="15.0" fill="rgb(205,72,35)" rx="2" ry="2" />
<text  x="474.32" y="527.5" ></text>
</g>
<g >
<title>Plane::Draw (1 samples, 0.01%)</title><rect x="156.9" y="629" width="0.1" height="15.0" fill="rgb(243,218,43)" rx="2" ry="2" />
<text  x="159.90" y="639.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (3 samples, 0.04%)</title><rect x="119.5" y="773" width="0.4" height="15.0" fill="rgb(253,82,52)" rx="2" ry="2" />
<text  x="122.48" y="783.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (159 samples, 1.89%)</title><rect x="854.0" y="437" width="22.3" height="15.0" fill="rgb(243,69,48)" rx="2" ry="2" />
<text  x="857.00" y="447.5" >s..</text>
</g>
<g >
<title>__memcmp_avx2_movbe (25 samples, 0.30%)</title><rect x="654.9" y="293" width="3.6" height="15.0" fill="rgb(227,82,3)" rx="2" ry="2" />
<text  x="657.95" y="303.5" ></text>
</g>
<g >
<title>Game_Map::LoopHorizontal (1 samples, 0.01%)</title><rect x="353.3" y="613" width="0.1" height="15.0" fill="rgb(231,2,26)" rx="2" ry="2" />
<text  x="356.29" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="59.2" y="741" width="0.1" height="15.0" fill="rgb(210,52,41)" rx="2" ry="2" />
<text  x="62.20" y="751.5" ></text>
</g>
<g >
<title>LoadBitmap (1 samples, 0.01%)</title><rect x="993.6" y="517" width="0.2" height="15.0" fill="rgb(231,210,16)" rx="2" ry="2" />
<text  x="996.61" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (3 samples, 0.04%)</title><rect x="629.4" y="309" width="0.5" height="15.0" fill="rgb(251,182,48)" rx="2" ry="2" />
<text  x="632.44" y="319.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (2 samples, 0.02%)</title><rect x="1167.3" y="341" width="0.3" height="15.0" fill="rgb(233,179,40)" rx="2" ry="2" />
<text  x="1170.29" y="351.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;int&amp;, int&amp;, bool&amp;&gt; (236 samples, 2.80%)</title><rect x="791.6" y="373" width="33.1" height="15.0" fill="rgb(215,81,16)" rx="2" ry="2" />
<text  x="794.62" y="383.5" >st..</text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::reset (25 samples, 0.30%)</title><rect x="895.6" y="549" width="3.5" height="15.0" fill="rgb(211,165,44)" rx="2" ry="2" />
<text  x="898.63" y="559.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="401.9" y="517" width="0.2" height="15.0" fill="rgb(214,150,41)" rx="2" ry="2" />
<text  x="404.93" y="527.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="818.7" y="181" width="0.1" height="15.0" fill="rgb(207,28,35)" rx="2" ry="2" />
<text  x="821.67" y="191.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="747.6" y="309" width="0.1" height="15.0" fill="rgb(206,159,25)" rx="2" ry="2" />
<text  x="750.61" y="319.5" ></text>
</g>
<g >
<title>Player::IsMajorUpdatedVersion (1 samples, 0.01%)</title><rect x="68.5" y="773" width="0.1" height="15.0" fill="rgb(253,6,13)" rx="2" ry="2" />
<text  x="71.45" y="783.5" ></text>
</g>
<g >
<title>std::__distance&lt;char*&gt; (1 samples, 0.01%)</title><rect x="664.2" y="309" width="0.1" height="15.0" fill="rgb(211,74,13)" rx="2" ry="2" />
<text  x="667.20" y="319.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="273.1" y="261" width="0.2" height="15.0" fill="rgb(234,59,11)" rx="2" ry="2" />
<text  x="276.11" y="271.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="722.9" y="213" width="0.2" height="15.0" fill="rgb(239,96,26)" rx="2" ry="2" />
<text  x="725.93" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::CommonEvent, std::allocator&lt;RPG::CommonEvent&gt; &gt;::size (1 samples, 0.01%)</title><rect x="964.2" y="581" width="0.1" height="15.0" fill="rgb(241,207,32)" rx="2" ry="2" />
<text  x="967.18" y="591.5" ></text>
</g>
<g >
<title>Bitmap::width (2 samples, 0.02%)</title><rect x="833.3" y="437" width="0.2" height="15.0" fill="rgb(228,130,48)" rx="2" ry="2" />
<text  x="836.25" y="447.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (1 samples, 0.01%)</title><rect x="78.0" y="773" width="0.1" height="15.0" fill="rgb(212,62,33)" rx="2" ry="2" />
<text  x="80.99" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (9 samples, 0.11%)</title><rect x="568.2" y="549" width="1.2" height="15.0" fill="rgb(239,141,30)" rx="2" ry="2" />
<text  x="571.18" y="559.5" ></text>
</g>
<g >
<title>___sys_recvmsg (3 samples, 0.04%)</title><rect x="1001.7" y="373" width="0.5" height="15.0" fill="rgb(211,18,11)" rx="2" ry="2" />
<text  x="1004.74" y="383.5" ></text>
</g>
<g >
<title>Game_Interpreter::SetSubcommandIndex (29 samples, 0.34%)</title><rect x="453.0" y="565" width="4.0" height="15.0" fill="rgb(247,51,32)" rx="2" ry="2" />
<text  x="455.96" y="575.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="232.5" y="421" width="0.1" height="15.0" fill="rgb(208,189,35)" rx="2" ry="2" />
<text  x="235.46" y="431.5" ></text>
</g>
<g >
<title>Sprite::SetOy (3 samples, 0.04%)</title><rect x="835.5" y="469" width="0.4" height="15.0" fill="rgb(245,205,40)" rx="2" ry="2" />
<text  x="838.50" y="479.5" ></text>
</g>
<g >
<title>_pixman_bits_image_init (3 samples, 0.04%)</title><rect x="126.1" y="789" width="0.4" height="15.0" fill="rgb(207,219,36)" rx="2" ry="2" />
<text  x="129.07" y="799.5" ></text>
</g>
<g >
<title>Sprite::Refresh (40 samples, 0.48%)</title><rect x="344.5" y="613" width="5.6" height="15.0" fill="rgb(231,52,6)" rx="2" ry="2" />
<text  x="347.46" y="623.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (8 samples, 0.10%)</title><rect x="81.1" y="661" width="1.1" height="15.0" fill="rgb(231,166,4)" rx="2" ry="2" />
<text  x="84.07" y="671.5" ></text>
</g>
<g >
<title>native_write_msr (68 samples, 0.81%)</title><rect x="35.4" y="549" width="9.5" height="15.0" fill="rgb(243,83,53)" rx="2" ry="2" />
<text  x="38.37" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (8 samples, 0.10%)</title><rect x="628.7" y="357" width="1.2" height="15.0" fill="rgb(221,183,52)" rx="2" ry="2" />
<text  x="631.74" y="367.5" ></text>
</g>
<g >
<title>create_bits_image_internal (1 samples, 0.01%)</title><rect x="60.7" y="773" width="0.2" height="15.0" fill="rgb(243,25,6)" rx="2" ry="2" />
<text  x="63.74" y="783.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (1 samples, 0.01%)</title><rect x="76.9" y="773" width="0.1" height="15.0" fill="rgb(243,219,3)" rx="2" ry="2" />
<text  x="79.86" y="783.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="341.1" y="469" width="0.1" height="15.0" fill="rgb(207,132,2)" rx="2" ry="2" />
<text  x="344.10" y="479.5" ></text>
</g>
<g >
<title>do_sys_poll (109 samples, 1.29%)</title><rect x="30.6" y="741" width="15.3" height="15.0" fill="rgb(238,147,41)" rx="2" ry="2" />
<text  x="33.61" y="751.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="244.9" y="469" width="0.2" height="15.0" fill="rgb(248,64,48)" rx="2" ry="2" />
<text  x="247.93" y="479.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.01%)</title><rect x="997.4" y="405" width="0.1" height="15.0" fill="rgb(228,167,39)" rx="2" ry="2" />
<text  x="1000.40" y="415.5" ></text>
</g>
<g >
<title>std::operator- (1 samples, 0.01%)</title><rect x="962.5" y="565" width="0.1" height="15.0" fill="rgb(222,129,19)" rx="2" ry="2" />
<text  x="965.49" y="575.5" ></text>
</g>
<g >
<title>reschedule_interrupt (2 samples, 0.02%)</title><rect x="1189.3" y="789" width="0.3" height="15.0" fill="rgb(231,55,0)" rx="2" ry="2" />
<text  x="1192.30" y="799.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.01%)</title><rect x="668.8" y="373" width="0.2" height="15.0" fill="rgb(214,94,35)" rx="2" ry="2" />
<text  x="671.83" y="383.5" ></text>
</g>
<g >
<title>optimize_operator (1 samples, 0.01%)</title><rect x="687.2" y="437" width="0.1" height="15.0" fill="rgb(249,40,45)" rx="2" ry="2" />
<text  x="690.19" y="447.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.01%)</title><rect x="627.5" y="325" width="0.1" height="15.0" fill="rgb(254,53,23)" rx="2" ry="2" />
<text  x="630.47" y="335.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.01%)</title><rect x="903.3" y="437" width="0.2" height="15.0" fill="rgb(248,168,44)" rx="2" ry="2" />
<text  x="906.34" y="447.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="660.3" y="261" width="0.1" height="15.0" fill="rgb(229,191,49)" rx="2" ry="2" />
<text  x="663.28" y="271.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="816.2" y="149" width="0.1" height="15.0" fill="rgb(208,177,26)" rx="2" ry="2" />
<text  x="819.15" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, false, true&gt;::operator++ (9 samples, 0.11%)</title><rect x="1184.4" y="629" width="1.3" height="15.0" fill="rgb(223,72,39)" rx="2" ry="2" />
<text  x="1187.39" y="639.5" ></text>
</g>
<g >
<title>pixman_transform_point_3d (5 samples, 0.06%)</title><rect x="320.6" y="517" width="0.7" height="15.0" fill="rgb(244,204,0)" rx="2" ry="2" />
<text  x="323.63" y="527.5" ></text>
</g>
<g >
<title>compute_transformed_extents (69 samples, 0.82%)</title><rect x="301.7" y="517" width="9.7" height="15.0" fill="rgb(228,9,41)" rx="2" ry="2" />
<text  x="304.71" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="968.4" y="565" width="0.1" height="15.0" fill="rgb(240,146,50)" rx="2" ry="2" />
<text  x="971.38" y="575.5" ></text>
</g>
<g >
<title>__accumulate_pelt_segments (1 samples, 0.01%)</title><rect x="45.3" y="613" width="0.2" height="15.0" fill="rgb(206,97,26)" rx="2" ry="2" />
<text  x="48.32" y="623.5" ></text>
</g>
<g >
<title>xcb_writev (1 samples, 0.01%)</title><rect x="995.4" y="517" width="0.2" height="15.0" fill="rgb(226,19,22)" rx="2" ry="2" />
<text  x="998.44" y="527.5" ></text>
</g>
<g >
<title>SDL_IOReady (2 samples, 0.02%)</title><rect x="1001.5" y="565" width="0.2" height="15.0" fill="rgb(226,215,31)" rx="2" ry="2" />
<text  x="1004.46" y="575.5" ></text>
</g>
<g >
<title>pipe_read (3 samples, 0.04%)</title><rect x="47.3" y="677" width="0.4" height="15.0" fill="rgb(209,226,37)" rx="2" ry="2" />
<text  x="50.29" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (10 samples, 0.12%)</title><rect x="918.3" y="565" width="1.4" height="15.0" fill="rgb(237,120,14)" rx="2" ry="2" />
<text  x="921.34" y="575.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="82.5" y="773" width="0.1" height="15.0" fill="rgb(250,103,38)" rx="2" ry="2" />
<text  x="85.47" y="783.5" ></text>
</g>
<g >
<title>pixman_region32_init (3 samples, 0.04%)</title><rect x="797.4" y="245" width="0.4" height="15.0" fill="rgb(236,201,34)" rx="2" ry="2" />
<text  x="800.37" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="995.4" y="437" width="0.2" height="15.0" fill="rgb(212,27,5)" rx="2" ry="2" />
<text  x="998.44" y="447.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="117.9" y="629" width="0.2" height="15.0" fill="rgb(216,65,28)" rx="2" ry="2" />
<text  x="120.94" y="639.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="472.6" y="453" width="0.1" height="15.0" fill="rgb(214,20,51)" rx="2" ry="2" />
<text  x="475.58" y="463.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.01%)</title><rect x="1189.2" y="677" width="0.1" height="15.0" fill="rgb(253,135,39)" rx="2" ry="2" />
<text  x="1192.16" y="687.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.01%)</title><rect x="997.4" y="389" width="0.1" height="15.0" fill="rgb(220,151,45)" rx="2" ry="2" />
<text  x="1000.40" y="399.5" ></text>
</g>
<g >
<title>sse2_composite_over_8888_8888 (371 samples, 4.41%)</title><rect x="164.5" y="549" width="52.0" height="15.0" fill="rgb(252,200,9)" rx="2" ry="2" />
<text  x="167.47" y="559.5" >sse2_..</text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (37 samples, 0.44%)</title><rect x="624.7" y="421" width="5.2" height="15.0" fill="rgb(252,40,42)" rx="2" ry="2" />
<text  x="627.67" y="431.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="899.3" y="485" width="0.1" height="15.0" fill="rgb(207,145,21)" rx="2" ry="2" />
<text  x="902.28" y="495.5" ></text>
</g>
<g >
<title>finish_task_switch (16 samples, 0.19%)</title><rect x="998.2" y="469" width="2.3" height="15.0" fill="rgb(237,206,29)" rx="2" ry="2" />
<text  x="1001.24" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;Bitmap&gt; &gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (236 samples, 2.80%)</title><rect x="791.6" y="357" width="33.1" height="15.0" fill="rgb(210,211,10)" rx="2" ry="2" />
<text  x="794.62" y="367.5" >st..</text>
</g>
<g >
<title>update_load_avg (1 samples, 0.01%)</title><rect x="49.2" y="533" width="0.2" height="15.0" fill="rgb(224,48,38)" rx="2" ry="2" />
<text  x="52.25" y="543.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="747.6" y="261" width="0.1" height="15.0" fill="rgb(244,229,14)" rx="2" ry="2" />
<text  x="750.61" y="271.5" ></text>
</g>
<g >
<title>Game_Switches_Class::Get (1 samples, 0.01%)</title><rect x="66.4" y="773" width="0.1" height="15.0" fill="rgb(242,155,42)" rx="2" ry="2" />
<text  x="69.35" y="783.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="408.2" y="597" width="0.2" height="15.0" fill="rgb(239,130,43)" rx="2" ry="2" />
<text  x="411.24" y="607.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandWait (3 samples, 0.04%)</title><rect x="907.4" y="581" width="0.4" height="15.0" fill="rgb(246,174,6)" rx="2" ry="2" />
<text  x="910.41" y="591.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base@plt (1 samples, 0.01%)</title><rect x="903.8" y="517" width="0.1" height="15.0" fill="rgb(222,143,9)" rx="2" ry="2" />
<text  x="906.76" y="527.5" ></text>
</g>
<g >
<title>Game_Map::GetNeedRefresh (15 samples, 0.18%)</title><rect x="53.7" y="773" width="2.1" height="15.0" fill="rgb(222,134,25)" rx="2" ry="2" />
<text  x="56.73" y="783.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.01%)</title><rect x="1167.6" y="565" width="0.1" height="15.0" fill="rgb(252,66,9)" rx="2" ry="2" />
<text  x="1170.57" y="575.5" ></text>
</g>
<g >
<title>over_1x128 (6 samples, 0.07%)</title><rect x="332.3" y="485" width="0.8" height="15.0" fill="rgb(241,125,17)" rx="2" ry="2" />
<text  x="335.26" y="495.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.01%)</title><rect x="472.6" y="421" width="0.1" height="15.0" fill="rgb(249,175,12)" rx="2" ry="2" />
<text  x="475.58" y="431.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.01%)</title><rect x="30.2" y="725" width="0.1" height="15.0" fill="rgb(234,182,52)" rx="2" ry="2" />
<text  x="33.19" y="735.5" ></text>
</g>
<g >
<title>tcache_put (1 samples, 0.01%)</title><rect x="341.4" y="549" width="0.1" height="15.0" fill="rgb(239,169,53)" rx="2" ry="2" />
<text  x="344.38" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (9 samples, 0.11%)</title><rect x="618.5" y="501" width="1.3" height="15.0" fill="rgb(206,199,13)" rx="2" ry="2" />
<text  x="621.50" y="511.5" ></text>
</g>
<g >
<title>__accumulate_pelt_segments (1 samples, 0.01%)</title><rect x="660.3" y="181" width="0.1" height="15.0" fill="rgb(206,220,16)" rx="2" ry="2" />
<text  x="663.28" y="191.5" ></text>
</g>
<g >
<title>_pixman_compute_composite_region32 (2 samples, 0.02%)</title><rect x="161.2" y="533" width="0.3" height="15.0" fill="rgb(245,122,52)" rx="2" ry="2" />
<text  x="164.25" y="543.5" ></text>
</g>
<g >
<title>Rect::IsOutOfBounds (1 samples, 0.01%)</title><rect x="346.1" y="597" width="0.2" height="15.0" fill="rgb(241,9,32)" rx="2" ry="2" />
<text  x="349.14" y="607.5" ></text>
</g>
<g >
<title>glXSwapBuffers (6 samples, 0.07%)</title><rect x="1176.3" y="645" width="0.8" height="15.0" fill="rgb(205,209,50)" rx="2" ry="2" />
<text  x="1179.26" y="655.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (17 samples, 0.20%)</title><rect x="637.7" y="341" width="2.4" height="15.0" fill="rgb(218,151,11)" rx="2" ry="2" />
<text  x="640.71" y="351.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (7 samples, 0.08%)</title><rect x="854.1" y="421" width="1.0" height="15.0" fill="rgb(206,112,13)" rx="2" ry="2" />
<text  x="857.14" y="431.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="747.5" y="341" width="0.2" height="15.0" fill="rgb(245,118,50)" rx="2" ry="2" />
<text  x="750.46" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.01%)</title><rect x="879.7" y="485" width="0.1" height="15.0" fill="rgb(254,220,17)" rx="2" ry="2" />
<text  x="882.65" y="495.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (40 samples, 0.48%)</title><rect x="1170.2" y="469" width="5.6" height="15.0" fill="rgb(232,206,35)" rx="2" ry="2" />
<text  x="1173.24" y="479.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::~_Head_base (4 samples, 0.05%)</title><rect x="667.4" y="389" width="0.6" height="15.0" fill="rgb(208,10,50)" rx="2" ry="2" />
<text  x="670.42" y="399.5" ></text>
</g>
<g >
<title>operator== (5 samples, 0.06%)</title><rect x="346.7" y="581" width="0.7" height="15.0" fill="rgb(206,173,24)" rx="2" ry="2" />
<text  x="349.70" y="591.5" ></text>
</g>
<g >
<title>finish_task_switch (48 samples, 0.57%)</title><rect x="368.4" y="517" width="6.8" height="15.0" fill="rgb(238,98,2)" rx="2" ry="2" />
<text  x="371.43" y="527.5" ></text>
</g>
<g >
<title>TilemapLayer::Draw (18 samples, 0.21%)</title><rect x="351.9" y="629" width="2.5" height="15.0" fill="rgb(218,139,53)" rx="2" ry="2" />
<text  x="354.89" y="639.5" ></text>
</g>
<g >
<title>_mm_mullo_epi16 (2 samples, 0.02%)</title><rect x="333.8" y="469" width="0.3" height="15.0" fill="rgb(224,41,5)" rx="2" ry="2" />
<text  x="336.81" y="479.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (2 samples, 0.02%)</title><rect x="878.0" y="453" width="0.2" height="15.0" fill="rgb(223,90,46)" rx="2" ry="2" />
<text  x="880.97" y="463.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="731.5" y="277" width="0.1" height="15.0" fill="rgb(213,172,19)" rx="2" ry="2" />
<text  x="734.48" y="287.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="273.1" y="405" width="0.2" height="15.0" fill="rgb(249,80,8)" rx="2" ry="2" />
<text  x="276.11" y="415.5" ></text>
</g>
<g >
<title>GetRandomU32 (1 samples, 0.01%)</title><rect x="569.4" y="533" width="0.2" height="15.0" fill="rgb(213,8,28)" rx="2" ry="2" />
<text  x="572.44" y="543.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::_Head_base (21 samples, 0.25%)</title><rect x="664.3" y="389" width="3.0" height="15.0" fill="rgb(248,90,48)" rx="2" ry="2" />
<text  x="667.34" y="399.5" ></text>
</g>
<g >
<title>default_wake_function (8 samples, 0.10%)</title><rect x="48.8" y="629" width="1.2" height="15.0" fill="rgb(211,193,25)" rx="2" ry="2" />
<text  x="51.83" y="639.5" ></text>
</g>
<g >
<title>_mm_mulhi_epu16 (10 samples, 0.12%)</title><rect x="279.1" y="501" width="1.4" height="15.0" fill="rgb(207,184,24)" rx="2" ry="2" />
<text  x="282.14" y="511.5" ></text>
</g>
<g >
<title>X11_PumpEvents (18 samples, 0.21%)</title><rect x="995.0" y="613" width="2.5" height="15.0" fill="rgb(229,58,28)" rx="2" ry="2" />
<text  x="998.02" y="623.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="818.7" y="117" width="0.1" height="15.0" fill="rgb(246,45,40)" rx="2" ry="2" />
<text  x="821.67" y="127.5" ></text>
</g>
<g >
<title>core_combine_over_u_pixel_sse2 (1 samples, 0.01%)</title><rect x="722.4" y="389" width="0.1" height="15.0" fill="rgb(237,98,9)" rx="2" ry="2" />
<text  x="725.37" y="399.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (1 samples, 0.01%)</title><rect x="979.7" y="565" width="0.2" height="15.0" fill="rgb(249,169,30)" rx="2" ry="2" />
<text  x="982.74" y="575.5" ></text>
</g>
<g >
<title>std::__insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (24 samples, 0.29%)</title><rect x="359.0" y="549" width="3.4" height="15.0" fill="rgb(206,88,48)" rx="2" ry="2" />
<text  x="362.04" y="559.5" ></text>
</g>
<g >
<title>unorm_to_float (1 samples, 0.01%)</title><rect x="338.9" y="501" width="0.1" height="15.0" fill="rgb(221,46,10)" rx="2" ry="2" />
<text  x="341.85" y="511.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.01%)</title><rect x="1189.2" y="629" width="0.1" height="15.0" fill="rgb(245,122,37)" rx="2" ry="2" />
<text  x="1192.16" y="639.5" ></text>
</g>
<g >
<title>TilemapLayer::SetTone (1 samples, 0.01%)</title><rect x="994.3" y="613" width="0.2" height="15.0" fill="rgb(217,15,37)" rx="2" ry="2" />
<text  x="997.31" y="623.5" ></text>
</g>
<g >
<title>pixman_transform_point_3d (1 samples, 0.01%)</title><rect x="125.6" y="773" width="0.2" height="15.0" fill="rgb(228,105,16)" rx="2" ry="2" />
<text  x="128.65" y="783.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**&gt; (1 samples, 0.01%)</title><rect x="365.6" y="533" width="0.2" height="15.0" fill="rgb(218,73,46)" rx="2" ry="2" />
<text  x="368.63" y="543.5" ></text>
</g>
<g >
<title>new_sync_write (2 samples, 0.02%)</title><rect x="50.1" y="693" width="0.3" height="15.0" fill="rgb(205,7,1)" rx="2" ry="2" />
<text  x="53.09" y="703.5" ></text>
</g>
<g >
<title>Bitmap::GetRect (13 samples, 0.15%)</title><rect x="831.7" y="453" width="1.8" height="15.0" fill="rgb(252,12,20)" rx="2" ry="2" />
<text  x="834.71" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (1 samples, 0.01%)</title><rect x="76.2" y="773" width="0.1" height="15.0" fill="rgb(253,125,25)" rx="2" ry="2" />
<text  x="79.16" y="783.5" ></text>
</g>
<g >
<title>TilemapLayer::Draw (1 samples, 0.01%)</title><rect x="70.3" y="773" width="0.1" height="15.0" fill="rgb(239,145,26)" rx="2" ry="2" />
<text  x="73.28" y="783.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (60 samples, 0.71%)</title><rect x="1177.2" y="645" width="8.5" height="15.0" fill="rgb(215,219,24)" rx="2" ry="2" />
<text  x="1180.24" y="655.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; (123 samples, 1.46%)</title><rect x="641.8" y="373" width="17.2" height="15.0" fill="rgb(247,211,34)" rx="2" ry="2" />
<text  x="644.77" y="383.5" ></text>
</g>
<g >
<title>is_zero (1 samples, 0.01%)</title><rect x="318.7" y="485" width="0.1" height="15.0" fill="rgb(208,169,8)" rx="2" ry="2" />
<text  x="321.67" y="495.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (36 samples, 0.43%)</title><rect x="1170.7" y="437" width="5.0" height="15.0" fill="rgb(229,62,52)" rx="2" ry="2" />
<text  x="1173.66" y="447.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (64 samples, 0.76%)</title><rect x="357.4" y="597" width="8.9" height="15.0" fill="rgb(233,118,1)" rx="2" ry="2" />
<text  x="360.36" y="607.5" ></text>
</g>
<g >
<title>Sprite::BlitScreenIntern (1,328 samples, 15.78%)</title><rect x="158.3" y="613" width="186.2" height="15.0" fill="rgb(207,54,5)" rx="2" ry="2" />
<text  x="161.31" y="623.5" >Sprite::BlitScreenIntern</text>
</g>
<g >
<title>sse2_composite_over_8888_8888 (5 samples, 0.06%)</title><rect x="62.3" y="773" width="0.7" height="15.0" fill="rgb(249,127,42)" rx="2" ry="2" />
<text  x="65.29" y="783.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (39 samples, 0.46%)</title><rect x="1170.4" y="453" width="5.4" height="15.0" fill="rgb(211,174,25)" rx="2" ry="2" />
<text  x="1173.38" y="463.5" ></text>
</g>
<g >
<title>Bitmap::StretchBlit (1 samples, 0.01%)</title><rect x="292.7" y="581" width="0.2" height="15.0" fill="rgb(234,71,11)" rx="2" ry="2" />
<text  x="295.73" y="591.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.01%)</title><rect x="731.6" y="357" width="0.2" height="15.0" fill="rgb(227,58,32)" rx="2" ry="2" />
<text  x="734.63" y="367.5" ></text>
</g>
<g >
<title>pixman_image_set_transform (8 samples, 0.10%)</title><rect x="339.0" y="549" width="1.1" height="15.0" fill="rgb(239,142,10)" rx="2" ry="2" />
<text  x="341.99" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator bool (1 samples, 0.01%)</title><rect x="583.7" y="549" width="0.2" height="15.0" fill="rgb(224,135,31)" rx="2" ry="2" />
<text  x="586.74" y="559.5" ></text>
</g>
<g >
<title>__exchange_and_add (7 samples, 0.08%)</title><rect x="855.3" y="373" width="0.9" height="15.0" fill="rgb(232,193,35)" rx="2" ry="2" />
<text  x="858.26" y="383.5" ></text>
</g>
<g >
<title>operator== (1 samples, 0.01%)</title><rect x="835.9" y="437" width="0.2" height="15.0" fill="rgb(225,196,4)" rx="2" ry="2" />
<text  x="838.92" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (11 samples, 0.13%)</title><rect x="661.7" y="389" width="1.5" height="15.0" fill="rgb(214,172,46)" rx="2" ry="2" />
<text  x="664.68" y="399.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (2 samples, 0.02%)</title><rect x="64.7" y="773" width="0.2" height="15.0" fill="rgb(241,183,21)" rx="2" ry="2" />
<text  x="67.67" y="783.5" ></text>
</g>
<g >
<title>SDL_WaitEventTimeout_REAL (21 samples, 0.25%)</title><rect x="994.6" y="645" width="2.9" height="15.0" fill="rgb(206,148,16)" rx="2" ry="2" />
<text  x="997.59" y="655.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="117.9" y="613" width="0.2" height="15.0" fill="rgb(241,31,34)" rx="2" ry="2" />
<text  x="120.94" y="623.5" ></text>
</g>
<g >
<title>pixman_image_get_width@plt (1 samples, 0.01%)</title><rect x="850.4" y="469" width="0.1" height="15.0" fill="rgb(248,196,31)" rx="2" ry="2" />
<text  x="853.35" y="479.5" ></text>
</g>
<g >
<title>__wake_up_locked_key (8 samples, 0.10%)</title><rect x="48.8" y="677" width="1.2" height="15.0" fill="rgb(214,66,15)" rx="2" ry="2" />
<text  x="51.83" y="687.5" ></text>
</g>
<g >
<title>expand_alpha_2x128 (21 samples, 0.25%)</title><rect x="221.9" y="533" width="3.0" height="15.0" fill="rgb(250,210,2)" rx="2" ry="2" />
<text  x="224.95" y="543.5" ></text>
</g>
<g >
<title>std::locale::operator=@plt (1 samples, 0.01%)</title><rect x="903.6" y="469" width="0.2" height="15.0" fill="rgb(215,130,18)" rx="2" ry="2" />
<text  x="906.62" y="479.5" ></text>
</g>
<g >
<title>pixman_image_get_width@plt (2 samples, 0.02%)</title><rect x="853.7" y="437" width="0.3" height="15.0" fill="rgb(217,35,16)" rx="2" ry="2" />
<text  x="856.72" y="447.5" ></text>
</g>
<g >
<title>Game_Interpreter::ReserveSubcommandIndex (21 samples, 0.25%)</title><rect x="453.9" y="549" width="3.0" height="15.0" fill="rgb(216,199,31)" rx="2" ry="2" />
<text  x="456.94" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (3 samples, 0.04%)</title><rect x="667.6" y="341" width="0.4" height="15.0" fill="rgb(233,210,47)" rx="2" ry="2" />
<text  x="670.56" y="351.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (38 samples, 0.45%)</title><rect x="653.7" y="309" width="5.3" height="15.0" fill="rgb(213,179,35)" rx="2" ry="2" />
<text  x="656.69" y="319.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipToNextConditional (14 samples, 0.17%)</title><rect x="584.3" y="565" width="2.0" height="15.0" fill="rgb(242,173,9)" rx="2" ry="2" />
<text  x="587.30" y="575.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="341.1" y="453" width="0.1" height="15.0" fill="rgb(243,148,4)" rx="2" ry="2" />
<text  x="344.10" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (2 samples, 0.02%)</title><rect x="604.1" y="421" width="0.2" height="15.0" fill="rgb(232,107,37)" rx="2" ry="2" />
<text  x="607.07" y="431.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="341.1" y="549" width="0.1" height="15.0" fill="rgb(223,196,48)" rx="2" ry="2" />
<text  x="344.10" y="559.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (41 samples, 0.49%)</title><rect x="402.5" y="613" width="5.7" height="15.0" fill="rgb(234,106,24)" rx="2" ry="2" />
<text  x="405.49" y="623.5" ></text>
</g>
<g >
<title>try_to_wake_up (8 samples, 0.10%)</title><rect x="48.8" y="613" width="1.2" height="15.0" fill="rgb(212,227,52)" rx="2" ry="2" />
<text  x="51.83" y="623.5" ></text>
</g>
<g >
<title>pixman_image_get_height (2 samples, 0.02%)</title><rect x="893.8" y="533" width="0.3" height="15.0" fill="rgb(254,89,9)" rx="2" ry="2" />
<text  x="896.81" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (9 samples, 0.11%)</title><rect x="640.1" y="373" width="1.3" height="15.0" fill="rgb(250,121,48)" rx="2" ry="2" />
<text  x="643.09" y="383.5" ></text>
</g>
<g >
<title>read_tsc (6 samples, 0.07%)</title><rect x="399.1" y="533" width="0.9" height="15.0" fill="rgb(242,90,3)" rx="2" ry="2" />
<text  x="402.13" y="543.5" ></text>
</g>
<g >
<title>_mm_set_epi32 (5 samples, 0.06%)</title><rect x="316.4" y="485" width="0.7" height="15.0" fill="rgb(206,226,6)" rx="2" ry="2" />
<text  x="319.42" y="495.5" ></text>
</g>
<g >
<title>Bitmap::StretchBlit (336 samples, 3.99%)</title><rect x="293.9" y="565" width="47.1" height="15.0" fill="rgb(253,208,38)" rx="2" ry="2" />
<text  x="296.86" y="575.5" >Bitm..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.01%)</title><rect x="604.5" y="469" width="0.1" height="15.0" fill="rgb(247,40,42)" rx="2" ry="2" />
<text  x="607.49" y="479.5" ></text>
</g>
<g >
<title>pixman_region32_rectangles (1 samples, 0.01%)</title><rect x="337.7" y="533" width="0.2" height="15.0" fill="rgb(220,52,51)" rx="2" ry="2" />
<text  x="340.73" y="543.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="49.2" y="517" width="0.2" height="15.0" fill="rgb(211,130,47)" rx="2" ry="2" />
<text  x="52.25" y="527.5" ></text>
</g>
<g >
<title>memcmp@plt (1 samples, 0.01%)</title><rect x="661.5" y="309" width="0.2" height="15.0" fill="rgb(205,167,17)" rx="2" ry="2" />
<text  x="664.54" y="319.5" ></text>
</g>
<g >
<title>_mm_adds_epu16 (19 samples, 0.23%)</title><rect x="239.0" y="501" width="2.7" height="15.0" fill="rgb(233,112,20)" rx="2" ry="2" />
<text  x="242.05" y="511.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="819.0" y="181" width="0.1" height="15.0" fill="rgb(228,115,0)" rx="2" ry="2" />
<text  x="821.95" y="191.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (18 samples, 0.21%)</title><rect x="998.0" y="533" width="2.5" height="15.0" fill="rgb(235,93,38)" rx="2" ry="2" />
<text  x="1000.96" y="543.5" ></text>
</g>
<g >
<title>Game_Map::Refresh (18 samples, 0.21%)</title><rect x="945.1" y="581" width="2.5" height="15.0" fill="rgb(205,193,4)" rx="2" ry="2" />
<text  x="948.11" y="591.5" ></text>
</g>
<g >
<title>new_sync_read (8 samples, 0.10%)</title><rect x="46.6" y="693" width="1.1" height="15.0" fill="rgb(242,222,49)" rx="2" ry="2" />
<text  x="49.59" y="703.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (8 samples, 0.10%)</title><rect x="343.3" y="549" width="1.2" height="15.0" fill="rgb(217,179,7)" rx="2" ry="2" />
<text  x="346.34" y="559.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.01%)</title><rect x="995.6" y="533" width="0.1" height="15.0" fill="rgb(208,0,28)" rx="2" ry="2" />
<text  x="998.58" y="543.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="244.9" y="389" width="0.2" height="15.0" fill="rgb(217,24,39)" rx="2" ry="2" />
<text  x="247.93" y="399.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="636.6" y="293" width="0.1" height="15.0" fill="rgb(212,85,22)" rx="2" ry="2" />
<text  x="639.59" y="303.5" ></text>
</g>
<g >
<title>Game_CommonEvent::Update (3,950 samples, 46.92%)</title><rect x="408.9" y="613" width="553.7" height="15.0" fill="rgb(221,95,7)" rx="2" ry="2" />
<text  x="411.94" y="623.5" >Game_CommonEvent::Update</text>
</g>
<g >
<title>rw_verify_area (5 samples, 0.06%)</title><rect x="47.7" y="709" width="0.7" height="15.0" fill="rgb(236,226,28)" rx="2" ry="2" />
<text  x="50.71" y="719.5" ></text>
</g>
<g >
<title>unpack_128_2x128 (2 samples, 0.02%)</title><rect x="319.1" y="485" width="0.3" height="15.0" fill="rgb(210,108,18)" rx="2" ry="2" />
<text  x="322.09" y="495.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (6 samples, 0.07%)</title><rect x="123.8" y="773" width="0.9" height="15.0" fill="rgb(234,164,9)" rx="2" ry="2" />
<text  x="126.82" y="783.5" ></text>
</g>
<g >
<title>std::__merge_sort_with_buffer&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (1 samples, 0.01%)</title><rect x="154.9" y="581" width="0.2" height="15.0" fill="rgb(232,200,23)" rx="2" ry="2" />
<text  x="157.94" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (7 samples, 0.08%)</title><rect x="663.4" y="357" width="0.9" height="15.0" fill="rgb(233,47,17)" rx="2" ry="2" />
<text  x="666.36" y="367.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="949.3" y="501" width="0.2" height="15.0" fill="rgb(233,61,39)" rx="2" ry="2" />
<text  x="952.32" y="511.5" ></text>
</g>
<g >
<title>MakeFlashColor (3 samples, 0.04%)</title><rect x="827.2" y="453" width="0.4" height="15.0" fill="rgb(239,32,5)" rx="2" ry="2" />
<text  x="830.22" y="463.5" ></text>
</g>
<g >
<title>posix_get_monotonic_raw (1 samples, 0.01%)</title><rect x="1176.1" y="533" width="0.2" height="15.0" fill="rgb(208,27,8)" rx="2" ry="2" />
<text  x="1179.12" y="543.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="50.7" y="773" width="0.1" height="15.0" fill="rgb(207,212,51)" rx="2" ry="2" />
<text  x="53.65" y="783.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="569.7" y="453" width="0.2" height="15.0" fill="rgb(227,207,40)" rx="2" ry="2" />
<text  x="572.72" y="463.5" ></text>
</g>
<g >
<title>X11_DispatchEvent (3 samples, 0.04%)</title><rect x="995.4" y="597" width="0.5" height="15.0" fill="rgb(254,176,31)" rx="2" ry="2" />
<text  x="998.44" y="607.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="276.2" y="357" width="0.1" height="15.0" fill="rgb(222,26,46)" rx="2" ry="2" />
<text  x="279.19" y="367.5" ></text>
</g>
<g >
<title>find (1 samples, 0.01%)</title><rect x="993.6" y="485" width="0.2" height="15.0" fill="rgb(247,183,18)" rx="2" ry="2" />
<text  x="996.61" y="495.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1185.5" y="581" width="0.2" height="15.0" fill="rgb(245,201,21)" rx="2" ry="2" />
<text  x="1188.51" y="591.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (2 samples, 0.02%)</title><rect x="887.8" y="501" width="0.3" height="15.0" fill="rgb(234,11,18)" rx="2" ry="2" />
<text  x="890.78" y="511.5" ></text>
</g>
<g >
<title>operator!= (1 samples, 0.01%)</title><rect x="835.9" y="453" width="0.2" height="15.0" fill="rgb(221,228,29)" rx="2" ry="2" />
<text  x="838.92" y="463.5" ></text>
</g>
<g >
<title>SDL_SoftBlit (1,167 samples, 13.86%)</title><rect x="1004.1" y="597" width="163.6" height="15.0" fill="rgb(230,83,7)" rx="2" ry="2" />
<text  x="1007.13" y="607.5" >SDL_SoftBlit</text>
</g>
<g >
<title>Sprite::SetY (1 samples, 0.01%)</title><rect x="70.0" y="773" width="0.1" height="15.0" fill="rgb(250,149,50)" rx="2" ry="2" />
<text  x="73.00" y="783.5" ></text>
</g>
<g >
<title>_mm_loadu_si128 (21 samples, 0.25%)</title><rect x="289.2" y="517" width="3.0" height="15.0" fill="rgb(234,133,4)" rx="2" ry="2" />
<text  x="292.23" y="527.5" ></text>
</g>
<g >
<title>x86_pmu_enable (16 samples, 0.19%)</title><rect x="998.2" y="421" width="2.3" height="15.0" fill="rgb(206,120,12)" rx="2" ry="2" />
<text  x="1001.24" y="431.5" ></text>
</g>
<g >
<title>_mm_mullo_epi16 (3 samples, 0.04%)</title><rect x="332.7" y="453" width="0.4" height="15.0" fill="rgb(234,113,45)" rx="2" ry="2" />
<text  x="335.68" y="463.5" ></text>
</g>
<g >
<title>_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="318.7" y="469" width="0.1" height="15.0" fill="rgb(225,124,48)" rx="2" ry="2" />
<text  x="321.67" y="479.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="456.9" y="517" width="0.1" height="15.0" fill="rgb(249,13,43)" rx="2" ry="2" />
<text  x="459.88" y="527.5" ></text>
</g>
<g >
<title>memcmp@plt (2 samples, 0.02%)</title><rect x="671.5" y="421" width="0.3" height="15.0" fill="rgb(246,65,33)" rx="2" ry="2" />
<text  x="674.49" y="431.5" ></text>
</g>
<g >
<title>std::stable_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, bool (*)(Drawable const*, Drawable const*)&gt; (65 samples, 0.77%)</title><rect x="357.2" y="629" width="9.1" height="15.0" fill="rgb(217,61,17)" rx="2" ry="2" />
<text  x="360.22" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.08%)</title><rect x="83.5" y="757" width="0.9" height="15.0" fill="rgb(212,179,47)" rx="2" ry="2" />
<text  x="86.45" y="767.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.02%)</title><rect x="472.6" y="485" width="0.3" height="15.0" fill="rgb(231,167,10)" rx="2" ry="2" />
<text  x="475.58" y="495.5" ></text>
</g>
<g >
<title>pollwake (8 samples, 0.10%)</title><rect x="48.8" y="645" width="1.2" height="15.0" fill="rgb(249,119,0)" rx="2" ry="2" />
<text  x="51.83" y="655.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="565.5" y="437" width="0.2" height="15.0" fill="rgb(244,0,45)" rx="2" ry="2" />
<text  x="568.52" y="447.5" ></text>
</g>
<g >
<title>Sprite::GetZ (1 samples, 0.01%)</title><rect x="358.6" y="517" width="0.2" height="15.0" fill="rgb(225,133,39)" rx="2" ry="2" />
<text  x="361.62" y="527.5" ></text>
</g>
<g >
<title>expand_alpha_2x128 (1 samples, 0.01%)</title><rect x="332.1" y="501" width="0.2" height="15.0" fill="rgb(254,154,15)" rx="2" ry="2" />
<text  x="335.12" y="511.5" ></text>
</g>
<g >
<title>_mm_unpacklo_epi8 (16 samples, 0.19%)</title><rect x="285.4" y="517" width="2.3" height="15.0" fill="rgb(209,223,52)" rx="2" ry="2" />
<text  x="288.45" y="527.5" ></text>
</g>
<g >
<title>pixman_region32_init (2 samples, 0.02%)</title><rect x="337.5" y="533" width="0.2" height="15.0" fill="rgb(235,171,24)" rx="2" ry="2" />
<text  x="340.45" y="543.5" ></text>
</g>
<g >
<title>Tone::Tone (1 samples, 0.01%)</title><rect x="70.4" y="773" width="0.2" height="15.0" fill="rgb(240,147,34)" rx="2" ry="2" />
<text  x="73.42" y="783.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (1 samples, 0.01%)</title><rect x="904.0" y="517" width="0.2" height="15.0" fill="rgb(248,36,21)" rx="2" ry="2" />
<text  x="907.04" y="527.5" ></text>
</g>
<g >
<title>pixman_image_get_width (32 samples, 0.38%)</title><rect x="988.3" y="581" width="4.5" height="15.0" fill="rgb(221,1,19)" rx="2" ry="2" />
<text  x="991.29" y="591.5" ></text>
</g>
<g >
<title>pipe_write (2 samples, 0.02%)</title><rect x="50.1" y="677" width="0.3" height="15.0" fill="rgb(221,48,12)" rx="2" ry="2" />
<text  x="53.09" y="687.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (4 samples, 0.05%)</title><rect x="81.6" y="629" width="0.6" height="15.0" fill="rgb(246,69,7)" rx="2" ry="2" />
<text  x="84.63" y="639.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="722.9" y="357" width="0.2" height="15.0" fill="rgb(219,189,30)" rx="2" ry="2" />
<text  x="725.93" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (2 samples, 0.02%)</title><rect x="63.1" y="773" width="0.3" height="15.0" fill="rgb(205,15,46)" rx="2" ry="2" />
<text  x="66.13" y="783.5" ></text>
</g>
<g >
<title>_mm_mullo_epi16 (25 samples, 0.30%)</title><rect x="235.5" y="485" width="3.5" height="15.0" fill="rgb(212,85,36)" rx="2" ry="2" />
<text  x="238.54" y="495.5" ></text>
</g>
<g >
<title>pix_multiply_2x128 (6 samples, 0.07%)</title><rect x="214.1" y="485" width="0.8" height="15.0" fill="rgb(224,10,15)" rx="2" ry="2" />
<text  x="217.10" y="495.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::CommonEvent&gt; (8 samples, 0.10%)</title><rect x="963.2" y="597" width="1.1" height="15.0" fill="rgb(222,18,10)" rx="2" ry="2" />
<text  x="966.20" y="607.5" ></text>
</g>
<g >
<title>_mm_xor_si128 (15 samples, 0.18%)</title><rect x="776.2" y="357" width="2.1" height="15.0" fill="rgb(232,3,17)" rx="2" ry="2" />
<text  x="779.20" y="367.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.01%)</title><rect x="900.7" y="469" width="0.1" height="15.0" fill="rgb(205,164,16)" rx="2" ry="2" />
<text  x="903.68" y="479.5" ></text>
</g>
<g >
<title>Transition::IsActive (1 samples, 0.01%)</title><rect x="1185.7" y="661" width="0.1" height="15.0" fill="rgb(229,137,53)" rx="2" ry="2" />
<text  x="1188.65" y="671.5" ></text>
</g>
<g >
<title>load_128_unaligned (117 samples, 1.39%)</title><rect x="197.4" y="501" width="16.4" height="15.0" fill="rgb(230,172,36)" rx="2" ry="2" />
<text  x="200.42" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;Bitmap&gt;::construct&lt;Bitmap, int&amp;, int&amp;, bool&amp;&gt; (236 samples, 2.80%)</title><rect x="791.6" y="341" width="33.1" height="15.0" fill="rgb(212,186,9)" rx="2" ry="2" />
<text  x="794.62" y="351.5" >__..</text>
</g>
<g >
<title>__cgroup_account_cputime (1 samples, 0.01%)</title><rect x="998.1" y="405" width="0.1" height="15.0" fill="rgb(235,219,40)" rx="2" ry="2" />
<text  x="1001.10" y="415.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (9 samples, 0.11%)</title><rect x="876.7" y="437" width="1.3" height="15.0" fill="rgb(252,111,18)" rx="2" ry="2" />
<text  x="879.71" y="447.5" ></text>
</g>
<g >
<title>_mm_shufflelo_epi16 (9 samples, 0.11%)</title><rect x="223.6" y="517" width="1.3" height="15.0" fill="rgb(242,34,37)" rx="2" ry="2" />
<text  x="226.63" y="527.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="384.0" y="549" width="0.1" height="15.0" fill="rgb(222,150,3)" rx="2" ry="2" />
<text  x="386.99" y="559.5" ></text>
</g>
<g >
<title>sock_poll (1 samples, 0.01%)</title><rect x="1001.6" y="469" width="0.1" height="15.0" fill="rgb(241,24,17)" rx="2" ry="2" />
<text  x="1004.60" y="479.5" ></text>
</g>
<g >
<title>_pixman_image_fini (2 samples, 0.02%)</title><rect x="60.0" y="757" width="0.3" height="15.0" fill="rgb(242,166,30)" rx="2" ry="2" />
<text  x="63.04" y="767.5" ></text>
</g>
<g >
<title>Cache::Picture (360 samples, 4.28%)</title><rect x="621.6" y="485" width="50.5" height="15.0" fill="rgb(210,118,26)" rx="2" ry="2" />
<text  x="624.59" y="495.5" >Cache..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="563.7" y="517" width="0.1" height="15.0" fill="rgb(244,166,10)" rx="2" ry="2" />
<text  x="566.69" y="527.5" ></text>
</g>
<g >
<title>Scene::MainFunction (7,557 samples, 89.77%)</title><rect x="126.9" y="709" width="1059.3" height="15.0" fill="rgb(232,222,12)" rx="2" ry="2" />
<text  x="129.91" y="719.5" >Scene::MainFunction</text>
</g>
<g >
<title>__libc_recvmsg (1 samples, 0.01%)</title><rect x="58.8" y="741" width="0.1" height="15.0" fill="rgb(236,79,44)" rx="2" ry="2" />
<text  x="61.78" y="751.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.01%)</title><rect x="374.9" y="389" width="0.1" height="15.0" fill="rgb(241,169,35)" rx="2" ry="2" />
<text  x="377.88" y="399.5" ></text>
</g>
<g >
<title>_pixman_image_init (2 samples, 0.02%)</title><rect x="60.3" y="773" width="0.3" height="15.0" fill="rgb(248,212,46)" rx="2" ry="2" />
<text  x="63.32" y="783.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.01%)</title><rect x="640.1" y="357" width="0.1" height="15.0" fill="rgb(207,86,32)" rx="2" ry="2" />
<text  x="643.09" y="367.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.01%)</title><rect x="641.1" y="357" width="0.1" height="15.0" fill="rgb(229,171,54)" rx="2" ry="2" />
<text  x="644.07" y="367.5" ></text>
</g>
<g >
<title>Drawable::GetPriorityForMapLayer (1 samples, 0.01%)</title><rect x="826.5" y="469" width="0.2" height="15.0" fill="rgb(246,89,4)" rx="2" ry="2" />
<text  x="829.52" y="479.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (1 samples, 0.01%)</title><rect x="968.8" y="565" width="0.1" height="15.0" fill="rgb(254,176,49)" rx="2" ry="2" />
<text  x="971.80" y="575.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="375.0" y="485" width="0.2" height="15.0" fill="rgb(249,78,34)" rx="2" ry="2" />
<text  x="378.02" y="495.5" ></text>
</g>
<g >
<title>xhci_queue_isoc_tx_prepare (1 samples, 0.01%)</title><rect x="244.9" y="181" width="0.2" height="15.0" fill="rgb(242,84,32)" rx="2" ry="2" />
<text  x="247.93" y="191.5" ></text>
</g>
<g >
<title>memset@plt (1 samples, 0.01%)</title><rect x="995.7" y="581" width="0.2" height="15.0" fill="rgb(205,125,33)" rx="2" ry="2" />
<text  x="998.72" y="591.5" ></text>
</g>
<g >
<title>update_sd_lb_stats (1 samples, 0.01%)</title><rect x="375.2" y="469" width="0.1" height="15.0" fill="rgb(219,29,9)" rx="2" ry="2" />
<text  x="378.16" y="479.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (58 samples, 0.69%)</title><rect x="643.7" y="293" width="8.2" height="15.0" fill="rgb(240,155,21)" rx="2" ry="2" />
<text  x="646.73" y="303.5" ></text>
</g>
<g >
<title>__fdget_pos (1 samples, 0.01%)</title><rect x="48.5" y="725" width="0.2" height="15.0" fill="rgb(217,109,17)" rx="2" ry="2" />
<text  x="51.55" y="735.5" ></text>
</g>
<g >
<title>[libGLX_nvidia.so.390.116] (48 samples, 0.57%)</title><rect x="78.1" y="789" width="6.8" height="15.0" fill="rgb(247,23,44)" rx="2" ry="2" />
<text  x="81.13" y="799.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingBackgroundExecution (19 samples, 0.23%)</title><rect x="409.8" y="597" width="2.6" height="15.0" fill="rgb(246,42,52)" rx="2" ry="2" />
<text  x="412.78" y="607.5" ></text>
</g>
<g >
<title>_mm_mulhi_epu16 (11 samples, 0.13%)</title><rect x="779.6" y="357" width="1.5" height="15.0" fill="rgb(245,219,40)" rx="2" ry="2" />
<text  x="782.57" y="367.5" ></text>
</g>
<g >
<title>Sprite::SetOpacity (4 samples, 0.05%)</title><rect x="834.9" y="469" width="0.6" height="15.0" fill="rgb(245,49,20)" rx="2" ry="2" />
<text  x="837.93" y="479.5" ></text>
</g>
<g >
<title>__sys_recvmsg (4 samples, 0.05%)</title><rect x="996.4" y="405" width="0.6" height="15.0" fill="rgb(211,14,32)" rx="2" ry="2" />
<text  x="999.42" y="415.5" ></text>
</g>
<g >
<title>SDL_UpdateTextureNative (1,227 samples, 14.58%)</title><rect x="1004.0" y="629" width="172.0" height="15.0" fill="rgb(220,86,12)" rx="2" ry="2" />
<text  x="1006.99" y="639.5" >SDL_UpdateTextureNative</text>
</g>
<g >
<title>unorm_to_float (2 samples, 0.02%)</title><rect x="292.5" y="517" width="0.2" height="15.0" fill="rgb(234,118,4)" rx="2" ry="2" />
<text  x="295.45" y="527.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (3 samples, 0.04%)</title><rect x="365.9" y="549" width="0.4" height="15.0" fill="rgb(250,220,30)" rx="2" ry="2" />
<text  x="368.91" y="559.5" ></text>
</g>
<g >
<title>Utils::EncodeUTF (1 samples, 0.01%)</title><rect x="70.7" y="773" width="0.1" height="15.0" fill="rgb(205,198,20)" rx="2" ry="2" />
<text  x="73.70" y="783.5" ></text>
</g>
<g >
<title>LoadBitmap&lt;(&lt;unnamed&gt;::Material::Type)8&gt; (360 samples, 4.28%)</title><rect x="621.6" y="469" width="50.5" height="15.0" fill="rgb(211,2,1)" rx="2" ry="2" />
<text  x="624.59" y="479.5" >LoadB..</text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (53 samples, 0.63%)</title><rect x="1168.4" y="549" width="7.4" height="15.0" fill="rgb(231,58,51)" rx="2" ry="2" />
<text  x="1171.41" y="559.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.01%)</title><rect x="627.3" y="261" width="0.2" height="15.0" fill="rgb(208,210,30)" rx="2" ry="2" />
<text  x="630.33" y="271.5" ></text>
</g>
<g >
<title>AsyncHandler::IsImportantFilePending (3 samples, 0.04%)</title><rect x="118.1" y="773" width="0.4" height="15.0" fill="rgb(233,36,2)" rx="2" ry="2" />
<text  x="121.08" y="783.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.01%)</title><rect x="627.3" y="309" width="0.2" height="15.0" fill="rgb(232,172,4)" rx="2" ry="2" />
<text  x="630.33" y="319.5" ></text>
</g>
<g >
<title>Sdl2Ui::UpdateDisplay (1,237 samples, 14.69%)</title><rect x="1002.6" y="661" width="173.4" height="15.0" fill="rgb(224,208,11)" rx="2" ry="2" />
<text  x="1005.58" y="671.5" >Sdl2Ui::UpdateDisplay</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (22 samples, 0.26%)</title><rect x="600.7" y="469" width="3.1" height="15.0" fill="rgb(214,45,38)" rx="2" ry="2" />
<text  x="603.70" y="479.5" ></text>
</g>
<g >
<title>_mm_loadu_si128 (117 samples, 1.39%)</title><rect x="197.4" y="485" width="16.4" height="15.0" fill="rgb(217,212,2)" rx="2" ry="2" />
<text  x="200.42" y="495.5" ></text>
</g>
<g >
<title>save_128_aligned (7 samples, 0.08%)</title><rect x="214.9" y="501" width="1.0" height="15.0" fill="rgb(231,95,37)" rx="2" ry="2" />
<text  x="217.94" y="511.5" ></text>
</g>
<g >
<title>pixman_image_get_width (5 samples, 0.06%)</title><rect x="74.3" y="773" width="0.7" height="15.0" fill="rgb(218,155,13)" rx="2" ry="2" />
<text  x="77.34" y="783.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="669.2" y="325" width="0.2" height="15.0" fill="rgb(227,214,33)" rx="2" ry="2" />
<text  x="672.25" y="335.5" ></text>
</g>
<g >
<title>[unknown] (57 samples, 0.68%)</title><rect x="118.1" y="789" width="8.0" height="15.0" fill="rgb(214,93,53)" rx="2" ry="2" />
<text  x="121.08" y="799.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (1 samples, 0.01%)</title><rect x="583.0" y="533" width="0.2" height="15.0" fill="rgb(214,111,17)" rx="2" ry="2" />
<text  x="586.04" y="543.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.01%)</title><rect x="154.5" y="517" width="0.2" height="15.0" fill="rgb(223,122,16)" rx="2" ry="2" />
<text  x="157.52" y="527.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="747.7" y="341" width="0.2" height="15.0" fill="rgb(223,110,16)" rx="2" ry="2" />
<text  x="750.75" y="351.5" ></text>
</g>
<g >
<title>add_wait_queue (1 samples, 0.01%)</title><rect x="31.4" y="693" width="0.2" height="15.0" fill="rgb(232,130,31)" rx="2" ry="2" />
<text  x="34.45" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (5 samples, 0.06%)</title><rect x="603.8" y="453" width="0.7" height="15.0" fill="rgb(232,76,32)" rx="2" ry="2" />
<text  x="606.78" y="463.5" ></text>
</g>
<g >
<title>__hrtimer_get_next_event (1 samples, 0.01%)</title><rect x="1165.9" y="517" width="0.1" height="15.0" fill="rgb(225,96,15)" rx="2" ry="2" />
<text  x="1168.89" y="527.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (49 samples, 0.58%)</title><rect x="1169.0" y="517" width="6.8" height="15.0" fill="rgb(209,211,49)" rx="2" ry="2" />
<text  x="1171.97" y="527.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="595.2" y="517" width="0.2" height="15.0" fill="rgb(241,175,6)" rx="2" ry="2" />
<text  x="598.23" y="527.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (3 samples, 0.04%)</title><rect x="52.8" y="773" width="0.4" height="15.0" fill="rgb(231,102,50)" rx="2" ry="2" />
<text  x="55.75" y="783.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.02%)</title><rect x="25.7" y="741" width="0.3" height="15.0" fill="rgb(235,44,3)" rx="2" ry="2" />
<text  x="28.70" y="751.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="565.5" y="469" width="0.2" height="15.0" fill="rgb(233,203,49)" rx="2" ry="2" />
<text  x="568.52" y="479.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="819.0" y="149" width="0.1" height="15.0" fill="rgb(244,105,45)" rx="2" ry="2" />
<text  x="821.95" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="1001.6" y="501" width="0.1" height="15.0" fill="rgb(211,11,47)" rx="2" ry="2" />
<text  x="1004.60" y="511.5" ></text>
</g>
<g >
<title>unpack_128_2x128 (27 samples, 0.32%)</title><rect x="283.9" y="533" width="3.8" height="15.0" fill="rgb(209,16,15)" rx="2" ry="2" />
<text  x="286.90" y="543.5" ></text>
</g>
<g >
<title>SDL_UpdateTexture_REAL (1,227 samples, 14.58%)</title><rect x="1004.0" y="645" width="172.0" height="15.0" fill="rgb(222,149,43)" rx="2" ry="2" />
<text  x="1006.99" y="655.5" >SDL_UpdateTexture_REAL</text>
</g>
<g >
<title>Graphics::Update (2 samples, 0.02%)</title><rect x="366.3" y="661" width="0.3" height="15.0" fill="rgb(253,162,22)" rx="2" ry="2" />
<text  x="369.33" y="671.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="232.5" y="469" width="0.1" height="15.0" fill="rgb(214,210,17)" rx="2" ry="2" />
<text  x="235.46" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (2 samples, 0.02%)</title><rect x="452.7" y="549" width="0.3" height="15.0" fill="rgb(217,204,52)" rx="2" ry="2" />
<text  x="455.68" y="559.5" ></text>
</g>
<g >
<title>Player::IsRPG2k3 (12 samples, 0.14%)</title><rect x="562.0" y="549" width="1.7" height="15.0" fill="rgb(214,117,46)" rx="2" ry="2" />
<text  x="565.01" y="559.5" ></text>
</g>
<g >
<title>pixman_image_get_width (1 samples, 0.01%)</title><rect x="833.3" y="421" width="0.1" height="15.0" fill="rgb(220,152,20)" rx="2" ry="2" />
<text  x="836.25" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.01%)</title><rect x="603.5" y="437" width="0.1" height="15.0" fill="rgb(206,137,51)" rx="2" ry="2" />
<text  x="606.50" y="447.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="569.9" y="533" width="0.1" height="15.0" fill="rgb(220,15,37)" rx="2" ry="2" />
<text  x="572.86" y="543.5" ></text>
</g>
<g >
<title>save_128_aligned (2 samples, 0.02%)</title><rect x="283.6" y="533" width="0.3" height="15.0" fill="rgb(233,100,41)" rx="2" ry="2" />
<text  x="286.62" y="543.5" ></text>
</g>
<g >
<title>_pixman_image_validate (10 samples, 0.12%)</title><rect x="161.5" y="549" width="1.4" height="15.0" fill="rgb(226,51,20)" rx="2" ry="2" />
<text  x="164.53" y="559.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.01%)</title><rect x="472.6" y="405" width="0.1" height="15.0" fill="rgb(227,151,49)" rx="2" ry="2" />
<text  x="475.58" y="415.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.01%)</title><rect x="627.3" y="293" width="0.2" height="15.0" fill="rgb(229,223,40)" rx="2" ry="2" />
<text  x="630.33" y="303.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="375.0" y="437" width="0.2" height="15.0" fill="rgb(213,152,24)" rx="2" ry="2" />
<text  x="378.02" y="447.5" ></text>
</g>
<g >
<title>_pixman_multiply_overflows_size (6 samples, 0.07%)</title><rect x="819.5" y="245" width="0.9" height="15.0" fill="rgb(236,170,41)" rx="2" ry="2" />
<text  x="822.52" y="255.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (2 samples, 0.02%)</title><rect x="61.0" y="773" width="0.3" height="15.0" fill="rgb(222,217,35)" rx="2" ry="2" />
<text  x="64.02" y="783.5" ></text>
</g>
<g >
<title>__intel_pmu_disable_all (1 samples, 0.01%)</title><rect x="32.8" y="549" width="0.2" height="15.0" fill="rgb(216,147,36)" rx="2" ry="2" />
<text  x="35.85" y="559.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="374.7" y="485" width="0.2" height="15.0" fill="rgb(231,36,31)" rx="2" ry="2" />
<text  x="377.74" y="495.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (2 samples, 0.02%)</title><rect x="1167.3" y="357" width="0.3" height="15.0" fill="rgb(240,129,7)" rx="2" ry="2" />
<text  x="1170.29" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (5 samples, 0.06%)</title><rect x="603.8" y="469" width="0.7" height="15.0" fill="rgb(212,176,31)" rx="2" ry="2" />
<text  x="606.78" y="479.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (78 samples, 0.93%)</title><rect x="623.5" y="437" width="11.0" height="15.0" fill="rgb(250,85,54)" rx="2" ry="2" />
<text  x="626.55" y="447.5" ></text>
</g>
<g >
<title>Game_Picture::Erase (2 samples, 0.02%)</title><rect x="571.4" y="565" width="0.3" height="15.0" fill="rgb(229,148,3)" rx="2" ry="2" />
<text  x="574.40" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (5 samples, 0.06%)</title><rect x="643.0" y="293" width="0.7" height="15.0" fill="rgb(227,224,38)" rx="2" ry="2" />
<text  x="646.03" y="303.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (1 samples, 0.01%)</title><rect x="77.1" y="773" width="0.2" height="15.0" fill="rgb(230,29,44)" rx="2" ry="2" />
<text  x="80.14" y="783.5" ></text>
</g>
<g >
<title>Graphics::GlobalDraw (5 samples, 0.06%)</title><rect x="154.4" y="645" width="0.7" height="15.0" fill="rgb(254,22,8)" rx="2" ry="2" />
<text  x="157.38" y="655.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.01%)</title><rect x="82.2" y="661" width="0.1" height="15.0" fill="rgb(243,50,1)" rx="2" ry="2" />
<text  x="85.19" y="671.5" ></text>
</g>
<g >
<title>memcmp@plt (4 samples, 0.05%)</title><rect x="658.5" y="293" width="0.5" height="15.0" fill="rgb(250,57,18)" rx="2" ry="2" />
<text  x="661.45" y="303.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="722.9" y="341" width="0.2" height="15.0" fill="rgb(232,181,24)" rx="2" ry="2" />
<text  x="725.93" y="351.5" ></text>
</g>
<g >
<title>pix_multiply_1x128 (4 samples, 0.05%)</title><rect x="332.5" y="469" width="0.6" height="15.0" fill="rgb(212,190,15)" rx="2" ry="2" />
<text  x="335.54" y="479.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.02%)</title><rect x="1166.3" y="485" width="0.3" height="15.0" fill="rgb(232,219,18)" rx="2" ry="2" />
<text  x="1169.31" y="495.5" ></text>
</g>
<g >
<title>Bitmap::find_format (24 samples, 0.29%)</title><rect x="821.2" y="309" width="3.4" height="15.0" fill="rgb(213,32,5)" rx="2" ry="2" />
<text  x="824.20" y="319.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="565.5" y="517" width="0.2" height="15.0" fill="rgb(254,123,16)" rx="2" ry="2" />
<text  x="568.52" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2 samples, 0.02%)</title><rect x="604.1" y="405" width="0.2" height="15.0" fill="rgb(226,146,11)" rx="2" ry="2" />
<text  x="607.07" y="415.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.02%)</title><rect x="366.9" y="613" width="0.3" height="15.0" fill="rgb(224,22,48)" rx="2" ry="2" />
<text  x="369.89" y="623.5" ></text>
</g>
<g >
<title>do_sys_poll (2 samples, 0.02%)</title><rect x="994.7" y="453" width="0.3" height="15.0" fill="rgb(216,135,41)" rx="2" ry="2" />
<text  x="997.74" y="463.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.01%)</title><rect x="904.0" y="533" width="0.2" height="15.0" fill="rgb(230,8,27)" rx="2" ry="2" />
<text  x="907.04" y="543.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.01%)</title><rect x="154.5" y="565" width="0.2" height="15.0" fill="rgb(234,65,17)" rx="2" ry="2" />
<text  x="157.52" y="575.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (93 samples, 1.10%)</title><rect x="32.4" y="709" width="13.1" height="15.0" fill="rgb(245,114,27)" rx="2" ry="2" />
<text  x="35.43" y="719.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (8 samples, 0.10%)</title><rect x="343.3" y="581" width="1.2" height="15.0" fill="rgb(239,200,0)" rx="2" ry="2" />
<text  x="346.34" y="591.5" ></text>
</g>
<g >
<title>update_curr (1 samples, 0.01%)</title><rect x="83.2" y="645" width="0.1" height="15.0" fill="rgb(213,137,13)" rx="2" ry="2" />
<text  x="86.17" y="655.5" ></text>
</g>
<g >
<title>X11_DispatchEvent (1 samples, 0.01%)</title><rect x="1001.3" y="581" width="0.2" height="15.0" fill="rgb(213,159,51)" rx="2" ry="2" />
<text  x="1004.32" y="591.5" ></text>
</g>
<g >
<title>pixman_image_get_height@plt (1 samples, 0.01%)</title><rect x="348.9" y="597" width="0.2" height="15.0" fill="rgb(241,190,44)" rx="2" ry="2" />
<text  x="351.95" y="607.5" ></text>
</g>
<g >
<title>_mm_mullo_epi16 (7 samples, 0.08%)</title><rect x="781.1" y="357" width="1.0" height="15.0" fill="rgb(250,127,34)" rx="2" ry="2" />
<text  x="784.11" y="367.5" ></text>
</g>
<g >
<title>_mm_packus_epi16 (2 samples, 0.02%)</title><rect x="254.5" y="517" width="0.2" height="15.0" fill="rgb(239,2,15)" rx="2" ry="2" />
<text  x="257.47" y="527.5" ></text>
</g>
<g >
<title>handle_tx_event (2 samples, 0.02%)</title><rect x="1167.3" y="421" width="0.3" height="15.0" fill="rgb(244,18,6)" rx="2" ry="2" />
<text  x="1170.29" y="431.5" ></text>
</g>
<g >
<title>poll (1 samples, 0.01%)</title><rect x="995.9" y="565" width="0.1" height="15.0" fill="rgb(227,7,41)" rx="2" ry="2" />
<text  x="998.86" y="575.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash (24 samples, 0.29%)</title><rect x="615.1" y="437" width="3.4" height="15.0" fill="rgb(224,94,33)" rx="2" ry="2" />
<text  x="618.14" y="447.5" ></text>
</g>
<g >
<title>_pixman_image_validate (1 samples, 0.01%)</title><rect x="72.7" y="773" width="0.1" height="15.0" fill="rgb(247,47,52)" rx="2" ry="2" />
<text  x="75.66" y="783.5" ></text>
</g>
<g >
<title>_pixman_addition_overflows_int (2 samples, 0.02%)</title><rect x="819.1" y="245" width="0.3" height="15.0" fill="rgb(252,6,52)" rx="2" ry="2" />
<text  x="822.09" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (7 samples, 0.08%)</title><rect x="618.8" y="469" width="1.0" height="15.0" fill="rgb(248,85,48)" rx="2" ry="2" />
<text  x="621.78" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::operator bool (4 samples, 0.05%)</title><rect x="901.1" y="549" width="0.6" height="15.0" fill="rgb(226,219,28)" rx="2" ry="2" />
<text  x="904.10" y="559.5" ></text>
</g>
<g >
<title>dequeue_entity (1 samples, 0.01%)</title><rect x="998.1" y="437" width="0.1" height="15.0" fill="rgb(206,17,7)" rx="2" ry="2" />
<text  x="1001.10" y="447.5" ></text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.02%)</title><rect x="25.7" y="725" width="0.3" height="15.0" fill="rgb(254,168,52)" rx="2" ry="2" />
<text  x="28.70" y="735.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.02%)</title><rect x="993.8" y="501" width="0.2" height="15.0" fill="rgb(225,73,8)" rx="2" ry="2" />
<text  x="996.75" y="511.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (54 samples, 0.64%)</title><rect x="367.7" y="581" width="7.6" height="15.0" fill="rgb(209,57,12)" rx="2" ry="2" />
<text  x="370.73" y="591.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (1 samples, 0.01%)</title><rect x="993.5" y="501" width="0.1" height="15.0" fill="rgb(223,41,47)" rx="2" ry="2" />
<text  x="996.47" y="511.5" ></text>
</g>
<g >
<title>Game_Picture::Update (192 samples, 2.28%)</title><rect x="966.3" y="613" width="26.9" height="15.0" fill="rgb(210,17,42)" rx="2" ry="2" />
<text  x="969.28" y="623.5" >G..</text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="374.7" y="437" width="0.2" height="15.0" fill="rgb(208,2,49)" rx="2" ry="2" />
<text  x="377.74" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (4 samples, 0.05%)</title><rect x="1001.7" y="405" width="0.6" height="15.0" fill="rgb(251,136,4)" rx="2" ry="2" />
<text  x="1004.74" y="415.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.01%)</title><rect x="46.2" y="693" width="0.1" height="15.0" fill="rgb(240,134,26)" rx="2" ry="2" />
<text  x="49.17" y="703.5" ></text>
</g>
<g >
<title>ktime_get_raw_ts64 (9 samples, 0.11%)</title><rect x="398.7" y="549" width="1.3" height="15.0" fill="rgb(223,16,36)" rx="2" ry="2" />
<text  x="401.71" y="559.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (159 samples, 1.89%)</title><rect x="854.0" y="453" width="22.3" height="15.0" fill="rgb(229,103,7)" rx="2" ry="2" />
<text  x="857.00" y="463.5" >s..</text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (5 samples, 0.06%)</title><rect x="943.2" y="549" width="0.7" height="15.0" fill="rgb(211,33,15)" rx="2" ry="2" />
<text  x="946.15" y="559.5" ></text>
</g>
<g >
<title>SDL_GL_GetCurrentContext_REAL (1 samples, 0.01%)</title><rect x="1168.0" y="549" width="0.1" height="15.0" fill="rgb(252,229,17)" rx="2" ry="2" />
<text  x="1170.99" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Player, std::default_delete&lt;Game_Player&gt; &gt;::_M_ptr (1 samples, 0.01%)</title><rect x="993.2" y="549" width="0.1" height="15.0" fill="rgb(206,12,32)" rx="2" ry="2" />
<text  x="996.19" y="559.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="375.0" y="421" width="0.2" height="15.0" fill="rgb(253,29,44)" rx="2" ry="2" />
<text  x="378.02" y="431.5" ></text>
</g>
<g >
<title>syscall (10 samples, 0.12%)</title><rect x="83.5" y="773" width="1.4" height="15.0" fill="rgb(232,87,31)" rx="2" ry="2" />
<text  x="86.45" y="783.5" ></text>
</g>
<g >
<title>Bitmap::Blit (774 samples, 9.19%)</title><rect x="681.4" y="469" width="108.5" height="15.0" fill="rgb(219,186,25)" rx="2" ry="2" />
<text  x="684.44" y="479.5" >Bitmap::Blit</text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (7 samples, 0.08%)</title><rect x="993.2" y="645" width="1.0" height="15.0" fill="rgb(213,84,51)" rx="2" ry="2" />
<text  x="996.19" y="655.5" ></text>
</g>
<g >
<title>_mm_or_si128 (6 samples, 0.07%)</title><rect x="288.4" y="533" width="0.8" height="15.0" fill="rgb(220,140,21)" rx="2" ry="2" />
<text  x="291.39" y="543.5" ></text>
</g>
<g >
<title>Sprite::SetWaverDepth (1 samples, 0.01%)</title><rect x="69.4" y="773" width="0.2" height="15.0" fill="rgb(232,197,51)" rx="2" ry="2" />
<text  x="72.43" y="783.5" ></text>
</g>
<g >
<title>FileRequestAsync::DownloadDone (1 samples, 0.01%)</title><rect x="620.6" y="517" width="0.1" height="15.0" fill="rgb(245,5,19)" rx="2" ry="2" />
<text  x="623.61" y="527.5" ></text>
</g>
<g >
<title>Cache::System (5 samples, 0.06%)</title><rect x="993.5" y="549" width="0.7" height="15.0" fill="rgb(212,86,44)" rx="2" ry="2" />
<text  x="996.47" y="559.5" ></text>
</g>
<g >
<title>__pollwait (1 samples, 0.01%)</title><rect x="31.4" y="709" width="0.2" height="15.0" fill="rgb(205,17,5)" rx="2" ry="2" />
<text  x="34.45" y="719.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (7 samples, 0.08%)</title><rect x="349.1" y="597" width="1.0" height="15.0" fill="rgb(234,50,43)" rx="2" ry="2" />
<text  x="352.09" y="607.5" ></text>
</g>
<g >
<title>Transition::IsActive (1 samples, 0.01%)</title><rect x="151.9" y="677" width="0.1" height="15.0" fill="rgb(224,218,29)" rx="2" ry="2" />
<text  x="154.86" y="687.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (1 samples, 0.01%)</title><rect x="604.3" y="421" width="0.2" height="15.0" fill="rgb(206,183,28)" rx="2" ry="2" />
<text  x="607.35" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (19 samples, 0.23%)</title><rect x="1186.5" y="789" width="2.7" height="15.0" fill="rgb(215,202,7)" rx="2" ry="2" />
<text  x="1189.50" y="799.5" ></text>
</g>
<g >
<title>in_over_1x128 (8 samples, 0.10%)</title><rect x="332.3" y="501" width="1.1" height="15.0" fill="rgb(217,29,14)" rx="2" ry="2" />
<text  x="335.26" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (24 samples, 0.29%)</title><rect x="615.1" y="469" width="3.4" height="15.0" fill="rgb(238,83,38)" rx="2" ry="2" />
<text  x="618.14" y="479.5" ></text>
</g>
<g >
<title>fsnotify (1 samples, 0.01%)</title><rect x="46.3" y="725" width="0.1" height="15.0" fill="rgb(225,102,31)" rx="2" ry="2" />
<text  x="49.31" y="735.5" ></text>
</g>
<g >
<title>SDL_IOReady (2 samples, 0.02%)</title><rect x="1000.5" y="533" width="0.3" height="15.0" fill="rgb(216,144,10)" rx="2" ry="2" />
<text  x="1003.48" y="543.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="538.0" y="453" width="0.2" height="15.0" fill="rgb(212,24,9)" rx="2" ry="2" />
<text  x="541.04" y="463.5" ></text>
</g>
<g >
<title>finish_task_switch (75 samples, 0.89%)</title><rect x="34.5" y="645" width="10.5" height="15.0" fill="rgb(246,149,24)" rx="2" ry="2" />
<text  x="37.53" y="655.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="1166.0" y="469" width="0.2" height="15.0" fill="rgb(254,52,19)" rx="2" ry="2" />
<text  x="1169.03" y="479.5" ></text>
</g>
<g >
<title>remove_wait_queue (1 samples, 0.01%)</title><rect x="32.3" y="709" width="0.1" height="15.0" fill="rgb(222,212,36)" rx="2" ry="2" />
<text  x="35.29" y="719.5" ></text>
</g>
<g >
<title>_mm_adds_epu16 (9 samples, 0.11%)</title><rect x="778.3" y="357" width="1.3" height="15.0" fill="rgb(240,124,3)" rx="2" ry="2" />
<text  x="781.30" y="367.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (50 samples, 0.59%)</title><rect x="644.4" y="277" width="7.0" height="15.0" fill="rgb(234,58,42)" rx="2" ry="2" />
<text  x="647.44" y="287.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (17 samples, 0.20%)</title><rect x="1173.3" y="421" width="2.4" height="15.0" fill="rgb(226,182,22)" rx="2" ry="2" />
<text  x="1176.32" y="431.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (1 samples, 0.01%)</title><rect x="374.7" y="357" width="0.2" height="15.0" fill="rgb(237,93,18)" rx="2" ry="2" />
<text  x="377.74" y="367.5" ></text>
</g>
<g >
<title>AdjustMoveParams (1 samples, 0.01%)</title><rect x="581.5" y="565" width="0.1" height="15.0" fill="rgb(205,191,45)" rx="2" ry="2" />
<text  x="584.50" y="575.5" ></text>
</g>
<g >
<title>memcmp@plt (3 samples, 0.04%)</title><rect x="651.4" y="277" width="0.5" height="15.0" fill="rgb(245,59,30)" rx="2" ry="2" />
<text  x="654.44" y="287.5" ></text>
</g>
<g >
<title>std::__stable_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (4 samples, 0.05%)</title><rect x="154.5" y="613" width="0.6" height="15.0" fill="rgb(249,104,8)" rx="2" ry="2" />
<text  x="157.52" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (67 samples, 0.80%)</title><rect x="609.1" y="485" width="9.4" height="15.0" fill="rgb(211,61,19)" rx="2" ry="2" />
<text  x="612.11" y="495.5" ></text>
</g>
<g >
<title>pixman_image_create_solid_fill (2 samples, 0.02%)</title><rect x="73.4" y="773" width="0.2" height="15.0" fill="rgb(213,36,11)" rx="2" ry="2" />
<text  x="76.36" y="783.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::get (1 samples, 0.01%)</title><rect x="992.9" y="565" width="0.2" height="15.0" fill="rgb(230,199,26)" rx="2" ry="2" />
<text  x="995.91" y="575.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="244.9" y="373" width="0.2" height="15.0" fill="rgb(227,147,37)" rx="2" ry="2" />
<text  x="247.93" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (10 samples, 0.12%)</title><rect x="899.4" y="485" width="1.4" height="15.0" fill="rgb(245,157,43)" rx="2" ry="2" />
<text  x="902.42" y="495.5" ></text>
</g>
<g >
<title>_mm_mulhi_epu16 (22 samples, 0.26%)</title><rect x="273.3" y="485" width="3.0" height="15.0" fill="rgb(208,105,47)" rx="2" ry="2" />
<text  x="276.25" y="495.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.01%)</title><rect x="641.2" y="357" width="0.2" height="15.0" fill="rgb(245,68,22)" rx="2" ry="2" />
<text  x="644.21" y="367.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (24 samples, 0.29%)</title><rect x="79.1" y="773" width="3.4" height="15.0" fill="rgb(239,135,48)" rx="2" ry="2" />
<text  x="82.11" y="783.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (242 samples, 2.87%)</title><rect x="791.6" y="437" width="33.9" height="15.0" fill="rgb(244,94,13)" rx="2" ry="2" />
<text  x="794.62" y="447.5" >st..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.01%)</title><rect x="667.3" y="389" width="0.1" height="15.0" fill="rgb(235,38,40)" rx="2" ry="2" />
<text  x="670.28" y="399.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.02%)</title><rect x="849.0" y="469" width="0.2" height="15.0" fill="rgb(250,28,37)" rx="2" ry="2" />
<text  x="851.95" y="479.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="747.7" y="325" width="0.2" height="15.0" fill="rgb(247,121,22)" rx="2" ry="2" />
<text  x="750.75" y="335.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="995.4" y="501" width="0.2" height="15.0" fill="rgb(214,90,38)" rx="2" ry="2" />
<text  x="998.44" y="511.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="375.0" y="405" width="0.2" height="15.0" fill="rgb(229,211,6)" rx="2" ry="2" />
<text  x="378.02" y="415.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="472.7" y="421" width="0.2" height="15.0" fill="rgb(223,23,20)" rx="2" ry="2" />
<text  x="475.72" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.01%)</title><rect x="596.4" y="533" width="0.1" height="15.0" fill="rgb(233,16,19)" rx="2" ry="2" />
<text  x="599.36" y="543.5" ></text>
</g>
<g >
<title>memset@plt (1 samples, 0.01%)</title><rect x="1001.3" y="565" width="0.2" height="15.0" fill="rgb(222,103,16)" rx="2" ry="2" />
<text  x="1004.32" y="575.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (1 samples, 0.01%)</title><rect x="47.6" y="645" width="0.1" height="15.0" fill="rgb(235,74,16)" rx="2" ry="2" />
<text  x="50.57" y="655.5" ></text>
</g>
<g >
<title>FileFinder::MakePath (1 samples, 0.01%)</title><rect x="63.8" y="773" width="0.2" height="15.0" fill="rgb(230,215,46)" rx="2" ry="2" />
<text  x="66.83" y="783.5" ></text>
</g>
<g >
<title>std::replace&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (33 samples, 0.39%)</title><rect x="629.9" y="421" width="4.6" height="15.0" fill="rgb(237,135,10)" rx="2" ry="2" />
<text  x="632.86" y="431.5" ></text>
</g>
<g >
<title>optimize_operator (1 samples, 0.01%)</title><rect x="164.3" y="549" width="0.2" height="15.0" fill="rgb(223,162,53)" rx="2" ry="2" />
<text  x="167.33" y="559.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.01%)</title><rect x="154.5" y="549" width="0.2" height="15.0" fill="rgb(242,23,3)" rx="2" ry="2" />
<text  x="157.52" y="559.5" ></text>
</g>
<g >
<title>pixman_image_get_height (4 samples, 0.05%)</title><rect x="849.2" y="469" width="0.6" height="15.0" fill="rgb(242,224,11)" rx="2" ry="2" />
<text  x="852.23" y="479.5" ></text>
</g>
<g >
<title>Bitmap::EffectsBlit (1 samples, 0.01%)</title><rect x="63.5" y="773" width="0.2" height="15.0" fill="rgb(218,209,15)" rx="2" ry="2" />
<text  x="66.55" y="783.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (123 samples, 1.46%)</title><rect x="641.8" y="389" width="17.2" height="15.0" fill="rgb(234,187,4)" rx="2" ry="2" />
<text  x="644.77" y="399.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="1002.3" y="469" width="0.1" height="15.0" fill="rgb(240,68,38)" rx="2" ry="2" />
<text  x="1005.30" y="479.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.02%)</title><rect x="366.9" y="629" width="0.3" height="15.0" fill="rgb(242,4,19)" rx="2" ry="2" />
<text  x="369.89" y="639.5" ></text>
</g>
<g >
<title>xhci_msi_irq (5 samples, 0.06%)</title><rect x="1166.9" y="453" width="0.7" height="15.0" fill="rgb(229,31,29)" rx="2" ry="2" />
<text  x="1169.87" y="463.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.01%)</title><rect x="731.6" y="309" width="0.2" height="15.0" fill="rgb(224,66,27)" rx="2" ry="2" />
<text  x="734.63" y="319.5" ></text>
</g>
<g >
<title>is_opaque (6 samples, 0.07%)</title><rect x="317.8" y="485" width="0.9" height="15.0" fill="rgb(219,12,44)" rx="2" ry="2" />
<text  x="320.83" y="495.5" ></text>
</g>
<g >
<title>_pixman_compute_composite_region32 (4 samples, 0.05%)</title><rect x="297.6" y="533" width="0.6" height="15.0" fill="rgb(252,140,11)" rx="2" ry="2" />
<text  x="300.64" y="543.5" ></text>
</g>
<g >
<title>Tone::Tone (2 samples, 0.02%)</title><rect x="826.2" y="453" width="0.3" height="15.0" fill="rgb(205,96,51)" rx="2" ry="2" />
<text  x="829.24" y="463.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="244.9" y="309" width="0.2" height="15.0" fill="rgb(248,123,42)" rx="2" ry="2" />
<text  x="247.93" y="319.5" ></text>
</g>
<g >
<title>std::_Temporary_buffer&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable*&gt;::_Temporary_buffer (1 samples, 0.01%)</title><rect x="154.5" y="597" width="0.2" height="15.0" fill="rgb(241,211,18)" rx="2" ry="2" />
<text  x="157.52" y="607.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (68 samples, 0.81%)</title><rect x="35.4" y="581" width="9.5" height="15.0" fill="rgb(230,32,23)" rx="2" ry="2" />
<text  x="38.37" y="591.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.10%)</title><rect x="665.5" y="309" width="1.1" height="15.0" fill="rgb(237,212,7)" rx="2" ry="2" />
<text  x="668.46" y="319.5" ></text>
</g>
<g >
<title>Bitmap::height (2 samples, 0.02%)</title><rect x="833.0" y="437" width="0.3" height="15.0" fill="rgb(245,85,46)" rx="2" ry="2" />
<text  x="835.97" y="447.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="244.9" y="485" width="0.2" height="15.0" fill="rgb(233,37,36)" rx="2" ry="2" />
<text  x="247.93" y="495.5" ></text>
</g>
<g >
<title>_pixman_multiply_overflows_int (1 samples, 0.01%)</title><rect x="819.4" y="245" width="0.1" height="15.0" fill="rgb(238,162,22)" rx="2" ry="2" />
<text  x="822.38" y="255.5" ></text>
</g>
<g >
<title>activate_task (4 samples, 0.05%)</title><rect x="49.1" y="581" width="0.6" height="15.0" fill="rgb(208,77,24)" rx="2" ry="2" />
<text  x="52.11" y="591.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (16 samples, 0.19%)</title><rect x="80.2" y="693" width="2.3" height="15.0" fill="rgb(252,214,36)" rx="2" ry="2" />
<text  x="83.23" y="703.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="629.7" y="277" width="0.2" height="15.0" fill="rgb(246,202,19)" rx="2" ry="2" />
<text  x="632.72" y="287.5" ></text>
</g>
<g >
<title>__atomic_add (10 samples, 0.12%)</title><rect x="661.8" y="357" width="1.4" height="15.0" fill="rgb(236,86,28)" rx="2" ry="2" />
<text  x="664.82" y="367.5" ></text>
</g>
<g >
<title>Sprite::SetOpacity (1 samples, 0.01%)</title><rect x="983.2" y="581" width="0.2" height="15.0" fill="rgb(227,65,38)" rx="2" ry="2" />
<text  x="986.24" y="591.5" ></text>
</g>
<g >
<title>std::basic_iostream&lt;char, std::char_traits&lt;char&gt; &gt;::basic_iostream (6 samples, 0.07%)</title><rect x="902.9" y="533" width="0.9" height="15.0" fill="rgb(238,206,29)" rx="2" ry="2" />
<text  x="905.92" y="543.5" ></text>
</g>
<g >
<title>pixman_image_get_data (1 samples, 0.01%)</title><rect x="791.3" y="437" width="0.2" height="15.0" fill="rgb(206,171,49)" rx="2" ry="2" />
<text  x="794.34" y="447.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (1 samples, 0.01%)</title><rect x="582.6" y="549" width="0.2" height="15.0" fill="rgb(239,49,49)" rx="2" ry="2" />
<text  x="585.62" y="559.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (1 samples, 0.01%)</title><rect x="1189.2" y="661" width="0.1" height="15.0" fill="rgb(213,167,34)" rx="2" ry="2" />
<text  x="1192.16" y="671.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (18 samples, 0.21%)</title><rect x="79.9" y="709" width="2.6" height="15.0" fill="rgb(240,171,22)" rx="2" ry="2" />
<text  x="82.95" y="719.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="818.7" y="197" width="0.1" height="15.0" fill="rgb(207,70,19)" rx="2" ry="2" />
<text  x="821.67" y="207.5" ></text>
</g>
<g >
<title>combine1 (1 samples, 0.01%)</title><rect x="317.1" y="485" width="0.2" height="15.0" fill="rgb(243,130,8)" rx="2" ry="2" />
<text  x="320.13" y="495.5" ></text>
</g>
<g >
<title>__libc_recvmsg (1 samples, 0.01%)</title><rect x="59.2" y="773" width="0.1" height="15.0" fill="rgb(244,138,45)" rx="2" ry="2" />
<text  x="62.20" y="783.5" ></text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt;, 36ul&gt; (4 samples, 0.05%)</title><rect x="366.6" y="645" width="0.6" height="15.0" fill="rgb(238,127,51)" rx="2" ry="2" />
<text  x="369.61" y="655.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (10 samples, 0.12%)</title><rect x="341.9" y="565" width="1.4" height="15.0" fill="rgb(227,158,28)" rx="2" ry="2" />
<text  x="344.94" y="575.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (6 samples, 0.07%)</title><rect x="833.7" y="405" width="0.8" height="15.0" fill="rgb(237,156,13)" rx="2" ry="2" />
<text  x="836.67" y="415.5" ></text>
</g>
<g >
<title>Tone::Tone (2 samples, 0.02%)</title><rect x="987.9" y="581" width="0.2" height="15.0" fill="rgb(237,68,38)" rx="2" ry="2" />
<text  x="990.87" y="591.5" ></text>
</g>
<g >
<title>_mm_set_epi32 (3 samples, 0.04%)</title><rect x="336.9" y="469" width="0.4" height="15.0" fill="rgb(207,177,20)" rx="2" ry="2" />
<text  x="339.89" y="479.5" ></text>
</g>
<g >
<title>_mm_or_si128 (22 samples, 0.26%)</title><rect x="263.3" y="533" width="3.1" height="15.0" fill="rgb(224,126,34)" rx="2" ry="2" />
<text  x="266.30" y="543.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (6 samples, 0.07%)</title><rect x="1003.0" y="629" width="0.8" height="15.0" fill="rgb(222,179,11)" rx="2" ry="2" />
<text  x="1006.01" y="639.5" ></text>
</g>
<g >
<title>Player::Run (7,562 samples, 89.83%)</title><rect x="126.5" y="741" width="1060.0" height="15.0" fill="rgb(206,33,53)" rx="2" ry="2" />
<text  x="129.49" y="751.5" >Player::Run</text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="472.7" y="469" width="0.2" height="15.0" fill="rgb(221,15,47)" rx="2" ry="2" />
<text  x="475.72" y="479.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="626.4" y="357" width="0.2" height="15.0" fill="rgb(207,164,12)" rx="2" ry="2" />
<text  x="629.35" y="367.5" ></text>
</g>
<g >
<title>Game_Player::Update (12 samples, 0.14%)</title><rect x="964.6" y="629" width="1.7" height="15.0" fill="rgb(234,146,6)" rx="2" ry="2" />
<text  x="967.60" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.01%)</title><rect x="627.6" y="357" width="0.2" height="15.0" fill="rgb(236,213,54)" rx="2" ry="2" />
<text  x="630.61" y="367.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="563.7" y="549" width="0.1" height="15.0" fill="rgb(217,120,28)" rx="2" ry="2" />
<text  x="566.69" y="559.5" ></text>
</g>
<g >
<title>unix_destruct_scm (1 samples, 0.01%)</title><rect x="1002.0" y="261" width="0.2" height="15.0" fill="rgb(239,127,29)" rx="2" ry="2" />
<text  x="1005.02" y="271.5" ></text>
</g>
<g >
<title>Game_Picture::SyncCurrentToFinish (1 samples, 0.01%)</title><rect x="881.1" y="549" width="0.1" height="15.0" fill="rgb(247,60,27)" rx="2" ry="2" />
<text  x="884.05" y="559.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (3 samples, 0.04%)</title><rect x="996.6" y="389" width="0.4" height="15.0" fill="rgb(216,83,3)" rx="2" ry="2" />
<text  x="999.56" y="399.5" ></text>
</g>
<g >
<title>Utils::DecodeUTF32 (2 samples, 0.02%)</title><rect x="901.7" y="549" width="0.2" height="15.0" fill="rgb(237,226,24)" rx="2" ry="2" />
<text  x="904.66" y="559.5" ></text>
</g>
<g >
<title>Game_Interpreter::ReserveSubcommandIndex (1 samples, 0.01%)</title><rect x="64.9" y="773" width="0.2" height="15.0" fill="rgb(219,44,49)" rx="2" ry="2" />
<text  x="67.95" y="783.5" ></text>
</g>
<g >
<title>__GI___poll (1 samples, 0.01%)</title><rect x="995.9" y="549" width="0.1" height="15.0" fill="rgb(238,203,6)" rx="2" ry="2" />
<text  x="998.86" y="559.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="1166.0" y="517" width="0.2" height="15.0" fill="rgb(237,44,51)" rx="2" ry="2" />
<text  x="1169.03" y="527.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.01%)</title><rect x="49.8" y="597" width="0.2" height="15.0" fill="rgb(207,214,39)" rx="2" ry="2" />
<text  x="52.81" y="607.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (1 samples, 0.01%)</title><rect x="998.0" y="501" width="0.1" height="15.0" fill="rgb(235,57,2)" rx="2" ry="2" />
<text  x="1000.96" y="511.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="366.5" y="613" width="0.1" height="15.0" fill="rgb(216,177,11)" rx="2" ry="2" />
<text  x="369.47" y="623.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage1 (4,181 samples, 49.67%)</title><rect x="408.4" y="661" width="586.1" height="15.0" fill="rgb(251,179,48)" rx="2" ry="2" />
<text  x="411.38" y="671.5" >Scene_Map::UpdateStage1</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_compare (1 samples, 0.01%)</title><rect x="660.6" y="325" width="0.1" height="15.0" fill="rgb(253,77,38)" rx="2" ry="2" />
<text  x="663.56" y="335.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (5 samples, 0.06%)</title><rect x="1166.9" y="485" width="0.7" height="15.0" fill="rgb(249,106,54)" rx="2" ry="2" />
<text  x="1169.87" y="495.5" ></text>
</g>
<g >
<title>GL_ActivateRenderer (1 samples, 0.01%)</title><rect x="1168.0" y="565" width="0.1" height="15.0" fill="rgb(252,8,4)" rx="2" ry="2" />
<text  x="1170.99" y="575.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (4 samples, 0.05%)</title><rect x="581.8" y="549" width="0.5" height="15.0" fill="rgb(226,120,44)" rx="2" ry="2" />
<text  x="584.78" y="559.5" ></text>
</g>
<g >
<title>pixman_image_get_width (1 samples, 0.01%)</title><rect x="894.2" y="533" width="0.2" height="15.0" fill="rgb(233,24,12)" rx="2" ry="2" />
<text  x="897.23" y="543.5" ></text>
</g>
<g >
<title>core_combine_over_u_sse2_no_mask (715 samples, 8.49%)</title><rect x="689.2" y="405" width="100.2" height="15.0" fill="rgb(213,141,35)" rx="2" ry="2" />
<text  x="692.15" y="415.5" >core_combine..</text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.02%)</title><rect x="1001.0" y="549" width="0.3" height="15.0" fill="rgb(224,201,46)" rx="2" ry="2" />
<text  x="1004.04" y="559.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.01%)</title><rect x="1000.6" y="437" width="0.2" height="15.0" fill="rgb(242,122,29)" rx="2" ry="2" />
<text  x="1003.62" y="447.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.02%)</title><rect x="25.7" y="757" width="0.3" height="15.0" fill="rgb(233,175,17)" rx="2" ry="2" />
<text  x="28.70" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (10 samples, 0.12%)</title><rect x="899.4" y="517" width="1.4" height="15.0" fill="rgb(230,67,24)" rx="2" ry="2" />
<text  x="902.42" y="527.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="408.2" y="629" width="0.2" height="15.0" fill="rgb(215,110,13)" rx="2" ry="2" />
<text  x="411.24" y="639.5" ></text>
</g>
<g >
<title>std::__merge_adaptive&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, long, Drawable**, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (10 samples, 0.12%)</title><rect x="357.4" y="581" width="1.4" height="15.0" fill="rgb(243,51,33)" rx="2" ry="2" />
<text  x="360.36" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (71 samples, 0.84%)</title><rect x="641.9" y="309" width="10.0" height="15.0" fill="rgb(232,211,27)" rx="2" ry="2" />
<text  x="644.91" y="319.5" ></text>
</g>
<g >
<title>_copy_to_user (1 samples, 0.01%)</title><rect x="1001.0" y="485" width="0.2" height="15.0" fill="rgb(250,72,40)" rx="2" ry="2" />
<text  x="1004.04" y="495.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.01%)</title><rect x="374.9" y="405" width="0.1" height="15.0" fill="rgb(231,38,31)" rx="2" ry="2" />
<text  x="377.88" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.01%)</title><rect x="571.5" y="533" width="0.2" height="15.0" fill="rgb(238,71,28)" rx="2" ry="2" />
<text  x="574.54" y="543.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="273.1" y="437" width="0.2" height="15.0" fill="rgb(218,70,25)" rx="2" ry="2" />
<text  x="276.11" y="447.5" ></text>
</g>
<g >
<title>_mm_movemask_epi8 (2 samples, 0.02%)</title><rect x="187.0" y="485" width="0.3" height="15.0" fill="rgb(233,57,8)" rx="2" ry="2" />
<text  x="190.04" y="495.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.01%)</title><rect x="339.8" y="533" width="0.2" height="15.0" fill="rgb(206,70,22)" rx="2" ry="2" />
<text  x="342.83" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (21 samples, 0.25%)</title><rect x="664.3" y="325" width="3.0" height="15.0" fill="rgb(228,56,12)" rx="2" ry="2" />
<text  x="667.34" y="335.5" ></text>
</g>
<g >
<title>_mm_mullo_epi16 (1 samples, 0.01%)</title><rect x="214.8" y="469" width="0.1" height="15.0" fill="rgb(248,190,21)" rx="2" ry="2" />
<text  x="217.80" y="479.5" ></text>
</g>
<g >
<title>SDL_LowerBlit_REAL (1 samples, 0.01%)</title><rect x="1004.0" y="597" width="0.1" height="15.0" fill="rgb(215,74,5)" rx="2" ry="2" />
<text  x="1006.99" y="607.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="375.0" y="309" width="0.2" height="15.0" fill="rgb(224,202,44)" rx="2" ry="2" />
<text  x="378.02" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (1 samples, 0.01%)</title><rect x="968.5" y="565" width="0.2" height="15.0" fill="rgb(209,0,9)" rx="2" ry="2" />
<text  x="971.52" y="575.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (16 samples, 0.19%)</title><rect x="998.2" y="437" width="2.3" height="15.0" fill="rgb(246,177,38)" rx="2" ry="2" />
<text  x="1001.24" y="447.5" ></text>
</g>
<g >
<title>_mm_adds_epu16 (4 samples, 0.05%)</title><rect x="214.1" y="469" width="0.6" height="15.0" fill="rgb(236,138,50)" rx="2" ry="2" />
<text  x="217.10" y="479.5" ></text>
</g>
<g >
<title>Game_Interpreter::ExecuteCommand (85 samples, 1.01%)</title><rect x="907.8" y="581" width="11.9" height="15.0" fill="rgb(208,144,2)" rx="2" ry="2" />
<text  x="910.83" y="591.5" ></text>
</g>
<g >
<title>Game_Interpreter::ValueOrVariable (1 samples, 0.01%)</title><rect x="593.3" y="549" width="0.1" height="15.0" fill="rgb(216,179,23)" rx="2" ry="2" />
<text  x="596.27" y="559.5" ></text>
</g>
<g >
<title>Player::IsRPG2k (1 samples, 0.01%)</title><rect x="57.5" y="773" width="0.2" height="15.0" fill="rgb(223,86,38)" rx="2" ry="2" />
<text  x="60.52" y="783.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandConditionalBranch (1 samples, 0.01%)</title><rect x="412.4" y="597" width="0.2" height="15.0" fill="rgb(236,48,17)" rx="2" ry="2" />
<text  x="415.44" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (7 samples, 0.08%)</title><rect x="618.8" y="485" width="1.0" height="15.0" fill="rgb(236,195,19)" rx="2" ry="2" />
<text  x="621.78" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (1 samples, 0.01%)</title><rect x="76.3" y="773" width="0.1" height="15.0" fill="rgb(216,176,50)" rx="2" ry="2" />
<text  x="79.30" y="783.5" ></text>
</g>
<g >
<title>housekeeping_cpumask (1 samples, 0.01%)</title><rect x="569.7" y="421" width="0.2" height="15.0" fill="rgb(222,111,46)" rx="2" ry="2" />
<text  x="572.72" y="431.5" ></text>
</g>
<g >
<title>all (8,418 samples, 100%)</title><rect x="10.0" y="821" width="1180.0" height="15.0" fill="rgb(221,183,49)" rx="2" ry="2" />
<text  x="13.00" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (6 samples, 0.07%)</title><rect x="609.5" y="437" width="0.9" height="15.0" fill="rgb(245,207,22)" rx="2" ry="2" />
<text  x="612.53" y="447.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::operator() (1,838 samples, 21.83%)</title><rect x="620.7" y="517" width="257.7" height="15.0" fill="rgb(222,24,43)" rx="2" ry="2" />
<text  x="623.75" y="527.5" >std::function&lt;void (FileRequestRes..</text>
</g>
<g >
<title>__sched_text_start (2 samples, 0.02%)</title><rect x="83.0" y="677" width="0.3" height="15.0" fill="rgb(205,206,3)" rx="2" ry="2" />
<text  x="86.03" y="687.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="731.5" y="325" width="0.1" height="15.0" fill="rgb(244,130,19)" rx="2" ry="2" />
<text  x="734.48" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.01%)</title><rect x="876.3" y="485" width="0.1" height="15.0" fill="rgb(222,9,29)" rx="2" ry="2" />
<text  x="879.29" y="495.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.01%)</title><rect x="876.1" y="389" width="0.2" height="15.0" fill="rgb(220,116,50)" rx="2" ry="2" />
<text  x="879.15" y="399.5" ></text>
</g>
<g >
<title>_mm_mullo_epi16 (1 samples, 0.01%)</title><rect x="333.2" y="469" width="0.2" height="15.0" fill="rgb(208,116,20)" rx="2" ry="2" />
<text  x="336.25" y="479.5" ></text>
</g>
<g >
<title>pixman_transform_point_31_16 (2 samples, 0.02%)</title><rect x="75.3" y="773" width="0.3" height="15.0" fill="rgb(227,98,1)" rx="2" ry="2" />
<text  x="78.32" y="783.5" ></text>
</g>
<g >
<title>add_wait_queue (1 samples, 0.01%)</title><rect x="32.1" y="693" width="0.2" height="15.0" fill="rgb(214,169,2)" rx="2" ry="2" />
<text  x="35.15" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.01%)</title><rect x="582.2" y="533" width="0.1" height="15.0" fill="rgb(212,13,25)" rx="2" ry="2" />
<text  x="585.20" y="543.5" ></text>
</g>
<g >
<title>Game_Interpreter::IsAsyncPending (1 samples, 0.01%)</title><rect x="414.1" y="597" width="0.2" height="15.0" fill="rgb(216,132,43)" rx="2" ry="2" />
<text  x="417.13" y="607.5" ></text>
</g>
<g >
<title>Tone::Tone (3 samples, 0.04%)</title><rect x="887.1" y="517" width="0.4" height="15.0" fill="rgb(230,125,37)" rx="2" ry="2" />
<text  x="890.08" y="527.5" ></text>
</g>
<g >
<title>load_128_unaligned (2 samples, 0.02%)</title><rect x="789.5" y="421" width="0.3" height="15.0" fill="rgb(229,93,51)" rx="2" ry="2" />
<text  x="792.52" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_ppoll (112 samples, 1.33%)</title><rect x="30.3" y="757" width="15.7" height="15.0" fill="rgb(212,192,11)" rx="2" ry="2" />
<text  x="33.33" y="767.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="408.2" y="581" width="0.2" height="15.0" fill="rgb(232,170,34)" rx="2" ry="2" />
<text  x="411.24" y="591.5" ></text>
</g>
<g >
<title>SdlMixerAudio::Update (2 samples, 0.02%)</title><rect x="1176.0" y="661" width="0.3" height="15.0" fill="rgb(213,91,30)" rx="2" ry="2" />
<text  x="1178.98" y="671.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (31 samples, 0.37%)</title><rect x="600.3" y="501" width="4.3" height="15.0" fill="rgb(240,188,48)" rx="2" ry="2" />
<text  x="603.28" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (6 samples, 0.07%)</title><rect x="894.8" y="533" width="0.8" height="15.0" fill="rgb(224,114,3)" rx="2" ry="2" />
<text  x="897.79" y="543.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (1 samples, 0.01%)</title><rect x="367.0" y="581" width="0.2" height="15.0" fill="rgb(233,90,23)" rx="2" ry="2" />
<text  x="370.03" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (22 samples, 0.26%)</title><rect x="904.2" y="533" width="3.1" height="15.0" fill="rgb(220,74,20)" rx="2" ry="2" />
<text  x="907.18" y="543.5" ></text>
</g>
<g >
<title>SDL_LockJoysticks_REAL (1 samples, 0.01%)</title><rect x="1000.8" y="581" width="0.1" height="15.0" fill="rgb(252,10,24)" rx="2" ry="2" />
<text  x="1003.76" y="591.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="538.0" y="501" width="0.2" height="15.0" fill="rgb(221,109,32)" rx="2" ry="2" />
<text  x="541.04" y="511.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (3 samples, 0.04%)</title><rect x="569.6" y="565" width="0.4" height="15.0" fill="rgb(238,219,25)" rx="2" ry="2" />
<text  x="572.58" y="575.5" ></text>
</g>
<g >
<title>GL_UnlockTexture (1 samples, 0.01%)</title><rect x="1167.9" y="581" width="0.1" height="15.0" fill="rgb(230,219,0)" rx="2" ry="2" />
<text  x="1170.85" y="591.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.01%)</title><rect x="818.8" y="213" width="0.2" height="15.0" fill="rgb(238,79,1)" rx="2" ry="2" />
<text  x="821.81" y="223.5" ></text>
</g>
<g >
<title>in_over_2x128 (167 samples, 1.98%)</title><rect x="225.2" y="533" width="23.4" height="15.0" fill="rgb(219,164,13)" rx="2" ry="2" />
<text  x="228.17" y="543.5" >i..</text>
</g>
<g >
<title>std::__copy_move_a&lt;true, Drawable**, Drawable**&gt; (1 samples, 0.01%)</title><rect x="365.6" y="501" width="0.2" height="15.0" fill="rgb(233,121,29)" rx="2" ry="2" />
<text  x="368.63" y="511.5" ></text>
</g>
<g >
<title>Bitmap::pixels (2 samples, 0.02%)</title><rect x="791.2" y="453" width="0.3" height="15.0" fill="rgb(253,32,22)" rx="2" ry="2" />
<text  x="794.20" y="463.5" ></text>
</g>
<g >
<title>Cache::Picture (1 samples, 0.01%)</title><rect x="63.7" y="773" width="0.1" height="15.0" fill="rgb(224,5,5)" rx="2" ry="2" />
<text  x="66.69" y="783.5" ></text>
</g>
<g >
<title>pix_multiply_2x128 (60 samples, 0.71%)</title><rect x="230.6" y="501" width="8.4" height="15.0" fill="rgb(211,223,39)" rx="2" ry="2" />
<text  x="233.64" y="511.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale@plt (1 samples, 0.01%)</title><rect x="902.8" y="517" width="0.1" height="15.0" fill="rgb(229,142,34)" rx="2" ry="2" />
<text  x="905.78" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_write (15 samples, 0.18%)</title><rect x="48.4" y="757" width="2.1" height="15.0" fill="rgb(218,44,41)" rx="2" ry="2" />
<text  x="51.41" y="767.5" ></text>
</g>
<g >
<title>Sprite::SetZoomX (1 samples, 0.01%)</title><rect x="70.1" y="773" width="0.2" height="15.0" fill="rgb(215,113,2)" rx="2" ry="2" />
<text  x="73.14" y="783.5" ></text>
</g>
<g >
<title>load_128_unaligned (21 samples, 0.25%)</title><rect x="289.2" y="533" width="3.0" height="15.0" fill="rgb(230,111,15)" rx="2" ry="2" />
<text  x="292.23" y="543.5" ></text>
</g>
<g >
<title>__GI___nanosleep (21 samples, 0.25%)</title><rect x="997.5" y="597" width="3.0" height="15.0" fill="rgb(230,165,23)" rx="2" ry="2" />
<text  x="1000.54" y="607.5" ></text>
</g>
<g >
<title>expand_alpha_2x128 (2 samples, 0.02%)</title><rect x="184.7" y="501" width="0.2" height="15.0" fill="rgb(225,112,17)" rx="2" ry="2" />
<text  x="187.66" y="511.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="273.1" y="421" width="0.2" height="15.0" fill="rgb(223,100,50)" rx="2" ry="2" />
<text  x="276.11" y="431.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="538.0" y="517" width="0.2" height="15.0" fill="rgb(209,8,12)" rx="2" ry="2" />
<text  x="541.04" y="527.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;Bitmap, std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (242 samples, 2.87%)</title><rect x="791.6" y="389" width="33.9" height="15.0" fill="rgb(215,112,25)" rx="2" ry="2" />
<text  x="794.62" y="399.5" >st..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append@plt (2 samples, 0.02%)</title><rect x="627.9" y="389" width="0.3" height="15.0" fill="rgb(242,214,50)" rx="2" ry="2" />
<text  x="630.89" y="399.5" ></text>
</g>
<g >
<title>pick_next_task_rt (1 samples, 0.01%)</title><rect x="731.6" y="277" width="0.2" height="15.0" fill="rgb(216,22,39)" rx="2" ry="2" />
<text  x="734.63" y="287.5" ></text>
</g>
<g >
<title>pixman_image_unref (3 samples, 0.04%)</title><rect x="341.2" y="581" width="0.5" height="15.0" fill="rgb(208,178,32)" rx="2" ry="2" />
<text  x="344.24" y="591.5" ></text>
</g>
<g >
<title>Sprite::SetWaverPhase (3 samples, 0.04%)</title><rect x="983.7" y="581" width="0.4" height="15.0" fill="rgb(246,125,42)" rx="2" ry="2" />
<text  x="986.66" y="591.5" ></text>
</g>
<g >
<title>__sched_text_start (92 samples, 1.09%)</title><rect x="32.6" y="661" width="12.9" height="15.0" fill="rgb(246,29,14)" rx="2" ry="2" />
<text  x="35.57" y="671.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="747.7" y="357" width="0.2" height="15.0" fill="rgb(247,128,46)" rx="2" ry="2" />
<text  x="750.75" y="367.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="949.3" y="517" width="0.2" height="15.0" fill="rgb(242,116,6)" rx="2" ry="2" />
<text  x="952.32" y="527.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="341.1" y="533" width="0.1" height="15.0" fill="rgb(226,24,41)" rx="2" ry="2" />
<text  x="344.10" y="543.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="569.7" y="469" width="0.2" height="15.0" fill="rgb(251,186,2)" rx="2" ry="2" />
<text  x="572.72" y="479.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.02%)</title><rect x="569.6" y="533" width="0.3" height="15.0" fill="rgb(220,181,25)" rx="2" ry="2" />
<text  x="572.58" y="543.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="50.7" y="789" width="0.1" height="15.0" fill="rgb(246,95,28)" rx="2" ry="2" />
<text  x="53.65" y="799.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.01%)</title><rect x="1189.2" y="709" width="0.1" height="15.0" fill="rgb(253,184,20)" rx="2" ry="2" />
<text  x="1192.16" y="719.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="862.4" y="229" width="0.1" height="15.0" fill="rgb(251,144,29)" rx="2" ry="2" />
<text  x="865.41" y="239.5" ></text>
</g>
<g >
<title>SDL_WaitEventTimeout_REAL (36 samples, 0.43%)</title><rect x="997.5" y="629" width="5.1" height="15.0" fill="rgb(227,55,53)" rx="2" ry="2" />
<text  x="1000.54" y="639.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (3 samples, 0.04%)</title><rect x="82.9" y="725" width="0.4" height="15.0" fill="rgb(232,1,1)" rx="2" ry="2" />
<text  x="85.89" y="735.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="26.0" y="789" width="0.1" height="15.0" fill="rgb(208,219,0)" rx="2" ry="2" />
<text  x="28.98" y="799.5" ></text>
</g>
<g >
<title>__GI___poll (1 samples, 0.01%)</title><rect x="120.3" y="773" width="0.2" height="15.0" fill="rgb(239,17,25)" rx="2" ry="2" />
<text  x="123.32" y="783.5" ></text>
</g>
<g >
<title>std::locale::~locale (1 samples, 0.01%)</title><rect x="903.9" y="517" width="0.1" height="15.0" fill="rgb(223,123,24)" rx="2" ry="2" />
<text  x="906.90" y="527.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="862.4" y="261" width="0.1" height="15.0" fill="rgb(206,33,30)" rx="2" ry="2" />
<text  x="865.41" y="271.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (11 samples, 0.13%)</title><rect x="876.4" y="485" width="1.6" height="15.0" fill="rgb(236,60,23)" rx="2" ry="2" />
<text  x="879.43" y="495.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (6 samples, 0.07%)</title><rect x="833.7" y="389" width="0.8" height="15.0" fill="rgb(205,112,39)" rx="2" ry="2" />
<text  x="836.67" y="399.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (10 samples, 0.12%)</title><rect x="874.0" y="373" width="1.4" height="15.0" fill="rgb(226,151,38)" rx="2" ry="2" />
<text  x="877.04" y="383.5" ></text>
</g>
<g >
<title>usb_hcd_submit_urb (1 samples, 0.01%)</title><rect x="1167.4" y="293" width="0.2" height="15.0" fill="rgb(238,181,11)" rx="2" ry="2" />
<text  x="1170.43" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (1 samples, 0.01%)</title><rect x="995.2" y="533" width="0.1" height="15.0" fill="rgb(231,143,17)" rx="2" ry="2" />
<text  x="998.16" y="543.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.01%)</title><rect x="722.9" y="229" width="0.2" height="15.0" fill="rgb(253,145,38)" rx="2" ry="2" />
<text  x="725.93" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (2 samples, 0.02%)</title><rect x="899.1" y="533" width="0.3" height="15.0" fill="rgb(249,79,53)" rx="2" ry="2" />
<text  x="902.14" y="543.5" ></text>
</g>
<g >
<title>_mm_shufflehi_epi16 (12 samples, 0.14%)</title><rect x="221.9" y="517" width="1.7" height="15.0" fill="rgb(223,105,11)" rx="2" ry="2" />
<text  x="224.95" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.05%)</title><rect x="1001.7" y="437" width="0.6" height="15.0" fill="rgb(238,156,28)" rx="2" ry="2" />
<text  x="1004.74" y="447.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (21 samples, 0.25%)</title><rect x="79.5" y="741" width="3.0" height="15.0" fill="rgb(209,29,38)" rx="2" ry="2" />
<text  x="82.53" y="751.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.01%)</title><rect x="277.2" y="469" width="0.1" height="15.0" fill="rgb(215,223,37)" rx="2" ry="2" />
<text  x="280.18" y="479.5" ></text>
</g>
<g >
<title>pixman_image_get_height (2 samples, 0.02%)</title><rect x="124.7" y="773" width="0.2" height="15.0" fill="rgb(239,223,21)" rx="2" ry="2" />
<text  x="127.66" y="783.5" ></text>
</g>
<g >
<title>std::bitset&lt;36ul&gt;::_M_copy_to_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.01%)</title><rect x="366.6" y="629" width="0.1" height="15.0" fill="rgb(245,81,31)" rx="2" ry="2" />
<text  x="369.61" y="639.5" ></text>
</g>
<g >
<title>do_nanosleep (18 samples, 0.21%)</title><rect x="998.0" y="517" width="2.5" height="15.0" fill="rgb(219,148,5)" rx="2" ry="2" />
<text  x="1000.96" y="527.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="232.5" y="357" width="0.1" height="15.0" fill="rgb(247,157,12)" rx="2" ry="2" />
<text  x="235.46" y="367.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64.part.16 (1 samples, 0.01%)</title><rect x="401.9" y="485" width="0.2" height="15.0" fill="rgb(205,79,40)" rx="2" ry="2" />
<text  x="404.93" y="495.5" ></text>
</g>
<g >
<title>Game_Picture::Move (6 samples, 0.07%)</title><rect x="582.3" y="565" width="0.9" height="15.0" fill="rgb(205,67,51)" rx="2" ry="2" />
<text  x="585.34" y="575.5" ></text>
</g>
<g >
<title>[libGLX.so.0.0.0] (2 samples, 0.02%)</title><rect x="1176.7" y="597" width="0.3" height="15.0" fill="rgb(237,107,44)" rx="2" ry="2" />
<text  x="1179.68" y="607.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (2 samples, 0.02%)</title><rect x="68.2" y="773" width="0.3" height="15.0" fill="rgb(234,75,8)" rx="2" ry="2" />
<text  x="71.17" y="783.5" ></text>
</g>
<g >
<title>Sprite::Refresh (1 samples, 0.01%)</title><rect x="351.7" y="629" width="0.2" height="15.0" fill="rgb(230,119,47)" rx="2" ry="2" />
<text  x="354.75" y="639.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.04%)</title><rect x="1166.2" y="533" width="0.4" height="15.0" fill="rgb(234,84,48)" rx="2" ry="2" />
<text  x="1169.17" y="543.5" ></text>
</g>
<g >
<title>[[stack]] (96 samples, 1.14%)</title><rect x="63.4" y="789" width="13.5" height="15.0" fill="rgb(230,91,47)" rx="2" ry="2" />
<text  x="66.41" y="799.5" ></text>
</g>
<g >
<title>Transform::Transform (6 samples, 0.07%)</title><rect x="294.8" y="533" width="0.9" height="15.0" fill="rgb(232,209,34)" rx="2" ry="2" />
<text  x="297.84" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (17 samples, 0.20%)</title><rect x="601.4" y="453" width="2.4" height="15.0" fill="rgb(219,185,50)" rx="2" ry="2" />
<text  x="604.40" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_compare (1 samples, 0.01%)</title><rect x="993.6" y="389" width="0.2" height="15.0" fill="rgb(220,88,16)" rx="2" ry="2" />
<text  x="996.61" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="367.4" y="629" width="0.2" height="15.0" fill="rgb(245,83,44)" rx="2" ry="2" />
<text  x="370.45" y="639.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.01%)</title><rect x="1176.1" y="517" width="0.2" height="15.0" fill="rgb(227,200,7)" rx="2" ry="2" />
<text  x="1179.12" y="527.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (5 samples, 0.06%)</title><rect x="350.1" y="597" width="0.7" height="15.0" fill="rgb(218,165,26)" rx="2" ry="2" />
<text  x="353.07" y="607.5" ></text>
</g>
<g >
<title>Sprite::SetOx (1 samples, 0.01%)</title><rect x="58.6" y="773" width="0.2" height="15.0" fill="rgb(205,201,28)" rx="2" ry="2" />
<text  x="61.64" y="783.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.01%)</title><rect x="244.9" y="245" width="0.2" height="15.0" fill="rgb(237,224,40)" rx="2" ry="2" />
<text  x="247.93" y="255.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.01%)</title><rect x="825.4" y="325" width="0.1" height="15.0" fill="rgb(224,138,34)" rx="2" ry="2" />
<text  x="828.40" y="335.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (2 samples, 0.02%)</title><rect x="363.8" y="549" width="0.3" height="15.0" fill="rgb(238,93,35)" rx="2" ry="2" />
<text  x="366.80" y="559.5" ></text>
</g>
<g >
<title>_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="353.4" y="501" width="0.2" height="15.0" fill="rgb(230,14,54)" rx="2" ry="2" />
<text  x="356.43" y="511.5" ></text>
</g>
<g >
<title>Window::Update (1 samples, 0.01%)</title><rect x="993.3" y="597" width="0.2" height="15.0" fill="rgb(222,163,36)" rx="2" ry="2" />
<text  x="996.33" y="607.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (8 samples, 0.10%)</title><rect x="66.5" y="773" width="1.1" height="15.0" fill="rgb(208,97,5)" rx="2" ry="2" />
<text  x="69.49" y="783.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (4 samples, 0.05%)</title><rect x="669.4" y="437" width="0.5" height="15.0" fill="rgb(221,160,12)" rx="2" ry="2" />
<text  x="672.39" y="447.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="375.0" y="469" width="0.2" height="15.0" fill="rgb(254,46,28)" rx="2" ry="2" />
<text  x="378.02" y="479.5" ></text>
</g>
<g >
<title>rw_copy_check_uvector (1 samples, 0.01%)</title><rect x="1001.7" y="325" width="0.2" height="15.0" fill="rgb(230,206,8)" rx="2" ry="2" />
<text  x="1004.74" y="335.5" ></text>
</g>
<g >
<title>sse2_combine_over_u (359 samples, 4.26%)</title><rect x="166.2" y="533" width="50.3" height="15.0" fill="rgb(233,120,48)" rx="2" ry="2" />
<text  x="169.16" y="543.5" >sse2_..</text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (71 samples, 0.84%)</title><rect x="641.9" y="325" width="10.0" height="15.0" fill="rgb(217,118,40)" rx="2" ry="2" />
<text  x="644.91" y="335.5" ></text>
</g>
<g >
<title>X11_Pending (12 samples, 0.14%)</title><rect x="995.9" y="597" width="1.6" height="15.0" fill="rgb(242,44,31)" rx="2" ry="2" />
<text  x="998.86" y="607.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="44.9" y="565" width="0.1" height="15.0" fill="rgb(243,182,48)" rx="2" ry="2" />
<text  x="47.90" y="575.5" ></text>
</g>
<g >
<title>x86_pmu_disable (1 samples, 0.01%)</title><rect x="32.8" y="581" width="0.2" height="15.0" fill="rgb(221,131,10)" rx="2" ry="2" />
<text  x="35.85" y="591.5" ></text>
</g>
<g >
<title>_pixman_bits_image_init (190 samples, 2.26%)</title><rect x="794.1" y="277" width="26.7" height="15.0" fill="rgb(243,149,21)" rx="2" ry="2" />
<text  x="797.14" y="287.5" >_..</text>
</g>
<g >
<title>FileRequestAsync::IsReady (1 samples, 0.01%)</title><rect x="620.6" y="501" width="0.1" height="15.0" fill="rgb(241,26,19)" rx="2" ry="2" />
<text  x="623.61" y="511.5" ></text>
</g>
<g >
<title>_mm_adds_epu8 (1 samples, 0.01%)</title><rect x="318.8" y="469" width="0.1" height="15.0" fill="rgb(205,209,9)" rx="2" ry="2" />
<text  x="321.81" y="479.5" ></text>
</g>
<g >
<title>Game_Map::GetPositionX (1 samples, 0.01%)</title><rect x="966.0" y="581" width="0.1" height="15.0" fill="rgb(209,95,52)" rx="2" ry="2" />
<text  x="969.00" y="591.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="273.1" y="373" width="0.2" height="15.0" fill="rgb(214,1,1)" rx="2" ry="2" />
<text  x="276.11" y="383.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.01%)</title><rect x="1167.6" y="549" width="0.1" height="15.0" fill="rgb(229,135,44)" rx="2" ry="2" />
<text  x="1170.57" y="559.5" ></text>
</g>
<g >
<title>_XReply (1 samples, 0.01%)</title><rect x="995.4" y="549" width="0.2" height="15.0" fill="rgb(236,35,26)" rx="2" ry="2" />
<text  x="998.44" y="559.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.02%)</title><rect x="1166.3" y="517" width="0.3" height="15.0" fill="rgb(210,191,33)" rx="2" ry="2" />
<text  x="1169.31" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_stringstream (9 samples, 0.11%)</title><rect x="902.5" y="549" width="1.3" height="15.0" fill="rgb(229,213,24)" rx="2" ry="2" />
<text  x="905.50" y="559.5" ></text>
</g>
<g >
<title>Sprite::SetBitmap (177 samples, 2.10%)</title><rect x="851.5" y="485" width="24.8" height="15.0" fill="rgb(223,183,5)" rx="2" ry="2" />
<text  x="854.48" y="495.5" >S..</text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="819.0" y="165" width="0.1" height="15.0" fill="rgb(239,215,19)" rx="2" ry="2" />
<text  x="821.95" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, true&gt;::_M_incr (9 samples, 0.11%)</title><rect x="1184.4" y="613" width="1.3" height="15.0" fill="rgb(239,128,50)" rx="2" ry="2" />
<text  x="1187.39" y="623.5" ></text>
</g>
<g >
<title>tcache_put (1 samples, 0.01%)</title><rect x="857.8" y="341" width="0.1" height="15.0" fill="rgb(213,65,50)" rx="2" ry="2" />
<text  x="860.78" y="351.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (11 samples, 0.13%)</title><rect x="996.0" y="549" width="1.5" height="15.0" fill="rgb(241,144,9)" rx="2" ry="2" />
<text  x="999.00" y="559.5" ></text>
</g>
<g >
<title>task_ctx_sched_out (2 samples, 0.02%)</title><rect x="32.8" y="629" width="0.3" height="15.0" fill="rgb(237,55,2)" rx="2" ry="2" />
<text  x="35.85" y="639.5" ></text>
</g>
<g >
<title>tcache_put (1 samples, 0.01%)</title><rect x="667.7" y="277" width="0.1" height="15.0" fill="rgb(231,136,54)" rx="2" ry="2" />
<text  x="670.70" y="287.5" ></text>
</g>
<g >
<title>create_bits_image_internal (200 samples, 2.38%)</title><rect x="793.2" y="293" width="28.0" height="15.0" fill="rgb(206,219,20)" rx="2" ry="2" />
<text  x="796.16" y="303.5" >c..</text>
</g>
<g >
<title>SDL_GetTicks_REAL (2 samples, 0.02%)</title><rect x="1001.0" y="581" width="0.3" height="15.0" fill="rgb(239,171,9)" rx="2" ry="2" />
<text  x="1004.04" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::size (1 samples, 0.01%)</title><rect x="881.1" y="501" width="0.1" height="15.0" fill="rgb(233,82,5)" rx="2" ry="2" />
<text  x="884.05" y="511.5" ></text>
</g>
<g >
<title>AdjustShowParams (3 samples, 0.04%)</title><rect x="592.0" y="565" width="0.4" height="15.0" fill="rgb(209,116,49)" rx="2" ry="2" />
<text  x="595.01" y="575.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="375.0" y="389" width="0.2" height="15.0" fill="rgb(225,61,17)" rx="2" ry="2" />
<text  x="378.02" y="399.5" ></text>
</g>
<g >
<title>Sprite::SetTone (1 samples, 0.01%)</title><rect x="835.9" y="469" width="0.2" height="15.0" fill="rgb(231,31,41)" rx="2" ry="2" />
<text  x="838.92" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate@plt (1 samples, 0.01%)</title><rect x="366.6" y="581" width="0.1" height="15.0" fill="rgb(241,227,35)" rx="2" ry="2" />
<text  x="369.61" y="591.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="818.7" y="213" width="0.1" height="15.0" fill="rgb(249,96,32)" rx="2" ry="2" />
<text  x="821.67" y="223.5" ></text>
</g>
<g >
<title>AsyncHandler::IsFilePending (178 samples, 2.11%)</title><rect x="126.9" y="661" width="25.0" height="15.0" fill="rgb(254,5,12)" rx="2" ry="2" />
<text  x="129.91" y="671.5" >A..</text>
</g>
<g >
<title>_pixman_bits_image_setup_accessors (2 samples, 0.02%)</title><rect x="161.8" y="533" width="0.3" height="15.0" fill="rgb(207,159,47)" rx="2" ry="2" />
<text  x="164.81" y="543.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="339.6" y="533" width="0.2" height="15.0" fill="rgb(236,202,36)" rx="2" ry="2" />
<text  x="342.55" y="543.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (6 samples, 0.07%)</title><rect x="902.9" y="501" width="0.9" height="15.0" fill="rgb(228,12,54)" rx="2" ry="2" />
<text  x="905.92" y="511.5" ></text>
</g>
<g >
<title>Bitmap::Blit (1 samples, 0.01%)</title><rect x="63.4" y="773" width="0.1" height="15.0" fill="rgb(221,162,13)" rx="2" ry="2" />
<text  x="66.41" y="783.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="819.0" y="229" width="0.1" height="15.0" fill="rgb(237,199,41)" rx="2" ry="2" />
<text  x="821.95" y="239.5" ></text>
</g>
<g >
<title>Bitmap::GetWidth (2 samples, 0.02%)</title><rect x="825.7" y="469" width="0.3" height="15.0" fill="rgb(237,145,16)" rx="2" ry="2" />
<text  x="828.68" y="479.5" ></text>
</g>
<g >
<title>read_tsc (4 samples, 0.05%)</title><rect x="400.0" y="549" width="0.5" height="15.0" fill="rgb(252,61,25)" rx="2" ry="2" />
<text  x="402.97" y="559.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (68 samples, 0.81%)</title><rect x="35.4" y="565" width="9.5" height="15.0" fill="rgb(223,155,40)" rx="2" ry="2" />
<text  x="38.37" y="575.5" ></text>
</g>
<g >
<title>SdlMixerAudio::Update (2 samples, 0.02%)</title><rect x="1176.0" y="645" width="0.3" height="15.0" fill="rgb(243,10,27)" rx="2" ry="2" />
<text  x="1178.98" y="655.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (7 samples, 0.08%)</title><rect x="855.3" y="389" width="0.9" height="15.0" fill="rgb(229,114,15)" rx="2" ry="2" />
<text  x="858.26" y="399.5" ></text>
</g>
<g >
<title>std::_Temporary_buffer&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable*&gt;::~_Temporary_buffer (1 samples, 0.01%)</title><rect x="357.2" y="597" width="0.2" height="15.0" fill="rgb(211,198,35)" rx="2" ry="2" />
<text  x="360.22" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;short, short, std::_Identity&lt;short&gt;, std::less&lt;short&gt;, std::allocator&lt;short&gt; &gt;::find (2 samples, 0.02%)</title><rect x="354.1" y="597" width="0.3" height="15.0" fill="rgb(226,196,35)" rx="2" ry="2" />
<text  x="357.13" y="607.5" ></text>
</g>
<g >
<title>operator() (1 samples, 0.01%)</title><rect x="993.2" y="613" width="0.1" height="15.0" fill="rgb(221,12,0)" rx="2" ry="2" />
<text  x="996.19" y="623.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (51 samples, 0.61%)</title><rect x="651.9" y="341" width="7.1" height="15.0" fill="rgb(230,35,33)" rx="2" ry="2" />
<text  x="654.87" y="351.5" ></text>
</g>
<g >
<title>_XEventsQueued (11 samples, 0.13%)</title><rect x="996.0" y="565" width="1.5" height="15.0" fill="rgb(240,217,47)" rx="2" ry="2" />
<text  x="999.00" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.07%)</title><rect x="996.1" y="453" width="0.9" height="15.0" fill="rgb(249,14,1)" rx="2" ry="2" />
<text  x="999.14" y="463.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::ctype&lt;char&gt; &gt;@plt (2 samples, 0.02%)</title><rect x="902.9" y="469" width="0.3" height="15.0" fill="rgb(209,99,42)" rx="2" ry="2" />
<text  x="905.92" y="479.5" ></text>
</g>
<g >
<title>Bitmap::Blit (1 samples, 0.01%)</title><rect x="353.4" y="597" width="0.2" height="15.0" fill="rgb(207,96,48)" rx="2" ry="2" />
<text  x="356.43" y="607.5" ></text>
</g>
<g >
<title>Bitmap::initialize_formats (1 samples, 0.01%)</title><rect x="821.6" y="293" width="0.2" height="15.0" fill="rgb(248,198,25)" rx="2" ry="2" />
<text  x="824.62" y="303.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="918.2" y="549" width="0.1" height="15.0" fill="rgb(228,154,22)" rx="2" ry="2" />
<text  x="921.20" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (10 samples, 0.12%)</title><rect x="634.9" y="373" width="1.4" height="15.0" fill="rgb(235,85,26)" rx="2" ry="2" />
<text  x="637.90" y="383.5" ></text>
</g>
<g >
<title>[libGLdispatch.so.0.0.0] (3 samples, 0.04%)</title><rect x="84.9" y="789" width="0.4" height="15.0" fill="rgb(213,4,41)" rx="2" ry="2" />
<text  x="87.85" y="799.5" ></text>
</g>
<g >
<title>unpack_128_2x128 (43 samples, 0.51%)</title><rect x="783.3" y="389" width="6.1" height="15.0" fill="rgb(214,16,53)" rx="2" ry="2" />
<text  x="786.35" y="399.5" ></text>
</g>
<g >
<title>Color::Color (2 samples, 0.02%)</title><rect x="118.5" y="773" width="0.3" height="15.0" fill="rgb(221,213,6)" rx="2" ry="2" />
<text  x="121.50" y="783.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="244.9" y="261" width="0.2" height="15.0" fill="rgb(243,217,10)" rx="2" ry="2" />
<text  x="247.93" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (9 samples, 0.11%)</title><rect x="660.4" y="341" width="1.3" height="15.0" fill="rgb(239,66,23)" rx="2" ry="2" />
<text  x="663.42" y="351.5" ></text>
</g>
<g >
<title>find (145 samples, 1.72%)</title><rect x="641.4" y="437" width="20.3" height="15.0" fill="rgb(225,171,48)" rx="2" ry="2" />
<text  x="644.35" y="447.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (4 samples, 0.05%)</title><rect x="350.2" y="533" width="0.6" height="15.0" fill="rgb(241,56,50)" rx="2" ry="2" />
<text  x="353.21" y="543.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1185.5" y="597" width="0.2" height="15.0" fill="rgb(233,60,11)" rx="2" ry="2" />
<text  x="1188.51" y="607.5" ></text>
</g>
<g >
<title>std::replace&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, char&gt; (1 samples, 0.01%)</title><rect x="993.5" y="485" width="0.1" height="15.0" fill="rgb(250,69,24)" rx="2" ry="2" />
<text  x="996.47" y="495.5" ></text>
</g>
<g >
<title>tick_sched_handle (2 samples, 0.02%)</title><rect x="25.7" y="709" width="0.3" height="15.0" fill="rgb(247,129,46)" rx="2" ry="2" />
<text  x="28.70" y="719.5" ></text>
</g>
<g >
<title>is_zero (1 samples, 0.01%)</title><rect x="334.1" y="501" width="0.1" height="15.0" fill="rgb(224,101,46)" rx="2" ry="2" />
<text  x="337.09" y="511.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="44.9" y="629" width="0.1" height="15.0" fill="rgb(245,7,54)" rx="2" ry="2" />
<text  x="47.90" y="639.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="722.9" y="293" width="0.2" height="15.0" fill="rgb(238,86,25)" rx="2" ry="2" />
<text  x="725.93" y="303.5" ></text>
</g>
<g >
<title>pixman_region32_fini (1 samples, 0.01%)</title><rect x="873.8" y="325" width="0.1" height="15.0" fill="rgb(230,115,25)" rx="2" ry="2" />
<text  x="876.76" y="335.5" ></text>
</g>
<g >
<title>std::get_temporary_buffer&lt;Drawable*&gt; (1 samples, 0.01%)</title><rect x="154.5" y="581" width="0.2" height="15.0" fill="rgb(227,2,40)" rx="2" ry="2" />
<text  x="157.52" y="591.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (1 samples, 0.01%)</title><rect x="1189.2" y="613" width="0.1" height="15.0" fill="rgb(236,209,9)" rx="2" ry="2" />
<text  x="1192.16" y="623.5" ></text>
</g>
<g >
<title>Game_Player::UpdateScroll (2 samples, 0.02%)</title><rect x="966.0" y="613" width="0.3" height="15.0" fill="rgb(220,150,35)" rx="2" ry="2" />
<text  x="969.00" y="623.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (1 samples, 0.01%)</title><rect x="918.2" y="469" width="0.1" height="15.0" fill="rgb(231,105,45)" rx="2" ry="2" />
<text  x="921.20" y="479.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="44.9" y="405" width="0.1" height="15.0" fill="rgb(209,203,18)" rx="2" ry="2" />
<text  x="47.90" y="415.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="895.4" y="501" width="0.2" height="15.0" fill="rgb(208,131,47)" rx="2" ry="2" />
<text  x="898.35" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (3 samples, 0.04%)</title><rect x="667.6" y="309" width="0.4" height="15.0" fill="rgb(235,85,32)" rx="2" ry="2" />
<text  x="670.56" y="319.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (21 samples, 0.25%)</title><rect x="664.3" y="405" width="3.0" height="15.0" fill="rgb(234,49,22)" rx="2" ry="2" />
<text  x="667.34" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (4 samples, 0.05%)</title><rect x="666.7" y="293" width="0.6" height="15.0" fill="rgb(213,69,4)" rx="2" ry="2" />
<text  x="669.72" y="303.5" ></text>
</g>
<g >
<title>Game_Screen::GetTone (16 samples, 0.19%)</title><rect x="827.6" y="469" width="2.3" height="15.0" fill="rgb(250,32,41)" rx="2" ry="2" />
<text  x="830.65" y="479.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="276.2" y="437" width="0.1" height="15.0" fill="rgb(218,23,8)" rx="2" ry="2" />
<text  x="279.19" y="447.5" ></text>
</g>
<g >
<title>_int_free (7 samples, 0.08%)</title><rect x="618.8" y="437" width="1.0" height="15.0" fill="rgb(216,141,44)" rx="2" ry="2" />
<text  x="621.78" y="447.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="569.9" y="485" width="0.1" height="15.0" fill="rgb(219,116,48)" rx="2" ry="2" />
<text  x="572.86" y="495.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="747.7" y="229" width="0.2" height="15.0" fill="rgb(253,85,41)" rx="2" ry="2" />
<text  x="750.75" y="239.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="899.3" y="453" width="0.1" height="15.0" fill="rgb(219,158,7)" rx="2" ry="2" />
<text  x="902.28" y="463.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="862.4" y="245" width="0.1" height="15.0" fill="rgb(254,169,41)" rx="2" ry="2" />
<text  x="865.41" y="255.5" ></text>
</g>
<g >
<title>_XSend (1 samples, 0.01%)</title><rect x="995.4" y="533" width="0.2" height="15.0" fill="rgb(245,146,24)" rx="2" ry="2" />
<text  x="998.44" y="543.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="660.3" y="277" width="0.1" height="15.0" fill="rgb(240,73,51)" rx="2" ry="2" />
<text  x="663.28" y="287.5" ></text>
</g>
<g >
<title>LINUX_JoystickDetect (2 samples, 0.02%)</title><rect x="994.7" y="597" width="0.3" height="15.0" fill="rgb(232,94,12)" rx="2" ry="2" />
<text  x="997.74" y="607.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1 samples, 0.01%)</title><rect x="63.0" y="773" width="0.1" height="15.0" fill="rgb(238,142,31)" rx="2" ry="2" />
<text  x="65.99" y="783.5" ></text>
</g>
<g >
<title>pixman_image_get_width (2 samples, 0.02%)</title><rect x="850.1" y="469" width="0.3" height="15.0" fill="rgb(224,78,5)" rx="2" ry="2" />
<text  x="853.07" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (10 samples, 0.12%)</title><rect x="899.4" y="533" width="1.4" height="15.0" fill="rgb(254,96,16)" rx="2" ry="2" />
<text  x="902.42" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (16 samples, 0.19%)</title><rect x="625.7" y="373" width="2.2" height="15.0" fill="rgb(246,107,22)" rx="2" ry="2" />
<text  x="628.65" y="383.5" ></text>
</g>
<g >
<title>_pixman_image_allocate (3 samples, 0.04%)</title><rect x="820.8" y="277" width="0.4" height="15.0" fill="rgb(252,35,20)" rx="2" ry="2" />
<text  x="823.78" y="287.5" ></text>
</g>
<g >
<title>Sprite::GetZ (1 samples, 0.01%)</title><rect x="361.7" y="501" width="0.1" height="15.0" fill="rgb(228,131,28)" rx="2" ry="2" />
<text  x="364.70" y="511.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.01%)</title><rect x="627.3" y="325" width="0.2" height="15.0" fill="rgb(240,184,52)" rx="2" ry="2" />
<text  x="630.33" y="335.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="849.0" y="405" width="0.1" height="15.0" fill="rgb(229,73,29)" rx="2" ry="2" />
<text  x="851.95" y="415.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.01%)</title><rect x="49.5" y="533" width="0.2" height="15.0" fill="rgb(215,176,37)" rx="2" ry="2" />
<text  x="52.53" y="543.5" ></text>
</g>
<g >
<title>deactivate_task (2 samples, 0.02%)</title><rect x="368.1" y="517" width="0.3" height="15.0" fill="rgb(229,183,18)" rx="2" ry="2" />
<text  x="371.15" y="527.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (1 samples, 0.01%)</title><rect x="471.2" y="549" width="0.1" height="15.0" fill="rgb(248,66,22)" rx="2" ry="2" />
<text  x="474.18" y="559.5" ></text>
</g>
<g >
<title>Tone::Tone (1 samples, 0.01%)</title><rect x="893.7" y="533" width="0.1" height="15.0" fill="rgb(239,205,35)" rx="2" ry="2" />
<text  x="896.67" y="543.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (24 samples, 0.29%)</title><rect x="895.8" y="517" width="3.3" height="15.0" fill="rgb(240,71,50)" rx="2" ry="2" />
<text  x="898.77" y="527.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="401.9" y="533" width="0.2" height="15.0" fill="rgb(247,144,28)" rx="2" ry="2" />
<text  x="404.93" y="543.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="747.6" y="293" width="0.1" height="15.0" fill="rgb(227,141,20)" rx="2" ry="2" />
<text  x="750.61" y="303.5" ></text>
</g>
<g >
<title>pixman_image_composite32 (945 samples, 11.23%)</title><rect x="160.0" y="565" width="132.5" height="15.0" fill="rgb(245,206,53)" rx="2" ry="2" />
<text  x="162.99" y="575.5" >pixman_image_com..</text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.01%)</title><rect x="731.6" y="293" width="0.2" height="15.0" fill="rgb(246,189,50)" rx="2" ry="2" />
<text  x="734.63" y="303.5" ></text>
</g>
<g >
<title>analyze_extent (3 samples, 0.04%)</title><rect x="686.8" y="437" width="0.4" height="15.0" fill="rgb(232,215,15)" rx="2" ry="2" />
<text  x="689.77" y="447.5" ></text>
</g>
<g >
<title>SDL_GetTicks_REAL (2 samples, 0.02%)</title><rect x="995.2" y="597" width="0.2" height="15.0" fill="rgb(246,149,35)" rx="2" ry="2" />
<text  x="998.16" y="607.5" ></text>
</g>
<g >
<title>std::min&lt;int&gt; (13 samples, 0.15%)</title><rect x="563.8" y="549" width="1.9" height="15.0" fill="rgb(217,199,10)" rx="2" ry="2" />
<text  x="566.83" y="559.5" ></text>
</g>
<g >
<title>_mm_shufflehi_epi16 (4 samples, 0.05%)</title><rect x="722.5" y="373" width="0.6" height="15.0" fill="rgb(208,188,1)" rx="2" ry="2" />
<text  x="725.51" y="383.5" ></text>
</g>
<g >
<title>pixman_image_get_data@plt (1 samples, 0.01%)</title><rect x="790.8" y="421" width="0.1" height="15.0" fill="rgb(254,202,8)" rx="2" ry="2" />
<text  x="793.78" y="431.5" ></text>
</g>
<g >
<title>__GI___poll (2 samples, 0.02%)</title><rect x="1000.5" y="501" width="0.3" height="15.0" fill="rgb(218,8,9)" rx="2" ry="2" />
<text  x="1003.48" y="511.5" ></text>
</g>
<g >
<title>schedule (52 samples, 0.62%)</title><rect x="368.0" y="549" width="7.3" height="15.0" fill="rgb(244,32,41)" rx="2" ry="2" />
<text  x="371.01" y="559.5" ></text>
</g>
<g >
<title>perf_pending_event (1 samples, 0.01%)</title><rect x="374.9" y="437" width="0.1" height="15.0" fill="rgb(214,174,21)" rx="2" ry="2" />
<text  x="377.88" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate (6 samples, 0.07%)</title><rect x="824.7" y="357" width="0.8" height="15.0" fill="rgb(226,21,17)" rx="2" ry="2" />
<text  x="827.70" y="367.5" ></text>
</g>
<g >
<title>pixman_image_create_solid_fill (7 samples, 0.08%)</title><rect x="338.0" y="549" width="1.0" height="15.0" fill="rgb(219,103,12)" rx="2" ry="2" />
<text  x="341.01" y="559.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (7 samples, 0.08%)</title><rect x="636.7" y="293" width="1.0" height="15.0" fill="rgb(241,178,45)" rx="2" ry="2" />
<text  x="639.73" y="303.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.01%)</title><rect x="1002.0" y="181" width="0.2" height="15.0" fill="rgb(235,81,10)" rx="2" ry="2" />
<text  x="1005.02" y="191.5" ></text>
</g>
<g >
<title>std::__merge_sort_loop&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (14 samples, 0.17%)</title><rect x="363.8" y="565" width="2.0" height="15.0" fill="rgb(228,22,10)" rx="2" ry="2" />
<text  x="366.80" y="575.5" ></text>
</g>
<g >
<title>Scene::IsAsyncPending (179 samples, 2.13%)</title><rect x="126.9" y="693" width="25.1" height="15.0" fill="rgb(209,81,6)" rx="2" ry="2" />
<text  x="129.91" y="703.5" >S..</text>
</g>
<g >
<title>unlink_chunk (1 samples, 0.01%)</title><rect x="873.5" y="309" width="0.1" height="15.0" fill="rgb(237,213,22)" rx="2" ry="2" />
<text  x="876.48" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="365.6" y="469" width="0.2" height="15.0" fill="rgb(206,54,54)" rx="2" ry="2" />
<text  x="368.63" y="479.5" ></text>
</g>
<g >
<title>pthread_self (1 samples, 0.01%)</title><rect x="83.3" y="773" width="0.2" height="15.0" fill="rgb(242,81,17)" rx="2" ry="2" />
<text  x="86.31" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (51 samples, 0.61%)</title><rect x="651.9" y="325" width="7.1" height="15.0" fill="rgb(248,27,12)" rx="2" ry="2" />
<text  x="654.87" y="335.5" ></text>
</g>
<g >
<title>security_file_permission (4 samples, 0.05%)</title><rect x="47.8" y="693" width="0.6" height="15.0" fill="rgb(226,151,52)" rx="2" ry="2" />
<text  x="50.85" y="703.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="1184.3" y="597" width="0.1" height="15.0" fill="rgb(236,16,35)" rx="2" ry="2" />
<text  x="1187.25" y="607.5" ></text>
</g>
<g >
<title>_mm_adds_epu16 (1 samples, 0.01%)</title><rect x="333.7" y="453" width="0.1" height="15.0" fill="rgb(208,48,41)" rx="2" ry="2" />
<text  x="336.67" y="463.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="949.3" y="581" width="0.2" height="15.0" fill="rgb(250,83,38)" rx="2" ry="2" />
<text  x="952.32" y="591.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.01%)</title><rect x="122.0" y="773" width="0.1" height="15.0" fill="rgb(243,128,1)" rx="2" ry="2" />
<text  x="125.00" y="783.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="374.7" y="421" width="0.2" height="15.0" fill="rgb(245,79,26)" rx="2" ry="2" />
<text  x="377.74" y="431.5" ></text>
</g>
<g >
<title>std::locale::locale (1 samples, 0.01%)</title><rect x="366.7" y="613" width="0.2" height="15.0" fill="rgb(223,154,35)" rx="2" ry="2" />
<text  x="369.75" y="623.5" ></text>
</g>
<g >
<title>over_2x128 (61 samples, 0.72%)</title><rect x="773.5" y="389" width="8.6" height="15.0" fill="rgb(246,75,35)" rx="2" ry="2" />
<text  x="776.54" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (29 samples, 0.34%)</title><rect x="624.7" y="405" width="4.0" height="15.0" fill="rgb(238,218,6)" rx="2" ry="2" />
<text  x="627.67" y="415.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.01%)</title><rect x="1189.2" y="693" width="0.1" height="15.0" fill="rgb(225,74,25)" rx="2" ry="2" />
<text  x="1192.16" y="703.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::swap (1 samples, 0.01%)</title><rect x="895.6" y="533" width="0.2" height="15.0" fill="rgb(238,184,5)" rx="2" ry="2" />
<text  x="898.63" y="543.5" ></text>
</g>
<g >
<title>Game_Map::GetDisplayX (1 samples, 0.01%)</title><rect x="53.5" y="773" width="0.1" height="15.0" fill="rgb(216,81,46)" rx="2" ry="2" />
<text  x="56.45" y="783.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (4 samples, 0.05%)</title><rect x="602.9" y="421" width="0.6" height="15.0" fill="rgb(225,76,53)" rx="2" ry="2" />
<text  x="605.94" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (8 samples, 0.10%)</title><rect x="628.7" y="373" width="1.2" height="15.0" fill="rgb(210,84,16)" rx="2" ry="2" />
<text  x="631.74" y="383.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (9 samples, 0.11%)</title><rect x="876.7" y="453" width="1.3" height="15.0" fill="rgb(241,20,11)" rx="2" ry="2" />
<text  x="879.71" y="463.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (1 samples, 0.01%)</title><rect x="1189.2" y="597" width="0.1" height="15.0" fill="rgb(250,32,30)" rx="2" ry="2" />
<text  x="1192.16" y="607.5" ></text>
</g>
<g >
<title>_M_invoke (1 samples, 0.01%)</title><rect x="878.2" y="501" width="0.2" height="15.0" fill="rgb(206,167,42)" rx="2" ry="2" />
<text  x="881.25" y="511.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count (11 samples, 0.13%)</title><rect x="661.7" y="405" width="1.5" height="15.0" fill="rgb(206,186,15)" rx="2" ry="2" />
<text  x="664.68" y="415.5" ></text>
</g>
<g >
<title>update_cfs_group (1 samples, 0.01%)</title><rect x="33.1" y="597" width="0.2" height="15.0" fill="rgb(254,201,27)" rx="2" ry="2" />
<text  x="36.13" y="607.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="1002.3" y="485" width="0.1" height="15.0" fill="rgb(249,228,6)" rx="2" ry="2" />
<text  x="1005.30" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::size (16 samples, 0.19%)</title><rect x="960.0" y="581" width="2.2" height="15.0" fill="rgb(229,194,16)" rx="2" ry="2" />
<text  x="962.97" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (6 samples, 0.07%)</title><rect x="603.8" y="485" width="0.8" height="15.0" fill="rgb(205,23,34)" rx="2" ry="2" />
<text  x="606.78" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (8 samples, 0.10%)</title><rect x="663.2" y="389" width="1.1" height="15.0" fill="rgb(229,112,46)" rx="2" ry="2" />
<text  x="666.22" y="399.5" ></text>
</g>
<g >
<title>_mm_loadu_si128 (15 samples, 0.18%)</title><rect x="252.4" y="517" width="2.1" height="15.0" fill="rgb(212,179,34)" rx="2" ry="2" />
<text  x="255.36" y="527.5" ></text>
</g>
<g >
<title>AsyncHandler::IsImportantFilePending (60 samples, 0.71%)</title><rect x="1177.2" y="661" width="8.5" height="15.0" fill="rgb(230,126,54)" rx="2" ry="2" />
<text  x="1180.24" y="671.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (7 samples, 0.08%)</title><rect x="349.1" y="549" width="1.0" height="15.0" fill="rgb(222,136,3)" rx="2" ry="2" />
<text  x="352.09" y="559.5" ></text>
</g>
<g >
<title>pack_2x128_128 (1 samples, 0.01%)</title><rect x="782.1" y="389" width="0.1" height="15.0" fill="rgb(235,180,53)" rx="2" ry="2" />
<text  x="785.09" y="399.5" ></text>
</g>
<g >
<title>pixman_image_get_width (1 samples, 0.01%)</title><rect x="994.0" y="517" width="0.2" height="15.0" fill="rgb(245,29,15)" rx="2" ry="2" />
<text  x="997.03" y="527.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (93 samples, 1.10%)</title><rect x="32.4" y="693" width="13.1" height="15.0" fill="rgb(233,40,42)" rx="2" ry="2" />
<text  x="35.43" y="703.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (55 samples, 0.65%)</title><rect x="367.6" y="629" width="7.7" height="15.0" fill="rgb(226,124,13)" rx="2" ry="2" />
<text  x="370.59" y="639.5" ></text>
</g>
<g >
<title>Blend (5 samples, 0.06%)</title><rect x="978.9" y="581" width="0.7" height="15.0" fill="rgb(235,124,8)" rx="2" ry="2" />
<text  x="981.90" y="591.5" ></text>
</g>
<g >
<title>operator() (4 samples, 0.05%)</title><rect x="353.6" y="613" width="0.5" height="15.0" fill="rgb(254,34,36)" rx="2" ry="2" />
<text  x="356.57" y="623.5" ></text>
</g>
<g >
<title>pixman_region32_init (1 samples, 0.01%)</title><rect x="62.1" y="773" width="0.2" height="15.0" fill="rgb(235,167,2)" rx="2" ry="2" />
<text  x="65.15" y="783.5" ></text>
</g>
<g >
<title>_pixman_image_fini (2 samples, 0.02%)</title><rect x="340.7" y="533" width="0.3" height="15.0" fill="rgb(252,67,6)" rx="2" ry="2" />
<text  x="343.67" y="543.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (7 samples, 0.08%)</title><rect x="349.1" y="581" width="1.0" height="15.0" fill="rgb(232,113,45)" rx="2" ry="2" />
<text  x="352.09" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::operator bool (2 samples, 0.02%)</title><rect x="126.6" y="693" width="0.3" height="15.0" fill="rgb(207,151,11)" rx="2" ry="2" />
<text  x="129.63" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_compare (1 samples, 0.01%)</title><rect x="659.3" y="309" width="0.1" height="15.0" fill="rgb(227,98,28)" rx="2" ry="2" />
<text  x="662.29" y="319.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6 samples, 0.07%)</title><rect x="636.9" y="277" width="0.8" height="15.0" fill="rgb(210,54,5)" rx="2" ry="2" />
<text  x="639.87" y="287.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (1 samples, 0.01%)</title><rect x="881.1" y="517" width="0.1" height="15.0" fill="rgb(250,64,38)" rx="2" ry="2" />
<text  x="884.05" y="527.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="731.5" y="293" width="0.1" height="15.0" fill="rgb(215,25,22)" rx="2" ry="2" />
<text  x="734.48" y="303.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (1 samples, 0.01%)</title><rect x="1189.2" y="645" width="0.1" height="15.0" fill="rgb(206,87,7)" rx="2" ry="2" />
<text  x="1192.16" y="655.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (22 samples, 0.26%)</title><rect x="593.4" y="549" width="3.1" height="15.0" fill="rgb(238,229,46)" rx="2" ry="2" />
<text  x="596.41" y="559.5" ></text>
</g>
<g >
<title>sse2_composite_over_8888_n_8888 (315 samples, 3.74%)</title><rect x="216.5" y="549" width="44.1" height="15.0" fill="rgb(230,129,16)" rx="2" ry="2" />
<text  x="219.48" y="559.5" >sse2..</text>
</g>
<g >
<title>Game_Interpreter::GetFrame (5 samples, 0.06%)</title><rect x="943.2" y="565" width="0.7" height="15.0" fill="rgb(242,154,4)" rx="2" ry="2" />
<text  x="946.15" y="575.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="374.7" y="389" width="0.2" height="15.0" fill="rgb(225,210,22)" rx="2" ry="2" />
<text  x="377.74" y="399.5" ></text>
</g>
<g >
<title>Rect::Rect (3 samples, 0.04%)</title><rect x="346.3" y="597" width="0.4" height="15.0" fill="rgb(208,20,27)" rx="2" ry="2" />
<text  x="349.28" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (10 samples, 0.12%)</title><rect x="899.4" y="549" width="1.4" height="15.0" fill="rgb(231,147,27)" rx="2" ry="2" />
<text  x="902.42" y="559.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="341.1" y="565" width="0.1" height="15.0" fill="rgb(233,150,51)" rx="2" ry="2" />
<text  x="344.10" y="575.5" ></text>
</g>
<g >
<title>Sprite::Flash (1 samples, 0.01%)</title><rect x="68.6" y="773" width="0.1" height="15.0" fill="rgb(207,119,33)" rx="2" ry="2" />
<text  x="71.59" y="783.5" ></text>
</g>
<g >
<title>SDL_GetTicks_REAL (1 samples, 0.01%)</title><rect x="366.5" y="645" width="0.1" height="15.0" fill="rgb(210,68,38)" rx="2" ry="2" />
<text  x="369.47" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.01%)</title><rect x="667.3" y="373" width="0.1" height="15.0" fill="rgb(243,74,53)" rx="2" ry="2" />
<text  x="670.28" y="383.5" ></text>
</g>
<g >
<title>add_wait_queue (1 samples, 0.01%)</title><rect x="45.7" y="677" width="0.2" height="15.0" fill="rgb(249,133,44)" rx="2" ry="2" />
<text  x="48.74" y="687.5" ></text>
</g>
<g >
<title>generic_update_time (1 samples, 0.01%)</title><rect x="50.2" y="645" width="0.2" height="15.0" fill="rgb(220,159,3)" rx="2" ry="2" />
<text  x="53.23" y="655.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (2 samples, 0.02%)</title><rect x="887.8" y="517" width="0.3" height="15.0" fill="rgb(243,138,13)" rx="2" ry="2" />
<text  x="890.78" y="527.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.01%)</title><rect x="71.8" y="773" width="0.2" height="15.0" fill="rgb(246,167,14)" rx="2" ry="2" />
<text  x="74.82" y="783.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.01%)</title><rect x="747.9" y="357" width="0.1" height="15.0" fill="rgb(223,146,8)" rx="2" ry="2" />
<text  x="750.89" y="367.5" ></text>
</g>
<g >
<title>Bitmap::height (1 samples, 0.01%)</title><rect x="345.7" y="581" width="0.2" height="15.0" fill="rgb(246,15,22)" rx="2" ry="2" />
<text  x="348.72" y="591.5" ></text>
</g>
<g >
<title>irq_work_interrupt (1 samples, 0.01%)</title><rect x="374.9" y="501" width="0.1" height="15.0" fill="rgb(211,214,9)" rx="2" ry="2" />
<text  x="377.88" y="511.5" ></text>
</g>
<g >
<title>save_128_aligned (8 samples, 0.10%)</title><rect x="782.2" y="389" width="1.1" height="15.0" fill="rgb(237,132,11)" rx="2" ry="2" />
<text  x="785.23" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.05%)</title><rect x="1001.7" y="421" width="0.6" height="15.0" fill="rgb(240,112,5)" rx="2" ry="2" />
<text  x="1004.74" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::_Tuple_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, bool&amp;, void&gt; (29 samples, 0.34%)</title><rect x="663.2" y="421" width="4.1" height="15.0" fill="rgb(211,15,47)" rx="2" ry="2" />
<text  x="666.22" y="431.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="849.0" y="389" width="0.1" height="15.0" fill="rgb(238,18,18)" rx="2" ry="2" />
<text  x="851.95" y="399.5" ></text>
</g>
<g >
<title>Window_Message::Update (6 samples, 0.07%)</title><rect x="993.3" y="629" width="0.9" height="15.0" fill="rgb(212,41,52)" rx="2" ry="2" />
<text  x="996.33" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (22 samples, 0.26%)</title><rect x="612.1" y="437" width="3.0" height="15.0" fill="rgb(210,50,4)" rx="2" ry="2" />
<text  x="615.06" y="447.5" ></text>
</g>
<g >
<title>Game_Screen::GetFlashColor (5 samples, 0.06%)</title><rect x="826.9" y="469" width="0.7" height="15.0" fill="rgb(240,186,38)" rx="2" ry="2" />
<text  x="829.94" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;short, short, std::_Identity&lt;short&gt;, std::less&lt;short&gt;, std::allocator&lt;short&gt; &gt;::_M_lower_bound (2 samples, 0.02%)</title><rect x="354.1" y="581" width="0.3" height="15.0" fill="rgb(250,89,27)" rx="2" ry="2" />
<text  x="357.13" y="591.5" ></text>
</g>
<g >
<title>pixman_transform_point (3 samples, 0.04%)</title><rect x="124.9" y="773" width="0.5" height="15.0" fill="rgb(252,197,2)" rx="2" ry="2" />
<text  x="127.94" y="783.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (34 samples, 0.40%)</title><rect x="610.4" y="453" width="4.7" height="15.0" fill="rgb(207,11,3)" rx="2" ry="2" />
<text  x="613.37" y="463.5" ></text>
</g>
<g >
<title>SDL_UDEV_Poll (2 samples, 0.02%)</title><rect x="1000.5" y="565" width="0.3" height="15.0" fill="rgb(232,120,22)" rx="2" ry="2" />
<text  x="1003.48" y="575.5" ></text>
</g>
<g >
<title>usb_hcd_get_frame_number (1 samples, 0.01%)</title><rect x="273.1" y="165" width="0.2" height="15.0" fill="rgb(229,107,32)" rx="2" ry="2" />
<text  x="276.11" y="175.5" ></text>
</g>
<g >
<title>load_128_unaligned (1 samples, 0.01%)</title><rect x="353.4" y="517" width="0.2" height="15.0" fill="rgb(206,30,2)" rx="2" ry="2" />
<text  x="356.43" y="527.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="44.9" y="437" width="0.1" height="15.0" fill="rgb(214,14,46)" rx="2" ry="2" />
<text  x="47.90" y="447.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (10 samples, 0.12%)</title><rect x="874.0" y="389" width="1.4" height="15.0" fill="rgb(212,38,32)" rx="2" ry="2" />
<text  x="877.04" y="399.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.01%)</title><rect x="367.0" y="597" width="0.2" height="15.0" fill="rgb(225,199,5)" rx="2" ry="2" />
<text  x="370.03" y="607.5" ></text>
</g>
<g >
<title>deactivate_task (10 samples, 0.12%)</title><rect x="33.1" y="645" width="1.4" height="15.0" fill="rgb(239,226,45)" rx="2" ry="2" />
<text  x="36.13" y="655.5" ></text>
</g>
<g >
<title>Game_Screen::Update (192 samples, 2.28%)</title><rect x="966.3" y="629" width="26.9" height="15.0" fill="rgb(232,209,40)" rx="2" ry="2" />
<text  x="969.28" y="639.5" >G..</text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 0ul, 3ul&gt;::__less (1 samples, 0.01%)</title><rect x="993.6" y="437" width="0.2" height="15.0" fill="rgb(236,84,34)" rx="2" ry="2" />
<text  x="996.61" y="447.5" ></text>
</g>
<g >
<title>MakeFlashColor (1 samples, 0.01%)</title><rect x="981.4" y="565" width="0.2" height="15.0" fill="rgb(250,193,39)" rx="2" ry="2" />
<text  x="984.42" y="575.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.01%)</title><rect x="993.8" y="469" width="0.1" height="15.0" fill="rgb(218,120,53)" rx="2" ry="2" />
<text  x="996.75" y="479.5" ></text>
</g>
<g >
<title>Opacity::Opacity (2 samples, 0.02%)</title><rect x="341.7" y="597" width="0.2" height="15.0" fill="rgb(254,90,42)" rx="2" ry="2" />
<text  x="344.66" y="607.5" ></text>
</g>
<g >
<title>record_times (2 samples, 0.02%)</title><rect x="34.3" y="613" width="0.2" height="15.0" fill="rgb(240,216,18)" rx="2" ry="2" />
<text  x="37.25" y="623.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="538.0" y="437" width="0.2" height="15.0" fill="rgb(239,155,15)" rx="2" ry="2" />
<text  x="541.04" y="447.5" ></text>
</g>
<g >
<title>compute_image_info (6 samples, 0.07%)</title><rect x="162.1" y="533" width="0.8" height="15.0" fill="rgb(231,198,15)" rx="2" ry="2" />
<text  x="165.09" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::operator[] (9 samples, 0.11%)</title><rect x="943.9" y="565" width="1.2" height="15.0" fill="rgb(250,86,0)" rx="2" ry="2" />
<text  x="946.85" y="575.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandMovePicture (18 samples, 0.21%)</title><rect x="581.4" y="581" width="2.5" height="15.0" fill="rgb(251,139,1)" rx="2" ry="2" />
<text  x="584.36" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, unsigned long, true&gt;::_S_equals (8 samples, 0.10%)</title><rect x="636.6" y="341" width="1.1" height="15.0" fill="rgb(253,196,23)" rx="2" ry="2" />
<text  x="639.59" y="351.5" ></text>
</g>
<g >
<title>_start (7,562 samples, 89.83%)</title><rect x="126.5" y="789" width="1060.0" height="15.0" fill="rgb(251,83,49)" rx="2" ry="2" />
<text  x="129.49" y="799.5" >_start</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (10 samples, 0.12%)</title><rect x="636.3" y="389" width="1.4" height="15.0" fill="rgb(206,55,27)" rx="2" ry="2" />
<text  x="639.31" y="399.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.01%)</title><rect x="31.6" y="725" width="0.1" height="15.0" fill="rgb(253,51,44)" rx="2" ry="2" />
<text  x="34.59" y="735.5" ></text>
</g>
<g >
<title>in_over_1x128 (2 samples, 0.02%)</title><rect x="224.9" y="533" width="0.3" height="15.0" fill="rgb(211,71,50)" rx="2" ry="2" />
<text  x="227.89" y="543.5" ></text>
</g>
<g >
<title>[easyrpg-player] (1 samples, 0.01%)</title><rect x="78.0" y="789" width="0.1" height="15.0" fill="rgb(238,3,29)" rx="2" ry="2" />
<text  x="80.99" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (5 samples, 0.06%)</title><rect x="663.6" y="341" width="0.7" height="15.0" fill="rgb(237,42,24)" rx="2" ry="2" />
<text  x="666.64" y="351.5" ></text>
</g>
<g >
<title>sock_wfree (1 samples, 0.01%)</title><rect x="1002.0" y="245" width="0.2" height="15.0" fill="rgb(241,121,49)" rx="2" ry="2" />
<text  x="1005.02" y="255.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="232.5" y="389" width="0.1" height="15.0" fill="rgb(234,132,48)" rx="2" ry="2" />
<text  x="235.46" y="399.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4 samples, 0.05%)</title><rect x="659.7" y="293" width="0.6" height="15.0" fill="rgb(223,114,42)" rx="2" ry="2" />
<text  x="662.71" y="303.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (2 samples, 0.02%)</title><rect x="997.3" y="517" width="0.2" height="15.0" fill="rgb(207,172,13)" rx="2" ry="2" />
<text  x="1000.26" y="527.5" ></text>
</g>
<g >
<title>Bitmap::ZoomOpacityBlit (345 samples, 4.10%)</title><rect x="292.9" y="581" width="48.3" height="15.0" fill="rgb(205,27,23)" rx="2" ry="2" />
<text  x="295.87" y="591.5" >Bitm..</text>
</g>
<g >
<title>tcache_put (1 samples, 0.01%)</title><rect x="875.6" y="373" width="0.1" height="15.0" fill="rgb(229,197,26)" rx="2" ry="2" />
<text  x="878.59" y="383.5" ></text>
</g>
<g >
<title>[libX11.so.6.3.0] (6 samples, 0.07%)</title><rect x="1001.7" y="533" width="0.9" height="15.0" fill="rgb(216,38,39)" rx="2" ry="2" />
<text  x="1004.74" y="543.5" ></text>
</g>
<g >
<title>XFlush (11 samples, 0.13%)</title><rect x="996.0" y="581" width="1.5" height="15.0" fill="rgb(221,53,28)" rx="2" ry="2" />
<text  x="999.00" y="591.5" ></text>
</g>
<g >
<title>_XEventsQueued (6 samples, 0.07%)</title><rect x="1001.7" y="549" width="0.9" height="15.0" fill="rgb(205,182,11)" rx="2" ry="2" />
<text  x="1004.74" y="559.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (22 samples, 0.26%)</title><rect x="79.4" y="757" width="3.1" height="15.0" fill="rgb(227,89,24)" rx="2" ry="2" />
<text  x="82.39" y="767.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.01%)</title><rect x="338.4" y="517" width="0.2" height="15.0" fill="rgb(250,219,40)" rx="2" ry="2" />
<text  x="341.43" y="527.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.01%)</title><rect x="375.0" y="261" width="0.2" height="15.0" fill="rgb(248,23,48)" rx="2" ry="2" />
<text  x="378.02" y="271.5" ></text>
</g>
<g >
<title>Game_Interpreter::Update (2 samples, 0.02%)</title><rect x="53.2" y="773" width="0.3" height="15.0" fill="rgb(211,55,47)" rx="2" ry="2" />
<text  x="56.17" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, true&gt;::_M_incr (39 samples, 0.46%)</title><rect x="146.4" y="629" width="5.5" height="15.0" fill="rgb(249,151,22)" rx="2" ry="2" />
<text  x="149.39" y="639.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.01%)</title><rect x="1002.2" y="341" width="0.1" height="15.0" fill="rgb(232,89,50)" rx="2" ry="2" />
<text  x="1005.16" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.04%)</title><rect x="82.9" y="741" width="0.4" height="15.0" fill="rgb(217,196,12)" rx="2" ry="2" />
<text  x="85.89" y="751.5" ></text>
</g>
<g >
<title>Utils::EncodeUTF (1 samples, 0.01%)</title><rect x="901.9" y="549" width="0.2" height="15.0" fill="rgb(246,26,7)" rx="2" ry="2" />
<text  x="904.94" y="559.5" ></text>
</g>
<g >
<title>sse2_combine_over_u (1 samples, 0.01%)</title><rect x="353.4" y="549" width="0.2" height="15.0" fill="rgb(212,184,38)" rx="2" ry="2" />
<text  x="356.43" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::EventCommand, std::allocator&lt;RPG::EventCommand&gt; &gt;::size (72 samples, 0.86%)</title><rect x="949.5" y="581" width="10.1" height="15.0" fill="rgb(222,121,31)" rx="2" ry="2" />
<text  x="952.46" y="591.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (71 samples, 0.84%)</title><rect x="35.0" y="629" width="9.9" height="15.0" fill="rgb(216,113,49)" rx="2" ry="2" />
<text  x="37.95" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (21 samples, 0.25%)</title><rect x="997.5" y="565" width="3.0" height="15.0" fill="rgb(229,112,53)" rx="2" ry="2" />
<text  x="1000.54" y="575.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (7 samples, 0.08%)</title><rect x="636.7" y="309" width="1.0" height="15.0" fill="rgb(254,107,30)" rx="2" ry="2" />
<text  x="639.73" y="319.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="862.4" y="309" width="0.1" height="15.0" fill="rgb(226,211,43)" rx="2" ry="2" />
<text  x="865.41" y="319.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.02%)</title><rect x="747.5" y="357" width="0.2" height="15.0" fill="rgb(208,128,50)" rx="2" ry="2" />
<text  x="750.46" y="367.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (1 samples, 0.01%)</title><rect x="998.1" y="389" width="0.1" height="15.0" fill="rgb(215,18,6)" rx="2" ry="2" />
<text  x="1001.10" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (4 samples, 0.05%)</title><rect x="996.4" y="421" width="0.6" height="15.0" fill="rgb(252,9,10)" rx="2" ry="2" />
<text  x="999.42" y="431.5" ></text>
</g>
<g >
<title>Bitmap::Clear (11 samples, 0.13%)</title><rect x="789.9" y="469" width="1.6" height="15.0" fill="rgb(211,136,54)" rx="2" ry="2" />
<text  x="792.94" y="479.5" ></text>
</g>
<g >
<title>GetRandomUnsigned (1 samples, 0.01%)</title><rect x="569.4" y="549" width="0.2" height="15.0" fill="rgb(212,197,51)" rx="2" ry="2" />
<text  x="572.44" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (17 samples, 0.20%)</title><rect x="637.7" y="389" width="2.4" height="15.0" fill="rgb(228,24,7)" rx="2" ry="2" />
<text  x="640.71" y="399.5" ></text>
</g>
<g >
<title>Sprite::SetY (1 samples, 0.01%)</title><rect x="984.1" y="581" width="0.1" height="15.0" fill="rgb(232,96,8)" rx="2" ry="2" />
<text  x="987.08" y="591.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="949.3" y="565" width="0.2" height="15.0" fill="rgb(207,136,37)" rx="2" ry="2" />
<text  x="952.32" y="575.5" ></text>
</g>
<g >
<title>std::map&lt;int, pixman_format_code_t, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, pixman_format_code_t&gt; &gt; &gt;::lower_bound (18 samples, 0.21%)</title><rect x="822.0" y="277" width="2.6" height="15.0" fill="rgb(253,83,14)" rx="2" ry="2" />
<text  x="825.04" y="287.5" ></text>
</g>
<g >
<title>[libGLX.so.0.0.0] (1 samples, 0.01%)</title><rect x="1176.8" y="581" width="0.2" height="15.0" fill="rgb(246,17,1)" rx="2" ry="2" />
<text  x="1179.82" y="591.5" ></text>
</g>
<g >
<title>snd_usb_handle_sync_urb (1 samples, 0.01%)</title><rect x="375.0" y="245" width="0.2" height="15.0" fill="rgb(208,116,43)" rx="2" ry="2" />
<text  x="378.02" y="255.5" ></text>
</g>
<g >
<title>xhci_urb_enqueue (1 samples, 0.01%)</title><rect x="244.9" y="197" width="0.2" height="15.0" fill="rgb(212,73,42)" rx="2" ry="2" />
<text  x="247.93" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (2 samples, 0.02%)</title><rect x="600.0" y="485" width="0.3" height="15.0" fill="rgb(224,67,27)" rx="2" ry="2" />
<text  x="603.00" y="495.5" ></text>
</g>
<g >
<title>_mm_mulhi_epu16 (21 samples, 0.25%)</title><rect x="232.6" y="485" width="2.9" height="15.0" fill="rgb(244,199,42)" rx="2" ry="2" />
<text  x="235.60" y="495.5" ></text>
</g>
<g >
<title>_mm_mulhi_epu16 (1 samples, 0.01%)</title><rect x="225.0" y="501" width="0.2" height="15.0" fill="rgb(246,130,36)" rx="2" ry="2" />
<text  x="228.03" y="511.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (55 samples, 0.65%)</title><rect x="1168.1" y="565" width="7.7" height="15.0" fill="rgb(239,30,23)" rx="2" ry="2" />
<text  x="1171.13" y="575.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="58.8" y="773" width="0.1" height="15.0" fill="rgb(217,145,53)" rx="2" ry="2" />
<text  x="61.78" y="783.5" ></text>
</g>
<g >
<title>_mm_store_si128 (7 samples, 0.08%)</title><rect x="214.9" y="485" width="1.0" height="15.0" fill="rgb(227,226,26)" rx="2" ry="2" />
<text  x="217.94" y="495.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.01%)</title><rect x="873.6" y="325" width="0.2" height="15.0" fill="rgb(254,43,19)" rx="2" ry="2" />
<text  x="876.62" y="335.5" ></text>
</g>
<g >
<title>Graphics::LocalDraw (1,507 samples, 17.90%)</title><rect x="155.1" y="645" width="211.2" height="15.0" fill="rgb(228,101,42)" rx="2" ry="2" />
<text  x="158.08" y="655.5" >Graphics::LocalDraw</text>
</g>
<g >
<title>std::__chunk_insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (26 samples, 0.31%)</title><rect x="358.8" y="565" width="3.6" height="15.0" fill="rgb(217,169,40)" rx="2" ry="2" />
<text  x="361.76" y="575.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="1166.0" y="453" width="0.2" height="15.0" fill="rgb(238,188,28)" rx="2" ry="2" />
<text  x="1169.03" y="463.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="117.9" y="693" width="0.2" height="15.0" fill="rgb(241,156,13)" rx="2" ry="2" />
<text  x="120.94" y="703.5" ></text>
</g>
<g >
<title>snd_complete_urb (1 samples, 0.01%)</title><rect x="747.7" y="117" width="0.2" height="15.0" fill="rgb(226,4,20)" rx="2" ry="2" />
<text  x="750.75" y="127.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="1000.8" y="549" width="0.1" height="15.0" fill="rgb(249,225,22)" rx="2" ry="2" />
<text  x="1003.76" y="559.5" ></text>
</g>
<g >
<title>_mm_cvtsi32_si128 (3 samples, 0.04%)</title><rect x="336.9" y="485" width="0.4" height="15.0" fill="rgb(252,219,27)" rx="2" ry="2" />
<text  x="339.89" y="495.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="44.9" y="549" width="0.1" height="15.0" fill="rgb(230,22,30)" rx="2" ry="2" />
<text  x="47.90" y="559.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="595.2" y="469" width="0.2" height="15.0" fill="rgb(250,170,23)" rx="2" ry="2" />
<text  x="598.23" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (2 samples, 0.02%)</title><rect x="75.9" y="773" width="0.3" height="15.0" fill="rgb(240,75,46)" rx="2" ry="2" />
<text  x="78.88" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (1 samples, 0.01%)</title><rect x="582.1" y="533" width="0.1" height="15.0" fill="rgb(249,6,48)" rx="2" ry="2" />
<text  x="585.06" y="543.5" ></text>
</g>
<g >
<title>Bitmap::GetRect (10 samples, 0.12%)</title><rect x="852.6" y="469" width="1.4" height="15.0" fill="rgb(224,68,39)" rx="2" ry="2" />
<text  x="855.60" y="479.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.01%)</title><rect x="626.6" y="357" width="0.2" height="15.0" fill="rgb(211,167,25)" rx="2" ry="2" />
<text  x="629.63" y="367.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="244.9" y="277" width="0.2" height="15.0" fill="rgb(244,219,38)" rx="2" ry="2" />
<text  x="247.93" y="287.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="273.1" y="245" width="0.2" height="15.0" fill="rgb(241,80,30)" rx="2" ry="2" />
<text  x="276.11" y="255.5" ></text>
</g>
<g >
<title>ret_from_intr (6 samples, 0.07%)</title><rect x="1166.7" y="565" width="0.9" height="15.0" fill="rgb(215,200,51)" rx="2" ry="2" />
<text  x="1169.73" y="575.5" ></text>
</g>
<g >
<title>pixman_image_composite32@plt (1 samples, 0.01%)</title><rect x="789.8" y="453" width="0.1" height="15.0" fill="rgb(230,222,54)" rx="2" ry="2" />
<text  x="792.80" y="463.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.01%)</title><rect x="876.0" y="389" width="0.1" height="15.0" fill="rgb(209,187,39)" rx="2" ry="2" />
<text  x="879.01" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (10 samples, 0.12%)</title><rect x="899.4" y="501" width="1.4" height="15.0" fill="rgb(247,153,34)" rx="2" ry="2" />
<text  x="902.42" y="511.5" ></text>
</g>
<g >
<title>_mm_adds_epu8 (1 samples, 0.01%)</title><rect x="224.9" y="501" width="0.1" height="15.0" fill="rgb(252,227,18)" rx="2" ry="2" />
<text  x="227.89" y="511.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (3 samples, 0.04%)</title><rect x="669.0" y="341" width="0.4" height="15.0" fill="rgb(215,48,42)" rx="2" ry="2" />
<text  x="671.97" y="351.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator() (22 samples, 0.26%)</title><rect x="612.1" y="405" width="3.0" height="15.0" fill="rgb(224,93,25)" rx="2" ry="2" />
<text  x="615.06" y="415.5" ></text>
</g>
<g >
<title>Sprite::SetWaverPhase (4 samples, 0.05%)</title><rect x="836.3" y="469" width="0.6" height="15.0" fill="rgb(207,204,39)" rx="2" ry="2" />
<text  x="839.34" y="479.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipToNextConditional (1 samples, 0.01%)</title><rect x="65.1" y="773" width="0.1" height="15.0" fill="rgb(248,150,21)" rx="2" ry="2" />
<text  x="68.09" y="783.5" ></text>
</g>
<g >
<title>put_timespec64 (1 samples, 0.01%)</title><rect x="30.2" y="741" width="0.1" height="15.0" fill="rgb(242,141,52)" rx="2" ry="2" />
<text  x="33.19" y="751.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="825.1" y="309" width="0.3" height="15.0" fill="rgb(245,147,33)" rx="2" ry="2" />
<text  x="828.12" y="319.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="401.9" y="565" width="0.2" height="15.0" fill="rgb(233,194,25)" rx="2" ry="2" />
<text  x="404.93" y="575.5" ></text>
</g>
<g >
<title>SDL_GetTicks_REAL (233 samples, 2.77%)</title><rect x="375.7" y="661" width="32.7" height="15.0" fill="rgb(248,19,8)" rx="2" ry="2" />
<text  x="378.72" y="671.5" >SD..</text>
</g>
<g >
<title>__exchange_and_add (2 samples, 0.02%)</title><rect x="834.7" y="357" width="0.2" height="15.0" fill="rgb(249,80,37)" rx="2" ry="2" />
<text  x="837.65" y="367.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4 samples, 0.05%)</title><rect x="661.0" y="309" width="0.5" height="15.0" fill="rgb(208,224,40)" rx="2" ry="2" />
<text  x="663.98" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_poll (2 samples, 0.02%)</title><rect x="994.7" y="469" width="0.3" height="15.0" fill="rgb(246,210,27)" rx="2" ry="2" />
<text  x="997.74" y="479.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr (11 samples, 0.13%)</title><rect x="661.7" y="421" width="1.5" height="15.0" fill="rgb(249,40,0)" rx="2" ry="2" />
<text  x="664.68" y="431.5" ></text>
</g>
<g >
<title>Sprite::Draw (6 samples, 0.07%)</title><rect x="350.8" y="629" width="0.8" height="15.0" fill="rgb(253,62,33)" rx="2" ry="2" />
<text  x="353.77" y="639.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="563.7" y="485" width="0.1" height="15.0" fill="rgb(246,186,22)" rx="2" ry="2" />
<text  x="566.69" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (3 samples, 0.04%)</title><rect x="669.0" y="389" width="0.4" height="15.0" fill="rgb(217,162,25)" rx="2" ry="2" />
<text  x="671.97" y="399.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (2 samples, 0.02%)</title><rect x="879.8" y="517" width="0.3" height="15.0" fill="rgb(221,194,53)" rx="2" ry="2" />
<text  x="882.79" y="527.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="538.0" y="485" width="0.2" height="15.0" fill="rgb(246,167,40)" rx="2" ry="2" />
<text  x="541.04" y="495.5" ></text>
</g>
<g >
<title>_mm_xor_si128 (2 samples, 0.02%)</title><rect x="333.4" y="453" width="0.3" height="15.0" fill="rgb(231,166,41)" rx="2" ry="2" />
<text  x="336.39" y="463.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="1184.3" y="533" width="0.1" height="15.0" fill="rgb(217,198,51)" rx="2" ry="2" />
<text  x="1187.25" y="543.5" ></text>
</g>
<g >
<title>deactivate_task (1 samples, 0.01%)</title><rect x="998.1" y="469" width="0.1" height="15.0" fill="rgb(233,14,38)" rx="2" ry="2" />
<text  x="1001.10" y="479.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (5 samples, 0.06%)</title><rect x="46.6" y="677" width="0.7" height="15.0" fill="rgb(235,141,2)" rx="2" ry="2" />
<text  x="49.59" y="687.5" ></text>
</g>
<g >
<title>std::__distance&lt;char*&gt; (1 samples, 0.01%)</title><rect x="604.3" y="405" width="0.2" height="15.0" fill="rgb(211,76,2)" rx="2" ry="2" />
<text  x="607.35" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (5 samples, 0.06%)</title><rect x="603.8" y="437" width="0.7" height="15.0" fill="rgb(218,165,49)" rx="2" ry="2" />
<text  x="606.78" y="447.5" ></text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (1 samples, 0.01%)</title><rect x="118.8" y="773" width="0.1" height="15.0" fill="rgb(210,92,8)" rx="2" ry="2" />
<text  x="121.78" y="783.5" ></text>
</g>
<g >
<title>MakeFlashColor (2 samples, 0.02%)</title><rect x="890.0" y="517" width="0.3" height="15.0" fill="rgb(244,170,44)" rx="2" ry="2" />
<text  x="893.02" y="527.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="1185.5" y="549" width="0.2" height="15.0" fill="rgb(242,225,41)" rx="2" ry="2" />
<text  x="1188.51" y="559.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.01%)</title><rect x="906.3" y="485" width="0.1" height="15.0" fill="rgb(240,30,52)" rx="2" ry="2" />
<text  x="909.28" y="495.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.01%)</title><rect x="538.0" y="389" width="0.2" height="15.0" fill="rgb(228,18,31)" rx="2" ry="2" />
<text  x="541.04" y="399.5" ></text>
</g>
<g >
<title>is_zero (127 samples, 1.51%)</title><rect x="733.4" y="389" width="17.8" height="15.0" fill="rgb(229,21,7)" rx="2" ry="2" />
<text  x="736.45" y="399.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (2 samples, 0.02%)</title><rect x="995.2" y="565" width="0.2" height="15.0" fill="rgb(252,189,54)" rx="2" ry="2" />
<text  x="998.16" y="575.5" ></text>
</g>
<g >
<title>pixman_image_get_height@plt (1 samples, 0.01%)</title><rect x="790.6" y="421" width="0.2" height="15.0" fill="rgb(235,20,50)" rx="2" ry="2" />
<text  x="793.64" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="82.8" y="757" width="0.1" height="15.0" fill="rgb(229,118,31)" rx="2" ry="2" />
<text  x="85.75" y="767.5" ></text>
</g>
<g >
<title>expand_alpha_2x128 (8 samples, 0.10%)</title><rect x="722.5" y="389" width="1.1" height="15.0" fill="rgb(222,94,9)" rx="2" ry="2" />
<text  x="725.51" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.06%)</title><rect x="602.0" y="437" width="0.7" height="15.0" fill="rgb(213,118,45)" rx="2" ry="2" />
<text  x="604.96" y="447.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.01%)</title><rect x="33.0" y="581" width="0.1" height="15.0" fill="rgb(205,186,37)" rx="2" ry="2" />
<text  x="35.99" y="591.5" ></text>
</g>
<g >
<title>is_opaque (17 samples, 0.20%)</title><rect x="184.9" y="501" width="2.4" height="15.0" fill="rgb(247,222,35)" rx="2" ry="2" />
<text  x="187.94" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.01%)</title><rect x="879.7" y="533" width="0.1" height="15.0" fill="rgb(223,108,24)" rx="2" ry="2" />
<text  x="882.65" y="543.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="117.9" y="645" width="0.2" height="15.0" fill="rgb(223,45,32)" rx="2" ry="2" />
<text  x="120.94" y="655.5" ></text>
</g>
<g >
<title>_int_free (6 samples, 0.07%)</title><rect x="899.7" y="469" width="0.8" height="15.0" fill="rgb(249,17,24)" rx="2" ry="2" />
<text  x="902.70" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (5 samples, 0.06%)</title><rect x="456.0" y="517" width="0.7" height="15.0" fill="rgb(244,71,18)" rx="2" ry="2" />
<text  x="459.04" y="527.5" ></text>
</g>
<g >
<title>update_curr (2 samples, 0.02%)</title><rect x="33.3" y="597" width="0.2" height="15.0" fill="rgb(210,94,3)" rx="2" ry="2" />
<text  x="36.27" y="607.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="276.2" y="373" width="0.1" height="15.0" fill="rgb(247,113,19)" rx="2" ry="2" />
<text  x="279.19" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (4 samples, 0.05%)</title><rect x="666.7" y="277" width="0.6" height="15.0" fill="rgb(213,17,37)" rx="2" ry="2" />
<text  x="669.72" y="287.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.01%)</title><rect x="50.4" y="709" width="0.1" height="15.0" fill="rgb(220,71,48)" rx="2" ry="2" />
<text  x="53.37" y="719.5" ></text>
</g>
<g >
<title>pick_next_task_fair (2 samples, 0.02%)</title><rect x="83.0" y="661" width="0.3" height="15.0" fill="rgb(206,208,9)" rx="2" ry="2" />
<text  x="86.03" y="671.5" ></text>
</g>
<g >
<title>XGetWindowProperty (1 samples, 0.01%)</title><rect x="995.4" y="565" width="0.2" height="15.0" fill="rgb(246,83,23)" rx="2" ry="2" />
<text  x="998.44" y="575.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (40 samples, 0.48%)</title><rect x="634.5" y="405" width="5.6" height="15.0" fill="rgb(212,36,2)" rx="2" ry="2" />
<text  x="637.48" y="415.5" ></text>
</g>
<g >
<title>pixman_image_get_height (1 samples, 0.01%)</title><rect x="61.3" y="773" width="0.1" height="15.0" fill="rgb(206,220,34)" rx="2" ry="2" />
<text  x="64.30" y="783.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="341.1" y="501" width="0.1" height="15.0" fill="rgb(207,14,52)" rx="2" ry="2" />
<text  x="344.10" y="511.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (1 samples, 0.01%)</title><rect x="1165.9" y="501" width="0.1" height="15.0" fill="rgb(234,68,38)" rx="2" ry="2" />
<text  x="1168.89" y="511.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="660.3" y="245" width="0.1" height="15.0" fill="rgb(213,129,31)" rx="2" ry="2" />
<text  x="663.28" y="255.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (5 samples, 0.06%)</title><rect x="350.1" y="581" width="0.7" height="15.0" fill="rgb(231,154,31)" rx="2" ry="2" />
<text  x="353.07" y="591.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (45 samples, 0.53%)</title><rect x="368.4" y="485" width="6.3" height="15.0" fill="rgb(226,41,37)" rx="2" ry="2" />
<text  x="371.43" y="495.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.01%)</title><rect x="667.6" y="293" width="0.1" height="15.0" fill="rgb(208,181,33)" rx="2" ry="2" />
<text  x="670.56" y="303.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="456.9" y="549" width="0.1" height="15.0" fill="rgb(247,192,18)" rx="2" ry="2" />
<text  x="459.88" y="559.5" ></text>
</g>
<g >
<title>Game_Character::GetSpriteX (1 samples, 0.01%)</title><rect x="964.6" y="613" width="0.1" height="15.0" fill="rgb(226,62,45)" rx="2" ry="2" />
<text  x="967.60" y="623.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (4 samples, 0.05%)</title><rect x="383.6" y="597" width="0.5" height="15.0" fill="rgb(207,195,14)" rx="2" ry="2" />
<text  x="386.57" y="607.5" ></text>
</g>
<g >
<title>Game_Screen::GetPicture (1 samples, 0.01%)</title><rect x="66.2" y="773" width="0.2" height="15.0" fill="rgb(230,12,25)" rx="2" ry="2" />
<text  x="69.21" y="783.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (3 samples, 0.04%)</title><rect x="902.5" y="533" width="0.4" height="15.0" fill="rgb(209,104,37)" rx="2" ry="2" />
<text  x="905.50" y="543.5" ></text>
</g>
<g >
<title>Game_Picture::SetNonEffectParams (7 samples, 0.08%)</title><rect x="880.1" y="549" width="1.0" height="15.0" fill="rgb(235,207,43)" rx="2" ry="2" />
<text  x="883.07" y="559.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (1 samples, 0.01%)</title><rect x="50.7" y="725" width="0.1" height="15.0" fill="rgb(227,205,0)" rx="2" ry="2" />
<text  x="53.65" y="735.5" ></text>
</g>
<g >
<title>is_opaque (70 samples, 0.83%)</title><rect x="723.6" y="389" width="9.8" height="15.0" fill="rgb(243,52,46)" rx="2" ry="2" />
<text  x="726.64" y="399.5" ></text>
</g>
<g >
<title>std::__unguarded_linear_insert&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Val_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (4 samples, 0.05%)</title><rect x="361.8" y="533" width="0.6" height="15.0" fill="rgb(248,97,49)" rx="2" ry="2" />
<text  x="364.84" y="543.5" ></text>
</g>
<g >
<title>Game_Map::UpdateProcessedFlags (2 samples, 0.02%)</title><rect x="964.3" y="613" width="0.3" height="15.0" fill="rgb(248,213,43)" rx="2" ry="2" />
<text  x="967.32" y="623.5" ></text>
</g>
<g >
<title>consume_skb (1 samples, 0.01%)</title><rect x="1002.0" y="309" width="0.2" height="15.0" fill="rgb(237,178,41)" rx="2" ry="2" />
<text  x="1005.02" y="319.5" ></text>
</g>
<g >
<title>Game_Player::UpdateSelfMovement (9 samples, 0.11%)</title><rect x="964.7" y="597" width="1.3" height="15.0" fill="rgb(236,147,50)" rx="2" ry="2" />
<text  x="967.74" y="607.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.01%)</title><rect x="857.1" y="357" width="0.1" height="15.0" fill="rgb(226,177,1)" rx="2" ry="2" />
<text  x="860.08" y="367.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="276.2" y="389" width="0.1" height="15.0" fill="rgb(214,91,40)" rx="2" ry="2" />
<text  x="279.19" y="399.5" ></text>
</g>
<g >
<title>__fget (1 samples, 0.01%)</title><rect x="1002.2" y="325" width="0.1" height="15.0" fill="rgb(223,217,7)" rx="2" ry="2" />
<text  x="1005.16" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (13 samples, 0.15%)</title><rect x="668.1" y="453" width="1.8" height="15.0" fill="rgb(223,17,51)" rx="2" ry="2" />
<text  x="671.13" y="463.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="375.0" y="325" width="0.2" height="15.0" fill="rgb(205,39,36)" rx="2" ry="2" />
<text  x="378.02" y="335.5" ></text>
</g>
<g >
<title>pixman_image_set_transform@plt (1 samples, 0.01%)</title><rect x="340.1" y="549" width="0.2" height="15.0" fill="rgb(248,214,24)" rx="2" ry="2" />
<text  x="343.11" y="559.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (3 samples, 0.04%)</title><rect x="81.8" y="613" width="0.4" height="15.0" fill="rgb(219,141,32)" rx="2" ry="2" />
<text  x="84.77" y="623.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.02%)</title><rect x="25.7" y="789" width="0.3" height="15.0" fill="rgb(241,79,2)" rx="2" ry="2" />
<text  x="28.70" y="799.5" ></text>
</g>
<g >
<title>sse2_composite_over_8888_8888 (728 samples, 8.65%)</title><rect x="687.3" y="437" width="102.1" height="15.0" fill="rgb(210,7,43)" rx="2" ry="2" />
<text  x="690.33" y="447.5" >sse2_composi..</text>
</g>
<g >
<title>timekeeping_advance (1 samples, 0.01%)</title><rect x="401.9" y="469" width="0.2" height="15.0" fill="rgb(206,128,20)" rx="2" ry="2" />
<text  x="404.93" y="479.5" ></text>
</g>
<g >
<title>std::mersenne_twister_engine&lt;unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul&gt;::_M_gen_rand (1 samples, 0.01%)</title><rect x="569.4" y="501" width="0.2" height="15.0" fill="rgb(227,151,7)" rx="2" ry="2" />
<text  x="572.44" y="511.5" ></text>
</g>
<g >
<title>update_load_avg (1 samples, 0.01%)</title><rect x="33.5" y="597" width="0.2" height="15.0" fill="rgb(210,11,29)" rx="2" ry="2" />
<text  x="36.55" y="607.5" ></text>
</g>
<g >
<title>xcb_poll_for_reply64 (2 samples, 0.02%)</title><rect x="997.3" y="533" width="0.2" height="15.0" fill="rgb(208,157,26)" rx="2" ry="2" />
<text  x="1000.26" y="543.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="569.7" y="517" width="0.2" height="15.0" fill="rgb(224,156,1)" rx="2" ry="2" />
<text  x="572.72" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (1 samples, 0.01%)</title><rect x="366.6" y="613" width="0.1" height="15.0" fill="rgb(209,95,2)" rx="2" ry="2" />
<text  x="369.61" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream (2 samples, 0.02%)</title><rect x="903.8" y="549" width="0.2" height="15.0" fill="rgb(234,132,17)" rx="2" ry="2" />
<text  x="906.76" y="559.5" ></text>
</g>
<g >
<title>is_zero (72 samples, 0.86%)</title><rect x="187.3" y="501" width="10.1" height="15.0" fill="rgb(217,49,16)" rx="2" ry="2" />
<text  x="190.32" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char32_t, std::char_traits&lt;char32_t&gt;, std::allocator&lt;char32_t&gt; &gt;::_M_mutate (1 samples, 0.01%)</title><rect x="76.4" y="773" width="0.2" height="15.0" fill="rgb(242,133,32)" rx="2" ry="2" />
<text  x="79.44" y="783.5" ></text>
</g>
<g >
<title>Game_Picture::HasSpritesheet (2 samples, 0.02%)</title><rect x="826.7" y="469" width="0.2" height="15.0" fill="rgb(232,222,53)" rx="2" ry="2" />
<text  x="829.66" y="479.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (4 samples, 0.05%)</title><rect x="350.2" y="565" width="0.6" height="15.0" fill="rgb(253,27,28)" rx="2" ry="2" />
<text  x="353.21" y="575.5" ></text>
</g>
<g >
<title>__sched_text_start (52 samples, 0.62%)</title><rect x="368.0" y="533" width="7.3" height="15.0" fill="rgb(235,221,11)" rx="2" ry="2" />
<text  x="371.01" y="543.5" ></text>
</g>
<g >
<title>record_times (1 samples, 0.01%)</title><rect x="49.5" y="549" width="0.2" height="15.0" fill="rgb(252,189,14)" rx="2" ry="2" />
<text  x="52.53" y="559.5" ></text>
</g>
<g >
<title>DynamicFormat::code_alpha (2 samples, 0.02%)</title><rect x="821.8" y="293" width="0.2" height="15.0" fill="rgb(232,219,20)" rx="2" ry="2" />
<text  x="824.76" y="303.5" ></text>
</g>
<g >
<title>std::function&lt;void (FileRequestResult*)&gt;::~function (2 samples, 0.02%)</title><rect x="879.8" y="533" width="0.3" height="15.0" fill="rgb(225,200,44)" rx="2" ry="2" />
<text  x="882.79" y="543.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="918.2" y="565" width="0.1" height="15.0" fill="rgb(246,1,53)" rx="2" ry="2" />
<text  x="921.20" y="575.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="117.9" y="725" width="0.2" height="15.0" fill="rgb(218,22,51)" rx="2" ry="2" />
<text  x="120.94" y="735.5" ></text>
</g>
<g >
<title>handle_tx_event (1 samples, 0.01%)</title><rect x="273.1" y="325" width="0.2" height="15.0" fill="rgb(222,209,4)" rx="2" ry="2" />
<text  x="276.11" y="335.5" ></text>
</g>
<g >
<title>LoadBitmap (190 samples, 2.26%)</title><rect x="641.4" y="453" width="26.6" height="15.0" fill="rgb(243,124,46)" rx="2" ry="2" />
<text  x="644.35" y="463.5" >L..</text>
</g>
<g >
<title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.01%)</title><rect x="902.5" y="501" width="0.1" height="15.0" fill="rgb(208,4,44)" rx="2" ry="2" />
<text  x="905.50" y="511.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.105 (69 samples, 0.82%)</title><rect x="35.2" y="613" width="9.7" height="15.0" fill="rgb(251,169,0)" rx="2" ry="2" />
<text  x="38.23" y="623.5" ></text>
</g>
<g >
<title>Bitmap::~Bitmap (123 samples, 1.46%)</title><rect x="856.7" y="389" width="17.2" height="15.0" fill="rgb(212,22,51)" rx="2" ry="2" />
<text  x="859.66" y="399.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (3 samples, 0.04%)</title><rect x="362.0" y="501" width="0.4" height="15.0" fill="rgb(206,45,7)" rx="2" ry="2" />
<text  x="364.98" y="511.5" ></text>
</g>
<g >
<title>do_nanosleep (1 samples, 0.01%)</title><rect x="1189.2" y="725" width="0.1" height="15.0" fill="rgb(217,41,49)" rx="2" ry="2" />
<text  x="1192.16" y="735.5" ></text>
</g>
<g >
<title>pix_multiply_2x128 (1 samples, 0.01%)</title><rect x="333.7" y="469" width="0.1" height="15.0" fill="rgb(205,12,45)" rx="2" ry="2" />
<text  x="336.67" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (138 samples, 1.64%)</title><rect x="383.1" y="613" width="19.4" height="15.0" fill="rgb(228,89,49)" rx="2" ry="2" />
<text  x="386.15" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.01%)</title><rect x="664.1" y="309" width="0.1" height="15.0" fill="rgb(217,104,51)" rx="2" ry="2" />
<text  x="667.06" y="319.5" ></text>
</g>
<g >
<title>Sprite::Flash (2 samples, 0.02%)</title><rect x="829.9" y="469" width="0.3" height="15.0" fill="rgb(217,170,45)" rx="2" ry="2" />
<text  x="832.89" y="479.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="374.7" y="469" width="0.2" height="15.0" fill="rgb(217,54,6)" rx="2" ry="2" />
<text  x="377.74" y="479.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.01%)</title><rect x="997.0" y="453" width="0.1" height="15.0" fill="rgb(224,186,36)" rx="2" ry="2" />
<text  x="999.98" y="463.5" ></text>
</g>
<g >
<title>intel_pmu_disable_all (1 samples, 0.01%)</title><rect x="32.8" y="565" width="0.2" height="15.0" fill="rgb(216,166,53)" rx="2" ry="2" />
<text  x="35.85" y="575.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.01%)</title><rect x="273.1" y="469" width="0.2" height="15.0" fill="rgb(233,30,39)" rx="2" ry="2" />
<text  x="276.11" y="479.5" ></text>
</g>
<g >
<title>Sprite::SetTone (1 samples, 0.01%)</title><rect x="983.5" y="581" width="0.2" height="15.0" fill="rgb(212,101,48)" rx="2" ry="2" />
<text  x="986.52" y="591.5" ></text>
</g>
<g >
<title>_mm_xor_si128 (8 samples, 0.10%)</title><rect x="229.5" y="485" width="1.1" height="15.0" fill="rgb(235,135,33)" rx="2" ry="2" />
<text  x="232.52" y="495.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="232.5" y="453" width="0.1" height="15.0" fill="rgb(237,173,31)" rx="2" ry="2" />
<text  x="235.46" y="463.5" ></text>
</g>
<g >
<title>pixman_image_get_height@plt (1 samples, 0.01%)</title><rect x="894.1" y="533" width="0.1" height="15.0" fill="rgb(228,92,23)" rx="2" ry="2" />
<text  x="897.09" y="543.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::operator= (5 samples, 0.06%)</title><rect x="850.5" y="469" width="0.7" height="15.0" fill="rgb(219,163,21)" rx="2" ry="2" />
<text  x="853.49" y="479.5" ></text>
</g>
<g >
<title>Bitmap::height (1 samples, 0.01%)</title><rect x="825.5" y="453" width="0.2" height="15.0" fill="rgb(212,128,18)" rx="2" ry="2" />
<text  x="828.54" y="463.5" ></text>
</g>
<g >
<title>account_user_time (1 samples, 0.01%)</title><rect x="565.5" y="405" width="0.2" height="15.0" fill="rgb(246,119,8)" rx="2" ry="2" />
<text  x="568.52" y="415.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="401.9" y="549" width="0.2" height="15.0" fill="rgb(236,191,6)" rx="2" ry="2" />
<text  x="404.93" y="559.5" ></text>
</g>
<g >
<title>tcache_put (1 samples, 0.01%)</title><rect x="640.9" y="341" width="0.2" height="15.0" fill="rgb(218,77,53)" rx="2" ry="2" />
<text  x="643.93" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_recvmsg (1 samples, 0.01%)</title><rect x="997.4" y="437" width="0.1" height="15.0" fill="rgb(223,5,42)" rx="2" ry="2" />
<text  x="1000.40" y="447.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (5 samples, 0.06%)</title><rect x="81.5" y="645" width="0.7" height="15.0" fill="rgb(240,33,14)" rx="2" ry="2" />
<text  x="84.49" y="655.5" ></text>
</g>
<g >
<title>Bitmap::GetWidth (25 samples, 0.30%)</title><rect x="975.4" y="581" width="3.5" height="15.0" fill="rgb(224,12,22)" rx="2" ry="2" />
<text  x="978.39" y="591.5" ></text>
</g>
<g >
<title>calloc@plt (3 samples, 0.04%)</title><rect x="820.4" y="245" width="0.4" height="15.0" fill="rgb(238,158,18)" rx="2" ry="2" />
<text  x="823.36" y="255.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (4 samples, 0.05%)</title><rect x="50.8" y="789" width="0.6" height="15.0" fill="rgb(225,94,21)" rx="2" ry="2" />
<text  x="53.79" y="799.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.01%)</title><rect x="900.5" y="469" width="0.2" height="15.0" fill="rgb(214,40,27)" rx="2" ry="2" />
<text  x="903.54" y="479.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="747.6" y="277" width="0.1" height="15.0" fill="rgb(224,140,13)" rx="2" ry="2" />
<text  x="750.61" y="287.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="72.0" y="773" width="0.1" height="15.0" fill="rgb(225,229,6)" rx="2" ry="2" />
<text  x="74.96" y="783.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="816.2" y="181" width="0.1" height="15.0" fill="rgb(220,25,32)" rx="2" ry="2" />
<text  x="819.15" y="191.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="819.0" y="213" width="0.1" height="15.0" fill="rgb(218,214,45)" rx="2" ry="2" />
<text  x="821.95" y="223.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (7 samples, 0.08%)</title><rect x="349.1" y="533" width="1.0" height="15.0" fill="rgb(231,31,46)" rx="2" ry="2" />
<text  x="352.09" y="543.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="273.1" y="277" width="0.2" height="15.0" fill="rgb(208,29,37)" rx="2" ry="2" />
<text  x="276.11" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.02%)</title><rect x="994.7" y="501" width="0.3" height="15.0" fill="rgb(213,173,49)" rx="2" ry="2" />
<text  x="997.74" y="511.5" ></text>
</g>
<g >
<title>_mm_adds_epu16 (1 samples, 0.01%)</title><rect x="318.9" y="453" width="0.2" height="15.0" fill="rgb(240,14,35)" rx="2" ry="2" />
<text  x="321.95" y="463.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (4 samples, 0.05%)</title><rect x="666.7" y="261" width="0.6" height="15.0" fill="rgb(252,168,18)" rx="2" ry="2" />
<text  x="669.72" y="271.5" ></text>
</g>
<g >
<title>SDL_JoystickUpdate_REAL (1 samples, 0.01%)</title><rect x="119.2" y="773" width="0.1" height="15.0" fill="rgb(251,75,9)" rx="2" ry="2" />
<text  x="122.20" y="783.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="569.7" y="485" width="0.2" height="15.0" fill="rgb(234,137,8)" rx="2" ry="2" />
<text  x="572.72" y="495.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::operator= (5 samples, 0.06%)</title><rect x="850.5" y="453" width="0.7" height="15.0" fill="rgb(245,145,20)" rx="2" ry="2" />
<text  x="853.49" y="463.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="565.5" y="453" width="0.2" height="15.0" fill="rgb(219,114,30)" rx="2" ry="2" />
<text  x="568.52" y="463.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.01%)</title><rect x="59.8" y="773" width="0.1" height="15.0" fill="rgb(248,169,51)" rx="2" ry="2" />
<text  x="62.76" y="783.5" ></text>
</g>
<g >
<title>X11_GetNetWMState (1 samples, 0.01%)</title><rect x="995.4" y="581" width="0.2" height="15.0" fill="rgb(231,178,15)" rx="2" ry="2" />
<text  x="998.44" y="591.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (45 samples, 0.53%)</title><rect x="368.4" y="437" width="6.3" height="15.0" fill="rgb(207,19,24)" rx="2" ry="2" />
<text  x="371.43" y="447.5" ></text>
</g>
<g >
<title>Transition::IsErased (2 samples, 0.02%)</title><rect x="878.7" y="517" width="0.2" height="15.0" fill="rgb(213,18,19)" rx="2" ry="2" />
<text  x="881.67" y="527.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.01%)</title><rect x="341.2" y="565" width="0.2" height="15.0" fill="rgb(233,95,6)" rx="2" ry="2" />
<text  x="344.24" y="575.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="660.3" y="213" width="0.1" height="15.0" fill="rgb(244,151,51)" rx="2" ry="2" />
<text  x="663.28" y="223.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (1 samples, 0.01%)</title><rect x="979.7" y="581" width="0.2" height="15.0" fill="rgb(245,172,22)" rx="2" ry="2" />
<text  x="982.74" y="591.5" ></text>
</g>
<g >
<title>Game_Interpreter::SkipToNextConditional (2 samples, 0.02%)</title><rect x="922.8" y="581" width="0.3" height="15.0" fill="rgb(227,86,35)" rx="2" ry="2" />
<text  x="925.82" y="591.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="456.9" y="469" width="0.1" height="15.0" fill="rgb(218,157,47)" rx="2" ry="2" />
<text  x="459.88" y="479.5" ></text>
</g>
<g >
<title>FpsOverlay::Draw (1 samples, 0.01%)</title><rect x="154.4" y="629" width="0.1" height="15.0" fill="rgb(219,48,31)" rx="2" ry="2" />
<text  x="157.38" y="639.5" ></text>
</g>
<g >
<title>compute_image_info (10 samples, 0.12%)</title><rect x="298.5" y="517" width="1.4" height="15.0" fill="rgb(213,149,34)" rx="2" ry="2" />
<text  x="301.48" y="527.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="276.2" y="405" width="0.1" height="15.0" fill="rgb(237,208,18)" rx="2" ry="2" />
<text  x="279.19" y="415.5" ></text>
</g>
<g >
<title>Player::IsRPG2k3 (2 samples, 0.02%)</title><rect x="118.9" y="773" width="0.3" height="15.0" fill="rgb(216,50,32)" rx="2" ry="2" />
<text  x="121.92" y="783.5" ></text>
</g>
<g >
<title>std::__move_merge_adaptive&lt;Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (10 samples, 0.12%)</title><rect x="357.4" y="565" width="1.4" height="15.0" fill="rgb(227,151,4)" rx="2" ry="2" />
<text  x="360.36" y="575.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (74 samples, 0.88%)</title><rect x="837.7" y="469" width="10.4" height="15.0" fill="rgb(239,199,1)" rx="2" ry="2" />
<text  x="840.74" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (7 samples, 0.08%)</title><rect x="595.4" y="533" width="1.0" height="15.0" fill="rgb(245,210,0)" rx="2" ry="2" />
<text  x="598.37" y="543.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::CommonEvent&gt; (4 samples, 0.05%)</title><rect x="965.4" y="549" width="0.6" height="15.0" fill="rgb(249,16,28)" rx="2" ry="2" />
<text  x="968.44" y="559.5" ></text>
</g>
<g >
<title>usb_hcd_giveback_urb (1 samples, 0.01%)</title><rect x="44.9" y="421" width="0.1" height="15.0" fill="rgb(219,182,50)" rx="2" ry="2" />
<text  x="47.90" y="431.5" ></text>
</g>
<g >
<title>compute_transformed_extents (3 samples, 0.04%)</title><rect x="72.8" y="773" width="0.4" height="15.0" fill="rgb(241,88,49)" rx="2" ry="2" />
<text  x="75.80" y="783.5" ></text>
</g>
<g >
<title>sse2_combine_over_u (715 samples, 8.49%)</title><rect x="689.2" y="421" width="100.2" height="15.0" fill="rgb(231,50,12)" rx="2" ry="2" />
<text  x="692.15" y="431.5" >sse2_combine..</text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::~shared_ptr (8 samples, 0.10%)</title><rect x="343.3" y="597" width="1.2" height="15.0" fill="rgb(230,6,43)" rx="2" ry="2" />
<text  x="346.34" y="607.5" ></text>
</g>
<g >
<title>Window::GetZ (1 samples, 0.01%)</title><rect x="365.5" y="501" width="0.1" height="15.0" fill="rgb(248,177,13)" rx="2" ry="2" />
<text  x="368.49" y="511.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="472.7" y="453" width="0.2" height="15.0" fill="rgb(241,228,10)" rx="2" ry="2" />
<text  x="475.72" y="463.5" ></text>
</g>
<g >
<title>handle_irq (1 samples, 0.01%)</title><rect x="244.9" y="453" width="0.2" height="15.0" fill="rgb(249,89,6)" rx="2" ry="2" />
<text  x="247.93" y="463.5" ></text>
</g>
<g >
<title>poll_freewait (1 samples, 0.01%)</title><rect x="32.3" y="725" width="0.1" height="15.0" fill="rgb(224,118,51)" rx="2" ry="2" />
<text  x="35.29" y="735.5" ></text>
</g>
<g >
<title>Sprite::GetWidth (1 samples, 0.01%)</title><rect x="351.5" y="597" width="0.1" height="15.0" fill="rgb(230,184,34)" rx="2" ry="2" />
<text  x="354.47" y="607.5" ></text>
</g>
<g >
<title>Sdl2Ui::ProcessEvents (57 samples, 0.68%)</title><rect x="994.6" y="661" width="8.0" height="15.0" fill="rgb(235,95,30)" rx="2" ry="2" />
<text  x="997.59" y="671.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (1 samples, 0.01%)</title><rect x="273.1" y="293" width="0.2" height="15.0" fill="rgb(244,43,37)" rx="2" ry="2" />
<text  x="276.11" y="303.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="1184.3" y="517" width="0.1" height="15.0" fill="rgb(205,78,16)" rx="2" ry="2" />
<text  x="1187.25" y="527.5" ></text>
</g>
<g >
<title>SDL_UnlockTexture_REAL (58 samples, 0.69%)</title><rect x="1167.7" y="597" width="8.1" height="15.0" fill="rgb(237,102,52)" rx="2" ry="2" />
<text  x="1170.71" y="607.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.01%)</title><rect x="731.6" y="325" width="0.2" height="15.0" fill="rgb(245,84,9)" rx="2" ry="2" />
<text  x="734.63" y="335.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="44.9" y="501" width="0.1" height="15.0" fill="rgb(209,102,49)" rx="2" ry="2" />
<text  x="47.90" y="511.5" ></text>
</g>
<g >
<title>_pixman_implementation_lookup_composite (11 samples, 0.13%)</title><rect x="685.2" y="437" width="1.6" height="15.0" fill="rgb(228,32,45)" rx="2" ry="2" />
<text  x="688.23" y="447.5" ></text>
</g>
<g >
<title>Scene_Map::DrawBackground (1 samples, 0.01%)</title><rect x="157.0" y="629" width="0.2" height="15.0" fill="rgb(212,175,41)" rx="2" ry="2" />
<text  x="160.04" y="639.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (4 samples, 0.05%)</title><rect x="667.4" y="405" width="0.6" height="15.0" fill="rgb(240,23,2)" rx="2" ry="2" />
<text  x="670.42" y="415.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.01%)</title><rect x="48.5" y="709" width="0.2" height="15.0" fill="rgb(208,175,35)" rx="2" ry="2" />
<text  x="51.55" y="719.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1 samples, 0.01%)</title><rect x="998.1" y="453" width="0.1" height="15.0" fill="rgb(238,110,31)" rx="2" ry="2" />
<text  x="1001.10" y="463.5" ></text>
</g>
<g >
<title>Sprite::SetZ (26 samples, 0.31%)</title><rect x="984.2" y="581" width="3.7" height="15.0" fill="rgb(251,149,12)" rx="2" ry="2" />
<text  x="987.22" y="591.5" ></text>
</g>
<g >
<title>SDL_LockMutex_REAL (1 samples, 0.01%)</title><rect x="1000.8" y="565" width="0.1" height="15.0" fill="rgb(208,1,2)" rx="2" ry="2" />
<text  x="1003.76" y="575.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Get (152 samples, 1.81%)</title><rect x="521.8" y="565" width="21.3" height="15.0" fill="rgb(228,104,52)" rx="2" ry="2" />
<text  x="524.78" y="575.5" >G..</text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="595.2" y="533" width="0.2" height="15.0" fill="rgb(236,57,50)" rx="2" ry="2" />
<text  x="598.23" y="543.5" ></text>
</g>
<g >
<title>std::mersenne_twister_engine&lt;unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul&gt;::operator() (1 samples, 0.01%)</title><rect x="569.4" y="517" width="0.2" height="15.0" fill="rgb(232,15,40)" rx="2" ry="2" />
<text  x="572.44" y="527.5" ></text>
</g>
<g >
<title>PicPointerPatch::ReplaceName (5 samples, 0.06%)</title><rect x="901.7" y="565" width="0.7" height="15.0" fill="rgb(251,16,20)" rx="2" ry="2" />
<text  x="904.66" y="575.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (2 samples, 0.02%)</title><rect x="358.8" y="549" width="0.2" height="15.0" fill="rgb(209,155,4)" rx="2" ry="2" />
<text  x="361.76" y="559.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count (8 samples, 0.10%)</title><rect x="343.3" y="565" width="1.2" height="15.0" fill="rgb(222,56,45)" rx="2" ry="2" />
<text  x="346.34" y="575.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="341.1" y="485" width="0.1" height="15.0" fill="rgb(234,67,27)" rx="2" ry="2" />
<text  x="344.10" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (13 samples, 0.15%)</title><rect x="669.9" y="437" width="1.9" height="15.0" fill="rgb(223,43,16)" rx="2" ry="2" />
<text  x="672.95" y="447.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (2 samples, 0.02%)</title><rect x="878.0" y="469" width="0.2" height="15.0" fill="rgb(229,113,24)" rx="2" ry="2" />
<text  x="880.97" y="479.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.01%)</title><rect x="902.5" y="485" width="0.1" height="15.0" fill="rgb(253,162,11)" rx="2" ry="2" />
<text  x="905.50" y="495.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (9 samples, 0.11%)</title><rect x="996.0" y="517" width="1.3" height="15.0" fill="rgb(219,119,36)" rx="2" ry="2" />
<text  x="999.00" y="527.5" ></text>
</g>
<g >
<title>Sprite::SetOy (1 samples, 0.01%)</title><rect x="983.4" y="581" width="0.1" height="15.0" fill="rgb(233,164,19)" rx="2" ry="2" />
<text  x="986.38" y="591.5" ></text>
</g>
<g >
<title>pixman_transform_point_31_16 (44 samples, 0.52%)</title><rect x="305.2" y="485" width="6.2" height="15.0" fill="rgb(218,228,7)" rx="2" ry="2" />
<text  x="308.21" y="495.5" ></text>
</g>
<g >
<title>Game_CommonEvent::IsWaitingForegroundExecution (8 samples, 0.10%)</title><rect x="964.9" y="565" width="1.1" height="15.0" fill="rgb(244,74,33)" rx="2" ry="2" />
<text  x="967.88" y="575.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.01%)</title><rect x="731.6" y="341" width="0.2" height="15.0" fill="rgb(236,196,9)" rx="2" ry="2" />
<text  x="734.63" y="351.5" ></text>
</g>
<g >
<title>Game_Picture::SetNonEffectParams (3 samples, 0.04%)</title><rect x="582.8" y="549" width="0.4" height="15.0" fill="rgb(229,99,14)" rx="2" ry="2" />
<text  x="585.76" y="559.5" ></text>
</g>
<g >
<title>SDL_PumpEvents_REAL (21 samples, 0.25%)</title><rect x="994.6" y="629" width="2.9" height="15.0" fill="rgb(231,86,8)" rx="2" ry="2" />
<text  x="997.59" y="639.5" ></text>
</g>
<g >
<title>free@plt (2 samples, 0.02%)</title><rect x="875.7" y="389" width="0.3" height="15.0" fill="rgb(231,12,12)" rx="2" ry="2" />
<text  x="878.73" y="399.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="918.2" y="517" width="0.1" height="15.0" fill="rgb(211,63,14)" rx="2" ry="2" />
<text  x="921.20" y="527.5" ></text>
</g>
<g >
<title>vfs_read (14 samples, 0.17%)</title><rect x="46.4" y="725" width="2.0" height="15.0" fill="rgb(213,189,46)" rx="2" ry="2" />
<text  x="49.45" y="735.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (228 samples, 2.71%)</title><rect x="376.3" y="629" width="31.9" height="15.0" fill="rgb(222,128,6)" rx="2" ry="2" />
<text  x="379.28" y="639.5" >__..</text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="363.7" y="517" width="0.1" height="15.0" fill="rgb(236,79,39)" rx="2" ry="2" />
<text  x="366.66" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="121.4" y="757" width="0.2" height="15.0" fill="rgb(208,90,26)" rx="2" ry="2" />
<text  x="124.44" y="767.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.01%)</title><rect x="375.2" y="517" width="0.1" height="15.0" fill="rgb(241,210,36)" rx="2" ry="2" />
<text  x="378.16" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (5 samples, 0.06%)</title><rect x="894.9" y="517" width="0.7" height="15.0" fill="rgb(243,163,7)" rx="2" ry="2" />
<text  x="897.93" y="527.5" ></text>
</g>
<g >
<title>Window_Base::Update (5 samples, 0.06%)</title><rect x="993.5" y="597" width="0.7" height="15.0" fill="rgb(248,33,23)" rx="2" ry="2" />
<text  x="996.47" y="607.5" ></text>
</g>
<g >
<title>native_sched_clock (1 samples, 0.01%)</title><rect x="49.5" y="501" width="0.2" height="15.0" fill="rgb(218,132,33)" rx="2" ry="2" />
<text  x="52.53" y="511.5" ></text>
</g>
<g >
<title>Game_Map::ScrollRight (1 samples, 0.01%)</title><rect x="966.1" y="581" width="0.2" height="15.0" fill="rgb(241,179,35)" rx="2" ry="2" />
<text  x="969.14" y="591.5" ></text>
</g>
<g >
<title>reschedule_interrupt (1 samples, 0.01%)</title><rect x="1166.6" y="565" width="0.1" height="15.0" fill="rgb(211,216,2)" rx="2" ry="2" />
<text  x="1169.59" y="575.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1 samples, 0.01%)</title><rect x="47.6" y="661" width="0.1" height="15.0" fill="rgb(250,140,49)" rx="2" ry="2" />
<text  x="50.57" y="671.5" ></text>
</g>
<g >
<title>unpack_128_2x128 (19 samples, 0.23%)</title><rect x="334.2" y="501" width="2.7" height="15.0" fill="rgb(217,95,39)" rx="2" ry="2" />
<text  x="337.23" y="511.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="997.1" y="485" width="0.2" height="15.0" fill="rgb(231,24,35)" rx="2" ry="2" />
<text  x="1000.12" y="495.5" ></text>
</g>
<g >
<title>Graphics::IsTransitionPending (2 samples, 0.02%)</title><rect x="126.6" y="709" width="0.3" height="15.0" fill="rgb(228,30,16)" rx="2" ry="2" />
<text  x="129.63" y="719.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (2 samples, 0.02%)</title><rect x="375.3" y="629" width="0.3" height="15.0" fill="rgb(237,201,24)" rx="2" ry="2" />
<text  x="378.30" y="639.5" ></text>
</g>
<g >
<title>pixman_image_get_stride (2 samples, 0.02%)</title><rect x="61.4" y="773" width="0.3" height="15.0" fill="rgb(226,175,45)" rx="2" ry="2" />
<text  x="64.44" y="783.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (3 samples, 0.04%)</title><rect x="84.4" y="757" width="0.5" height="15.0" fill="rgb(242,129,9)" rx="2" ry="2" />
<text  x="87.43" y="767.5" ></text>
</g>
<g >
<title>hrtimer_active (1 samples, 0.01%)</title><rect x="998.0" y="485" width="0.1" height="15.0" fill="rgb(228,145,43)" rx="2" ry="2" />
<text  x="1000.96" y="495.5" ></text>
</g>
<g >
<title>AsyncNext&lt;Scene_Map::UpdateStage1(MapUpdateAsyncContext)::&lt;lambda()&gt; &gt; (1 samples, 0.01%)</title><rect x="993.2" y="629" width="0.1" height="15.0" fill="rgb(208,180,29)" rx="2" ry="2" />
<text  x="996.19" y="639.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="636.6" y="261" width="0.1" height="15.0" fill="rgb(211,0,19)" rx="2" ry="2" />
<text  x="639.59" y="271.5" ></text>
</g>
<g >
<title>dequeue_task_fair (4 samples, 0.05%)</title><rect x="33.1" y="629" width="0.6" height="15.0" fill="rgb(227,41,52)" rx="2" ry="2" />
<text  x="36.13" y="639.5" ></text>
</g>
<g >
<title>atime_needs_update (1 samples, 0.01%)</title><rect x="47.4" y="661" width="0.2" height="15.0" fill="rgb(207,142,3)" rx="2" ry="2" />
<text  x="50.43" y="671.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="44.9" y="533" width="0.1" height="15.0" fill="rgb(211,81,16)" rx="2" ry="2" />
<text  x="47.90" y="543.5" ></text>
</g>
<g >
<title>[anon] (8 samples, 0.10%)</title><rect x="76.9" y="789" width="1.1" height="15.0" fill="rgb(237,189,18)" rx="2" ry="2" />
<text  x="79.86" y="799.5" ></text>
</g>
<g >
<title>ksys_read (16 samples, 0.19%)</title><rect x="46.2" y="741" width="2.2" height="15.0" fill="rgb(234,37,34)" rx="2" ry="2" />
<text  x="49.17" y="751.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; (6 samples, 0.07%)</title><rect x="824.7" y="373" width="0.8" height="15.0" fill="rgb(207,216,48)" rx="2" ry="2" />
<text  x="827.70" y="383.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.25 (16 samples, 0.19%)</title><rect x="998.2" y="389" width="2.3" height="15.0" fill="rgb(251,182,41)" rx="2" ry="2" />
<text  x="1001.24" y="399.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr (1 samples, 0.01%)</title><rect x="671.9" y="453" width="0.2" height="15.0" fill="rgb(225,105,47)" rx="2" ry="2" />
<text  x="674.91" y="463.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.01%)</title><rect x="1166.0" y="421" width="0.2" height="15.0" fill="rgb(236,21,21)" rx="2" ry="2" />
<text  x="1169.03" y="431.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (1 samples, 0.01%)</title><rect x="826.8" y="437" width="0.1" height="15.0" fill="rgb(250,24,37)" rx="2" ry="2" />
<text  x="829.80" y="447.5" ></text>
</g>
<g >
<title>Bitmap::Blit (953 samples, 11.32%)</title><rect x="159.1" y="581" width="133.6" height="15.0" fill="rgb(221,139,34)" rx="2" ry="2" />
<text  x="162.15" y="591.5" >Bitmap::Blit</text>
</g>
<g >
<title>operator== (1 samples, 0.01%)</title><rect x="983.5" y="549" width="0.2" height="15.0" fill="rgb(237,62,5)" rx="2" ry="2" />
<text  x="986.52" y="559.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="636.6" y="309" width="0.1" height="15.0" fill="rgb(223,43,37)" rx="2" ry="2" />
<text  x="639.59" y="319.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="987.7" y="549" width="0.2" height="15.0" fill="rgb(206,61,46)" rx="2" ry="2" />
<text  x="990.73" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (21 samples, 0.25%)</title><rect x="664.3" y="373" width="3.0" height="15.0" fill="rgb(250,108,31)" rx="2" ry="2" />
<text  x="667.34" y="383.5" ></text>
</g>
<g >
<title>operator!= (5 samples, 0.06%)</title><rect x="346.7" y="597" width="0.7" height="15.0" fill="rgb(217,94,3)" rx="2" ry="2" />
<text  x="349.70" y="607.5" ></text>
</g>
<g >
<title>std::return_temporary_buffer&lt;Drawable*&gt; (1 samples, 0.01%)</title><rect x="357.2" y="581" width="0.2" height="15.0" fill="rgb(243,79,35)" rx="2" ry="2" />
<text  x="360.22" y="591.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (FileRequestResult*), Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_invoke (1 samples, 0.01%)</title><rect x="878.2" y="485" width="0.2" height="15.0" fill="rgb(209,116,39)" rx="2" ry="2" />
<text  x="881.25" y="495.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (1 samples, 0.01%)</title><rect x="1189.2" y="741" width="0.1" height="15.0" fill="rgb(210,129,25)" rx="2" ry="2" />
<text  x="1192.16" y="751.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (24 samples, 0.29%)</title><rect x="895.8" y="469" width="3.3" height="15.0" fill="rgb(238,184,12)" rx="2" ry="2" />
<text  x="898.77" y="479.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandKeyInputProc (2 samples, 0.02%)</title><rect x="581.1" y="581" width="0.3" height="15.0" fill="rgb(244,54,16)" rx="2" ry="2" />
<text  x="584.08" y="591.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="408.2" y="565" width="0.2" height="15.0" fill="rgb(241,51,5)" rx="2" ry="2" />
<text  x="411.24" y="575.5" ></text>
</g>
<g >
<title>Tone::Tone (4 samples, 0.05%)</title><rect x="982.4" y="565" width="0.6" height="15.0" fill="rgb(238,88,44)" rx="2" ry="2" />
<text  x="985.40" y="575.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.01%)</title><rect x="472.6" y="437" width="0.1" height="15.0" fill="rgb(226,204,53)" rx="2" ry="2" />
<text  x="475.58" y="447.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (9 samples, 0.11%)</title><rect x="660.4" y="357" width="1.3" height="15.0" fill="rgb(207,60,51)" rx="2" ry="2" />
<text  x="663.42" y="367.5" ></text>
</g>
<g >
<title>over_2x128 (3 samples, 0.04%)</title><rect x="333.4" y="485" width="0.4" height="15.0" fill="rgb(206,205,0)" rx="2" ry="2" />
<text  x="336.39" y="495.5" ></text>
</g>
<g >
<title>unpack_32_1x128 (1 samples, 0.01%)</title><rect x="260.5" y="533" width="0.1" height="15.0" fill="rgb(238,199,44)" rx="2" ry="2" />
<text  x="263.49" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.01%)</title><rect x="664.1" y="293" width="0.1" height="15.0" fill="rgb(250,85,1)" rx="2" ry="2" />
<text  x="667.06" y="303.5" ></text>
</g>
<g >
<title>_pixman_image_init (1 samples, 0.01%)</title><rect x="821.1" y="261" width="0.1" height="15.0" fill="rgb(239,46,49)" rx="2" ry="2" />
<text  x="824.06" y="271.5" ></text>
</g>
<g >
<title>Sprite_Character::Update (1 samples, 0.01%)</title><rect x="994.2" y="629" width="0.1" height="15.0" fill="rgb(252,156,47)" rx="2" ry="2" />
<text  x="997.17" y="639.5" ></text>
</g>
<g >
<title>__GI___poll (1 samples, 0.01%)</title><rect x="995.4" y="469" width="0.2" height="15.0" fill="rgb(250,81,43)" rx="2" ry="2" />
<text  x="998.44" y="479.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy (10 samples, 0.12%)</title><rect x="341.9" y="549" width="1.4" height="15.0" fill="rgb(252,49,35)" rx="2" ry="2" />
<text  x="344.94" y="559.5" ></text>
</g>
<g >
<title>__exchange_and_add (4 samples, 0.05%)</title><rect x="350.2" y="517" width="0.6" height="15.0" fill="rgb(227,67,47)" rx="2" ry="2" />
<text  x="353.21" y="527.5" ></text>
</g>
<g >
<title>Transition::IsActive (2 samples, 0.02%)</title><rect x="1186.2" y="709" width="0.3" height="15.0" fill="rgb(219,135,18)" rx="2" ry="2" />
<text  x="1189.22" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="366.5" y="597" width="0.1" height="15.0" fill="rgb(243,101,46)" rx="2" ry="2" />
<text  x="369.47" y="607.5" ></text>
</g>
<g >
<title>std::less&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt; &gt;::operator() (1 samples, 0.01%)</title><rect x="993.6" y="469" width="0.2" height="15.0" fill="rgb(208,130,45)" rx="2" ry="2" />
<text  x="996.61" y="479.5" ></text>
</g>
<g >
<title>Game_Interpreter_Map::ExecuteCommand (3 samples, 0.04%)</title><rect x="65.2" y="773" width="0.4" height="15.0" fill="rgb(227,221,21)" rx="2" ry="2" />
<text  x="68.23" y="783.5" ></text>
</g>
<g >
<title>Graphics::SortDrawableList (1 samples, 0.01%)</title><rect x="154.8" y="533" width="0.1" height="15.0" fill="rgb(213,149,13)" rx="2" ry="2" />
<text  x="157.80" y="543.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.01%)</title><rect x="82.3" y="677" width="0.2" height="15.0" fill="rgb(249,55,33)" rx="2" ry="2" />
<text  x="85.33" y="687.5" ></text>
</g>
<g >
<title>pixman_image_get_height@plt (1 samples, 0.01%)</title><rect x="833.1" y="421" width="0.2" height="15.0" fill="rgb(237,177,14)" rx="2" ry="2" />
<text  x="836.11" y="431.5" ></text>
</g>
<g >
<title>usb_submit_urb (1 samples, 0.01%)</title><rect x="747.7" y="101" width="0.2" height="15.0" fill="rgb(225,196,53)" rx="2" ry="2" />
<text  x="750.75" y="111.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.01%)</title><rect x="747.9" y="341" width="0.1" height="15.0" fill="rgb(237,154,51)" rx="2" ry="2" />
<text  x="750.89" y="351.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (10 samples, 0.12%)</title><rect x="816.3" y="229" width="1.4" height="15.0" fill="rgb(210,151,32)" rx="2" ry="2" />
<text  x="819.29" y="239.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.02%)</title><rect x="849.0" y="437" width="0.2" height="15.0" fill="rgb(213,38,1)" rx="2" ry="2" />
<text  x="851.95" y="447.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="731.5" y="341" width="0.1" height="15.0" fill="rgb(227,216,21)" rx="2" ry="2" />
<text  x="734.48" y="351.5" ></text>
</g>
<g >
<title>_mm_cmpeq_epi8 (19 samples, 0.23%)</title><rect x="248.6" y="517" width="2.6" height="15.0" fill="rgb(242,165,18)" rx="2" ry="2" />
<text  x="251.58" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.02%)</title><rect x="994.7" y="485" width="0.3" height="15.0" fill="rgb(245,97,49)" rx="2" ry="2" />
<text  x="997.74" y="495.5" ></text>
</g>
<g >
<title>_mm_adds_epu8 (31 samples, 0.37%)</title><rect x="225.2" y="501" width="4.3" height="15.0" fill="rgb(234,185,32)" rx="2" ry="2" />
<text  x="228.17" y="511.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="660.3" y="197" width="0.1" height="15.0" fill="rgb(219,125,54)" rx="2" ry="2" />
<text  x="663.28" y="207.5" ></text>
</g>
<g >
<title>_mm_mullo_epi16 (7 samples, 0.08%)</title><rect x="276.3" y="485" width="1.0" height="15.0" fill="rgb(247,168,43)" rx="2" ry="2" />
<text  x="279.33" y="495.5" ></text>
</g>
<g >
<title>led_trigger_blink_oneshot (1 samples, 0.01%)</title><rect x="44.9" y="389" width="0.1" height="15.0" fill="rgb(206,66,52)" rx="2" ry="2" />
<text  x="47.90" y="399.5" ></text>
</g>
<g >
<title>pixman_unorm_to_float (2 samples, 0.02%)</title><rect x="292.5" y="533" width="0.2" height="15.0" fill="rgb(208,140,26)" rx="2" ry="2" />
<text  x="295.45" y="543.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="747.5" y="309" width="0.1" height="15.0" fill="rgb(218,155,10)" rx="2" ry="2" />
<text  x="750.46" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign@plt (1 samples, 0.01%)</title><rect x="907.3" y="533" width="0.1" height="15.0" fill="rgb(253,203,12)" rx="2" ry="2" />
<text  x="910.27" y="543.5" ></text>
</g>
<g >
<title>operator!= (1 samples, 0.01%)</title><rect x="983.5" y="565" width="0.2" height="15.0" fill="rgb(250,99,34)" rx="2" ry="2" />
<text  x="986.52" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create@plt (3 samples, 0.04%)</title><rect x="906.8" y="517" width="0.5" height="15.0" fill="rgb(235,85,51)" rx="2" ry="2" />
<text  x="909.84" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.01%)</title><rect x="28.1" y="773" width="0.1" height="15.0" fill="rgb(250,221,22)" rx="2" ry="2" />
<text  x="31.08" y="783.5" ></text>
</g>
<g >
<title>Input::Update (4 samples, 0.05%)</title><rect x="366.6" y="661" width="0.6" height="15.0" fill="rgb(241,132,11)" rx="2" ry="2" />
<text  x="369.61" y="671.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="949.3" y="533" width="0.2" height="15.0" fill="rgb(225,15,33)" rx="2" ry="2" />
<text  x="952.32" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_clock_gettime (1 samples, 0.01%)</title><rect x="1176.1" y="549" width="0.2" height="15.0" fill="rgb(229,188,4)" rx="2" ry="2" />
<text  x="1179.12" y="559.5" ></text>
</g>
<g >
<title>Bitmap::Bitmap (235 samples, 2.79%)</title><rect x="791.6" y="325" width="33.0" height="15.0" fill="rgb(224,10,1)" rx="2" ry="2" />
<text  x="794.62" y="335.5" >Bi..</text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="968.8" y="549" width="0.1" height="15.0" fill="rgb(222,120,23)" rx="2" ry="2" />
<text  x="971.80" y="559.5" ></text>
</g>
<g >
<title>create_bits_image_internal (1 samples, 0.01%)</title><rect x="123.5" y="773" width="0.2" height="15.0" fill="rgb(231,8,45)" rx="2" ry="2" />
<text  x="126.54" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (28 samples, 0.33%)</title><rect x="538.2" y="549" width="3.9" height="15.0" fill="rgb(252,10,39)" rx="2" ry="2" />
<text  x="541.18" y="559.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="747.7" y="245" width="0.2" height="15.0" fill="rgb(248,15,45)" rx="2" ry="2" />
<text  x="750.75" y="255.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="384.0" y="485" width="0.1" height="15.0" fill="rgb(225,26,27)" rx="2" ry="2" />
<text  x="386.99" y="495.5" ></text>
</g>
<g >
<title>update_blocked_averages (2 samples, 0.02%)</title><rect x="45.2" y="629" width="0.3" height="15.0" fill="rgb(207,50,1)" rx="2" ry="2" />
<text  x="48.18" y="639.5" ></text>
</g>
<g >
<title>x86_pmu_enable (69 samples, 0.82%)</title><rect x="35.2" y="597" width="9.7" height="15.0" fill="rgb(250,97,15)" rx="2" ry="2" />
<text  x="38.23" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Game_Picture, std::default_delete&lt;Game_Picture&gt; &gt;::_M_ptr (1 samples, 0.01%)</title><rect x="583.7" y="517" width="0.2" height="15.0" fill="rgb(214,219,2)" rx="2" ry="2" />
<text  x="586.74" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (21 samples, 0.25%)</title><rect x="664.3" y="357" width="3.0" height="15.0" fill="rgb(228,121,53)" rx="2" ry="2" />
<text  x="667.34" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;::~_Tuple_impl (5 samples, 0.06%)</title><rect x="667.3" y="421" width="0.7" height="15.0" fill="rgb(222,0,46)" rx="2" ry="2" />
<text  x="670.28" y="431.5" ></text>
</g>
<g >
<title>Game_Map::Update (4,172 samples, 49.56%)</title><rect x="408.4" y="645" width="584.8" height="15.0" fill="rgb(232,16,48)" rx="2" ry="2" />
<text  x="411.38" y="655.5" >Game_Map::Update</text>
</g>
<g >
<title>_pixman_bits_image_init (1 samples, 0.01%)</title><rect x="122.1" y="773" width="0.2" height="15.0" fill="rgb(253,203,9)" rx="2" ry="2" />
<text  x="125.14" y="783.5" ></text>
</g>
<g >
<title>Game_Map::GetDisplayY (1 samples, 0.01%)</title><rect x="53.6" y="773" width="0.1" height="15.0" fill="rgb(241,150,21)" rx="2" ry="2" />
<text  x="56.59" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.01%)</title><rect x="663.9" y="325" width="0.2" height="15.0" fill="rgb(246,166,24)" rx="2" ry="2" />
<text  x="666.92" y="335.5" ></text>
</g>
<g >
<title>SDL_JoystickUpdate_REAL (3 samples, 0.04%)</title><rect x="1000.5" y="597" width="0.4" height="15.0" fill="rgb(208,148,30)" rx="2" ry="2" />
<text  x="1003.48" y="607.5" ></text>
</g>
<g >
<title>ktime_get_raw_ts64 (1 samples, 0.01%)</title><rect x="398.6" y="565" width="0.1" height="15.0" fill="rgb(230,17,44)" rx="2" ry="2" />
<text  x="401.57" y="575.5" ></text>
</g>
<g >
<title>Game_Picture::UpdateSprite (1,279 samples, 15.19%)</title><rect x="672.1" y="485" width="179.2" height="15.0" fill="rgb(233,192,9)" rx="2" ry="2" />
<text  x="675.05" y="495.5" >Game_Picture::UpdateSpr..</text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (49 samples, 0.58%)</title><rect x="1169.0" y="533" width="6.8" height="15.0" fill="rgb(251,116,38)" rx="2" ry="2" />
<text  x="1171.97" y="543.5" ></text>
</g>
<g >
<title>std::_Hash_bytes@plt (1 samples, 0.01%)</title><rect x="618.4" y="421" width="0.1" height="15.0" fill="rgb(240,114,23)" rx="2" ry="2" />
<text  x="621.36" y="431.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.01%)</title><rect x="1002.2" y="357" width="0.1" height="15.0" fill="rgb(219,119,17)" rx="2" ry="2" />
<text  x="1005.16" y="367.5" ></text>
</g>
<g >
<title>Bitmap::height (3 samples, 0.04%)</title><rect x="853.3" y="453" width="0.4" height="15.0" fill="rgb(205,154,43)" rx="2" ry="2" />
<text  x="856.30" y="463.5" ></text>
</g>
<g >
<title>_mm_adds_epu8 (1 samples, 0.01%)</title><rect x="213.8" y="485" width="0.2" height="15.0" fill="rgb(230,133,26)" rx="2" ry="2" />
<text  x="216.82" y="495.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="899.3" y="437" width="0.1" height="15.0" fill="rgb(227,147,6)" rx="2" ry="2" />
<text  x="902.28" y="447.5" ></text>
</g>
<g >
<title>schedule (92 samples, 1.09%)</title><rect x="32.6" y="677" width="12.9" height="15.0" fill="rgb(244,3,11)" rx="2" ry="2" />
<text  x="35.57" y="687.5" ></text>
</g>
<g >
<title>_pixman_compute_composite_region32 (2 samples, 0.02%)</title><rect x="683.0" y="437" width="0.3" height="15.0" fill="rgb(221,227,49)" rx="2" ry="2" />
<text  x="685.98" y="447.5" ></text>
</g>
<g >
<title>_pixman_compute_composite_region32 (3 samples, 0.04%)</title><rect x="122.3" y="773" width="0.4" height="15.0" fill="rgb(208,33,26)" rx="2" ry="2" />
<text  x="125.28" y="783.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.01%)</title><rect x="357.2" y="565" width="0.2" height="15.0" fill="rgb(205,140,42)" rx="2" ry="2" />
<text  x="360.22" y="575.5" ></text>
</g>
<g >
<title>pix_multiply_2x128 (41 samples, 0.49%)</title><rect x="277.3" y="517" width="5.8" height="15.0" fill="rgb(221,166,46)" rx="2" ry="2" />
<text  x="280.32" y="527.5" ></text>
</g>
<g >
<title>GetRequest (40 samples, 0.48%)</title><rect x="634.5" y="437" width="5.6" height="15.0" fill="rgb(234,52,25)" rx="2" ry="2" />
<text  x="637.48" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.01%)</title><rect x="32.3" y="693" width="0.1" height="15.0" fill="rgb(250,182,13)" rx="2" ry="2" />
<text  x="35.29" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SavePicture, std::allocator&lt;RPG::SavePicture&gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="583.0" y="501" width="0.2" height="15.0" fill="rgb(254,186,6)" rx="2" ry="2" />
<text  x="586.04" y="511.5" ></text>
</g>
<g >
<title>SDL_UDEV_hotplug_update_available (2 samples, 0.02%)</title><rect x="1000.5" y="549" width="0.3" height="15.0" fill="rgb(211,82,8)" rx="2" ry="2" />
<text  x="1003.48" y="559.5" ></text>
</g>
<g >
<title>Sdl2Ui::GetAudio (1 samples, 0.01%)</title><rect x="994.5" y="661" width="0.1" height="15.0" fill="rgb(240,165,10)" rx="2" ry="2" />
<text  x="997.45" y="671.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (19 samples, 0.23%)</title><rect x="79.8" y="725" width="2.7" height="15.0" fill="rgb(247,12,52)" rx="2" ry="2" />
<text  x="82.81" y="735.5" ></text>
</g>
<g >
<title>Bitmap::width (25 samples, 0.30%)</title><rect x="975.4" y="565" width="3.5" height="15.0" fill="rgb(216,189,20)" rx="2" ry="2" />
<text  x="978.39" y="575.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (34 samples, 0.40%)</title><rect x="610.4" y="469" width="4.7" height="15.0" fill="rgb(250,193,11)" rx="2" ry="2" />
<text  x="613.37" y="479.5" ></text>
</g>
<g >
<title>poll (2 samples, 0.02%)</title><rect x="994.7" y="533" width="0.3" height="15.0" fill="rgb(216,43,48)" rx="2" ry="2" />
<text  x="997.74" y="543.5" ></text>
</g>
<g >
<title>__pollwait (1 samples, 0.01%)</title><rect x="32.1" y="709" width="0.2" height="15.0" fill="rgb(254,12,14)" rx="2" ry="2" />
<text  x="35.15" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (2 samples, 0.02%)</title><rect x="993.8" y="485" width="0.2" height="15.0" fill="rgb(208,197,34)" rx="2" ry="2" />
<text  x="996.75" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;Sprite, std::default_delete&lt;Sprite&gt; &gt;::_M_ptr (1 samples, 0.01%)</title><rect x="992.9" y="549" width="0.2" height="15.0" fill="rgb(234,81,31)" rx="2" ry="2" />
<text  x="995.91" y="559.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale@plt (1 samples, 0.01%)</title><rect x="903.5" y="485" width="0.1" height="15.0" fill="rgb(207,41,51)" rx="2" ry="2" />
<text  x="906.48" y="495.5" ></text>
</g>
<g >
<title>MessageOverlay::GetZ (1 samples, 0.01%)</title><rect x="154.7" y="533" width="0.1" height="15.0" fill="rgb(206,135,39)" rx="2" ry="2" />
<text  x="157.66" y="543.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetSubcommandIndex (1 samples, 0.01%)</title><rect x="584.2" y="565" width="0.1" height="15.0" fill="rgb(220,65,1)" rx="2" ry="2" />
<text  x="587.16" y="575.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="731.5" y="357" width="0.1" height="15.0" fill="rgb(233,175,42)" rx="2" ry="2" />
<text  x="734.48" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (3 samples, 0.04%)</title><rect x="669.0" y="357" width="0.4" height="15.0" fill="rgb(230,188,47)" rx="2" ry="2" />
<text  x="671.97" y="367.5" ></text>
</g>
<g >
<title>X11_HandleGenericEvent (1 samples, 0.01%)</title><rect x="995.6" y="581" width="0.1" height="15.0" fill="rgb(247,148,10)" rx="2" ry="2" />
<text  x="998.58" y="591.5" ></text>
</g>
<g >
<title>std::set&lt;short, std::less&lt;short&gt;, std::allocator&lt;short&gt; &gt;::find (2 samples, 0.02%)</title><rect x="354.1" y="613" width="0.3" height="15.0" fill="rgb(214,201,15)" rx="2" ry="2" />
<text  x="357.13" y="623.5" ></text>
</g>
<g >
<title>Game_Map::GetDisplayX (1 samples, 0.01%)</title><rect x="597.8" y="549" width="0.1" height="15.0" fill="rgb(251,106,21)" rx="2" ry="2" />
<text  x="600.76" y="559.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandShowPicture (2,291 samples, 27.22%)</title><rect x="586.3" y="581" width="321.1" height="15.0" fill="rgb(239,7,7)" rx="2" ry="2" />
<text  x="589.26" y="591.5" >Game_Interpreter::CommandShowPicture</text>
</g>
<g >
<title>Game_Map::Refresh (4 samples, 0.05%)</title><rect x="55.8" y="773" width="0.6" height="15.0" fill="rgb(207,138,40)" rx="2" ry="2" />
<text  x="58.84" y="783.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="44.9" y="517" width="0.1" height="15.0" fill="rgb(206,28,40)" rx="2" ry="2" />
<text  x="47.90" y="527.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="1184.3" y="565" width="0.1" height="15.0" fill="rgb(224,87,53)" rx="2" ry="2" />
<text  x="1187.25" y="575.5" ></text>
</g>
<g >
<title>SDL_GetTicks_REAL (2 samples, 0.02%)</title><rect x="1176.0" y="629" width="0.3" height="15.0" fill="rgb(237,85,21)" rx="2" ry="2" />
<text  x="1178.98" y="639.5" ></text>
</g>
<g >
<title>_mm_unpackhi_epi8 (11 samples, 0.13%)</title><rect x="283.9" y="517" width="1.5" height="15.0" fill="rgb(223,44,13)" rx="2" ry="2" />
<text  x="286.90" y="527.5" ></text>
</g>
<g >
<title>_mm_shufflelo_epi16 (1 samples, 0.01%)</title><rect x="332.1" y="485" width="0.2" height="15.0" fill="rgb(212,120,16)" rx="2" ry="2" />
<text  x="335.12" y="495.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="636.6" y="277" width="0.1" height="15.0" fill="rgb(213,163,43)" rx="2" ry="2" />
<text  x="639.59" y="287.5" ></text>
</g>
<g >
<title>Sprite::SetFlashEffect (2 samples, 0.02%)</title><rect x="892.8" y="517" width="0.3" height="15.0" fill="rgb(248,72,47)" rx="2" ry="2" />
<text  x="895.83" y="527.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="722.9" y="325" width="0.2" height="15.0" fill="rgb(249,35,4)" rx="2" ry="2" />
<text  x="725.93" y="335.5" ></text>
</g>
<g >
<title>X11_PumpEvents (12 samples, 0.14%)</title><rect x="1000.9" y="597" width="1.7" height="15.0" fill="rgb(217,42,35)" rx="2" ry="2" />
<text  x="1003.90" y="607.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandConditionalBranch (253 samples, 3.01%)</title><rect x="439.8" y="581" width="35.4" height="15.0" fill="rgb(227,101,45)" rx="2" ry="2" />
<text  x="442.78" y="591.5" >Gam..</text>
</g>
<g >
<title>__gnu_cxx::__ops::_Val_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;Drawable*, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (3 samples, 0.04%)</title><rect x="362.0" y="517" width="0.4" height="15.0" fill="rgb(247,222,28)" rx="2" ry="2" />
<text  x="364.98" y="527.5" ></text>
</g>
<g >
<title>FileRequestAsync::CallListeners (3 samples, 0.04%)</title><rect x="620.2" y="517" width="0.4" height="15.0" fill="rgb(246,105,24)" rx="2" ry="2" />
<text  x="623.19" y="527.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.01%)</title><rect x="340.0" y="533" width="0.1" height="15.0" fill="rgb(231,161,20)" rx="2" ry="2" />
<text  x="342.97" y="543.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1 samples, 0.01%)</title><rect x="1002.2" y="373" width="0.1" height="15.0" fill="rgb(215,206,1)" rx="2" ry="2" />
<text  x="1005.16" y="383.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, Drawable**, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (11 samples, 0.13%)</title><rect x="364.2" y="549" width="1.6" height="15.0" fill="rgb(205,211,26)" rx="2" ry="2" />
<text  x="367.22" y="559.5" ></text>
</g>
<g >
<title>kmalloc_slab (1 samples, 0.01%)</title><rect x="1167.4" y="245" width="0.2" height="15.0" fill="rgb(206,225,20)" rx="2" ry="2" />
<text  x="1170.43" y="255.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="375.0" y="373" width="0.2" height="15.0" fill="rgb(241,62,6)" rx="2" ry="2" />
<text  x="378.02" y="383.5" ></text>
</g>
<g >
<title>pix_multiply_2x128 (27 samples, 0.32%)</title><rect x="778.3" y="373" width="3.8" height="15.0" fill="rgb(232,218,46)" rx="2" ry="2" />
<text  x="781.30" y="383.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="636.6" y="245" width="0.1" height="15.0" fill="rgb(221,70,37)" rx="2" ry="2" />
<text  x="639.59" y="255.5" ></text>
</g>
<g >
<title>__sched_text_start (17 samples, 0.20%)</title><rect x="998.1" y="485" width="2.4" height="15.0" fill="rgb(239,65,28)" rx="2" ry="2" />
<text  x="1001.10" y="495.5" ></text>
</g>
<g >
<title>_pixman_implementation_lookup_composite (4 samples, 0.05%)</title><rect x="299.9" y="533" width="0.5" height="15.0" fill="rgb(236,122,52)" rx="2" ry="2" />
<text  x="302.88" y="543.5" ></text>
</g>
<g >
<title>Tone::Tone (6 samples, 0.07%)</title><rect x="836.9" y="469" width="0.8" height="15.0" fill="rgb(235,113,32)" rx="2" ry="2" />
<text  x="839.90" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create@plt (1 samples, 0.01%)</title><rect x="627.8" y="357" width="0.1" height="15.0" fill="rgb(232,69,16)" rx="2" ry="2" />
<text  x="630.75" y="367.5" ></text>
</g>
<g >
<title>_pixman_compute_composite_region32 (3 samples, 0.04%)</title><rect x="297.8" y="517" width="0.4" height="15.0" fill="rgb(238,200,3)" rx="2" ry="2" />
<text  x="300.78" y="527.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.01%)</title><rect x="123.7" y="773" width="0.1" height="15.0" fill="rgb(212,122,5)" rx="2" ry="2" />
<text  x="126.68" y="783.5" ></text>
</g>
<g >
<title>_mm_adds_epu16 (1 samples, 0.01%)</title><rect x="332.5" y="453" width="0.2" height="15.0" fill="rgb(206,222,27)" rx="2" ry="2" />
<text  x="335.54" y="463.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash (17 samples, 0.20%)</title><rect x="637.7" y="357" width="2.4" height="15.0" fill="rgb(237,122,3)" rx="2" ry="2" />
<text  x="640.71" y="367.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (1 samples, 0.01%)</title><rect x="664.2" y="325" width="0.1" height="15.0" fill="rgb(231,98,13)" rx="2" ry="2" />
<text  x="667.20" y="335.5" ></text>
</g>
<g >
<title>Scene_Map::UpdateStage2 (1 samples, 0.01%)</title><rect x="993.2" y="597" width="0.1" height="15.0" fill="rgb(243,108,51)" rx="2" ry="2" />
<text  x="996.19" y="607.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="816.2" y="165" width="0.1" height="15.0" fill="rgb(236,219,34)" rx="2" ry="2" />
<text  x="819.15" y="175.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.01%)</title><rect x="1002.0" y="165" width="0.2" height="15.0" fill="rgb(215,25,38)" rx="2" ry="2" />
<text  x="1005.02" y="175.5" ></text>
</g>
<g >
<title>_mm_loadu_si128 (159 samples, 1.89%)</title><rect x="751.2" y="373" width="22.3" height="15.0" fill="rgb(213,118,13)" rx="2" ry="2" />
<text  x="754.25" y="383.5" >_..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (7 samples, 0.08%)</title><rect x="542.1" y="549" width="1.0" height="15.0" fill="rgb(238,150,18)" rx="2" ry="2" />
<text  x="545.11" y="559.5" ></text>
</g>
<g >
<title>__libc_start_main (7,562 samples, 89.83%)</title><rect x="126.5" y="773" width="1060.0" height="15.0" fill="rgb(246,137,4)" rx="2" ry="2" />
<text  x="129.49" y="783.5" >__libc_start_main</text>
</g>
<g >
<title>load_balance (1 samples, 0.01%)</title><rect x="375.2" y="501" width="0.1" height="15.0" fill="rgb(235,20,47)" rx="2" ry="2" />
<text  x="378.16" y="511.5" ></text>
</g>
<g >
<title>AsyncHandler::RequestFile (1 samples, 0.01%)</title><rect x="993.5" y="517" width="0.1" height="15.0" fill="rgb(248,193,14)" rx="2" ry="2" />
<text  x="996.47" y="527.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;Game_Picture::RequestPictureSprite()::{lambda(FileRequestResult*)#1}&gt;::_M_manager (1 samples, 0.01%)</title><rect x="879.9" y="501" width="0.2" height="15.0" fill="rgb(211,105,35)" rx="2" ry="2" />
<text  x="882.93" y="511.5" ></text>
</g>
<g >
<title>ttwu_do_activate (4 samples, 0.05%)</title><rect x="49.1" y="597" width="0.6" height="15.0" fill="rgb(228,60,20)" rx="2" ry="2" />
<text  x="52.11" y="607.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (2 samples, 0.02%)</title><rect x="1167.3" y="373" width="0.3" height="15.0" fill="rgb(245,143,43)" rx="2" ry="2" />
<text  x="1170.29" y="383.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="563.7" y="501" width="0.1" height="15.0" fill="rgb(226,14,8)" rx="2" ry="2" />
<text  x="566.69" y="511.5" ></text>
</g>
<g >
<title>___sys_recvmsg (1 samples, 0.01%)</title><rect x="996.4" y="389" width="0.2" height="15.0" fill="rgb(222,149,4)" rx="2" ry="2" />
<text  x="999.42" y="399.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.02%)</title><rect x="30.9" y="709" width="0.3" height="15.0" fill="rgb(205,206,20)" rx="2" ry="2" />
<text  x="33.89" y="719.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (5 samples, 0.06%)</title><rect x="46.6" y="645" width="0.7" height="15.0" fill="rgb(239,84,16)" rx="2" ry="2" />
<text  x="49.59" y="655.5" ></text>
</g>
<g >
<title>interrupt_entry (1 samples, 0.01%)</title><rect x="63.0" y="757" width="0.1" height="15.0" fill="rgb(228,92,22)" rx="2" ry="2" />
<text  x="65.99" y="767.5" ></text>
</g>
<g >
<title>xhci_giveback_urb_in_irq.isra.43 (1 samples, 0.01%)</title><rect x="244.9" y="293" width="0.2" height="15.0" fill="rgb(249,198,38)" rx="2" ry="2" />
<text  x="247.93" y="303.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="569.9" y="501" width="0.1" height="15.0" fill="rgb(219,170,39)" rx="2" ry="2" />
<text  x="572.86" y="511.5" ></text>
</g>
<g >
<title>Game_Interpreter::GetFrame (7 samples, 0.08%)</title><rect x="455.8" y="533" width="0.9" height="15.0" fill="rgb(232,192,19)" rx="2" ry="2" />
<text  x="458.76" y="543.5" ></text>
</g>
<g >
<title>default_wake_function (1 samples, 0.01%)</title><rect x="374.9" y="341" width="0.1" height="15.0" fill="rgb(225,22,4)" rx="2" ry="2" />
<text  x="377.88" y="351.5" ></text>
</g>
<g >
<title>__strlen_avx2 (7 samples, 0.08%)</title><rect x="670.5" y="421" width="1.0" height="15.0" fill="rgb(226,186,40)" rx="2" ry="2" />
<text  x="673.51" y="431.5" ></text>
</g>
<g >
<title>_mm_adds_epu8 (28 samples, 0.33%)</title><rect x="266.4" y="501" width="3.9" height="15.0" fill="rgb(224,203,29)" rx="2" ry="2" />
<text  x="269.38" y="511.5" ></text>
</g>
<g >
<title>trigger_load_balance (1 samples, 0.01%)</title><rect x="25.8" y="661" width="0.2" height="15.0" fill="rgb(232,129,17)" rx="2" ry="2" />
<text  x="28.84" y="671.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.01%)</title><rect x="374.9" y="373" width="0.1" height="15.0" fill="rgb(215,29,41)" rx="2" ry="2" />
<text  x="377.88" y="383.5" ></text>
</g>
<g >
<title>BlitNtoNCopyAlpha (1,167 samples, 13.86%)</title><rect x="1004.1" y="581" width="163.6" height="15.0" fill="rgb(222,109,14)" rx="2" ry="2" />
<text  x="1007.13" y="591.5" >BlitNtoNCopyAlpha</text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="117.9" y="709" width="0.2" height="15.0" fill="rgb(242,217,31)" rx="2" ry="2" />
<text  x="120.94" y="719.5" ></text>
</g>
<g >
<title>xhci_msi_irq (1 samples, 0.01%)</title><rect x="117.9" y="661" width="0.2" height="15.0" fill="rgb(219,148,30)" rx="2" ry="2" />
<text  x="120.94" y="671.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (1 samples, 0.01%)</title><rect x="71.4" y="773" width="0.1" height="15.0" fill="rgb(210,60,17)" rx="2" ry="2" />
<text  x="74.40" y="783.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="747.6" y="325" width="0.1" height="15.0" fill="rgb(229,58,1)" rx="2" ry="2" />
<text  x="750.61" y="335.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="384.0" y="581" width="0.1" height="15.0" fill="rgb(247,51,31)" rx="2" ry="2" />
<text  x="386.99" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (1 samples, 0.01%)</title><rect x="580.9" y="549" width="0.2" height="15.0" fill="rgb(254,101,34)" rx="2" ry="2" />
<text  x="583.94" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::Variable, std::allocator&lt;RPG::Variable&gt; &gt;::size (18 samples, 0.21%)</title><rect x="565.7" y="549" width="2.5" height="15.0" fill="rgb(229,223,16)" rx="2" ry="2" />
<text  x="568.66" y="559.5" ></text>
</g>
<g >
<title>_pixman_image_init (1 samples, 0.01%)</title><rect x="338.3" y="517" width="0.1" height="15.0" fill="rgb(249,141,52)" rx="2" ry="2" />
<text  x="341.29" y="527.5" ></text>
</g>
<g >
<title>pixman_image_unref (1 samples, 0.01%)</title><rect x="75.0" y="773" width="0.2" height="15.0" fill="rgb(212,193,6)" rx="2" ry="2" />
<text  x="78.04" y="783.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (49 samples, 0.58%)</title><rect x="1169.0" y="501" width="6.8" height="15.0" fill="rgb(222,145,49)" rx="2" ry="2" />
<text  x="1171.97" y="511.5" ></text>
</g>
<g >
<title>Bitmap::pixels (1 samples, 0.01%)</title><rect x="790.8" y="437" width="0.1" height="15.0" fill="rgb(227,45,1)" rx="2" ry="2" />
<text  x="793.78" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_getpid (2 samples, 0.02%)</title><rect x="27.8" y="773" width="0.3" height="15.0" fill="rgb(238,193,49)" rx="2" ry="2" />
<text  x="30.80" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator() (10 samples, 0.12%)</title><rect x="634.9" y="357" width="1.4" height="15.0" fill="rgb(207,227,5)" rx="2" ry="2" />
<text  x="637.90" y="367.5" ></text>
</g>
<g >
<title>XFindOnExtensionList (1 samples, 0.01%)</title><rect x="79.0" y="773" width="0.1" height="15.0" fill="rgb(207,95,31)" rx="2" ry="2" />
<text  x="81.97" y="783.5" ></text>
</g>
<g >
<title>memcpy@plt (2 samples, 0.02%)</title><rect x="602.7" y="437" width="0.2" height="15.0" fill="rgb(239,106,17)" rx="2" ry="2" />
<text  x="605.66" y="447.5" ></text>
</g>
<g >
<title>_pixman_bits_image_setup_accessors (3 samples, 0.04%)</title><rect x="683.4" y="421" width="0.4" height="15.0" fill="rgb(215,98,34)" rx="2" ry="2" />
<text  x="686.40" y="431.5" ></text>
</g>
<g >
<title>GL_ActivateRenderer (1 samples, 0.01%)</title><rect x="1002.9" y="629" width="0.1" height="15.0" fill="rgb(219,194,52)" rx="2" ry="2" />
<text  x="1005.87" y="639.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.01%)</title><rect x="1002.0" y="213" width="0.2" height="15.0" fill="rgb(238,165,53)" rx="2" ry="2" />
<text  x="1005.02" y="223.5" ></text>
</g>
<g >
<title>fast_composite_scaled_nearest_sse2_8888_8888_cover_OVER (57 samples, 0.68%)</title><rect x="311.4" y="533" width="8.0" height="15.0" fill="rgb(251,221,32)" rx="2" ry="2" />
<text  x="314.38" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (2 samples, 0.02%)</title><rect x="653.4" y="309" width="0.3" height="15.0" fill="rgb(228,222,30)" rx="2" ry="2" />
<text  x="656.41" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_poll (1 samples, 0.01%)</title><rect x="1000.6" y="453" width="0.2" height="15.0" fill="rgb(239,188,34)" rx="2" ry="2" />
<text  x="1003.62" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (1 samples, 0.01%)</title><rect x="1189.6" y="789" width="0.1" height="15.0" fill="rgb(221,184,54)" rx="2" ry="2" />
<text  x="1192.58" y="799.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (3 samples, 0.04%)</title><rect x="72.1" y="773" width="0.4" height="15.0" fill="rgb(251,104,53)" rx="2" ry="2" />
<text  x="75.10" y="783.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (2 samples, 0.02%)</title><rect x="1167.3" y="389" width="0.3" height="15.0" fill="rgb(218,0,43)" rx="2" ry="2" />
<text  x="1170.29" y="399.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (10 samples, 0.12%)</title><rect x="362.4" y="549" width="1.4" height="15.0" fill="rgb(246,42,8)" rx="2" ry="2" />
<text  x="365.40" y="559.5" ></text>
</g>
<g >
<title>rcu_check_callbacks (1 samples, 0.01%)</title><rect x="384.0" y="469" width="0.1" height="15.0" fill="rgb(212,82,35)" rx="2" ry="2" />
<text  x="386.99" y="479.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;Bitmap&gt;::shared_ptr&lt;std::allocator&lt;Bitmap&gt;, int&amp;, int&amp;, bool&amp;&gt; (242 samples, 2.87%)</title><rect x="791.6" y="421" width="33.9" height="15.0" fill="rgb(220,92,47)" rx="2" ry="2" />
<text  x="794.62" y="431.5" >st..</text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="384.0" y="501" width="0.1" height="15.0" fill="rgb(216,137,44)" rx="2" ry="2" />
<text  x="386.99" y="511.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;long&gt; (2 samples, 0.02%)</title><rect x="902.1" y="533" width="0.3" height="15.0" fill="rgb(243,224,50)" rx="2" ry="2" />
<text  x="905.08" y="543.5" ></text>
</g>
<g >
<title>GetRequest (69 samples, 0.82%)</title><rect x="608.8" y="517" width="9.7" height="15.0" fill="rgb(207,30,18)" rx="2" ry="2" />
<text  x="611.83" y="527.5" ></text>
</g>
<g >
<title>_pixman_image_allocate (1 samples, 0.01%)</title><rect x="122.7" y="773" width="0.1" height="15.0" fill="rgb(228,53,38)" rx="2" ry="2" />
<text  x="125.70" y="783.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (10 samples, 0.12%)</title><rect x="341.9" y="533" width="1.4" height="15.0" fill="rgb(240,152,6)" rx="2" ry="2" />
<text  x="344.94" y="543.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="899.3" y="469" width="0.1" height="15.0" fill="rgb(225,138,10)" rx="2" ry="2" />
<text  x="902.28" y="479.5" ></text>
</g>
<g >
<title>import_iovec (1 samples, 0.01%)</title><rect x="1001.7" y="341" width="0.2" height="15.0" fill="rgb(249,134,39)" rx="2" ry="2" />
<text  x="1004.74" y="351.5" ></text>
</g>
<g >
<title>Rect::Rect (1 samples, 0.01%)</title><rect x="341.0" y="565" width="0.1" height="15.0" fill="rgb(244,99,14)" rx="2" ry="2" />
<text  x="343.96" y="575.5" ></text>
</g>
<g >
<title>handle_edge_irq (6 samples, 0.07%)</title><rect x="1166.7" y="517" width="0.9" height="15.0" fill="rgb(243,79,35)" rx="2" ry="2" />
<text  x="1169.73" y="527.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="636.6" y="325" width="0.1" height="15.0" fill="rgb(220,49,43)" rx="2" ry="2" />
<text  x="639.59" y="335.5" ></text>
</g>
<g >
<title>poll_schedule_timeout.constprop.14 (93 samples, 1.10%)</title><rect x="32.4" y="725" width="13.1" height="15.0" fill="rgb(215,211,24)" rx="2" ry="2" />
<text  x="35.43" y="735.5" ></text>
</g>
<g >
<title>_mm_mulhi_epu16 (24 samples, 0.29%)</title><rect x="241.7" y="501" width="3.4" height="15.0" fill="rgb(240,64,9)" rx="2" ry="2" />
<text  x="244.71" y="511.5" ></text>
</g>
<g >
<title>Color::Color (2 samples, 0.02%)</title><rect x="52.3" y="773" width="0.3" height="15.0" fill="rgb(241,223,28)" rx="2" ry="2" />
<text  x="55.33" y="783.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.01%)</title><rect x="120.3" y="757" width="0.2" height="15.0" fill="rgb(233,6,7)" rx="2" ry="2" />
<text  x="123.32" y="767.5" ></text>
</g>
<g >
<title>std::__tuple_compare&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool&gt;, 1ul, 3ul&gt;::__less (10 samples, 0.12%)</title><rect x="659.0" y="357" width="1.4" height="15.0" fill="rgb(224,42,26)" rx="2" ry="2" />
<text  x="662.01" y="367.5" ></text>
</g>
<g >
<title>Blend (6 samples, 0.07%)</title><rect x="886.7" y="533" width="0.8" height="15.0" fill="rgb(234,96,41)" rx="2" ry="2" />
<text  x="889.66" y="543.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustId (1 samples, 0.01%)</title><rect x="592.2" y="549" width="0.1" height="15.0" fill="rgb(227,24,41)" rx="2" ry="2" />
<text  x="595.15" y="559.5" ></text>
</g>
<g >
<title>Game_Variables_Class::Set (188 samples, 2.23%)</title><rect x="543.1" y="565" width="26.3" height="15.0" fill="rgb(214,218,10)" rx="2" ry="2" />
<text  x="546.09" y="575.5" >G..</text>
</g>
<g >
<title>__x64_sys_nanosleep (54 samples, 0.64%)</title><rect x="367.7" y="597" width="7.6" height="15.0" fill="rgb(238,114,48)" rx="2" ry="2" />
<text  x="370.73" y="607.5" ></text>
</g>
<g >
<title>Bitmap::width (2 samples, 0.02%)</title><rect x="825.7" y="453" width="0.3" height="15.0" fill="rgb(246,200,51)" rx="2" ry="2" />
<text  x="828.68" y="463.5" ></text>
</g>
<g >
<title>_mm_store_si128 (2 samples, 0.02%)</title><rect x="283.6" y="517" width="0.3" height="15.0" fill="rgb(222,109,24)" rx="2" ry="2" />
<text  x="286.62" y="527.5" ></text>
</g>
<g >
<title>pixman_image_get_height (3 samples, 0.04%)</title><rect x="853.3" y="437" width="0.4" height="15.0" fill="rgb(213,159,20)" rx="2" ry="2" />
<text  x="856.30" y="447.5" ></text>
</g>
<g >
<title>function&lt;Game_Picture::RequestPictureSprite()::&lt;lambda(FileRequestResult*)&gt; &gt; (2 samples, 0.02%)</title><rect x="879.4" y="533" width="0.3" height="15.0" fill="rgb(246,197,26)" rx="2" ry="2" />
<text  x="882.37" y="543.5" ></text>
</g>
<g >
<title>xhci_irq (1 samples, 0.01%)</title><rect x="273.1" y="341" width="0.2" height="15.0" fill="rgb(251,51,54)" rx="2" ry="2" />
<text  x="276.11" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;Bitmap, std::allocator&lt;Bitmap&gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate (6 samples, 0.07%)</title><rect x="824.7" y="341" width="0.8" height="15.0" fill="rgb(220,170,26)" rx="2" ry="2" />
<text  x="827.70" y="351.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (1 samples, 0.01%)</title><rect x="968.8" y="581" width="0.1" height="15.0" fill="rgb(212,25,44)" rx="2" ry="2" />
<text  x="971.80" y="591.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (1 samples, 0.01%)</title><rect x="1002.4" y="485" width="0.2" height="15.0" fill="rgb(206,81,23)" rx="2" ry="2" />
<text  x="1005.44" y="495.5" ></text>
</g>
<g >
<title>operator new@plt (2 samples, 0.02%)</title><rect x="906.6" y="517" width="0.2" height="15.0" fill="rgb(211,153,20)" rx="2" ry="2" />
<text  x="909.56" y="527.5" ></text>
</g>
<g >
<title>pollwake (1 samples, 0.01%)</title><rect x="374.9" y="357" width="0.1" height="15.0" fill="rgb(234,224,9)" rx="2" ry="2" />
<text  x="377.88" y="367.5" ></text>
</g>
<g >
<title>Game_Screen::GetFlashColor (16 samples, 0.19%)</title><rect x="888.1" y="533" width="2.2" height="15.0" fill="rgb(233,34,47)" rx="2" ry="2" />
<text  x="891.06" y="543.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (2 samples, 0.02%)</title><rect x="968.4" y="581" width="0.3" height="15.0" fill="rgb(223,87,32)" rx="2" ry="2" />
<text  x="971.38" y="591.5" ></text>
</g>
<g >
<title>_pixman_image_validate (1 samples, 0.01%)</title><rect x="122.8" y="773" width="0.2" height="15.0" fill="rgb(250,170,0)" rx="2" ry="2" />
<text  x="125.84" y="783.5" ></text>
</g>
<g >
<title>update_cfs_rq_h_load (1 samples, 0.01%)</title><rect x="49.7" y="597" width="0.1" height="15.0" fill="rgb(215,146,40)" rx="2" ry="2" />
<text  x="52.67" y="607.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (1 samples, 0.01%)</title><rect x="887.5" y="517" width="0.1" height="15.0" fill="rgb(234,10,53)" rx="2" ry="2" />
<text  x="890.50" y="527.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.02%)</title><rect x="1165.9" y="533" width="0.3" height="15.0" fill="rgb(253,150,54)" rx="2" ry="2" />
<text  x="1168.89" y="543.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (5 samples, 0.06%)</title><rect x="1165.9" y="565" width="0.7" height="15.0" fill="rgb(250,58,34)" rx="2" ry="2" />
<text  x="1168.89" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="995.9" y="517" width="0.1" height="15.0" fill="rgb(251,92,44)" rx="2" ry="2" />
<text  x="998.86" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (131 samples, 1.56%)</title><rect x="384.1" y="597" width="18.4" height="15.0" fill="rgb(209,37,52)" rx="2" ry="2" />
<text  x="387.13" y="607.5" ></text>
</g>
<g >
<title>__fdget (2 samples, 0.02%)</title><rect x="30.9" y="725" width="0.3" height="15.0" fill="rgb(252,161,19)" rx="2" ry="2" />
<text  x="33.89" y="735.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="820.8" y="261" width="0.3" height="15.0" fill="rgb(225,7,39)" rx="2" ry="2" />
<text  x="823.78" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.01%)</title><rect x="600.1" y="469" width="0.2" height="15.0" fill="rgb(231,192,18)" rx="2" ry="2" />
<text  x="603.14" y="479.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.01%)</title><rect x="276.2" y="453" width="0.1" height="15.0" fill="rgb(229,32,37)" rx="2" ry="2" />
<text  x="279.19" y="463.5" ></text>
</g>
<g >
<title>Window_Selectable::Update (5 samples, 0.06%)</title><rect x="993.5" y="613" width="0.7" height="15.0" fill="rgb(235,174,32)" rx="2" ry="2" />
<text  x="996.47" y="623.5" ></text>
</g>
<g >
<title>tcache_get (2 samples, 0.02%)</title><rect x="603.2" y="405" width="0.3" height="15.0" fill="rgb(216,146,49)" rx="2" ry="2" />
<text  x="606.22" y="415.5" ></text>
</g>
<g >
<title>__put_user_8 (1 samples, 0.01%)</title><rect x="46.4" y="693" width="0.2" height="15.0" fill="rgb(218,174,6)" rx="2" ry="2" />
<text  x="49.45" y="703.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="1166.0" y="501" width="0.2" height="15.0" fill="rgb(217,138,48)" rx="2" ry="2" />
<text  x="1169.03" y="511.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="232.5" y="437" width="0.1" height="15.0" fill="rgb(207,32,28)" rx="2" ry="2" />
<text  x="235.46" y="447.5" ></text>
</g>
<g >
<title>analyze_extent (78 samples, 0.93%)</title><rect x="300.4" y="533" width="11.0" height="15.0" fill="rgb(213,61,39)" rx="2" ry="2" />
<text  x="303.44" y="543.5" ></text>
</g>
<g >
<title>Game_Map::SetNeedRefresh (5 samples, 0.06%)</title><rect x="56.4" y="773" width="0.7" height="15.0" fill="rgb(243,81,53)" rx="2" ry="2" />
<text  x="59.40" y="783.5" ></text>
</g>
<g >
<title>std::move&lt;Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="363.7" y="533" width="0.1" height="15.0" fill="rgb(214,90,16)" rx="2" ry="2" />
<text  x="366.66" y="543.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="338.2" y="517" width="0.1" height="15.0" fill="rgb(249,213,19)" rx="2" ry="2" />
<text  x="341.15" y="527.5" ></text>
</g>
<g >
<title>LoadBitmap&lt;(&lt;unnamed&gt;::Material::Type)9&gt; (2 samples, 0.02%)</title><rect x="993.8" y="517" width="0.2" height="15.0" fill="rgb(241,43,19)" rx="2" ry="2" />
<text  x="996.75" y="527.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (1 samples, 0.01%)</title><rect x="903.6" y="485" width="0.2" height="15.0" fill="rgb(242,138,6)" rx="2" ry="2" />
<text  x="906.62" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.01%)</title><rect x="879.7" y="469" width="0.1" height="15.0" fill="rgb(227,135,42)" rx="2" ry="2" />
<text  x="882.65" y="479.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.01%)</title><rect x="666.4" y="293" width="0.2" height="15.0" fill="rgb(235,210,16)" rx="2" ry="2" />
<text  x="669.44" y="303.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.01%)</title><rect x="816.2" y="213" width="0.1" height="15.0" fill="rgb(221,9,7)" rx="2" ry="2" />
<text  x="819.15" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="374.7" y="453" width="0.2" height="15.0" fill="rgb(211,162,25)" rx="2" ry="2" />
<text  x="377.74" y="463.5" ></text>
</g>
<g >
<title>_pixman_image_validate (12 samples, 0.14%)</title><rect x="298.2" y="533" width="1.7" height="15.0" fill="rgb(229,152,52)" rx="2" ry="2" />
<text  x="301.20" y="543.5" ></text>
</g>
<g >
<title>native_apic_msr_eoi_write (1 samples, 0.01%)</title><rect x="50.7" y="693" width="0.1" height="15.0" fill="rgb(232,154,28)" rx="2" ry="2" />
<text  x="53.65" y="703.5" ></text>
</g>
<g >
<title>aa_file_perm (1 samples, 0.01%)</title><rect x="48.3" y="645" width="0.1" height="15.0" fill="rgb(206,176,2)" rx="2" ry="2" />
<text  x="51.27" y="655.5" ></text>
</g>
<g >
<title>_int_free (6 samples, 0.07%)</title><rect x="640.2" y="357" width="0.9" height="15.0" fill="rgb(243,128,3)" rx="2" ry="2" />
<text  x="643.23" y="367.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (2 samples, 0.02%)</title><rect x="995.2" y="581" width="0.2" height="15.0" fill="rgb(214,162,7)" rx="2" ry="2" />
<text  x="998.16" y="591.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="456.9" y="533" width="0.1" height="15.0" fill="rgb(225,190,54)" rx="2" ry="2" />
<text  x="459.88" y="543.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (23 samples, 0.27%)</title><rect x="615.1" y="421" width="3.3" height="15.0" fill="rgb(247,144,23)" rx="2" ry="2" />
<text  x="618.14" y="431.5" ></text>
</g>
<g >
<title>compute_image_info (10 samples, 0.12%)</title><rect x="683.8" y="421" width="1.4" height="15.0" fill="rgb(239,140,42)" rx="2" ry="2" />
<text  x="686.83" y="431.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (3 samples, 0.04%)</title><rect x="834.5" y="389" width="0.4" height="15.0" fill="rgb(231,124,40)" rx="2" ry="2" />
<text  x="837.51" y="399.5" ></text>
</g>
<g >
<title>Rect::GetSubRect (3 samples, 0.04%)</title><rect x="157.9" y="613" width="0.4" height="15.0" fill="rgb(231,216,1)" rx="2" ry="2" />
<text  x="160.89" y="623.5" ></text>
</g>
<g >
<title>irq_work_run_list (1 samples, 0.01%)</title><rect x="374.9" y="453" width="0.1" height="15.0" fill="rgb(213,9,31)" rx="2" ry="2" />
<text  x="377.88" y="463.5" ></text>
</g>
<g >
<title>[libnvidia-glcore.so.390.116] (13 samples, 0.15%)</title><rect x="80.5" y="677" width="1.8" height="15.0" fill="rgb(234,25,11)" rx="2" ry="2" />
<text  x="83.51" y="687.5" ></text>
</g>
<g >
<title>put_prev_task_fair (1 samples, 0.01%)</title><rect x="731.6" y="261" width="0.2" height="15.0" fill="rgb(238,127,41)" rx="2" ry="2" />
<text  x="734.63" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (9 samples, 0.11%)</title><rect x="640.1" y="437" width="1.3" height="15.0" fill="rgb(212,227,34)" rx="2" ry="2" />
<text  x="643.09" y="447.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.01%)</title><rect x="862.4" y="277" width="0.1" height="15.0" fill="rgb(207,218,9)" rx="2" ry="2" />
<text  x="865.41" y="287.5" ></text>
</g>
<g >
<title>SDL_GetTicks@plt (1 samples, 0.01%)</title><rect x="375.6" y="661" width="0.1" height="15.0" fill="rgb(215,141,31)" rx="2" ry="2" />
<text  x="378.58" y="671.5" ></text>
</g>
<g >
<title>_mm_cmpeq_epi8 (104 samples, 1.24%)</title><rect x="733.4" y="373" width="14.6" height="15.0" fill="rgb(211,159,19)" rx="2" ry="2" />
<text  x="736.45" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.01%)</title><rect x="668.1" y="437" width="0.2" height="15.0" fill="rgb(236,139,28)" rx="2" ry="2" />
<text  x="671.13" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (151 samples, 1.79%)</title><rect x="855.1" y="421" width="21.2" height="15.0" fill="rgb(243,48,32)" rx="2" ry="2" />
<text  x="858.12" y="431.5" ></text>
</g>
<g >
<title>std::find&lt;int const*, int&gt; (11 samples, 0.13%)</title><rect x="471.3" y="549" width="1.6" height="15.0" fill="rgb(242,135,42)" rx="2" ry="2" />
<text  x="474.32" y="559.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.07%)</title><rect x="626.8" y="357" width="0.8" height="15.0" fill="rgb(228,26,50)" rx="2" ry="2" />
<text  x="629.77" y="367.5" ></text>
</g>
<g >
<title>tcache_get (2 samples, 0.02%)</title><rect x="666.2" y="277" width="0.2" height="15.0" fill="rgb(241,73,20)" rx="2" ry="2" />
<text  x="669.16" y="287.5" ></text>
</g>
<g >
<title>sse2_composite_src_x888_8888 (3 samples, 0.04%)</title><rect x="789.4" y="437" width="0.4" height="15.0" fill="rgb(220,20,20)" rx="2" ry="2" />
<text  x="792.38" y="447.5" ></text>
</g>
<g >
<title>ReaderUtil::GetElement&lt;RPG::SavePicture&gt; (1 samples, 0.01%)</title><rect x="583.0" y="517" width="0.2" height="15.0" fill="rgb(238,35,5)" rx="2" ry="2" />
<text  x="586.04" y="527.5" ></text>
</g>
<g >
<title>usb_hcd_submit_urb (1 samples, 0.01%)</title><rect x="244.9" y="213" width="0.2" height="15.0" fill="rgb(246,224,52)" rx="2" ry="2" />
<text  x="247.93" y="223.5" ></text>
</g>
<g >
<title>XFree (1 samples, 0.01%)</title><rect x="995.6" y="549" width="0.1" height="15.0" fill="rgb(231,160,9)" rx="2" ry="2" />
<text  x="998.58" y="559.5" ></text>
</g>
<g >
<title>_pixman_implementation_lookup_composite (2 samples, 0.02%)</title><rect x="123.0" y="773" width="0.3" height="15.0" fill="rgb(223,145,17)" rx="2" ry="2" />
<text  x="125.98" y="783.5" ></text>
</g>
<g >
<title>_mm_unpacklo_epi8 (19 samples, 0.23%)</title><rect x="257.8" y="517" width="2.7" height="15.0" fill="rgb(216,173,9)" rx="2" ry="2" />
<text  x="260.83" y="527.5" ></text>
</g>
<g >
<title>psi_task_change (2 samples, 0.02%)</title><rect x="49.4" y="565" width="0.3" height="15.0" fill="rgb(253,18,35)" rx="2" ry="2" />
<text  x="52.39" y="575.5" ></text>
</g>
<g >
<title>_mm_shufflehi_epi16 (1 samples, 0.01%)</title><rect x="317.7" y="469" width="0.1" height="15.0" fill="rgb(243,218,53)" rx="2" ry="2" />
<text  x="320.69" y="479.5" ></text>
</g>
<g >
<title>update_rq_clock (1 samples, 0.01%)</title><rect x="1166.0" y="437" width="0.2" height="15.0" fill="rgb(230,59,45)" rx="2" ry="2" />
<text  x="1169.03" y="447.5" ></text>
</g>
<g >
<title>x86_pmu_enable (45 samples, 0.53%)</title><rect x="368.4" y="469" width="6.3" height="15.0" fill="rgb(234,12,48)" rx="2" ry="2" />
<text  x="371.43" y="479.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandElseBranch (1 samples, 0.01%)</title><rect x="918.1" y="565" width="0.1" height="15.0" fill="rgb(242,62,8)" rx="2" ry="2" />
<text  x="921.06" y="575.5" ></text>
</g>
<g >
<title>skb_release_head_state (1 samples, 0.01%)</title><rect x="1002.0" y="277" width="0.2" height="15.0" fill="rgb(229,85,48)" rx="2" ry="2" />
<text  x="1005.02" y="287.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.01%)</title><rect x="667.7" y="293" width="0.1" height="15.0" fill="rgb(229,194,2)" rx="2" ry="2" />
<text  x="670.70" y="303.5" ></text>
</g>
<g >
<title>Color::Color (1 samples, 0.01%)</title><rect x="890.2" y="501" width="0.1" height="15.0" fill="rgb(250,158,44)" rx="2" ry="2" />
<text  x="893.16" y="511.5" ></text>
</g>
<g >
<title>memcmp@plt (1 samples, 0.01%)</title><rect x="660.3" y="293" width="0.1" height="15.0" fill="rgb(253,16,16)" rx="2" ry="2" />
<text  x="663.28" y="303.5" ></text>
</g>
<g >
<title>[[heap]] (83 samples, 0.99%)</title><rect x="51.8" y="789" width="11.6" height="15.0" fill="rgb(251,83,50)" rx="2" ry="2" />
<text  x="54.77" y="799.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="374.7" y="405" width="0.2" height="15.0" fill="rgb(250,35,19)" rx="2" ry="2" />
<text  x="377.74" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (8 samples, 0.10%)</title><rect x="668.3" y="421" width="1.1" height="15.0" fill="rgb(235,199,18)" rx="2" ry="2" />
<text  x="671.27" y="431.5" ></text>
</g>
<g >
<title>X11_Pending (8 samples, 0.10%)</title><rect x="1001.5" y="581" width="1.1" height="15.0" fill="rgb(250,158,47)" rx="2" ry="2" />
<text  x="1004.46" y="591.5" ></text>
</g>
<g >
<title>pixman_region32_fini (1 samples, 0.01%)</title><rect x="75.2" y="773" width="0.1" height="15.0" fill="rgb(238,144,26)" rx="2" ry="2" />
<text  x="78.18" y="783.5" ></text>
</g>
<g >
<title>over_1x128 (1 samples, 0.01%)</title><rect x="224.9" y="517" width="0.1" height="15.0" fill="rgb(220,208,20)" rx="2" ry="2" />
<text  x="227.89" y="527.5" ></text>
</g>
<g >
<title>scaled_nearest_scanline_sse2_8888_8888_OVER (55 samples, 0.65%)</title><rect x="311.7" y="501" width="7.7" height="15.0" fill="rgb(209,205,10)" rx="2" ry="2" />
<text  x="314.66" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="377.1" y="613" width="0.2" height="15.0" fill="rgb(236,181,47)" rx="2" ry="2" />
<text  x="380.12" y="623.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="747.7" y="261" width="0.2" height="15.0" fill="rgb(217,11,27)" rx="2" ry="2" />
<text  x="750.75" y="271.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (3 samples, 0.04%)</title><rect x="878.9" y="533" width="0.5" height="15.0" fill="rgb(228,133,11)" rx="2" ry="2" />
<text  x="881.95" y="543.5" ></text>
</g>
<g >
<title>ReplaceName (12 samples, 0.14%)</title><rect x="902.5" y="565" width="1.7" height="15.0" fill="rgb(205,150,42)" rx="2" ry="2" />
<text  x="905.50" y="575.5" ></text>
</g>
<g >
<title>sock_poll (1 samples, 0.01%)</title><rect x="994.9" y="437" width="0.1" height="15.0" fill="rgb(225,186,18)" rx="2" ry="2" />
<text  x="997.88" y="447.5" ></text>
</g>
<g >
<title>__atomic_add_dispatch (11 samples, 0.13%)</title><rect x="661.7" y="373" width="1.5" height="15.0" fill="rgb(220,154,42)" rx="2" ry="2" />
<text  x="664.68" y="383.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;Bitmap, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr (24 samples, 0.29%)</title><rect x="895.8" y="533" width="3.3" height="15.0" fill="rgb(247,153,41)" rx="2" ry="2" />
<text  x="898.77" y="543.5" ></text>
</g>
<g >
<title>Spriteset_Map::Update (2 samples, 0.02%)</title><rect x="994.2" y="645" width="0.3" height="15.0" fill="rgb(237,116,27)" rx="2" ry="2" />
<text  x="997.17" y="655.5" ></text>
</g>
<g >
<title>_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="789.5" y="405" width="0.3" height="15.0" fill="rgb(243,53,31)" rx="2" ry="2" />
<text  x="792.52" y="415.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (4 samples, 0.05%)</title><rect x="350.2" y="549" width="0.6" height="15.0" fill="rgb(254,26,48)" rx="2" ry="2" />
<text  x="353.21" y="559.5" ></text>
</g>
<g >
<title>over_2x128 (2 samples, 0.02%)</title><rect x="318.8" y="485" width="0.3" height="15.0" fill="rgb(222,72,41)" rx="2" ry="2" />
<text  x="321.81" y="495.5" ></text>
</g>
<g >
<title>xhci_irq (5 samples, 0.06%)</title><rect x="1166.9" y="437" width="0.7" height="15.0" fill="rgb(217,200,9)" rx="2" ry="2" />
<text  x="1169.87" y="447.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.01%)</title><rect x="300.3" y="517" width="0.1" height="15.0" fill="rgb(226,3,40)" rx="2" ry="2" />
<text  x="303.30" y="527.5" ></text>
</g>
<g >
<title>setup_accessors (2 samples, 0.02%)</title><rect x="161.8" y="517" width="0.3" height="15.0" fill="rgb(235,198,53)" rx="2" ry="2" />
<text  x="164.81" y="527.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="722.9" y="277" width="0.2" height="15.0" fill="rgb(239,29,47)" rx="2" ry="2" />
<text  x="725.93" y="287.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="244.9" y="421" width="0.2" height="15.0" fill="rgb(222,93,32)" rx="2" ry="2" />
<text  x="247.93" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, unsigned long, true&gt;::_S_equals (22 samples, 0.26%)</title><rect x="612.1" y="421" width="3.0" height="15.0" fill="rgb(224,189,6)" rx="2" ry="2" />
<text  x="615.06" y="431.5" ></text>
</g>
<g >
<title>finish_td (1 samples, 0.01%)</title><rect x="273.1" y="309" width="0.2" height="15.0" fill="rgb(230,115,11)" rx="2" ry="2" />
<text  x="276.11" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.01%)</title><rect x="341.5" y="533" width="0.2" height="15.0" fill="rgb(229,222,31)" rx="2" ry="2" />
<text  x="344.52" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;RPG::SaveEventExecFrame, std::allocator&lt;RPG::SaveEventExecFrame&gt; &gt;::empty (8 samples, 0.10%)</title><rect x="921.7" y="565" width="1.1" height="15.0" fill="rgb(220,224,46)" rx="2" ry="2" />
<text  x="924.70" y="575.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (5 samples, 0.06%)</title><rect x="1165.9" y="549" width="0.7" height="15.0" fill="rgb(234,48,27)" rx="2" ry="2" />
<text  x="1168.89" y="559.5" ></text>
</g>
<g >
<title>__fget (2 samples, 0.02%)</title><rect x="996.7" y="341" width="0.3" height="15.0" fill="rgb(208,92,44)" rx="2" ry="2" />
<text  x="999.70" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.01%)</title><rect x="995.3" y="533" width="0.1" height="15.0" fill="rgb(234,163,27)" rx="2" ry="2" />
<text  x="998.30" y="543.5" ></text>
</g>
<g >
<title>Game_Picture::GetData (1 samples, 0.01%)</title><rect x="571.4" y="549" width="0.1" height="15.0" fill="rgb(221,155,19)" rx="2" ry="2" />
<text  x="574.40" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (7 samples, 0.08%)</title><rect x="663.4" y="373" width="0.9" height="15.0" fill="rgb(235,164,21)" rx="2" ry="2" />
<text  x="666.36" y="383.5" ></text>
</g>
<g >
<title>unpack_128_2x128 (41 samples, 0.49%)</title><rect x="254.7" y="533" width="5.8" height="15.0" fill="rgb(242,65,17)" rx="2" ry="2" />
<text  x="257.75" y="543.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.01%)</title><rect x="903.3" y="453" width="0.2" height="15.0" fill="rgb(231,133,20)" rx="2" ry="2" />
<text  x="906.34" y="463.5" ></text>
</g>
<g >
<title>__libc_recvmsg (1 samples, 0.01%)</title><rect x="58.8" y="757" width="0.1" height="15.0" fill="rgb(238,6,30)" rx="2" ry="2" />
<text  x="61.78" y="767.5" ></text>
</g>
<g >
<title>__GI___poll (2 samples, 0.02%)</title><rect x="1001.5" y="533" width="0.2" height="15.0" fill="rgb(246,20,10)" rx="2" ry="2" />
<text  x="1004.46" y="543.5" ></text>
</g>
<g >
<title>_mm_movemask_epi8 (24 samples, 0.29%)</title><rect x="194.1" y="485" width="3.3" height="15.0" fill="rgb(225,35,35)" rx="2" ry="2" />
<text  x="197.05" y="495.5" ></text>
</g>
<g >
<title>sse2_composite_over_8888_n_8888 (1 samples, 0.01%)</title><rect x="125.8" y="773" width="0.1" height="15.0" fill="rgb(221,106,21)" rx="2" ry="2" />
<text  x="128.79" y="783.5" ></text>
</g>
<g >
<title>__x64_sys_poll (1 samples, 0.01%)</title><rect x="995.4" y="421" width="0.2" height="15.0" fill="rgb(242,113,48)" rx="2" ry="2" />
<text  x="998.44" y="431.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.01%)</title><rect x="918.2" y="501" width="0.1" height="15.0" fill="rgb(211,162,44)" rx="2" ry="2" />
<text  x="921.20" y="511.5" ></text>
</g>
<g >
<title>PicPointerPatch::AdjustId (1 samples, 0.01%)</title><rect x="581.5" y="549" width="0.1" height="15.0" fill="rgb(241,216,34)" rx="2" ry="2" />
<text  x="584.50" y="559.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="1184.3" y="581" width="0.1" height="15.0" fill="rgb(243,140,43)" rx="2" ry="2" />
<text  x="1187.25" y="591.5" ></text>
</g>
<g >
<title>Sprite::Draw (4 samples, 0.05%)</title><rect x="351.0" y="613" width="0.6" height="15.0" fill="rgb(230,72,47)" rx="2" ry="2" />
<text  x="354.05" y="623.5" ></text>
</g>
<g >
<title>do_sched_yield (3 samples, 0.04%)</title><rect x="82.9" y="709" width="0.4" height="15.0" fill="rgb(236,202,4)" rx="2" ry="2" />
<text  x="85.89" y="719.5" ></text>
</g>
<g >
<title>Spriteset_Map::RequireBackground (1 samples, 0.01%)</title><rect x="157.0" y="613" width="0.2" height="15.0" fill="rgb(243,39,4)" rx="2" ry="2" />
<text  x="160.04" y="623.5" ></text>
</g>
<g >
<title>pick_next_task_rt (1 samples, 0.01%)</title><rect x="627.3" y="245" width="0.2" height="15.0" fill="rgb(250,38,15)" rx="2" ry="2" />
<text  x="630.33" y="255.5" ></text>
</g>
<g >
<title>X11_GL_SwapWindow (1 samples, 0.01%)</title><rect x="51.6" y="789" width="0.2" height="15.0" fill="rgb(225,173,32)" rx="2" ry="2" />
<text  x="54.63" y="799.5" ></text>
</g>
<g >
<title>_mm_mulhi_epu16 (1 samples, 0.01%)</title><rect x="214.7" y="469" width="0.1" height="15.0" fill="rgb(216,35,26)" rx="2" ry="2" />
<text  x="217.66" y="479.5" ></text>
</g>
<g >
<title>__fget (2 samples, 0.02%)</title><rect x="30.9" y="693" width="0.3" height="15.0" fill="rgb(254,125,9)" rx="2" ry="2" />
<text  x="33.89" y="703.5" ></text>
</g>
<g >
<title>std::__merge_sort_loop&lt;Drawable**, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt; &gt; (10 samples, 0.12%)</title><rect x="362.4" y="565" width="1.4" height="15.0" fill="rgb(253,154,32)" rx="2" ry="2" />
<text  x="365.40" y="575.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="722.9" y="309" width="0.2" height="15.0" fill="rgb(212,45,18)" rx="2" ry="2" />
<text  x="725.93" y="319.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="50.5" y="725" width="0.2" height="15.0" fill="rgb(225,158,36)" rx="2" ry="2" />
<text  x="53.51" y="735.5" ></text>
</g>
<g >
<title>_mm_unpackhi_epi8 (22 samples, 0.26%)</title><rect x="254.7" y="517" width="3.1" height="15.0" fill="rgb(235,57,47)" rx="2" ry="2" />
<text  x="257.75" y="527.5" ></text>
</g>
<g >
<title>__exchange_and_add (24 samples, 0.29%)</title><rect x="895.8" y="453" width="3.3" height="15.0" fill="rgb(246,64,9)" rx="2" ry="2" />
<text  x="898.77" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.01%)</title><rect x="1001.9" y="309" width="0.1" height="15.0" fill="rgb(244,56,12)" rx="2" ry="2" />
<text  x="1004.88" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (25 samples, 0.30%)</title><rect x="600.3" y="485" width="3.5" height="15.0" fill="rgb(219,154,45)" rx="2" ry="2" />
<text  x="603.28" y="495.5" ></text>
</g>
<g >
<title>place_entity (1 samples, 0.01%)</title><rect x="49.1" y="533" width="0.1" height="15.0" fill="rgb(248,63,3)" rx="2" ry="2" />
<text  x="52.11" y="543.5" ></text>
</g>
<g >
<title>_mm_shufflelo_epi16 (1 samples, 0.01%)</title><rect x="184.8" y="485" width="0.1" height="15.0" fill="rgb(215,80,35)" rx="2" ry="2" />
<text  x="187.80" y="495.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::operator= (10 samples, 0.12%)</title><rect x="833.5" y="421" width="1.4" height="15.0" fill="rgb(243,10,28)" rx="2" ry="2" />
<text  x="836.53" y="431.5" ></text>
</g>
<g >
<title>Sprite::SetWaverDepth (1 samples, 0.01%)</title><rect x="893.4" y="533" width="0.1" height="15.0" fill="rgb(206,198,22)" rx="2" ry="2" />
<text  x="896.39" y="543.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.01%)</title><rect x="627.3" y="277" width="0.2" height="15.0" fill="rgb(240,221,5)" rx="2" ry="2" />
<text  x="630.33" y="287.5" ></text>
</g>
<g >
<title>color_to_float (3 samples, 0.04%)</title><rect x="338.6" y="533" width="0.4" height="15.0" fill="rgb(227,105,30)" rx="2" ry="2" />
<text  x="341.57" y="543.5" ></text>
</g>
<g >
<title>Utils::GetRandomNumber (1 samples, 0.01%)</title><rect x="569.4" y="565" width="0.2" height="15.0" fill="rgb(227,213,11)" rx="2" ry="2" />
<text  x="572.44" y="575.5" ></text>
</g>
<g >
<title>pixman_image_unref (5 samples, 0.06%)</title><rect x="340.3" y="549" width="0.7" height="15.0" fill="rgb(251,229,7)" rx="2" ry="2" />
<text  x="343.25" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Game_Player, std::default_delete&lt;Game_Player&gt; &gt;::get (1 samples, 0.01%)</title><rect x="993.2" y="565" width="0.1" height="15.0" fill="rgb(219,27,48)" rx="2" ry="2" />
<text  x="996.19" y="575.5" ></text>
</g>
<g >
<title>Sprite::SetAngle (1 samples, 0.01%)</title><rect x="893.1" y="533" width="0.1" height="15.0" fill="rgb(224,16,18)" rx="2" ry="2" />
<text  x="896.11" y="543.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.01%)</title><rect x="73.2" y="773" width="0.2" height="15.0" fill="rgb(254,185,50)" rx="2" ry="2" />
<text  x="76.22" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;::operator+ (1 samples, 0.01%)</title><rect x="364.1" y="549" width="0.1" height="15.0" fill="rgb(217,78,16)" rx="2" ry="2" />
<text  x="367.08" y="559.5" ></text>
</g>
<g >
<title>Sdl2Ui::ProcessActiveEvent (36 samples, 0.43%)</title><rect x="997.5" y="645" width="5.1" height="15.0" fill="rgb(226,145,46)" rx="2" ry="2" />
<text  x="1000.54" y="655.5" ></text>
</g>
<g >
<title>Sprite::SetZ (1 samples, 0.01%)</title><rect x="893.5" y="533" width="0.2" height="15.0" fill="rgb(208,126,48)" rx="2" ry="2" />
<text  x="896.53" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, FileRequestAsync&gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (6 samples, 0.07%)</title><rect x="609.5" y="453" width="0.9" height="15.0" fill="rgb(251,20,14)" rx="2" ry="2" />
<text  x="612.53" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;Transition, std::default_delete&lt;Transition&gt; &gt;::get (2 samples, 0.02%)</title><rect x="126.6" y="677" width="0.3" height="15.0" fill="rgb(213,48,37)" rx="2" ry="2" />
<text  x="129.63" y="687.5" ></text>
</g>
<g >
<title>negate_2x128 (1 samples, 0.01%)</title><rect x="214.0" y="485" width="0.1" height="15.0" fill="rgb(216,10,29)" rx="2" ry="2" />
<text  x="216.96" y="495.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.01%)</title><rect x="604.2" y="357" width="0.1" height="15.0" fill="rgb(221,191,32)" rx="2" ry="2" />
<text  x="607.21" y="367.5" ></text>
</g>
<g >
<title>eventfd_write (9 samples, 0.11%)</title><rect x="48.8" y="693" width="1.3" height="15.0" fill="rgb(237,33,24)" rx="2" ry="2" />
<text  x="51.83" y="703.5" ></text>
</g>
<g >
<title>__fget_light (3 samples, 0.04%)</title><rect x="996.6" y="357" width="0.4" height="15.0" fill="rgb(241,170,29)" rx="2" ry="2" />
<text  x="999.56" y="367.5" ></text>
</g>
<g >
<title>Game_Map::UpdateProcessedFlags (2 samples, 0.02%)</title><rect x="964.3" y="629" width="0.3" height="15.0" fill="rgb(225,9,51)" rx="2" ry="2" />
<text  x="967.32" y="639.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char32_t&gt;::assign (1 samples, 0.01%)</title><rect x="901.8" y="517" width="0.1" height="15.0" fill="rgb(251,92,45)" rx="2" ry="2" />
<text  x="904.80" y="527.5" ></text>
</g>
<g >
<title>SDL_GetVideoDevice (1 samples, 0.01%)</title><rect x="994.6" y="613" width="0.1" height="15.0" fill="rgb(240,178,9)" rx="2" ry="2" />
<text  x="997.59" y="623.5" ></text>
</g>
<g >
<title>do_sys_poll (1 samples, 0.01%)</title><rect x="995.4" y="405" width="0.2" height="15.0" fill="rgb(233,75,2)" rx="2" ry="2" />
<text  x="998.44" y="415.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (8 samples, 0.10%)</title><rect x="855.1" y="405" width="1.1" height="15.0" fill="rgb(216,171,32)" rx="2" ry="2" />
<text  x="858.12" y="415.5" ></text>
</g>
<g >
<title>usb_get_current_frame_number (1 samples, 0.01%)</title><rect x="273.1" y="181" width="0.2" height="15.0" fill="rgb(212,66,2)" rx="2" ry="2" />
<text  x="276.11" y="191.5" ></text>
</g>
<g >
<title>negate_2x128 (15 samples, 0.18%)</title><rect x="776.2" y="373" width="2.1" height="15.0" fill="rgb(248,131,44)" rx="2" ry="2" />
<text  x="779.20" y="383.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.01%)</title><rect x="667.8" y="293" width="0.2" height="15.0" fill="rgb(227,212,53)" rx="2" ry="2" />
<text  x="670.85" y="303.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandControlVariables (1 samples, 0.01%)</title><rect x="52.6" y="773" width="0.2" height="15.0" fill="rgb(247,201,50)" rx="2" ry="2" />
<text  x="55.61" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (3 samples, 0.04%)</title><rect x="629.4" y="325" width="0.5" height="15.0" fill="rgb(246,27,1)" rx="2" ry="2" />
<text  x="632.44" y="335.5" ></text>
</g>
<g >
<title>handle_edge_irq (1 samples, 0.01%)</title><rect x="747.7" y="309" width="0.2" height="15.0" fill="rgb(226,107,28)" rx="2" ry="2" />
<text  x="750.75" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (3 samples, 0.04%)</title><rect x="667.6" y="325" width="0.4" height="15.0" fill="rgb(249,195,52)" rx="2" ry="2" />
<text  x="670.56" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (9 samples, 0.11%)</title><rect x="905.2" y="501" width="1.2" height="15.0" fill="rgb(247,135,49)" rx="2" ry="2" />
<text  x="908.16" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (9 samples, 0.11%)</title><rect x="659.2" y="325" width="1.2" height="15.0" fill="rgb(245,75,6)" rx="2" ry="2" />
<text  x="662.15" y="335.5" ></text>
</g>
<g >
<title>Game_Interpreter::CommandJumpToLabel (67 samples, 0.80%)</title><rect x="571.7" y="581" width="9.4" height="15.0" fill="rgb(230,199,36)" rx="2" ry="2" />
<text  x="574.68" y="591.5" ></text>
</g>
<g >
<title>Player::IsRPG2k (1 samples, 0.01%)</title><rect x="902.4" y="565" width="0.1" height="15.0" fill="rgb(231,2,48)" rx="2" ry="2" />
<text  x="905.36" y="575.5" ></text>
</g>
<g >
<title>unpack_32_1x128 (3 samples, 0.04%)</title><rect x="336.9" y="501" width="0.4" height="15.0" fill="rgb(213,89,25)" rx="2" ry="2" />
<text  x="339.89" y="511.5" ></text>
</g>
<g >
<title>[libxcb.so.1.1.0] (6 samples, 0.07%)</title><rect x="1001.7" y="501" width="0.9" height="15.0" fill="rgb(225,181,31)" rx="2" ry="2" />
<text  x="1004.74" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.04%)</title><rect x="82.9" y="757" width="0.4" height="15.0" fill="rgb(240,131,20)" rx="2" ry="2" />
<text  x="85.89" y="767.5" ></text>
</g>
<g >
<title>tick_sched_handle (1 samples, 0.01%)</title><rect x="538.0" y="469" width="0.2" height="15.0" fill="rgb(207,197,5)" rx="2" ry="2" />
<text  x="541.04" y="479.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.01%)</title><rect x="816.2" y="133" width="0.1" height="15.0" fill="rgb(205,91,44)" rx="2" ry="2" />
<text  x="819.15" y="143.5" ></text>
</g>
<g >
<title>native_write_msr (45 samples, 0.53%)</title><rect x="368.4" y="421" width="6.3" height="15.0" fill="rgb(237,10,12)" rx="2" ry="2" />
<text  x="371.43" y="431.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (1 samples, 0.01%)</title><rect x="366.5" y="629" width="0.1" height="15.0" fill="rgb(215,101,14)" rx="2" ry="2" />
<text  x="369.47" y="639.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (9 samples, 0.11%)</title><rect x="876.7" y="421" width="1.3" height="15.0" fill="rgb(208,31,1)" rx="2" ry="2" />
<text  x="879.71" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (9 samples, 0.11%)</title><rect x="640.1" y="389" width="1.3" height="15.0" fill="rgb(229,29,28)" rx="2" ry="2" />
<text  x="643.09" y="399.5" ></text>
</g>
<g >
<title>find (144 samples, 1.71%)</title><rect x="641.5" y="421" width="20.2" height="15.0" fill="rgb(232,173,4)" rx="2" ry="2" />
<text  x="644.49" y="431.5" ></text>
</g>
<g >
<title>pixman_image_unref (3 samples, 0.04%)</title><rect x="61.7" y="773" width="0.4" height="15.0" fill="rgb(228,103,40)" rx="2" ry="2" />
<text  x="64.72" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;bool (*)(Drawable const*, Drawable const*)&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;Drawable**, std::vector&lt;Drawable*, std::allocator&lt;Drawable*&gt; &gt; &gt; &gt; (1 samples, 0.01%)</title><rect x="154.7" y="565" width="0.1" height="15.0" fill="rgb(237,81,19)" rx="2" ry="2" />
<text  x="157.66" y="575.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.05%)</title><rect x="602.9" y="437" width="0.6" height="15.0" fill="rgb(235,111,30)" rx="2" ry="2" />
<text  x="605.94" y="447.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="82.6" y="757" width="0.2" height="15.0" fill="rgb(209,108,50)" rx="2" ry="2" />
<text  x="85.61" y="767.5" ></text>
</g>
<g >
<title>Graphics::IsTransitionErased (2 samples, 0.02%)</title><rect x="878.4" y="517" width="0.3" height="15.0" fill="rgb(254,175,27)" rx="2" ry="2" />
<text  x="881.39" y="527.5" ></text>
</g>
<g >
<title>_int_free (79 samples, 0.94%)</title><rect x="862.5" y="325" width="11.1" height="15.0" fill="rgb(246,20,18)" rx="2" ry="2" />
<text  x="865.55" y="335.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="569.7" y="501" width="0.2" height="15.0" fill="rgb(214,90,28)" rx="2" ry="2" />
<text  x="572.72" y="511.5" ></text>
</g>
<g >
<title>SDL_JoystickUpdate_REAL (2 samples, 0.02%)</title><rect x="994.7" y="613" width="0.3" height="15.0" fill="rgb(254,2,53)" rx="2" ry="2" />
<text  x="997.74" y="623.5" ></text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.01%)</title><rect x="904.0" y="549" width="0.2" height="15.0" fill="rgb(224,209,27)" rx="2" ry="2" />
<text  x="907.04" y="559.5" ></text>
</g>
<g >
<title>_mm_packus_epi16 (1 samples, 0.01%)</title><rect x="782.1" y="373" width="0.1" height="15.0" fill="rgb(206,228,2)" rx="2" ry="2" />
<text  x="785.09" y="383.5" ></text>
</g>
<g >
<title>__accumulate_pelt_segments (1 samples, 0.01%)</title><rect x="722.9" y="197" width="0.2" height="15.0" fill="rgb(212,100,5)" rx="2" ry="2" />
<text  x="725.93" y="207.5" ></text>
</g>
<g >
<title>__sys_recvmsg (1 samples, 0.01%)</title><rect x="997.4" y="421" width="0.1" height="15.0" fill="rgb(236,47,25)" rx="2" ry="2" />
<text  x="1000.40" y="431.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (1 samples, 0.01%)</title><rect x="163.9" y="533" width="0.2" height="15.0" fill="rgb(207,11,19)" rx="2" ry="2" />
<text  x="166.91" y="543.5" ></text>
</g>
</g>
</svg>
